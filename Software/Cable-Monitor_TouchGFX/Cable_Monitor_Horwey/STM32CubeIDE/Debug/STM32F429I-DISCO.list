
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002c158  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000171a4  0802c308  0802c308  0003c308  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  080434ac  080434ac  000534ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  080471a4  080471a4  000571a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 000006b4  080473f0  080473f0  000573f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000850f0  08047aa4  08047aa4  00057aa4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080ccb94  080ccb94  000e0168  2**0
                  CONTENTS
  8 .ARM          00000008  080ccb94  080ccb94  000dcb94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080ccb9c  080ccb9c  000e0168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080ccb9c  080ccb9c  000dcb9c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  080ccbb0  080ccbb0  000dcbb0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  080ccbb4  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          000142ec  20000168  080ccd1c  000e0168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  20014454  080ccd1c  000e4454  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e0168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  000e0198  2**0
                  CONTENTS, READONLY
 18 .debug_line   00091531  00000000  00000000  000e02ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  001717fb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   00224c81  00000000  00000000  0017188e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0002c3a1  00000000  00000000  0039650f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004320  00000000  00000000  003c28b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0011f4f7  00000000  00000000  003c6bd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00007d06  00000000  00000000  004e60c7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 00030fca  00000000  00000000  004eddcd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003a80c  00000000  00000000  0051ed97  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000c748  00000000  00000000  005595a4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  00565cec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  00569064  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802c2f0 	.word	0x0802c2f0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	0802c2f0 	.word	0x0802c2f0

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_uldivmod>:
 8000350:	b953      	cbnz	r3, 8000368 <__aeabi_uldivmod+0x18>
 8000352:	b94a      	cbnz	r2, 8000368 <__aeabi_uldivmod+0x18>
 8000354:	2900      	cmp	r1, #0
 8000356:	bf08      	it	eq
 8000358:	2800      	cmpeq	r0, #0
 800035a:	bf1c      	itt	ne
 800035c:	f04f 31ff 	movne.w	r1, #4294967295
 8000360:	f04f 30ff 	movne.w	r0, #4294967295
 8000364:	f000 b970 	b.w	8000648 <__aeabi_idiv0>
 8000368:	f1ad 0c08 	sub.w	ip, sp, #8
 800036c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000370:	f000 f806 	bl	8000380 <__udivmoddi4>
 8000374:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000378:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800037c:	b004      	add	sp, #16
 800037e:	4770      	bx	lr

08000380 <__udivmoddi4>:
 8000380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000384:	9e08      	ldr	r6, [sp, #32]
 8000386:	460d      	mov	r5, r1
 8000388:	4604      	mov	r4, r0
 800038a:	460f      	mov	r7, r1
 800038c:	2b00      	cmp	r3, #0
 800038e:	d14a      	bne.n	8000426 <__udivmoddi4+0xa6>
 8000390:	428a      	cmp	r2, r1
 8000392:	4694      	mov	ip, r2
 8000394:	d965      	bls.n	8000462 <__udivmoddi4+0xe2>
 8000396:	fab2 f382 	clz	r3, r2
 800039a:	b143      	cbz	r3, 80003ae <__udivmoddi4+0x2e>
 800039c:	fa02 fc03 	lsl.w	ip, r2, r3
 80003a0:	f1c3 0220 	rsb	r2, r3, #32
 80003a4:	409f      	lsls	r7, r3
 80003a6:	fa20 f202 	lsr.w	r2, r0, r2
 80003aa:	4317      	orrs	r7, r2
 80003ac:	409c      	lsls	r4, r3
 80003ae:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80003b2:	fa1f f58c 	uxth.w	r5, ip
 80003b6:	fbb7 f1fe 	udiv	r1, r7, lr
 80003ba:	0c22      	lsrs	r2, r4, #16
 80003bc:	fb0e 7711 	mls	r7, lr, r1, r7
 80003c0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80003c4:	fb01 f005 	mul.w	r0, r1, r5
 80003c8:	4290      	cmp	r0, r2
 80003ca:	d90a      	bls.n	80003e2 <__udivmoddi4+0x62>
 80003cc:	eb1c 0202 	adds.w	r2, ip, r2
 80003d0:	f101 37ff 	add.w	r7, r1, #4294967295
 80003d4:	f080 811c 	bcs.w	8000610 <__udivmoddi4+0x290>
 80003d8:	4290      	cmp	r0, r2
 80003da:	f240 8119 	bls.w	8000610 <__udivmoddi4+0x290>
 80003de:	3902      	subs	r1, #2
 80003e0:	4462      	add	r2, ip
 80003e2:	1a12      	subs	r2, r2, r0
 80003e4:	b2a4      	uxth	r4, r4
 80003e6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ea:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ee:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f2:	fb00 f505 	mul.w	r5, r0, r5
 80003f6:	42a5      	cmp	r5, r4
 80003f8:	d90a      	bls.n	8000410 <__udivmoddi4+0x90>
 80003fa:	eb1c 0404 	adds.w	r4, ip, r4
 80003fe:	f100 32ff 	add.w	r2, r0, #4294967295
 8000402:	f080 8107 	bcs.w	8000614 <__udivmoddi4+0x294>
 8000406:	42a5      	cmp	r5, r4
 8000408:	f240 8104 	bls.w	8000614 <__udivmoddi4+0x294>
 800040c:	4464      	add	r4, ip
 800040e:	3802      	subs	r0, #2
 8000410:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000414:	1b64      	subs	r4, r4, r5
 8000416:	2100      	movs	r1, #0
 8000418:	b11e      	cbz	r6, 8000422 <__udivmoddi4+0xa2>
 800041a:	40dc      	lsrs	r4, r3
 800041c:	2300      	movs	r3, #0
 800041e:	e9c6 4300 	strd	r4, r3, [r6]
 8000422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000426:	428b      	cmp	r3, r1
 8000428:	d908      	bls.n	800043c <__udivmoddi4+0xbc>
 800042a:	2e00      	cmp	r6, #0
 800042c:	f000 80ed 	beq.w	800060a <__udivmoddi4+0x28a>
 8000430:	2100      	movs	r1, #0
 8000432:	e9c6 0500 	strd	r0, r5, [r6]
 8000436:	4608      	mov	r0, r1
 8000438:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800043c:	fab3 f183 	clz	r1, r3
 8000440:	2900      	cmp	r1, #0
 8000442:	d149      	bne.n	80004d8 <__udivmoddi4+0x158>
 8000444:	42ab      	cmp	r3, r5
 8000446:	d302      	bcc.n	800044e <__udivmoddi4+0xce>
 8000448:	4282      	cmp	r2, r0
 800044a:	f200 80f8 	bhi.w	800063e <__udivmoddi4+0x2be>
 800044e:	1a84      	subs	r4, r0, r2
 8000450:	eb65 0203 	sbc.w	r2, r5, r3
 8000454:	2001      	movs	r0, #1
 8000456:	4617      	mov	r7, r2
 8000458:	2e00      	cmp	r6, #0
 800045a:	d0e2      	beq.n	8000422 <__udivmoddi4+0xa2>
 800045c:	e9c6 4700 	strd	r4, r7, [r6]
 8000460:	e7df      	b.n	8000422 <__udivmoddi4+0xa2>
 8000462:	b902      	cbnz	r2, 8000466 <__udivmoddi4+0xe6>
 8000464:	deff      	udf	#255	; 0xff
 8000466:	fab2 f382 	clz	r3, r2
 800046a:	2b00      	cmp	r3, #0
 800046c:	f040 8090 	bne.w	8000590 <__udivmoddi4+0x210>
 8000470:	1a8a      	subs	r2, r1, r2
 8000472:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000476:	fa1f fe8c 	uxth.w	lr, ip
 800047a:	2101      	movs	r1, #1
 800047c:	fbb2 f5f7 	udiv	r5, r2, r7
 8000480:	fb07 2015 	mls	r0, r7, r5, r2
 8000484:	0c22      	lsrs	r2, r4, #16
 8000486:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800048a:	fb0e f005 	mul.w	r0, lr, r5
 800048e:	4290      	cmp	r0, r2
 8000490:	d908      	bls.n	80004a4 <__udivmoddi4+0x124>
 8000492:	eb1c 0202 	adds.w	r2, ip, r2
 8000496:	f105 38ff 	add.w	r8, r5, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x122>
 800049c:	4290      	cmp	r0, r2
 800049e:	f200 80cb 	bhi.w	8000638 <__udivmoddi4+0x2b8>
 80004a2:	4645      	mov	r5, r8
 80004a4:	1a12      	subs	r2, r2, r0
 80004a6:	b2a4      	uxth	r4, r4
 80004a8:	fbb2 f0f7 	udiv	r0, r2, r7
 80004ac:	fb07 2210 	mls	r2, r7, r0, r2
 80004b0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80004b4:	fb0e fe00 	mul.w	lr, lr, r0
 80004b8:	45a6      	cmp	lr, r4
 80004ba:	d908      	bls.n	80004ce <__udivmoddi4+0x14e>
 80004bc:	eb1c 0404 	adds.w	r4, ip, r4
 80004c0:	f100 32ff 	add.w	r2, r0, #4294967295
 80004c4:	d202      	bcs.n	80004cc <__udivmoddi4+0x14c>
 80004c6:	45a6      	cmp	lr, r4
 80004c8:	f200 80bb 	bhi.w	8000642 <__udivmoddi4+0x2c2>
 80004cc:	4610      	mov	r0, r2
 80004ce:	eba4 040e 	sub.w	r4, r4, lr
 80004d2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80004d6:	e79f      	b.n	8000418 <__udivmoddi4+0x98>
 80004d8:	f1c1 0720 	rsb	r7, r1, #32
 80004dc:	408b      	lsls	r3, r1
 80004de:	fa22 fc07 	lsr.w	ip, r2, r7
 80004e2:	ea4c 0c03 	orr.w	ip, ip, r3
 80004e6:	fa05 f401 	lsl.w	r4, r5, r1
 80004ea:	fa20 f307 	lsr.w	r3, r0, r7
 80004ee:	40fd      	lsrs	r5, r7
 80004f0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80004f4:	4323      	orrs	r3, r4
 80004f6:	fbb5 f8f9 	udiv	r8, r5, r9
 80004fa:	fa1f fe8c 	uxth.w	lr, ip
 80004fe:	fb09 5518 	mls	r5, r9, r8, r5
 8000502:	0c1c      	lsrs	r4, r3, #16
 8000504:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000508:	fb08 f50e 	mul.w	r5, r8, lr
 800050c:	42a5      	cmp	r5, r4
 800050e:	fa02 f201 	lsl.w	r2, r2, r1
 8000512:	fa00 f001 	lsl.w	r0, r0, r1
 8000516:	d90b      	bls.n	8000530 <__udivmoddi4+0x1b0>
 8000518:	eb1c 0404 	adds.w	r4, ip, r4
 800051c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000520:	f080 8088 	bcs.w	8000634 <__udivmoddi4+0x2b4>
 8000524:	42a5      	cmp	r5, r4
 8000526:	f240 8085 	bls.w	8000634 <__udivmoddi4+0x2b4>
 800052a:	f1a8 0802 	sub.w	r8, r8, #2
 800052e:	4464      	add	r4, ip
 8000530:	1b64      	subs	r4, r4, r5
 8000532:	b29d      	uxth	r5, r3
 8000534:	fbb4 f3f9 	udiv	r3, r4, r9
 8000538:	fb09 4413 	mls	r4, r9, r3, r4
 800053c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000540:	fb03 fe0e 	mul.w	lr, r3, lr
 8000544:	45a6      	cmp	lr, r4
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x1da>
 8000548:	eb1c 0404 	adds.w	r4, ip, r4
 800054c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000550:	d26c      	bcs.n	800062c <__udivmoddi4+0x2ac>
 8000552:	45a6      	cmp	lr, r4
 8000554:	d96a      	bls.n	800062c <__udivmoddi4+0x2ac>
 8000556:	3b02      	subs	r3, #2
 8000558:	4464      	add	r4, ip
 800055a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800055e:	fba3 9502 	umull	r9, r5, r3, r2
 8000562:	eba4 040e 	sub.w	r4, r4, lr
 8000566:	42ac      	cmp	r4, r5
 8000568:	46c8      	mov	r8, r9
 800056a:	46ae      	mov	lr, r5
 800056c:	d356      	bcc.n	800061c <__udivmoddi4+0x29c>
 800056e:	d053      	beq.n	8000618 <__udivmoddi4+0x298>
 8000570:	b156      	cbz	r6, 8000588 <__udivmoddi4+0x208>
 8000572:	ebb0 0208 	subs.w	r2, r0, r8
 8000576:	eb64 040e 	sbc.w	r4, r4, lr
 800057a:	fa04 f707 	lsl.w	r7, r4, r7
 800057e:	40ca      	lsrs	r2, r1
 8000580:	40cc      	lsrs	r4, r1
 8000582:	4317      	orrs	r7, r2
 8000584:	e9c6 7400 	strd	r7, r4, [r6]
 8000588:	4618      	mov	r0, r3
 800058a:	2100      	movs	r1, #0
 800058c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000590:	f1c3 0120 	rsb	r1, r3, #32
 8000594:	fa02 fc03 	lsl.w	ip, r2, r3
 8000598:	fa20 f201 	lsr.w	r2, r0, r1
 800059c:	fa25 f101 	lsr.w	r1, r5, r1
 80005a0:	409d      	lsls	r5, r3
 80005a2:	432a      	orrs	r2, r5
 80005a4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80005a8:	fa1f fe8c 	uxth.w	lr, ip
 80005ac:	fbb1 f0f7 	udiv	r0, r1, r7
 80005b0:	fb07 1510 	mls	r5, r7, r0, r1
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80005ba:	fb00 f50e 	mul.w	r5, r0, lr
 80005be:	428d      	cmp	r5, r1
 80005c0:	fa04 f403 	lsl.w	r4, r4, r3
 80005c4:	d908      	bls.n	80005d8 <__udivmoddi4+0x258>
 80005c6:	eb1c 0101 	adds.w	r1, ip, r1
 80005ca:	f100 38ff 	add.w	r8, r0, #4294967295
 80005ce:	d22f      	bcs.n	8000630 <__udivmoddi4+0x2b0>
 80005d0:	428d      	cmp	r5, r1
 80005d2:	d92d      	bls.n	8000630 <__udivmoddi4+0x2b0>
 80005d4:	3802      	subs	r0, #2
 80005d6:	4461      	add	r1, ip
 80005d8:	1b49      	subs	r1, r1, r5
 80005da:	b292      	uxth	r2, r2
 80005dc:	fbb1 f5f7 	udiv	r5, r1, r7
 80005e0:	fb07 1115 	mls	r1, r7, r5, r1
 80005e4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005e8:	fb05 f10e 	mul.w	r1, r5, lr
 80005ec:	4291      	cmp	r1, r2
 80005ee:	d908      	bls.n	8000602 <__udivmoddi4+0x282>
 80005f0:	eb1c 0202 	adds.w	r2, ip, r2
 80005f4:	f105 38ff 	add.w	r8, r5, #4294967295
 80005f8:	d216      	bcs.n	8000628 <__udivmoddi4+0x2a8>
 80005fa:	4291      	cmp	r1, r2
 80005fc:	d914      	bls.n	8000628 <__udivmoddi4+0x2a8>
 80005fe:	3d02      	subs	r5, #2
 8000600:	4462      	add	r2, ip
 8000602:	1a52      	subs	r2, r2, r1
 8000604:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000608:	e738      	b.n	800047c <__udivmoddi4+0xfc>
 800060a:	4631      	mov	r1, r6
 800060c:	4630      	mov	r0, r6
 800060e:	e708      	b.n	8000422 <__udivmoddi4+0xa2>
 8000610:	4639      	mov	r1, r7
 8000612:	e6e6      	b.n	80003e2 <__udivmoddi4+0x62>
 8000614:	4610      	mov	r0, r2
 8000616:	e6fb      	b.n	8000410 <__udivmoddi4+0x90>
 8000618:	4548      	cmp	r0, r9
 800061a:	d2a9      	bcs.n	8000570 <__udivmoddi4+0x1f0>
 800061c:	ebb9 0802 	subs.w	r8, r9, r2
 8000620:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000624:	3b01      	subs	r3, #1
 8000626:	e7a3      	b.n	8000570 <__udivmoddi4+0x1f0>
 8000628:	4645      	mov	r5, r8
 800062a:	e7ea      	b.n	8000602 <__udivmoddi4+0x282>
 800062c:	462b      	mov	r3, r5
 800062e:	e794      	b.n	800055a <__udivmoddi4+0x1da>
 8000630:	4640      	mov	r0, r8
 8000632:	e7d1      	b.n	80005d8 <__udivmoddi4+0x258>
 8000634:	46d0      	mov	r8, sl
 8000636:	e77b      	b.n	8000530 <__udivmoddi4+0x1b0>
 8000638:	3d02      	subs	r5, #2
 800063a:	4462      	add	r2, ip
 800063c:	e732      	b.n	80004a4 <__udivmoddi4+0x124>
 800063e:	4608      	mov	r0, r1
 8000640:	e70a      	b.n	8000458 <__udivmoddi4+0xd8>
 8000642:	4464      	add	r4, ip
 8000644:	3802      	subs	r0, #2
 8000646:	e742      	b.n	80004ce <__udivmoddi4+0x14e>

08000648 <__aeabi_idiv0>:
 8000648:	4770      	bx	lr
 800064a:	bf00      	nop

0800064c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800064c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000684 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000650:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000652:	e003      	b.n	800065c <LoopCopyDataInit>

08000654 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000654:	4b0c      	ldr	r3, [pc, #48]	; (8000688 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000656:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000658:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800065a:	3104      	adds	r1, #4

0800065c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800065c:	480b      	ldr	r0, [pc, #44]	; (800068c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800065e:	4b0c      	ldr	r3, [pc, #48]	; (8000690 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000660:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000662:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000664:	d3f6      	bcc.n	8000654 <CopyDataInit>
  ldr  r2, =_sbss
 8000666:	4a0b      	ldr	r2, [pc, #44]	; (8000694 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000668:	e002      	b.n	8000670 <LoopFillZerobss>

0800066a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800066a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800066c:	f842 3b04 	str.w	r3, [r2], #4

08000670 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000670:	4b09      	ldr	r3, [pc, #36]	; (8000698 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000674:	d3f9      	bcc.n	800066a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000676:	f008 ff25 	bl	80094c4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800067a:	f02b f8bd 	bl	802b7f8 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800067e:	f000 fa5f 	bl	8000b40 <main>
  bx  lr    
 8000682:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000684:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000688:	080ccbb4 	.word	0x080ccbb4
  ldr  r0, =_sdata
 800068c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000690:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 8000694:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 8000698:	20014454 	.word	0x20014454

0800069c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800069c:	e7fe      	b.n	800069c <ADC_IRQHandler>
	...

080006a0 <GetSector>:

static uint32_t GetSector(uint32_t Address)
{
  uint32_t sector = 0;

  if((Address < 0x08003FFF) && (Address >= 0x08000000))
 80006a0:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 80006a4:	f643 72fe 	movw	r2, #16382	; 0x3ffe
 80006a8:	4293      	cmp	r3, r2
 80006aa:	d905      	bls.n	80006b8 <GetSector+0x18>
  {
    sector = FLASH_SECTOR_0;
  }
  else if((Address < 0x08007FFF) && (Address >= 0x08004000))
 80006ac:	f5a3 4180 	sub.w	r1, r3, #16384	; 0x4000
 80006b0:	4291      	cmp	r1, r2
 80006b2:	d803      	bhi.n	80006bc <GetSector+0x1c>
  {
    sector = FLASH_SECTOR_1;
 80006b4:	2001      	movs	r0, #1
 80006b6:	4770      	bx	lr
    sector = FLASH_SECTOR_0;
 80006b8:	2000      	movs	r0, #0
 80006ba:	4770      	bx	lr
  }
  else if((Address < 0x0800BFFF) && (Address >= 0x08008000))
 80006bc:	f5a3 4100 	sub.w	r1, r3, #32768	; 0x8000
 80006c0:	4291      	cmp	r1, r2
 80006c2:	d960      	bls.n	8000786 <GetSector+0xe6>
  {
    sector = FLASH_SECTOR_2;
  }
  else if((Address < 0x0800FFFF) && (Address >= 0x0800C000))
 80006c4:	f5a3 4340 	sub.w	r3, r3, #49152	; 0xc000
 80006c8:	4293      	cmp	r3, r2
 80006ca:	d95e      	bls.n	800078a <GetSector+0xea>
  {
    sector = FLASH_SECTOR_3;
  }
  else if((Address < 0x0801FFFF) && (Address >= 0x08010000))
 80006cc:	f100 4377 	add.w	r3, r0, #4143972352	; 0xf7000000
 80006d0:	f503 017f 	add.w	r1, r3, #16711680	; 0xff0000
 80006d4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80006d8:	4291      	cmp	r1, r2
 80006da:	d95a      	bls.n	8000792 <GetSector+0xf2>
  {
    sector = FLASH_SECTOR_4;
  }
  else if((Address < 0x0803FFFF) && (Address >= 0x08020000))
 80006dc:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 80006e0:	f503 017e 	add.w	r1, r3, #16646144	; 0xfe0000
 80006e4:	4291      	cmp	r1, r2
 80006e6:	d952      	bls.n	800078e <GetSector+0xee>
  {
    sector = FLASH_SECTOR_5;
  }
  else if((Address < 0x0805FFFF) && (Address >= 0x08040000))
 80006e8:	f503 017c 	add.w	r1, r3, #16515072	; 0xfc0000
 80006ec:	4291      	cmp	r1, r2
 80006ee:	d952      	bls.n	8000796 <GetSector+0xf6>
  {
    sector = FLASH_SECTOR_6;
  }
  else if((Address < 0x0807FFFF) && (Address >= 0x08060000))
 80006f0:	f503 017a 	add.w	r1, r3, #16384000	; 0xfa0000
 80006f4:	4291      	cmp	r1, r2
 80006f6:	d950      	bls.n	800079a <GetSector+0xfa>
  {
    sector = FLASH_SECTOR_7;
  }
  else if((Address < 0x0809FFFF) && (Address >= 0x08080000))
 80006f8:	f503 0178 	add.w	r1, r3, #16252928	; 0xf80000
 80006fc:	4291      	cmp	r1, r2
 80006fe:	d94e      	bls.n	800079e <GetSector+0xfe>
  {
    sector = FLASH_SECTOR_8;
  }
  else if((Address < 0x080BFFFF) && (Address >= 0x080A0000))
 8000700:	f503 0176 	add.w	r1, r3, #16121856	; 0xf60000
 8000704:	4291      	cmp	r1, r2
 8000706:	d94c      	bls.n	80007a2 <GetSector+0x102>
  {
    sector = FLASH_SECTOR_9;
  }
  else if((Address < 0x080DFFFF) && (Address >= 0x080C0000))
 8000708:	f503 0174 	add.w	r1, r3, #15990784	; 0xf40000
 800070c:	4291      	cmp	r1, r2
 800070e:	d94a      	bls.n	80007a6 <GetSector+0x106>
  {
    sector = FLASH_SECTOR_10;
  }
  else if((Address < 0x080FFFFF) && (Address >= 0x080E0000))
 8000710:	f503 0172 	add.w	r1, r3, #15859712	; 0xf20000
 8000714:	4291      	cmp	r1, r2
 8000716:	d948      	bls.n	80007aa <GetSector+0x10a>
  {
    sector = FLASH_SECTOR_11;
  }
  else if((Address < 0x08103FFF) && (Address >= 0x08100000))
 8000718:	f1a0 6001 	sub.w	r0, r0, #135266304	; 0x8100000
 800071c:	f643 71fe 	movw	r1, #16382	; 0x3ffe
 8000720:	4288      	cmp	r0, r1
 8000722:	d944      	bls.n	80007ae <GetSector+0x10e>
  {
    sector = FLASH_SECTOR_12;
  }
  else if((Address < 0x08107FFF) && (Address >= 0x08104000))
 8000724:	f5a0 4c80 	sub.w	ip, r0, #16384	; 0x4000
 8000728:	458c      	cmp	ip, r1
 800072a:	d942      	bls.n	80007b2 <GetSector+0x112>
  {
    sector = FLASH_SECTOR_13;
  }
  else if((Address < 0x0810BFFF) && (Address >= 0x08108000))
 800072c:	f5a0 4c00 	sub.w	ip, r0, #32768	; 0x8000
 8000730:	458c      	cmp	ip, r1
 8000732:	d940      	bls.n	80007b6 <GetSector+0x116>
  {
    sector = FLASH_SECTOR_14;
  }
  else if((Address < 0x0810FFFF) && (Address >= 0x0810C000))
 8000734:	f5a0 4040 	sub.w	r0, r0, #49152	; 0xc000
 8000738:	4288      	cmp	r0, r1
 800073a:	d93e      	bls.n	80007ba <GetSector+0x11a>
  {
    sector = FLASH_SECTOR_15;
  }
  else if((Address < 0x0811FFFF) && (Address >= 0x08110000))
 800073c:	f503 006f 	add.w	r0, r3, #15663104	; 0xef0000
 8000740:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8000744:	4288      	cmp	r0, r1
 8000746:	d93a      	bls.n	80007be <GetSector+0x11e>
  {
    sector = FLASH_SECTOR_16;
  }
  else if((Address < 0x0813FFFF) && (Address >= 0x08120000))
 8000748:	f503 016e 	add.w	r1, r3, #15597568	; 0xee0000
 800074c:	4291      	cmp	r1, r2
 800074e:	d938      	bls.n	80007c2 <GetSector+0x122>
  {
    sector = FLASH_SECTOR_17;
  }
  else if((Address < 0x0815FFFF) && (Address >= 0x08140000))
 8000750:	f503 016c 	add.w	r1, r3, #15466496	; 0xec0000
 8000754:	4291      	cmp	r1, r2
 8000756:	d938      	bls.n	80007ca <GetSector+0x12a>
  {
    sector = FLASH_SECTOR_18;
  }
  else if((Address < 0x0817FFFF) && (Address >= 0x08160000))
 8000758:	f503 016a 	add.w	r1, r3, #15335424	; 0xea0000
 800075c:	4291      	cmp	r1, r2
 800075e:	d932      	bls.n	80007c6 <GetSector+0x126>
  {
    sector = FLASH_SECTOR_19;
  }
  else if((Address < 0x0819FFFF) && (Address >= 0x08180000))
 8000760:	f503 0168 	add.w	r1, r3, #15204352	; 0xe80000
 8000764:	4291      	cmp	r1, r2
 8000766:	d936      	bls.n	80007d6 <GetSector+0x136>
  {
    sector = FLASH_SECTOR_20;
  }
  else if((Address < 0x081BFFFF) && (Address >= 0x081A0000))
 8000768:	f503 0166 	add.w	r1, r3, #15073280	; 0xe60000
 800076c:	4291      	cmp	r1, r2
 800076e:	d930      	bls.n	80007d2 <GetSector+0x132>
  {
    sector = FLASH_SECTOR_21;
  }
  else if((Address < 0x081DFFFF) && (Address >= 0x081C0000))
 8000770:	f503 0164 	add.w	r1, r3, #14942208	; 0xe40000
 8000774:	4291      	cmp	r1, r2
 8000776:	d92a      	bls.n	80007ce <GetSector+0x12e>
  {
    sector = FLASH_SECTOR_22;
  }
  else if((Address < 0x081FFFFF) && (Address >= 0x081E0000))
 8000778:	f503 0362 	add.w	r3, r3, #14811136	; 0xe20000
  {
    sector = FLASH_SECTOR_23;
 800077c:	4293      	cmp	r3, r2
 800077e:	bf94      	ite	ls
 8000780:	2017      	movls	r0, #23
 8000782:	2000      	movhi	r0, #0
 8000784:	4770      	bx	lr
    sector = FLASH_SECTOR_2;
 8000786:	2002      	movs	r0, #2
 8000788:	4770      	bx	lr
    sector = FLASH_SECTOR_3;
 800078a:	2003      	movs	r0, #3
 800078c:	4770      	bx	lr
    sector = FLASH_SECTOR_5;
 800078e:	2005      	movs	r0, #5
 8000790:	4770      	bx	lr
    sector = FLASH_SECTOR_4;
 8000792:	2004      	movs	r0, #4
 8000794:	4770      	bx	lr
    sector = FLASH_SECTOR_6;
 8000796:	2006      	movs	r0, #6
 8000798:	4770      	bx	lr
    sector = FLASH_SECTOR_7;
 800079a:	2007      	movs	r0, #7
 800079c:	4770      	bx	lr
    sector = FLASH_SECTOR_8;
 800079e:	2008      	movs	r0, #8
 80007a0:	4770      	bx	lr
    sector = FLASH_SECTOR_9;
 80007a2:	2009      	movs	r0, #9
 80007a4:	4770      	bx	lr
    sector = FLASH_SECTOR_10;
 80007a6:	200a      	movs	r0, #10
 80007a8:	4770      	bx	lr
    sector = FLASH_SECTOR_11;
 80007aa:	200b      	movs	r0, #11
 80007ac:	4770      	bx	lr
    sector = FLASH_SECTOR_12;
 80007ae:	200c      	movs	r0, #12
 80007b0:	4770      	bx	lr
    sector = FLASH_SECTOR_13;
 80007b2:	200d      	movs	r0, #13
 80007b4:	4770      	bx	lr
    sector = FLASH_SECTOR_14;
 80007b6:	200e      	movs	r0, #14
 80007b8:	4770      	bx	lr
    sector = FLASH_SECTOR_15;
 80007ba:	200f      	movs	r0, #15
 80007bc:	4770      	bx	lr
    sector = FLASH_SECTOR_16;
 80007be:	2010      	movs	r0, #16
 80007c0:	4770      	bx	lr
    sector = FLASH_SECTOR_17;
 80007c2:	2011      	movs	r0, #17
 80007c4:	4770      	bx	lr
    sector = FLASH_SECTOR_19;
 80007c6:	2013      	movs	r0, #19
 80007c8:	4770      	bx	lr
    sector = FLASH_SECTOR_18;
 80007ca:	2012      	movs	r0, #18
 80007cc:	4770      	bx	lr
    sector = FLASH_SECTOR_22;
 80007ce:	2016      	movs	r0, #22
  }
  return sector;
}
 80007d0:	4770      	bx	lr
    sector = FLASH_SECTOR_21;
 80007d2:	2015      	movs	r0, #21
 80007d4:	4770      	bx	lr
    sector = FLASH_SECTOR_20;
 80007d6:	2014      	movs	r0, #20
 80007d8:	4770      	bx	lr
 80007da:	bf00      	nop

080007dc <Flash_Write_Data>:
   return float_variable;
}


uint32_t Flash_Write_Data (uint32_t StartSectorAddress, uint32_t *Data, uint16_t numberofwords)
{
 80007dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80007de:	4607      	mov	r7, r0
 80007e0:	b083      	sub	sp, #12
 80007e2:	4616      	mov	r6, r2
 80007e4:	460d      	mov	r5, r1
	uint32_t SECTORError;
	int sofar=0;


	 /* Unlock the Flash to enable the flash control register access *************/
	  HAL_FLASH_Unlock();
 80007e6:	f009 f82b 	bl	8009840 <HAL_FLASH_Unlock>

	  /* Erase the user Flash area */

	  /* Get the number of sector to erase from 1st sector */

	  uint32_t StartSector = GetSector(StartSectorAddress);
 80007ea:	4638      	mov	r0, r7
 80007ec:	f7ff ff58 	bl	80006a0 <GetSector>
 80007f0:	4604      	mov	r4, r0
	  uint32_t EndSectorAddress = StartSectorAddress + numberofwords*4;
	  uint32_t EndSector = GetSector(EndSectorAddress);
 80007f2:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 80007f6:	f7ff ff53 	bl	80006a0 <GetSector>

	  /* Fill EraseInit structure*/
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
	  EraseInitStruct.Sector        = StartSector;
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 80007fa:	1c43      	adds	r3, r0, #1
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 80007fc:	4813      	ldr	r0, [pc, #76]	; (800084c <Flash_Write_Data+0x70>)
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 80007fe:	1b1b      	subs	r3, r3, r4
 8000800:	e9c0 4302 	strd	r4, r3, [r0, #8]
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8000804:	2300      	movs	r3, #0
 8000806:	6003      	str	r3, [r0, #0]

	  /* Note: If an erase operation in Flash memory also concerns data in the data or instruction cache,
	     you have to make sure that these data are rewritten before they are accessed during code
	     execution. If this cannot be done safely, it is recommended to flush the caches by setting the
	     DCRST and ICRST bits in the FLASH_CR register. */
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8000808:	a901      	add	r1, sp, #4
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
 800080a:	2302      	movs	r3, #2
 800080c:	6103      	str	r3, [r0, #16]
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 800080e:	f009 f895 	bl	800993c <HAL_FLASHEx_Erase>
 8000812:	b988      	cbnz	r0, 8000838 <Flash_Write_Data+0x5c>
	  }

	  /* Program the user Flash area word by word
	    (area defined by FLASH_USER_START_ADDR and FLASH_USER_END_ADDR) ***********/

	   while (sofar<numberofwords)
 8000814:	b1a6      	cbz	r6, 8000840 <Flash_Write_Data+0x64>
 8000816:	1b7f      	subs	r7, r7, r5
 8000818:	4604      	mov	r4, r0
 800081a:	3d04      	subs	r5, #4
 800081c:	3704      	adds	r7, #4
 800081e:	e001      	b.n	8000824 <Flash_Write_Data+0x48>
 8000820:	42a6      	cmp	r6, r4
 8000822:	d00d      	beq.n	8000840 <Flash_Write_Data+0x64>
 8000824:	1979      	adds	r1, r7, r5
	   {
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000826:	2300      	movs	r3, #0
 8000828:	f855 2f04 	ldr.w	r2, [r5, #4]!
 800082c:	2002      	movs	r0, #2
	     {
	    	 StartSectorAddress += 4;  // use StartPageAddress += 2 for half word and 8 for double word
	    	 sofar++;
 800082e:	3401      	adds	r4, #1
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000830:	f008 ff64 	bl	80096fc <HAL_FLASH_Program>
 8000834:	2800      	cmp	r0, #0
 8000836:	d0f3      	beq.n	8000820 <Flash_Write_Data+0x44>
	     }
	     else
	     {
	       /* Error occurred while writing data in Flash memory*/
	    	 return HAL_FLASH_GetError ();
 8000838:	f009 f820 	bl	800987c <HAL_FLASH_GetError>
	  /* Lock the Flash to disable the flash control register access (recommended
	     to protect the FLASH memory against possible unwanted operation) *********/
	  HAL_FLASH_Lock();

	   return 0;
}
 800083c:	b003      	add	sp, #12
 800083e:	bdf0      	pop	{r4, r5, r6, r7, pc}
	  HAL_FLASH_Lock();
 8000840:	f009 f812 	bl	8009868 <HAL_FLASH_Lock>
	   return 0;
 8000844:	2000      	movs	r0, #0
}
 8000846:	b003      	add	sp, #12
 8000848:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800084a:	bf00      	nop
 800084c:	20000184 	.word	0x20000184

08000850 <Flash_Read_Data>:


void Flash_Read_Data (uint32_t StartSectorAddress, uint32_t *RxBuf, uint16_t numberofwords)
{
 8000850:	460b      	mov	r3, r1
 8000852:	3201      	adds	r2, #1
 8000854:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8000858:	1ac0      	subs	r0, r0, r3
	while (1)
	{

		*RxBuf = *(__IO uint32_t *)StartSectorAddress;
 800085a:	581a      	ldr	r2, [r3, r0]
 800085c:	f843 2b04 	str.w	r2, [r3], #4
		StartSectorAddress += 4;
		RxBuf++;
		if (!(numberofwords--)) break;
 8000860:	428b      	cmp	r3, r1
 8000862:	d1fa      	bne.n	800085a <Flash_Read_Data+0xa>
	}
}
 8000864:	4770      	bx	lr
 8000866:	bf00      	nop

08000868 <calculate_freq_and_signalstrength>:
 * @param Channel The channel number.
 * @param samples Pointer to the input samples array.
 * @param given_frequency The given frequency.
 * @return FFT structure containing the main frequency and signal strength.
 */
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* samples, uint8_t given_frequency) {
 8000868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800086c:	ed2d 8b02 	vpush	{d8}
 8000870:	b091      	sub	sp, #68	; 0x44
 8000872:	af00      	add	r7, sp, #0
 8000874:	4605      	mov	r5, r0
 8000876:	4688      	mov	r8, r1
 8000878:	60fa      	str	r2, [r7, #12]
    // Perform FFT using CMSIS-DSP library
	uint8_t buffer_size = MEAS_get_num_of_samples();
 800087a:	f000 fe5b 	bl	8001534 <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 800087e:	b203      	sxth	r3, r0
 8000880:	60bb      	str	r3, [r7, #8]
 8000882:	009b      	lsls	r3, r3, #2
 8000884:	607b      	str	r3, [r7, #4]
 8000886:	3307      	adds	r3, #7
 8000888:	f023 0307 	bic.w	r3, r3, #7
 800088c:	ebad 0d03 	sub.w	sp, sp, r3
	uint8_t buffer_size = MEAS_get_num_of_samples();
 8000890:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 8000892:	46ea      	mov	sl, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 8000894:	b1f0      	cbz	r0, 80008d4 <calculate_freq_and_signalstrength+0x6c>
 8000896:	3d01      	subs	r5, #1
 8000898:	46d1      	mov	r9, sl
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800089a:	46d3      	mov	fp, sl
    for (uint32_t i = 0; i < fft_size; i++) {
 800089c:	2600      	movs	r6, #0
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800089e:	f000 fe47 	bl	8001530 <MEAS_get_num_of_chan>
 80008a2:	fb06 5000 	mla	r0, r6, r0, r5
 80008a6:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 80008aa:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 80008ae:	3601      	adds	r6, #1
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80008b0:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 80008b4:	42b4      	cmp	r4, r6
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80008b6:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80008ba:	d1f0      	bne.n	800089e <calculate_freq_and_signalstrength+0x36>
 80008bc:	687e      	ldr	r6, [r7, #4]
    }
    
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 80008be:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 800096c <calculate_freq_and_signalstrength+0x104>
 80008c2:	4456      	add	r6, sl
 80008c4:	edd9 7a00 	vldr	s15, [r9]
 80008c8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80008cc:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80008d0:	454e      	cmp	r6, r9
 80008d2:	d1f7      	bne.n	80008c4 <calculate_freq_and_signalstrength+0x5c>
    }

    // Create an array for the FFT output
    float32_t fft_complex_output[2*buffer_size];
 80008d4:	68bb      	ldr	r3, [r7, #8]
 80008d6:	466a      	mov	r2, sp
 80008d8:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
 80008dc:	469d      	mov	sp, r3

    //calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();

    //calculate the signal strength
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 80008de:	ee07 4a90 	vmov	s15, r4
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80008e2:	68fb      	ldr	r3, [r7, #12]
    float32_t fft_complex_output[2*buffer_size];
 80008e4:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 80008e6:	b2a1      	uxth	r1, r4
 80008e8:	f107 0028 	add.w	r0, r7, #40	; 0x28
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 80008ec:	eef8 8a67 	vcvt.f32.u32	s17, s15
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80008f0:	fb13 f904 	smulbb	r9, r3, r4
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 80008f4:	f028 fda8 	bl	8029448 <arm_rfft_fast_init_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 80008f8:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 80008fa:	2300      	movs	r3, #0
 80008fc:	4651      	mov	r1, sl
 80008fe:	f107 0028 	add.w	r0, r7, #40	; 0x28
 8000902:	462a      	mov	r2, r5
 8000904:	f028 fe24 	bl	8029550 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000908:	4622      	mov	r2, r4
 800090a:	4629      	mov	r1, r5
 800090c:	4628      	mov	r0, r5
 800090e:	f029 fa8d 	bl	8029e2c <arm_cmplx_mag_f32>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000912:	f000 fe11 	bl	8001538 <MEAS_get_samp_freq>
 8000916:	fbb9 f9f0 	udiv	r9, r9, r0
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800091a:	eb05 0989 	add.w	r9, r5, r9, lsl #2
 800091e:	edd9 7a00 	vldr	s15, [r9]
 8000922:	ee77 7aa7 	vadd.f32	s15, s15, s15

    // Find the index of the maximum magnitude in the first half of the array
    uint32_t maxIndex;
    float32_t maxValue;
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8000926:	f107 0318 	add.w	r3, r7, #24
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800092a:	eec7 0aa8 	vdiv.f32	s1, s15, s17
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800092e:	f107 021c 	add.w	r2, r7, #28
 8000932:	4621      	mov	r1, r4
 8000934:	4628      	mov	r0, r5
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8000936:	edc7 0a03 	vstr	s1, [r7, #12]
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800093a:	f028 fd1d 	bl	8029378 <arm_max_f32>

    // Calculate the main frequency
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800093e:	edd7 7a06 	vldr	s15, [r7, #24]
 8000942:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8000946:	f000 fdf7 	bl	8001538 <MEAS_get_samp_freq>
 800094a:	ee07 0a90 	vmov	s15, r0
 800094e:	eef8 7a67 	vcvt.f32.u32	s15, s15
    FFT fft;

    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 8000952:	edd7 0a03 	vldr	s1, [r7, #12]
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000956:	ee67 7a88 	vmul.f32	s15, s15, s16
}
 800095a:	3744      	adds	r7, #68	; 0x44
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800095c:	ee87 0aa8 	vdiv.f32	s0, s15, s17
}
 8000960:	46bd      	mov	sp, r7
 8000962:	ecbd 8b02 	vpop	{d8}
 8000966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800096a:	bf00      	nop
 800096c:	44fff000 	.word	0x44fff000

08000970 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8000970:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8000972:	2064      	movs	r0, #100	; 0x64
 8000974:	f00c fd2c 	bl	800d3d0 <osDelay>
  for(;;)
 8000978:	e7fb      	b.n	8000972 <StartDefaultTask+0x2>
 800097a:	bf00      	nop

0800097c <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 800097c:	b580      	push	{r7, lr}
 800097e:	4c10      	ldr	r4, [pc, #64]	; (80009c0 <StartTimeoutTask+0x44>)
 8000980:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80009cc <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8000984:	4f0f      	ldr	r7, [pc, #60]	; (80009c4 <StartTimeoutTask+0x48>)
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8000986:	4e10      	ldr	r6, [pc, #64]	; (80009c8 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 8000988:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800098a:	2300      	movs	r3, #0
 800098c:	461a      	mov	r2, r3
 800098e:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 8000990:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8000992:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 8000996:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8000998:	f00c fe16 	bl	800d5c8 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 800099c:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 800099e:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80009a0:	4638      	mov	r0, r7
 80009a2:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80009a4:	b912      	cbnz	r2, 80009ac <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80009a6:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80009a8:	f009 f99c 	bl	8009ce4 <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80009ac:	4630      	mov	r0, r6
 80009ae:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80009b2:	f009 f99b 	bl	8009cec <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80009b6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80009ba:	f00c fd09 	bl	800d3d0 <osDelay>
	  sleep_timeout_value--;
 80009be:	e7e3      	b.n	8000988 <StartTimeoutTask+0xc>
 80009c0:	2000000c 	.word	0x2000000c
 80009c4:	40021000 	.word	0x40021000
 80009c8:	40021800 	.word	0x40021800
 80009cc:	200001a0 	.word	0x200001a0

080009d0 <updateGUI_test>:
	return sleep_timeout_value;
 80009d0:	4b01      	ldr	r3, [pc, #4]	; (80009d8 <updateGUI_test+0x8>)
}
 80009d2:	6818      	ldr	r0, [r3, #0]
 80009d4:	4770      	bx	lr
 80009d6:	bf00      	nop
 80009d8:	2000000c 	.word	0x2000000c

080009dc <gyro_disable>:
{
 80009dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80009de:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80009e0:	4e1f      	ldr	r6, [pc, #124]	; (8000a60 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80009e2:	4d20      	ldr	r5, [pc, #128]	; (8000a64 <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 80009e4:	4c20      	ldr	r4, [pc, #128]	; (8000a68 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80009e6:	2700      	movs	r7, #0
 80009e8:	9700      	str	r7, [sp, #0]
 80009ea:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80009ec:	f043 0304 	orr.w	r3, r3, #4
 80009f0:	6333      	str	r3, [r6, #48]	; 0x30
 80009f2:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80009f4:	f003 0304 	and.w	r3, r3, #4
 80009f8:	9300      	str	r3, [sp, #0]
 80009fa:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80009fc:	682b      	ldr	r3, [r5, #0]
 80009fe:	f023 030c 	bic.w	r3, r3, #12
 8000a02:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 8000a04:	682b      	ldr	r3, [r5, #0]
 8000a06:	f043 0304 	orr.w	r3, r3, #4
 8000a0a:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 8000a0c:	69ab      	ldr	r3, [r5, #24]
 8000a0e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000a12:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 8000a14:	200a      	movs	r0, #10
 8000a16:	f008 fd8f 	bl	8009538 <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 8000a1a:	682b      	ldr	r3, [r5, #0]
 8000a1c:	f043 030c 	orr.w	r3, r3, #12
 8000a20:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8000a22:	9701      	str	r7, [sp, #4]
 8000a24:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000a26:	f043 0320 	orr.w	r3, r3, #32
 8000a2a:	6333      	str	r3, [r6, #48]	; 0x30
 8000a2c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000a2e:	f003 0320 	and.w	r3, r3, #32
 8000a32:	9301      	str	r3, [sp, #4]
 8000a34:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 8000a36:	68a3      	ldr	r3, [r4, #8]
 8000a38:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000a3c:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 8000a3e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000a40:	f023 030f 	bic.w	r3, r3, #15
 8000a44:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 8000a46:	68e3      	ldr	r3, [r4, #12]
 8000a48:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000a4c:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8000a4e:	200a      	movs	r0, #10
 8000a50:	f008 fd72 	bl	8009538 <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 8000a54:	6823      	ldr	r3, [r4, #0]
 8000a56:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8000a5a:	6023      	str	r3, [r4, #0]
}
 8000a5c:	b003      	add	sp, #12
 8000a5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000a60:	40023800 	.word	0x40023800
 8000a64:	40020800 	.word	0x40020800
 8000a68:	40021400 	.word	0x40021400

08000a6c <setCalibrationFlashValues>:
{
 8000a6c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a70:	461c      	mov	r4, r3
	uint32_t Rx_Data[numberofwords];
 8000a72:	009b      	lsls	r3, r3, #2
 8000a74:	3307      	adds	r3, #7
 8000a76:	466d      	mov	r5, sp
 8000a78:	08db      	lsrs	r3, r3, #3
 8000a7a:	eba5 03c3 	sub.w	r3, r5, r3, lsl #3
{
 8000a7e:	af00      	add	r7, sp, #0
	uint32_t Rx_Data[numberofwords];
 8000a80:	469d      	mov	sp, r3
 8000a82:	466d      	mov	r5, sp
{
 8000a84:	4616      	mov	r6, r2
 8000a86:	4681      	mov	r9, r0
 8000a88:	4688      	mov	r8, r1
	Flash_Read_Data(StartSectorAddress, Rx_Data, numberofwords);
 8000a8a:	4622      	mov	r2, r4
 8000a8c:	4629      	mov	r1, r5
 8000a8e:	f7ff fedf 	bl	8000850 <Flash_Read_Data>
	Rx_Data[index] = value;
 8000a92:	f845 8026 	str.w	r8, [r5, r6, lsl #2]
	Flash_Write_Data(StartSectorAddress, data_addr, numberofwords);
 8000a96:	4622      	mov	r2, r4
 8000a98:	4629      	mov	r1, r5
 8000a9a:	4648      	mov	r0, r9
 8000a9c:	f7ff fe9e 	bl	80007dc <Flash_Write_Data>
}
 8000aa0:	46bd      	mov	sp, r7
 8000aa2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000aa6:	bf00      	nop

08000aa8 <SystemClock_Config>:
{
 8000aa8:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000aaa:	2400      	movs	r4, #0
{
 8000aac:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000aae:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 8000ab2:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ab6:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8000aba:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000abe:	4a1e      	ldr	r2, [pc, #120]	; (8000b38 <SystemClock_Config+0x90>)
 8000ac0:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ac2:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ac4:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ac6:	4b1d      	ldr	r3, [pc, #116]	; (8000b3c <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ac8:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8000acc:	6411      	str	r1, [r2, #64]	; 0x40
 8000ace:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8000ad0:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8000ad4:	9201      	str	r2, [sp, #4]
 8000ad6:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ad8:	9402      	str	r4, [sp, #8]
 8000ada:	681a      	ldr	r2, [r3, #0]
 8000adc:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8000ae0:	601a      	str	r2, [r3, #0]
 8000ae2:	681b      	ldr	r3, [r3, #0]
 8000ae4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000ae8:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000aea:	2201      	movs	r2, #1
 8000aec:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000af0:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000af4:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000af6:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000af8:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000afa:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000afe:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000b02:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000b06:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000b08:	2202      	movs	r2, #2
 8000b0a:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b0c:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000b0e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000b12:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b14:	f00a ff24 	bl	800b960 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000b18:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000b1a:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000b1e:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000b22:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000b26:	a803      	add	r0, sp, #12
 8000b28:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000b2a:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000b2e:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000b30:	f00b f92e 	bl	800bd90 <HAL_RCC_ClockConfig>
}
 8000b34:	b015      	add	sp, #84	; 0x54
 8000b36:	bd30      	pop	{r4, r5, pc}
 8000b38:	40023800 	.word	0x40023800
 8000b3c:	40007000 	.word	0x40007000

08000b40 <main>:
{
 8000b40:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b44:	2400      	movs	r4, #0
{
 8000b46:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8000b48:	f008 fcca 	bl	80094e0 <HAL_Init>
  SystemClock_Config();
 8000b4c:	f7ff ffac 	bl	8000aa8 <SystemClock_Config>
  gyro_disable();
 8000b50:	f7ff ff44 	bl	80009dc <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b54:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000b58:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b5c:	4bbe      	ldr	r3, [pc, #760]	; (8000e58 <main+0x318>)
 8000b5e:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b60:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b62:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000b64:	48bd      	ldr	r0, [pc, #756]	; (8000e5c <main+0x31c>)
  hi2c3.Instance = I2C3;
 8000b66:	4dbe      	ldr	r5, [pc, #760]	; (8000e60 <main+0x320>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b68:	f041 0110 	orr.w	r1, r1, #16
 8000b6c:	6319      	str	r1, [r3, #48]	; 0x30
 8000b6e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b70:	f001 0110 	and.w	r1, r1, #16
 8000b74:	9100      	str	r1, [sp, #0]
 8000b76:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000b78:	9401      	str	r4, [sp, #4]
 8000b7a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b7c:	f041 0120 	orr.w	r1, r1, #32
 8000b80:	6319      	str	r1, [r3, #48]	; 0x30
 8000b82:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b84:	f001 0120 	and.w	r1, r1, #32
 8000b88:	9101      	str	r1, [sp, #4]
 8000b8a:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000b8c:	9402      	str	r4, [sp, #8]
 8000b8e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b90:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8000b94:	6319      	str	r1, [r3, #48]	; 0x30
 8000b96:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b98:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8000b9c:	9102      	str	r1, [sp, #8]
 8000b9e:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000ba0:	9403      	str	r4, [sp, #12]
 8000ba2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000ba4:	f041 0104 	orr.w	r1, r1, #4
 8000ba8:	6319      	str	r1, [r3, #48]	; 0x30
 8000baa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bac:	f001 0104 	and.w	r1, r1, #4
 8000bb0:	9103      	str	r1, [sp, #12]
 8000bb2:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000bb4:	9404      	str	r4, [sp, #16]
 8000bb6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bb8:	f041 0101 	orr.w	r1, r1, #1
 8000bbc:	6319      	str	r1, [r3, #48]	; 0x30
 8000bbe:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bc0:	f001 0101 	and.w	r1, r1, #1
 8000bc4:	9104      	str	r1, [sp, #16]
 8000bc6:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000bc8:	9405      	str	r4, [sp, #20]
 8000bca:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bcc:	f041 0102 	orr.w	r1, r1, #2
 8000bd0:	6319      	str	r1, [r3, #48]	; 0x30
 8000bd2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bd4:	f001 0102 	and.w	r1, r1, #2
 8000bd8:	9105      	str	r1, [sp, #20]
 8000bda:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000bdc:	9406      	str	r4, [sp, #24]
 8000bde:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000be0:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8000be4:	6319      	str	r1, [r3, #48]	; 0x30
 8000be6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000be8:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8000bec:	9106      	str	r1, [sp, #24]
 8000bee:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000bf0:	9407      	str	r4, [sp, #28]
 8000bf2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bf4:	f041 0108 	orr.w	r1, r1, #8
 8000bf8:	6319      	str	r1, [r3, #48]	; 0x30
 8000bfa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bfc:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c00:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000c02:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c04:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000c06:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c08:	f009 f86c 	bl	8009ce4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8000c0c:	4893      	ldr	r0, [pc, #588]	; (8000e5c <main+0x31c>)
 8000c0e:	2120      	movs	r1, #32
 8000c10:	2201      	movs	r2, #1
 8000c12:	f009 f867 	bl	8009ce4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 8000c16:	4893      	ldr	r0, [pc, #588]	; (8000e64 <main+0x324>)
 8000c18:	4622      	mov	r2, r4
 8000c1a:	2114      	movs	r1, #20
 8000c1c:	f009 f862 	bl	8009ce4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEBUG2_GPIO_GPIO_Port, DEBUG2_GPIO_Pin, GPIO_PIN_RESET);
 8000c20:	4891      	ldr	r0, [pc, #580]	; (8000e68 <main+0x328>)
 8000c22:	4622      	mov	r2, r4
 8000c24:	2180      	movs	r1, #128	; 0x80
 8000c26:	f009 f85d 	bl	8009ce4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8000c2a:	4890      	ldr	r0, [pc, #576]	; (8000e6c <main+0x32c>)
 8000c2c:	4622      	mov	r2, r4
 8000c2e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000c32:	f009 f857 	bl	8009ce4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8000c36:	488e      	ldr	r0, [pc, #568]	; (8000e70 <main+0x330>)
 8000c38:	4622      	mov	r2, r4
 8000c3a:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8000c3e:	f009 f851 	bl	8009ce4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 8000c42:	488c      	ldr	r0, [pc, #560]	; (8000e74 <main+0x334>)
 8000c44:	4622      	mov	r2, r4
 8000c46:	2104      	movs	r1, #4
 8000c48:	f009 f84c 	bl	8009ce4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8000c4c:	2201      	movs	r2, #1
 8000c4e:	4889      	ldr	r0, [pc, #548]	; (8000e74 <main+0x334>)
 8000c50:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000c54:	f009 f846 	bl	8009ce4 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c58:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c5a:	f04f 0b03 	mov.w	fp, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8000c5e:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c60:	487e      	ldr	r0, [pc, #504]	; (8000e5c <main+0x31c>)
 8000c62:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8000c64:	f04f 0908 	mov.w	r9, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c68:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c6c:	e9cd 4b11 	strd	r4, fp, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c70:	f008 fef4 	bl	8009a5c <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000c74:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c78:	4878      	ldr	r0, [pc, #480]	; (8000e5c <main+0x31c>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8000c7a:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c7e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000c80:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c82:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c84:	f008 feea 	bl	8009a5c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8000c88:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c8a:	4874      	ldr	r0, [pc, #464]	; (8000e5c <main+0x31c>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8000c8c:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c8e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000c90:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000c92:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c96:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c9a:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c9c:	f008 fede 	bl	8009a5c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000ca0:	4870      	ldr	r0, [pc, #448]	; (8000e64 <main+0x324>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000ca2:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000ca6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ca8:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000cac:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000cae:	f008 fed5 	bl	8009a5c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 8000cb2:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cb4:	486c      	ldr	r0, [pc, #432]	; (8000e68 <main+0x328>)
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 8000cb6:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cb8:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8000cba:	f04f 0810 	mov.w	r8, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cbe:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cc2:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cc4:	f008 feca 	bl	8009a5c <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cc8:	4866      	ldr	r0, [pc, #408]	; (8000e64 <main+0x324>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cca:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000ccc:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cce:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8000cd2:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cd6:	f008 fec1 	bl	8009a5c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000cda:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cde:	4863      	ldr	r0, [pc, #396]	; (8000e6c <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000ce0:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000ce2:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ce4:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ce8:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cea:	f008 feb7 	bl	8009a5c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000cee:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cf2:	485f      	ldr	r0, [pc, #380]	; (8000e70 <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000cf4:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cf6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cf8:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000cfc:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cfe:	f008 fead 	bl	8009a5c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8000d02:	f242 0204 	movw	r2, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000d06:	485b      	ldr	r0, [pc, #364]	; (8000e74 <main+0x334>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8000d08:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000d0a:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d0c:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d10:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000d12:	f008 fea3 	bl	8009a5c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000d16:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d1a:	4853      	ldr	r0, [pc, #332]	; (8000e68 <main+0x328>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000d1c:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d1e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 8000d20:	220f      	movs	r2, #15
 8000d22:	9213      	str	r2, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d24:	e9cd 7410 	strd	r7, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d28:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d2a:	f008 fe97 	bl	8009a5c <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8000d2e:	2105      	movs	r1, #5
 8000d30:	4622      	mov	r2, r4
 8000d32:	2009      	movs	r0, #9
 8000d34:	f008 fc24 	bl	8009580 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8000d38:	2009      	movs	r0, #9
 8000d3a:	f008 fc5f 	bl	80095fc <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8000d3e:	484e      	ldr	r0, [pc, #312]	; (8000e78 <main+0x338>)
 8000d40:	4a4e      	ldr	r2, [pc, #312]	; (8000e7c <main+0x33c>)
 8000d42:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000d44:	f008 fc68 	bl	8009618 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8000d48:	494d      	ldr	r1, [pc, #308]	; (8000e80 <main+0x340>)
 8000d4a:	4a4e      	ldr	r2, [pc, #312]	; (8000e84 <main+0x344>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000d4c:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 8000d4e:	e9c5 1200 	strd	r1, r2, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000d52:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000d56:	612a      	str	r2, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8000d58:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 8000d5c:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000d60:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000d64:	f009 fa24 	bl	800a1b0 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8000d68:	4641      	mov	r1, r8
 8000d6a:	4628      	mov	r0, r5
 8000d6c:	f00a fbec 	bl	800b548 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000d70:	4621      	mov	r1, r4
 8000d72:	4628      	mov	r0, r5
 8000d74:	f00a fc08 	bl	800b588 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d78:	f8df c11c 	ldr.w	ip, [pc, #284]	; 8000e98 <main+0x358>
  hspi5.Instance = SPI5;
 8000d7c:	4842      	ldr	r0, [pc, #264]	; (8000e88 <main+0x348>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000d7e:	4d43      	ldr	r5, [pc, #268]	; (8000e8c <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000d80:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d82:	f44f 7282 	mov.w	r2, #260	; 0x104
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8000d86:	f44f 7e00 	mov.w	lr, #512	; 0x200
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d8a:	e9c0 c200 	strd	ip, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8000d8e:	2218      	movs	r2, #24
 8000d90:	e9c0 e206 	strd	lr, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8000d94:	220a      	movs	r2, #10
 8000d96:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8000d98:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000d9c:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8000da0:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8000da4:	f00b fae2 	bl	800c36c <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000da8:	2207      	movs	r2, #7
 8000daa:	9210      	str	r2, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 8000dac:	9212      	str	r2, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000dae:	4a38      	ldr	r2, [pc, #224]	; (8000e90 <main+0x350>)
 8000db0:	602a      	str	r2, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8000db2:	2040      	movs	r0, #64	; 0x40
 8000db4:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8000db8:	e9c5 0205 	strd	r0, r2, [r5, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8000dbc:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8000dc0:	622a      	str	r2, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000dc2:	a90f      	add	r1, sp, #60	; 0x3c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000dc4:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000dc8:	4628      	mov	r0, r5
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8000dca:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8000dce:	e9c5 a803 	strd	sl, r8, [r5, #12]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000dd2:	62aa      	str	r2, [r5, #40]	; 0x28
  SdramTiming.RPDelay = 2;
 8000dd4:	e9cd b713 	strd	fp, r7, [sp, #76]	; 0x4c
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000dd8:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8000dda:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 8000ddc:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  SdramTiming.LoadToActiveDelay = 2;
 8000de0:	970f      	str	r7, [sp, #60]	; 0x3c
  SdramTiming.RCDDelay = 2;
 8000de2:	9715      	str	r7, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000de4:	f00b f9d0 	bl	800c188 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000de8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000dec:	a90b      	add	r1, sp, #44	; 0x2c
 8000dee:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000df0:	e9cd 690b 	strd	r6, r9, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000df4:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 8000df8:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dfa:	f00b f9e7 	bl	800c1cc <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8000dfe:	4630      	mov	r0, r6
 8000e00:	f008 fb9a 	bl	8009538 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e04:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e08:	a90b      	add	r1, sp, #44	; 0x2c
 8000e0a:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e0c:	e9cd 790b 	strd	r7, r9, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000e10:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e14:	f00b f9da 	bl	800c1cc <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e18:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e1c:	a90b      	add	r1, sp, #44	; 0x2c
 8000e1e:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e20:	e9cd b90b 	strd	fp, r9, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000e24:	e9cd a40d 	strd	sl, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e28:	f00b f9d0 	bl	800c1cc <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8000e2c:	f44f 720c 	mov.w	r2, #560	; 0x230
 8000e30:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8000e32:	9908      	ldr	r1, [sp, #32]
 8000e34:	910e      	str	r1, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e36:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e3a:	a90b      	add	r1, sp, #44	; 0x2c
 8000e3c:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e3e:	e9cd a90b 	strd	sl, r9, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 8000e42:	960d      	str	r6, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e44:	f00b f9c2 	bl	800c1cc <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8000e48:	4628      	mov	r0, r5
 8000e4a:	f240 516a 	movw	r1, #1386	; 0x56a
  hltdc.Instance = LTDC;
 8000e4e:	4d11      	ldr	r5, [pc, #68]	; (8000e94 <main+0x354>)
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8000e50:	f00b f9da 	bl	800c208 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000e54:	4621      	mov	r1, r4
 8000e56:	e021      	b.n	8000e9c <main+0x35c>
 8000e58:	40023800 	.word	0x40023800
 8000e5c:	40021000 	.word	0x40021000
 8000e60:	200001b4 	.word	0x200001b4
 8000e64:	40020800 	.word	0x40020800
 8000e68:	40020000 	.word	0x40020000
 8000e6c:	40020400 	.word	0x40020400
 8000e70:	40020c00 	.word	0x40020c00
 8000e74:	40021800 	.word	0x40021800
 8000e78:	200001ac 	.word	0x200001ac
 8000e7c:	40023000 	.word	0x40023000
 8000e80:	40005c00 	.word	0x40005c00
 8000e84:	000186a0 	.word	0x000186a0
 8000e88:	200002e4 	.word	0x200002e4
 8000e8c:	200002b0 	.word	0x200002b0
 8000e90:	a0000140 	.word	0xa0000140
 8000e94:	20000208 	.word	0x20000208
 8000e98:	40015000 	.word	0x40015000
 8000e9c:	2234      	movs	r2, #52	; 0x34
 8000e9e:	a80f      	add	r0, sp, #60	; 0x3c
 8000ea0:	f02a fbab 	bl	802b5fa <memset>
  hltdc.Instance = LTDC;
 8000ea4:	4a6f      	ldr	r2, [pc, #444]	; (8001064 <main+0x524>)
 8000ea6:	602a      	str	r2, [r5, #0]
  hltdc.Init.AccumulatedHBP = 29;
 8000ea8:	221d      	movs	r2, #29
  hltdc.Init.AccumulatedVBP = 3;
 8000eaa:	f8c5 b020 	str.w	fp, [r5, #32]
  hltdc.Init.AccumulatedHBP = 29;
 8000eae:	61ea      	str	r2, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8000eb0:	f240 1b0d 	movw	fp, #269	; 0x10d
 8000eb4:	f240 1243 	movw	r2, #323	; 0x143
  hltdc.Init.TotalHeigh = 327;
 8000eb8:	f240 1317 	movw	r3, #279	; 0x117
  hltdc.Init.AccumulatedActiveH = 323;
 8000ebc:	e9c5 b209 	strd	fp, r2, [r5, #36]	; 0x24
  hltdc.Init.Backcolor.Blue = 0;
 8000ec0:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.TotalHeigh = 327;
 8000ec2:	f240 1247 	movw	r2, #327	; 0x147
  hltdc.Init.HorizontalSync = 9;
 8000ec6:	f04f 0909 	mov.w	r9, #9
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000eca:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8000ecc:	e9c5 320b 	strd	r3, r2, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8000ed0:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8000ed2:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000ed6:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.Backcolor.Red = 0;
 8000eda:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.HorizontalSync = 9;
 8000ede:	f8c5 9014 	str.w	r9, [r5, #20]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000ee2:	f00a fb75 	bl	800b5d0 <HAL_LTDC_Init>
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000ee6:	4628      	mov	r0, r5
  pLayerCfg.WindowX1 = 240;
 8000ee8:	25f0      	movs	r5, #240	; 0xf0
 8000eea:	9510      	str	r5, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 8000eec:	9519      	str	r5, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 8000eee:	f44f 75a0 	mov.w	r5, #320	; 0x140
 8000ef2:	9512      	str	r5, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 8000ef4:	951a      	str	r5, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 8000ef6:	25ff      	movs	r5, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000ef8:	f44f 6c80 	mov.w	ip, #1024	; 0x400
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000efc:	a90f      	add	r1, sp, #60	; 0x3c
 8000efe:	4622      	mov	r2, r4
  pLayerCfg.Alpha = 255;
 8000f00:	9514      	str	r5, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000f02:	2505      	movs	r5, #5
 8000f04:	e9cd c516 	strd	ip, r5, [sp, #88]	; 0x58
  pLayerCfg.WindowX0 = 0;
 8000f08:	940f      	str	r4, [sp, #60]	; 0x3c
  LcdDrv = &ili9341_drv;
 8000f0a:	4d57      	ldr	r5, [pc, #348]	; (8001068 <main+0x528>)
  pLayerCfg.WindowY0 = 0;
 8000f0c:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000f0e:	9713      	str	r7, [sp, #76]	; 0x4c
  pLayerCfg.Alpha0 = 0;
 8000f10:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8000f12:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8000f14:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8000f18:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000f1c:	f00a fc2e 	bl	800b77c <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8000f20:	4a52      	ldr	r2, [pc, #328]	; (800106c <main+0x52c>)
 8000f22:	602a      	str	r2, [r5, #0]
  LcdDrv->Init();
 8000f24:	6812      	ldr	r2, [r2, #0]
  htim1.Instance = TIM1;
 8000f26:	4e52      	ldr	r6, [pc, #328]	; (8001070 <main+0x530>)
  LcdDrv->Init();
 8000f28:	4790      	blx	r2
  LcdDrv->DisplayOff();
 8000f2a:	682a      	ldr	r2, [r5, #0]
  htim3.Instance = TIM3;
 8000f2c:	4d51      	ldr	r5, [pc, #324]	; (8001074 <main+0x534>)
  LcdDrv->DisplayOff();
 8000f2e:	68d2      	ldr	r2, [r2, #12]
 8000f30:	4790      	blx	r2
  htim1.Init.Period = 65535;
 8000f32:	f64f 7aff 	movw	sl, #65535	; 0xffff
  htim1.Instance = TIM1;
 8000f36:	4a50      	ldr	r2, [pc, #320]	; (8001078 <main+0x538>)
 8000f38:	6032      	str	r2, [r6, #0]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8000f3a:	4630      	mov	r0, r6
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000f3c:	e9c6 4401 	strd	r4, r4, [r6, #4]
  htim1.Init.RepetitionCounter = 0;
 8000f40:	e9c6 4404 	strd	r4, r4, [r6, #16]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000f44:	61b4      	str	r4, [r6, #24]
  htim1.Init.Period = 65535;
 8000f46:	f8c6 a00c 	str.w	sl, [r6, #12]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f4a:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000f4e:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000f52:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f56:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8000f58:	f00b fdf8 	bl	800cb4c <HAL_TIM_Base_Init>
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8000f5c:	a90f      	add	r1, sp, #60	; 0x3c
 8000f5e:	4630      	mov	r0, r6
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8000f60:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8000f64:	f00b ff6c 	bl	800ce40 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000f68:	a90b      	add	r1, sp, #44	; 0x2c
 8000f6a:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000f6c:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000f70:	f00c f8a4 	bl	800d0bc <HAL_TIMEx_MasterConfigSynchronization>
  htim3.Instance = TIM3;
 8000f74:	4a41      	ldr	r2, [pc, #260]	; (800107c <main+0x53c>)
 8000f76:	602a      	str	r2, [r5, #0]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000f78:	4628      	mov	r0, r5
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000f7a:	e9c5 4401 	strd	r4, r4, [r5, #4]
  htim3.Init.Period = 65535;
 8000f7e:	f8c5 a00c 	str.w	sl, [r5, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000f82:	612c      	str	r4, [r5, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000f84:	61ac      	str	r4, [r5, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000f86:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8000f8a:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f8e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000f92:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8000f96:	9413      	str	r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000f98:	9409      	str	r4, [sp, #36]	; 0x24
 8000f9a:	940a      	str	r4, [sp, #40]	; 0x28
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000f9c:	f00b fdd6 	bl	800cb4c <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000fa0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000fa4:	a90b      	add	r1, sp, #44	; 0x2c
 8000fa6:	4628      	mov	r0, r5
  htim2.Instance = TIM2;
 8000fa8:	4e35      	ldr	r6, [pc, #212]	; (8001080 <main+0x540>)
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000faa:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000fac:	f00b fe98 	bl	800cce0 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8000fb0:	a90f      	add	r1, sp, #60	; 0x3c
 8000fb2:	4628      	mov	r0, r5
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8000fb4:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8000fb8:	f00b ff42 	bl	800ce40 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000fbc:	a909      	add	r1, sp, #36	; 0x24
 8000fbe:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000fc0:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000fc4:	f00c f87a 	bl	800d0bc <HAL_TIMEx_MasterConfigSynchronization>
  htim2.Init.Prescaler = 13124;
 8000fc8:	f04f 4e80 	mov.w	lr, #1073741824	; 0x40000000
 8000fcc:	f243 3244 	movw	r2, #13124	; 0x3344
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8000fd0:	2380      	movs	r3, #128	; 0x80
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000fd2:	4630      	mov	r0, r6
  htim2.Init.Prescaler = 13124;
 8000fd4:	e9c6 e200 	strd	lr, r2, [r6]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8000fd8:	61b3      	str	r3, [r6, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000fda:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000fde:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000fe2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim2.Init.Period = 9;
 8000fe6:	f8c6 900c 	str.w	r9, [r6, #12]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000fea:	60b4      	str	r4, [r6, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000fec:	6134      	str	r4, [r6, #16]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000fee:	f00b fdad 	bl	800cb4c <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000ff2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000ff6:	a90f      	add	r1, sp, #60	; 0x3c
 8000ff8:	4630      	mov	r0, r6
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000ffa:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000ffc:	f00b fe70 	bl	800cce0 <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001000:	a90b      	add	r1, sp, #44	; 0x2c
 8001002:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001004:	e9cd 840b 	strd	r8, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001008:	f00c f858 	bl	800d0bc <HAL_TIMEx_MasterConfigSynchronization>
  MX_TouchGFX_Init();
 800100c:	f000 fdf0 	bl	8001bf0 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001010:	f000 fdec 	bl	8001bec <MX_TouchGFX_PreOSInit>
  gyro_disable();
 8001014:	f7ff fce2 	bl	80009dc <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8001018:	f000 f94c 	bl	80012b4 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 800101c:	f000 f97e 	bl	800131c <MEAS_timer_init>
  osKernelInitialize();
 8001020:	f00c f95e 	bl	800d2e0 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001024:	4a17      	ldr	r2, [pc, #92]	; (8001084 <main+0x544>)
 8001026:	4639      	mov	r1, r7
 8001028:	4640      	mov	r0, r8
 800102a:	f00c fa93 	bl	800d554 <osMessageQueueNew>
 800102e:	4b16      	ldr	r3, [pc, #88]	; (8001088 <main+0x548>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001030:	4a16      	ldr	r2, [pc, #88]	; (800108c <main+0x54c>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001032:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001034:	4621      	mov	r1, r4
 8001036:	4816      	ldr	r0, [pc, #88]	; (8001090 <main+0x550>)
 8001038:	f00c f97e 	bl	800d338 <osThreadNew>
 800103c:	4b15      	ldr	r3, [pc, #84]	; (8001094 <main+0x554>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800103e:	4a16      	ldr	r2, [pc, #88]	; (8001098 <main+0x558>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001040:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001042:	4621      	mov	r1, r4
 8001044:	4815      	ldr	r0, [pc, #84]	; (800109c <main+0x55c>)
 8001046:	f00c f977 	bl	800d338 <osThreadNew>
 800104a:	4b15      	ldr	r3, [pc, #84]	; (80010a0 <main+0x560>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800104c:	4a15      	ldr	r2, [pc, #84]	; (80010a4 <main+0x564>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800104e:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001050:	4621      	mov	r1, r4
 8001052:	4815      	ldr	r0, [pc, #84]	; (80010a8 <main+0x568>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001054:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001056:	f00c f96f 	bl	800d338 <osThreadNew>
 800105a:	4b14      	ldr	r3, [pc, #80]	; (80010ac <main+0x56c>)
 800105c:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800105e:	f00c f951 	bl	800d304 <osKernelStart>
  while (1)
 8001062:	e7fe      	b.n	8001062 <main+0x522>
 8001064:	40016800 	.word	0x40016800
 8001068:	2000019c 	.word	0x2000019c
 800106c:	20000018 	.word	0x20000018
 8001070:	2000033c 	.word	0x2000033c
 8001074:	200003cc 	.word	0x200003cc
 8001078:	40010000 	.word	0x40010000
 800107c:	40000400 	.word	0x40000400
 8001080:	20000384 	.word	0x20000384
 8001084:	0802c3a0 	.word	0x0802c3a0
 8001088:	200001a0 	.word	0x200001a0
 800108c:	0802c3dc 	.word	0x0802c3dc
 8001090:	08000971 	.word	0x08000971
 8001094:	200001a8 	.word	0x200001a8
 8001098:	0802c37c 	.word	0x0802c37c
 800109c:	08001c01 	.word	0x08001c01
 80010a0:	20000198 	.word	0x20000198
 80010a4:	0802c3b8 	.word	0x0802c3b8
 80010a8:	0800097d 	.word	0x0800097d
 80010ac:	200001a4 	.word	0x200001a4

080010b0 <IOE_Init>:
 80010b0:	4770      	bx	lr
 80010b2:	bf00      	nop

080010b4 <IOE_ITConfig>:
 80010b4:	4770      	bx	lr
 80010b6:	bf00      	nop

080010b8 <IOE_Write>:
{
 80010b8:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80010ba:	4c09      	ldr	r4, [pc, #36]	; (80010e0 <IOE_Write+0x28>)
{
 80010bc:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80010be:	6824      	ldr	r4, [r4, #0]
 80010c0:	9402      	str	r4, [sp, #8]
{
 80010c2:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80010c4:	2301      	movs	r3, #1
 80010c6:	f88d 4017 	strb.w	r4, [sp, #23]
 80010ca:	f10d 0417 	add.w	r4, sp, #23
 80010ce:	460a      	mov	r2, r1
 80010d0:	9301      	str	r3, [sp, #4]
 80010d2:	4601      	mov	r1, r0
 80010d4:	9400      	str	r4, [sp, #0]
 80010d6:	4803      	ldr	r0, [pc, #12]	; (80010e4 <IOE_Write+0x2c>)
 80010d8:	f009 f932 	bl	800a340 <HAL_I2C_Mem_Write>
}
 80010dc:	b006      	add	sp, #24
 80010de:	bd10      	pop	{r4, pc}
 80010e0:	20000004 	.word	0x20000004
 80010e4:	200001b4 	.word	0x200001b4

080010e8 <IOE_Read>:
{
 80010e8:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80010ea:	4b0b      	ldr	r3, [pc, #44]	; (8001118 <IOE_Read+0x30>)
{
 80010ec:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80010ee:	681b      	ldr	r3, [r3, #0]
 80010f0:	9302      	str	r3, [sp, #8]
{
 80010f2:	4684      	mov	ip, r0
 80010f4:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80010f6:	2301      	movs	r3, #1
 80010f8:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 80010fc:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80010fe:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 8001102:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001106:	4661      	mov	r1, ip
 8001108:	4804      	ldr	r0, [pc, #16]	; (800111c <IOE_Read+0x34>)
 800110a:	f009 fa0b 	bl	800a524 <HAL_I2C_Mem_Read>
}
 800110e:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001112:	b007      	add	sp, #28
 8001114:	f85d fb04 	ldr.w	pc, [sp], #4
 8001118:	20000004 	.word	0x20000004
 800111c:	200001b4 	.word	0x200001b4

08001120 <IOE_ReadMultiple>:
{
 8001120:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001122:	4c09      	ldr	r4, [pc, #36]	; (8001148 <IOE_ReadMultiple+0x28>)
{
 8001124:	b084      	sub	sp, #16
 8001126:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001128:	6820      	ldr	r0, [r4, #0]
 800112a:	9002      	str	r0, [sp, #8]
 800112c:	e9cd 2300 	strd	r2, r3, [sp]
 8001130:	4806      	ldr	r0, [pc, #24]	; (800114c <IOE_ReadMultiple+0x2c>)
 8001132:	460a      	mov	r2, r1
 8001134:	2301      	movs	r3, #1
 8001136:	4661      	mov	r1, ip
 8001138:	f009 f9f4 	bl	800a524 <HAL_I2C_Mem_Read>
}
 800113c:	3800      	subs	r0, #0
 800113e:	bf18      	it	ne
 8001140:	2001      	movne	r0, #1
 8001142:	b004      	add	sp, #16
 8001144:	bd10      	pop	{r4, pc}
 8001146:	bf00      	nop
 8001148:	20000004 	.word	0x20000004
 800114c:	200001b4 	.word	0x200001b4

08001150 <IOE_Delay>:
 8001150:	f008 b9f2 	b.w	8009538 <HAL_Delay>

08001154 <LCD_IO_Init>:
{
 8001154:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001156:	4806      	ldr	r0, [pc, #24]	; (8001170 <LCD_IO_Init+0x1c>)
 8001158:	2200      	movs	r2, #0
 800115a:	2104      	movs	r1, #4
 800115c:	f008 fdc2 	bl	8009ce4 <HAL_GPIO_WritePin>
}
 8001160:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001164:	4802      	ldr	r0, [pc, #8]	; (8001170 <LCD_IO_Init+0x1c>)
 8001166:	2201      	movs	r2, #1
 8001168:	2104      	movs	r1, #4
 800116a:	f008 bdbb 	b.w	8009ce4 <HAL_GPIO_WritePin>
 800116e:	bf00      	nop
 8001170:	40020800 	.word	0x40020800

08001174 <LCD_IO_WriteData>:
{
 8001174:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001176:	4d10      	ldr	r5, [pc, #64]	; (80011b8 <LCD_IO_WriteData+0x44>)
{
 8001178:	b083      	sub	sp, #12
 800117a:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800117c:	2201      	movs	r2, #1
 800117e:	480f      	ldr	r0, [pc, #60]	; (80011bc <LCD_IO_WriteData+0x48>)
 8001180:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001184:	f008 fdae 	bl	8009ce4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001188:	4628      	mov	r0, r5
 800118a:	2200      	movs	r2, #0
 800118c:	2104      	movs	r1, #4
 800118e:	f008 fda9 	bl	8009ce4 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001192:	4b0b      	ldr	r3, [pc, #44]	; (80011c0 <LCD_IO_WriteData+0x4c>)
 8001194:	480b      	ldr	r0, [pc, #44]	; (80011c4 <LCD_IO_WriteData+0x50>)
 8001196:	681b      	ldr	r3, [r3, #0]
 8001198:	f8ad 4006 	strh.w	r4, [sp, #6]
 800119c:	f10d 0106 	add.w	r1, sp, #6
 80011a0:	2201      	movs	r2, #1
 80011a2:	f00b f945 	bl	800c430 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80011a6:	2201      	movs	r2, #1
 80011a8:	2104      	movs	r1, #4
 80011aa:	4628      	mov	r0, r5
}
 80011ac:	b003      	add	sp, #12
 80011ae:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80011b2:	f008 bd97 	b.w	8009ce4 <HAL_GPIO_WritePin>
 80011b6:	bf00      	nop
 80011b8:	40020800 	.word	0x40020800
 80011bc:	40020c00 	.word	0x40020c00
 80011c0:	20000008 	.word	0x20000008
 80011c4:	200002e4 	.word	0x200002e4

080011c8 <LCD_IO_WriteReg>:
{
 80011c8:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011ca:	4d10      	ldr	r5, [pc, #64]	; (800120c <LCD_IO_WriteReg+0x44>)
{
 80011cc:	b083      	sub	sp, #12
 80011ce:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80011d0:	2200      	movs	r2, #0
 80011d2:	480f      	ldr	r0, [pc, #60]	; (8001210 <LCD_IO_WriteReg+0x48>)
 80011d4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011d8:	f008 fd84 	bl	8009ce4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011dc:	4628      	mov	r0, r5
 80011de:	2200      	movs	r2, #0
 80011e0:	2104      	movs	r1, #4
 80011e2:	f008 fd7f 	bl	8009ce4 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80011e6:	4b0b      	ldr	r3, [pc, #44]	; (8001214 <LCD_IO_WriteReg+0x4c>)
 80011e8:	480b      	ldr	r0, [pc, #44]	; (8001218 <LCD_IO_WriteReg+0x50>)
 80011ea:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 80011ec:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80011f0:	f10d 0106 	add.w	r1, sp, #6
 80011f4:	2201      	movs	r2, #1
 80011f6:	f00b f91b 	bl	800c430 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80011fa:	2201      	movs	r2, #1
 80011fc:	2104      	movs	r1, #4
 80011fe:	4628      	mov	r0, r5
}
 8001200:	b003      	add	sp, #12
 8001202:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001206:	f008 bd6d 	b.w	8009ce4 <HAL_GPIO_WritePin>
 800120a:	bf00      	nop
 800120c:	40020800 	.word	0x40020800
 8001210:	40020c00 	.word	0x40020c00
 8001214:	20000008 	.word	0x20000008
 8001218:	200002e4 	.word	0x200002e4

0800121c <LCD_IO_ReadData>:
{
 800121c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001220:	4e19      	ldr	r6, [pc, #100]	; (8001288 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001222:	4f1a      	ldr	r7, [pc, #104]	; (800128c <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001224:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001290 <LCD_IO_ReadData+0x74>
 8001228:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001294 <LCD_IO_ReadData+0x78>
{
 800122c:	b083      	sub	sp, #12
 800122e:	460c      	mov	r4, r1
 8001230:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001232:	2200      	movs	r2, #0
 8001234:	4630      	mov	r0, r6
 8001236:	2104      	movs	r1, #4
 8001238:	f008 fd54 	bl	8009ce4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800123c:	4638      	mov	r0, r7
 800123e:	2200      	movs	r2, #0
 8001240:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001244:	f008 fd4e 	bl	8009ce4 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001248:	f8d9 3000 	ldr.w	r3, [r9]
 800124c:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001250:	a901      	add	r1, sp, #4
 8001252:	2201      	movs	r2, #1
 8001254:	4640      	mov	r0, r8
 8001256:	f00b f8eb 	bl	800c430 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 800125a:	f8d9 3000 	ldr.w	r3, [r9]
 800125e:	4622      	mov	r2, r4
 8001260:	a901      	add	r1, sp, #4
 8001262:	4640      	mov	r0, r8
 8001264:	f00b fb8c 	bl	800c980 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001268:	4638      	mov	r0, r7
 800126a:	2201      	movs	r2, #1
 800126c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001270:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001272:	f008 fd37 	bl	8009ce4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001276:	4630      	mov	r0, r6
 8001278:	2201      	movs	r2, #1
 800127a:	2104      	movs	r1, #4
 800127c:	f008 fd32 	bl	8009ce4 <HAL_GPIO_WritePin>
}
 8001280:	4620      	mov	r0, r4
 8001282:	b003      	add	sp, #12
 8001284:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001288:	40020800 	.word	0x40020800
 800128c:	40020c00 	.word	0x40020c00
 8001290:	20000008 	.word	0x20000008
 8001294:	200002e4 	.word	0x200002e4

08001298 <LCD_Delay>:
  HAL_Delay(Delay);
 8001298:	f008 b94e 	b.w	8009538 <HAL_Delay>

0800129c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 800129c:	4b03      	ldr	r3, [pc, #12]	; (80012ac <HAL_TIM_PeriodElapsedCallback+0x10>)
 800129e:	6802      	ldr	r2, [r0, #0]
 80012a0:	429a      	cmp	r2, r3
 80012a2:	d000      	beq.n	80012a6 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80012a4:	4770      	bx	lr
    HAL_IncTick();
 80012a6:	f008 b935 	b.w	8009514 <HAL_IncTick>
 80012aa:	bf00      	nop
 80012ac:	40001000 	.word	0x40001000

080012b0 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80012b0:	4770      	bx	lr
 80012b2:	bf00      	nop

080012b4 <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 80012b4:	b410      	push	{r4}
 80012b6:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80012b8:	4b15      	ldr	r3, [pc, #84]	; (8001310 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80012ba:	4916      	ldr	r1, [pc, #88]	; (8001314 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80012bc:	2400      	movs	r4, #0
 80012be:	9400      	str	r4, [sp, #0]
 80012c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80012c2:	f042 0220 	orr.w	r2, r2, #32
 80012c6:	631a      	str	r2, [r3, #48]	; 0x30
 80012c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80012ca:	f002 0220 	and.w	r2, r2, #32
 80012ce:	9200      	str	r2, [sp, #0]
 80012d0:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80012d2:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 80012d4:	4a10      	ldr	r2, [pc, #64]	; (8001318 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80012d6:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 80012da:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 80012dc:	6808      	ldr	r0, [r1, #0]
 80012de:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 80012e2:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80012e4:	9401      	str	r4, [sp, #4]
 80012e6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80012e8:	f041 0104 	orr.w	r1, r1, #4
 80012ec:	6319      	str	r1, [r3, #48]	; 0x30
 80012ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012f0:	f003 0304 	and.w	r3, r3, #4
 80012f4:	9301      	str	r3, [sp, #4]
 80012f6:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 80012f8:	6813      	ldr	r3, [r2, #0]
 80012fa:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 80012fe:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001300:	6813      	ldr	r3, [r2, #0]
 8001302:	f043 030c 	orr.w	r3, r3, #12
 8001306:	6013      	str	r3, [r2, #0]
}
 8001308:	b003      	add	sp, #12
 800130a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800130e:	4770      	bx	lr
 8001310:	40023800 	.word	0x40023800
 8001314:	40021400 	.word	0x40021400
 8001318:	40020800 	.word	0x40020800

0800131c <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 800131c:	b410      	push	{r4}
 800131e:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001320:	4a0e      	ldr	r2, [pc, #56]	; (800135c <MEAS_timer_init+0x40>)
 8001322:	2000      	movs	r0, #0
 8001324:	9001      	str	r0, [sp, #4]
 8001326:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001328:	f041 0101 	orr.w	r1, r1, #1
 800132c:	6411      	str	r1, [r2, #64]	; 0x40
 800132e:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001330:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001334:	f002 0201 	and.w	r2, r2, #1
 8001338:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 800133a:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 800133e:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001340:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001342:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001344:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 8001346:	685a      	ldr	r2, [r3, #4]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001348:	4905      	ldr	r1, [pc, #20]	; (8001360 <MEAS_timer_init+0x44>)
 800134a:	f042 0220 	orr.w	r2, r2, #32
 800134e:	605a      	str	r2, [r3, #4]
 8001350:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 8001354:	b003      	add	sp, #12
 8001356:	f85d 4b04 	ldr.w	r4, [sp], #4
 800135a:	4770      	bx	lr
 800135c:	40023800 	.word	0x40023800
 8001360:	e000e100 	.word	0xe000e100

08001364 <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 8001364:	b410      	push	{r4}
 8001366:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001368:	4a36      	ldr	r2, [pc, #216]	; (8001444 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 800136a:	4b37      	ldr	r3, [pc, #220]	; (8001448 <MEAS_ADC3_scan_init+0xe4>)
 800136c:	4c37      	ldr	r4, [pc, #220]	; (800144c <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 800136e:	2100      	movs	r1, #0
 8001370:	9100      	str	r1, [sp, #0]
 8001372:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001374:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 8001378:	6450      	str	r0, [r2, #68]	; 0x44
 800137a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800137c:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 8001380:	9000      	str	r0, [sp, #0]
 8001382:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001384:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8001386:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 800138a:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 800138c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800138e:	f040 0004 	orr.w	r0, r0, #4
 8001392:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8001394:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001396:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 800139a:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 800139c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800139e:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 80013a2:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 80013a4:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80013a6:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 80013aa:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 80013ac:	6858      	ldr	r0, [r3, #4]
 80013ae:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 80013b2:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 80013b4:	6898      	ldr	r0, [r3, #8]
 80013b6:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 80013ba:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 80013bc:	6898      	ldr	r0, [r3, #8]
 80013be:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 80013c2:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 80013c4:	6898      	ldr	r0, [r3, #8]
 80013c6:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 80013ca:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 80013cc:	9101      	str	r1, [sp, #4]
 80013ce:	6b10      	ldr	r0, [r2, #48]	; 0x30
 80013d0:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 80013d4:	6310      	str	r0, [r2, #48]	; 0x30
 80013d6:	6b12      	ldr	r2, [r2, #48]	; 0x30
 80013d8:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 80013dc:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 80013de:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 80013e2:	9a01      	ldr	r2, [sp, #4]
 80013e4:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 80013e8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80013ea:	f022 0201 	bic.w	r2, r2, #1
 80013ee:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN)
 80013f0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80013f2:	07d2      	lsls	r2, r2, #31
 80013f4:	d4fc      	bmi.n	80013f0 <MEAS_ADC3_scan_init+0x8c>
    {

    }  // Wait for DMA to finish
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 80013f6:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 80013f8:	4815      	ldr	r0, [pc, #84]	; (8001450 <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 80013fa:	4916      	ldr	r1, [pc, #88]	; (8001454 <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 80013fc:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001400:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 8001402:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001404:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001408:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 800140a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800140c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001410:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 8001412:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001414:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001418:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 800141a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800141c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001420:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 8001422:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001424:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001428:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 800142a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 800142c:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001430:	f042 0210 	orr.w	r2, r2, #16
 8001434:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001436:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001438:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 800143a:	6359      	str	r1, [r3, #52]	; 0x34
}
 800143c:	b003      	add	sp, #12
 800143e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001442:	4770      	bx	lr
 8001444:	40023800 	.word	0x40023800
 8001448:	40012200 	.word	0x40012200
 800144c:	e000e100 	.word	0xe000e100
 8001450:	4001224c 	.word	0x4001224c
 8001454:	20000414 	.word	0x20000414

08001458 <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8001458:	4b1b      	ldr	r3, [pc, #108]	; (80014c8 <DMA2_Stream1_IRQHandler+0x70>)
 800145a:	681a      	ldr	r2, [r3, #0]
 800145c:	0511      	lsls	r1, r2, #20
 800145e:	d400      	bmi.n	8001462 <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 8001460:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001462:	4a1a      	ldr	r2, [pc, #104]	; (80014cc <DMA2_Stream1_IRQHandler+0x74>)
 8001464:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8001468:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800146c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001470:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001474:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8001478:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800147a:	f022 0201 	bic.w	r2, r2, #1
 800147e:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001480:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001482:	07d2      	lsls	r2, r2, #31
 8001484:	d4fc      	bmi.n	8001480 <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001486:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001488:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 800148c:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8001490:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001492:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001494:	490e      	ldr	r1, [pc, #56]	; (80014d0 <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001496:	f023 0301 	bic.w	r3, r3, #1
 800149a:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 800149c:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 800149e:	4b0d      	ldr	r3, [pc, #52]	; (80014d4 <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 80014a0:	f020 0001 	bic.w	r0, r0, #1
 80014a4:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 80014a6:	6888      	ldr	r0, [r1, #8]
 80014a8:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 80014ac:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 80014ae:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80014b0:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 80014b4:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 80014b6:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80014b8:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 80014bc:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 80014be:	6813      	ldr	r3, [r2, #0]
 80014c0:	f023 0301 	bic.w	r3, r3, #1
 80014c4:	6013      	str	r3, [r2, #0]
}
 80014c6:	4770      	bx	lr
 80014c8:	40026400 	.word	0x40026400
 80014cc:	e000e100 	.word	0xe000e100
 80014d0:	40012200 	.word	0x40012200
 80014d4:	40023800 	.word	0x40023800

080014d8 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 80014d8:	b510      	push	{r4, lr}
        buffer[i] = 0;
 80014da:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80014de:	2100      	movs	r1, #0
 80014e0:	480f      	ldr	r0, [pc, #60]	; (8001520 <MEAS_start_measure+0x48>)
 80014e2:	f02a f88a 	bl	802b5fa <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 80014e6:	f7ff ff3d 	bl	8001364 <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 80014ea:	4a0e      	ldr	r2, [pc, #56]	; (8001524 <MEAS_start_measure+0x4c>)
 80014ec:	490e      	ldr	r1, [pc, #56]	; (8001528 <MEAS_start_measure+0x50>)
 80014ee:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80014f0:	480e      	ldr	r0, [pc, #56]	; (800152c <MEAS_start_measure+0x54>)
 80014f2:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 80014f6:	f043 0301 	orr.w	r3, r3, #1
 80014fa:	6293      	str	r3, [r2, #40]	; 0x28
 80014fc:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001500:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001502:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001504:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001508:	f043 0301 	orr.w	r3, r3, #1
 800150c:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 800150e:	680b      	ldr	r3, [r1, #0]
 8001510:	f043 0301 	orr.w	r3, r3, #1
 8001514:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001516:	6a93      	ldr	r3, [r2, #40]	; 0x28
 8001518:	07db      	lsls	r3, r3, #31
 800151a:	d4fc      	bmi.n	8001516 <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 800151c:	4800      	ldr	r0, [pc, #0]	; (8001520 <MEAS_start_measure+0x48>)
 800151e:	bd10      	pop	{r4, pc}
 8001520:	20000414 	.word	0x20000414
 8001524:	40026400 	.word	0x40026400
 8001528:	e000e100 	.word	0xe000e100
 800152c:	40012200 	.word	0x40012200

08001530 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8001530:	2004      	movs	r0, #4
 8001532:	4770      	bx	lr

08001534 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 8001534:	2040      	movs	r0, #64	; 0x40
 8001536:	4770      	bx	lr

08001538 <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 8001538:	f44f 7020 	mov.w	r0, #640	; 0x280
 800153c:	4770      	bx	lr
 800153e:	bf00      	nop

08001540 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001540:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001542:	4b0e      	ldr	r3, [pc, #56]	; (800157c <HAL_MspInit+0x3c>)
 8001544:	2200      	movs	r2, #0
 8001546:	9200      	str	r2, [sp, #0]
 8001548:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800154a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800154e:	6459      	str	r1, [r3, #68]	; 0x44
 8001550:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001552:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8001556:	9000      	str	r0, [sp, #0]
 8001558:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800155a:	9201      	str	r2, [sp, #4]
 800155c:	6c18      	ldr	r0, [r3, #64]	; 0x40
 800155e:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001562:	6418      	str	r0, [r3, #64]	; 0x40
 8001564:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001566:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800156a:	9301      	str	r3, [sp, #4]
 800156c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800156e:	210f      	movs	r1, #15
 8001570:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001574:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001576:	f008 b803 	b.w	8009580 <HAL_NVIC_SetPriority>
 800157a:	bf00      	nop
 800157c:	40023800 	.word	0x40023800

08001580 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001580:	4b0b      	ldr	r3, [pc, #44]	; (80015b0 <HAL_CRC_MspInit+0x30>)
 8001582:	6802      	ldr	r2, [r0, #0]
 8001584:	429a      	cmp	r2, r3
 8001586:	d000      	beq.n	800158a <HAL_CRC_MspInit+0xa>
 8001588:	4770      	bx	lr
{
 800158a:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800158c:	2200      	movs	r2, #0
 800158e:	9201      	str	r2, [sp, #4]
 8001590:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001594:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001598:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 800159c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80015a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015a2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80015a6:	9301      	str	r3, [sp, #4]
 80015a8:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80015aa:	b002      	add	sp, #8
 80015ac:	4770      	bx	lr
 80015ae:	bf00      	nop
 80015b0:	40023000 	.word	0x40023000

080015b4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80015b4:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 80015b8:	4b2e      	ldr	r3, [pc, #184]	; (8001674 <HAL_I2C_MspInit+0xc0>)
 80015ba:	6802      	ldr	r2, [r0, #0]
{
 80015bc:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015be:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 80015c0:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015c2:	e9cd 4404 	strd	r4, r4, [sp, #16]
 80015c6:	e9cd 4406 	strd	r4, r4, [sp, #24]
 80015ca:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 80015cc:	d002      	beq.n	80015d4 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 80015ce:	b00a      	add	sp, #40	; 0x28
 80015d0:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80015d4:	4d28      	ldr	r5, [pc, #160]	; (8001678 <HAL_I2C_MspInit+0xc4>)
 80015d6:	9401      	str	r4, [sp, #4]
 80015d8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015da:	4828      	ldr	r0, [pc, #160]	; (800167c <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80015dc:	f043 0304 	orr.w	r3, r3, #4
 80015e0:	632b      	str	r3, [r5, #48]	; 0x30
 80015e2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80015e4:	f003 0304 	and.w	r3, r3, #4
 80015e8:	9301      	str	r3, [sp, #4]
 80015ea:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80015ec:	9402      	str	r4, [sp, #8]
 80015ee:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80015f0:	f043 0301 	orr.w	r3, r3, #1
 80015f4:	632b      	str	r3, [r5, #48]	; 0x30
 80015f6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80015f8:	f003 0301 	and.w	r3, r3, #1
 80015fc:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 80015fe:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001602:	f04f 0801 	mov.w	r8, #1
 8001606:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800160a:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800160c:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 800160e:	2312      	movs	r3, #18
 8001610:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001614:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001618:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800161a:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800161c:	f008 fa1e 	bl	8009a5c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001620:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001622:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001626:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001628:	4815      	ldr	r0, [pc, #84]	; (8001680 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800162a:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 800162c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001630:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001634:	f008 fa12 	bl	8009a5c <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001638:	9403      	str	r4, [sp, #12]
 800163a:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800163c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001640:	642b      	str	r3, [r5, #64]	; 0x40
 8001642:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001644:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001648:	4622      	mov	r2, r4
 800164a:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 800164c:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 800164e:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001650:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001652:	f007 ff95 	bl	8009580 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8001656:	2048      	movs	r0, #72	; 0x48
 8001658:	f007 ffd0 	bl	80095fc <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 800165c:	6a2b      	ldr	r3, [r5, #32]
 800165e:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001662:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001664:	6a2b      	ldr	r3, [r5, #32]
 8001666:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800166a:	622b      	str	r3, [r5, #32]
}
 800166c:	b00a      	add	sp, #40	; 0x28
 800166e:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8001672:	bf00      	nop
 8001674:	40005c00 	.word	0x40005c00
 8001678:	40023800 	.word	0x40023800
 800167c:	40020800 	.word	0x40020800
 8001680:	40020000 	.word	0x40020000

08001684 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001684:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001688:	4604      	mov	r4, r0
 800168a:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800168c:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800168e:	2230      	movs	r2, #48	; 0x30
 8001690:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001692:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8001696:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 800169a:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800169c:	f029 ffad 	bl	802b5fa <memset>
  if(hltdc->Instance==LTDC)
 80016a0:	4b67      	ldr	r3, [pc, #412]	; (8001840 <HAL_LTDC_MspInit+0x1bc>)
 80016a2:	6822      	ldr	r2, [r4, #0]
 80016a4:	429a      	cmp	r2, r3
 80016a6:	d002      	beq.n	80016ae <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 80016a8:	b01a      	add	sp, #104	; 0x68
 80016aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80016ae:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80016b0:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80016b2:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80016b4:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80016b6:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80016b8:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80016bc:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80016be:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80016c0:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80016c2:	f00a fc35 	bl	800bf30 <HAL_RCCEx_PeriphCLKConfig>
 80016c6:	2800      	cmp	r0, #0
 80016c8:	f040 80b7 	bne.w	800183a <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 80016cc:	4b5d      	ldr	r3, [pc, #372]	; (8001844 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80016ce:	485e      	ldr	r0, [pc, #376]	; (8001848 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80016d0:	2400      	movs	r4, #0
 80016d2:	9401      	str	r4, [sp, #4]
 80016d4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80016d6:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80016da:	645a      	str	r2, [r3, #68]	; 0x44
 80016dc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80016de:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 80016e2:	9201      	str	r2, [sp, #4]
 80016e4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80016e6:	9402      	str	r4, [sp, #8]
 80016e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80016ea:	f042 0220 	orr.w	r2, r2, #32
 80016ee:	631a      	str	r2, [r3, #48]	; 0x30
 80016f0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80016f2:	f002 0220 	and.w	r2, r2, #32
 80016f6:	9202      	str	r2, [sp, #8]
 80016f8:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80016fa:	9403      	str	r4, [sp, #12]
 80016fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80016fe:	f042 0201 	orr.w	r2, r2, #1
 8001702:	631a      	str	r2, [r3, #48]	; 0x30
 8001704:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001706:	f002 0201 	and.w	r2, r2, #1
 800170a:	9203      	str	r2, [sp, #12]
 800170c:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800170e:	9404      	str	r4, [sp, #16]
 8001710:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001712:	f042 0202 	orr.w	r2, r2, #2
 8001716:	631a      	str	r2, [r3, #48]	; 0x30
 8001718:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800171a:	f002 0202 	and.w	r2, r2, #2
 800171e:	9204      	str	r2, [sp, #16]
 8001720:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001722:	9405      	str	r4, [sp, #20]
 8001724:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001726:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800172a:	631a      	str	r2, [r3, #48]	; 0x30
 800172c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800172e:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001732:	9205      	str	r2, [sp, #20]
 8001734:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001736:	9406      	str	r4, [sp, #24]
 8001738:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800173a:	f042 0204 	orr.w	r2, r2, #4
 800173e:	631a      	str	r2, [r3, #48]	; 0x30
 8001740:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001742:	f002 0204 	and.w	r2, r2, #4
 8001746:	9206      	str	r2, [sp, #24]
 8001748:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800174a:	9407      	str	r4, [sp, #28]
 800174c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800174e:	f042 0208 	orr.w	r2, r2, #8
 8001752:	631a      	str	r2, [r3, #48]	; 0x30
 8001754:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001756:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 800175a:	2600      	movs	r6, #0
 800175c:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800175e:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001760:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001762:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001764:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001768:	2302      	movs	r3, #2
 800176a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800176e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001772:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001774:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001776:	f008 f971 	bl	8009a5c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800177a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800177c:	f641 0258 	movw	r2, #6232	; 0x1858
 8001780:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001782:	4832      	ldr	r0, [pc, #200]	; (800184c <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001784:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001786:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800178a:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800178e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001792:	f008 f963 	bl	8009a5c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001796:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001798:	2203      	movs	r2, #3
 800179a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800179c:	482c      	ldr	r0, [pc, #176]	; (8001850 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800179e:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80017a2:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80017a6:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017aa:	f008 f957 	bl	8009a5c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017ae:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80017b0:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 80017b4:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017b6:	4826      	ldr	r0, [pc, #152]	; (8001850 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017b8:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80017ba:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80017be:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017c2:	f008 f94b 	bl	8009a5c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80017c6:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80017c8:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 80017cc:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80017ce:	4821      	ldr	r0, [pc, #132]	; (8001854 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017d0:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80017d2:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80017d6:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80017da:	f008 f93f 	bl	8009a5c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80017de:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80017e0:	22c0      	movs	r2, #192	; 0xc0
 80017e2:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80017e4:	481c      	ldr	r0, [pc, #112]	; (8001858 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017e6:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80017e8:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80017ec:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80017f0:	f008 f934 	bl	8009a5c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80017f4:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80017f6:	2208      	movs	r2, #8
 80017f8:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80017fa:	4818      	ldr	r0, [pc, #96]	; (800185c <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017fc:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80017fe:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001802:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001806:	f008 f929 	bl	8009a5c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800180a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800180c:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800180e:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001812:	4810      	ldr	r0, [pc, #64]	; (8001854 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001814:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001818:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800181c:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001820:	f008 f91c 	bl	8009a5c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001824:	4622      	mov	r2, r4
 8001826:	2105      	movs	r1, #5
 8001828:	2058      	movs	r0, #88	; 0x58
 800182a:	f007 fea9 	bl	8009580 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800182e:	2058      	movs	r0, #88	; 0x58
 8001830:	f007 fee4 	bl	80095fc <HAL_NVIC_EnableIRQ>
}
 8001834:	b01a      	add	sp, #104	; 0x68
 8001836:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 800183a:	f7ff fd39 	bl	80012b0 <Error_Handler>
 800183e:	e745      	b.n	80016cc <HAL_LTDC_MspInit+0x48>
 8001840:	40016800 	.word	0x40016800
 8001844:	40023800 	.word	0x40023800
 8001848:	40021400 	.word	0x40021400
 800184c:	40020000 	.word	0x40020000
 8001850:	40020400 	.word	0x40020400
 8001854:	40021800 	.word	0x40021800
 8001858:	40020800 	.word	0x40020800
 800185c:	40020c00 	.word	0x40020c00

08001860 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001860:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 8001862:	4a1b      	ldr	r2, [pc, #108]	; (80018d0 <HAL_SPI_MspInit+0x70>)
 8001864:	6801      	ldr	r1, [r0, #0]
{
 8001866:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001868:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 800186a:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800186c:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001870:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8001874:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 8001876:	d001      	beq.n	800187c <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001878:	b008      	add	sp, #32
 800187a:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 800187c:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8001880:	9300      	str	r3, [sp, #0]
 8001882:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001884:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8001888:	6450      	str	r0, [r2, #68]	; 0x44
 800188a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800188c:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8001890:	9000      	str	r0, [sp, #0]
 8001892:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001894:	9301      	str	r3, [sp, #4]
 8001896:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001898:	480e      	ldr	r0, [pc, #56]	; (80018d4 <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800189a:	f043 0320 	orr.w	r3, r3, #32
 800189e:	6313      	str	r3, [r2, #48]	; 0x30
 80018a0:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80018a2:	ed9f 7b09 	vldr	d7, [pc, #36]	; 80018c8 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80018a6:	f003 0320 	and.w	r3, r3, #32
 80018aa:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80018ac:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80018ae:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80018b0:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80018b2:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80018b6:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80018ba:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80018bc:	f008 f8ce 	bl	8009a5c <HAL_GPIO_Init>
}
 80018c0:	b008      	add	sp, #32
 80018c2:	bd10      	pop	{r4, pc}
 80018c4:	f3af 8000 	nop.w
 80018c8:	00000380 	.word	0x00000380
 80018cc:	00000002 	.word	0x00000002
 80018d0:	40015000 	.word	0x40015000
 80018d4:	40021400 	.word	0x40021400

080018d8 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 80018d8:	b500      	push	{lr}
  if(htim_base->Instance==TIM1)
 80018da:	4a21      	ldr	r2, [pc, #132]	; (8001960 <HAL_TIM_Base_MspInit+0x88>)
 80018dc:	6803      	ldr	r3, [r0, #0]
 80018de:	4293      	cmp	r3, r2
{
 80018e0:	b085      	sub	sp, #20
  if(htim_base->Instance==TIM1)
 80018e2:	d008      	beq.n	80018f6 <HAL_TIM_Base_MspInit+0x1e>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM2)
 80018e4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80018e8:	d023      	beq.n	8001932 <HAL_TIM_Base_MspInit+0x5a>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 80018ea:	4a1e      	ldr	r2, [pc, #120]	; (8001964 <HAL_TIM_Base_MspInit+0x8c>)
 80018ec:	4293      	cmp	r3, r2
 80018ee:	d011      	beq.n	8001914 <HAL_TIM_Base_MspInit+0x3c>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 80018f0:	b005      	add	sp, #20
 80018f2:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM1_CLK_ENABLE();
 80018f6:	4b1c      	ldr	r3, [pc, #112]	; (8001968 <HAL_TIM_Base_MspInit+0x90>)
 80018f8:	2200      	movs	r2, #0
 80018fa:	9201      	str	r2, [sp, #4]
 80018fc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80018fe:	f042 0201 	orr.w	r2, r2, #1
 8001902:	645a      	str	r2, [r3, #68]	; 0x44
 8001904:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001906:	f003 0301 	and.w	r3, r3, #1
 800190a:	9301      	str	r3, [sp, #4]
 800190c:	9b01      	ldr	r3, [sp, #4]
}
 800190e:	b005      	add	sp, #20
 8001910:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001914:	4b14      	ldr	r3, [pc, #80]	; (8001968 <HAL_TIM_Base_MspInit+0x90>)
 8001916:	2200      	movs	r2, #0
 8001918:	9203      	str	r2, [sp, #12]
 800191a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800191c:	f042 0202 	orr.w	r2, r2, #2
 8001920:	641a      	str	r2, [r3, #64]	; 0x40
 8001922:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001924:	f003 0302 	and.w	r3, r3, #2
 8001928:	9303      	str	r3, [sp, #12]
 800192a:	9b03      	ldr	r3, [sp, #12]
}
 800192c:	b005      	add	sp, #20
 800192e:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001932:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 8001936:	2200      	movs	r2, #0
 8001938:	9202      	str	r2, [sp, #8]
 800193a:	6c19      	ldr	r1, [r3, #64]	; 0x40
 800193c:	f041 0101 	orr.w	r1, r1, #1
 8001940:	6419      	str	r1, [r3, #64]	; 0x40
 8001942:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001944:	f003 0301 	and.w	r3, r3, #1
 8001948:	9302      	str	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 800194a:	201c      	movs	r0, #28
 800194c:	2105      	movs	r1, #5
    __HAL_RCC_TIM2_CLK_ENABLE();
 800194e:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8001950:	f007 fe16 	bl	8009580 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001954:	201c      	movs	r0, #28
}
 8001956:	b005      	add	sp, #20
 8001958:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 800195c:	f007 be4e 	b.w	80095fc <HAL_NVIC_EnableIRQ>
 8001960:	40010000 	.word	0x40010000
 8001964:	40000400 	.word	0x40000400
 8001968:	40023800 	.word	0x40023800

0800196c <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 800196c:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 800196e:	4b2b      	ldr	r3, [pc, #172]	; (8001a1c <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001970:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8001972:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001974:	2200      	movs	r2, #0
 8001976:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8001978:	2c00      	cmp	r4, #0
 800197a:	d14c      	bne.n	8001a16 <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 800197c:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 800197e:	4a28      	ldr	r2, [pc, #160]	; (8001a20 <HAL_SDRAM_MspInit+0xb4>)
 8001980:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8001982:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001984:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001986:	4827      	ldr	r0, [pc, #156]	; (8001a24 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001988:	433b      	orrs	r3, r7
 800198a:	6393      	str	r3, [r2, #56]	; 0x38
 800198c:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800198e:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001990:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001992:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001994:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8001998:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800199a:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800199c:	2302      	movs	r3, #2
 800199e:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019a2:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 80019a6:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80019a8:	f008 f858 	bl	8009a5c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019ac:	481e      	ldr	r0, [pc, #120]	; (8001a28 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 80019ae:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019b0:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80019b2:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019b4:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019b8:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019bc:	f008 f84e 	bl	8009a5c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80019c0:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019c4:	4819      	ldr	r0, [pc, #100]	; (8001a2c <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80019c6:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019c8:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019ca:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019ce:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019d2:	f008 f843 	bl	8009a5c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80019d6:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80019da:	4815      	ldr	r0, [pc, #84]	; (8001a30 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80019dc:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80019de:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019e0:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019e4:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80019e8:	f008 f838 	bl	8009a5c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80019ec:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80019f0:	4810      	ldr	r0, [pc, #64]	; (8001a34 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80019f2:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80019f4:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019f6:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019fa:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80019fe:	f008 f82d 	bl	8009a5c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001a02:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a04:	480c      	ldr	r0, [pc, #48]	; (8001a38 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a06:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a08:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a0a:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001a0e:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001a10:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a12:	f008 f823 	bl	8009a5c <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001a16:	b009      	add	sp, #36	; 0x24
 8001a18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a1a:	bf00      	nop
 8001a1c:	20000814 	.word	0x20000814
 8001a20:	40023800 	.word	0x40023800
 8001a24:	40021400 	.word	0x40021400
 8001a28:	40020800 	.word	0x40020800
 8001a2c:	40021800 	.word	0x40021800
 8001a30:	40021000 	.word	0x40021000
 8001a34:	40020c00 	.word	0x40020c00
 8001a38:	40020400 	.word	0x40020400

08001a3c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001a3c:	b570      	push	{r4, r5, r6, lr}
 8001a3e:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001a40:	4b23      	ldr	r3, [pc, #140]	; (8001ad0 <HAL_InitTick+0x94>)
 8001a42:	2200      	movs	r2, #0
 8001a44:	9202      	str	r2, [sp, #8]
 8001a46:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001a48:	f042 0210 	orr.w	r2, r2, #16
 8001a4c:	641a      	str	r2, [r3, #64]	; 0x40
 8001a4e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a50:	f003 0310 	and.w	r3, r3, #16
 8001a54:	9302      	str	r3, [sp, #8]
{
 8001a56:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001a58:	a901      	add	r1, sp, #4
 8001a5a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001a5c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001a5e:	f00a fa45 	bl	800beec <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001a62:	9b06      	ldr	r3, [sp, #24]
 8001a64:	b9d3      	cbnz	r3, 8001a9c <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001a66:	f00a fa31 	bl	800becc <HAL_RCC_GetPCLK1Freq>
 8001a6a:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001a6c:	4a19      	ldr	r2, [pc, #100]	; (8001ad4 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001a6e:	4c1a      	ldr	r4, [pc, #104]	; (8001ad8 <HAL_InitTick+0x9c>)
 8001a70:	491a      	ldr	r1, [pc, #104]	; (8001adc <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001a72:	fba2 2303 	umull	r2, r3, r2, r3
 8001a76:	0c9b      	lsrs	r3, r3, #18
 8001a78:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 8001a7a:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8001a7c:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8001a80:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001a82:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 8001a86:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001a88:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001a8a:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001a8c:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 8001a8e:	f00b f85d 	bl	800cb4c <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8001a92:	4606      	mov	r6, r0
 8001a94:	b130      	cbz	r0, 8001aa4 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 8001a96:	4630      	mov	r0, r6
 8001a98:	b008      	add	sp, #32
 8001a9a:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8001a9c:	f00a fa16 	bl	800becc <HAL_RCC_GetPCLK1Freq>
 8001aa0:	0043      	lsls	r3, r0, #1
 8001aa2:	e7e3      	b.n	8001a6c <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 8001aa4:	4620      	mov	r0, r4
 8001aa6:	f00b f8df 	bl	800cc68 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8001aaa:	4606      	mov	r6, r0
 8001aac:	2800      	cmp	r0, #0
 8001aae:	d1f2      	bne.n	8001a96 <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001ab0:	2036      	movs	r0, #54	; 0x36
 8001ab2:	f007 fda3 	bl	80095fc <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001ab6:	2d0f      	cmp	r5, #15
 8001ab8:	d901      	bls.n	8001abe <HAL_InitTick+0x82>
        status = HAL_ERROR;
 8001aba:	2601      	movs	r6, #1
 8001abc:	e7eb      	b.n	8001a96 <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8001abe:	4632      	mov	r2, r6
 8001ac0:	4629      	mov	r1, r5
 8001ac2:	2036      	movs	r0, #54	; 0x36
 8001ac4:	f007 fd5c 	bl	8009580 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8001ac8:	4b05      	ldr	r3, [pc, #20]	; (8001ae0 <HAL_InitTick+0xa4>)
 8001aca:	601d      	str	r5, [r3, #0]
 8001acc:	e7e3      	b.n	8001a96 <HAL_InitTick+0x5a>
 8001ace:	bf00      	nop
 8001ad0:	40023800 	.word	0x40023800
 8001ad4:	431bde83 	.word	0x431bde83
 8001ad8:	20000818 	.word	0x20000818
 8001adc:	40001000 	.word	0x40001000
 8001ae0:	20000080 	.word	0x20000080

08001ae4 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001ae4:	4770      	bx	lr
 8001ae6:	bf00      	nop

08001ae8 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001ae8:	e7fe      	b.n	8001ae8 <HardFault_Handler>
 8001aea:	bf00      	nop

08001aec <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001aec:	e7fe      	b.n	8001aec <MemManage_Handler>
 8001aee:	bf00      	nop

08001af0 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001af0:	e7fe      	b.n	8001af0 <BusFault_Handler>
 8001af2:	bf00      	nop

08001af4 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001af4:	e7fe      	b.n	8001af4 <UsageFault_Handler>
 8001af6:	bf00      	nop

08001af8 <DebugMon_Handler>:
 8001af8:	4770      	bx	lr
 8001afa:	bf00      	nop

08001afc <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8001afc:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 8001afe:	20c8      	movs	r0, #200	; 0xc8
 8001b00:	f007 fd1a 	bl	8009538 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8001b04:	4804      	ldr	r0, [pc, #16]	; (8001b18 <EXTI3_IRQHandler+0x1c>)
 8001b06:	2200      	movs	r2, #0
 8001b08:	2120      	movs	r1, #32
 8001b0a:	f008 f8eb 	bl	8009ce4 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8001b0e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8001b12:	2008      	movs	r0, #8
 8001b14:	f008 b8f6 	b.w	8009d04 <HAL_GPIO_EXTI_IRQHandler>
 8001b18:	40021000 	.word	0x40021000

08001b1c <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001b1c:	4801      	ldr	r0, [pc, #4]	; (8001b24 <TIM6_DAC_IRQHandler+0x8>)
 8001b1e:	f00b ba23 	b.w	800cf68 <HAL_TIM_IRQHandler>
 8001b22:	bf00      	nop
 8001b24:	20000818 	.word	0x20000818

08001b28 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8001b28:	4801      	ldr	r0, [pc, #4]	; (8001b30 <I2C3_EV_IRQHandler+0x8>)
 8001b2a:	f009 b84b 	b.w	800abc4 <HAL_I2C_EV_IRQHandler>
 8001b2e:	bf00      	nop
 8001b30:	200001b4 	.word	0x200001b4

08001b34 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001b34:	4801      	ldr	r0, [pc, #4]	; (8001b3c <LTDC_IRQHandler+0x8>)
 8001b36:	f009 bdbf 	b.w	800b6b8 <HAL_LTDC_IRQHandler>
 8001b3a:	bf00      	nop
 8001b3c:	20000208 	.word	0x20000208

08001b40 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001b40:	2001      	movs	r0, #1
 8001b42:	4770      	bx	lr

08001b44 <_kill>:

int _kill(int pid, int sig)
{
 8001b44:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001b46:	f029 fe51 	bl	802b7ec <__errno>
 8001b4a:	2316      	movs	r3, #22
 8001b4c:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001b4e:	f04f 30ff 	mov.w	r0, #4294967295
 8001b52:	bd08      	pop	{r3, pc}

08001b54 <_exit>:

void _exit (int status)
{
 8001b54:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001b56:	f029 fe49 	bl	802b7ec <__errno>
 8001b5a:	2316      	movs	r3, #22
 8001b5c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001b5e:	e7fe      	b.n	8001b5e <_exit+0xa>

08001b60 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001b60:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b62:	1e16      	subs	r6, r2, #0
 8001b64:	dd07      	ble.n	8001b76 <_read+0x16>
 8001b66:	460c      	mov	r4, r1
 8001b68:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 8001b6a:	f3af 8000 	nop.w
 8001b6e:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b72:	42a5      	cmp	r5, r4
 8001b74:	d1f9      	bne.n	8001b6a <_read+0xa>
	}

return len;
}
 8001b76:	4630      	mov	r0, r6
 8001b78:	bd70      	pop	{r4, r5, r6, pc}
 8001b7a:	bf00      	nop

08001b7c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001b7c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b7e:	1e16      	subs	r6, r2, #0
 8001b80:	dd07      	ble.n	8001b92 <_write+0x16>
 8001b82:	460c      	mov	r4, r1
 8001b84:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 8001b86:	f814 0b01 	ldrb.w	r0, [r4], #1
 8001b8a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b8e:	42ac      	cmp	r4, r5
 8001b90:	d1f9      	bne.n	8001b86 <_write+0xa>
	}
	return len;
}
 8001b92:	4630      	mov	r0, r6
 8001b94:	bd70      	pop	{r4, r5, r6, pc}
 8001b96:	bf00      	nop

08001b98 <_close>:

int _close(int file)
{
	return -1;
}
 8001b98:	f04f 30ff 	mov.w	r0, #4294967295
 8001b9c:	4770      	bx	lr
 8001b9e:	bf00      	nop

08001ba0 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001ba0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001ba4:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001ba6:	2000      	movs	r0, #0
 8001ba8:	4770      	bx	lr
 8001baa:	bf00      	nop

08001bac <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001bac:	2001      	movs	r0, #1
 8001bae:	4770      	bx	lr

08001bb0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001bb0:	2000      	movs	r0, #0
 8001bb2:	4770      	bx	lr

08001bb4 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001bb4:	4a0b      	ldr	r2, [pc, #44]	; (8001be4 <_sbrk+0x30>)
{
 8001bb6:	b508      	push	{r3, lr}
 8001bb8:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001bba:	6810      	ldr	r0, [r2, #0]
 8001bbc:	b128      	cbz	r0, 8001bca <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8001bbe:	4403      	add	r3, r0
 8001bc0:	4669      	mov	r1, sp
 8001bc2:	428b      	cmp	r3, r1
 8001bc4:	d807      	bhi.n	8001bd6 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8001bc6:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8001bc8:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8001bca:	4807      	ldr	r0, [pc, #28]	; (8001be8 <_sbrk+0x34>)
 8001bcc:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001bce:	4403      	add	r3, r0
 8001bd0:	4669      	mov	r1, sp
 8001bd2:	428b      	cmp	r3, r1
 8001bd4:	d9f7      	bls.n	8001bc6 <_sbrk+0x12>
		errno = ENOMEM;
 8001bd6:	f029 fe09 	bl	802b7ec <__errno>
 8001bda:	230c      	movs	r3, #12
 8001bdc:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001bde:	f04f 30ff 	mov.w	r0, #4294967295
}
 8001be2:	bd08      	pop	{r3, pc}
 8001be4:	20000860 	.word	0x20000860
 8001be8:	20014458 	.word	0x20014458

08001bec <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8001bec:	4770      	bx	lr
 8001bee:	bf00      	nop

08001bf0 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8001bf0:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 8001bf2:	f000 fbab 	bl	800234c <touchgfx_components_init>
  touchgfx_init();
}
 8001bf6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8001bfa:	f000 bb33 	b.w	8002264 <touchgfx_init>
 8001bfe:	bf00      	nop

08001c00 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8001c00:	f000 bba6 	b.w	8002350 <touchgfx_taskEntry>

08001c04 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001c04:	4770      	bx	lr

08001c06 <_ZN20STM32TouchControllerD0Ev>:
 8001c06:	b510      	push	{r4, lr}
 8001c08:	2104      	movs	r1, #4
 8001c0a:	4604      	mov	r4, r0
 8001c0c:	f028 fcdd 	bl	802a5ca <_ZdlPvj>
 8001c10:	4620      	mov	r0, r4
 8001c12:	bd10      	pop	{r4, pc}

08001c14 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8001c14:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8001c16:	4b0c      	ldr	r3, [pc, #48]	; (8001c48 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001c18:	4c0c      	ldr	r4, [pc, #48]	; (8001c4c <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8001c1a:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8001c1c:	4b0c      	ldr	r3, [pc, #48]	; (8001c50 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001c1e:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8001c20:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001c22:	6863      	ldr	r3, [r4, #4]
 8001c24:	4798      	blx	r3
 8001c26:	f640 0311 	movw	r3, #2065	; 0x811
 8001c2a:	4298      	cmp	r0, r3
 8001c2c:	d10a      	bne.n	8001c44 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8001c2e:	4d09      	ldr	r5, [pc, #36]	; (8001c54 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8001c30:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8001c32:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8001c34:	2082      	movs	r0, #130	; 0x82
 8001c36:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8001c38:	682b      	ldr	r3, [r5, #0]
 8001c3a:	2082      	movs	r0, #130	; 0x82
 8001c3c:	68db      	ldr	r3, [r3, #12]
 8001c3e:	4798      	blx	r3
 8001c40:	2000      	movs	r0, #0
    }

    return ret;
}
 8001c42:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8001c44:	2001      	movs	r0, #1
 8001c46:	e7fc      	b.n	8001c42 <_Z11BSP_TS_Inittt+0x2e>
 8001c48:	20000864 	.word	0x20000864
 8001c4c:	20000050 	.word	0x20000050
 8001c50:	20000866 	.word	0x20000866
 8001c54:	20000868 	.word	0x20000868

08001c58 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8001c58:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8001c5c:	20f0      	movs	r0, #240	; 0xf0
 8001c5e:	f7ff bfd9 	b.w	8001c14 <_Z11BSP_TS_Inittt>
	...

08001c64 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8001c64:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001c66:	4d33      	ldr	r5, [pc, #204]	; (8001d34 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 8001c68:	682b      	ldr	r3, [r5, #0]
{
 8001c6a:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001c6c:	691b      	ldr	r3, [r3, #16]
 8001c6e:	2082      	movs	r0, #130	; 0x82
 8001c70:	4798      	blx	r3
 8001c72:	b280      	uxth	r0, r0
 8001c74:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8001c76:	2800      	cmp	r0, #0
 8001c78:	d04a      	beq.n	8001d10 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8001c7a:	682b      	ldr	r3, [r5, #0]
 8001c7c:	f10d 0206 	add.w	r2, sp, #6
 8001c80:	695b      	ldr	r3, [r3, #20]
 8001c82:	a901      	add	r1, sp, #4
 8001c84:	2082      	movs	r0, #130	; 0x82
 8001c86:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8001c88:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001c8c:	f640 6274 	movw	r2, #3700	; 0xe74
 8001c90:	4293      	cmp	r3, r2
 8001c92:	d93f      	bls.n	8001d14 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8001c94:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 8001c98:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001c9c:	1ad2      	subs	r2, r2, r3
 8001c9e:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8001ca0:	2a0a      	cmp	r2, #10
 8001ca2:	d93d      	bls.n	8001d20 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8001ca4:	230b      	movs	r3, #11
 8001ca6:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8001caa:	4b23      	ldr	r3, [pc, #140]	; (8001d38 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8001cac:	881b      	ldrh	r3, [r3, #0]
 8001cae:	429a      	cmp	r2, r3
 8001cb0:	d901      	bls.n	8001cb6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8001cb2:	3b01      	subs	r3, #1
 8001cb4:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8001cb6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001cba:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8001cbe:	428b      	cmp	r3, r1
 8001cc0:	d830      	bhi.n	8001d24 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8001cc2:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 8001cc6:	330e      	adds	r3, #14
 8001cc8:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8001cca:	210f      	movs	r1, #15
 8001ccc:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8001cd0:	491a      	ldr	r1, [pc, #104]	; (8001d3c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8001cd2:	8809      	ldrh	r1, [r1, #0]
 8001cd4:	428b      	cmp	r3, r1
 8001cd6:	d901      	bls.n	8001cdc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 8001cd8:	3901      	subs	r1, #1
 8001cda:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001cdc:	4e18      	ldr	r6, [pc, #96]	; (8001d40 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001cde:	4d19      	ldr	r5, [pc, #100]	; (8001d44 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001ce0:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001ce2:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001ce4:	4283      	cmp	r3, r0
 8001ce6:	b281      	uxth	r1, r0
 8001ce8:	bf8c      	ite	hi
 8001cea:	1a59      	subhi	r1, r3, r1
 8001cec:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001cee:	b2b8      	uxth	r0, r7
 8001cf0:	42ba      	cmp	r2, r7
 8001cf2:	bf8c      	ite	hi
 8001cf4:	1a10      	subhi	r0, r2, r0
 8001cf6:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001cf8:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001cfa:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8001cfc:	4401      	add	r1, r0
 8001cfe:	2905      	cmp	r1, #5
        {
            _x = x;
 8001d00:	bfc8      	it	gt
 8001d02:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8001d04:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8001d06:	bfc8      	it	gt
 8001d08:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8001d0a:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8001d0c:	682b      	ldr	r3, [r5, #0]
 8001d0e:	80a3      	strh	r3, [r4, #4]
    }
}
 8001d10:	b003      	add	sp, #12
 8001d12:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8001d14:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 8001d16:	bf9c      	itt	ls
 8001d18:	23b4      	movls	r3, #180	; 0xb4
 8001d1a:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8001d1e:	e7bb      	b.n	8001c98 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8001d20:	2200      	movs	r2, #0
 8001d22:	e7c8      	b.n	8001cb6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8001d24:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8001d28:	3308      	adds	r3, #8
 8001d2a:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8001d2c:	2b0e      	cmp	r3, #14
 8001d2e:	d8cc      	bhi.n	8001cca <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8001d30:	2300      	movs	r3, #0
 8001d32:	e7d3      	b.n	8001cdc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8001d34:	20000868 	.word	0x20000868
 8001d38:	20000866 	.word	0x20000866
 8001d3c:	20000864 	.word	0x20000864
 8001d40:	2000086c 	.word	0x2000086c
 8001d44:	20000870 	.word	0x20000870

08001d48 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8001d48:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8001d4a:	4668      	mov	r0, sp
{
 8001d4c:	460d      	mov	r5, r1
 8001d4e:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8001d50:	f7ff ff88 	bl	8001c64 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8001d54:	f8bd 0000 	ldrh.w	r0, [sp]
 8001d58:	b148      	cbz	r0, 8001d6e <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 8001d5a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8001d5e:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8001d60:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001d64:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 8001d66:	4b03      	ldr	r3, [pc, #12]	; (8001d74 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 8001d68:	223c      	movs	r2, #60	; 0x3c
 8001d6a:	601a      	str	r2, [r3, #0]
        return true;
 8001d6c:	2001      	movs	r0, #1
}
 8001d6e:	b003      	add	sp, #12
 8001d70:	bd30      	pop	{r4, r5, pc}
 8001d72:	bf00      	nop
 8001d74:	2000000c 	.word	0x2000000c

08001d78 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001d78:	b110      	cbz	r0, 8001d80 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8001d7a:	2802      	cmp	r0, #2
 8001d7c:	d009      	beq.n	8001d92 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8001d7e:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8001d80:	4b07      	ldr	r3, [pc, #28]	; (8001da0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001d82:	681a      	ldr	r2, [r3, #0]
 8001d84:	fab2 f282 	clz	r2, r2
 8001d88:	0952      	lsrs	r2, r2, #5
 8001d8a:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8001d8c:	4805      	ldr	r0, [pc, #20]	; (8001da4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8001d8e:	f007 bfa9 	b.w	8009ce4 <HAL_GPIO_WritePin>
 8001d92:	4b03      	ldr	r3, [pc, #12]	; (8001da0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001d94:	689a      	ldr	r2, [r3, #8]
 8001d96:	fab2 f282 	clz	r2, r2
 8001d9a:	0952      	lsrs	r2, r2, #5
 8001d9c:	2110      	movs	r1, #16
 8001d9e:	e7f5      	b.n	8001d8c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8001da0:	20000874 	.word	0x20000874
 8001da4:	40021000 	.word	0x40021000

08001da8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001da8:	b110      	cbz	r0, 8001db0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 8001daa:	2802      	cmp	r0, #2
 8001dac:	d009      	beq.n	8001dc2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8001dae:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8001db0:	4b07      	ldr	r3, [pc, #28]	; (8001dd0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8001db2:	681a      	ldr	r2, [r3, #0]
 8001db4:	3a00      	subs	r2, #0
 8001db6:	bf18      	it	ne
 8001db8:	2201      	movne	r2, #1
 8001dba:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8001dbc:	4805      	ldr	r0, [pc, #20]	; (8001dd4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8001dbe:	f007 bf91 	b.w	8009ce4 <HAL_GPIO_WritePin>
 8001dc2:	4b03      	ldr	r3, [pc, #12]	; (8001dd0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8001dc4:	689a      	ldr	r2, [r3, #8]
 8001dc6:	3a00      	subs	r2, #0
 8001dc8:	bf18      	it	ne
 8001dca:	2201      	movne	r2, #1
 8001dcc:	2110      	movs	r1, #16
 8001dce:	e7f5      	b.n	8001dbc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8001dd0:	20000874 	.word	0x20000874
 8001dd4:	40021000 	.word	0x40021000

08001dd8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8001dd8:	b110      	cbz	r0, 8001de0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 8001dda:	2802      	cmp	r0, #2
 8001ddc:	d004      	beq.n	8001de8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8001dde:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001de0:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001de2:	4802      	ldr	r0, [pc, #8]	; (8001dec <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8001de4:	f007 bf82 	b.w	8009cec <HAL_GPIO_TogglePin>
 8001de8:	2110      	movs	r1, #16
 8001dea:	e7fa      	b.n	8001de2 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 8001dec:	40021000 	.word	0x40021000

08001df0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8001df0:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8001df2:	b130      	cbz	r0, 8001e02 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 8001df4:	2802      	cmp	r0, #2
 8001df6:	d009      	beq.n	8001e0c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8001df8:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8001dfa:	1e43      	subs	r3, r0, #1
 8001dfc:	4258      	negs	r0, r3
 8001dfe:	4158      	adcs	r0, r3
 8001e00:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001e02:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001e04:	4802      	ldr	r0, [pc, #8]	; (8001e10 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 8001e06:	f007 ff67 	bl	8009cd8 <HAL_GPIO_ReadPin>
        break;
 8001e0a:	e7f6      	b.n	8001dfa <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001e0c:	2110      	movs	r1, #16
 8001e0e:	e7f9      	b.n	8001e04 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8001e10:	40021000 	.word	0x40021000

08001e14 <_ZN8touchgfx4GPIO4initEv>:
{
 8001e14:	b570      	push	{r4, r5, r6, lr}
 8001e16:	4d08      	ldr	r5, [pc, #32]	; (8001e38 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8001e18:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8001e1a:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8001e1c:	b2e0      	uxtb	r0, r4
 8001e1e:	f7ff ffe7 	bl	8001df0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8001e22:	b118      	cbz	r0, 8001e2c <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8001e24:	682b      	ldr	r3, [r5, #0]
 8001e26:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8001e28:	bf18      	it	ne
 8001e2a:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8001e2c:	3401      	adds	r4, #1
 8001e2e:	2c05      	cmp	r4, #5
 8001e30:	f105 0504 	add.w	r5, r5, #4
 8001e34:	d1f2      	bne.n	8001e1c <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8001e36:	bd70      	pop	{r4, r5, r6, pc}
 8001e38:	20000874 	.word	0x20000874

08001e3c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8001e3c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8001e3e:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8001e42:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8001e46:	4770      	bx	lr

08001e48 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8001e48:	2000      	movs	r0, #0
 8001e4a:	4770      	bx	lr

08001e4c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001e4c:	4b03      	ldr	r3, [pc, #12]	; (8001e5c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8001e4e:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001e50:	3900      	subs	r1, #0
 8001e52:	bf18      	it	ne
 8001e54:	2101      	movne	r1, #1
 8001e56:	7019      	strb	r1, [r3, #0]
    }
 8001e58:	4770      	bx	lr
 8001e5a:	bf00      	nop
 8001e5c:	2001381b 	.word	0x2001381b

08001e60 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001e60:	2000      	movs	r0, #0
 8001e62:	4770      	bx	lr

08001e64 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001e64:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8001e66:	b10b      	cbz	r3, 8001e6c <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001e68:	4608      	mov	r0, r1
 8001e6a:	4718      	bx	r3
        }
    }
 8001e6c:	4770      	bx	lr

08001e6e <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001e6e:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001e72:	4770      	bx	lr

08001e74 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001e74:	6840      	ldr	r0, [r0, #4]
 8001e76:	6803      	ldr	r3, [r0, #0]
 8001e78:	699b      	ldr	r3, [r3, #24]
 8001e7a:	4718      	bx	r3

08001e7c <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001e7c:	4770      	bx	lr

08001e7e <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001e7e:	4770      	bx	lr

08001e80 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001e80:	4770      	bx	lr
	...

08001e84 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8001e84:	b510      	push	{r4, lr}
 8001e86:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001e88:	f000 fb4e 	bl	8002528 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8001e8c:	6823      	ldr	r3, [r4, #0]
 8001e8e:	4903      	ldr	r1, [pc, #12]	; (8001e9c <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8001e90:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8001e94:	4620      	mov	r0, r4
}
 8001e96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8001e9a:	4718      	bx	r3
 8001e9c:	d0000000 	.word	0xd0000000

08001ea0 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8001ea0:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8001ea2:	6803      	ldr	r3, [r0, #0]
{
 8001ea4:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8001ea6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8001eaa:	4798      	blx	r3
    enableInterrupts();
 8001eac:	6823      	ldr	r3, [r4, #0]
 8001eae:	4620      	mov	r0, r4
 8001eb0:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8001eb2:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8001eb4:	f000 f8ec 	bl	8002090 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001eb8:	6823      	ldr	r3, [r4, #0]
 8001eba:	4620      	mov	r0, r4
 8001ebc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001ebe:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8001ec0:	2029      	movs	r0, #41	; 0x29
 8001ec2:	f7ff f981 	bl	80011c8 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8001ec6:	f000 f8e3 	bl	8002090 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001eca:	6823      	ldr	r3, [r4, #0]
 8001ecc:	4620      	mov	r0, r4
 8001ece:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001ed0:	4798      	blx	r3
    for (;;)
 8001ed2:	e7f8      	b.n	8001ec6 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08001ed4 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001ed4:	b510      	push	{r4, lr}
 8001ed6:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001ed8:	f00f fe88 	bl	8011bec <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001edc:	6823      	ldr	r3, [r4, #0]
 8001ede:	4620      	mov	r0, r4
 8001ee0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8001ee4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001ee8:	4718      	bx	r3

08001eea <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001eea:	f000 bb0f 	b.w	800250c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08001eee <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001eee:	f000 bb13 	b.w	8002518 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001ef2 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001ef2:	f000 bb37 	b.w	8002564 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08001ef6 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001ef6:	f000 badf 	b.w	80024b8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001efa <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001efa:	f000 bae5 	b.w	80024c8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001efe <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001efe:	f000 bb3d 	b.w	800257c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08001f02 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8001f02:	f000 bae9 	b.w	80024d8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001f06 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001f06:	f00f b8dc 	b.w	80110c2 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001f0a <_ZN11TouchGFXHALD0Ev>:
 8001f0a:	b510      	push	{r4, lr}
 8001f0c:	217c      	movs	r1, #124	; 0x7c
 8001f0e:	4604      	mov	r4, r0
 8001f10:	f028 fb5b 	bl	802a5ca <_ZdlPvj>
 8001f14:	4620      	mov	r0, r4
 8001f16:	bd10      	pop	{r4, pc}

08001f18 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8001f18:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8001f1c:	b11b      	cbz	r3, 8001f26 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8001f1e:	6840      	ldr	r0, [r0, #4]
 8001f20:	6803      	ldr	r3, [r0, #0]
 8001f22:	681b      	ldr	r3, [r3, #0]
 8001f24:	4718      	bx	r3
    }
 8001f26:	4618      	mov	r0, r3
 8001f28:	4770      	bx	lr
	...

08001f2c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8001f2c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8001f2e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8001f32:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8001f36:	4b0c      	ldr	r3, [pc, #48]	; (8001f68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8001f38:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8001f3a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001f3c:	d009      	beq.n	8001f52 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8001f3e:	b93a      	cbnz	r2, 8001f50 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f40:	4a0a      	ldr	r2, [pc, #40]	; (8001f6c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001f42:	490b      	ldr	r1, [pc, #44]	; (8001f70 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f44:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001f46:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8001f48:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f4a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8001f4c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8001f4e:	701a      	strb	r2, [r3, #0]
    }
 8001f50:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8001f52:	2a00      	cmp	r2, #0
 8001f54:	d0fc      	beq.n	8001f50 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f56:	4a05      	ldr	r2, [pc, #20]	; (8001f6c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001f58:	4905      	ldr	r1, [pc, #20]	; (8001f70 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f5a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001f5c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8001f5e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f60:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8001f62:	2200      	movs	r2, #0
 8001f64:	e7f3      	b.n	8001f4e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8001f66:	bf00      	nop
 8001f68:	20013814 	.word	0x20013814
 8001f6c:	20013810 	.word	0x20013810
 8001f70:	20013812 	.word	0x20013812

08001f74 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8001f74:	b570      	push	{r4, r5, r6, lr}
 8001f76:	460d      	mov	r5, r1
 8001f78:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8001f7a:	b935      	cbnz	r5, 8001f8a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8001f7c:	4b09      	ldr	r3, [pc, #36]	; (8001fa4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8001f7e:	4a0a      	ldr	r2, [pc, #40]	; (8001fa8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8001f80:	480a      	ldr	r0, [pc, #40]	; (8001fac <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8001f82:	f240 21d2 	movw	r1, #722	; 0x2d2
 8001f86:	f029 f933 	bl	802b1f0 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001f8a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8001f8e:	4b08      	ldr	r3, [pc, #32]	; (8001fb0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8001f90:	3a00      	subs	r2, #0
 8001f92:	bf18      	it	ne
 8001f94:	2201      	movne	r2, #1
 8001f96:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001f98:	6803      	ldr	r3, [r0, #0]
    }
 8001f9a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8001f9e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8001fa2:	4718      	bx	r3
 8001fa4:	0802c418 	.word	0x0802c418
 8001fa8:	0802c450 	.word	0x0802c450
 8001fac:	0802c49e 	.word	0x0802c49e
 8001fb0:	2001381a 	.word	0x2001381a

08001fb4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8001fb4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8001fb6:	4b09      	ldr	r3, [pc, #36]	; (8001fdc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001fb8:	881b      	ldrh	r3, [r3, #0]
 8001fba:	428b      	cmp	r3, r1
 8001fbc:	d803      	bhi.n	8001fc6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001fbe:	4b08      	ldr	r3, [pc, #32]	; (8001fe0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001fc0:	881b      	ldrh	r3, [r3, #0]
 8001fc2:	4293      	cmp	r3, r2
 8001fc4:	d905      	bls.n	8001fd2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8001fc6:	4b07      	ldr	r3, [pc, #28]	; (8001fe4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001fc8:	4a07      	ldr	r2, [pc, #28]	; (8001fe8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8001fca:	4808      	ldr	r0, [pc, #32]	; (8001fec <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001fcc:	219e      	movs	r1, #158	; 0x9e
 8001fce:	f029 f90f 	bl	802b1f0 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8001fd2:	4b07      	ldr	r3, [pc, #28]	; (8001ff0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8001fd4:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8001fd6:	4b07      	ldr	r3, [pc, #28]	; (8001ff4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8001fd8:	801a      	strh	r2, [r3, #0]
    }
 8001fda:	bd08      	pop	{r3, pc}
 8001fdc:	20013810 	.word	0x20013810
 8001fe0:	20013812 	.word	0x20013812
 8001fe4:	0802c4e3 	.word	0x0802c4e3
 8001fe8:	0802c546 	.word	0x0802c546
 8001fec:	0802c49e 	.word	0x0802c49e
 8001ff0:	20013816 	.word	0x20013816
 8001ff4:	20013818 	.word	0x20013818

08001ff8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001ff8:	2101      	movs	r1, #1
{
 8001ffa:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001ffc:	2200      	movs	r2, #0
 8001ffe:	4608      	mov	r0, r1
 8002000:	f00b f9f4 	bl	800d3ec <osSemaphoreNew>
 8002004:	4b0a      	ldr	r3, [pc, #40]	; (8002030 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8002006:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8002008:	b928      	cbnz	r0, 8002016 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 800200a:	4b0a      	ldr	r3, [pc, #40]	; (8002034 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 800200c:	4a0a      	ldr	r2, [pc, #40]	; (8002038 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800200e:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002010:	480a      	ldr	r0, [pc, #40]	; (800203c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8002012:	f029 f8ed 	bl	802b1f0 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8002016:	2200      	movs	r2, #0
 8002018:	2104      	movs	r1, #4
 800201a:	2001      	movs	r0, #1
 800201c:	f00b fa9a 	bl	800d554 <osMessageQueueNew>
 8002020:	4b07      	ldr	r3, [pc, #28]	; (8002040 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8002022:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002024:	b918      	cbnz	r0, 800202e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8002026:	4b07      	ldr	r3, [pc, #28]	; (8002044 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8002028:	4a03      	ldr	r2, [pc, #12]	; (8002038 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800202a:	212c      	movs	r1, #44	; 0x2c
 800202c:	e7f0      	b.n	8002010 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800202e:	bd08      	pop	{r3, pc}
 8002030:	20000888 	.word	0x20000888
 8002034:	0802c664 	.word	0x0802c664
 8002038:	0802c6ad 	.word	0x0802c6ad
 800203c:	0802c6dc 	.word	0x0802c6dc
 8002040:	20000884 	.word	0x20000884
 8002044:	0802c756 	.word	0x0802c756

08002048 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8002048:	4b02      	ldr	r3, [pc, #8]	; (8002054 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800204a:	f04f 31ff 	mov.w	r1, #4294967295
 800204e:	6818      	ldr	r0, [r3, #0]
 8002050:	f00b ba20 	b.w	800d494 <osSemaphoreAcquire>
 8002054:	20000888 	.word	0x20000888

08002058 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8002058:	4b01      	ldr	r3, [pc, #4]	; (8002060 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800205a:	6818      	ldr	r0, [r3, #0]
 800205c:	f00b ba4e 	b.w	800d4fc <osSemaphoreRelease>
 8002060:	20000888 	.word	0x20000888

08002064 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8002064:	4b02      	ldr	r3, [pc, #8]	; (8002070 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8002066:	2100      	movs	r1, #0
 8002068:	6818      	ldr	r0, [r3, #0]
 800206a:	f00b ba13 	b.w	800d494 <osSemaphoreAcquire>
 800206e:	bf00      	nop
 8002070:	20000888 	.word	0x20000888

08002074 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8002074:	f7ff bff0 	b.w	8002058 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08002078 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8002078:	4803      	ldr	r0, [pc, #12]	; (8002088 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800207a:	4904      	ldr	r1, [pc, #16]	; (800208c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800207c:	6800      	ldr	r0, [r0, #0]
 800207e:	2300      	movs	r3, #0
 8002080:	461a      	mov	r2, r3
 8002082:	f00b baa1 	b.w	800d5c8 <osMessageQueuePut>
 8002086:	bf00      	nop
 8002088:	20000884 	.word	0x20000884
 800208c:	20000010 	.word	0x20000010

08002090 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8002090:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8002092:	4c08      	ldr	r4, [pc, #32]	; (80020b4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8002094:	2300      	movs	r3, #0
 8002096:	461a      	mov	r2, r3
 8002098:	a901      	add	r1, sp, #4
 800209a:	6820      	ldr	r0, [r4, #0]
 800209c:	f00b faca 	bl	800d634 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80020a0:	6820      	ldr	r0, [r4, #0]
 80020a2:	f04f 33ff 	mov.w	r3, #4294967295
 80020a6:	2200      	movs	r2, #0
 80020a8:	a901      	add	r1, sp, #4
 80020aa:	f00b fac3 	bl	800d634 <osMessageQueueGet>
}
 80020ae:	b002      	add	sp, #8
 80020b0:	bd10      	pop	{r4, pc}
 80020b2:	bf00      	nop
 80020b4:	20000884 	.word	0x20000884

080020b8 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 80020b8:	4770      	bx	lr

080020ba <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 80020ba:	2000      	movs	r0, #0
 80020bc:	4770      	bx	lr

080020be <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 80020be:	4770      	bx	lr

080020c0 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 80020c0:	4770      	bx	lr

080020c2 <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 80020c2:	2000      	movs	r0, #0
 80020c4:	4770      	bx	lr

080020c6 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 80020c6:	4770      	bx	lr

080020c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 80020c8:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 80020ca:	4a03      	ldr	r2, [pc, #12]	; (80020d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 80020cc:	4b03      	ldr	r3, [pc, #12]	; (80020dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 80020ce:	4804      	ldr	r0, [pc, #16]	; (80020e0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 80020d0:	2122      	movs	r1, #34	; 0x22
 80020d2:	f029 f88d 	bl	802b1f0 <__assert_func>
 80020d6:	bf00      	nop
 80020d8:	0802c7bb 	.word	0x0802c7bb
 80020dc:	0802c798 	.word	0x0802c798
 80020e0:	0802c7f9 	.word	0x0802c7f9

080020e4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 80020e4:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 80020e6:	4a03      	ldr	r2, [pc, #12]	; (80020f4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 80020e8:	4b03      	ldr	r3, [pc, #12]	; (80020f8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 80020ea:	4804      	ldr	r0, [pc, #16]	; (80020fc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 80020ec:	2127      	movs	r1, #39	; 0x27
 80020ee:	f029 f87f 	bl	802b1f0 <__assert_func>
 80020f2:	bf00      	nop
 80020f4:	0802c871 	.word	0x0802c871
 80020f8:	0802c798 	.word	0x0802c798
 80020fc:	0802c7f9 	.word	0x0802c7f9

08002100 <_ZN8STM32DMAD0Ev>:
 8002100:	b510      	push	{r4, lr}
 8002102:	2144      	movs	r1, #68	; 0x44
 8002104:	4604      	mov	r4, r0
 8002106:	f028 fa60 	bl	802a5ca <_ZdlPvj>
 800210a:	4620      	mov	r0, r4
 800210c:	bd10      	pop	{r4, pc}
	...

08002110 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8002110:	b538      	push	{r3, r4, r5, lr}
 8002112:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8002114:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8002116:	2500      	movs	r5, #0
 8002118:	4b06      	ldr	r3, [pc, #24]	; (8002134 <_ZN8STM32DMAC1Ev+0x24>)
 800211a:	7225      	strb	r5, [r4, #8]
 800211c:	300c      	adds	r0, #12
 800211e:	6060      	str	r0, [r4, #4]
 8002120:	7265      	strb	r5, [r4, #9]
 8002122:	2201      	movs	r2, #1
 8002124:	f841 3b20 	str.w	r3, [r1], #32
 8002128:	f00f feb8 	bl	8011e9c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 800212c:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 800212e:	4620      	mov	r0, r4
 8002130:	bd38      	pop	{r3, r4, r5, pc}
 8002132:	bf00      	nop
 8002134:	0802c8b8 	.word	0x0802c8b8

08002138 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002138:	2001      	movs	r0, #1
 800213a:	4770      	bx	lr

0800213c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 800213c:	2038      	movs	r0, #56	; 0x38
 800213e:	4770      	bx	lr

08002140 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8002140:	2338      	movs	r3, #56	; 0x38
 8002142:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002146:	3008      	adds	r0, #8
 8002148:	4770      	bx	lr

0800214a <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 800214a:	2338      	movs	r3, #56	; 0x38
 800214c:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002150:	3008      	adds	r0, #8
 8002152:	4770      	bx	lr

08002154 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002154:	2001      	movs	r0, #1
 8002156:	4770      	bx	lr

08002158 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002158:	f641 5064 	movw	r0, #7524	; 0x1d64
 800215c:	4770      	bx	lr

0800215e <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800215e:	f641 5364 	movw	r3, #7524	; 0x1d64
 8002162:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002166:	3008      	adds	r0, #8
 8002168:	4770      	bx	lr

0800216a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800216a:	f641 5364 	movw	r3, #7524	; 0x1d64
 800216e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002172:	3008      	adds	r0, #8
 8002174:	4770      	bx	lr

08002176 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002176:	2001      	movs	r0, #1
 8002178:	4770      	bx	lr

0800217a <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 800217a:	2010      	movs	r0, #16
 800217c:	4770      	bx	lr

0800217e <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800217e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002182:	3008      	adds	r0, #8
 8002184:	4770      	bx	lr

08002186 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002186:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800218a:	3008      	adds	r0, #8
 800218c:	4770      	bx	lr

0800218e <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 800218e:	4608      	mov	r0, r1
 8002190:	f002 b9dc 	b.w	800454c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08002194 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8002194:	b510      	push	{r4, lr}
 8002196:	4b03      	ldr	r3, [pc, #12]	; (80021a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8002198:	6003      	str	r3, [r0, #0]
 800219a:	4604      	mov	r4, r0
 800219c:	f00d fea7 	bl	800feee <_ZN8touchgfx17AbstractPartitionD1Ev>
 80021a0:	4620      	mov	r0, r4
 80021a2:	bd10      	pop	{r4, pc}
 80021a4:	0802c970 	.word	0x0802c970

080021a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 80021a8:	b510      	push	{r4, lr}
 80021aa:	4604      	mov	r4, r0
 80021ac:	f7ff fff2 	bl	8002194 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80021b0:	4620      	mov	r0, r4
 80021b2:	2140      	movs	r1, #64	; 0x40
 80021b4:	f028 fa09 	bl	802a5ca <_ZdlPvj>
 80021b8:	4620      	mov	r0, r4
 80021ba:	bd10      	pop	{r4, pc}

080021bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80021bc:	b510      	push	{r4, lr}
 80021be:	4b03      	ldr	r3, [pc, #12]	; (80021cc <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80021c0:	6003      	str	r3, [r0, #0]
 80021c2:	4604      	mov	r4, r0
 80021c4:	f00d fe93 	bl	800feee <_ZN8touchgfx17AbstractPartitionD1Ev>
 80021c8:	4620      	mov	r0, r4
 80021ca:	bd10      	pop	{r4, pc}
 80021cc:	0802c93c 	.word	0x0802c93c

080021d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80021d0:	b510      	push	{r4, lr}
 80021d2:	4604      	mov	r4, r0
 80021d4:	f7ff fff2 	bl	80021bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80021d8:	4620      	mov	r0, r4
 80021da:	f641 516c 	movw	r1, #7532	; 0x1d6c
 80021de:	f028 f9f4 	bl	802a5ca <_ZdlPvj>
 80021e2:	4620      	mov	r0, r4
 80021e4:	bd10      	pop	{r4, pc}
	...

080021e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80021e8:	b510      	push	{r4, lr}
 80021ea:	4b03      	ldr	r3, [pc, #12]	; (80021f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80021ec:	6003      	str	r3, [r0, #0]
 80021ee:	4604      	mov	r4, r0
 80021f0:	f00d fe7d 	bl	800feee <_ZN8touchgfx17AbstractPartitionD1Ev>
 80021f4:	4620      	mov	r0, r4
 80021f6:	bd10      	pop	{r4, pc}
 80021f8:	0802c908 	.word	0x0802c908

080021fc <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80021fc:	b510      	push	{r4, lr}
 80021fe:	4604      	mov	r4, r0
 8002200:	f7ff fff2 	bl	80021e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002204:	4620      	mov	r0, r4
 8002206:	2118      	movs	r1, #24
 8002208:	f028 f9df 	bl	802a5ca <_ZdlPvj>
 800220c:	4620      	mov	r0, r4
 800220e:	bd10      	pop	{r4, pc}

08002210 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8002210:	b510      	push	{r4, lr}
 8002212:	4b09      	ldr	r3, [pc, #36]	; (8002238 <_ZN12FrontendHeapD1Ev+0x28>)
 8002214:	6003      	str	r3, [r0, #0]
 8002216:	4604      	mov	r4, r0
 8002218:	f500 50ec 	add.w	r0, r0, #7552	; 0x1d80
 800221c:	3018      	adds	r0, #24
 800221e:	f7ff ffb9 	bl	8002194 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002222:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8002226:	f7ff ffc9 	bl	80021bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800222a:	f104 0014 	add.w	r0, r4, #20
 800222e:	f7ff ffdb 	bl	80021e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002232:	4620      	mov	r0, r4
 8002234:	bd10      	pop	{r4, pc}
 8002236:	bf00      	nop
 8002238:	0802c9a4 	.word	0x0802c9a4

0800223c <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800223c:	b508      	push	{r3, lr}
 800223e:	4802      	ldr	r0, [pc, #8]	; (8002248 <__tcf_0+0xc>)
 8002240:	f7ff ffe6 	bl	8002210 <_ZN12FrontendHeapD1Ev>
 8002244:	bd08      	pop	{r3, pc}
 8002246:	bf00      	nop
 8002248:	20000890 	.word	0x20000890

0800224c <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 800224c:	b510      	push	{r4, lr}
 800224e:	4604      	mov	r4, r0
 8002250:	f7ff ffde 	bl	8002210 <_ZN12FrontendHeapD1Ev>
 8002254:	4620      	mov	r0, r4
 8002256:	f641 713c 	movw	r1, #7996	; 0x1f3c
 800225a:	f028 f9b6 	bl	802a5ca <_ZdlPvj>
 800225e:	4620      	mov	r0, r4
 8002260:	bd10      	pop	{r4, pc}
	...

08002264 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8002264:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002268:	f000 fa5c 	bl	8002724 <_ZN14BitmapDatabase11getInstanceEv>
 800226c:	4605      	mov	r5, r0
 800226e:	f000 fa5d 	bl	800272c <_ZN14BitmapDatabase15getInstanceSizeEv>
 8002272:	2400      	movs	r4, #0
 8002274:	4601      	mov	r1, r0
 8002276:	4623      	mov	r3, r4
 8002278:	4628      	mov	r0, r5
 800227a:	4622      	mov	r2, r4
 800227c:	9400      	str	r4, [sp, #0]
 800227e:	f017 fd2b 	bl	8019cd8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8002282:	4b26      	ldr	r3, [pc, #152]	; (800231c <touchgfx_init+0xb8>)
 8002284:	4a26      	ldr	r2, [pc, #152]	; (8002320 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8002286:	4d27      	ldr	r5, [pc, #156]	; (8002324 <touchgfx_init+0xc0>)
 8002288:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 800228a:	4620      	mov	r0, r4
 800228c:	f006 f964 	bl	8008558 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8002290:	4825      	ldr	r0, [pc, #148]	; (8002328 <touchgfx_init+0xc4>)
 8002292:	f017 fc89 	bl	8019ba8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8002296:	682b      	ldr	r3, [r5, #0]
 8002298:	f3bf 8f5b 	dmb	ish
 800229c:	07db      	lsls	r3, r3, #31
 800229e:	d436      	bmi.n	800230e <touchgfx_init+0xaa>
 80022a0:	4628      	mov	r0, r5
 80022a2:	f028 f994 	bl	802a5ce <__cxa_guard_acquire>
 80022a6:	b390      	cbz	r0, 800230e <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 80022a8:	4c20      	ldr	r4, [pc, #128]	; (800232c <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 80022aa:	4b21      	ldr	r3, [pc, #132]	; (8002330 <touchgfx_init+0xcc>)
          screenStorage(scr),
          transitionStorage(tra),
 80022ac:	4f21      	ldr	r7, [pc, #132]	; (8002334 <touchgfx_init+0xd0>)
 80022ae:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 80022b0:	f504 56ef 	add.w	r6, r4, #7648	; 0x1de0
        : presenterStorage(pres),
 80022b4:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 80022b8:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 80022bc:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 80022be:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 80022c2:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 80022c4:	6126      	str	r6, [r4, #16]
 80022c6:	f00d fe13 	bl	800fef0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80022ca:	4b1b      	ldr	r3, [pc, #108]	; (8002338 <touchgfx_init+0xd4>)
 80022cc:	6163      	str	r3, [r4, #20]
 80022ce:	4640      	mov	r0, r8
 80022d0:	f00d fe0e 	bl	800fef0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80022d4:	4b19      	ldr	r3, [pc, #100]	; (800233c <touchgfx_init+0xd8>)
 80022d6:	62e3      	str	r3, [r4, #44]	; 0x2c
 80022d8:	4638      	mov	r0, r7
 80022da:	f00d fe09 	bl	800fef0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80022de:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80022e2:	4a17      	ldr	r2, [pc, #92]	; (8002340 <touchgfx_init+0xdc>)
 80022e4:	f8c3 2d98 	str.w	r2, [r3, #3480]	; 0xd98
 80022e8:	f603 50d8 	addw	r0, r3, #3544	; 0xdd8
 80022ec:	f006 fdaa 	bl	8008e44 <_ZN5ModelC1Ev>
 80022f0:	4622      	mov	r2, r4
 80022f2:	f1a6 0108 	sub.w	r1, r6, #8
 80022f6:	4630      	mov	r0, r6
 80022f8:	f006 fab4 	bl	8008864 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80022fc:	4630      	mov	r0, r6
 80022fe:	f002 f925 	bl	800454c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 8002302:	4810      	ldr	r0, [pc, #64]	; (8002344 <touchgfx_init+0xe0>)
 8002304:	f028 ff92 	bl	802b22c <atexit>
 8002308:	4628      	mov	r0, r5
 800230a:	f028 f96c 	bl	802a5e6 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800230e:	480e      	ldr	r0, [pc, #56]	; (8002348 <touchgfx_init+0xe4>)
}
 8002310:	b002      	add	sp, #8
 8002312:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8002316:	f7ff bdb5 	b.w	8001e84 <_ZN11TouchGFXHAL10initializeEv>
 800231a:	bf00      	nop
 800231c:	20013880 	.word	0x20013880
 8002320:	20002890 	.word	0x20002890
 8002324:	2000088c 	.word	0x2000088c
 8002328:	20000014 	.word	0x20000014
 800232c:	20000890 	.word	0x20000890
 8002330:	0802c9a4 	.word	0x0802c9a4
 8002334:	20002628 	.word	0x20002628
 8002338:	0802c908 	.word	0x0802c908
 800233c:	0802c93c 	.word	0x0802c93c
 8002340:	0802c970 	.word	0x0802c970
 8002344:	0800223d 	.word	0x0800223d
 8002348:	20002814 	.word	0x20002814

0800234c <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 800234c:	4770      	bx	lr
	...

08002350 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8002350:	4801      	ldr	r0, [pc, #4]	; (8002358 <touchgfx_taskEntry+0x8>)
 8002352:	f7ff bda5 	b.w	8001ea0 <_ZN11TouchGFXHAL9taskEntryEv>
 8002356:	bf00      	nop
 8002358:	20002814 	.word	0x20002814

0800235c <_GLOBAL__sub_I_touchgfx_init>:
}
 800235c:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 800235e:	4e22      	ldr	r6, [pc, #136]	; (80023e8 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8002360:	4c22      	ldr	r4, [pc, #136]	; (80023ec <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8002362:	4d23      	ldr	r5, [pc, #140]	; (80023f0 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8002364:	4b23      	ldr	r3, [pc, #140]	; (80023f4 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8002366:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8002368:	4630      	mov	r0, r6
 800236a:	f7ff fed1 	bl	8002110 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800236e:	4628      	mov	r0, r5
 8002370:	f01b ff7e 	bl	801e270 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8002374:	4b20      	ldr	r3, [pc, #128]	; (80023f8 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002376:	4821      	ldr	r0, [pc, #132]	; (80023fc <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8002378:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 800237a:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800237c:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8002380:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8002384:	491e      	ldr	r1, [pc, #120]	; (8002400 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8002386:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8002388:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 800238c:	491d      	ldr	r1, [pc, #116]	; (8002404 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 800238e:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8002390:	491d      	ldr	r1, [pc, #116]	; (8002408 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 8002392:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 8002396:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002398:	21f0      	movs	r1, #240	; 0xf0
 800239a:	8001      	strh	r1, [r0, #0]
 800239c:	481b      	ldr	r0, [pc, #108]	; (800240c <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 800239e:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80023a0:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80023a2:	481b      	ldr	r0, [pc, #108]	; (8002410 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 80023a4:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80023a8:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 80023ac:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80023b0:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80023b4:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80023b8:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 80023bc:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 80023c0:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80023c4:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 80023c8:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 80023cc:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 80023ce:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80023d2:	8001      	strh	r1, [r0, #0]
 80023d4:	480f      	ldr	r0, [pc, #60]	; (8002414 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 80023d6:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80023d8:	490f      	ldr	r1, [pc, #60]	; (8002418 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80023da:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80023dc:	2201      	movs	r2, #1
 80023de:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80023e2:	4a0e      	ldr	r2, [pc, #56]	; (800241c <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80023e4:	601a      	str	r2, [r3, #0]
}
 80023e6:	bd70      	pop	{r4, r5, r6, pc}
 80023e8:	200027d0 	.word	0x200027d0
 80023ec:	200027cc 	.word	0x200027cc
 80023f0:	20002894 	.word	0x20002894
 80023f4:	0802c408 	.word	0x0802c408
 80023f8:	20002814 	.word	0x20002814
 80023fc:	20013810 	.word	0x20013810
 8002400:	01000001 	.word	0x01000001
 8002404:	01010000 	.word	0x01010000
 8002408:	2001381c 	.word	0x2001381c
 800240c:	20013816 	.word	0x20013816
 8002410:	20013812 	.word	0x20013812
 8002414:	20013818 	.word	0x20013818
 8002418:	20013814 	.word	0x20013814
 800241c:	0802c594 	.word	0x0802c594

08002420 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002420:	2000      	movs	r0, #0
 8002422:	4770      	bx	lr

08002424 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002424:	8081      	strh	r1, [r0, #4]
    }
 8002426:	4770      	bx	lr

08002428 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002428:	80c1      	strh	r1, [r0, #6]
    }
 800242a:	4770      	bx	lr

0800242c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800242c:	8101      	strh	r1, [r0, #8]
    }
 800242e:	4770      	bx	lr

08002430 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002430:	8141      	strh	r1, [r0, #10]
    }
 8002432:	4770      	bx	lr

08002434 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002434:	4770      	bx	lr

08002436 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002436:	4770      	bx	lr

08002438 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002438:	4770      	bx	lr

0800243a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800243a:	4770      	bx	lr

0800243c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800243c:	4770      	bx	lr

0800243e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800243e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002440:	88c4      	ldrh	r4, [r0, #6]
 8002442:	6803      	ldr	r3, [r0, #0]
 8002444:	1b12      	subs	r2, r2, r4
 8002446:	8884      	ldrh	r4, [r0, #4]
 8002448:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800244a:	1b09      	subs	r1, r1, r4
 800244c:	b212      	sxth	r2, r2
    }
 800244e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002452:	b209      	sxth	r1, r1
 8002454:	4718      	bx	r3

08002456 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002456:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800245a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800245c:	f04f 33ff 	mov.w	r3, #4294967295
 8002460:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002462:	6813      	ldr	r3, [r2, #0]
 8002464:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002466:	6010      	str	r0, [r2, #0]
    }
 8002468:	4770      	bx	lr

0800246a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800246a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800246e:	b11a      	cbz	r2, 8002478 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002470:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002474:	b102      	cbz	r2, 8002478 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002476:	6018      	str	r0, [r3, #0]
        }
    }
 8002478:	4770      	bx	lr

0800247a <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800247a:	2000      	movs	r0, #0
 800247c:	4770      	bx	lr

0800247e <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800247e:	888b      	ldrh	r3, [r1, #4]
 8002480:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8002482:	2001      	movs	r0, #1
 8002484:	4770      	bx	lr

08002486 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8002486:	4770      	bx	lr

08002488 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002488:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 800248c:	4770      	bx	lr

0800248e <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 800248e:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8002492:	4770      	bx	lr

08002494 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8002494:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002496:	2200      	movs	r2, #0
        return rect.width;
 8002498:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 800249c:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80024a0:	8002      	strh	r2, [r0, #0]
 80024a2:	8042      	strh	r2, [r0, #2]
 80024a4:	8084      	strh	r4, [r0, #4]
 80024a6:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80024a8:	bd10      	pop	{r4, pc}

080024aa <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80024aa:	2200      	movs	r2, #0
 80024ac:	8002      	strh	r2, [r0, #0]
 80024ae:	8042      	strh	r2, [r0, #2]
 80024b0:	8082      	strh	r2, [r0, #4]
 80024b2:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80024b4:	4770      	bx	lr
	...

080024b8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80024b8:	4b02      	ldr	r3, [pc, #8]	; (80024c4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 80024ba:	2290      	movs	r2, #144	; 0x90
 80024bc:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80024c0:	4770      	bx	lr
 80024c2:	bf00      	nop
 80024c4:	e000e100 	.word	0xe000e100

080024c8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80024c8:	4b02      	ldr	r3, [pc, #8]	; (80024d4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80024ca:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80024ce:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 80024d0:	4770      	bx	lr
 80024d2:	bf00      	nop
 80024d4:	e000e100 	.word	0xe000e100

080024d8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80024d8:	4a09      	ldr	r2, [pc, #36]	; (8002500 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80024da:	490a      	ldr	r1, [pc, #40]	; (8002504 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80024dc:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80024de:	480a      	ldr	r0, [pc, #40]	; (8002508 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80024e0:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80024e4:	3b01      	subs	r3, #1
 80024e6:	b29b      	uxth	r3, r3
 80024e8:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80024ea:	6911      	ldr	r1, [r2, #16]
 80024ec:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80024f0:	3901      	subs	r1, #1
 80024f2:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80024f4:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80024f6:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80024f8:	f043 0301 	orr.w	r3, r3, #1
 80024fc:	6353      	str	r3, [r2, #52]	; 0x34
}
 80024fe:	4770      	bx	lr
 8002500:	40016800 	.word	0x40016800
 8002504:	2000291a 	.word	0x2000291a
 8002508:	20002918 	.word	0x20002918

0800250c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 800250c:	4b01      	ldr	r3, [pc, #4]	; (8002514 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800250e:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 8002512:	4770      	bx	lr
 8002514:	40016800 	.word	0x40016800

08002518 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002518:	4b02      	ldr	r3, [pc, #8]	; (8002524 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800251a:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800251c:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002520:	625a      	str	r2, [r3, #36]	; 0x24
}
 8002522:	4770      	bx	lr
 8002524:	40016800 	.word	0x40016800

08002528 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8002528:	b570      	push	{r4, r5, r6, lr}
 800252a:	4604      	mov	r4, r0
    HAL::initialize();
 800252c:	f00e fe1f 	bl	801116e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8002530:	6823      	ldr	r3, [r4, #0]
 8002532:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8002534:	f013 ff94 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
 8002538:	4601      	mov	r1, r0
 800253a:	4620      	mov	r0, r4
 800253c:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800253e:	6823      	ldr	r3, [r4, #0]
 8002540:	4a05      	ldr	r2, [pc, #20]	; (8002558 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8002542:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8002546:	4620      	mov	r0, r4
 8002548:	46ac      	mov	ip, r5
 800254a:	2300      	movs	r3, #0
}
 800254c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002550:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8002554:	4760      	bx	ip
 8002556:	bf00      	nop
 8002558:	d004b000 	.word	0xd004b000

0800255c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 800255c:	f00e bdee 	b.w	801113c <_ZN8touchgfx3HAL10beginFrameEv>

08002560 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8002560:	f00e bdf8 	b.w	8011154 <_ZN8touchgfx3HAL8endFrameEv>

08002564 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8002564:	f00e bdb3 	b.w	80110ce <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002568 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8002568:	f00e bf15 	b.w	8011396 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

0800256c <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 800256c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002570:	b112      	cbz	r2, 8002578 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002572:	6803      	ldr	r3, [r0, #0]
 8002574:	695b      	ldr	r3, [r3, #20]
 8002576:	4718      	bx	r3
    }
 8002578:	4770      	bx	lr
	...

0800257c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800257c:	4b04      	ldr	r3, [pc, #16]	; (8002590 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 800257e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8002582:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8002586:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800258a:	f3bf 8f6f 	isb	sy
}
 800258e:	4770      	bx	lr
 8002590:	e000e100 	.word	0xe000e100

08002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8002594:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8002596:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002598:	4e12      	ldr	r6, [pc, #72]	; (80025e4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 800259a:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 800259c:	4b12      	ldr	r3, [pc, #72]	; (80025e8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 800259e:	6003      	str	r3, [r0, #0]
 80025a0:	6833      	ldr	r3, [r6, #0]
 80025a2:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 80025a6:	4605      	mov	r5, r0
 80025a8:	b10a      	cbz	r2, 80025ae <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80025aa:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80025ac:	b900      	cbnz	r0, 80025b0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80025ae:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80025b0:	6803      	ldr	r3, [r0, #0]
 80025b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80025b4:	4798      	blx	r3
        return auxiliaryLCD;
 80025b6:	6833      	ldr	r3, [r6, #0]
 80025b8:	fab0 f480 	clz	r4, r0
 80025bc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80025be:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80025c0:	b130      	cbz	r0, 80025d0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80025c2:	6803      	ldr	r3, [r0, #0]
 80025c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80025c6:	4798      	blx	r3
 80025c8:	2800      	cmp	r0, #0
 80025ca:	bf08      	it	eq
 80025cc:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 80025d0:	b92c      	cbnz	r4, 80025de <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 80025d2:	4b06      	ldr	r3, [pc, #24]	; (80025ec <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 80025d4:	4a06      	ldr	r2, [pc, #24]	; (80025f0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 80025d6:	4807      	ldr	r0, [pc, #28]	; (80025f4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 80025d8:	212c      	movs	r1, #44	; 0x2c
 80025da:	f028 fe09 	bl	802b1f0 <__assert_func>
    }
 80025de:	4628      	mov	r0, r5
 80025e0:	bd70      	pop	{r4, r5, r6, pc}
 80025e2:	bf00      	nop
 80025e4:	2001381c 	.word	0x2001381c
 80025e8:	0802cab4 	.word	0x0802cab4
 80025ec:	0802c9b0 	.word	0x0802c9b0
 80025f0:	0802ca0e 	.word	0x0802ca0e
 80025f4:	0802ca47 	.word	0x0802ca47

080025f8 <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 80025f8:	4770      	bx	lr
	...

080025fc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 80025fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 8002600:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 8002602:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 8002606:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 800260a:	d105      	bne.n	8002618 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 800260c:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 8002610:	4281      	cmp	r1, r0
 8002612:	d8fb      	bhi.n	800260c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 8002614:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 8002618:	4f17      	ldr	r7, [pc, #92]	; (8002678 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800261a:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800261e:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002622:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002626:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800262a:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800262c:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 800262e:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002630:	b2db      	uxtb	r3, r3
 8002632:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8002634:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002638:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800263c:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002640:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002644:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002648:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800264c:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002650:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002654:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002656:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800265a:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800265e:	fb03 4e0e 	mla	lr, r3, lr, r4
 8002662:	fbbe fef5 	udiv	lr, lr, r5
 8002666:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800266a:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 800266e:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 8002672:	4281      	cmp	r1, r0
 8002674:	d8de      	bhi.n	8002634 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 8002676:	e7cd      	b.n	8002614 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 8002678:	fffff800 	.word	0xfffff800

0800267c <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 800267c:	b510      	push	{r4, lr}
        return instance;
 800267e:	4c14      	ldr	r4, [pc, #80]	; (80026d0 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8002680:	6823      	ldr	r3, [r4, #0]
 8002682:	b323      	cbz	r3, 80026ce <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8002684:	4b13      	ldr	r3, [pc, #76]	; (80026d4 <HAL_LTDC_LineEventCallback+0x58>)
 8002686:	4a14      	ldr	r2, [pc, #80]	; (80026d8 <HAL_LTDC_LineEventCallback+0x5c>)
 8002688:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800268a:	8811      	ldrh	r1, [r2, #0]
 800268c:	428b      	cmp	r3, r1
 800268e:	d113      	bne.n	80026b8 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8002690:	4b12      	ldr	r3, [pc, #72]	; (80026dc <HAL_LTDC_LineEventCallback+0x60>)
 8002692:	8819      	ldrh	r1, [r3, #0]
 8002694:	f009 f942 	bl	800b91c <HAL_LTDC_ProgramLineEvent>
 8002698:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 800269a:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 800269e:	3301      	adds	r3, #1
 80026a0:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 80026a4:	f7ff fce8 	bl	8002078 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80026a8:	6820      	ldr	r0, [r4, #0]
 80026aa:	f00f fa9f 	bl	8011bec <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 80026ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80026b2:	2000      	movs	r0, #0
 80026b4:	f7ff bb60 	b.w	8001d78 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80026b8:	f009 f930 	bl	800b91c <HAL_LTDC_ProgramLineEvent>
        return instance;
 80026bc:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80026be:	6803      	ldr	r3, [r0, #0]
 80026c0:	6a1b      	ldr	r3, [r3, #32]
 80026c2:	4798      	blx	r3
    }
 80026c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80026c8:	2000      	movs	r0, #0
 80026ca:	f7ff bb6d 	b.w	8001da8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 80026ce:	bd10      	pop	{r4, pc}
 80026d0:	2001381c 	.word	0x2001381c
 80026d4:	40016800 	.word	0x40016800
 80026d8:	2000291a 	.word	0x2000291a
 80026dc:	20002918 	.word	0x20002918

080026e0 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80026e0:	4770      	bx	lr

080026e2 <_ZN23ApplicationFontProviderD0Ev>:
 80026e2:	b510      	push	{r4, lr}
 80026e4:	2104      	movs	r1, #4
 80026e6:	4604      	mov	r4, r0
 80026e8:	f027 ff6f 	bl	802a5ca <_ZdlPvj>
 80026ec:	4620      	mov	r0, r4
 80026ee:	bd10      	pop	{r4, pc}

080026f0 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80026f0:	b508      	push	{r3, lr}
    switch (typography)
 80026f2:	2903      	cmp	r1, #3
 80026f4:	d813      	bhi.n	800271e <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 80026f6:	e8df f001 	tbb	[pc, r1]
 80026fa:	0602      	.short	0x0602
 80026fc:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80026fe:	f005 ff77 	bl	80085f0 <_ZN17TypedTextDatabase8getFontsEv>
 8002702:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002704:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002706:	f005 ff73 	bl	80085f0 <_ZN17TypedTextDatabase8getFontsEv>
 800270a:	6840      	ldr	r0, [r0, #4]
 800270c:	e7fa      	b.n	8002704 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800270e:	f005 ff6f 	bl	80085f0 <_ZN17TypedTextDatabase8getFontsEv>
 8002712:	6880      	ldr	r0, [r0, #8]
 8002714:	e7f6      	b.n	8002704 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002716:	f005 ff6b 	bl	80085f0 <_ZN17TypedTextDatabase8getFontsEv>
 800271a:	68c0      	ldr	r0, [r0, #12]
 800271c:	e7f2      	b.n	8002704 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 800271e:	2000      	movs	r0, #0
 8002720:	e7f0      	b.n	8002704 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002724 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002724:	4800      	ldr	r0, [pc, #0]	; (8002728 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002726:	4770      	bx	lr
 8002728:	0802cae0 	.word	0x0802cae0

0800272c <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 800272c:	200c      	movs	r0, #12
 800272e:	4770      	bx	lr

08002730 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002730:	b513      	push	{r0, r1, r4, lr}
 8002732:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002734:	b151      	cbz	r1, 800274c <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002736:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002738:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800273a:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800273e:	aa01      	add	r2, sp, #4
 8002740:	689c      	ldr	r4, [r3, #8]
 8002742:	f10d 0303 	add.w	r3, sp, #3
 8002746:	47a0      	blx	r4
        return glyph;
    }
 8002748:	b002      	add	sp, #8
 800274a:	bd10      	pop	{r4, pc}
            return 0;
 800274c:	4608      	mov	r0, r1
 800274e:	e7fb      	b.n	8002748 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002750 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002750:	89c0      	ldrh	r0, [r0, #14]
 8002752:	4770      	bx	lr

08002754 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002754:	8a00      	ldrh	r0, [r0, #16]
 8002756:	4770      	bx	lr

08002758 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002758:	88c0      	ldrh	r0, [r0, #6]
 800275a:	4770      	bx	lr

0800275c <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 800275c:	8880      	ldrh	r0, [r0, #4]
 800275e:	4770      	bx	lr

08002760 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002760:	7a80      	ldrb	r0, [r0, #10]
    }
 8002762:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002766:	4770      	bx	lr

08002768 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002768:	7a80      	ldrb	r0, [r0, #10]
    }
 800276a:	09c0      	lsrs	r0, r0, #7
 800276c:	4770      	bx	lr

0800276e <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 800276e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8002770:	4770      	bx	lr

08002772 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002772:	4770      	bx	lr

08002774 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002774:	4770      	bx	lr

08002776 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002776:	4770      	bx	lr

08002778 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002778:	4770      	bx	lr

0800277a <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800277a:	4770      	bx	lr

0800277c <_ZN8touchgfx9TypedTextD1Ev>:
    }
 800277c:	4770      	bx	lr

0800277e <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 800277e:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002780:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8002782:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002784:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002786:	466d      	mov	r5, sp
 8002788:	4601      	mov	r1, r0
 800278a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 800278e:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002790:	4628      	mov	r0, r5
 8002792:	4798      	blx	r3
 8002794:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002798:	343c      	adds	r4, #60	; 0x3c
 800279a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800279e:	b005      	add	sp, #20
 80027a0:	bd30      	pop	{r4, r5, pc}

080027a2 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80027a2:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80027a4:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80027a6:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80027a8:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80027aa:	466d      	mov	r5, sp
 80027ac:	4601      	mov	r1, r0
 80027ae:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80027b2:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80027b4:	4628      	mov	r0, r5
 80027b6:	4798      	blx	r3
 80027b8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80027bc:	343c      	adds	r4, #60	; 0x3c
 80027be:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80027c2:	b005      	add	sp, #20
 80027c4:	bd30      	pop	{r4, r5, pc}

080027c6 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80027c6:	2200      	movs	r2, #0
 80027c8:	8002      	strh	r2, [r0, #0]
 80027ca:	8042      	strh	r2, [r0, #2]
 80027cc:	8082      	strh	r2, [r0, #4]
 80027ce:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80027d0:	4770      	bx	lr

080027d2 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80027d2:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 80027d6:	4770      	bx	lr

080027d8 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80027d8:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80027da:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80027dc:	4604      	mov	r4, r0
        setX(x);
 80027de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80027e0:	4615      	mov	r5, r2
        setX(x);
 80027e2:	4798      	blx	r3
        setBaselineY(baselineY);
 80027e4:	6823      	ldr	r3, [r4, #0]
 80027e6:	4629      	mov	r1, r5
 80027e8:	4620      	mov	r0, r4
 80027ea:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80027ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80027f0:	4718      	bx	r3

080027f2 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80027f2:	2000      	movs	r0, #0
 80027f4:	4770      	bx	lr

080027f6 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80027f6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80027f8:	4770      	bx	lr

080027fa <_ZN23Calibration_PadViewBase17Load_FLASH_ValuesEv>:
     * Virtual Action Handlers
     */
    virtual void Load_FLASH_Values()
    {
        // Override and implement this function in Calibration_Pad
    }
 80027fa:	4770      	bx	lr

080027fc <_ZN23Calibration_PadViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Calibration_PadViewBase::setupScreen()
{
    transitionBegins();
 80027fc:	6803      	ldr	r3, [r0, #0]
 80027fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002800:	4718      	bx	r3

08002802 <_ZN23Calibration_PadViewBase16transitionBeginsEv>:
void Calibration_PadViewBase::transitionBegins()
{
    //Interaction2
    //When screen transition begins call virtual function
    //Call Load_FLASH_Values
    Load_FLASH_Values();
 8002802:	6803      	ldr	r3, [r0, #0]
 8002804:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002806:	4718      	bx	r3

08002808 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002808:	4770      	bx	lr

0800280a <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 800280a:	4770      	bx	lr

0800280c <_ZN8touchgfx14SwipeContainer13PageIndicatorD1Ev>:
    void animateSwipeCancelledLeft();
    void animateSwipeCancelledRight();
    void animateLeft();
    void animateRight();

    class PageIndicator : public Container
 800280c:	4770      	bx	lr

0800280e <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 800280e:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 8002810:	68c2      	ldr	r2, [r0, #12]
 8002812:	6844      	ldr	r4, [r0, #4]
 8002814:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002816:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002818:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800281c:	07d2      	lsls	r2, r2, #31
 800281e:	bf48      	it	mi
 8002820:	5962      	ldrmi	r2, [r4, r5]
 8002822:	689b      	ldr	r3, [r3, #8]
    }
 8002824:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002826:	bf48      	it	mi
 8002828:	58d3      	ldrmi	r3, [r2, r3]
 800282a:	4718      	bx	r3

0800282c <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 800282c:	6843      	ldr	r3, [r0, #4]
 800282e:	b12b      	cbz	r3, 800283c <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002830:	6883      	ldr	r3, [r0, #8]
 8002832:	b92b      	cbnz	r3, 8002840 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002834:	68c0      	ldr	r0, [r0, #12]
 8002836:	f000 0001 	and.w	r0, r0, #1
 800283a:	4770      	bx	lr
 800283c:	4618      	mov	r0, r3
 800283e:	4770      	bx	lr
 8002840:	2001      	movs	r0, #1
    }
 8002842:	4770      	bx	lr

08002844 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002844:	b510      	push	{r4, lr}
    }
 8002846:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002848:	4604      	mov	r4, r0
    }
 800284a:	f027 febe 	bl	802a5ca <_ZdlPvj>
 800284e:	4620      	mov	r0, r4
 8002850:	bd10      	pop	{r4, pc}

08002852 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002852:	b510      	push	{r4, lr}
 8002854:	214c      	movs	r1, #76	; 0x4c
 8002856:	4604      	mov	r4, r0
 8002858:	f027 feb7 	bl	802a5ca <_ZdlPvj>
 800285c:	4620      	mov	r0, r4
 800285e:	bd10      	pop	{r4, pc}

08002860 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002860:	b510      	push	{r4, lr}
 8002862:	2110      	movs	r1, #16
 8002864:	4604      	mov	r4, r0
 8002866:	f027 feb0 	bl	802a5ca <_ZdlPvj>
 800286a:	4620      	mov	r0, r4
 800286c:	bd10      	pop	{r4, pc}

0800286e <_ZN8touchgfx14SwipeContainer13PageIndicatorD0Ev>:
 800286e:	b510      	push	{r4, lr}
 8002870:	218c      	movs	r1, #140	; 0x8c
 8002872:	4604      	mov	r4, r0
 8002874:	f027 fea9 	bl	802a5ca <_ZdlPvj>
 8002878:	4620      	mov	r0, r4
 800287a:	bd10      	pop	{r4, pc}

0800287c <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 800287c:	b538      	push	{r3, r4, r5, lr}
 800287e:	4605      	mov	r5, r0
 8002880:	4b05      	ldr	r3, [pc, #20]	; (8002898 <_ZN23Calibration_PadViewBaseD1Ev+0x1c>)
 8002882:	f845 3be0 	str.w	r3, [r5], #224
 8002886:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002888:	f012 f8e8 	bl	8014a5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
Calibration_PadViewBase::~Calibration_PadViewBase()
 800288c:	4628      	mov	r0, r5
 800288e:	f00d ff9d 	bl	80107cc <_ZN8touchgfx14SwipeContainerD1Ev>
}
 8002892:	4620      	mov	r0, r4
 8002894:	bd38      	pop	{r3, r4, r5, pc}
 8002896:	bf00      	nop
 8002898:	0802cec8 	.word	0x0802cec8

0800289c <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 800289c:	b510      	push	{r4, lr}
 800289e:	4604      	mov	r4, r0
}
 80028a0:	f7ff ffec 	bl	800287c <_ZN23Calibration_PadViewBaseD1Ev>
 80028a4:	4620      	mov	r0, r4
 80028a6:	f641 5164 	movw	r1, #7524	; 0x1d64
 80028aa:	f027 fe8e 	bl	802a5ca <_ZdlPvj>
 80028ae:	4620      	mov	r0, r4
 80028b0:	bd10      	pop	{r4, pc}

080028b2 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 80028b2:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 80028b4:	f7ff fe5a 	bl	800256c <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80028b8:	bd08      	pop	{r3, pc}
	...

080028bc <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80028bc:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80028be:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80028c0:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80028c2:	4b12      	ldr	r3, [pc, #72]	; (800290c <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80028c4:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80028c6:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80028c8:	b28d      	uxth	r5, r1
 80028ca:	b92b      	cbnz	r3, 80028d8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80028cc:	4b10      	ldr	r3, [pc, #64]	; (8002910 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80028ce:	4a11      	ldr	r2, [pc, #68]	; (8002914 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80028d0:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80028d2:	4811      	ldr	r0, [pc, #68]	; (8002918 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80028d4:	f028 fc8c 	bl	802b1f0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80028d8:	4910      	ldr	r1, [pc, #64]	; (800291c <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80028da:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80028dc:	8809      	ldrh	r1, [r1, #0]
 80028de:	4291      	cmp	r1, r2
 80028e0:	d803      	bhi.n	80028ea <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80028e2:	4b0f      	ldr	r3, [pc, #60]	; (8002920 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80028e4:	4a0b      	ldr	r2, [pc, #44]	; (8002914 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80028e6:	216d      	movs	r1, #109	; 0x6d
 80028e8:	e7f3      	b.n	80028d2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80028ea:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80028ee:	4b0d      	ldr	r3, [pc, #52]	; (8002924 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80028f0:	681b      	ldr	r3, [r3, #0]
 80028f2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80028f6:	6803      	ldr	r3, [r0, #0]
 80028f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028fa:	4798      	blx	r3
 80028fc:	1a28      	subs	r0, r5, r0
 80028fe:	b201      	sxth	r1, r0
 8002900:	4633      	mov	r3, r6
 8002902:	4620      	mov	r0, r4
    }
 8002904:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002908:	4718      	bx	r3
 800290a:	bf00      	nop
 800290c:	20013874 	.word	0x20013874
 8002910:	0802cbd0 	.word	0x0802cbd0
 8002914:	0802cc12 	.word	0x0802cc12
 8002918:	0802cc4d 	.word	0x0802cc4d
 800291c:	20013878 	.word	0x20013878
 8002920:	0802cc94 	.word	0x0802cc94
 8002924:	2001387c 	.word	0x2001387c

08002928 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002928:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800292a:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800292c:	4604      	mov	r4, r0
        setX(x);
 800292e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002930:	4615      	mov	r5, r2
        setX(x);
 8002932:	4798      	blx	r3
        setY(y);
 8002934:	6823      	ldr	r3, [r4, #0]
 8002936:	4629      	mov	r1, r5
 8002938:	4620      	mov	r0, r4
 800293a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 800293c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002940:	4718      	bx	r3

08002942 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002942:	b570      	push	{r4, r5, r6, lr}
 8002944:	4604      	mov	r4, r0
 8002946:	461d      	mov	r5, r3
 8002948:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 800294c:	f7ff ffec 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002950:	6823      	ldr	r3, [r4, #0]
 8002952:	4629      	mov	r1, r5
 8002954:	4620      	mov	r0, r4
 8002956:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002958:	4798      	blx	r3
        setHeight(height);
 800295a:	6823      	ldr	r3, [r4, #0]
 800295c:	4631      	mov	r1, r6
 800295e:	4620      	mov	r0, r4
 8002960:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002962:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002966:	4718      	bx	r3

08002968 <_ZN8touchgfx9ContainerC1Ev>:
          touchable(false),
 8002968:	f44f 7180 	mov.w	r1, #256	; 0x100
 800296c:	2200      	movs	r2, #0
 800296e:	8481      	strh	r1, [r0, #36]	; 0x24
          firstChild(0)
 8002970:	4905      	ldr	r1, [pc, #20]	; (8002988 <_ZN8touchgfx9ContainerC1Ev+0x20>)
 8002972:	6001      	str	r1, [r0, #0]
 8002974:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002978:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 800297c:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002980:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002984:	6282      	str	r2, [r0, #40]	; 0x28
    }
 8002986:	4770      	bx	lr
 8002988:	0802edec 	.word	0x0802edec

0800298c <_ZN8touchgfx6WidgetC1Ev>:
 800298c:	2200      	movs	r2, #0
 800298e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002992:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002996:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 800299a:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 800299e:	f44f 7280 	mov.w	r2, #256	; 0x100
 80029a2:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80029a4:	4a01      	ldr	r2, [pc, #4]	; (80029ac <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80029a6:	6002      	str	r2, [r0, #0]
 80029a8:	4770      	bx	lr
 80029aa:	bf00      	nop
 80029ac:	0802cd18 	.word	0x0802cd18

080029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 80029b0:	4b1a      	ldr	r3, [pc, #104]	; (8002a1c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 80029b2:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 80029b4:	881b      	ldrh	r3, [r3, #0]
 80029b6:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80029b8:	428b      	cmp	r3, r1
    void updateTextPosition()
 80029ba:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 80029bc:	d92b      	bls.n	8002a16 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80029be:	4b18      	ldr	r3, [pc, #96]	; (8002a20 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 80029c0:	681b      	ldr	r3, [r3, #0]
 80029c2:	b92b      	cbnz	r3, 80029d0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 80029c4:	4b17      	ldr	r3, [pc, #92]	; (8002a24 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 80029c6:	4a18      	ldr	r2, [pc, #96]	; (8002a28 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 80029c8:	4818      	ldr	r0, [pc, #96]	; (8002a2c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 80029ca:	216c      	movs	r1, #108	; 0x6c
 80029cc:	f028 fc10 	bl	802b1f0 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 80029d0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80029d4:	4b16      	ldr	r3, [pc, #88]	; (8002a30 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 80029d6:	681b      	ldr	r3, [r3, #0]
 80029d8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 80029dc:	4b15      	ldr	r3, [pc, #84]	; (8002a34 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 80029de:	6818      	ldr	r0, [r3, #0]
 80029e0:	f005 fdf6 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80029e4:	682b      	ldr	r3, [r5, #0]
 80029e6:	9001      	str	r0, [sp, #4]
 80029e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80029ea:	4628      	mov	r0, r5
 80029ec:	4798      	blx	r3
 80029ee:	682b      	ldr	r3, [r5, #0]
 80029f0:	9901      	ldr	r1, [sp, #4]
 80029f2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80029f4:	4604      	mov	r4, r0
 80029f6:	4628      	mov	r0, r5
 80029f8:	4798      	blx	r3
 80029fa:	682b      	ldr	r3, [r5, #0]
 80029fc:	9901      	ldr	r1, [sp, #4]
 80029fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a00:	fb14 f400 	smulbb	r4, r4, r0
 8002a04:	4628      	mov	r0, r5
 8002a06:	4798      	blx	r3
 8002a08:	b2a4      	uxth	r4, r4
 8002a0a:	1823      	adds	r3, r4, r0
 8002a0c:	b21b      	sxth	r3, r3
 8002a0e:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002a12:	b002      	add	sp, #8
 8002a14:	bd70      	pop	{r4, r5, r6, pc}
 8002a16:	2300      	movs	r3, #0
 8002a18:	e7f9      	b.n	8002a0e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8002a1a:	bf00      	nop
 8002a1c:	20013878 	.word	0x20013878
 8002a20:	20013874 	.word	0x20013874
 8002a24:	0802cbd0 	.word	0x0802cbd0
 8002a28:	0802cc12 	.word	0x0802cc12
 8002a2c:	0802cc4d 	.word	0x0802cc4d
 8002a30:	2001387c 	.word	0x2001387c
 8002a34:	20013880 	.word	0x20013880

08002a38 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002a38:	2200      	movs	r2, #0
 8002a3a:	f04f 31ff 	mov.w	r1, #4294967295
 8002a3e:	e9c0 2100 	strd	r2, r1, [r0]
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 8002a42:	6082      	str	r2, [r0, #8]
        {
        }
 8002a44:	4770      	bx	lr

08002a46 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 8002a46:	b510      	push	{r4, lr}
 8002a48:	4604      	mov	r4, r0
        return TextArea::BoundingArea();
 8002a4a:	f7ff fff5 	bl	8002a38 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8002a4e:	4620      	mov	r0, r4
 8002a50:	bd10      	pop	{r4, pc}
	...

08002a54 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002a54:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002a56:	2100      	movs	r1, #0
    TextArea()
 8002a58:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002a5a:	2226      	movs	r2, #38	; 0x26
 8002a5c:	f028 fdcd 	bl	802b5fa <memset>
 8002a60:	4620      	mov	r0, r4
 8002a62:	f7ff ff93 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8002a66:	4b09      	ldr	r3, [pc, #36]	; (8002a8c <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 8002a68:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002a6a:	4b09      	ldr	r3, [pc, #36]	; (8002a90 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002a6c:	62a3      	str	r3, [r4, #40]	; 0x28
 8002a6e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002a72:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002a74:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002a78:	2300      	movs	r3, #0
 8002a7a:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 8002a7e:	8723      	strh	r3, [r4, #56]	; 0x38
 8002a80:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 8002a84:	f7ff ffd8 	bl	8002a38 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8002a88:	4620      	mov	r0, r4
 8002a8a:	bd10      	pop	{r4, pc}
 8002a8c:	0802f244 	.word	0x0802f244
 8002a90:	0802cd80 	.word	0x0802cd80

08002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8002a94:	b510      	push	{r4, lr}
 8002a96:	4604      	mov	r4, r0
        : TextArea()
 8002a98:	f7ff ffdc 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002a9c:	4b02      	ldr	r3, [pc, #8]	; (8002aa8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 8002a9e:	6023      	str	r3, [r4, #0]
 8002aa0:	2300      	movs	r3, #0
 8002aa2:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8002aa4:	4620      	mov	r0, r4
 8002aa6:	bd10      	pop	{r4, pc}
 8002aa8:	0802ce20 	.word	0x0802ce20

08002aac <_ZN8touchgfx8DrawableC1ERKS0_>:
class Drawable
 8002aac:	b510      	push	{r4, lr}
 8002aae:	4604      	mov	r4, r0
 8002ab0:	460b      	mov	r3, r1
 8002ab2:	490d      	ldr	r1, [pc, #52]	; (8002ae8 <_ZN8touchgfx8DrawableC1ERKS0_+0x3c>)
 8002ab4:	f844 1b04 	str.w	r1, [r4], #4
 8002ab8:	4602      	mov	r2, r0
 8002aba:	e9d3 0101 	ldrd	r0, r1, [r3, #4]
 8002abe:	e884 0003 	stmia.w	r4, {r0, r1}
 8002ac2:	e9d3 0103 	ldrd	r0, r1, [r3, #12]
 8002ac6:	f102 040c 	add.w	r4, r2, #12
 8002aca:	e884 0003 	stmia.w	r4, {r0, r1}
 8002ace:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 8002ad2:	695c      	ldr	r4, [r3, #20]
 8002ad4:	61d1      	str	r1, [r2, #28]
 8002ad6:	6a19      	ldr	r1, [r3, #32]
 8002ad8:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8002ada:	6211      	str	r1, [r2, #32]
 8002adc:	e9c2 4005 	strd	r4, r0, [r2, #20]
 8002ae0:	8493      	strh	r3, [r2, #36]	; 0x24
 8002ae2:	4610      	mov	r0, r2
 8002ae4:	bd10      	pop	{r4, pc}
 8002ae6:	bf00      	nop
 8002ae8:	0802f664 	.word	0x0802f664

08002aec <_ZN8touchgfx14SwipeContainerC1ERKS0_>:
class SwipeContainer : public Container
 8002aec:	b538      	push	{r3, r4, r5, lr}
 8002aee:	460d      	mov	r5, r1
 8002af0:	4604      	mov	r4, r0
class Container : public Drawable
 8002af2:	f7ff ffdb 	bl	8002aac <_ZN8touchgfx8DrawableC1ERKS0_>
 8002af6:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8002af8:	62a3      	str	r3, [r4, #40]	; 0x28
 8002afa:	4b2b      	ldr	r3, [pc, #172]	; (8002ba8 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xbc>)
 8002afc:	6023      	str	r3, [r4, #0]
 8002afe:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8002b00:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002b02:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8002b04:	6323      	str	r3, [r4, #48]	; 0x30
 8002b06:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8002b08:	6363      	str	r3, [r4, #52]	; 0x34
 8002b0a:	f105 0138 	add.w	r1, r5, #56	; 0x38
 8002b0e:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8002b12:	f7ff ffcb 	bl	8002aac <_ZN8touchgfx8DrawableC1ERKS0_>
 8002b16:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8002b18:	6623      	str	r3, [r4, #96]	; 0x60
 * dimensions of the physical screen. Place the ListLayout inside e.g. a
 * ScrollableContainer to allow all the children to be viewed.
 *
 * @see ScrollableContainer
 */
class ListLayout : public Container
 8002b1a:	4b24      	ldr	r3, [pc, #144]	; (8002bac <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc0>)
 8002b1c:	63a3      	str	r3, [r4, #56]	; 0x38
 8002b1e:	f895 3064 	ldrb.w	r3, [r5, #100]	; 0x64
 8002b22:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8002b26:	f8b5 3066 	ldrh.w	r3, [r5, #102]	; 0x66
 8002b2a:	f8a4 3066 	strh.w	r3, [r4, #102]	; 0x66
 8002b2e:	f105 0168 	add.w	r1, r5, #104	; 0x68
 8002b32:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8002b36:	f7ff ffb9 	bl	8002aac <_ZN8touchgfx8DrawableC1ERKS0_>
 8002b3a:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 8002b3e:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
    class PageIndicator : public Container
 8002b42:	4b1b      	ldr	r3, [pc, #108]	; (8002bb0 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc4>)
 8002b44:	66a3      	str	r3, [r4, #104]	; 0x68
 8002b46:	f105 0194 	add.w	r1, r5, #148	; 0x94
 8002b4a:	f104 0094 	add.w	r0, r4, #148	; 0x94
 8002b4e:	f7ff ffad 	bl	8002aac <_ZN8touchgfx8DrawableC1ERKS0_>
 * is handled by the Image Converter as part of compiling the project. Each image is
 * assigned a unique BITMAP identifier which.
 *
 * @see Bitmap
 */
class Image : public Widget
 8002b52:	f8b5 30ba 	ldrh.w	r3, [r5, #186]	; 0xba
 8002b56:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 8002b5a:	f895 30bc 	ldrb.w	r3, [r5, #188]	; 0xbc
 8002b5e:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 * Simple widget capable of showing a bitmap tiled indefinitely horizontally and vertically.
 * This means that when the TiledImage Widget is larger than the provided Bitmap, the
 * Bitmap is repeated over and over horizontally and vertically. The bitmap can be alpha-
 * blended with the background and have areas of transparency.
 */
class TiledImage : public Image
 8002b62:	4b14      	ldr	r3, [pc, #80]	; (8002bb4 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc8>)
 8002b64:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8002b68:	f8b5 30be 	ldrh.w	r3, [r5, #190]	; 0xbe
 8002b6c:	f8a4 30be 	strh.w	r3, [r4, #190]	; 0xbe
 8002b70:	f8b5 30c0 	ldrh.w	r3, [r5, #192]	; 0xc0
 8002b74:	f8a4 30c0 	strh.w	r3, [r4, #192]	; 0xc0
 8002b78:	f105 01c4 	add.w	r1, r5, #196	; 0xc4
 8002b7c:	f104 00c4 	add.w	r0, r4, #196	; 0xc4
 8002b80:	f7ff ff94 	bl	8002aac <_ZN8touchgfx8DrawableC1ERKS0_>
 8002b84:	4b0c      	ldr	r3, [pc, #48]	; (8002bb8 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xcc>)
 8002b86:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
 8002b8a:	f8b5 30ea 	ldrh.w	r3, [r5, #234]	; 0xea
 8002b8e:	f8a4 30ea 	strh.w	r3, [r4, #234]	; 0xea
 8002b92:	f895 30ec 	ldrb.w	r3, [r5, #236]	; 0xec
 8002b96:	f884 30ec 	strb.w	r3, [r4, #236]	; 0xec
 8002b9a:	f8b5 30f0 	ldrh.w	r3, [r5, #240]	; 0xf0
 8002b9e:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
class SwipeContainer : public Container
 8002ba2:	4620      	mov	r0, r4
 8002ba4:	bd38      	pop	{r3, r4, r5, pc}
 8002ba6:	bf00      	nop
 8002ba8:	0802ee7c 	.word	0x0802ee7c
 8002bac:	0802ef40 	.word	0x0802ef40
 8002bb0:	0802cd90 	.word	0x0802cd90
 8002bb4:	0802f33c 	.word	0x0802f33c
 8002bb8:	0802f520 	.word	0x0802f520

08002bbc <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
{
 8002bbc:	b570      	push	{r4, r5, r6, lr}
    if (&src == &buttonWithLabel3)
 8002bbe:	f100 0398 	add.w	r3, r0, #152	; 0x98
 8002bc2:	4299      	cmp	r1, r3
{
 8002bc4:	b0be      	sub	sp, #248	; 0xf8
 8002bc6:	4604      	mov	r4, r0
 8002bc8:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8002bca:	d103      	bne.n	8002bd4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002bcc:	f013 fc48 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoMain_MenuScreenWipeTransitionWest();
 8002bd0:	f001 fccc 	bl	800456c <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    if (&src == &buttonWithIcon_LP1)
 8002bd4:	f504 7331 	add.w	r3, r4, #708	; 0x2c4
 8002bd8:	429d      	cmp	r5, r3
 8002bda:	d11a      	bne.n	8002c12 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x56>
        SwipeContainer swipeContainer = swipeContainer1;
 8002bdc:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8002be0:	4631      	mov	r1, r6
 8002be2:	a801      	add	r0, sp, #4
 8002be4:	f7ff ff82 	bl	8002aec <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        setCalibrationFlashValues(SECTOR_23_ADDR, 999, 0, 12);
 8002be8:	482a      	ldr	r0, [pc, #168]	; (8002c94 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xd8>)
 8002bea:	230c      	movs	r3, #12
 8002bec:	2200      	movs	r2, #0
 8002bee:	f240 31e7 	movw	r1, #999	; 0x3e7
 8002bf2:	f7fd ff3b 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", 999);
 8002bf6:	4a28      	ldr	r2, [pc, #160]	; (8002c98 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xdc>)
 8002bf8:	f240 33e7 	movw	r3, #999	; 0x3e7
 8002bfc:	210a      	movs	r1, #10
 8002bfe:	f604 607c 	addw	r0, r4, #3708	; 0xe7c
 8002c02:	f016 fddb 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002c06:	4630      	mov	r0, r6
 8002c08:	f014 fd12 	bl	8017630 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002c0c:	a801      	add	r0, sp, #4
 8002c0e:	f00d fddd 	bl	80107cc <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP2)
 8002c12:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8002c16:	429d      	cmp	r5, r3
 8002c18:	d11a      	bne.n	8002c50 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x94>
        SwipeContainer swipeContainer = swipeContainer1;
 8002c1a:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8002c1e:	4631      	mov	r1, r6
 8002c20:	a801      	add	r0, sp, #4
 8002c22:	f7ff ff63 	bl	8002aec <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        setCalibrationFlashValues(SECTOR_23_ADDR, 500, 1, 12);
 8002c26:	481b      	ldr	r0, [pc, #108]	; (8002c94 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xd8>)
 8002c28:	230c      	movs	r3, #12
 8002c2a:	2201      	movs	r2, #1
 8002c2c:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8002c30:	f7fd ff1c 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", 500);
 8002c34:	4a18      	ldr	r2, [pc, #96]	; (8002c98 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xdc>)
 8002c36:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8002c3a:	210a      	movs	r1, #10
 8002c3c:	f604 6068 	addw	r0, r4, #3688	; 0xe68
 8002c40:	f016 fdbc 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002c44:	4630      	mov	r0, r6
 8002c46:	f014 fcf3 	bl	8017630 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002c4a:	a801      	add	r0, sp, #4
 8002c4c:	f00d fdbe 	bl	80107cc <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP3)
 8002c50:	f504 7313 	add.w	r3, r4, #588	; 0x24c
 8002c54:	429d      	cmp	r5, r3
 8002c56:	d11a      	bne.n	8002c8e <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xd2>
        SwipeContainer swipeContainer = swipeContainer1;
 8002c58:	f104 05e0 	add.w	r5, r4, #224	; 0xe0
 8002c5c:	4629      	mov	r1, r5
 8002c5e:	a801      	add	r0, sp, #4
 8002c60:	f7ff ff44 	bl	8002aec <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        setCalibrationFlashValues(SECTOR_23_ADDR, 444, 2, 12);
 8002c64:	480b      	ldr	r0, [pc, #44]	; (8002c94 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xd8>)
 8002c66:	230c      	movs	r3, #12
 8002c68:	2202      	movs	r2, #2
 8002c6a:	f44f 71de 	mov.w	r1, #444	; 0x1bc
 8002c6e:	f7fd fefd 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", 444);
 8002c72:	4a09      	ldr	r2, [pc, #36]	; (8002c98 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xdc>)
 8002c74:	f44f 73de 	mov.w	r3, #444	; 0x1bc
 8002c78:	210a      	movs	r1, #10
 8002c7a:	f604 6054 	addw	r0, r4, #3668	; 0xe54
 8002c7e:	f016 fd9d 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002c82:	4628      	mov	r0, r5
 8002c84:	f014 fcd4 	bl	8017630 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002c88:	a801      	add	r0, sp, #4
 8002c8a:	f00d fd9f 	bl	80107cc <_ZN8touchgfx14SwipeContainerD1Ev>
}
 8002c8e:	b03e      	add	sp, #248	; 0xf8
 8002c90:	bd70      	pop	{r4, r5, r6, pc}
 8002c92:	bf00      	nop
 8002c94:	081e0000 	.word	0x081e0000
 8002c98:	0802ccd2 	.word	0x0802ccd2

08002c9c <_ZN8touchgfx4Line8setStartIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002c9c:	0152      	lsls	r2, r2, #5
 8002c9e:	0149      	lsls	r1, r1, #5
 8002ca0:	f00f bce8 	b.w	8012674 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>

08002ca4 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002ca4:	0152      	lsls	r2, r2, #5
 8002ca6:	0149      	lsls	r1, r1, #5
 8002ca8:	f00f bcef 	b.w	801268a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>

08002cac <_ZN8touchgfx4Line12setLineWidthIiEEvT_>:
     * @see updateLineWidth
     *
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setLineWidth(T width)
 8002cac:	b410      	push	{r4}
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8002cae:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8002cb0:	ebb4 1f41 	cmp.w	r4, r1, lsl #5
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * Rasterizer::POLY_BASE_SIZE));
 8002cb4:	ea4f 1241 	mov.w	r2, r1, lsl #5
 8002cb8:	d004      	beq.n	8002cc4 <_ZN8touchgfx4Line12setLineWidthIiEEvT_+0x18>
    }
 8002cba:	f85d 4b04 	ldr.w	r4, [sp], #4
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8002cbe:	63c2      	str	r2, [r0, #60]	; 0x3c

        updateCachedShape();
 8002cc0:	f00f bbe2 	b.w	8012488 <_ZN8touchgfx4Line17updateCachedShapeEv>
    }
 8002cc4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002cc8:	4770      	bx	lr
	...

08002ccc <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8002ccc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002cd0:	ed2d 8b10 	vpush	{d8-d15}
 8002cd4:	4604      	mov	r4, r0
 8002cd6:	b0af      	sub	sp, #188	; 0xbc
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 8002cd8:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8002cda:	2500      	movs	r5, #0
 8002cdc:	f015 f840 	bl	8017d60 <_ZN8touchgfx6ScreenC1Ev>
 8002ce0:	4be7      	ldr	r3, [pc, #924]	; (8003080 <_ZN23Calibration_PadViewBaseC1Ev+0x3b4>)
 8002ce2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002ce4:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002ce8:	2226      	movs	r2, #38	; 0x26
 8002cea:	4629      	mov	r1, r5
 8002cec:	4658      	mov	r0, fp
 8002cee:	f028 fc84 	bl	802b5fa <memset>
 8002cf2:	4658      	mov	r0, fp
 8002cf4:	f7ff fe4a 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8002cf8:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002cfc:	26ff      	movs	r6, #255	; 0xff
 8002cfe:	4be1      	ldr	r3, [pc, #900]	; (8003084 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8002d00:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8002d02:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002d04:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002d08:	4629      	mov	r1, r5
 8002d0a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002d0e:	4640      	mov	r0, r8
        : color(col)
 8002d10:	66a5      	str	r5, [r4, #104]	; 0x68
 8002d12:	f8ad 30ac 	strh.w	r3, [sp, #172]	; 0xac
 8002d16:	f028 fc70 	bl	802b5fa <memset>
 8002d1a:	4640      	mov	r0, r8
 8002d1c:	f7ff fe36 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8002d20:	4bd9      	ldr	r3, [pc, #868]	; (8003088 <_ZN23Calibration_PadViewBaseC1Ev+0x3bc>)
 8002d22:	66e3      	str	r3, [r4, #108]	; 0x6c
    {
        Image::setBitmap(bmp);
 8002d24:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
        : Widget(), bitmap(bmp), alpha(255)
 8002d28:	f8bd 30ac 	ldrh.w	r3, [sp, #172]	; 0xac
 8002d2c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8002d30:	4649      	mov	r1, r9
 8002d32:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8002d34:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002d38:	f010 fe93 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002d3c:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8002d40:	4618      	mov	r0, r3
 8002d42:	9307      	str	r3, [sp, #28]
 8002d44:	f010 ffc4 	bl	8013cd0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002d48:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8002d4c:	f504 7aea 	add.w	sl, r4, #468	; 0x1d4
 8002d50:	4618      	mov	r0, r3
 8002d52:	ee08 3a10 	vmov	s16, r3
 8002d56:	f504 7700 	add.w	r7, r4, #512	; 0x200
 8002d5a:	f00d fe65 	bl	8010a28 <_ZN8touchgfx14SwipeContainerC1Ev>
 8002d5e:	4650      	mov	r0, sl
 8002d60:	f7ff fe02 	bl	8002968 <_ZN8touchgfx9ContainerC1Ev>
 8002d64:	4638      	mov	r0, r7
 8002d66:	f7ff fe95 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002d6a:	f504 7313 	add.w	r3, r4, #588	; 0x24c
 8002d6e:	4618      	mov	r0, r3
 8002d70:	9312      	str	r3, [sp, #72]	; 0x48
 8002d72:	f010 fe4f 	bl	8013a14 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002d76:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8002d7a:	4618      	mov	r0, r3
 8002d7c:	9313      	str	r3, [sp, #76]	; 0x4c
 8002d7e:	f010 fe49 	bl	8013a14 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002d82:	f504 7331 	add.w	r3, r4, #708	; 0x2c4
 8002d86:	4618      	mov	r0, r3
 8002d88:	9314      	str	r3, [sp, #80]	; 0x50
 8002d8a:	f010 fe43 	bl	8013a14 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002d8e:	f504 7340 	add.w	r3, r4, #768	; 0x300
 8002d92:	4618      	mov	r0, r3
 8002d94:	ee0d 3a90 	vmov	s27, r3
 8002d98:	f7ff fe7c 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002d9c:	f504 7353 	add.w	r3, r4, #844	; 0x34c
 8002da0:	4618      	mov	r0, r3
 8002da2:	ee0e 3a10 	vmov	s28, r3
 8002da6:	f7ff fe75 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002daa:	f504 7366 	add.w	r3, r4, #920	; 0x398
 8002dae:	4618      	mov	r0, r3
 8002db0:	ee0e 3a90 	vmov	s29, r3
 8002db4:	f7ff fe6e 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002db8:	f504 7379 	add.w	r3, r4, #996	; 0x3e4
 8002dbc:	4618      	mov	r0, r3
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002dbe:	4eb3      	ldr	r6, [pc, #716]	; (800308c <_ZN23Calibration_PadViewBaseC1Ev+0x3c0>)
 8002dc0:	ee0a 3a90 	vmov	s21, r3
 8002dc4:	f00f fb40 	bl	8012448 <_ZN8touchgfx4LineC1Ev>
 8002dc8:	f204 4354 	addw	r3, r4, #1108	; 0x454
 8002dcc:	4618      	mov	r0, r3
 8002dce:	931e      	str	r3, [sp, #120]	; 0x78
 8002dd0:	f7ff fbe0 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002dd4:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8002dd8:	f504 628d 	add.w	r2, r4, #1128	; 0x468
 8002ddc:	f8c4 345c 	str.w	r3, [r4, #1116]	; 0x45c
 8002de0:	f8c4 6454 	str.w	r6, [r4, #1108]	; 0x454
 8002de4:	4610      	mov	r0, r2
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8002de6:	f8c4 5460 	str.w	r5, [r4, #1120]	; 0x460
 8002dea:	9208      	str	r2, [sp, #32]
 8002dec:	f7ff fe32 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8002df0:	f504 6296 	add.w	r2, r4, #1200	; 0x4b0
 8002df4:	4610      	mov	r0, r2
 8002df6:	ee08 2a90 	vmov	s17, r2
 8002dfa:	f7ff fdb5 	bl	8002968 <_ZN8touchgfx9ContainerC1Ev>
 8002dfe:	f204 42dc 	addw	r2, r4, #1244	; 0x4dc
 8002e02:	4610      	mov	r0, r2
 8002e04:	9215      	str	r2, [sp, #84]	; 0x54
 8002e06:	f010 fe05 	bl	8013a14 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002e0a:	f504 62a3 	add.w	r2, r4, #1304	; 0x518
 8002e0e:	4610      	mov	r0, r2
 8002e10:	9216      	str	r2, [sp, #88]	; 0x58
 8002e12:	f010 fdff 	bl	8013a14 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002e16:	f204 5254 	addw	r2, r4, #1364	; 0x554
 8002e1a:	4610      	mov	r0, r2
 8002e1c:	9217      	str	r2, [sp, #92]	; 0x5c
 8002e1e:	f010 fdf9 	bl	8013a14 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002e22:	f504 62b2 	add.w	r2, r4, #1424	; 0x590
 8002e26:	4610      	mov	r0, r2
 8002e28:	9209      	str	r2, [sp, #36]	; 0x24
 8002e2a:	f7ff fe33 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002e2e:	f204 52dc 	addw	r2, r4, #1500	; 0x5dc
 8002e32:	4610      	mov	r0, r2
 8002e34:	920a      	str	r2, [sp, #40]	; 0x28
 8002e36:	f7ff fe2d 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002e3a:	f504 62c5 	add.w	r2, r4, #1576	; 0x628
 8002e3e:	4610      	mov	r0, r2
 8002e40:	920b      	str	r2, [sp, #44]	; 0x2c
 8002e42:	f7ff fe27 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002e46:	f204 6274 	addw	r2, r4, #1652	; 0x674
 8002e4a:	4610      	mov	r0, r2
 8002e4c:	ee0b 2a10 	vmov	s22, r2
 8002e50:	f00f fafa 	bl	8012448 <_ZN8touchgfx4LineC1Ev>
 8002e54:	f204 62e4 	addw	r2, r4, #1764	; 0x6e4
 8002e58:	4610      	mov	r0, r2
 8002e5a:	921f      	str	r2, [sp, #124]	; 0x7c
 8002e5c:	f7ff fb9a 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002e60:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8002e64:	f504 62df 	add.w	r2, r4, #1784	; 0x6f8
 8002e68:	f8c4 36ec 	str.w	r3, [r4, #1772]	; 0x6ec
 8002e6c:	f8c4 66e4 	str.w	r6, [r4, #1764]	; 0x6e4
 8002e70:	4610      	mov	r0, r2
 8002e72:	f8c4 56f0 	str.w	r5, [r4, #1776]	; 0x6f0
 8002e76:	ee0f 2a10 	vmov	s30, r2
 8002e7a:	f7ff fdeb 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8002e7e:	f504 62e8 	add.w	r2, r4, #1856	; 0x740
 8002e82:	4610      	mov	r0, r2
 8002e84:	ee09 2a10 	vmov	s18, r2
 8002e88:	f7ff fd6e 	bl	8002968 <_ZN8touchgfx9ContainerC1Ev>
 8002e8c:	f204 726c 	addw	r2, r4, #1900	; 0x76c
 8002e90:	4610      	mov	r0, r2
 8002e92:	9218      	str	r2, [sp, #96]	; 0x60
 8002e94:	f010 fdbe 	bl	8013a14 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002e98:	f504 62f5 	add.w	r2, r4, #1960	; 0x7a8
 8002e9c:	4610      	mov	r0, r2
 8002e9e:	9219      	str	r2, [sp, #100]	; 0x64
 8002ea0:	f010 fdb8 	bl	8013a14 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002ea4:	f204 72e4 	addw	r2, r4, #2020	; 0x7e4
 8002ea8:	4610      	mov	r0, r2
 8002eaa:	921a      	str	r2, [sp, #104]	; 0x68
 8002eac:	f010 fdb2 	bl	8013a14 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002eb0:	f504 6202 	add.w	r2, r4, #2080	; 0x820
 8002eb4:	4610      	mov	r0, r2
 8002eb6:	920c      	str	r2, [sp, #48]	; 0x30
 8002eb8:	f7ff fdec 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002ebc:	f604 026c 	addw	r2, r4, #2156	; 0x86c
 8002ec0:	4610      	mov	r0, r2
 8002ec2:	920d      	str	r2, [sp, #52]	; 0x34
 8002ec4:	f7ff fde6 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002ec8:	f604 02b8 	addw	r2, r4, #2232	; 0x8b8
 8002ecc:	4610      	mov	r0, r2
 8002ece:	920e      	str	r2, [sp, #56]	; 0x38
 8002ed0:	f7ff fde0 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002ed4:	f604 1204 	addw	r2, r4, #2308	; 0x904
 8002ed8:	4610      	mov	r0, r2
 8002eda:	ee0b 2a90 	vmov	s23, r2
 8002ede:	f00f fab3 	bl	8012448 <_ZN8touchgfx4LineC1Ev>
 8002ee2:	f604 1274 	addw	r2, r4, #2420	; 0x974
 8002ee6:	4610      	mov	r0, r2
 8002ee8:	9220      	str	r2, [sp, #128]	; 0x80
 8002eea:	f7ff fb53 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002eee:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8002ef2:	f604 1288 	addw	r2, r4, #2440	; 0x988
 8002ef6:	f8c4 397c 	str.w	r3, [r4, #2428]	; 0x97c
 8002efa:	f8c4 6974 	str.w	r6, [r4, #2420]	; 0x974
 8002efe:	4610      	mov	r0, r2
 8002f00:	f8c4 5980 	str.w	r5, [r4, #2432]	; 0x980
 8002f04:	ee0f 2a90 	vmov	s31, r2
 8002f08:	f7ff fda4 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8002f0c:	f504 621d 	add.w	r2, r4, #2512	; 0x9d0
 8002f10:	4610      	mov	r0, r2
 8002f12:	ee09 2a90 	vmov	s19, r2
 8002f16:	f7ff fd27 	bl	8002968 <_ZN8touchgfx9ContainerC1Ev>
 8002f1a:	f604 12fc 	addw	r2, r4, #2556	; 0x9fc
 8002f1e:	4610      	mov	r0, r2
 8002f20:	921b      	str	r2, [sp, #108]	; 0x6c
 8002f22:	f010 fd77 	bl	8013a14 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002f26:	f604 2238 	addw	r2, r4, #2616	; 0xa38
 8002f2a:	4610      	mov	r0, r2
 8002f2c:	921c      	str	r2, [sp, #112]	; 0x70
 8002f2e:	f010 fd71 	bl	8013a14 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002f32:	f604 2274 	addw	r2, r4, #2676	; 0xa74
 8002f36:	4610      	mov	r0, r2
 8002f38:	921d      	str	r2, [sp, #116]	; 0x74
 8002f3a:	f010 fd6b 	bl	8013a14 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002f3e:	f504 622b 	add.w	r2, r4, #2736	; 0xab0
 8002f42:	4610      	mov	r0, r2
 8002f44:	920f      	str	r2, [sp, #60]	; 0x3c
 8002f46:	f7ff fda5 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002f4a:	f604 22fc 	addw	r2, r4, #2812	; 0xafc
 8002f4e:	4610      	mov	r0, r2
 8002f50:	9210      	str	r2, [sp, #64]	; 0x40
 8002f52:	f7ff fd9f 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002f56:	f604 3248 	addw	r2, r4, #2888	; 0xb48
 8002f5a:	4610      	mov	r0, r2
 8002f5c:	9211      	str	r2, [sp, #68]	; 0x44
 8002f5e:	f7ff fd99 	bl	8002a94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002f62:	f604 3294 	addw	r2, r4, #2964	; 0xb94
 8002f66:	4610      	mov	r0, r2
 8002f68:	ee0c 2a10 	vmov	s24, r2
 8002f6c:	f00f fa6c 	bl	8012448 <_ZN8touchgfx4LineC1Ev>
 8002f70:	f604 4204 	addw	r2, r4, #3076	; 0xc04
 8002f74:	4610      	mov	r0, r2
 8002f76:	9221      	str	r2, [sp, #132]	; 0x84
 8002f78:	f7ff fb0c 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002f7c:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8002f80:	f604 4218 	addw	r2, r4, #3096	; 0xc18
 8002f84:	f8c4 3c0c 	str.w	r3, [r4, #3084]	; 0xc0c
 8002f88:	f8c4 6c04 	str.w	r6, [r4, #3076]	; 0xc04
 8002f8c:	4610      	mov	r0, r2
 8002f8e:	f8c4 5c10 	str.w	r5, [r4, #3088]	; 0xc10
 8002f92:	9203      	str	r2, [sp, #12]
 8002f94:	f7ff fd5e 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8002f98:	f504 6246 	add.w	r2, r4, #3168	; 0xc60
 8002f9c:	4610      	mov	r0, r2
 8002f9e:	ee0c 2a90 	vmov	s25, r2
 8002fa2:	f00f fa51 	bl	8012448 <_ZN8touchgfx4LineC1Ev>
 8002fa6:	f504 624d 	add.w	r2, r4, #3280	; 0xcd0
 8002faa:	4610      	mov	r0, r2
 8002fac:	9222      	str	r2, [sp, #136]	; 0x88
 8002fae:	f7ff faf1 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002fb2:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8002fb6:	f604 42e4 	addw	r2, r4, #3300	; 0xce4
 8002fba:	f8c4 3cd8 	str.w	r3, [r4, #3288]	; 0xcd8
 8002fbe:	f8c4 6cd0 	str.w	r6, [r4, #3280]	; 0xcd0
 8002fc2:	4610      	mov	r0, r2
 8002fc4:	f8c4 5cdc 	str.w	r5, [r4, #3292]	; 0xcdc
 8002fc8:	9204      	str	r2, [sp, #16]
 8002fca:	f7ff fd43 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8002fce:	f604 522c 	addw	r2, r4, #3372	; 0xd2c
 8002fd2:	4610      	mov	r0, r2
 8002fd4:	ee0d 2a10 	vmov	s26, r2
 8002fd8:	f00f fa36 	bl	8012448 <_ZN8touchgfx4LineC1Ev>
 8002fdc:	f604 529c 	addw	r2, r4, #3484	; 0xd9c
 8002fe0:	4610      	mov	r0, r2
 8002fe2:	9223      	str	r2, [sp, #140]	; 0x8c
 8002fe4:	f7ff fad6 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002fe8:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8002fec:	f8c4 3da4 	str.w	r3, [r4, #3492]	; 0xda4
 8002ff0:	f504 635b 	add.w	r3, r4, #3504	; 0xdb0
 8002ff4:	f8c4 6d9c 	str.w	r6, [r4, #3484]	; 0xd9c
 8002ff8:	4618      	mov	r0, r3
 8002ffa:	f8c4 5da8 	str.w	r5, [r4, #3496]	; 0xda8
 8002ffe:	9305      	str	r3, [sp, #20]
 8003000:	f7ff fd28 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8003004:	f604 53f8 	addw	r3, r4, #3576	; 0xdf8
 8003008:	4618      	mov	r0, r3
 800300a:	9306      	str	r3, [sp, #24]
 800300c:	f7ff fd22 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003010:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003014:	4a1e      	ldr	r2, [pc, #120]	; (8003090 <_ZN23Calibration_PadViewBaseC1Ev+0x3c4>)
 8003016:	f8c3 2d54 	str.w	r2, [r3, #3412]	; 0xd54
 800301a:	4a1e      	ldr	r2, [pc, #120]	; (8003094 <_ZN23Calibration_PadViewBaseC1Ev+0x3c8>)
 800301c:	f8c3 2d5c 	str.w	r2, [r3, #3420]	; 0xd5c
 8003020:	f8c3 4d58 	str.w	r4, [r3, #3416]	; 0xd58
 8003024:	f8c3 5d60 	str.w	r5, [r3, #3424]	; 0xd60
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003028:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800302c:	f604 7044 	addw	r0, r4, #3908	; 0xf44
 8003030:	f011 fd0a 	bl	8014a48 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8003034:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003038:	462a      	mov	r2, r5
 800303a:	4658      	mov	r0, fp
 800303c:	9300      	str	r3, [sp, #0]
 800303e:	4629      	mov	r1, r5
 8003040:	23f0      	movs	r3, #240	; 0xf0
 8003042:	f7ff fc7e 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8003046:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800304a:	66a3      	str	r3, [r4, #104]	; 0x68
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 800304c:	1d23      	adds	r3, r4, #4
 800304e:	4618      	mov	r0, r3
 8003050:	4659      	mov	r1, fp
 8003052:	ee0a 3a10 	vmov	s20, r3
 8003056:	f00d f92b 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800305a:	462a      	mov	r2, r5
 800305c:	4640      	mov	r0, r8
 800305e:	4629      	mov	r1, r5
 8003060:	f7ff fc62 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8003064:	f04f 0308 	mov.w	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8003068:	4640      	mov	r0, r8
 800306a:	4649      	mov	r1, r9
 800306c:	f8ad 30ac 	strh.w	r3, [sp, #172]	; 0xac
 8003070:	f010 fcf7 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003074:	4641      	mov	r1, r8
 8003076:	ee1a 0a10 	vmov	r0, s20
 800307a:	f00d f919 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800307e:	e00b      	b.n	8003098 <_ZN23Calibration_PadViewBaseC1Ev+0x3cc>
 8003080:	0802cec8 	.word	0x0802cec8
 8003084:	0802f2d4 	.word	0x0802f2d4
 8003088:	0802f520 	.word	0x0802f520
 800308c:	0802f008 	.word	0x0802f008
 8003090:	0802ceb0 	.word	0x0802ceb0
 8003094:	08002bbd 	.word	0x08002bbd
    buttonWithLabel3.setXY(33, 257);
 8003098:	9807      	ldr	r0, [sp, #28]
 800309a:	f240 1201 	movw	r2, #257	; 0x101
 800309e:	2121      	movs	r1, #33	; 0x21
 80030a0:	f7ff fc42 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80030a4:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80030a6:	464a      	mov	r2, r9
 80030a8:	a92a      	add	r1, sp, #168	; 0xa8
 80030aa:	9807      	ldr	r0, [sp, #28]
 80030ac:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80030b0:	2302      	movs	r3, #2
 80030b2:	f8ad 30ac 	strh.w	r3, [sp, #172]	; 0xac
 80030b6:	f010 fade 	bl	8013676 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80030ba:	231f      	movs	r3, #31
        updateTextPosition();
 80030bc:	9807      	ldr	r0, [sp, #28]
 80030be:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
    buttonWithLabel3.setAction(buttonCallback);
 80030c2:	f504 58ea 	add.w	r8, r4, #7488	; 0x1d40
 80030c6:	f7ff fc73 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80030ca:	f108 0814 	add.w	r8, r8, #20
        color = col;
 80030ce:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 80030d2:	e9c4 3335 	strd	r3, r3, [r4, #212]	; 0xd4
 80030d6:	9907      	ldr	r1, [sp, #28]
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80030d8:	f8c4 80c0 	str.w	r8, [r4, #192]	; 0xc0
 80030dc:	ee1a 0a10 	vmov	r0, s20
 80030e0:	f00d f8e6 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.setXY(0, 85);
 80030e4:	ee18 0a10 	vmov	r0, s16
 80030e8:	2255      	movs	r2, #85	; 0x55
 80030ea:	4629      	mov	r1, r5
 80030ec:	f7ff fc1c 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80030f0:	2306      	movs	r3, #6
    swipeContainer1.setPageIndicatorBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_OFF_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_ON_ACTIVE_ID));
 80030f2:	ee18 0a10 	vmov	r0, s16
 80030f6:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80030fa:	464a      	mov	r2, r9
 80030fc:	2307      	movs	r3, #7
 80030fe:	a92a      	add	r1, sp, #168	; 0xa8
 8003100:	f8ad 30ac 	strh.w	r3, [sp, #172]	; 0xac
 8003104:	f00d fd2e 	bl	8010b64 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>
    swipeContainer1.setPageIndicatorXY(80, 140);
 8003108:	228c      	movs	r2, #140	; 0x8c
 800310a:	ee18 0a10 	vmov	r0, s16
 800310e:	2150      	movs	r1, #80	; 0x50
 8003110:	f00d fbd6 	bl	80108c0 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>
    swipeContainer1.setSwipeCutoff(50);
 8003114:	ee18 0a10 	vmov	r0, s16
 8003118:	2132      	movs	r1, #50	; 0x32
 800311a:	f00d fb54 	bl	80107c6 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>
    swipeContainer1.setEndSwipeElasticWidth(50);
 800311e:	ee18 0a10 	vmov	r0, s16
 8003122:	2132      	movs	r1, #50	; 0x32
 8003124:	f00d fbca 	bl	80108bc <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>
        rect.width = width;
 8003128:	4b5c      	ldr	r3, [pc, #368]	; (800329c <_ZN23Calibration_PadViewBaseC1Ev+0x5d0>)
 800312a:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
    textAreaCal_LP1_1.setXY(22, 32);
 800312e:	2220      	movs	r2, #32
 8003130:	4638      	mov	r0, r7
 8003132:	2116      	movs	r1, #22
 8003134:	f7ff fbf8 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003138:	f04f 33ff 	mov.w	r3, #4294967295
 800313c:	f8c4 3230 	str.w	r3, [r4, #560]	; 0x230
        boundingArea = calculateBoundingArea();
 8003140:	f8d4 3200 	ldr.w	r3, [r4, #512]	; 0x200
        linespace = space;
 8003144:	f8a4 5234 	strh.w	r5, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 8003148:	ae24      	add	r6, sp, #144	; 0x90
 800314a:	4639      	mov	r1, r7
 800314c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8003150:	4630      	mov	r0, r6
 8003152:	4798      	blx	r3
 8003154:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003158:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800315c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textAreaCal_LP1_1.setWildcard(textAreaCal_LP1_1Buffer);
 8003160:	f504 6364 	add.w	r3, r4, #3648	; 0xe40
    textAreaCal_LP1_1.resizeToCurrentText();
 8003164:	4638      	mov	r0, r7
        wc1 = value;
 8003166:	f8c4 3248 	str.w	r3, [r4, #584]	; 0x248
    textAreaCal_LP1_1Buffer[0] = 0;
 800316a:	f8a4 5e40 	strh.w	r5, [r4, #3648]	; 0xe40
    textAreaCal_LP1_1.resizeToCurrentText();
 800316e:	f00f fea7 	bl	8012ec0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003172:	4b4b      	ldr	r3, [pc, #300]	; (80032a0 <_ZN23Calibration_PadViewBaseC1Ev+0x5d4>)
 8003174:	932b      	str	r3, [sp, #172]	; 0xac
    textAreaCal_LP1_1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH1));
 8003176:	4638      	mov	r0, r7
 8003178:	f04f 0314 	mov.w	r3, #20
 800317c:	4649      	mov	r1, r9
 800317e:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 8003182:	f00f febd 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP1_1);
 8003186:	4639      	mov	r1, r7
 8003188:	4650      	mov	r0, sl
 800318a:	f00d f891 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP3.setXY(194, 97);
 800318e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8003190:	2261      	movs	r2, #97	; 0x61
 8003192:	21c2      	movs	r1, #194	; 0xc2
 8003194:	f7ff fbc8 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8003198:	2709      	movs	r7, #9
    buttonWithIcon_LP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800319a:	ab2a      	add	r3, sp, #168	; 0xa8
 800319c:	f04f 0b01 	mov.w	fp, #1
 80031a0:	aa29      	add	r2, sp, #164	; 0xa4
 80031a2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80031a4:	f8cd 9000 	str.w	r9, [sp]
 80031a8:	a928      	add	r1, sp, #160	; 0xa0
 80031aa:	f8ad 50a0 	strh.w	r5, [sp, #160]	; 0xa0
 80031ae:	f8ad b0a4 	strh.w	fp, [sp, #164]	; 0xa4
 80031b2:	f8ad 70a8 	strh.w	r7, [sp, #168]	; 0xa8
 80031b6:	f8ad 70ac 	strh.w	r7, [sp, #172]	; 0xac
 80031ba:	f010 fb96 	bl	80138ea <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerPadLeft.add(buttonWithIcon_LP3);
 80031be:	9912      	ldr	r1, [sp, #72]	; 0x48
 80031c0:	f8c4 8274 	str.w	r8, [r4, #628]	; 0x274
 80031c4:	4650      	mov	r0, sl
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 80031c6:	f8c4 5284 	str.w	r5, [r4, #644]	; 0x284
 80031ca:	f00d f871 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP2.setXY(194, 61);
 80031ce:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80031d0:	223d      	movs	r2, #61	; 0x3d
 80031d2:	21c2      	movs	r1, #194	; 0xc2
 80031d4:	f7ff fba8 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80031d8:	ab2a      	add	r3, sp, #168	; 0xa8
 80031da:	aa29      	add	r2, sp, #164	; 0xa4
 80031dc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80031de:	f8cd 9000 	str.w	r9, [sp]
 80031e2:	a928      	add	r1, sp, #160	; 0xa0
 80031e4:	f8ad 50a0 	strh.w	r5, [sp, #160]	; 0xa0
 80031e8:	f8ad b0a4 	strh.w	fp, [sp, #164]	; 0xa4
 80031ec:	f8ad 70a8 	strh.w	r7, [sp, #168]	; 0xa8
 80031f0:	f8ad 70ac 	strh.w	r7, [sp, #172]	; 0xac
 80031f4:	f010 fb79 	bl	80138ea <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerPadLeft.add(buttonWithIcon_LP2);
 80031f8:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80031fa:	f8c4 82b0 	str.w	r8, [r4, #688]	; 0x2b0
 80031fe:	4650      	mov	r0, sl
 8003200:	f8c4 52c0 	str.w	r5, [r4, #704]	; 0x2c0
 8003204:	f00d f854 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP1.setXY(194, 25);
 8003208:	9814      	ldr	r0, [sp, #80]	; 0x50
 800320a:	2219      	movs	r2, #25
 800320c:	21c2      	movs	r1, #194	; 0xc2
 800320e:	f7ff fb8b 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003212:	ab2a      	add	r3, sp, #168	; 0xa8
 8003214:	aa29      	add	r2, sp, #164	; 0xa4
 8003216:	9814      	ldr	r0, [sp, #80]	; 0x50
 8003218:	f8cd 9000 	str.w	r9, [sp]
 800321c:	a928      	add	r1, sp, #160	; 0xa0
 800321e:	f8ad 50a0 	strh.w	r5, [sp, #160]	; 0xa0
 8003222:	f8ad b0a4 	strh.w	fp, [sp, #164]	; 0xa4
 8003226:	f8ad 70a8 	strh.w	r7, [sp, #168]	; 0xa8
 800322a:	f8ad 70ac 	strh.w	r7, [sp, #172]	; 0xac
 800322e:	f010 fb5c 	bl	80138ea <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerPadLeft.add(buttonWithIcon_LP1);
 8003232:	9914      	ldr	r1, [sp, #80]	; 0x50
 8003234:	f8c4 82ec 	str.w	r8, [r4, #748]	; 0x2ec
 8003238:	4650      	mov	r0, sl
 800323a:	f8c4 52fc 	str.w	r5, [r4, #764]	; 0x2fc
 800323e:	f00d f837 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP3.setXY(10, 104);
 8003242:	2268      	movs	r2, #104	; 0x68
 8003244:	ee1d 0a90 	vmov	r0, s27
 8003248:	210a      	movs	r1, #10
 800324a:	f7ff fb6d 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800324e:	f04f 33ff 	mov.w	r3, #4294967295
 8003252:	f8c4 3330 	str.w	r3, [r4, #816]	; 0x330
        boundingArea = calculateBoundingArea();
 8003256:	f8d4 3300 	ldr.w	r3, [r4, #768]	; 0x300
        linespace = space;
 800325a:	f8a4 5334 	strh.w	r5, [r4, #820]	; 0x334
        boundingArea = calculateBoundingArea();
 800325e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8003262:	ee1d 1a90 	vmov	r1, s27
 8003266:	4630      	mov	r0, r6
 8003268:	4798      	blx	r3
 800326a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800326e:	f504 734f 	add.w	r3, r4, #828	; 0x33c
 8003272:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003276:	4b0b      	ldr	r3, [pc, #44]	; (80032a4 <_ZN23Calibration_PadViewBaseC1Ev+0x5d8>)
 8003278:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_12P5).getText());
 800327a:	f604 6854 	addw	r8, r4, #3668	; 0xe54
 800327e:	b92b      	cbnz	r3, 800328c <_ZN23Calibration_PadViewBaseC1Ev+0x5c0>
 8003280:	4b09      	ldr	r3, [pc, #36]	; (80032a8 <_ZN23Calibration_PadViewBaseC1Ev+0x5dc>)
 8003282:	4a0a      	ldr	r2, [pc, #40]	; (80032ac <_ZN23Calibration_PadViewBaseC1Ev+0x5e0>)
 8003284:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003286:	480a      	ldr	r0, [pc, #40]	; (80032b0 <_ZN23Calibration_PadViewBaseC1Ev+0x5e4>)
 8003288:	f027 ffb2 	bl	802b1f0 <__assert_func>
 800328c:	4b09      	ldr	r3, [pc, #36]	; (80032b4 <_ZN23Calibration_PadViewBaseC1Ev+0x5e8>)
 800328e:	881b      	ldrh	r3, [r3, #0]
 8003290:	2b09      	cmp	r3, #9
 8003292:	d813      	bhi.n	80032bc <_ZN23Calibration_PadViewBaseC1Ev+0x5f0>
 8003294:	4b08      	ldr	r3, [pc, #32]	; (80032b8 <_ZN23Calibration_PadViewBaseC1Ev+0x5ec>)
 8003296:	4a05      	ldr	r2, [pc, #20]	; (80032ac <_ZN23Calibration_PadViewBaseC1Ev+0x5e0>)
 8003298:	2161      	movs	r1, #97	; 0x61
 800329a:	e7f4      	b.n	8003286 <_ZN23Calibration_PadViewBaseC1Ev+0x5ba>
 800329c:	00ac00f0 	.word	0x00ac00f0
 80032a0:	0802cd80 	.word	0x0802cd80
 80032a4:	20013874 	.word	0x20013874
 80032a8:	0802cbd0 	.word	0x0802cbd0
 80032ac:	0802ccd5 	.word	0x0802ccd5
 80032b0:	0802cc4d 	.word	0x0802cc4d
 80032b4:	20013878 	.word	0x20013878
 80032b8:	0802cc94 	.word	0x0802cc94
        return texts->getText(typedTextId);
 80032bc:	4bdb      	ldr	r3, [pc, #876]	; (800362c <_ZN23Calibration_PadViewBaseC1Ev+0x960>)
 80032be:	4639      	mov	r1, r7
 80032c0:	6818      	ldr	r0, [r3, #0]
 80032c2:	f005 f985 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 80032c6:	4ada      	ldr	r2, [pc, #872]	; (8003630 <_ZN23Calibration_PadViewBaseC1Ev+0x964>)
 80032c8:	4603      	mov	r3, r0
 80032ca:	210a      	movs	r1, #10
 80032cc:	4640      	mov	r0, r8
 80032ce:	f016 fa75 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP3.resizeToCurrentText();
 80032d2:	ee1d 0a90 	vmov	r0, s27
 80032d6:	f8c4 8348 	str.w	r8, [r4, #840]	; 0x348
 80032da:	f00f fdf1 	bl	8012ec0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80032de:	f04f 080a 	mov.w	r8, #10
 80032e2:	4bd4      	ldr	r3, [pc, #848]	; (8003634 <_ZN23Calibration_PadViewBaseC1Ev+0x968>)
 80032e4:	932b      	str	r3, [sp, #172]	; 0xac
    textAreaCal_LP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL1_LP3));
 80032e6:	ee1d 0a90 	vmov	r0, s27
 80032ea:	4649      	mov	r1, r9
 80032ec:	f8ad 80b0 	strh.w	r8, [sp, #176]	; 0xb0
 80032f0:	f00f fe06 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP3);
 80032f4:	ee1d 1a90 	vmov	r1, s27
 80032f8:	4650      	mov	r0, sl
 80032fa:	f00c ffd9 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP2.setXY(22, 68);
 80032fe:	ee1e 0a10 	vmov	r0, s28
 8003302:	2244      	movs	r2, #68	; 0x44
 8003304:	2116      	movs	r1, #22
 8003306:	f7ff fb0f 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 800330a:	f8d4 334c 	ldr.w	r3, [r4, #844]	; 0x34c
        linespace = space;
 800330e:	f8a4 5380 	strh.w	r5, [r4, #896]	; 0x380
        color = newColor;
 8003312:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8003316:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800331a:	f8c4 237c 	str.w	r2, [r4, #892]	; 0x37c
        boundingArea = calculateBoundingArea();
 800331e:	ee1e 1a10 	vmov	r1, s28
 8003322:	4630      	mov	r0, r6
 8003324:	4798      	blx	r3
 8003326:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800332a:	f504 7362 	add.w	r3, r4, #904	; 0x388
 800332e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_01G5).getText());
 8003332:	f604 6268 	addw	r2, r4, #3688	; 0xe68
 8003336:	9207      	str	r2, [sp, #28]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003338:	4abf      	ldr	r2, [pc, #764]	; (8003638 <_ZN23Calibration_PadViewBaseC1Ev+0x96c>)
 800333a:	6813      	ldr	r3, [r2, #0]
 800333c:	2b00      	cmp	r3, #0
 800333e:	d09f      	beq.n	8003280 <_ZN23Calibration_PadViewBaseC1Ev+0x5b4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003340:	4abe      	ldr	r2, [pc, #760]	; (800363c <_ZN23Calibration_PadViewBaseC1Ev+0x970>)
 8003342:	8813      	ldrh	r3, [r2, #0]
 8003344:	2b0b      	cmp	r3, #11
 8003346:	d9a5      	bls.n	8003294 <_ZN23Calibration_PadViewBaseC1Ev+0x5c8>
        return texts->getText(typedTextId);
 8003348:	48b8      	ldr	r0, [pc, #736]	; (800362c <_ZN23Calibration_PadViewBaseC1Ev+0x960>)
 800334a:	210b      	movs	r1, #11
 800334c:	6800      	ldr	r0, [r0, #0]
 800334e:	f005 f93f 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 8003352:	4ab7      	ldr	r2, [pc, #732]	; (8003630 <_ZN23Calibration_PadViewBaseC1Ev+0x964>)
 8003354:	4603      	mov	r3, r0
 8003356:	4641      	mov	r1, r8
 8003358:	9807      	ldr	r0, [sp, #28]
 800335a:	f016 fa2f 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800335e:	9907      	ldr	r1, [sp, #28]
 8003360:	f8c4 1394 	str.w	r1, [r4, #916]	; 0x394
    textAreaCal_LP2.resizeToCurrentText();
 8003364:	ee1e 0a10 	vmov	r0, s28
 8003368:	f00f fdaa 	bl	8012ec0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800336c:	4bb1      	ldr	r3, [pc, #708]	; (8003634 <_ZN23Calibration_PadViewBaseC1Ev+0x968>)
 800336e:	932b      	str	r3, [sp, #172]	; 0xac
    textAreaCal_LP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL1_LP2));
 8003370:	ee1e 0a10 	vmov	r0, s28
 8003374:	230c      	movs	r3, #12
 8003376:	4649      	mov	r1, r9
 8003378:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 800337c:	f00f fdc0 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP2);
 8003380:	ee1e 1a10 	vmov	r1, s28
 8003384:	4650      	mov	r0, sl
 8003386:	f00c ff93 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP1.setXY(22, 32);
 800338a:	2220      	movs	r2, #32
 800338c:	ee1e 0a90 	vmov	r0, s29
 8003390:	2116      	movs	r1, #22
 8003392:	f7ff fac9 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8003396:	f8d4 3398 	ldr.w	r3, [r4, #920]	; 0x398
        linespace = space;
 800339a:	f8a4 53cc 	strh.w	r5, [r4, #972]	; 0x3cc
        color = newColor;
 800339e:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 80033a2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80033a6:	f8c4 13c8 	str.w	r1, [r4, #968]	; 0x3c8
        boundingArea = calculateBoundingArea();
 80033aa:	4630      	mov	r0, r6
 80033ac:	ee1e 1a90 	vmov	r1, s29
 80033b0:	4798      	blx	r3
 80033b2:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80033b6:	f504 7375 	add.w	r3, r4, #980	; 0x3d4
 80033ba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TG06).getText());
 80033be:	f604 617c 	addw	r1, r4, #3708	; 0xe7c
 80033c2:	9107      	str	r1, [sp, #28]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80033c4:	499c      	ldr	r1, [pc, #624]	; (8003638 <_ZN23Calibration_PadViewBaseC1Ev+0x96c>)
 80033c6:	680b      	ldr	r3, [r1, #0]
 80033c8:	2b00      	cmp	r3, #0
 80033ca:	f43f af59 	beq.w	8003280 <_ZN23Calibration_PadViewBaseC1Ev+0x5b4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80033ce:	4a9b      	ldr	r2, [pc, #620]	; (800363c <_ZN23Calibration_PadViewBaseC1Ev+0x970>)
 80033d0:	8813      	ldrh	r3, [r2, #0]
 80033d2:	2b0d      	cmp	r3, #13
 80033d4:	f67f af5e 	bls.w	8003294 <_ZN23Calibration_PadViewBaseC1Ev+0x5c8>
        return texts->getText(typedTextId);
 80033d8:	4894      	ldr	r0, [pc, #592]	; (800362c <_ZN23Calibration_PadViewBaseC1Ev+0x960>)
 80033da:	210d      	movs	r1, #13
 80033dc:	6800      	ldr	r0, [r0, #0]
 80033de:	f005 f8f7 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 80033e2:	4641      	mov	r1, r8
 80033e4:	4603      	mov	r3, r0
 80033e6:	4a92      	ldr	r2, [pc, #584]	; (8003630 <_ZN23Calibration_PadViewBaseC1Ev+0x964>)
 80033e8:	9807      	ldr	r0, [sp, #28]
 80033ea:	f016 f9e7 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80033ee:	9a07      	ldr	r2, [sp, #28]
 80033f0:	f8c4 23e0 	str.w	r2, [r4, #992]	; 0x3e0
    textAreaCal_LP1.resizeToCurrentText();
 80033f4:	ee1e 0a90 	vmov	r0, s29
 80033f8:	f00f fd62 	bl	8012ec0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80033fc:	f04f 0c14 	mov.w	ip, #20
 8003400:	4b8c      	ldr	r3, [pc, #560]	; (8003634 <_ZN23Calibration_PadViewBaseC1Ev+0x968>)
 8003402:	f8ad c0b0 	strh.w	ip, [sp, #176]	; 0xb0
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH1));
 8003406:	ee1e 0a90 	vmov	r0, s29
 800340a:	4649      	mov	r1, r9
 800340c:	932b      	str	r3, [sp, #172]	; 0xac
 800340e:	f00f fd77 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP1);
 8003412:	4650      	mov	r0, sl
 8003414:	ee1e 1a90 	vmov	r1, s29
 8003418:	f00c ff4a 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1_2_1.setPosition(0, 15, 240, 10);
 800341c:	23f0      	movs	r3, #240	; 0xf0
 800341e:	ee1a 0a90 	vmov	r0, s21
 8003422:	220f      	movs	r2, #15
 8003424:	4629      	mov	r1, r5
 8003426:	f8cd 8000 	str.w	r8, [sp]
 800342a:	f7ff fa8a 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 800342e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8003430:	f8c4 240c 	str.w	r2, [r4, #1036]	; 0x40c
 8003434:	f04f 3eff 	mov.w	lr, #4294967295
    line1_1_2_1.setStart(5, 5);
 8003438:	2205      	movs	r2, #5
 800343a:	f8c4 e460 	str.w	lr, [r4, #1120]	; 0x460
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 800343e:	f8a4 e464 	strh.w	lr, [r4, #1124]	; 0x464
 8003442:	4611      	mov	r1, r2
 8003444:	ee1a 0a90 	vmov	r0, s21
 8003448:	f7ff fc28 	bl	8002c9c <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1_2_1.setEnd(235, 5);
 800344c:	2205      	movs	r2, #5
 800344e:	ee1a 0a90 	vmov	r0, s21
 8003452:	21eb      	movs	r1, #235	; 0xeb
 8003454:	f7ff fc26 	bl	8002ca4 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1_2_1.setLineWidth(1);
 8003458:	ee1a 0a90 	vmov	r0, s21
 800345c:	4659      	mov	r1, fp
 800345e:	f7ff fc25 	bl	8002cac <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1_2_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003462:	ee1a 0a90 	vmov	r0, s21
 8003466:	4659      	mov	r1, fp
 8003468:	f00f f91a 	bl	80126a0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadLeft.add(line1_1_2_1);
 800346c:	4650      	mov	r0, sl
 800346e:	ee1a 1a90 	vmov	r1, s21
 8003472:	f00c ff1d 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_2_1.setXY(96, 0);
 8003476:	9808      	ldr	r0, [sp, #32]
 8003478:	462a      	mov	r2, r5
 800347a:	2160      	movs	r1, #96	; 0x60
 800347c:	f7ff fa54 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003480:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8003484:	4630      	mov	r0, r6
 8003486:	9908      	ldr	r1, [sp, #32]
        color = newColor;
 8003488:	f8c4 2498 	str.w	r2, [r4, #1176]	; 0x498
        linespace = space;
 800348c:	f8a4 549c 	strh.w	r5, [r4, #1180]	; 0x49c
        boundingArea = calculateBoundingArea();
 8003490:	f00f fa9c 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003494:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003498:	f204 43a4 	addw	r3, r4, #1188	; 0x4a4
 800349c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80034a0:	4b64      	ldr	r3, [pc, #400]	; (8003634 <_ZN23Calibration_PadViewBaseC1Ev+0x968>)
    textArea3_2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q2TU));
 80034a2:	9808      	ldr	r0, [sp, #32]
 80034a4:	932b      	str	r3, [sp, #172]	; 0xac
 80034a6:	4649      	mov	r1, r9
 80034a8:	f04f 0308 	mov.w	r3, #8
 80034ac:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 80034b0:	f00f fd26 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textArea3_2_1);
 80034b4:	4650      	mov	r0, sl
 80034b6:	9908      	ldr	r1, [sp, #32]
 80034b8:	f00c fefa 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadLeft);
 80034bc:	4651      	mov	r1, sl
 80034be:	ee18 0a10 	vmov	r0, s16
 80034c2:	f00d fbd8 	bl	8010c76 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 80034c6:	4b5e      	ldr	r3, [pc, #376]	; (8003640 <_ZN23Calibration_PadViewBaseC1Ev+0x974>)
    buttonWithIcon_RP3.setXY(194, 97);
 80034c8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80034ca:	f8c4 34b8 	str.w	r3, [r4, #1208]	; 0x4b8
 80034ce:	2261      	movs	r2, #97	; 0x61
 80034d0:	21c2      	movs	r1, #194	; 0xc2
    buttonWithIcon_RP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80034d2:	f10d 0aa8 	add.w	sl, sp, #168	; 0xa8
    buttonWithIcon_RP3.setXY(194, 97);
 80034d6:	f7ff fa27 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80034da:	4653      	mov	r3, sl
 80034dc:	f10d 0aa4 	add.w	sl, sp, #164	; 0xa4
 80034e0:	4652      	mov	r2, sl
 80034e2:	f10d 0aa0 	add.w	sl, sp, #160	; 0xa0
 80034e6:	4651      	mov	r1, sl
 80034e8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80034ea:	f8cd 9000 	str.w	r9, [sp]
 80034ee:	f8ad 50a0 	strh.w	r5, [sp, #160]	; 0xa0
 80034f2:	f8ad b0a4 	strh.w	fp, [sp, #164]	; 0xa4
 80034f6:	f8ad 70a8 	strh.w	r7, [sp, #168]	; 0xa8
 80034fa:	f8ad 70ac 	strh.w	r7, [sp, #172]	; 0xac
 80034fe:	f010 f9f4 	bl	80138ea <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerPadRight.add(buttonWithIcon_RP3);
 8003502:	9915      	ldr	r1, [sp, #84]	; 0x54
 8003504:	f8c4 5514 	str.w	r5, [r4, #1300]	; 0x514
 8003508:	ee18 0a90 	vmov	r0, s17
 800350c:	f00c fed0 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003510:	f10d 0aa8 	add.w	sl, sp, #168	; 0xa8
    buttonWithIcon_RP2.setXY(194, 61);
 8003514:	9816      	ldr	r0, [sp, #88]	; 0x58
 8003516:	223d      	movs	r2, #61	; 0x3d
 8003518:	21c2      	movs	r1, #194	; 0xc2
 800351a:	f7ff fa05 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800351e:	4653      	mov	r3, sl
 8003520:	f10d 0aa4 	add.w	sl, sp, #164	; 0xa4
 8003524:	4652      	mov	r2, sl
 8003526:	f10d 0aa0 	add.w	sl, sp, #160	; 0xa0
 800352a:	4651      	mov	r1, sl
 800352c:	9816      	ldr	r0, [sp, #88]	; 0x58
 800352e:	f8cd 9000 	str.w	r9, [sp]
 8003532:	f8ad 50a0 	strh.w	r5, [sp, #160]	; 0xa0
 8003536:	f8ad b0a4 	strh.w	fp, [sp, #164]	; 0xa4
 800353a:	f8ad 70a8 	strh.w	r7, [sp, #168]	; 0xa8
 800353e:	f8ad 70ac 	strh.w	r7, [sp, #172]	; 0xac
 8003542:	f010 f9d2 	bl	80138ea <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerPadRight.add(buttonWithIcon_RP2);
 8003546:	9916      	ldr	r1, [sp, #88]	; 0x58
 8003548:	f8c4 5550 	str.w	r5, [r4, #1360]	; 0x550
 800354c:	ee18 0a90 	vmov	r0, s17
 8003550:	f00c feae 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003554:	f10d 0aa8 	add.w	sl, sp, #168	; 0xa8
    buttonWithIcon_RP1.setXY(194, 25);
 8003558:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800355a:	2219      	movs	r2, #25
 800355c:	21c2      	movs	r1, #194	; 0xc2
 800355e:	f7ff f9e3 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003562:	4653      	mov	r3, sl
 8003564:	f10d 0aa4 	add.w	sl, sp, #164	; 0xa4
 8003568:	4652      	mov	r2, sl
 800356a:	f10d 0aa0 	add.w	sl, sp, #160	; 0xa0
 800356e:	4651      	mov	r1, sl
 8003570:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8003572:	f8cd 9000 	str.w	r9, [sp]
 8003576:	f8ad 50a0 	strh.w	r5, [sp, #160]	; 0xa0
 800357a:	f8ad b0a4 	strh.w	fp, [sp, #164]	; 0xa4
 800357e:	f8ad 70a8 	strh.w	r7, [sp, #168]	; 0xa8
 8003582:	f8ad 70ac 	strh.w	r7, [sp, #172]	; 0xac
 8003586:	f010 f9b0 	bl	80138ea <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerPadRight.add(buttonWithIcon_RP1);
 800358a:	9917      	ldr	r1, [sp, #92]	; 0x5c
 800358c:	f8c4 558c 	str.w	r5, [r4, #1420]	; 0x58c
 8003590:	ee18 0a90 	vmov	r0, s17
 8003594:	f00c fe8c 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8003598:	f04f 3aff 	mov.w	sl, #4294967295
    textAreaCal_RP3.setXY(10, 104);
 800359c:	2268      	movs	r2, #104	; 0x68
 800359e:	4641      	mov	r1, r8
 80035a0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80035a2:	f7ff f9c1 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80035a6:	f8c4 a5c0 	str.w	sl, [r4, #1472]	; 0x5c0
        linespace = space;
 80035aa:	f8a4 55c4 	strh.w	r5, [r4, #1476]	; 0x5c4
        return TextArea::BoundingArea();
 80035ae:	4648      	mov	r0, r9
 80035b0:	f7ff fa42 	bl	8002a38 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80035b4:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80035b8:	f204 53cc 	addw	r3, r4, #1484	; 0x5cc
 80035bc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80035c0:	491d      	ldr	r1, [pc, #116]	; (8003638 <_ZN23Calibration_PadViewBaseC1Ev+0x96c>)
 80035c2:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8T3Q).getText());
 80035c4:	f504 6669 	add.w	r6, r4, #3728	; 0xe90
 80035c8:	2b00      	cmp	r3, #0
 80035ca:	f43f ae59 	beq.w	8003280 <_ZN23Calibration_PadViewBaseC1Ev+0x5b4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80035ce:	4f1b      	ldr	r7, [pc, #108]	; (800363c <_ZN23Calibration_PadViewBaseC1Ev+0x970>)
 80035d0:	883b      	ldrh	r3, [r7, #0]
 80035d2:	2b12      	cmp	r3, #18
 80035d4:	f67f ae5e 	bls.w	8003294 <_ZN23Calibration_PadViewBaseC1Ev+0x5c8>
        return texts->getText(typedTextId);
 80035d8:	4814      	ldr	r0, [pc, #80]	; (800362c <_ZN23Calibration_PadViewBaseC1Ev+0x960>)
 80035da:	2112      	movs	r1, #18
 80035dc:	6800      	ldr	r0, [r0, #0]
 80035de:	f004 fff7 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 80035e2:	4a13      	ldr	r2, [pc, #76]	; (8003630 <_ZN23Calibration_PadViewBaseC1Ev+0x964>)
 80035e4:	4603      	mov	r3, r0
 80035e6:	4641      	mov	r1, r8
 80035e8:	4630      	mov	r0, r6
 80035ea:	f016 f8e7 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP3.resizeToCurrentText();
 80035ee:	9809      	ldr	r0, [sp, #36]	; 0x24
        wc1 = value;
 80035f0:	f8c4 65d8 	str.w	r6, [r4, #1496]	; 0x5d8
 80035f4:	f00f fc64 	bl	8012ec0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80035f8:	4e0e      	ldr	r6, [pc, #56]	; (8003634 <_ZN23Calibration_PadViewBaseC1Ev+0x968>)
    textAreaCal_RP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH3));
 80035fa:	9809      	ldr	r0, [sp, #36]	; 0x24
 80035fc:	962b      	str	r6, [sp, #172]	; 0xac
 80035fe:	2313      	movs	r3, #19
 8003600:	4649      	mov	r1, r9
 8003602:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 8003606:	f00f fc7b 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP3);
 800360a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800360c:	ee18 0a90 	vmov	r0, s17
 8003610:	f00c fe4e 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP2.setXY(22, 68);
 8003614:	2244      	movs	r2, #68	; 0x44
 8003616:	2116      	movs	r1, #22
 8003618:	980a      	ldr	r0, [sp, #40]	; 0x28
 800361a:	f7ff f985 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        linespace = space;
 800361e:	f8a4 5610 	strh.w	r5, [r4, #1552]	; 0x610
        color = newColor;
 8003622:	f8c4 a60c 	str.w	sl, [r4, #1548]	; 0x60c
        return TextArea::BoundingArea();
 8003626:	4648      	mov	r0, r9
 8003628:	e00c      	b.n	8003644 <_ZN23Calibration_PadViewBaseC1Ev+0x978>
 800362a:	bf00      	nop
 800362c:	20013880 	.word	0x20013880
 8003630:	0802cd0d 	.word	0x0802cd0d
 8003634:	0802cd80 	.word	0x0802cd80
 8003638:	20013874 	.word	0x20013874
 800363c:	20013878 	.word	0x20013878
 8003640:	00ac00f0 	.word	0x00ac00f0
 8003644:	f7ff f9f8 	bl	8002a38 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003648:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 800364c:	f504 63c3 	add.w	r3, r4, #1560	; 0x618
 8003650:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003654:	49dc      	ldr	r1, [pc, #880]	; (80039c8 <_ZN23Calibration_PadViewBaseC1Ev+0xcfc>)
 8003656:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NZZI).getText());
 8003658:	f604 65a4 	addw	r5, r4, #3748	; 0xea4
 800365c:	2b00      	cmp	r3, #0
 800365e:	f43f ae0f 	beq.w	8003280 <_ZN23Calibration_PadViewBaseC1Ev+0x5b4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003662:	883b      	ldrh	r3, [r7, #0]
 8003664:	2b10      	cmp	r3, #16
 8003666:	f67f ae15 	bls.w	8003294 <_ZN23Calibration_PadViewBaseC1Ev+0x5c8>
        return texts->getText(typedTextId);
 800366a:	48d8      	ldr	r0, [pc, #864]	; (80039cc <_ZN23Calibration_PadViewBaseC1Ev+0xd00>)
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800366c:	f8df b358 	ldr.w	fp, [pc, #856]	; 80039c8 <_ZN23Calibration_PadViewBaseC1Ev+0xcfc>
        return texts->getText(typedTextId);
 8003670:	6800      	ldr	r0, [r0, #0]
 8003672:	2110      	movs	r1, #16
 8003674:	f004 ffac 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 8003678:	4ad5      	ldr	r2, [pc, #852]	; (80039d0 <_ZN23Calibration_PadViewBaseC1Ev+0xd04>)
 800367a:	4603      	mov	r3, r0
 800367c:	4641      	mov	r1, r8
 800367e:	4628      	mov	r0, r5
 8003680:	f016 f89c 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP2.resizeToCurrentText();
 8003684:	980a      	ldr	r0, [sp, #40]	; 0x28
        wc1 = value;
 8003686:	f8c4 5624 	str.w	r5, [r4, #1572]	; 0x624
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 800368a:	ad2b      	add	r5, sp, #172	; 0xac
    textAreaCal_RP2.resizeToCurrentText();
 800368c:	f00f fc18 	bl	8012ec0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003690:	f04f 0211 	mov.w	r2, #17
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 8003694:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003696:	f8ad 20b0 	strh.w	r2, [sp, #176]	; 0xb0
 800369a:	4629      	mov	r1, r5
 800369c:	962b      	str	r6, [sp, #172]	; 0xac
 800369e:	f00f fc2f 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP2);
 80036a2:	990a      	ldr	r1, [sp, #40]	; 0x28
 80036a4:	ee18 0a90 	vmov	r0, s17
 80036a8:	f00c fe02 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80036ac:	2600      	movs	r6, #0
    textAreaCal_RP1.setXY(22, 32);
 80036ae:	2220      	movs	r2, #32
 80036b0:	2116      	movs	r1, #22
 80036b2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80036b4:	f7ff f938 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80036b8:	f8c4 a658 	str.w	sl, [r4, #1624]	; 0x658
        linespace = space;
 80036bc:	f8a4 665c 	strh.w	r6, [r4, #1628]	; 0x65c
        return TextArea::BoundingArea();
 80036c0:	4628      	mov	r0, r5
 80036c2:	f7ff f9b9 	bl	8002a38 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80036c6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80036ca:	f204 6364 	addw	r3, r4, #1636	; 0x664
 80036ce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80036d2:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XVN8).getText());
 80036d6:	f604 67b8 	addw	r7, r4, #3768	; 0xeb8
 80036da:	2b00      	cmp	r3, #0
 80036dc:	f43f add0 	beq.w	8003280 <_ZN23Calibration_PadViewBaseC1Ev+0x5b4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80036e0:	4bbc      	ldr	r3, [pc, #752]	; (80039d4 <_ZN23Calibration_PadViewBaseC1Ev+0xd08>)
 80036e2:	881b      	ldrh	r3, [r3, #0]
 80036e4:	2b0f      	cmp	r3, #15
 80036e6:	f67f add5 	bls.w	8003294 <_ZN23Calibration_PadViewBaseC1Ev+0x5c8>
        return texts->getText(typedTextId);
 80036ea:	48b8      	ldr	r0, [pc, #736]	; (80039cc <_ZN23Calibration_PadViewBaseC1Ev+0xd00>)
 80036ec:	210f      	movs	r1, #15
 80036ee:	6800      	ldr	r0, [r0, #0]
 80036f0:	f004 ff6e 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 80036f4:	4ab6      	ldr	r2, [pc, #728]	; (80039d0 <_ZN23Calibration_PadViewBaseC1Ev+0xd04>)
 80036f6:	4603      	mov	r3, r0
 80036f8:	4641      	mov	r1, r8
 80036fa:	4638      	mov	r0, r7
 80036fc:	f016 f85e 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP1.resizeToCurrentText();
 8003700:	980b      	ldr	r0, [sp, #44]	; 0x2c
        wc1 = value;
 8003702:	f8c4 7670 	str.w	r7, [r4, #1648]	; 0x670
 8003706:	f00f fbdb 	bl	8012ec0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800370a:	4fb3      	ldr	r7, [pc, #716]	; (80039d8 <_ZN23Calibration_PadViewBaseC1Ev+0xd0c>)
    textAreaCal_RP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH1));
 800370c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800370e:	972b      	str	r7, [sp, #172]	; 0xac
 8003710:	f04f 0c14 	mov.w	ip, #20
 8003714:	4629      	mov	r1, r5
 8003716:	f8ad c0b0 	strh.w	ip, [sp, #176]	; 0xb0
 800371a:	f00f fbf1 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP1);
 800371e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003720:	ee18 0a90 	vmov	r0, s17
 8003724:	f00c fdc4 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1_2.setPosition(0, 15, 240, 10);
 8003728:	23f0      	movs	r3, #240	; 0xf0
 800372a:	ee1b 0a10 	vmov	r0, s22
 800372e:	f8cd 8000 	str.w	r8, [sp]
 8003732:	220f      	movs	r2, #15
 8003734:	4631      	mov	r1, r6
 8003736:	f7ff f904 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 800373a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 800373c:	f8c4 269c 	str.w	r2, [r4, #1692]	; 0x69c
 8003740:	f04f 3eff 	mov.w	lr, #4294967295
    line1_1_2.setStart(5, 5);
 8003744:	2205      	movs	r2, #5
 8003746:	f8a4 e6f4 	strh.w	lr, [r4, #1780]	; 0x6f4
 800374a:	4611      	mov	r1, r2
 800374c:	ee1b 0a10 	vmov	r0, s22
 8003750:	f8c4 a6f0 	str.w	sl, [r4, #1776]	; 0x6f0
 8003754:	f7ff faa2 	bl	8002c9c <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1_2.setEnd(235, 5);
 8003758:	2205      	movs	r2, #5
 800375a:	ee1b 0a10 	vmov	r0, s22
 800375e:	21eb      	movs	r1, #235	; 0xeb
 8003760:	f7ff faa0 	bl	8002ca4 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1_2.setLineWidth(1);
 8003764:	ee1b 0a10 	vmov	r0, s22
 8003768:	2101      	movs	r1, #1
 800376a:	f7ff fa9f 	bl	8002cac <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1_2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800376e:	ee1b 0a10 	vmov	r0, s22
 8003772:	2101      	movs	r1, #1
 8003774:	f00e ff94 	bl	80126a0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadRight.add(line1_1_2);
 8003778:	ee1b 1a10 	vmov	r1, s22
 800377c:	ee18 0a90 	vmov	r0, s17
 8003780:	f00c fd96 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1_2.setPosition(0, 15, 240, 10);
 8003784:	46c1      	mov	r9, r8
    textArea3_2.setXY(92, 0);
 8003786:	4632      	mov	r2, r6
 8003788:	f10d 0890 	add.w	r8, sp, #144	; 0x90
 800378c:	ee1f 0a10 	vmov	r0, s30
 8003790:	215c      	movs	r1, #92	; 0x5c
 8003792:	f7ff f8c9 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8003796:	4640      	mov	r0, r8
 8003798:	ee1f 1a10 	vmov	r1, s30
        color = newColor;
 800379c:	f8c4 a728 	str.w	sl, [r4, #1832]	; 0x728
        linespace = space;
 80037a0:	f8a4 672c 	strh.w	r6, [r4, #1836]	; 0x72c
        boundingArea = calculateBoundingArea();
 80037a4:	f00f f912 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80037a8:	ee1f 2a10 	vmov	r2, s30
 80037ac:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 80037b0:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80037b4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80037b8:	230e      	movs	r3, #14
    textArea3_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L8ZM));
 80037ba:	ee1f 0a10 	vmov	r0, s30
 80037be:	4629      	mov	r1, r5
 80037c0:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 80037c4:	972b      	str	r7, [sp, #172]	; 0xac
 80037c6:	f00f fb9b 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textArea3_2);
 80037ca:	ee1f 1a10 	vmov	r1, s30
 80037ce:	ee18 0a90 	vmov	r0, s17
 80037d2:	f00c fd6d 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadRight);
 80037d6:	ee18 1a90 	vmov	r1, s17
 80037da:	ee18 0a10 	vmov	r0, s16
 80037de:	f00d fa4a 	bl	8010c76 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 80037e2:	497e      	ldr	r1, [pc, #504]	; (80039dc <_ZN23Calibration_PadViewBaseC1Ev+0xd10>)
    buttonWithIcon_LH3.setXY(194, 97);
 80037e4:	9818      	ldr	r0, [sp, #96]	; 0x60
 80037e6:	f8c4 1748 	str.w	r1, [r4, #1864]	; 0x748
 80037ea:	2261      	movs	r2, #97	; 0x61
 80037ec:	21c2      	movs	r1, #194	; 0xc2
    buttonWithIcon_LH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80037ee:	f10d 0aa8 	add.w	sl, sp, #168	; 0xa8
    buttonWithIcon_LH3.setXY(194, 97);
 80037f2:	f7ff f899 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80037f6:	4653      	mov	r3, sl
 80037f8:	f10d 0aa4 	add.w	sl, sp, #164	; 0xa4
 80037fc:	4652      	mov	r2, sl
 80037fe:	f10d 0aa0 	add.w	sl, sp, #160	; 0xa0
 8003802:	2709      	movs	r7, #9
 8003804:	f04f 0801 	mov.w	r8, #1
 8003808:	4651      	mov	r1, sl
 800380a:	9818      	ldr	r0, [sp, #96]	; 0x60
 800380c:	9500      	str	r5, [sp, #0]
 800380e:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
 8003812:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8003816:	f8ad 70a8 	strh.w	r7, [sp, #168]	; 0xa8
 800381a:	f8ad 70ac 	strh.w	r7, [sp, #172]	; 0xac
 800381e:	f010 f864 	bl	80138ea <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerHallLeft.add(buttonWithIcon_LH3);
 8003822:	9918      	ldr	r1, [sp, #96]	; 0x60
 8003824:	f8c4 67a4 	str.w	r6, [r4, #1956]	; 0x7a4
 8003828:	ee19 0a10 	vmov	r0, s18
 800382c:	f00c fd40 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003830:	f10d 0aa8 	add.w	sl, sp, #168	; 0xa8
    buttonWithIcon_LH2.setXY(194, 61);
 8003834:	9819      	ldr	r0, [sp, #100]	; 0x64
 8003836:	223d      	movs	r2, #61	; 0x3d
 8003838:	21c2      	movs	r1, #194	; 0xc2
 800383a:	f7ff f875 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800383e:	4653      	mov	r3, sl
 8003840:	f10d 0aa4 	add.w	sl, sp, #164	; 0xa4
 8003844:	4652      	mov	r2, sl
 8003846:	f10d 0aa0 	add.w	sl, sp, #160	; 0xa0
 800384a:	4651      	mov	r1, sl
 800384c:	9819      	ldr	r0, [sp, #100]	; 0x64
 800384e:	9500      	str	r5, [sp, #0]
 8003850:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
 8003854:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8003858:	f8ad 70a8 	strh.w	r7, [sp, #168]	; 0xa8
 800385c:	f8ad 70ac 	strh.w	r7, [sp, #172]	; 0xac
 8003860:	f010 f843 	bl	80138ea <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerHallLeft.add(buttonWithIcon_LH2);
 8003864:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003866:	f8c4 67e0 	str.w	r6, [r4, #2016]	; 0x7e0
 800386a:	ee19 0a10 	vmov	r0, s18
 800386e:	f00c fd1f 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003872:	f10d 0aa8 	add.w	sl, sp, #168	; 0xa8
    buttonWithIcon_LH1.setXY(194, 25);
 8003876:	981a      	ldr	r0, [sp, #104]	; 0x68
 8003878:	2219      	movs	r2, #25
 800387a:	21c2      	movs	r1, #194	; 0xc2
 800387c:	f7ff f854 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003880:	4653      	mov	r3, sl
 8003882:	f10d 0aa4 	add.w	sl, sp, #164	; 0xa4
 8003886:	4652      	mov	r2, sl
 8003888:	f10d 0aa0 	add.w	sl, sp, #160	; 0xa0
 800388c:	4651      	mov	r1, sl
 800388e:	981a      	ldr	r0, [sp, #104]	; 0x68
 8003890:	9500      	str	r5, [sp, #0]
 8003892:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
 8003896:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 800389a:	f8ad 70a8 	strh.w	r7, [sp, #168]	; 0xa8
 800389e:	f8ad 70ac 	strh.w	r7, [sp, #172]	; 0xac
 80038a2:	f010 f822 	bl	80138ea <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerHallLeft.add(buttonWithIcon_LH1);
 80038a6:	991a      	ldr	r1, [sp, #104]	; 0x68
 80038a8:	f8c4 681c 	str.w	r6, [r4, #2076]	; 0x81c
 80038ac:	ee19 0a10 	vmov	r0, s18
 80038b0:	f00c fcfe 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80038b4:	f04f 3aff 	mov.w	sl, #4294967295
    textAreaCal_LH3.setXY(10, 104);
 80038b8:	2268      	movs	r2, #104	; 0x68
 80038ba:	4649      	mov	r1, r9
 80038bc:	980c      	ldr	r0, [sp, #48]	; 0x30
 80038be:	f7ff f833 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80038c2:	f8c4 a850 	str.w	sl, [r4, #2128]	; 0x850
        linespace = space;
 80038c6:	f8a4 6854 	strh.w	r6, [r4, #2132]	; 0x854
        return TextArea::BoundingArea();
 80038ca:	4628      	mov	r0, r5
 80038cc:	f7ff f8b4 	bl	8002a38 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80038d0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80038d4:	f604 035c 	addw	r3, r4, #2140	; 0x85c
 80038d8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80038dc:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_97K6).getText());
 80038e0:	f604 6acc 	addw	sl, r4, #3788	; 0xecc
 80038e4:	2b00      	cmp	r3, #0
 80038e6:	f43f accb 	beq.w	8003280 <_ZN23Calibration_PadViewBaseC1Ev+0x5b4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80038ea:	4a3a      	ldr	r2, [pc, #232]	; (80039d4 <_ZN23Calibration_PadViewBaseC1Ev+0xd08>)
 80038ec:	8813      	ldrh	r3, [r2, #0]
 80038ee:	2b07      	cmp	r3, #7
 80038f0:	f67f acd0 	bls.w	8003294 <_ZN23Calibration_PadViewBaseC1Ev+0x5c8>
        return texts->getText(typedTextId);
 80038f4:	4835      	ldr	r0, [pc, #212]	; (80039cc <_ZN23Calibration_PadViewBaseC1Ev+0xd00>)
 80038f6:	2107      	movs	r1, #7
 80038f8:	6800      	ldr	r0, [r0, #0]
 80038fa:	f004 fe69 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 80038fe:	4a34      	ldr	r2, [pc, #208]	; (80039d0 <_ZN23Calibration_PadViewBaseC1Ev+0xd04>)
 8003900:	4603      	mov	r3, r0
 8003902:	4649      	mov	r1, r9
 8003904:	4650      	mov	r0, sl
 8003906:	f015 ff59 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH3.resizeToCurrentText();
 800390a:	980c      	ldr	r0, [sp, #48]	; 0x30
        wc1 = value;
 800390c:	f8c4 a868 	str.w	sl, [r4, #2152]	; 0x868
 8003910:	f00f fad6 	bl	8012ec0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003914:	4b30      	ldr	r3, [pc, #192]	; (80039d8 <_ZN23Calibration_PadViewBaseC1Ev+0xd0c>)
    textAreaCal_LH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH3));
 8003916:	980c      	ldr	r0, [sp, #48]	; 0x30
 8003918:	932b      	str	r3, [sp, #172]	; 0xac
 800391a:	4629      	mov	r1, r5
 800391c:	2313      	movs	r3, #19
 800391e:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 8003922:	f00f faed 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH3);
 8003926:	990c      	ldr	r1, [sp, #48]	; 0x30
 8003928:	ee19 0a10 	vmov	r0, s18
 800392c:	f00c fcc0 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8003930:	f04f 3aff 	mov.w	sl, #4294967295
    textAreaCal_LH2.setXY(22, 68);
 8003934:	2244      	movs	r2, #68	; 0x44
 8003936:	2116      	movs	r1, #22
 8003938:	980d      	ldr	r0, [sp, #52]	; 0x34
 800393a:	f7fe fff5 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 800393e:	f8c4 a89c 	str.w	sl, [r4, #2204]	; 0x89c
        linespace = space;
 8003942:	f8a4 68a0 	strh.w	r6, [r4, #2208]	; 0x8a0
        return TextArea::BoundingArea();
 8003946:	4628      	mov	r0, r5
 8003948:	f7ff f876 	bl	8002a38 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 800394c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003950:	f604 03a8 	addw	r3, r4, #2216	; 0x8a8
 8003954:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003958:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NV24).getText());
 800395c:	f504 6a6e 	add.w	sl, r4, #3808	; 0xee0
 8003960:	2b00      	cmp	r3, #0
 8003962:	f43f ac8d 	beq.w	8003280 <_ZN23Calibration_PadViewBaseC1Ev+0x5b4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003966:	4a1b      	ldr	r2, [pc, #108]	; (80039d4 <_ZN23Calibration_PadViewBaseC1Ev+0xd08>)
 8003968:	8813      	ldrh	r3, [r2, #0]
 800396a:	2b06      	cmp	r3, #6
 800396c:	f67f ac92 	bls.w	8003294 <_ZN23Calibration_PadViewBaseC1Ev+0x5c8>
        return texts->getText(typedTextId);
 8003970:	4816      	ldr	r0, [pc, #88]	; (80039cc <_ZN23Calibration_PadViewBaseC1Ev+0xd00>)
 8003972:	2106      	movs	r1, #6
 8003974:	6800      	ldr	r0, [r0, #0]
 8003976:	f004 fe2b 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 800397a:	4a15      	ldr	r2, [pc, #84]	; (80039d0 <_ZN23Calibration_PadViewBaseC1Ev+0xd04>)
 800397c:	4603      	mov	r3, r0
 800397e:	4649      	mov	r1, r9
 8003980:	4650      	mov	r0, sl
 8003982:	f015 ff1b 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH2.resizeToCurrentText();
 8003986:	980d      	ldr	r0, [sp, #52]	; 0x34
        wc1 = value;
 8003988:	f8c4 a8b4 	str.w	sl, [r4, #2228]	; 0x8b4
 800398c:	f00f fa98 	bl	8012ec0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003990:	4b11      	ldr	r3, [pc, #68]	; (80039d8 <_ZN23Calibration_PadViewBaseC1Ev+0xd0c>)
    textAreaCal_LH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 8003992:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003994:	932b      	str	r3, [sp, #172]	; 0xac
 8003996:	f04f 0e11 	mov.w	lr, #17
 800399a:	4629      	mov	r1, r5
 800399c:	f8ad e0b0 	strh.w	lr, [sp, #176]	; 0xb0
 80039a0:	f00f faae 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH2);
 80039a4:	990d      	ldr	r1, [sp, #52]	; 0x34
 80039a6:	ee19 0a10 	vmov	r0, s18
 80039aa:	f00c fc81 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH1.setXY(22, 32);
 80039ae:	2220      	movs	r2, #32
 80039b0:	2116      	movs	r1, #22
 80039b2:	980e      	ldr	r0, [sp, #56]	; 0x38
 80039b4:	f7fe ffb8 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80039b8:	f04f 3eff 	mov.w	lr, #4294967295
 80039bc:	f8c4 e8e8 	str.w	lr, [r4, #2280]	; 0x8e8
        linespace = space;
 80039c0:	f8a4 68ec 	strh.w	r6, [r4, #2284]	; 0x8ec
 80039c4:	e00c      	b.n	80039e0 <_ZN23Calibration_PadViewBaseC1Ev+0xd14>
 80039c6:	bf00      	nop
 80039c8:	20013874 	.word	0x20013874
 80039cc:	20013880 	.word	0x20013880
 80039d0:	0802cd0d 	.word	0x0802cd0d
 80039d4:	20013878 	.word	0x20013878
 80039d8:	0802cd80 	.word	0x0802cd80
 80039dc:	00ac00f0 	.word	0x00ac00f0
        return TextArea::BoundingArea();
 80039e0:	4628      	mov	r0, r5
 80039e2:	f7ff f829 	bl	8002a38 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80039e6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80039ea:	f604 03f4 	addw	r3, r4, #2292	; 0x8f4
 80039ee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80039f2:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_P0AV).getText());
 80039f6:	f604 6af4 	addw	sl, r4, #3828	; 0xef4
 80039fa:	2b00      	cmp	r3, #0
 80039fc:	f43f ac40 	beq.w	8003280 <_ZN23Calibration_PadViewBaseC1Ev+0x5b4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003a00:	4adc      	ldr	r2, [pc, #880]	; (8003d74 <_ZN23Calibration_PadViewBaseC1Ev+0x10a8>)
 8003a02:	8813      	ldrh	r3, [r2, #0]
 8003a04:	2b05      	cmp	r3, #5
 8003a06:	f67f ac45 	bls.w	8003294 <_ZN23Calibration_PadViewBaseC1Ev+0x5c8>
        return texts->getText(typedTextId);
 8003a0a:	48db      	ldr	r0, [pc, #876]	; (8003d78 <_ZN23Calibration_PadViewBaseC1Ev+0x10ac>)
 8003a0c:	2105      	movs	r1, #5
 8003a0e:	6800      	ldr	r0, [r0, #0]
 8003a10:	f004 fdde 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 8003a14:	4ad9      	ldr	r2, [pc, #868]	; (8003d7c <_ZN23Calibration_PadViewBaseC1Ev+0x10b0>)
 8003a16:	4603      	mov	r3, r0
 8003a18:	4649      	mov	r1, r9
 8003a1a:	4650      	mov	r0, sl
 8003a1c:	f015 fece 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH1.resizeToCurrentText();
 8003a20:	980e      	ldr	r0, [sp, #56]	; 0x38
        wc1 = value;
 8003a22:	f8c4 a900 	str.w	sl, [r4, #2304]	; 0x900
 8003a26:	f00f fa4b 	bl	8012ec0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003a2a:	f04f 0c14 	mov.w	ip, #20
 8003a2e:	4bd4      	ldr	r3, [pc, #848]	; (8003d80 <_ZN23Calibration_PadViewBaseC1Ev+0x10b4>)
    textAreaCal_LH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH1));
 8003a30:	980e      	ldr	r0, [sp, #56]	; 0x38
 8003a32:	f8ad c0b0 	strh.w	ip, [sp, #176]	; 0xb0
 8003a36:	4629      	mov	r1, r5
 8003a38:	932b      	str	r3, [sp, #172]	; 0xac
 8003a3a:	f00f fa61 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH1);
 8003a3e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8003a40:	ee19 0a10 	vmov	r0, s18
 8003a44:	f00c fc34 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1_2_2.setPosition(0, 15, 240, 10);
 8003a48:	ee1b 0a90 	vmov	r0, s23
 8003a4c:	23f0      	movs	r3, #240	; 0xf0
 8003a4e:	220f      	movs	r2, #15
 8003a50:	4631      	mov	r1, r6
 8003a52:	f8cd 9000 	str.w	r9, [sp]
 8003a56:	f7fe ff74 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003a5a:	f04f 30ff 	mov.w	r0, #4294967295
 8003a5e:	f64f 73ff 	movw	r3, #65535	; 0xffff
    line1_1_2_2.setStart(5, 5);
 8003a62:	2205      	movs	r2, #5
 8003a64:	f8c4 0980 	str.w	r0, [r4, #2432]	; 0x980
 8003a68:	9820      	ldr	r0, [sp, #128]	; 0x80
 8003a6a:	f8a4 3984 	strh.w	r3, [r4, #2436]	; 0x984
 8003a6e:	4611      	mov	r1, r2
 8003a70:	f8c4 092c 	str.w	r0, [r4, #2348]	; 0x92c
 8003a74:	ee1b 0a90 	vmov	r0, s23
 8003a78:	f7ff f910 	bl	8002c9c <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1_2_2.setEnd(235, 5);
 8003a7c:	2205      	movs	r2, #5
 8003a7e:	ee1b 0a90 	vmov	r0, s23
 8003a82:	21eb      	movs	r1, #235	; 0xeb
 8003a84:	f7ff f90e 	bl	8002ca4 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1_2_2.setLineWidth(1);
 8003a88:	ee1b 0a90 	vmov	r0, s23
 8003a8c:	4641      	mov	r1, r8
 8003a8e:	f7ff f90d 	bl	8002cac <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1_2_2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003a92:	ee1b 0a90 	vmov	r0, s23
 8003a96:	4641      	mov	r1, r8
 8003a98:	f00e fe02 	bl	80126a0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallLeft.add(line1_1_2_2);
 8003a9c:	ee1b 1a90 	vmov	r1, s23
 8003aa0:	ee19 0a10 	vmov	r0, s18
 8003aa4:	f00c fc04 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_2_2.setXY(73, 0);
 8003aa8:	4632      	mov	r2, r6
 8003aaa:	ee1f 0a90 	vmov	r0, s31
 8003aae:	2149      	movs	r1, #73	; 0x49
 8003ab0:	f7fe ff3a 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003ab4:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8003ab8:	ee1f 1a90 	vmov	r1, s31
        color = newColor;
 8003abc:	f8c4 09b8 	str.w	r0, [r4, #2488]	; 0x9b8
        linespace = space;
 8003ac0:	f8a4 69bc 	strh.w	r6, [r4, #2492]	; 0x9bc
        boundingArea = calculateBoundingArea();
 8003ac4:	a824      	add	r0, sp, #144	; 0x90
 8003ac6:	f00e ff81 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003aca:	ee1f 0a90 	vmov	r0, s31
 8003ace:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 8003ad2:	a824      	add	r0, sp, #144	; 0x90
 8003ad4:	c807      	ldmia	r0, {r0, r1, r2}
 8003ad6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003ada:	4ba9      	ldr	r3, [pc, #676]	; (8003d80 <_ZN23Calibration_PadViewBaseC1Ev+0x10b4>)
 8003adc:	932b      	str	r3, [sp, #172]	; 0xac
    textArea3_2_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FW37));
 8003ade:	4629      	mov	r1, r5
 8003ae0:	2304      	movs	r3, #4
 8003ae2:	ee1f 0a90 	vmov	r0, s31
 8003ae6:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 8003aea:	f00f fa09 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textArea3_2_2);
 8003aee:	ee1f 1a90 	vmov	r1, s31
 8003af2:	ee19 0a10 	vmov	r0, s18
 8003af6:	f00c fbdb 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallLeft);
 8003afa:	ee19 1a10 	vmov	r1, s18
 8003afe:	ee18 0a10 	vmov	r0, s16
 8003b02:	f00d f8b8 	bl	8010c76 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8003b06:	499f      	ldr	r1, [pc, #636]	; (8003d84 <_ZN23Calibration_PadViewBaseC1Ev+0x10b8>)
    buttonWithIcon_RH3.setXY(194, 97);
 8003b08:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8003b0a:	f8c4 19d8 	str.w	r1, [r4, #2520]	; 0x9d8
 8003b0e:	2261      	movs	r2, #97	; 0x61
 8003b10:	21c2      	movs	r1, #194	; 0xc2
 8003b12:	f7fe ff09 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003b16:	a929      	add	r1, sp, #164	; 0xa4
 8003b18:	ab2a      	add	r3, sp, #168	; 0xa8
 8003b1a:	460a      	mov	r2, r1
 8003b1c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8003b1e:	9500      	str	r5, [sp, #0]
 8003b20:	a928      	add	r1, sp, #160	; 0xa0
 8003b22:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
 8003b26:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8003b2a:	f8ad 70a8 	strh.w	r7, [sp, #168]	; 0xa8
 8003b2e:	f8ad 70ac 	strh.w	r7, [sp, #172]	; 0xac
 8003b32:	f00f feda 	bl	80138ea <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerHallRight.add(buttonWithIcon_RH3);
 8003b36:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8003b38:	f8c4 6a34 	str.w	r6, [r4, #2612]	; 0xa34
 8003b3c:	ee19 0a90 	vmov	r0, s19
 8003b40:	f00c fbb6 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH2.setXY(194, 61);
 8003b44:	981c      	ldr	r0, [sp, #112]	; 0x70
 8003b46:	223d      	movs	r2, #61	; 0x3d
 8003b48:	21c2      	movs	r1, #194	; 0xc2
 8003b4a:	f7fe feed 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003b4e:	a929      	add	r1, sp, #164	; 0xa4
 8003b50:	ab2a      	add	r3, sp, #168	; 0xa8
 8003b52:	460a      	mov	r2, r1
 8003b54:	981c      	ldr	r0, [sp, #112]	; 0x70
 8003b56:	9500      	str	r5, [sp, #0]
 8003b58:	a928      	add	r1, sp, #160	; 0xa0
 8003b5a:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
 8003b5e:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8003b62:	f8ad 70a8 	strh.w	r7, [sp, #168]	; 0xa8
 8003b66:	f8ad 70ac 	strh.w	r7, [sp, #172]	; 0xac
 8003b6a:	f00f febe 	bl	80138ea <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerHallRight.add(buttonWithIcon_RH2);
 8003b6e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003b70:	f8c4 6a70 	str.w	r6, [r4, #2672]	; 0xa70
 8003b74:	ee19 0a90 	vmov	r0, s19
 8003b78:	f00c fb9a 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH1.setXY(194, 25);
 8003b7c:	981d      	ldr	r0, [sp, #116]	; 0x74
 8003b7e:	2219      	movs	r2, #25
 8003b80:	21c2      	movs	r1, #194	; 0xc2
 8003b82:	f7fe fed1 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003b86:	a929      	add	r1, sp, #164	; 0xa4
 8003b88:	ab2a      	add	r3, sp, #168	; 0xa8
 8003b8a:	460a      	mov	r2, r1
 8003b8c:	981d      	ldr	r0, [sp, #116]	; 0x74
 8003b8e:	9500      	str	r5, [sp, #0]
 8003b90:	a928      	add	r1, sp, #160	; 0xa0
 8003b92:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
 8003b96:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8003b9a:	f8ad 70a8 	strh.w	r7, [sp, #168]	; 0xa8
 8003b9e:	f8ad 70ac 	strh.w	r7, [sp, #172]	; 0xac
 8003ba2:	f00f fea2 	bl	80138ea <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    swipeContainerHallRight.add(buttonWithIcon_RH1);
 8003ba6:	991d      	ldr	r1, [sp, #116]	; 0x74
 8003ba8:	f8c4 6aac 	str.w	r6, [r4, #2732]	; 0xaac
 8003bac:	ee19 0a90 	vmov	r0, s19
 8003bb0:	f00c fb7e 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH3.setXY(10, 104);
 8003bb4:	2268      	movs	r2, #104	; 0x68
 8003bb6:	4649      	mov	r1, r9
 8003bb8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8003bba:	f7fe feb5 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003bbe:	f04f 33ff 	mov.w	r3, #4294967295
 8003bc2:	f8c4 3ae0 	str.w	r3, [r4, #2784]	; 0xae0
        return TextArea::BoundingArea();
 8003bc6:	4628      	mov	r0, r5
        linespace = space;
 8003bc8:	f8a4 6ae4 	strh.w	r6, [r4, #2788]	; 0xae4
 8003bcc:	f7fe ff34 	bl	8002a38 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003bd0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003bd4:	f604 23ec 	addw	r3, r4, #2796	; 0xaec
 8003bd8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003bdc:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XWKA).getText());
 8003be0:	f604 7508 	addw	r5, r4, #3848	; 0xf08
 8003be4:	2b00      	cmp	r3, #0
 8003be6:	f43f ab4b 	beq.w	8003280 <_ZN23Calibration_PadViewBaseC1Ev+0x5b4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003bea:	4a62      	ldr	r2, [pc, #392]	; (8003d74 <_ZN23Calibration_PadViewBaseC1Ev+0x10a8>)
 8003bec:	8813      	ldrh	r3, [r2, #0]
 8003bee:	2b03      	cmp	r3, #3
 8003bf0:	f67f ab50 	bls.w	8003294 <_ZN23Calibration_PadViewBaseC1Ev+0x5c8>
        return texts->getText(typedTextId);
 8003bf4:	f8df 8180 	ldr.w	r8, [pc, #384]	; 8003d78 <_ZN23Calibration_PadViewBaseC1Ev+0x10ac>
        : typedTextId(id)
 8003bf8:	f8df a184 	ldr.w	sl, [pc, #388]	; 8003d80 <_ZN23Calibration_PadViewBaseC1Ev+0x10b4>
        return texts->getText(typedTextId);
 8003bfc:	f8d8 0000 	ldr.w	r0, [r8]
 8003c00:	2103      	movs	r1, #3
 8003c02:	f004 fce5 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 8003c06:	4a5d      	ldr	r2, [pc, #372]	; (8003d7c <_ZN23Calibration_PadViewBaseC1Ev+0x10b0>)
 8003c08:	4603      	mov	r3, r0
 8003c0a:	4649      	mov	r1, r9
 8003c0c:	4628      	mov	r0, r5
 8003c0e:	f015 fdd5 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH3.resizeToCurrentText();
 8003c12:	980f      	ldr	r0, [sp, #60]	; 0x3c
        wc1 = value;
 8003c14:	f8c4 5af8 	str.w	r5, [r4, #2808]	; 0xaf8
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH3));
 8003c18:	ad2b      	add	r5, sp, #172	; 0xac
    textAreaCal_RH3.resizeToCurrentText();
 8003c1a:	f00f f951 	bl	8012ec0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003c1e:	2313      	movs	r3, #19
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH3));
 8003c20:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8003c22:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 8003c26:	4629      	mov	r1, r5
 8003c28:	f8cd a0ac 	str.w	sl, [sp, #172]	; 0xac
 8003c2c:	f00f f968 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH3);
 8003c30:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8003c32:	ee19 0a90 	vmov	r0, s19
 8003c36:	f00c fb3b 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8003c3a:	f04f 37ff 	mov.w	r7, #4294967295
    textAreaCal_RH2.setXY(22, 68);
 8003c3e:	2244      	movs	r2, #68	; 0x44
 8003c40:	2116      	movs	r1, #22
 8003c42:	9810      	ldr	r0, [sp, #64]	; 0x40
 8003c44:	f7fe fe70 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8003c48:	f8c4 7b2c 	str.w	r7, [r4, #2860]	; 0xb2c
        linespace = space;
 8003c4c:	f8a4 6b30 	strh.w	r6, [r4, #2864]	; 0xb30
        return TextArea::BoundingArea();
 8003c50:	4628      	mov	r0, r5
 8003c52:	f7fe fef1 	bl	8002a38 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003c56:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003c5a:	f604 3338 	addw	r3, r4, #2872	; 0xb38
 8003c5e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003c62:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9IK4).getText());
 8003c66:	f604 791c 	addw	r9, r4, #3868	; 0xf1c
 8003c6a:	2b00      	cmp	r3, #0
 8003c6c:	f43f ab08 	beq.w	8003280 <_ZN23Calibration_PadViewBaseC1Ev+0x5b4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003c70:	4a40      	ldr	r2, [pc, #256]	; (8003d74 <_ZN23Calibration_PadViewBaseC1Ev+0x10a8>)
 8003c72:	8813      	ldrh	r3, [r2, #0]
 8003c74:	2b02      	cmp	r3, #2
 8003c76:	f67f ab0d 	bls.w	8003294 <_ZN23Calibration_PadViewBaseC1Ev+0x5c8>
        return texts->getText(typedTextId);
 8003c7a:	2102      	movs	r1, #2
 8003c7c:	f8d8 0000 	ldr.w	r0, [r8]
 8003c80:	f004 fca6 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 8003c84:	4a3d      	ldr	r2, [pc, #244]	; (8003d7c <_ZN23Calibration_PadViewBaseC1Ev+0x10b0>)
 8003c86:	4603      	mov	r3, r0
 8003c88:	210a      	movs	r1, #10
 8003c8a:	4648      	mov	r0, r9
 8003c8c:	f015 fd96 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH2.resizeToCurrentText();
 8003c90:	9810      	ldr	r0, [sp, #64]	; 0x40
        wc1 = value;
 8003c92:	f8c4 9b44 	str.w	r9, [r4, #2884]	; 0xb44
 8003c96:	f00f f913 	bl	8012ec0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003c9a:	2311      	movs	r3, #17
    textAreaCal_RH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 8003c9c:	9810      	ldr	r0, [sp, #64]	; 0x40
 8003c9e:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 8003ca2:	4629      	mov	r1, r5
 8003ca4:	f8cd a0ac 	str.w	sl, [sp, #172]	; 0xac
 8003ca8:	f00f f92a 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH2);
 8003cac:	9910      	ldr	r1, [sp, #64]	; 0x40
 8003cae:	ee19 0a90 	vmov	r0, s19
 8003cb2:	f00c fafd 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH1.setXY(22, 32);
 8003cb6:	2220      	movs	r2, #32
 8003cb8:	2116      	movs	r1, #22
 8003cba:	9811      	ldr	r0, [sp, #68]	; 0x44
 8003cbc:	f7fe fe34 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003cc0:	f8c4 7b78 	str.w	r7, [r4, #2936]	; 0xb78
        linespace = space;
 8003cc4:	f8a4 6b7c 	strh.w	r6, [r4, #2940]	; 0xb7c
        return TextArea::BoundingArea();
 8003cc8:	4628      	mov	r0, r5
 8003cca:	f7fe feb5 	bl	8002a38 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003cce:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003cd2:	f604 3384 	addw	r3, r4, #2948	; 0xb84
 8003cd6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003cda:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CX8L).getText());
 8003cde:	f504 6973 	add.w	r9, r4, #3888	; 0xf30
 8003ce2:	2b00      	cmp	r3, #0
 8003ce4:	f43f aacc 	beq.w	8003280 <_ZN23Calibration_PadViewBaseC1Ev+0x5b4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003ce8:	4a22      	ldr	r2, [pc, #136]	; (8003d74 <_ZN23Calibration_PadViewBaseC1Ev+0x10a8>)
 8003cea:	8813      	ldrh	r3, [r2, #0]
 8003cec:	2b01      	cmp	r3, #1
 8003cee:	f67f aad1 	bls.w	8003294 <_ZN23Calibration_PadViewBaseC1Ev+0x5c8>
        return texts->getText(typedTextId);
 8003cf2:	f8d8 0000 	ldr.w	r0, [r8]
 8003cf6:	2101      	movs	r1, #1
 8003cf8:	f004 fc6a 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 8003cfc:	4a1f      	ldr	r2, [pc, #124]	; (8003d7c <_ZN23Calibration_PadViewBaseC1Ev+0x10b0>)
 8003cfe:	4603      	mov	r3, r0
 8003d00:	210a      	movs	r1, #10
 8003d02:	4648      	mov	r0, r9
 8003d04:	f015 fd5a 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH1.resizeToCurrentText();
 8003d08:	9811      	ldr	r0, [sp, #68]	; 0x44
        wc1 = value;
 8003d0a:	f8c4 9b90 	str.w	r9, [r4, #2960]	; 0xb90
 8003d0e:	f00f f8d7 	bl	8012ec0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003d12:	2314      	movs	r3, #20
    textAreaCal_RH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH1));
 8003d14:	9811      	ldr	r0, [sp, #68]	; 0x44
 8003d16:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 8003d1a:	4629      	mov	r1, r5
    line1_1_2_3.setPosition(0, 15, 240, 10);
 8003d1c:	f04f 090a 	mov.w	r9, #10
 8003d20:	f8cd a0ac 	str.w	sl, [sp, #172]	; 0xac
    textAreaCal_RH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH1));
 8003d24:	f00f f8ec 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH1);
 8003d28:	9911      	ldr	r1, [sp, #68]	; 0x44
 8003d2a:	ee19 0a90 	vmov	r0, s19
 8003d2e:	f00c fabf 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1_2_3.setPosition(0, 15, 240, 10);
 8003d32:	ee1c 0a10 	vmov	r0, s24
 8003d36:	4631      	mov	r1, r6
 8003d38:	f8cd 9000 	str.w	r9, [sp]
 8003d3c:	23f0      	movs	r3, #240	; 0xf0
 8003d3e:	220f      	movs	r2, #15
 8003d40:	f7fe fdff 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003d44:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003d46:	f8c4 3bbc 	str.w	r3, [r4, #3004]	; 0xbbc
    line1_1_2_3.setStart(5, 5);
 8003d4a:	2205      	movs	r2, #5
 8003d4c:	ee1c 0a10 	vmov	r0, s24
 8003d50:	4611      	mov	r1, r2
 8003d52:	f8c4 7c10 	str.w	r7, [r4, #3088]	; 0xc10
 8003d56:	f8a4 7c14 	strh.w	r7, [r4, #3092]	; 0xc14
 8003d5a:	f7fe ff9f 	bl	8002c9c <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1_2_3.setEnd(235, 5);
 8003d5e:	2205      	movs	r2, #5
 8003d60:	ee1c 0a10 	vmov	r0, s24
 8003d64:	21eb      	movs	r1, #235	; 0xeb
 8003d66:	f7fe ff9d 	bl	8002ca4 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1_2_3.setLineWidth(1);
 8003d6a:	ee1c 0a10 	vmov	r0, s24
 8003d6e:	2101      	movs	r1, #1
 8003d70:	e00a      	b.n	8003d88 <_ZN23Calibration_PadViewBaseC1Ev+0x10bc>
 8003d72:	bf00      	nop
 8003d74:	20013878 	.word	0x20013878
 8003d78:	20013880 	.word	0x20013880
 8003d7c:	0802cd0d 	.word	0x0802cd0d
 8003d80:	0802cd80 	.word	0x0802cd80
 8003d84:	00ac00f0 	.word	0x00ac00f0
 8003d88:	f7fe ff90 	bl	8002cac <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1_2_3.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003d8c:	ee1c 0a10 	vmov	r0, s24
 8003d90:	2101      	movs	r1, #1
 8003d92:	f00e fc85 	bl	80126a0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallRight.add(line1_1_2_3);
 8003d96:	ee1c 1a10 	vmov	r1, s24
 8003d9a:	ee19 0a90 	vmov	r0, s19
 8003d9e:	f10d 0890 	add.w	r8, sp, #144	; 0x90
 8003da2:	f00c fa85 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_2_3.setXY(69, 0);
 8003da6:	4632      	mov	r2, r6
 8003da8:	9803      	ldr	r0, [sp, #12]
 8003daa:	2145      	movs	r1, #69	; 0x45
 8003dac:	f7fe fdbc 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8003db0:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 8003db2:	f8c4 7c48 	str.w	r7, [r4, #3144]	; 0xc48
        boundingArea = calculateBoundingArea();
 8003db6:	4640      	mov	r0, r8
        linespace = space;
 8003db8:	f8a4 6c4c 	strh.w	r6, [r4, #3148]	; 0xc4c
        boundingArea = calculateBoundingArea();
 8003dbc:	f00e fe06 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003dc0:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003dc4:	9b03      	ldr	r3, [sp, #12]
 8003dc6:	f8cd a0ac 	str.w	sl, [sp, #172]	; 0xac
 8003dca:	333c      	adds	r3, #60	; 0x3c
 8003dcc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea3_2_3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_846K));
 8003dd0:	9803      	ldr	r0, [sp, #12]
 8003dd2:	f8ad 60b0 	strh.w	r6, [sp, #176]	; 0xb0
 8003dd6:	4629      	mov	r1, r5
 8003dd8:	f00f f892 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textArea3_2_3);
 8003ddc:	9903      	ldr	r1, [sp, #12]
 8003dde:	ee19 0a90 	vmov	r0, s19
 8003de2:	f00c fa65 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallRight);
 8003de6:	ee19 1a90 	vmov	r1, s19
 8003dea:	ee18 0a10 	vmov	r0, s16
 8003dee:	f00c ff42 	bl	8010c76 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
    swipeContainer1.setSelectedPage(0);
 8003df2:	ee18 0a10 	vmov	r0, s16
 8003df6:	4631      	mov	r1, r6
 8003df8:	f00c ff2e 	bl	8010c58 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 8003dfc:	ee18 1a10 	vmov	r1, s16
 8003e00:	ee1a 0a10 	vmov	r0, s20
 8003e04:	f00c fa54 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(0, 75, 240, 10);
 8003e08:	ee1c 0a90 	vmov	r0, s25
 8003e0c:	4631      	mov	r1, r6
 8003e0e:	f8cd 9000 	str.w	r9, [sp]
 8003e12:	23f0      	movs	r3, #240	; 0xf0
 8003e14:	224b      	movs	r2, #75	; 0x4b
 8003e16:	f7fe fd94 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003e1a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003e1e:	f8a4 3ce0 	strh.w	r3, [r4, #3296]	; 0xce0
    line1_1.setStart(5, 5);
 8003e22:	2205      	movs	r2, #5
 8003e24:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003e26:	f8c4 3c88 	str.w	r3, [r4, #3208]	; 0xc88
 8003e2a:	ee1c 0a90 	vmov	r0, s25
 8003e2e:	4611      	mov	r1, r2
 8003e30:	f8c4 7cdc 	str.w	r7, [r4, #3292]	; 0xcdc
 8003e34:	f7fe ff32 	bl	8002c9c <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1.setEnd(235, 5);
 8003e38:	2205      	movs	r2, #5
 8003e3a:	ee1c 0a90 	vmov	r0, s25
 8003e3e:	21eb      	movs	r1, #235	; 0xeb
 8003e40:	f7fe ff30 	bl	8002ca4 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1.setLineWidth(1);
 8003e44:	ee1c 0a90 	vmov	r0, s25
 8003e48:	2101      	movs	r1, #1
 8003e4a:	f7fe ff2f 	bl	8002cac <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003e4e:	ee1c 0a90 	vmov	r0, s25
 8003e52:	2101      	movs	r1, #1
 8003e54:	f00e fc24 	bl	80126a0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8003e58:	ee1c 1a90 	vmov	r1, s25
 8003e5c:	ee1a 0a10 	vmov	r0, s20
 8003e60:	f00c fa26 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(70, 60);
 8003e64:	9804      	ldr	r0, [sp, #16]
 8003e66:	223c      	movs	r2, #60	; 0x3c
 8003e68:	2146      	movs	r1, #70	; 0x46
 8003e6a:	f7fe fd5d 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8003e6e:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 8003e70:	f8c4 7d14 	str.w	r7, [r4, #3348]	; 0xd14
        boundingArea = calculateBoundingArea();
 8003e74:	4640      	mov	r0, r8
        linespace = space;
 8003e76:	f8a4 6d18 	strh.w	r6, [r4, #3352]	; 0xd18
        boundingArea = calculateBoundingArea();
 8003e7a:	f00e fda7 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003e7e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003e82:	9b04      	ldr	r3, [sp, #16]
 8003e84:	f8cd a0ac 	str.w	sl, [sp, #172]	; 0xac
 8003e88:	333c      	adds	r3, #60	; 0x3c
 8003e8a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003e8e:	231e      	movs	r3, #30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8003e90:	9804      	ldr	r0, [sp, #16]
 8003e92:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 8003e96:	4629      	mov	r1, r5
 8003e98:	f00f f832 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003e9c:	9904      	ldr	r1, [sp, #16]
 8003e9e:	ee1a 0a10 	vmov	r0, s20
 8003ea2:	f00c fa05 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8003ea6:	ee1d 0a10 	vmov	r0, s26
 8003eaa:	4631      	mov	r1, r6
 8003eac:	f8cd 9000 	str.w	r9, [sp]
 8003eb0:	23f0      	movs	r3, #240	; 0xf0
 8003eb2:	2232      	movs	r2, #50	; 0x32
 8003eb4:	f7fe fd45 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003eb8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8003eba:	f8c4 3d54 	str.w	r3, [r4, #3412]	; 0xd54
    line1.setStart(5, 5);
 8003ebe:	2205      	movs	r2, #5
 8003ec0:	ee1d 0a10 	vmov	r0, s26
 8003ec4:	4611      	mov	r1, r2
 8003ec6:	f8c4 7da8 	str.w	r7, [r4, #3496]	; 0xda8
 8003eca:	f8a4 7dac 	strh.w	r7, [r4, #3500]	; 0xdac
 8003ece:	f7fe fee5 	bl	8002c9c <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1.setEnd(235, 5);
 8003ed2:	2205      	movs	r2, #5
 8003ed4:	ee1d 0a10 	vmov	r0, s26
 8003ed8:	21eb      	movs	r1, #235	; 0xeb
 8003eda:	f7fe fee3 	bl	8002ca4 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1.setLineWidth(1);
 8003ede:	ee1d 0a10 	vmov	r0, s26
 8003ee2:	2101      	movs	r1, #1
 8003ee4:	f7fe fee2 	bl	8002cac <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003ee8:	ee1d 0a10 	vmov	r0, s26
 8003eec:	2101      	movs	r1, #1
 8003eee:	f00e fbd7 	bl	80126a0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8003ef2:	ee1d 1a10 	vmov	r1, s26
 8003ef6:	ee1a 0a10 	vmov	r0, s20
 8003efa:	f00c f9d9 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8003efe:	9805      	ldr	r0, [sp, #20]
 8003f00:	2223      	movs	r2, #35	; 0x23
 8003f02:	2145      	movs	r1, #69	; 0x45
 8003f04:	f7fe fd10 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8003f08:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8003f0a:	f8c4 7de0 	str.w	r7, [r4, #3552]	; 0xde0
        boundingArea = calculateBoundingArea();
 8003f0e:	4640      	mov	r0, r8
        linespace = space;
 8003f10:	f8a4 6de4 	strh.w	r6, [r4, #3556]	; 0xde4
        boundingArea = calculateBoundingArea();
 8003f14:	f00e fd5a 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003f18:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003f1c:	9b05      	ldr	r3, [sp, #20]
 8003f1e:	f8cd a0ac 	str.w	sl, [sp, #172]	; 0xac
 8003f22:	333c      	adds	r3, #60	; 0x3c
 8003f24:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003f28:	2320      	movs	r3, #32
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 8003f2a:	9805      	ldr	r0, [sp, #20]
 8003f2c:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 8003f30:	4629      	mov	r1, r5
 8003f32:	f00e ffe5 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003f36:	9905      	ldr	r1, [sp, #20]
 8003f38:	ee1a 0a10 	vmov	r0, s20
 8003f3c:	f00c f9b8 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8003f40:	9806      	ldr	r0, [sp, #24]
 8003f42:	220c      	movs	r2, #12
 8003f44:	2136      	movs	r1, #54	; 0x36
 8003f46:	f7fe fcef 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8003f4a:	9906      	ldr	r1, [sp, #24]
        color = newColor;
 8003f4c:	f8c4 7e28 	str.w	r7, [r4, #3624]	; 0xe28
        boundingArea = calculateBoundingArea();
 8003f50:	4640      	mov	r0, r8
        linespace = space;
 8003f52:	f8a4 6e2c 	strh.w	r6, [r4, #3628]	; 0xe2c
        boundingArea = calculateBoundingArea();
 8003f56:	f00e fd39 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003f5a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003f5e:	9b06      	ldr	r3, [sp, #24]
 8003f60:	f8cd a0ac 	str.w	sl, [sp, #172]	; 0xac
 8003f64:	333c      	adds	r3, #60	; 0x3c
 8003f66:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003f6a:	2321      	movs	r3, #33	; 0x21
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 8003f6c:	9806      	ldr	r0, [sp, #24]
 8003f6e:	f8ad 30b0 	strh.w	r3, [sp, #176]	; 0xb0
 8003f72:	4629      	mov	r1, r5
 8003f74:	f00e ffc4 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003f78:	ee1a 0a10 	vmov	r0, s20
 8003f7c:	9906      	ldr	r1, [sp, #24]
 8003f7e:	f00c f997 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003f82:	4620      	mov	r0, r4
 8003f84:	b02f      	add	sp, #188	; 0xbc
 8003f86:	ecbd 8b10 	vpop	{d8-d15}
 8003f8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003f8e:	bf00      	nop

08003f90 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8003f90:	4770      	bx	lr

08003f92 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8003f92:	4770      	bx	lr

08003f94 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8003f94:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8003f98:	6808      	ldr	r0, [r1, #0]
 8003f9a:	6849      	ldr	r1, [r1, #4]
 8003f9c:	c303      	stmia	r3!, {r0, r1}
    }
 8003f9e:	4770      	bx	lr

08003fa0 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8003fa0:	4770      	bx	lr

08003fa2 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8003fa2:	4770      	bx	lr

08003fa4 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8003fa4:	6041      	str	r1, [r0, #4]
    }
 8003fa6:	4770      	bx	lr

08003fa8 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8003fa8:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003faa:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 8003fac:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8003fb0:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003fb4:	8002      	strh	r2, [r0, #0]
 8003fb6:	8042      	strh	r2, [r0, #2]
 8003fb8:	8084      	strh	r4, [r0, #4]
 8003fba:	80c1      	strh	r1, [r0, #6]
        }
 8003fbc:	bd10      	pop	{r4, pc}

08003fbe <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 8003fbe:	4770      	bx	lr

08003fc0 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8003fc0:	4770      	bx	lr
	...

08003fc4 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003fc4:	4b06      	ldr	r3, [pc, #24]	; (8003fe0 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8003fc6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003fca:	2300      	movs	r3, #0
 8003fcc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003fd0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003fd4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003fd8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 8003fdc:	4770      	bx	lr
 8003fde:	bf00      	nop
 8003fe0:	08004381 	.word	0x08004381

08003fe4 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8003fe4:	2301      	movs	r3, #1
 8003fe6:	7203      	strb	r3, [r0, #8]
    }
 8003fe8:	4770      	bx	lr

08003fea <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8003fea:	4770      	bx	lr

08003fec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8003fec:	4770      	bx	lr

08003fee <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 8003fee:	4770      	bx	lr

08003ff0 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8003ff0:	4770      	bx	lr

08003ff2 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8003ff2:	4770      	bx	lr

08003ff4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8003ff4:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8003ff6:	6840      	ldr	r0, [r0, #4]
 8003ff8:	6803      	ldr	r3, [r0, #0]
 8003ffa:	3110      	adds	r1, #16
 8003ffc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003ffe:	4718      	bx	r3

08004000 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8004000:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8004002:	6840      	ldr	r0, [r0, #4]
 8004004:	6803      	ldr	r3, [r0, #0]
 8004006:	3110      	adds	r1, #16
 8004008:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800400a:	4718      	bx	r3

0800400c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 800400c:	4770      	bx	lr

0800400e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 800400e:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8004010:	6840      	ldr	r0, [r0, #4]
 8004012:	6803      	ldr	r3, [r0, #0]
 8004014:	3110      	adds	r1, #16
 8004016:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004018:	4718      	bx	r3

0800401a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 800401a:	4601      	mov	r1, r0
        screenContainer->add(solid);
 800401c:	6840      	ldr	r0, [r0, #4]
 800401e:	6803      	ldr	r3, [r0, #0]
 8004020:	3110      	adds	r1, #16
 8004022:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004024:	4718      	bx	r3

08004026 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8004026:	4770      	bx	lr

08004028 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8004028:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800402a:	68c2      	ldr	r2, [r0, #12]
 800402c:	6841      	ldr	r1, [r0, #4]
 800402e:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8004030:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8004032:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8004036:	07d2      	lsls	r2, r2, #31
 8004038:	bf48      	it	mi
 800403a:	590a      	ldrmi	r2, [r1, r4]
 800403c:	689b      	ldr	r3, [r3, #8]
    }
 800403e:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8004042:	bf48      	it	mi
 8004044:	58d3      	ldrmi	r3, [r2, r3]
 8004046:	4718      	bx	r3

08004048 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8004048:	6843      	ldr	r3, [r0, #4]
 800404a:	b12b      	cbz	r3, 8004058 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 800404c:	6883      	ldr	r3, [r0, #8]
 800404e:	b92b      	cbnz	r3, 800405c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8004050:	68c0      	ldr	r0, [r0, #12]
 8004052:	f000 0001 	and.w	r0, r0, #1
 8004056:	4770      	bx	lr
 8004058:	4618      	mov	r0, r3
 800405a:	4770      	bx	lr
 800405c:	2001      	movs	r0, #1
    }
 800405e:	4770      	bx	lr

08004060 <_ZN8touchgfx12NoTransitionD0Ev>:
 8004060:	b510      	push	{r4, lr}
 8004062:	210c      	movs	r1, #12
 8004064:	4604      	mov	r4, r0
 8004066:	f026 fab0 	bl	802a5ca <_ZdlPvj>
 800406a:	4620      	mov	r0, r4
 800406c:	bd10      	pop	{r4, pc}

0800406e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800406e:	b510      	push	{r4, lr}
 8004070:	2110      	movs	r1, #16
 8004072:	4604      	mov	r4, r0
 8004074:	f026 faa9 	bl	802a5ca <_ZdlPvj>
 8004078:	4620      	mov	r0, r4
 800407a:	bd10      	pop	{r4, pc}

0800407c <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 800407c:	b510      	push	{r4, lr}
 800407e:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8004082:	4604      	mov	r4, r0
 8004084:	f026 faa1 	bl	802a5ca <_ZdlPvj>
 8004088:	4620      	mov	r0, r4
 800408a:	bd10      	pop	{r4, pc}

0800408c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 800408c:	b510      	push	{r4, lr}
 800408e:	2138      	movs	r1, #56	; 0x38
 8004090:	4604      	mov	r4, r0
 8004092:	f026 fa9a 	bl	802a5ca <_ZdlPvj>
 8004096:	4620      	mov	r0, r4
 8004098:	bd10      	pop	{r4, pc}

0800409a <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 800409a:	b510      	push	{r4, lr}
 800409c:	2128      	movs	r1, #40	; 0x28
 800409e:	4604      	mov	r4, r0
 80040a0:	f026 fa93 	bl	802a5ca <_ZdlPvj>
 80040a4:	4620      	mov	r0, r4
 80040a6:	bd10      	pop	{r4, pc}

080040a8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 80040a8:	b510      	push	{r4, lr}
 80040aa:	2138      	movs	r1, #56	; 0x38
 80040ac:	4604      	mov	r4, r0
 80040ae:	f026 fa8c 	bl	802a5ca <_ZdlPvj>
 80040b2:	4620      	mov	r0, r4
 80040b4:	bd10      	pop	{r4, pc}

080040b6 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80040b6:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80040b8:	f012 f9d2 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
 80040bc:	6803      	ldr	r3, [r0, #0]
    }
 80040be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80040c2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80040c4:	4718      	bx	r3
	...

080040c8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80040c8:	b513      	push	{r0, r1, r4, lr}
 80040ca:	4604      	mov	r4, r0
        animationCounter++;
 80040cc:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80040ce:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80040d0:	3001      	adds	r0, #1
 80040d2:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80040d4:	4298      	cmp	r0, r3
        animationCounter++;
 80040d6:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80040d8:	d905      	bls.n	80040e6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 80040da:	2301      	movs	r3, #1
 80040dc:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80040de:	2300      	movs	r3, #0
 80040e0:	72a3      	strb	r3, [r4, #10]
    }
 80040e2:	b002      	add	sp, #8
 80040e4:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80040e6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80040ea:	2100      	movs	r1, #0
 80040ec:	f014 f828 	bl	8018140 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 80040f0:	f010 0201 	ands.w	r2, r0, #1
 80040f4:	b283      	uxth	r3, r0
 80040f6:	d12a      	bne.n	800414e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80040f8:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80040fa:	4a19      	ldr	r2, [pc, #100]	; (8004160 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 80040fc:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8004100:	89e3      	ldrh	r3, [r4, #14]
 8004102:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8004104:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8004108:	82a0      	strh	r0, [r4, #20]
 800410a:	2000      	movs	r0, #0
 800410c:	1ad2      	subs	r2, r2, r3
 800410e:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 8004112:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 8004114:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 8004116:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8004118:	4a12      	ldr	r2, [pc, #72]	; (8004164 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 800411a:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800411e:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8004120:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 8004124:	691b      	ldr	r3, [r3, #16]
 8004126:	f8ad 1000 	strh.w	r1, [sp]
 800412a:	f8ad 2006 	strh.w	r2, [sp, #6]
 800412e:	4669      	mov	r1, sp
 8004130:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8004132:	7aa3      	ldrb	r3, [r4, #10]
 8004134:	2b01      	cmp	r3, #1
 8004136:	d1d4      	bne.n	80040e2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8004138:	4b0b      	ldr	r3, [pc, #44]	; (8004168 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 800413a:	781b      	ldrb	r3, [r3, #0]
 800413c:	2b00      	cmp	r3, #0
 800413e:	d0d0      	beq.n	80040e2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004140:	f012 f98e 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8004144:	b002      	add	sp, #8
 8004146:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800414a:	f012 b98f 	b.w	801646c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800414e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8004152:	2800      	cmp	r0, #0
 8004154:	bfd8      	it	le
 8004156:	460a      	movle	r2, r1
 8004158:	4413      	add	r3, r2
 800415a:	81e3      	strh	r3, [r4, #14]
 800415c:	e7cd      	b.n	80040fa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 800415e:	bf00      	nop
 8004160:	20013810 	.word	0x20013810
 8004164:	20013812 	.word	0x20013812
 8004168:	2001381a 	.word	0x2001381a

0800416c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800416c:	b510      	push	{r4, lr}
 800416e:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8004170:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8004174:	b158      	cbz	r0, 800418e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8004176:	6803      	ldr	r3, [r0, #0]
 8004178:	68db      	ldr	r3, [r3, #12]
 800417a:	4798      	blx	r3
 800417c:	b138      	cbz	r0, 800418e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800417e:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 8004182:	6803      	ldr	r3, [r0, #0]
 8004184:	689b      	ldr	r3, [r3, #8]
 8004186:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8004188:	2300      	movs	r3, #0
 800418a:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 800418e:	bd10      	pop	{r4, pc}

08004190 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 8004190:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004194:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8004198:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800419a:	68a8      	ldr	r0, [r5, #8]
 800419c:	6803      	ldr	r3, [r0, #0]
 800419e:	6a1b      	ldr	r3, [r3, #32]
 80041a0:	4798      	blx	r3
 80041a2:	2897      	cmp	r0, #151	; 0x97
 80041a4:	d805      	bhi.n	80041b2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 80041a6:	4b46      	ldr	r3, [pc, #280]	; (80042c0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 80041a8:	4a46      	ldr	r2, [pc, #280]	; (80042c4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80041aa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80041ac:	4846      	ldr	r0, [pc, #280]	; (80042c8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 80041ae:	f027 f81f 	bl	802b1f0 <__assert_func>
 80041b2:	6868      	ldr	r0, [r5, #4]
 80041b4:	6803      	ldr	r3, [r0, #0]
 80041b6:	6a1b      	ldr	r3, [r3, #32]
 80041b8:	4798      	blx	r3
 80041ba:	280f      	cmp	r0, #15
 80041bc:	d803      	bhi.n	80041c6 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 80041be:	4b43      	ldr	r3, [pc, #268]	; (80042cc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 80041c0:	4a40      	ldr	r2, [pc, #256]	; (80042c4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80041c2:	21a4      	movs	r1, #164	; 0xa4
 80041c4:	e7f2      	b.n	80041ac <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80041c6:	68e8      	ldr	r0, [r5, #12]
 80041c8:	6803      	ldr	r3, [r0, #0]
 80041ca:	6a1b      	ldr	r3, [r3, #32]
 80041cc:	4798      	blx	r3
 80041ce:	280b      	cmp	r0, #11
 80041d0:	d803      	bhi.n	80041da <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 80041d2:	4b3f      	ldr	r3, [pc, #252]	; (80042d0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 80041d4:	4a3b      	ldr	r2, [pc, #236]	; (80042c4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80041d6:	21a5      	movs	r1, #165	; 0xa5
 80041d8:	e7e8      	b.n	80041ac <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 80041da:	f012 f941 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80041de:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80042d8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80041e2:	3004      	adds	r0, #4
 80041e4:	f012 f9a2 	bl	801652c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80041e8:	f8d9 0000 	ldr.w	r0, [r9]
 80041ec:	b110      	cbz	r0, 80041f4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80041ee:	6803      	ldr	r3, [r0, #0]
 80041f0:	68db      	ldr	r3, [r3, #12]
 80041f2:	4798      	blx	r3
    if (*currentTrans)
 80041f4:	f8d9 0000 	ldr.w	r0, [r9]
 80041f8:	b110      	cbz	r0, 8004200 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80041fa:	6803      	ldr	r3, [r0, #0]
 80041fc:	681b      	ldr	r3, [r3, #0]
 80041fe:	4798      	blx	r3
    if (*currentScreen)
 8004200:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80042dc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8004204:	f8d8 0000 	ldr.w	r0, [r8]
 8004208:	b110      	cbz	r0, 8004210 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800420a:	6803      	ldr	r3, [r0, #0]
 800420c:	695b      	ldr	r3, [r3, #20]
 800420e:	4798      	blx	r3
    if (*currentPresenter)
 8004210:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004214:	b110      	cbz	r0, 800421c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8004216:	6803      	ldr	r3, [r0, #0]
 8004218:	685b      	ldr	r3, [r3, #4]
 800421a:	4798      	blx	r3
    if (*currentScreen)
 800421c:	f8d8 0000 	ldr.w	r0, [r8]
 8004220:	b110      	cbz	r0, 8004228 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8004222:	6803      	ldr	r3, [r0, #0]
 8004224:	681b      	ldr	r3, [r3, #0]
 8004226:	4798      	blx	r3
    if (*currentPresenter)
 8004228:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800422c:	b110      	cbz	r0, 8004234 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800422e:	6803      	ldr	r3, [r0, #0]
 8004230:	689b      	ldr	r3, [r3, #8]
 8004232:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004234:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8004236:	6803      	ldr	r3, [r0, #0]
 8004238:	2100      	movs	r1, #0
 800423a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800423c:	4798      	blx	r3
        : screenContainer(0), done(false)
 800423e:	f04f 0b00 	mov.w	fp, #0
 8004242:	4b24      	ldr	r3, [pc, #144]	; (80042d4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 8004244:	6003      	str	r3, [r0, #0]
 8004246:	4604      	mov	r4, r0
 8004248:	f8c0 b004 	str.w	fp, [r0, #4]
 800424c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004250:	68a8      	ldr	r0, [r5, #8]
 8004252:	6803      	ldr	r3, [r0, #0]
 8004254:	4659      	mov	r1, fp
 8004256:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004258:	4798      	blx	r3
 800425a:	4606      	mov	r6, r0
 800425c:	f004 fea4 	bl	8008fa8 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004260:	6868      	ldr	r0, [r5, #4]
 8004262:	6803      	ldr	r3, [r0, #0]
 8004264:	4659      	mov	r1, fp
 8004266:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004268:	4798      	blx	r3
 800426a:	4631      	mov	r1, r6
 800426c:	4605      	mov	r5, r0
 800426e:	f004 fe77 	bl	8008f60 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 8004272:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8004276:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800427a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800427e:	b1e5      	cbz	r5, 80042ba <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 8004280:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8004282:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004286:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8004288:	f8c5 a008 	str.w	sl, [r5, #8]
 800428c:	4630      	mov	r0, r6
 800428e:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8004290:	63f5      	str	r5, [r6, #60]	; 0x3c
 8004292:	4798      	blx	r3
    newPresenter->activate();
 8004294:	682b      	ldr	r3, [r5, #0]
 8004296:	4628      	mov	r0, r5
 8004298:	681b      	ldr	r3, [r3, #0]
 800429a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800429c:	4621      	mov	r1, r4
 800429e:	4630      	mov	r0, r6
 80042a0:	f013 ff0a 	bl	80180b8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80042a4:	6823      	ldr	r3, [r4, #0]
 80042a6:	4620      	mov	r0, r4
 80042a8:	691b      	ldr	r3, [r3, #16]
 80042aa:	4798      	blx	r3
    newTransition->invalidate();
 80042ac:	6823      	ldr	r3, [r4, #0]
 80042ae:	695b      	ldr	r3, [r3, #20]
 80042b0:	4620      	mov	r0, r4
}
 80042b2:	b001      	add	sp, #4
 80042b4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80042b8:	4718      	bx	r3
    model->bind(newPresenter);
 80042ba:	462b      	mov	r3, r5
 80042bc:	e7e1      	b.n	8004282 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 80042be:	bf00      	nop
 80042c0:	0802cefc 	.word	0x0802cefc
 80042c4:	0802cf8a 	.word	0x0802cf8a
 80042c8:	0802d098 	.word	0x0802d098
 80042cc:	0802d0df 	.word	0x0802d0df
 80042d0:	0802d182 	.word	0x0802d182
 80042d4:	0802e23c 	.word	0x0802e23c
 80042d8:	20013864 	.word	0x20013864
 80042dc:	20013860 	.word	0x20013860

080042e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80042e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80042e2:	4604      	mov	r4, r0
        animationCounter++;
 80042e4:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80042e6:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80042e8:	3001      	adds	r0, #1
 80042ea:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80042ec:	4298      	cmp	r0, r3
        animationCounter++;
 80042ee:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80042f0:	d905      	bls.n	80042fe <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 80042f2:	2301      	movs	r3, #1
 80042f4:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80042f6:	2300      	movs	r3, #0
 80042f8:	72a3      	strb	r3, [r4, #10]
    }
 80042fa:	b003      	add	sp, #12
 80042fc:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80042fe:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004302:	2100      	movs	r1, #0
 8004304:	f013 ff1c 	bl	8018140 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004308:	f010 0201 	ands.w	r2, r0, #1
 800430c:	b283      	uxth	r3, r0
 800430e:	d128      	bne.n	8004362 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004310:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004312:	4b18      	ldr	r3, [pc, #96]	; (8004374 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8004314:	4818      	ldr	r0, [pc, #96]	; (8004378 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004316:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8004318:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800431a:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800431c:	f9b0 0000 	ldrsh.w	r0, [r0]
 8004320:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004324:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8004326:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8004328:	442b      	add	r3, r5
 800432a:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800432c:	b212      	sxth	r2, r2
 800432e:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8004332:	6803      	ldr	r3, [r0, #0]
 8004334:	8322      	strh	r2, [r4, #24]
 8004336:	f8ad 2000 	strh.w	r2, [sp]
 800433a:	2200      	movs	r2, #0
 800433c:	691b      	ldr	r3, [r3, #16]
 800433e:	f8ad 2002 	strh.w	r2, [sp, #2]
 8004342:	4669      	mov	r1, sp
 8004344:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8004346:	7aa3      	ldrb	r3, [r4, #10]
 8004348:	2b01      	cmp	r3, #1
 800434a:	d1d6      	bne.n	80042fa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 800434c:	4b0b      	ldr	r3, [pc, #44]	; (800437c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 800434e:	781b      	ldrb	r3, [r3, #0]
 8004350:	2b00      	cmp	r3, #0
 8004352:	d0d2      	beq.n	80042fa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004354:	f012 f884 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8004358:	b003      	add	sp, #12
 800435a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800435e:	f012 b885 	b.w	801646c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8004362:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8004366:	2800      	cmp	r0, #0
 8004368:	bfd8      	it	le
 800436a:	460a      	movle	r2, r1
 800436c:	4413      	add	r3, r2
 800436e:	81e3      	strh	r3, [r4, #14]
 8004370:	e7cf      	b.n	8004312 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 8004372:	bf00      	nop
 8004374:	20013810 	.word	0x20013810
 8004378:	20013812 	.word	0x20013812
 800437c:	2001381a 	.word	0x2001381a

08004380 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 8004380:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004384:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8004388:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800438a:	68a8      	ldr	r0, [r5, #8]
 800438c:	6803      	ldr	r3, [r0, #0]
 800438e:	6a1b      	ldr	r3, [r3, #32]
 8004390:	4798      	blx	r3
 8004392:	f241 137b 	movw	r3, #4475	; 0x117b
 8004396:	4298      	cmp	r0, r3
 8004398:	d805      	bhi.n	80043a6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 800439a:	4b46      	ldr	r3, [pc, #280]	; (80044b4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 800439c:	4a46      	ldr	r2, [pc, #280]	; (80044b8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 800439e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80043a0:	4846      	ldr	r0, [pc, #280]	; (80044bc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 80043a2:	f026 ff25 	bl	802b1f0 <__assert_func>
 80043a6:	6868      	ldr	r0, [r5, #4]
 80043a8:	6803      	ldr	r3, [r0, #0]
 80043aa:	6a1b      	ldr	r3, [r3, #32]
 80043ac:	4798      	blx	r3
 80043ae:	280f      	cmp	r0, #15
 80043b0:	d803      	bhi.n	80043ba <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 80043b2:	4b43      	ldr	r3, [pc, #268]	; (80044c0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 80043b4:	4a40      	ldr	r2, [pc, #256]	; (80044b8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80043b6:	21a4      	movs	r1, #164	; 0xa4
 80043b8:	e7f2      	b.n	80043a0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80043ba:	68e8      	ldr	r0, [r5, #12]
 80043bc:	6803      	ldr	r3, [r0, #0]
 80043be:	6a1b      	ldr	r3, [r3, #32]
 80043c0:	4798      	blx	r3
 80043c2:	280b      	cmp	r0, #11
 80043c4:	d803      	bhi.n	80043ce <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 80043c6:	4b3f      	ldr	r3, [pc, #252]	; (80044c4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 80043c8:	4a3b      	ldr	r2, [pc, #236]	; (80044b8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80043ca:	21a5      	movs	r1, #165	; 0xa5
 80043cc:	e7e8      	b.n	80043a0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80043ce:	f012 f847 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80043d2:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80044cc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 80043d6:	3004      	adds	r0, #4
 80043d8:	f012 f8a8 	bl	801652c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80043dc:	f8d9 0000 	ldr.w	r0, [r9]
 80043e0:	b110      	cbz	r0, 80043e8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 80043e2:	6803      	ldr	r3, [r0, #0]
 80043e4:	68db      	ldr	r3, [r3, #12]
 80043e6:	4798      	blx	r3
    if (*currentTrans)
 80043e8:	f8d9 0000 	ldr.w	r0, [r9]
 80043ec:	b110      	cbz	r0, 80043f4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 80043ee:	6803      	ldr	r3, [r0, #0]
 80043f0:	681b      	ldr	r3, [r3, #0]
 80043f2:	4798      	blx	r3
    if (*currentScreen)
 80043f4:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80044d0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 80043f8:	f8d8 0000 	ldr.w	r0, [r8]
 80043fc:	b110      	cbz	r0, 8004404 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80043fe:	6803      	ldr	r3, [r0, #0]
 8004400:	695b      	ldr	r3, [r3, #20]
 8004402:	4798      	blx	r3
    if (*currentPresenter)
 8004404:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004408:	b110      	cbz	r0, 8004410 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 800440a:	6803      	ldr	r3, [r0, #0]
 800440c:	685b      	ldr	r3, [r3, #4]
 800440e:	4798      	blx	r3
    if (*currentScreen)
 8004410:	f8d8 0000 	ldr.w	r0, [r8]
 8004414:	b110      	cbz	r0, 800441c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004416:	6803      	ldr	r3, [r0, #0]
 8004418:	681b      	ldr	r3, [r3, #0]
 800441a:	4798      	blx	r3
    if (*currentPresenter)
 800441c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004420:	b110      	cbz	r0, 8004428 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004422:	6803      	ldr	r3, [r0, #0]
 8004424:	689b      	ldr	r3, [r3, #8]
 8004426:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004428:	68e8      	ldr	r0, [r5, #12]
 800442a:	6803      	ldr	r3, [r0, #0]
 800442c:	2100      	movs	r1, #0
 800442e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004430:	4798      	blx	r3
 8004432:	f04f 0b00 	mov.w	fp, #0
 8004436:	4b24      	ldr	r3, [pc, #144]	; (80044c8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 8004438:	6003      	str	r3, [r0, #0]
 800443a:	4604      	mov	r4, r0
 800443c:	f8c0 b004 	str.w	fp, [r0, #4]
 8004440:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004444:	68a8      	ldr	r0, [r5, #8]
 8004446:	6803      	ldr	r3, [r0, #0]
 8004448:	4659      	mov	r1, fp
 800444a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800444c:	4798      	blx	r3
 800444e:	4606      	mov	r6, r0
 8004450:	f004 fa4e 	bl	80088f0 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004454:	6868      	ldr	r0, [r5, #4]
 8004456:	6803      	ldr	r3, [r0, #0]
 8004458:	4659      	mov	r1, fp
 800445a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800445c:	4798      	blx	r3
 800445e:	4631      	mov	r1, r6
 8004460:	4605      	mov	r5, r0
 8004462:	f004 fa1f 	bl	80088a4 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8004466:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800446a:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800446e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004472:	b1e5      	cbz	r5, 80044ae <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 8004474:	1d2b      	adds	r3, r5, #4
 8004476:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800447a:	6833      	ldr	r3, [r6, #0]
 800447c:	f8c5 a008 	str.w	sl, [r5, #8]
 8004480:	4630      	mov	r0, r6
 8004482:	68db      	ldr	r3, [r3, #12]
 8004484:	63f5      	str	r5, [r6, #60]	; 0x3c
 8004486:	4798      	blx	r3
    newPresenter->activate();
 8004488:	682b      	ldr	r3, [r5, #0]
 800448a:	4628      	mov	r0, r5
 800448c:	681b      	ldr	r3, [r3, #0]
 800448e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004490:	4621      	mov	r1, r4
 8004492:	4630      	mov	r0, r6
 8004494:	f013 fe10 	bl	80180b8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004498:	6823      	ldr	r3, [r4, #0]
 800449a:	4620      	mov	r0, r4
 800449c:	691b      	ldr	r3, [r3, #16]
 800449e:	4798      	blx	r3
    newTransition->invalidate();
 80044a0:	6823      	ldr	r3, [r4, #0]
 80044a2:	695b      	ldr	r3, [r3, #20]
 80044a4:	4620      	mov	r0, r4
}
 80044a6:	b001      	add	sp, #4
 80044a8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80044ac:	4718      	bx	r3
    model->bind(newPresenter);
 80044ae:	462b      	mov	r3, r5
 80044b0:	e7e1      	b.n	8004476 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 80044b2:	bf00      	nop
 80044b4:	0802cefc 	.word	0x0802cefc
 80044b8:	0802d225 	.word	0x0802d225
 80044bc:	0802d098 	.word	0x0802d098
 80044c0:	0802d0df 	.word	0x0802d0df
 80044c4:	0802d182 	.word	0x0802d182
 80044c8:	0802e23c 	.word	0x0802e23c
 80044cc:	20013864 	.word	0x20013864
 80044d0:	20013860 	.word	0x20013860

080044d4 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80044d4:	4b04      	ldr	r3, [pc, #16]	; (80044e8 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80044d6:	681b      	ldr	r3, [r3, #0]
 80044d8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80044dc:	b10a      	cbz	r2, 80044e2 <_ZN8touchgfx3HAL3lcdEv+0xe>
 80044de:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80044e0:	b900      	cbnz	r0, 80044e4 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80044e2:	6898      	ldr	r0, [r3, #8]
    }
 80044e4:	4770      	bx	lr
 80044e6:	bf00      	nop
 80044e8:	2001381c 	.word	0x2001381c

080044ec <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80044ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80044ee:	4604      	mov	r4, r0
 80044f0:	4617      	mov	r7, r2
 80044f2:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80044f4:	f012 f8e8 	bl	80166c8 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80044f8:	4b10      	ldr	r3, [pc, #64]	; (800453c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 80044fa:	601c      	str	r4, [r3, #0]
      model(m)
 80044fc:	4b10      	ldr	r3, [pc, #64]	; (8004540 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80044fe:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8004500:	4b10      	ldr	r3, [pc, #64]	; (8004544 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8004502:	2500      	movs	r5, #0
 8004504:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8004508:	4b0f      	ldr	r3, [pc, #60]	; (8004548 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 800450a:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 800450e:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8004510:	6803      	ldr	r3, [r0, #0]
 8004512:	2101      	movs	r1, #1
 8004514:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8004516:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 800451a:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800451e:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8004520:	4628      	mov	r0, r5
 8004522:	f004 f819 	bl	8008558 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8004526:	f7ff ffd5 	bl	80044d4 <_ZN8touchgfx3HAL3lcdEv>
 800452a:	f01b fcd0 	bl	801fece <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800452e:	f7ff ffd1 	bl	80044d4 <_ZN8touchgfx3HAL3lcdEv>
 8004532:	f01b fd47 	bl	801ffc4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8004536:	4620      	mov	r0, r4
 8004538:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800453a:	bf00      	nop
 800453c:	20013870 	.word	0x20013870
 8004540:	0802e1e8 	.word	0x0802e1e8
 8004544:	0802e1d0 	.word	0x0802e1d0
 8004548:	2001381c 	.word	0x2001381c

0800454c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800454c:	4b06      	ldr	r3, [pc, #24]	; (8004568 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 800454e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004552:	2300      	movs	r3, #0
 8004554:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004558:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800455c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004560:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004564:	4770      	bx	lr
 8004566:	bf00      	nop
 8004568:	08004381 	.word	0x08004381

0800456c <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 800456c:	4b06      	ldr	r3, [pc, #24]	; (8004588 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 800456e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004572:	2300      	movs	r3, #0
 8004574:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004578:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800457c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004580:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004584:	4770      	bx	lr
 8004586:	bf00      	nop
 8004588:	080049f1 	.word	0x080049f1

0800458c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 800458c:	4b06      	ldr	r3, [pc, #24]	; (80045a8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 800458e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004592:	2300      	movs	r3, #0
 8004594:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004598:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800459c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80045a0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80045a4:	4770      	bx	lr
 80045a6:	bf00      	nop
 80045a8:	08005595 	.word	0x08005595

080045ac <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 80045ac:	4b06      	ldr	r3, [pc, #24]	; (80045c8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 80045ae:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80045b2:	2300      	movs	r3, #0
 80045b4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80045b8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80045bc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80045c0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80045c4:	4770      	bx	lr
 80045c6:	bf00      	nop
 80045c8:	080048b1 	.word	0x080048b1

080045cc <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 80045cc:	4b06      	ldr	r3, [pc, #24]	; (80045e8 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 80045ce:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80045d2:	2300      	movs	r3, #0
 80045d4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80045d8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80045dc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80045e0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80045e4:	4770      	bx	lr
 80045e6:	bf00      	nop
 80045e8:	08005455 	.word	0x08005455

080045ec <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 80045ec:	4b06      	ldr	r3, [pc, #24]	; (8004608 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 80045ee:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80045f2:	2300      	movs	r3, #0
 80045f4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80045f8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80045fc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004600:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004604:	4770      	bx	lr
 8004606:	bf00      	nop
 8004608:	08005315 	.word	0x08005315

0800460c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 800460c:	4b06      	ldr	r3, [pc, #24]	; (8004628 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 800460e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004612:	2300      	movs	r3, #0
 8004614:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004618:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800461c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004620:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004624:	4770      	bx	lr
 8004626:	bf00      	nop
 8004628:	080051d5 	.word	0x080051d5

0800462c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 800462c:	4b06      	ldr	r3, [pc, #24]	; (8004648 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 800462e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004632:	2300      	movs	r3, #0
 8004634:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004638:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800463c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004640:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004644:	4770      	bx	lr
 8004646:	bf00      	nop
 8004648:	08005095 	.word	0x08005095

0800464c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 800464c:	4b06      	ldr	r3, [pc, #24]	; (8004668 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 800464e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004652:	2300      	movs	r3, #0
 8004654:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004658:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800465c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004660:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004664:	4770      	bx	lr
 8004666:	bf00      	nop
 8004668:	08004771 	.word	0x08004771

0800466c <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 800466c:	4b06      	ldr	r3, [pc, #24]	; (8004688 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 800466e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004672:	2300      	movs	r3, #0
 8004674:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004678:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800467c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004680:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004684:	4770      	bx	lr
 8004686:	bf00      	nop
 8004688:	08004f55 	.word	0x08004f55

0800468c <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 800468c:	4b06      	ldr	r3, [pc, #24]	; (80046a8 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 800468e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004692:	2300      	movs	r3, #0
 8004694:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004698:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800469c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80046a0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80046a4:	4770      	bx	lr
 80046a6:	bf00      	nop
 80046a8:	08004e15 	.word	0x08004e15

080046ac <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 80046ac:	4b06      	ldr	r3, [pc, #24]	; (80046c8 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 80046ae:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80046b2:	2300      	movs	r3, #0
 80046b4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80046b8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80046bc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80046c0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80046c4:	4770      	bx	lr
 80046c6:	bf00      	nop
 80046c8:	08004cd5 	.word	0x08004cd5

080046cc <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 80046cc:	4b06      	ldr	r3, [pc, #24]	; (80046e8 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 80046ce:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80046d2:	2300      	movs	r3, #0
 80046d4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80046d8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80046dc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80046e0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80046e4:	4770      	bx	lr
 80046e6:	bf00      	nop
 80046e8:	08004b95 	.word	0x08004b95

080046ec <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 80046ec:	4b06      	ldr	r3, [pc, #24]	; (8004708 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 80046ee:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80046f2:	2300      	movs	r3, #0
 80046f4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80046f8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80046fc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004700:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004704:	4770      	bx	lr
 8004706:	bf00      	nop
 8004708:	08004191 	.word	0x08004191

0800470c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 800470c:	6803      	ldr	r3, [r0, #0]
 800470e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004710:	4718      	bx	r3
	...

08004714 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8004714:	4b12      	ldr	r3, [pc, #72]	; (8004760 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004716:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004718:	6003      	str	r3, [r0, #0]
 800471a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800471e:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004720:	4b10      	ldr	r3, [pc, #64]	; (8004764 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004722:	7241      	strb	r1, [r0, #9]
 8004724:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004726:	4910      	ldr	r1, [pc, #64]	; (8004768 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004728:	4b10      	ldr	r3, [pc, #64]	; (800476c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800472a:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 800472e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004732:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004734:	2200      	movs	r2, #0
 8004736:	6042      	str	r2, [r0, #4]
 8004738:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 800473a:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 800473c:	81c2      	strh	r2, [r0, #14]
          solid()
 800473e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004742:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004746:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 800474a:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 800474e:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004750:	9100      	str	r1, [sp, #0]
 8004752:	3010      	adds	r0, #16
 8004754:	4611      	mov	r1, r2
 8004756:	f7fe f8f4 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800475a:	4620      	mov	r0, r4
 800475c:	b002      	add	sp, #8
 800475e:	bd10      	pop	{r4, pc}
 8004760:	0802e284 	.word	0x0802e284
 8004764:	0802e168 	.word	0x0802e168
 8004768:	20013812 	.word	0x20013812
 800476c:	20013810 	.word	0x20013810

08004770 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8004770:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004774:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004778:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800477a:	68a0      	ldr	r0, [r4, #8]
 800477c:	6803      	ldr	r3, [r0, #0]
 800477e:	6a1b      	ldr	r3, [r3, #32]
 8004780:	4798      	blx	r3
 8004782:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004786:	d205      	bcs.n	8004794 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8004788:	4b42      	ldr	r3, [pc, #264]	; (8004894 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 800478a:	4a43      	ldr	r2, [pc, #268]	; (8004898 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 800478c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800478e:	4843      	ldr	r0, [pc, #268]	; (800489c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8004790:	f026 fd2e 	bl	802b1f0 <__assert_func>
 8004794:	6860      	ldr	r0, [r4, #4]
 8004796:	6803      	ldr	r3, [r0, #0]
 8004798:	6a1b      	ldr	r3, [r3, #32]
 800479a:	4798      	blx	r3
 800479c:	280f      	cmp	r0, #15
 800479e:	d803      	bhi.n	80047a8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 80047a0:	4b3f      	ldr	r3, [pc, #252]	; (80048a0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 80047a2:	4a3d      	ldr	r2, [pc, #244]	; (8004898 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 80047a4:	21a4      	movs	r1, #164	; 0xa4
 80047a6:	e7f2      	b.n	800478e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80047a8:	68e0      	ldr	r0, [r4, #12]
 80047aa:	6803      	ldr	r3, [r0, #0]
 80047ac:	6a1b      	ldr	r3, [r3, #32]
 80047ae:	4798      	blx	r3
 80047b0:	2837      	cmp	r0, #55	; 0x37
 80047b2:	d803      	bhi.n	80047bc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 80047b4:	4b3b      	ldr	r3, [pc, #236]	; (80048a4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 80047b6:	4a38      	ldr	r2, [pc, #224]	; (8004898 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 80047b8:	21a5      	movs	r1, #165	; 0xa5
 80047ba:	e7e8      	b.n	800478e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80047bc:	f011 fe50 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80047c0:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80048a8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 80047c4:	3004      	adds	r0, #4
 80047c6:	f011 feb1 	bl	801652c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80047ca:	f8d9 0000 	ldr.w	r0, [r9]
 80047ce:	b110      	cbz	r0, 80047d6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 80047d0:	6803      	ldr	r3, [r0, #0]
 80047d2:	68db      	ldr	r3, [r3, #12]
 80047d4:	4798      	blx	r3
    if (*currentTrans)
 80047d6:	f8d9 0000 	ldr.w	r0, [r9]
 80047da:	b110      	cbz	r0, 80047e2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 80047dc:	6803      	ldr	r3, [r0, #0]
 80047de:	681b      	ldr	r3, [r3, #0]
 80047e0:	4798      	blx	r3
    if (*currentScreen)
 80047e2:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80048ac <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 80047e6:	f8d8 0000 	ldr.w	r0, [r8]
 80047ea:	b110      	cbz	r0, 80047f2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80047ec:	6803      	ldr	r3, [r0, #0]
 80047ee:	695b      	ldr	r3, [r3, #20]
 80047f0:	4798      	blx	r3
    if (*currentPresenter)
 80047f2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80047f6:	b110      	cbz	r0, 80047fe <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80047f8:	6803      	ldr	r3, [r0, #0]
 80047fa:	685b      	ldr	r3, [r3, #4]
 80047fc:	4798      	blx	r3
    if (*currentScreen)
 80047fe:	f8d8 0000 	ldr.w	r0, [r8]
 8004802:	b110      	cbz	r0, 800480a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004804:	6803      	ldr	r3, [r0, #0]
 8004806:	681b      	ldr	r3, [r3, #0]
 8004808:	4798      	blx	r3
    if (*currentPresenter)
 800480a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800480e:	b110      	cbz	r0, 8004816 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004810:	6803      	ldr	r3, [r0, #0]
 8004812:	689b      	ldr	r3, [r3, #8]
 8004814:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004816:	68e0      	ldr	r0, [r4, #12]
 8004818:	2100      	movs	r1, #0
 800481a:	f7ff ff77 	bl	800470c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 800481e:	2114      	movs	r1, #20
 8004820:	4605      	mov	r5, r0
 8004822:	f7ff ff77 	bl	8004714 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004826:	68a0      	ldr	r0, [r4, #8]
 8004828:	6803      	ldr	r3, [r0, #0]
 800482a:	2100      	movs	r1, #0
 800482c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800482e:	4798      	blx	r3
 8004830:	4606      	mov	r6, r0
 8004832:	f004 f91d 	bl	8008a70 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004836:	6860      	ldr	r0, [r4, #4]
 8004838:	6803      	ldr	r3, [r0, #0]
 800483a:	2100      	movs	r1, #0
 800483c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800483e:	4798      	blx	r3
 8004840:	4631      	mov	r1, r6
 8004842:	4604      	mov	r4, r0
 8004844:	f004 f8ee 	bl	8008a24 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8004848:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800484c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004850:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004854:	b1dc      	cbz	r4, 800488e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8004856:	1d23      	adds	r3, r4, #4
 8004858:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800485c:	6833      	ldr	r3, [r6, #0]
 800485e:	f8c4 a008 	str.w	sl, [r4, #8]
 8004862:	4630      	mov	r0, r6
 8004864:	68db      	ldr	r3, [r3, #12]
 8004866:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004868:	4798      	blx	r3
    newPresenter->activate();
 800486a:	6823      	ldr	r3, [r4, #0]
 800486c:	4620      	mov	r0, r4
 800486e:	681b      	ldr	r3, [r3, #0]
 8004870:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004872:	4629      	mov	r1, r5
 8004874:	4630      	mov	r0, r6
 8004876:	f013 fc1f 	bl	80180b8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800487a:	682b      	ldr	r3, [r5, #0]
 800487c:	4628      	mov	r0, r5
 800487e:	691b      	ldr	r3, [r3, #16]
 8004880:	4798      	blx	r3
    newTransition->invalidate();
 8004882:	682b      	ldr	r3, [r5, #0]
 8004884:	4628      	mov	r0, r5
 8004886:	695b      	ldr	r3, [r3, #20]
}
 8004888:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800488c:	4718      	bx	r3
    model->bind(newPresenter);
 800488e:	4623      	mov	r3, r4
 8004890:	e7e2      	b.n	8004858 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 8004892:	bf00      	nop
 8004894:	0802cefc 	.word	0x0802cefc
 8004898:	0802d32d 	.word	0x0802d32d
 800489c:	0802d098 	.word	0x0802d098
 80048a0:	0802d0df 	.word	0x0802d0df
 80048a4:	0802d182 	.word	0x0802d182
 80048a8:	20013864 	.word	0x20013864
 80048ac:	20013860 	.word	0x20013860

080048b0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 80048b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80048b4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80048b8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80048ba:	68a0      	ldr	r0, [r4, #8]
 80048bc:	6803      	ldr	r3, [r0, #0]
 80048be:	6a1b      	ldr	r3, [r3, #32]
 80048c0:	4798      	blx	r3
 80048c2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80048c6:	d205      	bcs.n	80048d4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 80048c8:	4b42      	ldr	r3, [pc, #264]	; (80049d4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 80048ca:	4a43      	ldr	r2, [pc, #268]	; (80049d8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80048cc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80048ce:	4843      	ldr	r0, [pc, #268]	; (80049dc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 80048d0:	f026 fc8e 	bl	802b1f0 <__assert_func>
 80048d4:	6860      	ldr	r0, [r4, #4]
 80048d6:	6803      	ldr	r3, [r0, #0]
 80048d8:	6a1b      	ldr	r3, [r3, #32]
 80048da:	4798      	blx	r3
 80048dc:	280f      	cmp	r0, #15
 80048de:	d803      	bhi.n	80048e8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 80048e0:	4b3f      	ldr	r3, [pc, #252]	; (80049e0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 80048e2:	4a3d      	ldr	r2, [pc, #244]	; (80049d8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80048e4:	21a4      	movs	r1, #164	; 0xa4
 80048e6:	e7f2      	b.n	80048ce <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80048e8:	68e0      	ldr	r0, [r4, #12]
 80048ea:	6803      	ldr	r3, [r0, #0]
 80048ec:	6a1b      	ldr	r3, [r3, #32]
 80048ee:	4798      	blx	r3
 80048f0:	2837      	cmp	r0, #55	; 0x37
 80048f2:	d803      	bhi.n	80048fc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 80048f4:	4b3b      	ldr	r3, [pc, #236]	; (80049e4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 80048f6:	4a38      	ldr	r2, [pc, #224]	; (80049d8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80048f8:	21a5      	movs	r1, #165	; 0xa5
 80048fa:	e7e8      	b.n	80048ce <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80048fc:	f011 fdb0 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004900:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80049e8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8004904:	3004      	adds	r0, #4
 8004906:	f011 fe11 	bl	801652c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800490a:	f8d9 0000 	ldr.w	r0, [r9]
 800490e:	b110      	cbz	r0, 8004916 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004910:	6803      	ldr	r3, [r0, #0]
 8004912:	68db      	ldr	r3, [r3, #12]
 8004914:	4798      	blx	r3
    if (*currentTrans)
 8004916:	f8d9 0000 	ldr.w	r0, [r9]
 800491a:	b110      	cbz	r0, 8004922 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 800491c:	6803      	ldr	r3, [r0, #0]
 800491e:	681b      	ldr	r3, [r3, #0]
 8004920:	4798      	blx	r3
    if (*currentScreen)
 8004922:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80049ec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8004926:	f8d8 0000 	ldr.w	r0, [r8]
 800492a:	b110      	cbz	r0, 8004932 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800492c:	6803      	ldr	r3, [r0, #0]
 800492e:	695b      	ldr	r3, [r3, #20]
 8004930:	4798      	blx	r3
    if (*currentPresenter)
 8004932:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004936:	b110      	cbz	r0, 800493e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004938:	6803      	ldr	r3, [r0, #0]
 800493a:	685b      	ldr	r3, [r3, #4]
 800493c:	4798      	blx	r3
    if (*currentScreen)
 800493e:	f8d8 0000 	ldr.w	r0, [r8]
 8004942:	b110      	cbz	r0, 800494a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004944:	6803      	ldr	r3, [r0, #0]
 8004946:	681b      	ldr	r3, [r3, #0]
 8004948:	4798      	blx	r3
    if (*currentPresenter)
 800494a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800494e:	b110      	cbz	r0, 8004956 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004950:	6803      	ldr	r3, [r0, #0]
 8004952:	689b      	ldr	r3, [r3, #8]
 8004954:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004956:	68e0      	ldr	r0, [r4, #12]
 8004958:	2100      	movs	r1, #0
 800495a:	f7ff fed7 	bl	800470c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 800495e:	2114      	movs	r1, #20
 8004960:	4605      	mov	r5, r0
 8004962:	f7ff fed7 	bl	8004714 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004966:	68a0      	ldr	r0, [r4, #8]
 8004968:	6803      	ldr	r3, [r0, #0]
 800496a:	2100      	movs	r1, #0
 800496c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800496e:	4798      	blx	r3
 8004970:	4606      	mov	r6, r0
 8004972:	f004 f81d 	bl	80089b0 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004976:	6860      	ldr	r0, [r4, #4]
 8004978:	6803      	ldr	r3, [r0, #0]
 800497a:	2100      	movs	r1, #0
 800497c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800497e:	4798      	blx	r3
 8004980:	4631      	mov	r1, r6
 8004982:	4604      	mov	r4, r0
 8004984:	f003 ffee 	bl	8008964 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004988:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800498c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004990:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004994:	b1dc      	cbz	r4, 80049ce <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8004996:	1d23      	adds	r3, r4, #4
 8004998:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800499c:	6833      	ldr	r3, [r6, #0]
 800499e:	f8c4 a008 	str.w	sl, [r4, #8]
 80049a2:	4630      	mov	r0, r6
 80049a4:	68db      	ldr	r3, [r3, #12]
 80049a6:	63f4      	str	r4, [r6, #60]	; 0x3c
 80049a8:	4798      	blx	r3
    newPresenter->activate();
 80049aa:	6823      	ldr	r3, [r4, #0]
 80049ac:	4620      	mov	r0, r4
 80049ae:	681b      	ldr	r3, [r3, #0]
 80049b0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80049b2:	4629      	mov	r1, r5
 80049b4:	4630      	mov	r0, r6
 80049b6:	f013 fb7f 	bl	80180b8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80049ba:	682b      	ldr	r3, [r5, #0]
 80049bc:	4628      	mov	r0, r5
 80049be:	691b      	ldr	r3, [r3, #16]
 80049c0:	4798      	blx	r3
    newTransition->invalidate();
 80049c2:	682b      	ldr	r3, [r5, #0]
 80049c4:	4628      	mov	r0, r5
 80049c6:	695b      	ldr	r3, [r3, #20]
}
 80049c8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80049cc:	4718      	bx	r3
    model->bind(newPresenter);
 80049ce:	4623      	mov	r3, r4
 80049d0:	e7e2      	b.n	8004998 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 80049d2:	bf00      	nop
 80049d4:	0802cefc 	.word	0x0802cefc
 80049d8:	0802d45d 	.word	0x0802d45d
 80049dc:	0802d098 	.word	0x0802d098
 80049e0:	0802d0df 	.word	0x0802d0df
 80049e4:	0802d182 	.word	0x0802d182
 80049e8:	20013864 	.word	0x20013864
 80049ec:	20013860 	.word	0x20013860

080049f0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 80049f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80049f4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80049f8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80049fa:	68a0      	ldr	r0, [r4, #8]
 80049fc:	6803      	ldr	r3, [r0, #0]
 80049fe:	6a1b      	ldr	r3, [r3, #32]
 8004a00:	4798      	blx	r3
 8004a02:	f241 137b 	movw	r3, #4475	; 0x117b
 8004a06:	4298      	cmp	r0, r3
 8004a08:	d805      	bhi.n	8004a16 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8004a0a:	4b42      	ldr	r3, [pc, #264]	; (8004b14 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8004a0c:	4a42      	ldr	r2, [pc, #264]	; (8004b18 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004a0e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004a10:	4842      	ldr	r0, [pc, #264]	; (8004b1c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8004a12:	f026 fbed 	bl	802b1f0 <__assert_func>
 8004a16:	6860      	ldr	r0, [r4, #4]
 8004a18:	6803      	ldr	r3, [r0, #0]
 8004a1a:	6a1b      	ldr	r3, [r3, #32]
 8004a1c:	4798      	blx	r3
 8004a1e:	280f      	cmp	r0, #15
 8004a20:	d803      	bhi.n	8004a2a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8004a22:	4b3f      	ldr	r3, [pc, #252]	; (8004b20 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8004a24:	4a3c      	ldr	r2, [pc, #240]	; (8004b18 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004a26:	21a4      	movs	r1, #164	; 0xa4
 8004a28:	e7f2      	b.n	8004a10 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004a2a:	68e0      	ldr	r0, [r4, #12]
 8004a2c:	6803      	ldr	r3, [r0, #0]
 8004a2e:	6a1b      	ldr	r3, [r3, #32]
 8004a30:	4798      	blx	r3
 8004a32:	2837      	cmp	r0, #55	; 0x37
 8004a34:	d803      	bhi.n	8004a3e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8004a36:	4b3b      	ldr	r3, [pc, #236]	; (8004b24 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8004a38:	4a37      	ldr	r2, [pc, #220]	; (8004b18 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004a3a:	21a5      	movs	r1, #165	; 0xa5
 8004a3c:	e7e8      	b.n	8004a10 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004a3e:	f011 fd0f 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004a42:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004b28 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8004a46:	3004      	adds	r0, #4
 8004a48:	f011 fd70 	bl	801652c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004a4c:	f8d9 0000 	ldr.w	r0, [r9]
 8004a50:	b110      	cbz	r0, 8004a58 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8004a52:	6803      	ldr	r3, [r0, #0]
 8004a54:	68db      	ldr	r3, [r3, #12]
 8004a56:	4798      	blx	r3
    if (*currentTrans)
 8004a58:	f8d9 0000 	ldr.w	r0, [r9]
 8004a5c:	b110      	cbz	r0, 8004a64 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8004a5e:	6803      	ldr	r3, [r0, #0]
 8004a60:	681b      	ldr	r3, [r3, #0]
 8004a62:	4798      	blx	r3
    if (*currentScreen)
 8004a64:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004b2c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8004a68:	f8d8 0000 	ldr.w	r0, [r8]
 8004a6c:	b110      	cbz	r0, 8004a74 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004a6e:	6803      	ldr	r3, [r0, #0]
 8004a70:	695b      	ldr	r3, [r3, #20]
 8004a72:	4798      	blx	r3
    if (*currentPresenter)
 8004a74:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004a78:	b110      	cbz	r0, 8004a80 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004a7a:	6803      	ldr	r3, [r0, #0]
 8004a7c:	685b      	ldr	r3, [r3, #4]
 8004a7e:	4798      	blx	r3
    if (*currentScreen)
 8004a80:	f8d8 0000 	ldr.w	r0, [r8]
 8004a84:	b110      	cbz	r0, 8004a8c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004a86:	6803      	ldr	r3, [r0, #0]
 8004a88:	681b      	ldr	r3, [r3, #0]
 8004a8a:	4798      	blx	r3
    if (*currentPresenter)
 8004a8c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004a90:	b110      	cbz	r0, 8004a98 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004a92:	6803      	ldr	r3, [r0, #0]
 8004a94:	689b      	ldr	r3, [r3, #8]
 8004a96:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004a98:	68e0      	ldr	r0, [r4, #12]
 8004a9a:	2100      	movs	r1, #0
 8004a9c:	f7ff fe36 	bl	800470c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004aa0:	2114      	movs	r1, #20
 8004aa2:	4605      	mov	r5, r0
 8004aa4:	f7ff fe36 	bl	8004714 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004aa8:	68a0      	ldr	r0, [r4, #8]
 8004aaa:	6803      	ldr	r3, [r0, #0]
 8004aac:	2100      	movs	r1, #0
 8004aae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ab0:	4798      	blx	r3
 8004ab2:	4606      	mov	r6, r0
 8004ab4:	f003 ff1c 	bl	80088f0 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004ab8:	6860      	ldr	r0, [r4, #4]
 8004aba:	6803      	ldr	r3, [r0, #0]
 8004abc:	2100      	movs	r1, #0
 8004abe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ac0:	4798      	blx	r3
 8004ac2:	4631      	mov	r1, r6
 8004ac4:	4604      	mov	r4, r0
 8004ac6:	f003 feed 	bl	80088a4 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8004aca:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004ace:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004ad2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004ad6:	b1dc      	cbz	r4, 8004b10 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8004ad8:	1d23      	adds	r3, r4, #4
 8004ada:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004ade:	6833      	ldr	r3, [r6, #0]
 8004ae0:	f8c4 a008 	str.w	sl, [r4, #8]
 8004ae4:	4630      	mov	r0, r6
 8004ae6:	68db      	ldr	r3, [r3, #12]
 8004ae8:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004aea:	4798      	blx	r3
    newPresenter->activate();
 8004aec:	6823      	ldr	r3, [r4, #0]
 8004aee:	4620      	mov	r0, r4
 8004af0:	681b      	ldr	r3, [r3, #0]
 8004af2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004af4:	4629      	mov	r1, r5
 8004af6:	4630      	mov	r0, r6
 8004af8:	f013 fade 	bl	80180b8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004afc:	682b      	ldr	r3, [r5, #0]
 8004afe:	4628      	mov	r0, r5
 8004b00:	691b      	ldr	r3, [r3, #16]
 8004b02:	4798      	blx	r3
    newTransition->invalidate();
 8004b04:	682b      	ldr	r3, [r5, #0]
 8004b06:	4628      	mov	r0, r5
 8004b08:	695b      	ldr	r3, [r3, #20]
}
 8004b0a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004b0e:	4718      	bx	r3
    model->bind(newPresenter);
 8004b10:	4623      	mov	r3, r4
 8004b12:	e7e2      	b.n	8004ada <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8004b14:	0802cefc 	.word	0x0802cefc
 8004b18:	0802d57b 	.word	0x0802d57b
 8004b1c:	0802d098 	.word	0x0802d098
 8004b20:	0802d0df 	.word	0x0802d0df
 8004b24:	0802d182 	.word	0x0802d182
 8004b28:	20013864 	.word	0x20013864
 8004b2c:	20013860 	.word	0x20013860

08004b30 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8004b30:	6803      	ldr	r3, [r0, #0]
 8004b32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b34:	4718      	bx	r3
	...

08004b38 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8004b38:	4b12      	ldr	r3, [pc, #72]	; (8004b84 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004b3a:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004b3c:	6003      	str	r3, [r0, #0]
 8004b3e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004b42:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004b44:	4b10      	ldr	r3, [pc, #64]	; (8004b88 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004b46:	7241      	strb	r1, [r0, #9]
 8004b48:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004b4a:	4910      	ldr	r1, [pc, #64]	; (8004b8c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004b4c:	4b10      	ldr	r3, [pc, #64]	; (8004b90 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004b4e:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8004b52:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004b56:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004b58:	2200      	movs	r2, #0
 8004b5a:	6042      	str	r2, [r0, #4]
 8004b5c:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004b5e:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004b60:	81c2      	strh	r2, [r0, #14]
          solid()
 8004b62:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004b66:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004b6a:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8004b6e:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8004b72:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004b74:	9100      	str	r1, [sp, #0]
 8004b76:	3010      	adds	r0, #16
 8004b78:	4611      	mov	r1, r2
 8004b7a:	f7fd fee2 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8004b7e:	4620      	mov	r0, r4
 8004b80:	b002      	add	sp, #8
 8004b82:	bd10      	pop	{r4, pc}
 8004b84:	0802e260 	.word	0x0802e260
 8004b88:	0802e168 	.word	0x0802e168
 8004b8c:	20013812 	.word	0x20013812
 8004b90:	20013810 	.word	0x20013810

08004b94 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8004b94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004b98:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004b9c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004b9e:	68a0      	ldr	r0, [r4, #8]
 8004ba0:	6803      	ldr	r3, [r0, #0]
 8004ba2:	6a1b      	ldr	r3, [r3, #32]
 8004ba4:	4798      	blx	r3
 8004ba6:	f241 03af 	movw	r3, #4271	; 0x10af
 8004baa:	4298      	cmp	r0, r3
 8004bac:	d805      	bhi.n	8004bba <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8004bae:	4b42      	ldr	r3, [pc, #264]	; (8004cb8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8004bb0:	4a42      	ldr	r2, [pc, #264]	; (8004cbc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004bb2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004bb4:	4842      	ldr	r0, [pc, #264]	; (8004cc0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8004bb6:	f026 fb1b 	bl	802b1f0 <__assert_func>
 8004bba:	6860      	ldr	r0, [r4, #4]
 8004bbc:	6803      	ldr	r3, [r0, #0]
 8004bbe:	6a1b      	ldr	r3, [r3, #32]
 8004bc0:	4798      	blx	r3
 8004bc2:	280f      	cmp	r0, #15
 8004bc4:	d803      	bhi.n	8004bce <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8004bc6:	4b3f      	ldr	r3, [pc, #252]	; (8004cc4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8004bc8:	4a3c      	ldr	r2, [pc, #240]	; (8004cbc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004bca:	21a4      	movs	r1, #164	; 0xa4
 8004bcc:	e7f2      	b.n	8004bb4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004bce:	68e0      	ldr	r0, [r4, #12]
 8004bd0:	6803      	ldr	r3, [r0, #0]
 8004bd2:	6a1b      	ldr	r3, [r3, #32]
 8004bd4:	4798      	blx	r3
 8004bd6:	2837      	cmp	r0, #55	; 0x37
 8004bd8:	d803      	bhi.n	8004be2 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8004bda:	4b3b      	ldr	r3, [pc, #236]	; (8004cc8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8004bdc:	4a37      	ldr	r2, [pc, #220]	; (8004cbc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004bde:	21a5      	movs	r1, #165	; 0xa5
 8004be0:	e7e8      	b.n	8004bb4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004be2:	f011 fc3d 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004be6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004ccc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8004bea:	3004      	adds	r0, #4
 8004bec:	f011 fc9e 	bl	801652c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004bf0:	f8d9 0000 	ldr.w	r0, [r9]
 8004bf4:	b110      	cbz	r0, 8004bfc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004bf6:	6803      	ldr	r3, [r0, #0]
 8004bf8:	68db      	ldr	r3, [r3, #12]
 8004bfa:	4798      	blx	r3
    if (*currentTrans)
 8004bfc:	f8d9 0000 	ldr.w	r0, [r9]
 8004c00:	b110      	cbz	r0, 8004c08 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004c02:	6803      	ldr	r3, [r0, #0]
 8004c04:	681b      	ldr	r3, [r3, #0]
 8004c06:	4798      	blx	r3
    if (*currentScreen)
 8004c08:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004cd0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8004c0c:	f8d8 0000 	ldr.w	r0, [r8]
 8004c10:	b110      	cbz	r0, 8004c18 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004c12:	6803      	ldr	r3, [r0, #0]
 8004c14:	695b      	ldr	r3, [r3, #20]
 8004c16:	4798      	blx	r3
    if (*currentPresenter)
 8004c18:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c1c:	b110      	cbz	r0, 8004c24 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004c1e:	6803      	ldr	r3, [r0, #0]
 8004c20:	685b      	ldr	r3, [r3, #4]
 8004c22:	4798      	blx	r3
    if (*currentScreen)
 8004c24:	f8d8 0000 	ldr.w	r0, [r8]
 8004c28:	b110      	cbz	r0, 8004c30 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004c2a:	6803      	ldr	r3, [r0, #0]
 8004c2c:	681b      	ldr	r3, [r3, #0]
 8004c2e:	4798      	blx	r3
    if (*currentPresenter)
 8004c30:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c34:	b110      	cbz	r0, 8004c3c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004c36:	6803      	ldr	r3, [r0, #0]
 8004c38:	689b      	ldr	r3, [r3, #8]
 8004c3a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004c3c:	68e0      	ldr	r0, [r4, #12]
 8004c3e:	2100      	movs	r1, #0
 8004c40:	f7ff ff76 	bl	8004b30 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004c44:	2114      	movs	r1, #20
 8004c46:	4605      	mov	r5, r0
 8004c48:	f7ff ff76 	bl	8004b38 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004c4c:	68a0      	ldr	r0, [r4, #8]
 8004c4e:	6803      	ldr	r3, [r0, #0]
 8004c50:	2100      	movs	r1, #0
 8004c52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c54:	4798      	blx	r3
 8004c56:	4606      	mov	r6, r0
 8004c58:	f004 f94e 	bl	8008ef8 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004c5c:	6860      	ldr	r0, [r4, #4]
 8004c5e:	6803      	ldr	r3, [r0, #0]
 8004c60:	2100      	movs	r1, #0
 8004c62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c64:	4798      	blx	r3
 8004c66:	4631      	mov	r1, r6
 8004c68:	4604      	mov	r4, r0
 8004c6a:	f004 f91f 	bl	8008eac <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8004c6e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004c72:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004c76:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004c7a:	b1dc      	cbz	r4, 8004cb4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8004c7c:	1d23      	adds	r3, r4, #4
 8004c7e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004c82:	6833      	ldr	r3, [r6, #0]
 8004c84:	f8c4 a008 	str.w	sl, [r4, #8]
 8004c88:	4630      	mov	r0, r6
 8004c8a:	68db      	ldr	r3, [r3, #12]
 8004c8c:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004c8e:	4798      	blx	r3
    newPresenter->activate();
 8004c90:	6823      	ldr	r3, [r4, #0]
 8004c92:	4620      	mov	r0, r4
 8004c94:	681b      	ldr	r3, [r3, #0]
 8004c96:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004c98:	4629      	mov	r1, r5
 8004c9a:	4630      	mov	r0, r6
 8004c9c:	f013 fa0c 	bl	80180b8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004ca0:	682b      	ldr	r3, [r5, #0]
 8004ca2:	4628      	mov	r0, r5
 8004ca4:	691b      	ldr	r3, [r3, #16]
 8004ca6:	4798      	blx	r3
    newTransition->invalidate();
 8004ca8:	682b      	ldr	r3, [r5, #0]
 8004caa:	4628      	mov	r0, r5
 8004cac:	695b      	ldr	r3, [r3, #20]
}
 8004cae:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004cb2:	4718      	bx	r3
    model->bind(newPresenter);
 8004cb4:	4623      	mov	r3, r4
 8004cb6:	e7e2      	b.n	8004c7e <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8004cb8:	0802cefc 	.word	0x0802cefc
 8004cbc:	0802d695 	.word	0x0802d695
 8004cc0:	0802d098 	.word	0x0802d098
 8004cc4:	0802d0df 	.word	0x0802d0df
 8004cc8:	0802d182 	.word	0x0802d182
 8004ccc:	20013864 	.word	0x20013864
 8004cd0:	20013860 	.word	0x20013860

08004cd4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 8004cd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004cd8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004cdc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004cde:	68a0      	ldr	r0, [r4, #8]
 8004ce0:	6803      	ldr	r3, [r0, #0]
 8004ce2:	6a1b      	ldr	r3, [r3, #32]
 8004ce4:	4798      	blx	r3
 8004ce6:	f641 5363 	movw	r3, #7523	; 0x1d63
 8004cea:	4298      	cmp	r0, r3
 8004cec:	d805      	bhi.n	8004cfa <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 8004cee:	4b42      	ldr	r3, [pc, #264]	; (8004df8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 8004cf0:	4a42      	ldr	r2, [pc, #264]	; (8004dfc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004cf2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004cf4:	4842      	ldr	r0, [pc, #264]	; (8004e00 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8004cf6:	f026 fa7b 	bl	802b1f0 <__assert_func>
 8004cfa:	6860      	ldr	r0, [r4, #4]
 8004cfc:	6803      	ldr	r3, [r0, #0]
 8004cfe:	6a1b      	ldr	r3, [r3, #32]
 8004d00:	4798      	blx	r3
 8004d02:	280f      	cmp	r0, #15
 8004d04:	d803      	bhi.n	8004d0e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 8004d06:	4b3f      	ldr	r3, [pc, #252]	; (8004e04 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8004d08:	4a3c      	ldr	r2, [pc, #240]	; (8004dfc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004d0a:	21a4      	movs	r1, #164	; 0xa4
 8004d0c:	e7f2      	b.n	8004cf4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004d0e:	68e0      	ldr	r0, [r4, #12]
 8004d10:	6803      	ldr	r3, [r0, #0]
 8004d12:	6a1b      	ldr	r3, [r3, #32]
 8004d14:	4798      	blx	r3
 8004d16:	2837      	cmp	r0, #55	; 0x37
 8004d18:	d803      	bhi.n	8004d22 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 8004d1a:	4b3b      	ldr	r3, [pc, #236]	; (8004e08 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8004d1c:	4a37      	ldr	r2, [pc, #220]	; (8004dfc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004d1e:	21a5      	movs	r1, #165	; 0xa5
 8004d20:	e7e8      	b.n	8004cf4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004d22:	f011 fb9d 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004d26:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004e0c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8004d2a:	3004      	adds	r0, #4
 8004d2c:	f011 fbfe 	bl	801652c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004d30:	f8d9 0000 	ldr.w	r0, [r9]
 8004d34:	b110      	cbz	r0, 8004d3c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004d36:	6803      	ldr	r3, [r0, #0]
 8004d38:	68db      	ldr	r3, [r3, #12]
 8004d3a:	4798      	blx	r3
    if (*currentTrans)
 8004d3c:	f8d9 0000 	ldr.w	r0, [r9]
 8004d40:	b110      	cbz	r0, 8004d48 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004d42:	6803      	ldr	r3, [r0, #0]
 8004d44:	681b      	ldr	r3, [r3, #0]
 8004d46:	4798      	blx	r3
    if (*currentScreen)
 8004d48:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004e10 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8004d4c:	f8d8 0000 	ldr.w	r0, [r8]
 8004d50:	b110      	cbz	r0, 8004d58 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004d52:	6803      	ldr	r3, [r0, #0]
 8004d54:	695b      	ldr	r3, [r3, #20]
 8004d56:	4798      	blx	r3
    if (*currentPresenter)
 8004d58:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d5c:	b110      	cbz	r0, 8004d64 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004d5e:	6803      	ldr	r3, [r0, #0]
 8004d60:	685b      	ldr	r3, [r3, #4]
 8004d62:	4798      	blx	r3
    if (*currentScreen)
 8004d64:	f8d8 0000 	ldr.w	r0, [r8]
 8004d68:	b110      	cbz	r0, 8004d70 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004d6a:	6803      	ldr	r3, [r0, #0]
 8004d6c:	681b      	ldr	r3, [r3, #0]
 8004d6e:	4798      	blx	r3
    if (*currentPresenter)
 8004d70:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d74:	b110      	cbz	r0, 8004d7c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004d76:	6803      	ldr	r3, [r0, #0]
 8004d78:	689b      	ldr	r3, [r3, #8]
 8004d7a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004d7c:	68e0      	ldr	r0, [r4, #12]
 8004d7e:	2100      	movs	r1, #0
 8004d80:	f7ff fed6 	bl	8004b30 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004d84:	2114      	movs	r1, #20
 8004d86:	4605      	mov	r5, r0
 8004d88:	f7ff fed6 	bl	8004b38 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004d8c:	68a0      	ldr	r0, [r4, #8]
 8004d8e:	6803      	ldr	r3, [r0, #0]
 8004d90:	2100      	movs	r1, #0
 8004d92:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d94:	4798      	blx	r3
 8004d96:	4606      	mov	r6, r0
 8004d98:	f003 fc76 	bl	8008688 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004d9c:	6860      	ldr	r0, [r4, #4]
 8004d9e:	6803      	ldr	r3, [r0, #0]
 8004da0:	2100      	movs	r1, #0
 8004da2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004da4:	4798      	blx	r3
 8004da6:	4631      	mov	r1, r6
 8004da8:	4604      	mov	r4, r0
 8004daa:	f003 fc47 	bl	800863c <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 8004dae:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004db2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004db6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004dba:	b1dc      	cbz	r4, 8004df4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 8004dbc:	1d23      	adds	r3, r4, #4
 8004dbe:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004dc2:	6833      	ldr	r3, [r6, #0]
 8004dc4:	f8c4 a008 	str.w	sl, [r4, #8]
 8004dc8:	4630      	mov	r0, r6
 8004dca:	68db      	ldr	r3, [r3, #12]
 8004dcc:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004dce:	4798      	blx	r3
    newPresenter->activate();
 8004dd0:	6823      	ldr	r3, [r4, #0]
 8004dd2:	4620      	mov	r0, r4
 8004dd4:	681b      	ldr	r3, [r3, #0]
 8004dd6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004dd8:	4629      	mov	r1, r5
 8004dda:	4630      	mov	r0, r6
 8004ddc:	f013 f96c 	bl	80180b8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004de0:	682b      	ldr	r3, [r5, #0]
 8004de2:	4628      	mov	r0, r5
 8004de4:	691b      	ldr	r3, [r3, #16]
 8004de6:	4798      	blx	r3
    newTransition->invalidate();
 8004de8:	682b      	ldr	r3, [r5, #0]
 8004dea:	4628      	mov	r0, r5
 8004dec:	695b      	ldr	r3, [r3, #20]
}
 8004dee:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004df2:	4718      	bx	r3
    model->bind(newPresenter);
 8004df4:	4623      	mov	r3, r4
 8004df6:	e7e2      	b.n	8004dbe <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8004df8:	0802cefc 	.word	0x0802cefc
 8004dfc:	0802d7b5 	.word	0x0802d7b5
 8004e00:	0802d098 	.word	0x0802d098
 8004e04:	0802d0df 	.word	0x0802d0df
 8004e08:	0802d182 	.word	0x0802d182
 8004e0c:	20013864 	.word	0x20013864
 8004e10:	20013860 	.word	0x20013860

08004e14 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8004e14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004e18:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004e1c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004e1e:	68a0      	ldr	r0, [r4, #8]
 8004e20:	6803      	ldr	r3, [r0, #0]
 8004e22:	6a1b      	ldr	r3, [r3, #32]
 8004e24:	4798      	blx	r3
 8004e26:	f241 035b 	movw	r3, #4187	; 0x105b
 8004e2a:	4298      	cmp	r0, r3
 8004e2c:	d805      	bhi.n	8004e3a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 8004e2e:	4b42      	ldr	r3, [pc, #264]	; (8004f38 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8004e30:	4a42      	ldr	r2, [pc, #264]	; (8004f3c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004e32:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004e34:	4842      	ldr	r0, [pc, #264]	; (8004f40 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 8004e36:	f026 f9db 	bl	802b1f0 <__assert_func>
 8004e3a:	6860      	ldr	r0, [r4, #4]
 8004e3c:	6803      	ldr	r3, [r0, #0]
 8004e3e:	6a1b      	ldr	r3, [r3, #32]
 8004e40:	4798      	blx	r3
 8004e42:	280f      	cmp	r0, #15
 8004e44:	d803      	bhi.n	8004e4e <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 8004e46:	4b3f      	ldr	r3, [pc, #252]	; (8004f44 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8004e48:	4a3c      	ldr	r2, [pc, #240]	; (8004f3c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004e4a:	21a4      	movs	r1, #164	; 0xa4
 8004e4c:	e7f2      	b.n	8004e34 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004e4e:	68e0      	ldr	r0, [r4, #12]
 8004e50:	6803      	ldr	r3, [r0, #0]
 8004e52:	6a1b      	ldr	r3, [r3, #32]
 8004e54:	4798      	blx	r3
 8004e56:	2837      	cmp	r0, #55	; 0x37
 8004e58:	d803      	bhi.n	8004e62 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 8004e5a:	4b3b      	ldr	r3, [pc, #236]	; (8004f48 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8004e5c:	4a37      	ldr	r2, [pc, #220]	; (8004f3c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004e5e:	21a5      	movs	r1, #165	; 0xa5
 8004e60:	e7e8      	b.n	8004e34 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004e62:	f011 fafd 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004e66:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004f4c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 8004e6a:	3004      	adds	r0, #4
 8004e6c:	f011 fb5e 	bl	801652c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004e70:	f8d9 0000 	ldr.w	r0, [r9]
 8004e74:	b110      	cbz	r0, 8004e7c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004e76:	6803      	ldr	r3, [r0, #0]
 8004e78:	68db      	ldr	r3, [r3, #12]
 8004e7a:	4798      	blx	r3
    if (*currentTrans)
 8004e7c:	f8d9 0000 	ldr.w	r0, [r9]
 8004e80:	b110      	cbz	r0, 8004e88 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004e82:	6803      	ldr	r3, [r0, #0]
 8004e84:	681b      	ldr	r3, [r3, #0]
 8004e86:	4798      	blx	r3
    if (*currentScreen)
 8004e88:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004f50 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 8004e8c:	f8d8 0000 	ldr.w	r0, [r8]
 8004e90:	b110      	cbz	r0, 8004e98 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004e92:	6803      	ldr	r3, [r0, #0]
 8004e94:	695b      	ldr	r3, [r3, #20]
 8004e96:	4798      	blx	r3
    if (*currentPresenter)
 8004e98:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004e9c:	b110      	cbz	r0, 8004ea4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004e9e:	6803      	ldr	r3, [r0, #0]
 8004ea0:	685b      	ldr	r3, [r3, #4]
 8004ea2:	4798      	blx	r3
    if (*currentScreen)
 8004ea4:	f8d8 0000 	ldr.w	r0, [r8]
 8004ea8:	b110      	cbz	r0, 8004eb0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004eaa:	6803      	ldr	r3, [r0, #0]
 8004eac:	681b      	ldr	r3, [r3, #0]
 8004eae:	4798      	blx	r3
    if (*currentPresenter)
 8004eb0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004eb4:	b110      	cbz	r0, 8004ebc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004eb6:	6803      	ldr	r3, [r0, #0]
 8004eb8:	689b      	ldr	r3, [r3, #8]
 8004eba:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004ebc:	68e0      	ldr	r0, [r4, #12]
 8004ebe:	2100      	movs	r1, #0
 8004ec0:	f7ff fe36 	bl	8004b30 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004ec4:	2114      	movs	r1, #20
 8004ec6:	4605      	mov	r5, r0
 8004ec8:	f7ff fe36 	bl	8004b38 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004ecc:	68a0      	ldr	r0, [r4, #8]
 8004ece:	6803      	ldr	r3, [r0, #0]
 8004ed0:	2100      	movs	r1, #0
 8004ed2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ed4:	4798      	blx	r3
 8004ed6:	4606      	mov	r6, r0
 8004ed8:	f003 fe66 	bl	8008ba8 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004edc:	6860      	ldr	r0, [r4, #4]
 8004ede:	6803      	ldr	r3, [r0, #0]
 8004ee0:	2100      	movs	r1, #0
 8004ee2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ee4:	4798      	blx	r3
 8004ee6:	4631      	mov	r1, r6
 8004ee8:	4604      	mov	r4, r0
 8004eea:	f003 fe37 	bl	8008b5c <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 8004eee:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004ef2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004ef6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004efa:	b1dc      	cbz	r4, 8004f34 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8004efc:	1d23      	adds	r3, r4, #4
 8004efe:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004f02:	6833      	ldr	r3, [r6, #0]
 8004f04:	f8c4 a008 	str.w	sl, [r4, #8]
 8004f08:	4630      	mov	r0, r6
 8004f0a:	68db      	ldr	r3, [r3, #12]
 8004f0c:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004f0e:	4798      	blx	r3
    newPresenter->activate();
 8004f10:	6823      	ldr	r3, [r4, #0]
 8004f12:	4620      	mov	r0, r4
 8004f14:	681b      	ldr	r3, [r3, #0]
 8004f16:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004f18:	4629      	mov	r1, r5
 8004f1a:	4630      	mov	r0, r6
 8004f1c:	f013 f8cc 	bl	80180b8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004f20:	682b      	ldr	r3, [r5, #0]
 8004f22:	4628      	mov	r0, r5
 8004f24:	691b      	ldr	r3, [r3, #16]
 8004f26:	4798      	blx	r3
    newTransition->invalidate();
 8004f28:	682b      	ldr	r3, [r5, #0]
 8004f2a:	4628      	mov	r0, r5
 8004f2c:	695b      	ldr	r3, [r3, #20]
}
 8004f2e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004f32:	4718      	bx	r3
    model->bind(newPresenter);
 8004f34:	4623      	mov	r3, r4
 8004f36:	e7e2      	b.n	8004efe <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8004f38:	0802cefc 	.word	0x0802cefc
 8004f3c:	0802d8db 	.word	0x0802d8db
 8004f40:	0802d098 	.word	0x0802d098
 8004f44:	0802d0df 	.word	0x0802d0df
 8004f48:	0802d182 	.word	0x0802d182
 8004f4c:	20013864 	.word	0x20013864
 8004f50:	20013860 	.word	0x20013860

08004f54 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 8004f54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004f58:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004f5c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004f5e:	68a0      	ldr	r0, [r4, #8]
 8004f60:	6803      	ldr	r3, [r0, #0]
 8004f62:	6a1b      	ldr	r3, [r3, #32]
 8004f64:	4798      	blx	r3
 8004f66:	f241 035b 	movw	r3, #4187	; 0x105b
 8004f6a:	4298      	cmp	r0, r3
 8004f6c:	d805      	bhi.n	8004f7a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 8004f6e:	4b42      	ldr	r3, [pc, #264]	; (8005078 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 8004f70:	4a42      	ldr	r2, [pc, #264]	; (800507c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8004f72:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004f74:	4842      	ldr	r0, [pc, #264]	; (8005080 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 8004f76:	f026 f93b 	bl	802b1f0 <__assert_func>
 8004f7a:	6860      	ldr	r0, [r4, #4]
 8004f7c:	6803      	ldr	r3, [r0, #0]
 8004f7e:	6a1b      	ldr	r3, [r3, #32]
 8004f80:	4798      	blx	r3
 8004f82:	280f      	cmp	r0, #15
 8004f84:	d803      	bhi.n	8004f8e <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 8004f86:	4b3f      	ldr	r3, [pc, #252]	; (8005084 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 8004f88:	4a3c      	ldr	r2, [pc, #240]	; (800507c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8004f8a:	21a4      	movs	r1, #164	; 0xa4
 8004f8c:	e7f2      	b.n	8004f74 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004f8e:	68e0      	ldr	r0, [r4, #12]
 8004f90:	6803      	ldr	r3, [r0, #0]
 8004f92:	6a1b      	ldr	r3, [r3, #32]
 8004f94:	4798      	blx	r3
 8004f96:	2837      	cmp	r0, #55	; 0x37
 8004f98:	d803      	bhi.n	8004fa2 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 8004f9a:	4b3b      	ldr	r3, [pc, #236]	; (8005088 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 8004f9c:	4a37      	ldr	r2, [pc, #220]	; (800507c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8004f9e:	21a5      	movs	r1, #165	; 0xa5
 8004fa0:	e7e8      	b.n	8004f74 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004fa2:	f011 fa5d 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004fa6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800508c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 8004faa:	3004      	adds	r0, #4
 8004fac:	f011 fabe 	bl	801652c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004fb0:	f8d9 0000 	ldr.w	r0, [r9]
 8004fb4:	b110      	cbz	r0, 8004fbc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004fb6:	6803      	ldr	r3, [r0, #0]
 8004fb8:	68db      	ldr	r3, [r3, #12]
 8004fba:	4798      	blx	r3
    if (*currentTrans)
 8004fbc:	f8d9 0000 	ldr.w	r0, [r9]
 8004fc0:	b110      	cbz	r0, 8004fc8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004fc2:	6803      	ldr	r3, [r0, #0]
 8004fc4:	681b      	ldr	r3, [r3, #0]
 8004fc6:	4798      	blx	r3
    if (*currentScreen)
 8004fc8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005090 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 8004fcc:	f8d8 0000 	ldr.w	r0, [r8]
 8004fd0:	b110      	cbz	r0, 8004fd8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004fd2:	6803      	ldr	r3, [r0, #0]
 8004fd4:	695b      	ldr	r3, [r3, #20]
 8004fd6:	4798      	blx	r3
    if (*currentPresenter)
 8004fd8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004fdc:	b110      	cbz	r0, 8004fe4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004fde:	6803      	ldr	r3, [r0, #0]
 8004fe0:	685b      	ldr	r3, [r3, #4]
 8004fe2:	4798      	blx	r3
    if (*currentScreen)
 8004fe4:	f8d8 0000 	ldr.w	r0, [r8]
 8004fe8:	b110      	cbz	r0, 8004ff0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004fea:	6803      	ldr	r3, [r0, #0]
 8004fec:	681b      	ldr	r3, [r3, #0]
 8004fee:	4798      	blx	r3
    if (*currentPresenter)
 8004ff0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004ff4:	b110      	cbz	r0, 8004ffc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004ff6:	6803      	ldr	r3, [r0, #0]
 8004ff8:	689b      	ldr	r3, [r3, #8]
 8004ffa:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004ffc:	68e0      	ldr	r0, [r4, #12]
 8004ffe:	2100      	movs	r1, #0
 8005000:	f7ff fd96 	bl	8004b30 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005004:	2114      	movs	r1, #20
 8005006:	4605      	mov	r5, r0
 8005008:	f7ff fd96 	bl	8004b38 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800500c:	68a0      	ldr	r0, [r4, #8]
 800500e:	6803      	ldr	r3, [r0, #0]
 8005010:	2100      	movs	r1, #0
 8005012:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005014:	4798      	blx	r3
 8005016:	4606      	mov	r6, r0
 8005018:	f003 fd84 	bl	8008b24 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800501c:	6860      	ldr	r0, [r4, #4]
 800501e:	6803      	ldr	r3, [r0, #0]
 8005020:	2100      	movs	r1, #0
 8005022:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005024:	4798      	blx	r3
 8005026:	4631      	mov	r1, r6
 8005028:	4604      	mov	r4, r0
 800502a:	f003 fd55 	bl	8008ad8 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 800502e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005032:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005036:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800503a:	b1dc      	cbz	r4, 8005074 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 800503c:	1d23      	adds	r3, r4, #4
 800503e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005042:	6833      	ldr	r3, [r6, #0]
 8005044:	f8c4 a008 	str.w	sl, [r4, #8]
 8005048:	4630      	mov	r0, r6
 800504a:	68db      	ldr	r3, [r3, #12]
 800504c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800504e:	4798      	blx	r3
    newPresenter->activate();
 8005050:	6823      	ldr	r3, [r4, #0]
 8005052:	4620      	mov	r0, r4
 8005054:	681b      	ldr	r3, [r3, #0]
 8005056:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005058:	4629      	mov	r1, r5
 800505a:	4630      	mov	r0, r6
 800505c:	f013 f82c 	bl	80180b8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005060:	682b      	ldr	r3, [r5, #0]
 8005062:	4628      	mov	r0, r5
 8005064:	691b      	ldr	r3, [r3, #16]
 8005066:	4798      	blx	r3
    newTransition->invalidate();
 8005068:	682b      	ldr	r3, [r5, #0]
 800506a:	4628      	mov	r0, r5
 800506c:	695b      	ldr	r3, [r3, #20]
}
 800506e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005072:	4718      	bx	r3
    model->bind(newPresenter);
 8005074:	4623      	mov	r3, r4
 8005076:	e7e2      	b.n	800503e <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 8005078:	0802cefc 	.word	0x0802cefc
 800507c:	0802da1f 	.word	0x0802da1f
 8005080:	0802d098 	.word	0x0802d098
 8005084:	0802d0df 	.word	0x0802d0df
 8005088:	0802d182 	.word	0x0802d182
 800508c:	20013864 	.word	0x20013864
 8005090:	20013860 	.word	0x20013860

08005094 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 8005094:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005098:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800509c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800509e:	68a0      	ldr	r0, [r4, #8]
 80050a0:	6803      	ldr	r3, [r0, #0]
 80050a2:	6a1b      	ldr	r3, [r3, #32]
 80050a4:	4798      	blx	r3
 80050a6:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80050aa:	d205      	bcs.n	80050b8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 80050ac:	4b42      	ldr	r3, [pc, #264]	; (80051b8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 80050ae:	4a43      	ldr	r2, [pc, #268]	; (80051bc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80050b0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80050b2:	4843      	ldr	r0, [pc, #268]	; (80051c0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 80050b4:	f026 f89c 	bl	802b1f0 <__assert_func>
 80050b8:	6860      	ldr	r0, [r4, #4]
 80050ba:	6803      	ldr	r3, [r0, #0]
 80050bc:	6a1b      	ldr	r3, [r3, #32]
 80050be:	4798      	blx	r3
 80050c0:	280f      	cmp	r0, #15
 80050c2:	d803      	bhi.n	80050cc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 80050c4:	4b3f      	ldr	r3, [pc, #252]	; (80051c4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 80050c6:	4a3d      	ldr	r2, [pc, #244]	; (80051bc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80050c8:	21a4      	movs	r1, #164	; 0xa4
 80050ca:	e7f2      	b.n	80050b2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80050cc:	68e0      	ldr	r0, [r4, #12]
 80050ce:	6803      	ldr	r3, [r0, #0]
 80050d0:	6a1b      	ldr	r3, [r3, #32]
 80050d2:	4798      	blx	r3
 80050d4:	2837      	cmp	r0, #55	; 0x37
 80050d6:	d803      	bhi.n	80050e0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 80050d8:	4b3b      	ldr	r3, [pc, #236]	; (80051c8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 80050da:	4a38      	ldr	r2, [pc, #224]	; (80051bc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80050dc:	21a5      	movs	r1, #165	; 0xa5
 80050de:	e7e8      	b.n	80050b2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80050e0:	f011 f9be 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80050e4:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80051cc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 80050e8:	3004      	adds	r0, #4
 80050ea:	f011 fa1f 	bl	801652c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80050ee:	f8d9 0000 	ldr.w	r0, [r9]
 80050f2:	b110      	cbz	r0, 80050fa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80050f4:	6803      	ldr	r3, [r0, #0]
 80050f6:	68db      	ldr	r3, [r3, #12]
 80050f8:	4798      	blx	r3
    if (*currentTrans)
 80050fa:	f8d9 0000 	ldr.w	r0, [r9]
 80050fe:	b110      	cbz	r0, 8005106 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005100:	6803      	ldr	r3, [r0, #0]
 8005102:	681b      	ldr	r3, [r3, #0]
 8005104:	4798      	blx	r3
    if (*currentScreen)
 8005106:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80051d0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 800510a:	f8d8 0000 	ldr.w	r0, [r8]
 800510e:	b110      	cbz	r0, 8005116 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005110:	6803      	ldr	r3, [r0, #0]
 8005112:	695b      	ldr	r3, [r3, #20]
 8005114:	4798      	blx	r3
    if (*currentPresenter)
 8005116:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800511a:	b110      	cbz	r0, 8005122 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800511c:	6803      	ldr	r3, [r0, #0]
 800511e:	685b      	ldr	r3, [r3, #4]
 8005120:	4798      	blx	r3
    if (*currentScreen)
 8005122:	f8d8 0000 	ldr.w	r0, [r8]
 8005126:	b110      	cbz	r0, 800512e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005128:	6803      	ldr	r3, [r0, #0]
 800512a:	681b      	ldr	r3, [r3, #0]
 800512c:	4798      	blx	r3
    if (*currentPresenter)
 800512e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005132:	b110      	cbz	r0, 800513a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005134:	6803      	ldr	r3, [r0, #0]
 8005136:	689b      	ldr	r3, [r3, #8]
 8005138:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800513a:	68e0      	ldr	r0, [r4, #12]
 800513c:	2100      	movs	r1, #0
 800513e:	f7ff fcf7 	bl	8004b30 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005142:	2114      	movs	r1, #20
 8005144:	4605      	mov	r5, r0
 8005146:	f7ff fcf7 	bl	8004b38 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800514a:	68a0      	ldr	r0, [r4, #8]
 800514c:	6803      	ldr	r3, [r0, #0]
 800514e:	2100      	movs	r1, #0
 8005150:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005152:	4798      	blx	r3
 8005154:	4606      	mov	r6, r0
 8005156:	f003 fc8b 	bl	8008a70 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800515a:	6860      	ldr	r0, [r4, #4]
 800515c:	6803      	ldr	r3, [r0, #0]
 800515e:	2100      	movs	r1, #0
 8005160:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005162:	4798      	blx	r3
 8005164:	4631      	mov	r1, r6
 8005166:	4604      	mov	r4, r0
 8005168:	f003 fc5c 	bl	8008a24 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 800516c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005170:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005174:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005178:	b1dc      	cbz	r4, 80051b2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 800517a:	1d23      	adds	r3, r4, #4
 800517c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005180:	6833      	ldr	r3, [r6, #0]
 8005182:	f8c4 a008 	str.w	sl, [r4, #8]
 8005186:	4630      	mov	r0, r6
 8005188:	68db      	ldr	r3, [r3, #12]
 800518a:	63f4      	str	r4, [r6, #60]	; 0x3c
 800518c:	4798      	blx	r3
    newPresenter->activate();
 800518e:	6823      	ldr	r3, [r4, #0]
 8005190:	4620      	mov	r0, r4
 8005192:	681b      	ldr	r3, [r3, #0]
 8005194:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005196:	4629      	mov	r1, r5
 8005198:	4630      	mov	r0, r6
 800519a:	f012 ff8d 	bl	80180b8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800519e:	682b      	ldr	r3, [r5, #0]
 80051a0:	4628      	mov	r0, r5
 80051a2:	691b      	ldr	r3, [r3, #16]
 80051a4:	4798      	blx	r3
    newTransition->invalidate();
 80051a6:	682b      	ldr	r3, [r5, #0]
 80051a8:	4628      	mov	r0, r5
 80051aa:	695b      	ldr	r3, [r3, #20]
}
 80051ac:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80051b0:	4718      	bx	r3
    model->bind(newPresenter);
 80051b2:	4623      	mov	r3, r4
 80051b4:	e7e2      	b.n	800517c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 80051b6:	bf00      	nop
 80051b8:	0802cefc 	.word	0x0802cefc
 80051bc:	0802db5f 	.word	0x0802db5f
 80051c0:	0802d098 	.word	0x0802d098
 80051c4:	0802d0df 	.word	0x0802d0df
 80051c8:	0802d182 	.word	0x0802d182
 80051cc:	20013864 	.word	0x20013864
 80051d0:	20013860 	.word	0x20013860

080051d4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 80051d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80051d8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80051dc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80051de:	68a0      	ldr	r0, [r4, #8]
 80051e0:	6803      	ldr	r3, [r0, #0]
 80051e2:	6a1b      	ldr	r3, [r3, #32]
 80051e4:	4798      	blx	r3
 80051e6:	f241 035b 	movw	r3, #4187	; 0x105b
 80051ea:	4298      	cmp	r0, r3
 80051ec:	d805      	bhi.n	80051fa <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 80051ee:	4b42      	ldr	r3, [pc, #264]	; (80052f8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 80051f0:	4a42      	ldr	r2, [pc, #264]	; (80052fc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 80051f2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80051f4:	4842      	ldr	r0, [pc, #264]	; (8005300 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 80051f6:	f025 fffb 	bl	802b1f0 <__assert_func>
 80051fa:	6860      	ldr	r0, [r4, #4]
 80051fc:	6803      	ldr	r3, [r0, #0]
 80051fe:	6a1b      	ldr	r3, [r3, #32]
 8005200:	4798      	blx	r3
 8005202:	280f      	cmp	r0, #15
 8005204:	d803      	bhi.n	800520e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 8005206:	4b3f      	ldr	r3, [pc, #252]	; (8005304 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8005208:	4a3c      	ldr	r2, [pc, #240]	; (80052fc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800520a:	21a4      	movs	r1, #164	; 0xa4
 800520c:	e7f2      	b.n	80051f4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800520e:	68e0      	ldr	r0, [r4, #12]
 8005210:	6803      	ldr	r3, [r0, #0]
 8005212:	6a1b      	ldr	r3, [r3, #32]
 8005214:	4798      	blx	r3
 8005216:	2837      	cmp	r0, #55	; 0x37
 8005218:	d803      	bhi.n	8005222 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 800521a:	4b3b      	ldr	r3, [pc, #236]	; (8005308 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 800521c:	4a37      	ldr	r2, [pc, #220]	; (80052fc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800521e:	21a5      	movs	r1, #165	; 0xa5
 8005220:	e7e8      	b.n	80051f4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005222:	f011 f91d 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005226:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800530c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 800522a:	3004      	adds	r0, #4
 800522c:	f011 f97e 	bl	801652c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005230:	f8d9 0000 	ldr.w	r0, [r9]
 8005234:	b110      	cbz	r0, 800523c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005236:	6803      	ldr	r3, [r0, #0]
 8005238:	68db      	ldr	r3, [r3, #12]
 800523a:	4798      	blx	r3
    if (*currentTrans)
 800523c:	f8d9 0000 	ldr.w	r0, [r9]
 8005240:	b110      	cbz	r0, 8005248 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005242:	6803      	ldr	r3, [r0, #0]
 8005244:	681b      	ldr	r3, [r3, #0]
 8005246:	4798      	blx	r3
    if (*currentScreen)
 8005248:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005310 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 800524c:	f8d8 0000 	ldr.w	r0, [r8]
 8005250:	b110      	cbz	r0, 8005258 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005252:	6803      	ldr	r3, [r0, #0]
 8005254:	695b      	ldr	r3, [r3, #20]
 8005256:	4798      	blx	r3
    if (*currentPresenter)
 8005258:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800525c:	b110      	cbz	r0, 8005264 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800525e:	6803      	ldr	r3, [r0, #0]
 8005260:	685b      	ldr	r3, [r3, #4]
 8005262:	4798      	blx	r3
    if (*currentScreen)
 8005264:	f8d8 0000 	ldr.w	r0, [r8]
 8005268:	b110      	cbz	r0, 8005270 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800526a:	6803      	ldr	r3, [r0, #0]
 800526c:	681b      	ldr	r3, [r3, #0]
 800526e:	4798      	blx	r3
    if (*currentPresenter)
 8005270:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005274:	b110      	cbz	r0, 800527c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005276:	6803      	ldr	r3, [r0, #0]
 8005278:	689b      	ldr	r3, [r3, #8]
 800527a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800527c:	68e0      	ldr	r0, [r4, #12]
 800527e:	2100      	movs	r1, #0
 8005280:	f7ff fc56 	bl	8004b30 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005284:	2114      	movs	r1, #20
 8005286:	4605      	mov	r5, r0
 8005288:	f7ff fc56 	bl	8004b38 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800528c:	68a0      	ldr	r0, [r4, #8]
 800528e:	6803      	ldr	r3, [r0, #0]
 8005290:	2100      	movs	r1, #0
 8005292:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005294:	4798      	blx	r3
 8005296:	4606      	mov	r6, r0
 8005298:	f003 fdc8 	bl	8008e2c <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800529c:	6860      	ldr	r0, [r4, #4]
 800529e:	6803      	ldr	r3, [r0, #0]
 80052a0:	2100      	movs	r1, #0
 80052a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052a4:	4798      	blx	r3
 80052a6:	4631      	mov	r1, r6
 80052a8:	4604      	mov	r4, r0
 80052aa:	f003 fd99 	bl	8008de0 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 80052ae:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80052b2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80052b6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80052ba:	b1dc      	cbz	r4, 80052f4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 80052bc:	1d23      	adds	r3, r4, #4
 80052be:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80052c2:	6833      	ldr	r3, [r6, #0]
 80052c4:	f8c4 a008 	str.w	sl, [r4, #8]
 80052c8:	4630      	mov	r0, r6
 80052ca:	68db      	ldr	r3, [r3, #12]
 80052cc:	63f4      	str	r4, [r6, #60]	; 0x3c
 80052ce:	4798      	blx	r3
    newPresenter->activate();
 80052d0:	6823      	ldr	r3, [r4, #0]
 80052d2:	4620      	mov	r0, r4
 80052d4:	681b      	ldr	r3, [r3, #0]
 80052d6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80052d8:	4629      	mov	r1, r5
 80052da:	4630      	mov	r0, r6
 80052dc:	f012 feec 	bl	80180b8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80052e0:	682b      	ldr	r3, [r5, #0]
 80052e2:	4628      	mov	r0, r5
 80052e4:	691b      	ldr	r3, [r3, #16]
 80052e6:	4798      	blx	r3
    newTransition->invalidate();
 80052e8:	682b      	ldr	r3, [r5, #0]
 80052ea:	4628      	mov	r0, r5
 80052ec:	695b      	ldr	r3, [r3, #20]
}
 80052ee:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80052f2:	4718      	bx	r3
    model->bind(newPresenter);
 80052f4:	4623      	mov	r3, r4
 80052f6:	e7e2      	b.n	80052be <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 80052f8:	0802cefc 	.word	0x0802cefc
 80052fc:	0802dc8f 	.word	0x0802dc8f
 8005300:	0802d098 	.word	0x0802d098
 8005304:	0802d0df 	.word	0x0802d0df
 8005308:	0802d182 	.word	0x0802d182
 800530c:	20013864 	.word	0x20013864
 8005310:	20013860 	.word	0x20013860

08005314 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8005314:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005318:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800531c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800531e:	68a0      	ldr	r0, [r4, #8]
 8005320:	6803      	ldr	r3, [r0, #0]
 8005322:	6a1b      	ldr	r3, [r3, #32]
 8005324:	4798      	blx	r3
 8005326:	f241 33f7 	movw	r3, #5111	; 0x13f7
 800532a:	4298      	cmp	r0, r3
 800532c:	d805      	bhi.n	800533a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 800532e:	4b42      	ldr	r3, [pc, #264]	; (8005438 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8005330:	4a42      	ldr	r2, [pc, #264]	; (800543c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8005332:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005334:	4842      	ldr	r0, [pc, #264]	; (8005440 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8005336:	f025 ff5b 	bl	802b1f0 <__assert_func>
 800533a:	6860      	ldr	r0, [r4, #4]
 800533c:	6803      	ldr	r3, [r0, #0]
 800533e:	6a1b      	ldr	r3, [r3, #32]
 8005340:	4798      	blx	r3
 8005342:	280f      	cmp	r0, #15
 8005344:	d803      	bhi.n	800534e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 8005346:	4b3f      	ldr	r3, [pc, #252]	; (8005444 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8005348:	4a3c      	ldr	r2, [pc, #240]	; (800543c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 800534a:	21a4      	movs	r1, #164	; 0xa4
 800534c:	e7f2      	b.n	8005334 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800534e:	68e0      	ldr	r0, [r4, #12]
 8005350:	6803      	ldr	r3, [r0, #0]
 8005352:	6a1b      	ldr	r3, [r3, #32]
 8005354:	4798      	blx	r3
 8005356:	2837      	cmp	r0, #55	; 0x37
 8005358:	d803      	bhi.n	8005362 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 800535a:	4b3b      	ldr	r3, [pc, #236]	; (8005448 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 800535c:	4a37      	ldr	r2, [pc, #220]	; (800543c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 800535e:	21a5      	movs	r1, #165	; 0xa5
 8005360:	e7e8      	b.n	8005334 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005362:	f011 f87d 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005366:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800544c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 800536a:	3004      	adds	r0, #4
 800536c:	f011 f8de 	bl	801652c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005370:	f8d9 0000 	ldr.w	r0, [r9]
 8005374:	b110      	cbz	r0, 800537c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005376:	6803      	ldr	r3, [r0, #0]
 8005378:	68db      	ldr	r3, [r3, #12]
 800537a:	4798      	blx	r3
    if (*currentTrans)
 800537c:	f8d9 0000 	ldr.w	r0, [r9]
 8005380:	b110      	cbz	r0, 8005388 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005382:	6803      	ldr	r3, [r0, #0]
 8005384:	681b      	ldr	r3, [r3, #0]
 8005386:	4798      	blx	r3
    if (*currentScreen)
 8005388:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005450 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 800538c:	f8d8 0000 	ldr.w	r0, [r8]
 8005390:	b110      	cbz	r0, 8005398 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005392:	6803      	ldr	r3, [r0, #0]
 8005394:	695b      	ldr	r3, [r3, #20]
 8005396:	4798      	blx	r3
    if (*currentPresenter)
 8005398:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800539c:	b110      	cbz	r0, 80053a4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800539e:	6803      	ldr	r3, [r0, #0]
 80053a0:	685b      	ldr	r3, [r3, #4]
 80053a2:	4798      	blx	r3
    if (*currentScreen)
 80053a4:	f8d8 0000 	ldr.w	r0, [r8]
 80053a8:	b110      	cbz	r0, 80053b0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80053aa:	6803      	ldr	r3, [r0, #0]
 80053ac:	681b      	ldr	r3, [r3, #0]
 80053ae:	4798      	blx	r3
    if (*currentPresenter)
 80053b0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80053b4:	b110      	cbz	r0, 80053bc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80053b6:	6803      	ldr	r3, [r0, #0]
 80053b8:	689b      	ldr	r3, [r3, #8]
 80053ba:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80053bc:	68e0      	ldr	r0, [r4, #12]
 80053be:	2100      	movs	r1, #0
 80053c0:	f7ff fbb6 	bl	8004b30 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80053c4:	2114      	movs	r1, #20
 80053c6:	4605      	mov	r5, r0
 80053c8:	f7ff fbb6 	bl	8004b38 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80053cc:	68a0      	ldr	r0, [r4, #8]
 80053ce:	6803      	ldr	r3, [r0, #0]
 80053d0:	2100      	movs	r1, #0
 80053d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053d4:	4798      	blx	r3
 80053d6:	4606      	mov	r6, r0
 80053d8:	f003 fc88 	bl	8008cec <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80053dc:	6860      	ldr	r0, [r4, #4]
 80053de:	6803      	ldr	r3, [r0, #0]
 80053e0:	2100      	movs	r1, #0
 80053e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053e4:	4798      	blx	r3
 80053e6:	4631      	mov	r1, r6
 80053e8:	4604      	mov	r4, r0
 80053ea:	f003 fc59 	bl	8008ca0 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 80053ee:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80053f2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80053f6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80053fa:	b1dc      	cbz	r4, 8005434 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 80053fc:	1d23      	adds	r3, r4, #4
 80053fe:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005402:	6833      	ldr	r3, [r6, #0]
 8005404:	f8c4 a008 	str.w	sl, [r4, #8]
 8005408:	4630      	mov	r0, r6
 800540a:	68db      	ldr	r3, [r3, #12]
 800540c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800540e:	4798      	blx	r3
    newPresenter->activate();
 8005410:	6823      	ldr	r3, [r4, #0]
 8005412:	4620      	mov	r0, r4
 8005414:	681b      	ldr	r3, [r3, #0]
 8005416:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005418:	4629      	mov	r1, r5
 800541a:	4630      	mov	r0, r6
 800541c:	f012 fe4c 	bl	80180b8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005420:	682b      	ldr	r3, [r5, #0]
 8005422:	4628      	mov	r0, r5
 8005424:	691b      	ldr	r3, [r3, #16]
 8005426:	4798      	blx	r3
    newTransition->invalidate();
 8005428:	682b      	ldr	r3, [r5, #0]
 800542a:	4628      	mov	r0, r5
 800542c:	695b      	ldr	r3, [r3, #20]
}
 800542e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005432:	4718      	bx	r3
    model->bind(newPresenter);
 8005434:	4623      	mov	r3, r4
 8005436:	e7e2      	b.n	80053fe <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8005438:	0802cefc 	.word	0x0802cefc
 800543c:	0802ddd1 	.word	0x0802ddd1
 8005440:	0802d098 	.word	0x0802d098
 8005444:	0802d0df 	.word	0x0802d0df
 8005448:	0802d182 	.word	0x0802d182
 800544c:	20013864 	.word	0x20013864
 8005450:	20013860 	.word	0x20013860

08005454 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8005454:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005458:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800545c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800545e:	68a0      	ldr	r0, [r4, #8]
 8005460:	6803      	ldr	r3, [r0, #0]
 8005462:	6a1b      	ldr	r3, [r3, #32]
 8005464:	4798      	blx	r3
 8005466:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800546a:	d205      	bcs.n	8005478 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 800546c:	4b42      	ldr	r3, [pc, #264]	; (8005578 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 800546e:	4a43      	ldr	r2, [pc, #268]	; (800557c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005470:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005472:	4843      	ldr	r0, [pc, #268]	; (8005580 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 8005474:	f025 febc 	bl	802b1f0 <__assert_func>
 8005478:	6860      	ldr	r0, [r4, #4]
 800547a:	6803      	ldr	r3, [r0, #0]
 800547c:	6a1b      	ldr	r3, [r3, #32]
 800547e:	4798      	blx	r3
 8005480:	280f      	cmp	r0, #15
 8005482:	d803      	bhi.n	800548c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 8005484:	4b3f      	ldr	r3, [pc, #252]	; (8005584 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 8005486:	4a3d      	ldr	r2, [pc, #244]	; (800557c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005488:	21a4      	movs	r1, #164	; 0xa4
 800548a:	e7f2      	b.n	8005472 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800548c:	68e0      	ldr	r0, [r4, #12]
 800548e:	6803      	ldr	r3, [r0, #0]
 8005490:	6a1b      	ldr	r3, [r3, #32]
 8005492:	4798      	blx	r3
 8005494:	2837      	cmp	r0, #55	; 0x37
 8005496:	d803      	bhi.n	80054a0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8005498:	4b3b      	ldr	r3, [pc, #236]	; (8005588 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 800549a:	4a38      	ldr	r2, [pc, #224]	; (800557c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 800549c:	21a5      	movs	r1, #165	; 0xa5
 800549e:	e7e8      	b.n	8005472 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80054a0:	f010 ffde 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80054a4:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800558c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 80054a8:	3004      	adds	r0, #4
 80054aa:	f011 f83f 	bl	801652c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80054ae:	f8d9 0000 	ldr.w	r0, [r9]
 80054b2:	b110      	cbz	r0, 80054ba <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80054b4:	6803      	ldr	r3, [r0, #0]
 80054b6:	68db      	ldr	r3, [r3, #12]
 80054b8:	4798      	blx	r3
    if (*currentTrans)
 80054ba:	f8d9 0000 	ldr.w	r0, [r9]
 80054be:	b110      	cbz	r0, 80054c6 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80054c0:	6803      	ldr	r3, [r0, #0]
 80054c2:	681b      	ldr	r3, [r3, #0]
 80054c4:	4798      	blx	r3
    if (*currentScreen)
 80054c6:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005590 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 80054ca:	f8d8 0000 	ldr.w	r0, [r8]
 80054ce:	b110      	cbz	r0, 80054d6 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80054d0:	6803      	ldr	r3, [r0, #0]
 80054d2:	695b      	ldr	r3, [r3, #20]
 80054d4:	4798      	blx	r3
    if (*currentPresenter)
 80054d6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80054da:	b110      	cbz	r0, 80054e2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80054dc:	6803      	ldr	r3, [r0, #0]
 80054de:	685b      	ldr	r3, [r3, #4]
 80054e0:	4798      	blx	r3
    if (*currentScreen)
 80054e2:	f8d8 0000 	ldr.w	r0, [r8]
 80054e6:	b110      	cbz	r0, 80054ee <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80054e8:	6803      	ldr	r3, [r0, #0]
 80054ea:	681b      	ldr	r3, [r3, #0]
 80054ec:	4798      	blx	r3
    if (*currentPresenter)
 80054ee:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80054f2:	b110      	cbz	r0, 80054fa <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80054f4:	6803      	ldr	r3, [r0, #0]
 80054f6:	689b      	ldr	r3, [r3, #8]
 80054f8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80054fa:	68e0      	ldr	r0, [r4, #12]
 80054fc:	2100      	movs	r1, #0
 80054fe:	f7ff fb17 	bl	8004b30 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005502:	2114      	movs	r1, #20
 8005504:	4605      	mov	r5, r0
 8005506:	f7ff fb17 	bl	8004b38 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800550a:	68a0      	ldr	r0, [r4, #8]
 800550c:	6803      	ldr	r3, [r0, #0]
 800550e:	2100      	movs	r1, #0
 8005510:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005512:	4798      	blx	r3
 8005514:	4606      	mov	r6, r0
 8005516:	f003 fb8f 	bl	8008c38 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800551a:	6860      	ldr	r0, [r4, #4]
 800551c:	6803      	ldr	r3, [r0, #0]
 800551e:	2100      	movs	r1, #0
 8005520:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005522:	4798      	blx	r3
 8005524:	4631      	mov	r1, r6
 8005526:	4604      	mov	r4, r0
 8005528:	f003 fb60 	bl	8008bec <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 800552c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005530:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005534:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005538:	b1dc      	cbz	r4, 8005572 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 800553a:	1d23      	adds	r3, r4, #4
 800553c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005540:	6833      	ldr	r3, [r6, #0]
 8005542:	f8c4 a008 	str.w	sl, [r4, #8]
 8005546:	4630      	mov	r0, r6
 8005548:	68db      	ldr	r3, [r3, #12]
 800554a:	63f4      	str	r4, [r6, #60]	; 0x3c
 800554c:	4798      	blx	r3
    newPresenter->activate();
 800554e:	6823      	ldr	r3, [r4, #0]
 8005550:	4620      	mov	r0, r4
 8005552:	681b      	ldr	r3, [r3, #0]
 8005554:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005556:	4629      	mov	r1, r5
 8005558:	4630      	mov	r0, r6
 800555a:	f012 fdad 	bl	80180b8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800555e:	682b      	ldr	r3, [r5, #0]
 8005560:	4628      	mov	r0, r5
 8005562:	691b      	ldr	r3, [r3, #16]
 8005564:	4798      	blx	r3
    newTransition->invalidate();
 8005566:	682b      	ldr	r3, [r5, #0]
 8005568:	4628      	mov	r0, r5
 800556a:	695b      	ldr	r3, [r3, #20]
}
 800556c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005570:	4718      	bx	r3
    model->bind(newPresenter);
 8005572:	4623      	mov	r3, r4
 8005574:	e7e2      	b.n	800553c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 8005576:	bf00      	nop
 8005578:	0802cefc 	.word	0x0802cefc
 800557c:	0802df13 	.word	0x0802df13
 8005580:	0802d098 	.word	0x0802d098
 8005584:	0802d0df 	.word	0x0802d0df
 8005588:	0802d182 	.word	0x0802d182
 800558c:	20013864 	.word	0x20013864
 8005590:	20013860 	.word	0x20013860

08005594 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8005594:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005598:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800559c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800559e:	68a0      	ldr	r0, [r4, #8]
 80055a0:	6803      	ldr	r3, [r0, #0]
 80055a2:	6a1b      	ldr	r3, [r3, #32]
 80055a4:	4798      	blx	r3
 80055a6:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80055aa:	d205      	bcs.n	80055b8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 80055ac:	4b42      	ldr	r3, [pc, #264]	; (80056b8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 80055ae:	4a43      	ldr	r2, [pc, #268]	; (80056bc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 80055b0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80055b2:	4843      	ldr	r0, [pc, #268]	; (80056c0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 80055b4:	f025 fe1c 	bl	802b1f0 <__assert_func>
 80055b8:	6860      	ldr	r0, [r4, #4]
 80055ba:	6803      	ldr	r3, [r0, #0]
 80055bc:	6a1b      	ldr	r3, [r3, #32]
 80055be:	4798      	blx	r3
 80055c0:	280f      	cmp	r0, #15
 80055c2:	d803      	bhi.n	80055cc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 80055c4:	4b3f      	ldr	r3, [pc, #252]	; (80056c4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 80055c6:	4a3d      	ldr	r2, [pc, #244]	; (80056bc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 80055c8:	21a4      	movs	r1, #164	; 0xa4
 80055ca:	e7f2      	b.n	80055b2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80055cc:	68e0      	ldr	r0, [r4, #12]
 80055ce:	6803      	ldr	r3, [r0, #0]
 80055d0:	6a1b      	ldr	r3, [r3, #32]
 80055d2:	4798      	blx	r3
 80055d4:	2837      	cmp	r0, #55	; 0x37
 80055d6:	d803      	bhi.n	80055e0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 80055d8:	4b3b      	ldr	r3, [pc, #236]	; (80056c8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 80055da:	4a38      	ldr	r2, [pc, #224]	; (80056bc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 80055dc:	21a5      	movs	r1, #165	; 0xa5
 80055de:	e7e8      	b.n	80055b2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80055e0:	f010 ff3e 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80055e4:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80056cc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 80055e8:	3004      	adds	r0, #4
 80055ea:	f010 ff9f 	bl	801652c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80055ee:	f8d9 0000 	ldr.w	r0, [r9]
 80055f2:	b110      	cbz	r0, 80055fa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80055f4:	6803      	ldr	r3, [r0, #0]
 80055f6:	68db      	ldr	r3, [r3, #12]
 80055f8:	4798      	blx	r3
    if (*currentTrans)
 80055fa:	f8d9 0000 	ldr.w	r0, [r9]
 80055fe:	b110      	cbz	r0, 8005606 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005600:	6803      	ldr	r3, [r0, #0]
 8005602:	681b      	ldr	r3, [r3, #0]
 8005604:	4798      	blx	r3
    if (*currentScreen)
 8005606:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80056d0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 800560a:	f8d8 0000 	ldr.w	r0, [r8]
 800560e:	b110      	cbz	r0, 8005616 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005610:	6803      	ldr	r3, [r0, #0]
 8005612:	695b      	ldr	r3, [r3, #20]
 8005614:	4798      	blx	r3
    if (*currentPresenter)
 8005616:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800561a:	b110      	cbz	r0, 8005622 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800561c:	6803      	ldr	r3, [r0, #0]
 800561e:	685b      	ldr	r3, [r3, #4]
 8005620:	4798      	blx	r3
    if (*currentScreen)
 8005622:	f8d8 0000 	ldr.w	r0, [r8]
 8005626:	b110      	cbz	r0, 800562e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005628:	6803      	ldr	r3, [r0, #0]
 800562a:	681b      	ldr	r3, [r3, #0]
 800562c:	4798      	blx	r3
    if (*currentPresenter)
 800562e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005632:	b110      	cbz	r0, 800563a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005634:	6803      	ldr	r3, [r0, #0]
 8005636:	689b      	ldr	r3, [r3, #8]
 8005638:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800563a:	68e0      	ldr	r0, [r4, #12]
 800563c:	2100      	movs	r1, #0
 800563e:	f7ff fa77 	bl	8004b30 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005642:	2114      	movs	r1, #20
 8005644:	4605      	mov	r5, r0
 8005646:	f7ff fa77 	bl	8004b38 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800564a:	68a0      	ldr	r0, [r4, #8]
 800564c:	6803      	ldr	r3, [r0, #0]
 800564e:	2100      	movs	r1, #0
 8005650:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005652:	4798      	blx	r3
 8005654:	4606      	mov	r6, r0
 8005656:	f003 f9ab 	bl	80089b0 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800565a:	6860      	ldr	r0, [r4, #4]
 800565c:	6803      	ldr	r3, [r0, #0]
 800565e:	2100      	movs	r1, #0
 8005660:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005662:	4798      	blx	r3
 8005664:	4631      	mov	r1, r6
 8005666:	4604      	mov	r4, r0
 8005668:	f003 f97c 	bl	8008964 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 800566c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005670:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005674:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005678:	b1dc      	cbz	r4, 80056b2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 800567a:	1d23      	adds	r3, r4, #4
 800567c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005680:	6833      	ldr	r3, [r6, #0]
 8005682:	f8c4 a008 	str.w	sl, [r4, #8]
 8005686:	4630      	mov	r0, r6
 8005688:	68db      	ldr	r3, [r3, #12]
 800568a:	63f4      	str	r4, [r6, #60]	; 0x3c
 800568c:	4798      	blx	r3
    newPresenter->activate();
 800568e:	6823      	ldr	r3, [r4, #0]
 8005690:	4620      	mov	r0, r4
 8005692:	681b      	ldr	r3, [r3, #0]
 8005694:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005696:	4629      	mov	r1, r5
 8005698:	4630      	mov	r0, r6
 800569a:	f012 fd0d 	bl	80180b8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800569e:	682b      	ldr	r3, [r5, #0]
 80056a0:	4628      	mov	r0, r5
 80056a2:	691b      	ldr	r3, [r3, #16]
 80056a4:	4798      	blx	r3
    newTransition->invalidate();
 80056a6:	682b      	ldr	r3, [r5, #0]
 80056a8:	4628      	mov	r0, r5
 80056aa:	695b      	ldr	r3, [r3, #20]
}
 80056ac:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80056b0:	4718      	bx	r3
    model->bind(newPresenter);
 80056b2:	4623      	mov	r3, r4
 80056b4:	e7e2      	b.n	800567c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 80056b6:	bf00      	nop
 80056b8:	0802cefc 	.word	0x0802cefc
 80056bc:	0802e03f 	.word	0x0802e03f
 80056c0:	0802d098 	.word	0x0802d098
 80056c4:	0802d0df 	.word	0x0802d0df
 80056c8:	0802d182 	.word	0x0802d182
 80056cc:	20013864 	.word	0x20013864
 80056d0:	20013860 	.word	0x20013860

080056d4 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80056d4:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80056d6:	4770      	bx	lr

080056d8 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80056d8:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80056da:	4770      	bx	lr

080056dc <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80056dc:	4770      	bx	lr

080056de <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80056de:	888b      	ldrh	r3, [r1, #4]
 80056e0:	69c0      	ldr	r0, [r0, #28]
 80056e2:	680a      	ldr	r2, [r1, #0]
 80056e4:	0adb      	lsrs	r3, r3, #11
 80056e6:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80056ea:	4410      	add	r0, r2
 80056ec:	4770      	bx	lr

080056ee <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80056ee:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80056f0:	b1c2      	cbz	r2, 8005724 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80056f2:	7b13      	ldrb	r3, [r2, #12]
 80056f4:	b1b3      	cbz	r3, 8005724 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80056f6:	7b54      	ldrb	r4, [r2, #13]
 80056f8:	7ad2      	ldrb	r2, [r2, #11]
 80056fa:	0224      	lsls	r4, r4, #8
 80056fc:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005700:	4314      	orrs	r4, r2
 8005702:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005704:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005706:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800570a:	8813      	ldrh	r3, [r2, #0]
 800570c:	428b      	cmp	r3, r1
 800570e:	d102      	bne.n	8005716 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8005710:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8005714:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8005716:	d805      	bhi.n	8005724 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005718:	3801      	subs	r0, #1
 800571a:	b280      	uxth	r0, r0
 800571c:	3204      	adds	r2, #4
 800571e:	2800      	cmp	r0, #0
 8005720:	d1f3      	bne.n	800570a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8005722:	e7f7      	b.n	8005714 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8005724:	2000      	movs	r0, #0
 8005726:	e7f5      	b.n	8005714 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08005728 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8005728:	b510      	push	{r4, lr}
 800572a:	212c      	movs	r1, #44	; 0x2c
 800572c:	4604      	mov	r4, r0
 800572e:	f024 ff4c 	bl	802a5ca <_ZdlPvj>
 8005732:	4620      	mov	r0, r4
 8005734:	bd10      	pop	{r4, pc}
	...

08005738 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8005738:	b530      	push	{r4, r5, lr}
 800573a:	b08b      	sub	sp, #44	; 0x2c
 800573c:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800573e:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8005742:	9508      	str	r5, [sp, #32]
 8005744:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8005748:	9507      	str	r5, [sp, #28]
 800574a:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800574e:	9506      	str	r5, [sp, #24]
 8005750:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8005754:	9505      	str	r5, [sp, #20]
 8005756:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800575a:	9504      	str	r5, [sp, #16]
 800575c:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8005760:	9503      	str	r5, [sp, #12]
 8005762:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8005766:	9502      	str	r5, [sp, #8]
 8005768:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 800576c:	9501      	str	r5, [sp, #4]
 800576e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8005772:	9500      	str	r5, [sp, #0]
 8005774:	f012 f80a 	bl	801778c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8005778:	4b06      	ldr	r3, [pc, #24]	; (8005794 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 800577a:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 800577c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800577e:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8005780:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8005782:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8005784:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005786:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 8005788:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800578a:	62a3      	str	r3, [r4, #40]	; 0x28
}
 800578c:	4620      	mov	r0, r4
 800578e:	b00b      	add	sp, #44	; 0x2c
 8005790:	bd30      	pop	{r4, r5, pc}
 8005792:	bf00      	nop
 8005794:	0802e2a8 	.word	0x0802e2a8

08005798 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 8005798:	4770      	bx	lr

0800579a <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800579a:	4770      	bx	lr

0800579c <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800579c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800579e:	68c2      	ldr	r2, [r0, #12]
 80057a0:	6844      	ldr	r4, [r0, #4]
 80057a2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80057a4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80057a6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80057aa:	07d2      	lsls	r2, r2, #31
 80057ac:	bf48      	it	mi
 80057ae:	5962      	ldrmi	r2, [r4, r5]
 80057b0:	689b      	ldr	r3, [r3, #8]
    }
 80057b2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80057b4:	bf48      	it	mi
 80057b6:	58d3      	ldrmi	r3, [r2, r3]
 80057b8:	4718      	bx	r3

080057ba <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80057ba:	6843      	ldr	r3, [r0, #4]
 80057bc:	b12b      	cbz	r3, 80057ca <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80057be:	6883      	ldr	r3, [r0, #8]
 80057c0:	b92b      	cbnz	r3, 80057ce <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80057c2:	68c0      	ldr	r0, [r0, #12]
 80057c4:	f000 0001 	and.w	r0, r0, #1
 80057c8:	4770      	bx	lr
 80057ca:	4618      	mov	r0, r3
 80057cc:	4770      	bx	lr
 80057ce:	2001      	movs	r0, #1
    }
 80057d0:	4770      	bx	lr

080057d2 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80057d2:	b510      	push	{r4, lr}
 80057d4:	2110      	movs	r1, #16
 80057d6:	4604      	mov	r4, r0
 80057d8:	f024 fef7 	bl	802a5ca <_ZdlPvj>
 80057dc:	4620      	mov	r0, r4
 80057de:	bd10      	pop	{r4, pc}

080057e0 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 80057e0:	b510      	push	{r4, lr}
 80057e2:	4b03      	ldr	r3, [pc, #12]	; (80057f0 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 80057e4:	6003      	str	r3, [r0, #0]
 80057e6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80057e8:	f00f f938 	bl	8014a5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80057ec:	4620      	mov	r0, r4
 80057ee:	bd10      	pop	{r4, pc}
 80057f0:	0802e320 	.word	0x0802e320

080057f4 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 80057f4:	b507      	push	{r0, r1, r2, lr}
 80057f6:	4b07      	ldr	r3, [pc, #28]	; (8005814 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 80057f8:	6003      	str	r3, [r0, #0]
 80057fa:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80057fc:	f00f f92e 	bl	8014a5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005800:	9801      	ldr	r0, [sp, #4]
 8005802:	f241 117c 	movw	r1, #4476	; 0x117c
 8005806:	f024 fee0 	bl	802a5ca <_ZdlPvj>
 800580a:	9801      	ldr	r0, [sp, #4]
 800580c:	b003      	add	sp, #12
 800580e:	f85d fb04 	ldr.w	pc, [sp], #4
 8005812:	bf00      	nop
 8005814:	0802e320 	.word	0x0802e320

08005818 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005818:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 800581a:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 800581e:	4299      	cmp	r1, r3
{
 8005820:	4604      	mov	r4, r0
 8005822:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8005824:	d103      	bne.n	800582e <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005826:	f010 fe1b 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 800582a:	f7fe feaf 	bl	800458c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800582e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005832:	429d      	cmp	r5, r3
 8005834:	d103      	bne.n	800583e <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005836:	f010 fe13 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 800583a:	f7fe ff37 	bl	80046ac <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 800583e:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005842:	429d      	cmp	r5, r3
 8005844:	d103      	bne.n	800584e <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 8005846:	f010 fe0b 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 800584a:	f7fe ff3f 	bl	80046cc <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 800584e:	f504 7446 	add.w	r4, r4, #792	; 0x318
 8005852:	42a5      	cmp	r5, r4
 8005854:	d10a      	bne.n	800586c <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8005856:	4806      	ldr	r0, [pc, #24]	; (8005870 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 8005858:	2200      	movs	r2, #0
 800585a:	2120      	movs	r1, #32
 800585c:	f004 fa42 	bl	8009ce4 <HAL_GPIO_WritePin>
 8005860:	f010 fdfe 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8005864:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 8005868:	f7fe bf40 	b.w	80046ec <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800586c:	bd38      	pop	{r3, r4, r5, pc}
 800586e:	bf00      	nop
 8005870:	40021000 	.word	0x40021000

08005874 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8005874:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005878:	ed2d 8b06 	vpush	{d8-d10}
 800587c:	4604      	mov	r4, r0
 800587e:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 8005880:	46a3      	mov	fp, r4
        : presenter(0)
 8005882:	2500      	movs	r5, #0
 8005884:	f012 fa6c 	bl	8017d60 <_ZN8touchgfx6ScreenC1Ev>
 8005888:	4b6a      	ldr	r3, [pc, #424]	; (8005a34 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 800588a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800588c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005890:	2226      	movs	r2, #38	; 0x26
 8005892:	4629      	mov	r1, r5
 8005894:	4658      	mov	r0, fp
 8005896:	f025 feb0 	bl	802b5fa <memset>
 800589a:	4658      	mov	r0, fp
 800589c:	f7fd f876 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 80058a0:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80058a4:	26ff      	movs	r6, #255	; 0xff
 80058a6:	4b64      	ldr	r3, [pc, #400]	; (8005a38 <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 80058a8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80058aa:	2226      	movs	r2, #38	; 0x26
 80058ac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80058b0:	4629      	mov	r1, r5
 80058b2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80058b6:	4650      	mov	r0, sl
        : color(col)
 80058b8:	66a5      	str	r5, [r4, #104]	; 0x68
 80058ba:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80058be:	f025 fe9c 	bl	802b5fa <memset>
 80058c2:	4650      	mov	r0, sl
 80058c4:	f7fd f862 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 80058c8:	4b5c      	ldr	r3, [pc, #368]	; (8005a3c <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 80058ca:	66e3      	str	r3, [r4, #108]	; 0x6c
 80058cc:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 80058d0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80058d4:	a90c      	add	r1, sp, #48	; 0x30
 80058d6:	4650      	mov	r0, sl
 80058d8:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80058dc:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80058e0:	f00e f8bf 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80058e4:	4648      	mov	r0, r9
 80058e6:	f7fd f8b5 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 80058ea:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80058ee:	4b54      	ldr	r3, [pc, #336]	; (8005a40 <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 80058f0:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80058f4:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80058f8:	4638      	mov	r0, r7
 80058fa:	f00c fda5 	bl	8012448 <_ZN8touchgfx4LineC1Ev>
 80058fe:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005902:	4618      	mov	r0, r3
 8005904:	9303      	str	r3, [sp, #12]
 8005906:	f7fc fe45 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800590a:	4b4e      	ldr	r3, [pc, #312]	; (8005a44 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 800590c:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005910:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005914:	3324      	adds	r3, #36	; 0x24
 8005916:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 800591a:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800591e:	4640      	mov	r0, r8
 8005920:	f7fd f898 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8005924:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005928:	4618      	mov	r0, r3
 800592a:	ee08 3a10 	vmov	s16, r3
 800592e:	f7fd f891 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8005932:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005936:	4618      	mov	r0, r3
 8005938:	ee08 3a90 	vmov	s17, r3
 800593c:	f7fd f88a 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8005940:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005944:	4618      	mov	r0, r3
 8005946:	ee09 3a10 	vmov	s18, r3
 800594a:	f00e f9c1 	bl	8013cd0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800594e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005952:	4618      	mov	r0, r3
 8005954:	ee09 3a90 	vmov	s19, r3
 8005958:	f00e f9ba 	bl	8013cd0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800595c:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005960:	4618      	mov	r0, r3
 8005962:	ee0a 3a10 	vmov	s20, r3
 8005966:	f00e f9b3 	bl	8013cd0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800596a:	f504 7346 	add.w	r3, r4, #792	; 0x318
 800596e:	4618      	mov	r0, r3
 8005970:	ee0a 3a90 	vmov	s21, r3
 8005974:	f00e f84e 	bl	8013a14 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005978:	4a33      	ldr	r2, [pc, #204]	; (8005a48 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 800597a:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800597e:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 8005982:	4a32      	ldr	r2, [pc, #200]	; (8005a4c <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005984:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005988:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 800598c:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8005990:	f00f f85a 	bl	8014a48 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005994:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005998:	462a      	mov	r2, r5
 800599a:	4658      	mov	r0, fp
 800599c:	9300      	str	r3, [sp, #0]
 800599e:	4629      	mov	r1, r5
 80059a0:	23f0      	movs	r3, #240	; 0xf0
 80059a2:	f7fc ffce 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 80059a6:	1d26      	adds	r6, r4, #4
        color = newColor;
 80059a8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80059ac:	66a3      	str	r3, [r4, #104]	; 0x68
 80059ae:	4659      	mov	r1, fp
 80059b0:	4630      	mov	r0, r6
 80059b2:	f00a fc7d 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80059b6:	462a      	mov	r2, r5
 80059b8:	4650      	mov	r0, sl
 80059ba:	4629      	mov	r1, r5
 80059bc:	f7fc ffb4 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80059c0:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80059c2:	4650      	mov	r0, sl
 80059c4:	a90c      	add	r1, sp, #48	; 0x30
 80059c6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80059ca:	f00e f84a 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80059ce:	4651      	mov	r1, sl
 80059d0:	4630      	mov	r0, r6
 80059d2:	f00a fc6d 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 80059d6:	f44f 729a 	mov.w	r2, #308	; 0x134
 80059da:	2156      	movs	r1, #86	; 0x56
 80059dc:	4648      	mov	r0, r9
 80059de:	f7fc ffa3 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80059e2:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80059e6:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80059ea:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80059ee:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80059f2:	4650      	mov	r0, sl
 80059f4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80059f8:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80059fc:	4649      	mov	r1, r9
 80059fe:	4798      	blx	r3
 8005a00:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005a04:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005a08:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005a0c:	4b10      	ldr	r3, [pc, #64]	; (8005a50 <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 8005a0e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8005a10:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8005a14:	b92b      	cbnz	r3, 8005a22 <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 8005a16:	4b0f      	ldr	r3, [pc, #60]	; (8005a54 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 8005a18:	4a0f      	ldr	r2, [pc, #60]	; (8005a58 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005a1a:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005a1c:	480f      	ldr	r0, [pc, #60]	; (8005a5c <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 8005a1e:	f025 fbe7 	bl	802b1f0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005a22:	4b0f      	ldr	r3, [pc, #60]	; (8005a60 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005a24:	881b      	ldrh	r3, [r3, #0]
 8005a26:	2b38      	cmp	r3, #56	; 0x38
 8005a28:	d81e      	bhi.n	8005a68 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 8005a2a:	4b0e      	ldr	r3, [pc, #56]	; (8005a64 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 8005a2c:	4a0a      	ldr	r2, [pc, #40]	; (8005a58 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005a2e:	2161      	movs	r1, #97	; 0x61
 8005a30:	e7f4      	b.n	8005a1c <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 8005a32:	bf00      	nop
 8005a34:	0802e320 	.word	0x0802e320
 8005a38:	0802f2d4 	.word	0x0802f2d4
 8005a3c:	0802f520 	.word	0x0802f520
 8005a40:	0802ce20 	.word	0x0802ce20
 8005a44:	0802f008 	.word	0x0802f008
 8005a48:	0802e308 	.word	0x0802e308
 8005a4c:	08005819 	.word	0x08005819
 8005a50:	20013874 	.word	0x20013874
 8005a54:	0802cbd0 	.word	0x0802cbd0
 8005a58:	0802ccd5 	.word	0x0802ccd5
 8005a5c:	0802cc4d 	.word	0x0802cc4d
 8005a60:	20013878 	.word	0x20013878
 8005a64:	0802cc94 	.word	0x0802cc94
        return texts->getText(typedTextId);
 8005a68:	4ba5      	ldr	r3, [pc, #660]	; (8005d00 <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 8005a6a:	2138      	movs	r1, #56	; 0x38
 8005a6c:	6818      	ldr	r0, [r3, #0]
 8005a6e:	f002 fdaf 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 8005a72:	4aa4      	ldr	r2, [pc, #656]	; (8005d04 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 8005a74:	4603      	mov	r3, r0
 8005a76:	2104      	movs	r1, #4
 8005a78:	4650      	mov	r0, sl
 8005a7a:	f013 fe9f 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 8005a7e:	4648      	mov	r0, r9
        wc1 = value;
 8005a80:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8005a84:	f00d fa1c 	bl	8012ec0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005a88:	4b9f      	ldr	r3, [pc, #636]	; (8005d08 <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 8005a8a:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8005a8c:	a90c      	add	r1, sp, #48	; 0x30
 8005a8e:	2339      	movs	r3, #57	; 0x39
 8005a90:	4648      	mov	r0, r9
 8005a92:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005a96:	f00d fa33 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005a9a:	4649      	mov	r1, r9
 8005a9c:	4630      	mov	r0, r6
 8005a9e:	f00a fc07 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005aa2:	230a      	movs	r3, #10
 8005aa4:	9300      	str	r3, [sp, #0]
 8005aa6:	2232      	movs	r2, #50	; 0x32
 8005aa8:	23f0      	movs	r3, #240	; 0xf0
 8005aaa:	4629      	mov	r1, r5
 8005aac:	4638      	mov	r0, r7
 8005aae:	f7fc ff48 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005ab2:	9b03      	ldr	r3, [sp, #12]
 8005ab4:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005ab8:	22a0      	movs	r2, #160	; 0xa0
 8005aba:	4611      	mov	r1, r2
 8005abc:	4638      	mov	r0, r7
 8005abe:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005ac2:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005ac6:	f00c fdd5 	bl	8012674 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005aca:	22a0      	movs	r2, #160	; 0xa0
 8005acc:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005ad0:	4638      	mov	r0, r7
 8005ad2:	f00c fdda 	bl	801268a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005ad6:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005ada:	2b20      	cmp	r3, #32
 8005adc:	d005      	beq.n	8005aea <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 8005ade:	2320      	movs	r3, #32
 8005ae0:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005ae4:	4638      	mov	r0, r7
 8005ae6:	f00c fccf 	bl	8012488 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005aea:	4638      	mov	r0, r7
 8005aec:	2101      	movs	r1, #1
 8005aee:	f00c fdd7 	bl	80126a0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005af2:	4639      	mov	r1, r7
 8005af4:	4630      	mov	r0, r6
 8005af6:	ad04      	add	r5, sp, #16
        color = newColor;
 8005af8:	f04f 37ff 	mov.w	r7, #4294967295
 8005afc:	f00a fbd8 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005b00:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005b04:	2223      	movs	r2, #35	; 0x23
 8005b06:	4640      	mov	r0, r8
 8005b08:	2145      	movs	r1, #69	; 0x45
 8005b0a:	f7fc ff0d 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005b0e:	4641      	mov	r1, r8
 8005b10:	4628      	mov	r0, r5
        color = newColor;
 8005b12:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8005b16:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8005b1a:	f00c ff57 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005b1e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8005b22:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8005b26:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005b2a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005b2e:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 8005d08 <_ZN17Main_MenuViewBaseC1Ev+0x494>
 8005b32:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005b36:	2353      	movs	r3, #83	; 0x53
 8005b38:	4649      	mov	r1, r9
 8005b3a:	4640      	mov	r0, r8
 8005b3c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005b40:	f00d f9de 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005b44:	4641      	mov	r1, r8
 8005b46:	4630      	mov	r0, r6
 8005b48:	f00a fbb2 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005b4c:	ee18 0a10 	vmov	r0, s16
 8005b50:	220c      	movs	r2, #12
 8005b52:	2136      	movs	r1, #54	; 0x36
 8005b54:	f7fc fee8 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8005b58:	ee18 1a10 	vmov	r1, s16
 8005b5c:	4628      	mov	r0, r5
        color = newColor;
 8005b5e:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8005b62:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005b66:	f00c ff31 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005b6a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005b6e:	ee18 3a10 	vmov	r3, s16
 8005b72:	333c      	adds	r3, #60	; 0x3c
 8005b74:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005b78:	2354      	movs	r3, #84	; 0x54
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 8005b7a:	ee18 0a10 	vmov	r0, s16
 8005b7e:	4649      	mov	r1, r9
 8005b80:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005b84:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005b88:	f00d f9ba 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005b8c:	ee18 1a10 	vmov	r1, s16
 8005b90:	4630      	mov	r0, r6
 8005b92:	f00a fb8d 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 8005b96:	ee18 0a90 	vmov	r0, s17
 8005b9a:	223c      	movs	r2, #60	; 0x3c
 8005b9c:	2158      	movs	r1, #88	; 0x58
 8005b9e:	f7fc fec3 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8005ba2:	ee18 1a90 	vmov	r1, s17
 8005ba6:	4628      	mov	r0, r5
        color = newColor;
 8005ba8:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8005bac:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005bb0:	f00c ff0c 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005bb4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005bb8:	ee18 3a90 	vmov	r3, s17
 8005bbc:	333c      	adds	r3, #60	; 0x3c
 8005bbe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005bc2:	2328      	movs	r3, #40	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8005bc4:	ee18 0a90 	vmov	r0, s17
 8005bc8:	4649      	mov	r1, r9
 8005bca:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005bce:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005bd2:	f00d f995 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005bd6:	ee18 1a90 	vmov	r1, s17
 8005bda:	4630      	mov	r0, r6
 8005bdc:	f00a fb68 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005be0:	ee19 0a10 	vmov	r0, s18
 8005be4:	22f0      	movs	r2, #240	; 0xf0
 8005be6:	2121      	movs	r1, #33	; 0x21
 8005be8:	f7fc fe9e 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8005bec:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005bf0:	464a      	mov	r2, r9
 8005bf2:	f04f 0802 	mov.w	r8, #2
 8005bf6:	a90b      	add	r1, sp, #44	; 0x2c
 8005bf8:	ee19 0a10 	vmov	r0, s18
 8005bfc:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005c00:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8005c04:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005c08:	f00d fd35 	bl	8013676 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005c0c:	2355      	movs	r3, #85	; 0x55
 8005c0e:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005c12:	350c      	adds	r5, #12
        updateTextPosition();
 8005c14:	ee19 0a10 	vmov	r0, s18
 8005c18:	f7fc feca 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005c1c:	ee19 1a10 	vmov	r1, s18
 8005c20:	4630      	mov	r0, r6
        colorPressed = col;
 8005c22:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8005c26:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8005c2a:	f00a fb41 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005c2e:	ee19 0a90 	vmov	r0, s19
 8005c32:	22aa      	movs	r2, #170	; 0xaa
 8005c34:	2121      	movs	r1, #33	; 0x21
 8005c36:	f7fc fe77 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005c3a:	464a      	mov	r2, r9
 8005c3c:	a90b      	add	r1, sp, #44	; 0x2c
 8005c3e:	ee19 0a90 	vmov	r0, s19
 8005c42:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005c46:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8005c4a:	f00d fd14 	bl	8013676 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005c4e:	2356      	movs	r3, #86	; 0x56
 8005c50:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005c54:	ee19 0a90 	vmov	r0, s19
 8005c58:	f7fc feaa 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005c5c:	ee19 1a90 	vmov	r1, s19
 8005c60:	4630      	mov	r0, r6
        colorPressed = col;
 8005c62:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8005c66:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8005c6a:	f00a fb21 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005c6e:	ee1a 0a10 	vmov	r0, s20
 8005c72:	2264      	movs	r2, #100	; 0x64
 8005c74:	2121      	movs	r1, #33	; 0x21
 8005c76:	f7fc fe57 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005c7a:	464a      	mov	r2, r9
 8005c7c:	a90b      	add	r1, sp, #44	; 0x2c
 8005c7e:	ee1a 0a10 	vmov	r0, s20
 8005c82:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005c86:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8005c8a:	f00d fcf4 	bl	8013676 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005c8e:	2357      	movs	r3, #87	; 0x57
 8005c90:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 8005c94:	ee1a 0a10 	vmov	r0, s20
 8005c98:	f7fc fe8a 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005c9c:	ee1a 1a10 	vmov	r1, s20
 8005ca0:	4630      	mov	r0, r6
        colorPressed = col;
 8005ca2:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8005ca6:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8005caa:	f00a fb01 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 8005cae:	ee1a 0a90 	vmov	r0, s21
 8005cb2:	2205      	movs	r2, #5
 8005cb4:	21c6      	movs	r1, #198	; 0xc6
 8005cb6:	f7fc fe37 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8005cba:	2301      	movs	r3, #1
 8005cbc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005cc0:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 8005cc2:	ee1a 0a90 	vmov	r0, s21
 8005cc6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005cca:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005cce:	aa0a      	add	r2, sp, #40	; 0x28
 8005cd0:	ab0b      	add	r3, sp, #44	; 0x2c
 8005cd2:	a909      	add	r1, sp, #36	; 0x24
 8005cd4:	f8cd 9000 	str.w	r9, [sp]
 8005cd8:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8005cdc:	f00d fe05 	bl	80138ea <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8005ce0:	4630      	mov	r0, r6
 8005ce2:	ee1a 1a90 	vmov	r1, s21
 8005ce6:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 8005cea:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 8005cee:	f00a fadf 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005cf2:	4620      	mov	r0, r4
 8005cf4:	b00f      	add	sp, #60	; 0x3c
 8005cf6:	ecbd 8b06 	vpop	{d8-d10}
 8005cfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005cfe:	bf00      	nop
 8005d00:	20013880 	.word	0x20013880
 8005d04:	0802cd0d 	.word	0x0802cd0d
 8005d08:	0802cd80 	.word	0x0802cd80

08005d0c <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8005d0c:	4770      	bx	lr

08005d0e <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005d0e:	4770      	bx	lr

08005d10 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005d10:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005d12:	68c2      	ldr	r2, [r0, #12]
 8005d14:	6844      	ldr	r4, [r0, #4]
 8005d16:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005d18:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005d1a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005d1e:	07d2      	lsls	r2, r2, #31
 8005d20:	bf48      	it	mi
 8005d22:	5962      	ldrmi	r2, [r4, r5]
 8005d24:	689b      	ldr	r3, [r3, #8]
    }
 8005d26:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005d28:	bf48      	it	mi
 8005d2a:	58d3      	ldrmi	r3, [r2, r3]
 8005d2c:	4718      	bx	r3

08005d2e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005d2e:	6843      	ldr	r3, [r0, #4]
 8005d30:	b12b      	cbz	r3, 8005d3e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005d32:	6883      	ldr	r3, [r0, #8]
 8005d34:	b92b      	cbnz	r3, 8005d42 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005d36:	68c0      	ldr	r0, [r0, #12]
 8005d38:	f000 0001 	and.w	r0, r0, #1
 8005d3c:	4770      	bx	lr
 8005d3e:	4618      	mov	r0, r3
 8005d40:	4770      	bx	lr
 8005d42:	2001      	movs	r0, #1
    }
 8005d44:	4770      	bx	lr

08005d46 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005d46:	b510      	push	{r4, lr}
 8005d48:	2110      	movs	r1, #16
 8005d4a:	4604      	mov	r4, r0
 8005d4c:	f024 fc3d 	bl	802a5ca <_ZdlPvj>
 8005d50:	4620      	mov	r0, r4
 8005d52:	bd10      	pop	{r4, pc}

08005d54 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8005d54:	b510      	push	{r4, lr}
 8005d56:	4b03      	ldr	r3, [pc, #12]	; (8005d64 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 8005d58:	6003      	str	r3, [r0, #0]
 8005d5a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005d5c:	f00e fe7e 	bl	8014a5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005d60:	4620      	mov	r0, r4
 8005d62:	bd10      	pop	{r4, pc}
 8005d64:	0802e36c 	.word	0x0802e36c

08005d68 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8005d68:	b507      	push	{r0, r1, r2, lr}
 8005d6a:	4b07      	ldr	r3, [pc, #28]	; (8005d88 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8005d6c:	6003      	str	r3, [r0, #0]
 8005d6e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005d70:	f00e fe74 	bl	8014a5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005d74:	9801      	ldr	r0, [sp, #4]
 8005d76:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8005d7a:	f024 fc26 	bl	802a5ca <_ZdlPvj>
 8005d7e:	9801      	ldr	r0, [sp, #4]
 8005d80:	b003      	add	sp, #12
 8005d82:	f85d fb04 	ldr.w	pc, [sp], #4
 8005d86:	bf00      	nop
 8005d88:	0802e36c 	.word	0x0802e36c

08005d8c <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005d8c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8005d8e:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8005d92:	4299      	cmp	r1, r3
{
 8005d94:	4604      	mov	r4, r0
 8005d96:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8005d98:	d103      	bne.n	8005da2 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005d9a:	f010 fb61 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8005d9e:	f7fe fbe5 	bl	800456c <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8005da2:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005da6:	429d      	cmp	r5, r3
 8005da8:	d103      	bne.n	8005db2 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005daa:	f010 fb59 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8005dae:	f7fe fc0d 	bl	80045cc <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8005db2:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8005db6:	42a5      	cmp	r5, r4
 8005db8:	d105      	bne.n	8005dc6 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005dba:	f010 fb51 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 8005dbe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 8005dc2:	f7fe bc33 	b.w	800462c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 8005dc6:	bd38      	pop	{r3, r4, r5, pc}

08005dc8 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 8005dc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005dcc:	ed2d 8b06 	vpush	{d8-d10}
 8005dd0:	4604      	mov	r4, r0
 8005dd2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8005dd4:	46a3      	mov	fp, r4
 8005dd6:	2500      	movs	r5, #0
 8005dd8:	f011 ffc2 	bl	8017d60 <_ZN8touchgfx6ScreenC1Ev>
 8005ddc:	4b66      	ldr	r3, [pc, #408]	; (8005f78 <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 8005dde:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005de0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005de4:	2226      	movs	r2, #38	; 0x26
 8005de6:	4629      	mov	r1, r5
 8005de8:	4658      	mov	r0, fp
 8005dea:	f025 fc06 	bl	802b5fa <memset>
 8005dee:	4658      	mov	r0, fp
 8005df0:	f7fc fdcc 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8005df4:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005df8:	26ff      	movs	r6, #255	; 0xff
 8005dfa:	4b60      	ldr	r3, [pc, #384]	; (8005f7c <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8005dfc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005dfe:	2226      	movs	r2, #38	; 0x26
 8005e00:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005e04:	4629      	mov	r1, r5
 8005e06:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005e0a:	4650      	mov	r0, sl
 8005e0c:	66a5      	str	r5, [r4, #104]	; 0x68
 8005e0e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005e12:	f025 fbf2 	bl	802b5fa <memset>
 8005e16:	4650      	mov	r0, sl
 8005e18:	f7fc fdb8 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8005e1c:	4b58      	ldr	r3, [pc, #352]	; (8005f80 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 8005e1e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005e20:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005e24:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005e28:	a90a      	add	r1, sp, #40	; 0x28
 8005e2a:	4650      	mov	r0, sl
 8005e2c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005e30:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005e34:	f00d fe15 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005e38:	4648      	mov	r0, r9
 8005e3a:	f7fc fe0b 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005e3e:	4b51      	ldr	r3, [pc, #324]	; (8005f84 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 8005e40:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005e44:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8005e48:	4618      	mov	r0, r3
 8005e4a:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005e4e:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8005e52:	ee08 3a90 	vmov	s17, r3
 8005e56:	f7fc fdfd 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8005e5a:	4638      	mov	r0, r7
 8005e5c:	f00c faf4 	bl	8012448 <_ZN8touchgfx4LineC1Ev>
 8005e60:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005e64:	4618      	mov	r0, r3
 8005e66:	9303      	str	r3, [sp, #12]
 8005e68:	f7fc fb94 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005e6c:	4b46      	ldr	r3, [pc, #280]	; (8005f88 <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 8005e6e:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8005e72:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8005e76:	3324      	adds	r3, #36	; 0x24
 8005e78:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8005e7c:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8005e80:	4640      	mov	r0, r8
 8005e82:	f7fc fde7 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8005e86:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005e8a:	4618      	mov	r0, r3
 8005e8c:	ee08 3a10 	vmov	s16, r3
 8005e90:	f7fc fde0 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8005e94:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005e98:	4618      	mov	r0, r3
 8005e9a:	ee09 3a10 	vmov	s18, r3
 8005e9e:	f00d ff17 	bl	8013cd0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005ea2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005ea6:	4618      	mov	r0, r3
 8005ea8:	ee09 3a90 	vmov	s19, r3
 8005eac:	f00d ff10 	bl	8013cd0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005eb0:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005eb4:	4618      	mov	r0, r3
 8005eb6:	ee0a 3a10 	vmov	s20, r3
 8005eba:	f00d ff09 	bl	8013cd0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005ebe:	4a33      	ldr	r2, [pc, #204]	; (8005f8c <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 8005ec0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005ec4:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8005ec8:	4a31      	ldr	r2, [pc, #196]	; (8005f90 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005eca:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005ece:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005ed2:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8005ed6:	f00e fdb7 	bl	8014a48 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005eda:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005ede:	462a      	mov	r2, r5
 8005ee0:	4658      	mov	r0, fp
 8005ee2:	9300      	str	r3, [sp, #0]
 8005ee4:	4629      	mov	r1, r5
 8005ee6:	23f0      	movs	r3, #240	; 0xf0
 8005ee8:	f7fc fd2b 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005eec:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005eee:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005ef2:	66a3      	str	r3, [r4, #104]	; 0x68
 8005ef4:	4659      	mov	r1, fp
 8005ef6:	4630      	mov	r0, r6
 8005ef8:	f00a f9da 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005efc:	462a      	mov	r2, r5
 8005efe:	4650      	mov	r0, sl
 8005f00:	4629      	mov	r1, r5
 8005f02:	f7fc fd11 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8005f06:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005f08:	4650      	mov	r0, sl
 8005f0a:	a90a      	add	r1, sp, #40	; 0x28
 8005f0c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005f10:	f00d fda7 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005f14:	4651      	mov	r1, sl
 8005f16:	4630      	mov	r0, r6
 8005f18:	f00a f9ca 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005f1c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005f20:	2156      	movs	r1, #86	; 0x56
 8005f22:	4648      	mov	r0, r9
 8005f24:	f7fc fd00 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005f28:	f04f 33ff 	mov.w	r3, #4294967295
 8005f2c:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005f30:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005f34:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005f38:	f10d 0b10 	add.w	fp, sp, #16
 8005f3c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005f40:	4649      	mov	r1, r9
 8005f42:	4658      	mov	r0, fp
 8005f44:	4798      	blx	r3
 8005f46:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005f4a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005f4e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005f52:	4b10      	ldr	r3, [pc, #64]	; (8005f94 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 8005f54:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 8005f56:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8005f5a:	b92b      	cbnz	r3, 8005f68 <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 8005f5c:	4b0e      	ldr	r3, [pc, #56]	; (8005f98 <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 8005f5e:	4a0f      	ldr	r2, [pc, #60]	; (8005f9c <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8005f60:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005f62:	480f      	ldr	r0, [pc, #60]	; (8005fa0 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8005f64:	f025 f944 	bl	802b1f0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005f68:	4b0e      	ldr	r3, [pc, #56]	; (8005fa4 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005f6a:	881b      	ldrh	r3, [r3, #0]
 8005f6c:	2b29      	cmp	r3, #41	; 0x29
 8005f6e:	d81d      	bhi.n	8005fac <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 8005f70:	4b0d      	ldr	r3, [pc, #52]	; (8005fa8 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8005f72:	4a0a      	ldr	r2, [pc, #40]	; (8005f9c <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8005f74:	2161      	movs	r1, #97	; 0x61
 8005f76:	e7f4      	b.n	8005f62 <_ZN19MeasurementViewBaseC1Ev+0x19a>
 8005f78:	0802e36c 	.word	0x0802e36c
 8005f7c:	0802f2d4 	.word	0x0802f2d4
 8005f80:	0802f520 	.word	0x0802f520
 8005f84:	0802ce20 	.word	0x0802ce20
 8005f88:	0802f008 	.word	0x0802f008
 8005f8c:	0802e354 	.word	0x0802e354
 8005f90:	08005d8d 	.word	0x08005d8d
 8005f94:	20013874 	.word	0x20013874
 8005f98:	0802cbd0 	.word	0x0802cbd0
 8005f9c:	0802ccd5 	.word	0x0802ccd5
 8005fa0:	0802cc4d 	.word	0x0802cc4d
 8005fa4:	20013878 	.word	0x20013878
 8005fa8:	0802cc94 	.word	0x0802cc94
        return texts->getText(typedTextId);
 8005fac:	4b95      	ldr	r3, [pc, #596]	; (8006204 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 8005fae:	2129      	movs	r1, #41	; 0x29
 8005fb0:	6818      	ldr	r0, [r3, #0]
 8005fb2:	f002 fb0d 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 8005fb6:	4a94      	ldr	r2, [pc, #592]	; (8006208 <_ZN19MeasurementViewBaseC1Ev+0x440>)
 8005fb8:	4603      	mov	r3, r0
 8005fba:	2104      	movs	r1, #4
 8005fbc:	4650      	mov	r0, sl
 8005fbe:	f013 fbfd 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8005fc2:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8005fc6:	4648      	mov	r0, r9
 8005fc8:	f00c ff7a 	bl	8012ec0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005fcc:	f8df a23c 	ldr.w	sl, [pc, #572]	; 800620c <_ZN19MeasurementViewBaseC1Ev+0x444>
 8005fd0:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005fd4:	232a      	movs	r3, #42	; 0x2a
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 8005fd6:	a90a      	add	r1, sp, #40	; 0x28
 8005fd8:	4648      	mov	r0, r9
 8005fda:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005fde:	f00c ff8f 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005fe2:	4649      	mov	r1, r9
 8005fe4:	4630      	mov	r0, r6
 8005fe6:	f00a f963 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 8005fea:	223c      	movs	r2, #60	; 0x3c
 8005fec:	ee18 0a90 	vmov	r0, s17
 8005ff0:	213d      	movs	r1, #61	; 0x3d
 8005ff2:	f7fc fc99 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005ff6:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8005ffa:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8005ffe:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006002:	4658      	mov	r0, fp
        linespace = space;
 8006004:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8006008:	f00c fce0 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800600c:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006010:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8006014:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006018:	2337      	movs	r3, #55	; 0x37
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 800601a:	ee18 0a90 	vmov	r0, s17
 800601e:	a90a      	add	r1, sp, #40	; 0x28
 8006020:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006024:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006028:	f00c ff6a 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800602c:	ee18 1a90 	vmov	r1, s17
 8006030:	4630      	mov	r0, r6
 8006032:	f00a f93d 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006036:	230a      	movs	r3, #10
 8006038:	9300      	str	r3, [sp, #0]
 800603a:	2232      	movs	r2, #50	; 0x32
 800603c:	23f0      	movs	r3, #240	; 0xf0
 800603e:	4629      	mov	r1, r5
 8006040:	4638      	mov	r0, r7
 8006042:	f7fc fc7e 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006046:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800604a:	22a0      	movs	r2, #160	; 0xa0
 800604c:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006050:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006054:	9b03      	ldr	r3, [sp, #12]
 8006056:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800605a:	4611      	mov	r1, r2
 800605c:	4638      	mov	r0, r7
 800605e:	f00c fb09 	bl	8012674 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006062:	22a0      	movs	r2, #160	; 0xa0
 8006064:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006068:	4638      	mov	r0, r7
 800606a:	f00c fb0e 	bl	801268a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800606e:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8006072:	2b20      	cmp	r3, #32
 8006074:	d005      	beq.n	8006082 <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8006076:	2320      	movs	r3, #32
 8006078:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 800607c:	4638      	mov	r0, r7
 800607e:	f00c fa03 	bl	8012488 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006082:	4638      	mov	r0, r7
 8006084:	2101      	movs	r1, #1
 8006086:	f00c fb0b 	bl	80126a0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800608a:	4639      	mov	r1, r7
 800608c:	4630      	mov	r0, r6
 800608e:	f00a f90f 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006092:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8006096:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8006098:	2223      	movs	r2, #35	; 0x23
 800609a:	4640      	mov	r0, r8
        linespace = space;
 800609c:	f04f 0a00 	mov.w	sl, #0
 80060a0:	2145      	movs	r1, #69	; 0x45
 80060a2:	f7fc fc41 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80060a6:	4641      	mov	r1, r8
 80060a8:	4638      	mov	r0, r7
        color = newColor;
 80060aa:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 80060ae:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80060b2:	f00c fc8b 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80060b6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80060ba:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80060be:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80060c2:	f8df 9148 	ldr.w	r9, [pc, #328]	; 800620c <_ZN19MeasurementViewBaseC1Ev+0x444>
 80060c6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80060ca:	2351      	movs	r3, #81	; 0x51
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 80060cc:	a90a      	add	r1, sp, #40	; 0x28
 80060ce:	4640      	mov	r0, r8
 80060d0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80060d4:	f00c ff14 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80060d8:	4641      	mov	r1, r8
 80060da:	4630      	mov	r0, r6
 80060dc:	f00a f8e8 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80060e0:	ee18 0a10 	vmov	r0, s16
 80060e4:	220c      	movs	r2, #12
 80060e6:	2136      	movs	r1, #54	; 0x36
 80060e8:	f7fc fc1e 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80060ec:	ee18 1a10 	vmov	r1, s16
 80060f0:	4638      	mov	r0, r7
        color = newColor;
 80060f2:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 80060f6:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80060fa:	f00c fc67 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80060fe:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006102:	ee18 3a10 	vmov	r3, s16
 8006106:	333c      	adds	r3, #60	; 0x3c
 8006108:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800610c:	2352      	movs	r3, #82	; 0x52
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 800610e:	ee18 0a10 	vmov	r0, s16
 8006112:	a90a      	add	r1, sp, #40	; 0x28
 8006114:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006118:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800611c:	f00c fef0 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006120:	ee18 1a10 	vmov	r1, s16
 8006124:	4630      	mov	r0, r6
 8006126:	f00a f8c3 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800612a:	ee19 0a10 	vmov	r0, s18
 800612e:	22f0      	movs	r2, #240	; 0xf0
 8006130:	2121      	movs	r1, #33	; 0x21
 8006132:	f7fc fbf9 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8006136:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800613a:	aa0a      	add	r2, sp, #40	; 0x28
 800613c:	f04f 0802 	mov.w	r8, #2
 8006140:	a909      	add	r1, sp, #36	; 0x24
 8006142:	ee19 0a10 	vmov	r0, s18
 8006146:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800614a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 800614e:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006152:	f00d fa90 	bl	8013676 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006156:	2350      	movs	r3, #80	; 0x50
 8006158:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 800615c:	3710      	adds	r7, #16
        updateTextPosition();
 800615e:	ee19 0a10 	vmov	r0, s18
 8006162:	f7fc fc25 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006166:	ee19 1a10 	vmov	r1, s18
 800616a:	4630      	mov	r0, r6
        colorPressed = col;
 800616c:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006170:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006174:	f00a f89c 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006178:	ee19 0a90 	vmov	r0, s19
 800617c:	22aa      	movs	r2, #170	; 0xaa
 800617e:	2121      	movs	r1, #33	; 0x21
 8006180:	f7fc fbd2 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006184:	aa0a      	add	r2, sp, #40	; 0x28
 8006186:	a909      	add	r1, sp, #36	; 0x24
 8006188:	ee19 0a90 	vmov	r0, s19
 800618c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006190:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006194:	f00d fa6f 	bl	8013676 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006198:	234f      	movs	r3, #79	; 0x4f
 800619a:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 800619e:	ee19 0a90 	vmov	r0, s19
 80061a2:	f7fc fc05 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80061a6:	ee19 1a90 	vmov	r1, s19
 80061aa:	4630      	mov	r0, r6
        colorPressed = col;
 80061ac:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 80061b0:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 80061b4:	f00a f87c 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80061b8:	ee1a 0a10 	vmov	r0, s20
 80061bc:	2264      	movs	r2, #100	; 0x64
 80061be:	2121      	movs	r1, #33	; 0x21
 80061c0:	f7fc fbb2 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80061c4:	aa0a      	add	r2, sp, #40	; 0x28
 80061c6:	a909      	add	r1, sp, #36	; 0x24
 80061c8:	ee1a 0a10 	vmov	r0, s20
 80061cc:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80061d0:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80061d4:	f00d fa4f 	bl	8013676 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80061d8:	234e      	movs	r3, #78	; 0x4e
        updateTextPosition();
 80061da:	ee1a 0a10 	vmov	r0, s20
 80061de:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 80061e2:	f7fc fbe5 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80061e6:	4630      	mov	r0, r6
        colorPressed = col;
 80061e8:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 80061ec:	ee1a 1a10 	vmov	r1, s20
 80061f0:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 80061f4:	f00a f85c 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80061f8:	4620      	mov	r0, r4
 80061fa:	b00d      	add	sp, #52	; 0x34
 80061fc:	ecbd 8b06 	vpop	{d8-d10}
 8006200:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006204:	20013880 	.word	0x20013880
 8006208:	0802cd0d 	.word	0x0802cd0d
 800620c:	0802cd80 	.word	0x0802cd80

08006210 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8006210:	4770      	bx	lr

08006212 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006212:	4770      	bx	lr

08006214 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006214:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006216:	68c2      	ldr	r2, [r0, #12]
 8006218:	6844      	ldr	r4, [r0, #4]
 800621a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800621c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800621e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006222:	07d2      	lsls	r2, r2, #31
 8006224:	bf48      	it	mi
 8006226:	5962      	ldrmi	r2, [r4, r5]
 8006228:	689b      	ldr	r3, [r3, #8]
    }
 800622a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800622c:	bf48      	it	mi
 800622e:	58d3      	ldrmi	r3, [r2, r3]
 8006230:	4718      	bx	r3

08006232 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006232:	6843      	ldr	r3, [r0, #4]
 8006234:	b12b      	cbz	r3, 8006242 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006236:	6883      	ldr	r3, [r0, #8]
 8006238:	b92b      	cbnz	r3, 8006246 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800623a:	68c0      	ldr	r0, [r0, #12]
 800623c:	f000 0001 	and.w	r0, r0, #1
 8006240:	4770      	bx	lr
 8006242:	4618      	mov	r0, r3
 8006244:	4770      	bx	lr
 8006246:	2001      	movs	r0, #1
    }
 8006248:	4770      	bx	lr

0800624a <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800624a:	b510      	push	{r4, lr}
 800624c:	2110      	movs	r1, #16
 800624e:	4604      	mov	r4, r0
 8006250:	f024 f9bb 	bl	802a5ca <_ZdlPvj>
 8006254:	4620      	mov	r0, r4
 8006256:	bd10      	pop	{r4, pc}

08006258 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8006258:	b510      	push	{r4, lr}
 800625a:	4b03      	ldr	r3, [pc, #12]	; (8006268 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 800625c:	6003      	str	r3, [r0, #0]
 800625e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006260:	f00e fbfc 	bl	8014a5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006264:	4620      	mov	r0, r4
 8006266:	bd10      	pop	{r4, pc}
 8006268:	0802e3b8 	.word	0x0802e3b8

0800626c <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 800626c:	b507      	push	{r0, r1, r2, lr}
 800626e:	4b07      	ldr	r3, [pc, #28]	; (800628c <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8006270:	6003      	str	r3, [r0, #0]
 8006272:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006274:	f00e fbf2 	bl	8014a5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006278:	9801      	ldr	r0, [sp, #4]
 800627a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800627e:	f024 f9a4 	bl	802a5ca <_ZdlPvj>
 8006282:	9801      	ldr	r0, [sp, #4]
 8006284:	b003      	add	sp, #12
 8006286:	f85d fb04 	ldr.w	pc, [sp], #4
 800628a:	bf00      	nop
 800628c:	0802e3b8 	.word	0x0802e3b8

08006290 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006290:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006292:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8006296:	4299      	cmp	r1, r3
{
 8006298:	4604      	mov	r4, r0
 800629a:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 800629c:	d103      	bne.n	80062a6 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800629e:	f010 f8df 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80062a2:	f7fe f983 	bl	80045ac <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 80062a6:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80062aa:	429d      	cmp	r5, r3
 80062ac:	d103      	bne.n	80062b6 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80062ae:	f010 f8d7 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 80062b2:	f7fe f9eb 	bl	800468c <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 80062b6:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 80062ba:	42a5      	cmp	r5, r4
 80062bc:	d105      	bne.n	80062ca <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80062be:	f010 f8cf 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 80062c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 80062c6:	f7fe b9d1 	b.w	800466c <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 80062ca:	bd38      	pop	{r3, r4, r5, pc}

080062cc <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 80062cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80062d0:	ed2d 8b06 	vpush	{d8-d10}
 80062d4:	4604      	mov	r4, r0
 80062d6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 80062d8:	46a3      	mov	fp, r4
 80062da:	2500      	movs	r5, #0
 80062dc:	f011 fd40 	bl	8017d60 <_ZN8touchgfx6ScreenC1Ev>
 80062e0:	4b66      	ldr	r3, [pc, #408]	; (800647c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 80062e2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80062e4:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80062e8:	2226      	movs	r2, #38	; 0x26
 80062ea:	4629      	mov	r1, r5
 80062ec:	4658      	mov	r0, fp
 80062ee:	f025 f984 	bl	802b5fa <memset>
 80062f2:	4658      	mov	r0, fp
 80062f4:	f7fc fb4a 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 80062f8:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80062fc:	26ff      	movs	r6, #255	; 0xff
 80062fe:	4b60      	ldr	r3, [pc, #384]	; (8006480 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8006300:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006302:	2226      	movs	r2, #38	; 0x26
 8006304:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006308:	4629      	mov	r1, r5
 800630a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800630e:	4650      	mov	r0, sl
 8006310:	66a5      	str	r5, [r4, #104]	; 0x68
 8006312:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006316:	f025 f970 	bl	802b5fa <memset>
 800631a:	4650      	mov	r0, sl
 800631c:	f7fc fb36 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8006320:	4b58      	ldr	r3, [pc, #352]	; (8006484 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8006322:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006324:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006328:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800632c:	a90a      	add	r1, sp, #40	; 0x28
 800632e:	4650      	mov	r0, sl
 8006330:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006334:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006338:	f00d fb93 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 800633c:	4648      	mov	r0, r9
 800633e:	f7fc fb89 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8006342:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8006346:	4b50      	ldr	r3, [pc, #320]	; (8006488 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8006348:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 800634c:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006350:	4638      	mov	r0, r7
 8006352:	f00c f879 	bl	8012448 <_ZN8touchgfx4LineC1Ev>
 8006356:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800635a:	4618      	mov	r0, r3
 800635c:	9303      	str	r3, [sp, #12]
 800635e:	f7fc f919 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006362:	4b4a      	ldr	r3, [pc, #296]	; (800648c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8006364:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006368:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 800636c:	3324      	adds	r3, #36	; 0x24
 800636e:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8006372:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8006376:	4640      	mov	r0, r8
 8006378:	f7fc fb6c 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 800637c:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8006380:	4618      	mov	r0, r3
 8006382:	ee08 3a10 	vmov	s16, r3
 8006386:	f7fc fb65 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 800638a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800638e:	4618      	mov	r0, r3
 8006390:	ee08 3a90 	vmov	s17, r3
 8006394:	f7fc fb5e 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8006398:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800639c:	4618      	mov	r0, r3
 800639e:	ee09 3a10 	vmov	s18, r3
 80063a2:	f00d fc95 	bl	8013cd0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80063a6:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80063aa:	4618      	mov	r0, r3
 80063ac:	ee09 3a90 	vmov	s19, r3
 80063b0:	f00d fc8e 	bl	8013cd0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80063b4:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80063b8:	4618      	mov	r0, r3
 80063ba:	ee0a 3a10 	vmov	s20, r3
 80063be:	f00d fc87 	bl	8013cd0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80063c2:	4a33      	ldr	r2, [pc, #204]	; (8006490 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 80063c4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80063c8:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80063cc:	4a31      	ldr	r2, [pc, #196]	; (8006494 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80063ce:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80063d2:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80063d6:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80063da:	f00e fb35 	bl	8014a48 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80063de:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80063e2:	462a      	mov	r2, r5
 80063e4:	4658      	mov	r0, fp
 80063e6:	9300      	str	r3, [sp, #0]
 80063e8:	4629      	mov	r1, r5
 80063ea:	23f0      	movs	r3, #240	; 0xf0
 80063ec:	f7fc faa9 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 80063f0:	1d26      	adds	r6, r4, #4
        color = newColor;
 80063f2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80063f6:	66a3      	str	r3, [r4, #104]	; 0x68
 80063f8:	4659      	mov	r1, fp
 80063fa:	4630      	mov	r0, r6
 80063fc:	f009 ff58 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006400:	462a      	mov	r2, r5
 8006402:	4650      	mov	r0, sl
 8006404:	4629      	mov	r1, r5
 8006406:	f7fc fa8f 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 800640a:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800640c:	4650      	mov	r0, sl
 800640e:	a90a      	add	r1, sp, #40	; 0x28
 8006410:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006414:	f00d fb25 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006418:	4651      	mov	r1, sl
 800641a:	4630      	mov	r0, r6
 800641c:	f009 ff48 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006420:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006424:	2156      	movs	r1, #86	; 0x56
 8006426:	4648      	mov	r0, r9
 8006428:	f7fc fa7e 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 800642c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006430:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006434:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8006438:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 800643c:	4650      	mov	r0, sl
 800643e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8006442:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006446:	4649      	mov	r1, r9
 8006448:	4798      	blx	r3
 800644a:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 800644e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006452:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006456:	4b10      	ldr	r3, [pc, #64]	; (8006498 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 8006458:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 800645a:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 800645e:	b92b      	cbnz	r3, 800646c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 8006460:	4b0e      	ldr	r3, [pc, #56]	; (800649c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 8006462:	4a0f      	ldr	r2, [pc, #60]	; (80064a0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8006464:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006466:	480f      	ldr	r0, [pc, #60]	; (80064a4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 8006468:	f024 fec2 	bl	802b1f0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800646c:	4b0e      	ldr	r3, [pc, #56]	; (80064a8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800646e:	881b      	ldrh	r3, [r3, #0]
 8006470:	2b24      	cmp	r3, #36	; 0x24
 8006472:	d81d      	bhi.n	80064b0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 8006474:	4b0d      	ldr	r3, [pc, #52]	; (80064ac <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 8006476:	4a0a      	ldr	r2, [pc, #40]	; (80064a0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8006478:	2161      	movs	r1, #97	; 0x61
 800647a:	e7f4      	b.n	8006466 <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 800647c:	0802e3b8 	.word	0x0802e3b8
 8006480:	0802f2d4 	.word	0x0802f2d4
 8006484:	0802f520 	.word	0x0802f520
 8006488:	0802ce20 	.word	0x0802ce20
 800648c:	0802f008 	.word	0x0802f008
 8006490:	0802e3a0 	.word	0x0802e3a0
 8006494:	08006291 	.word	0x08006291
 8006498:	20013874 	.word	0x20013874
 800649c:	0802cbd0 	.word	0x0802cbd0
 80064a0:	0802ccd5 	.word	0x0802ccd5
 80064a4:	0802cc4d 	.word	0x0802cc4d
 80064a8:	20013878 	.word	0x20013878
 80064ac:	0802cc94 	.word	0x0802cc94
        return texts->getText(typedTextId);
 80064b0:	4b93      	ldr	r3, [pc, #588]	; (8006700 <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 80064b2:	2124      	movs	r1, #36	; 0x24
 80064b4:	6818      	ldr	r0, [r3, #0]
 80064b6:	f002 f88b 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 80064ba:	4a92      	ldr	r2, [pc, #584]	; (8006704 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 80064bc:	4603      	mov	r3, r0
 80064be:	2104      	movs	r1, #4
 80064c0:	4650      	mov	r0, sl
 80064c2:	f013 f97b 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 80064c6:	4648      	mov	r0, r9
        wc1 = value;
 80064c8:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80064cc:	f00c fcf8 	bl	8012ec0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80064d0:	4b8d      	ldr	r3, [pc, #564]	; (8006708 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 80064d2:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 80064d4:	a90a      	add	r1, sp, #40	; 0x28
 80064d6:	2325      	movs	r3, #37	; 0x25
 80064d8:	4648      	mov	r0, r9
 80064da:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80064de:	f00c fd0f 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80064e2:	4649      	mov	r1, r9
 80064e4:	4630      	mov	r0, r6
 80064e6:	f009 fee3 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80064ea:	230a      	movs	r3, #10
 80064ec:	9300      	str	r3, [sp, #0]
 80064ee:	2232      	movs	r2, #50	; 0x32
 80064f0:	23f0      	movs	r3, #240	; 0xf0
 80064f2:	4629      	mov	r1, r5
 80064f4:	4638      	mov	r0, r7
 80064f6:	f7fc fa24 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 80064fa:	9b03      	ldr	r3, [sp, #12]
 80064fc:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006500:	22a0      	movs	r2, #160	; 0xa0
 8006502:	4611      	mov	r1, r2
 8006504:	4638      	mov	r0, r7
 8006506:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 800650a:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800650e:	f00c f8b1 	bl	8012674 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006512:	22a0      	movs	r2, #160	; 0xa0
 8006514:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006518:	4638      	mov	r0, r7
 800651a:	f00c f8b6 	bl	801268a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800651e:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8006522:	2b20      	cmp	r3, #32
 8006524:	d005      	beq.n	8006532 <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 8006526:	2320      	movs	r3, #32
 8006528:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 800652c:	4638      	mov	r0, r7
 800652e:	f00b ffab 	bl	8012488 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006532:	4638      	mov	r0, r7
 8006534:	2101      	movs	r1, #1
 8006536:	f00c f8b3 	bl	80126a0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800653a:	4639      	mov	r1, r7
 800653c:	4630      	mov	r0, r6
 800653e:	ad04      	add	r5, sp, #16
        color = newColor;
 8006540:	f04f 37ff 	mov.w	r7, #4294967295
 8006544:	f009 feb4 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006548:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 800654c:	2223      	movs	r2, #35	; 0x23
 800654e:	4640      	mov	r0, r8
 8006550:	2145      	movs	r1, #69	; 0x45
 8006552:	f7fc f9e9 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006556:	4641      	mov	r1, r8
 8006558:	4628      	mov	r0, r5
        color = newColor;
 800655a:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 800655e:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8006562:	f00c fa33 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006566:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800656a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800656e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006572:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8006708 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 8006576:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800657a:	2344      	movs	r3, #68	; 0x44
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 800657c:	a90a      	add	r1, sp, #40	; 0x28
 800657e:	4640      	mov	r0, r8
 8006580:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006584:	f00c fcbc 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006588:	4641      	mov	r1, r8
 800658a:	4630      	mov	r0, r6
 800658c:	f009 fe90 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006590:	ee18 0a10 	vmov	r0, s16
 8006594:	220c      	movs	r2, #12
 8006596:	2136      	movs	r1, #54	; 0x36
 8006598:	f7fc f9c6 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 800659c:	ee18 1a10 	vmov	r1, s16
 80065a0:	4628      	mov	r0, r5
        color = newColor;
 80065a2:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80065a6:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80065aa:	f00c fa0f 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80065ae:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80065b2:	ee18 3a10 	vmov	r3, s16
 80065b6:	333c      	adds	r3, #60	; 0x3c
 80065b8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80065bc:	2343      	movs	r3, #67	; 0x43
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 80065be:	ee18 0a10 	vmov	r0, s16
 80065c2:	a90a      	add	r1, sp, #40	; 0x28
 80065c4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80065c8:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80065cc:	f00c fc98 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80065d0:	ee18 1a10 	vmov	r1, s16
 80065d4:	4630      	mov	r0, r6
 80065d6:	f009 fe6b 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 80065da:	ee18 0a90 	vmov	r0, s17
 80065de:	223c      	movs	r2, #60	; 0x3c
 80065e0:	2121      	movs	r1, #33	; 0x21
 80065e2:	f7fc f9a1 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80065e6:	ee18 1a90 	vmov	r1, s17
 80065ea:	4628      	mov	r0, r5
        color = newColor;
 80065ec:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80065f0:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80065f4:	f00c f9ea 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80065f8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80065fc:	ee18 3a90 	vmov	r3, s17
 8006600:	333c      	adds	r3, #60	; 0x3c
 8006602:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006606:	2333      	movs	r3, #51	; 0x33
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 8006608:	ee18 0a90 	vmov	r0, s17
 800660c:	a90a      	add	r1, sp, #40	; 0x28
 800660e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006612:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006616:	f00c fc73 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800661a:	ee18 1a90 	vmov	r1, s17
 800661e:	4630      	mov	r0, r6
 8006620:	f009 fe46 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006624:	ee19 0a10 	vmov	r0, s18
 8006628:	22f0      	movs	r2, #240	; 0xf0
 800662a:	2121      	movs	r1, #33	; 0x21
 800662c:	f7fc f97c 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8006630:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006634:	aa0a      	add	r2, sp, #40	; 0x28
 8006636:	f04f 0802 	mov.w	r8, #2
 800663a:	a909      	add	r1, sp, #36	; 0x24
 800663c:	ee19 0a10 	vmov	r0, s18
 8006640:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006644:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006648:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800664c:	f00d f813 	bl	8013676 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006650:	2342      	movs	r3, #66	; 0x42
 8006652:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006656:	3510      	adds	r5, #16
        updateTextPosition();
 8006658:	ee19 0a10 	vmov	r0, s18
 800665c:	f7fc f9a8 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006660:	ee19 1a10 	vmov	r1, s18
 8006664:	4630      	mov	r0, r6
        colorPressed = col;
 8006666:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 800666a:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 800666e:	f009 fe1f 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006672:	ee19 0a90 	vmov	r0, s19
 8006676:	22aa      	movs	r2, #170	; 0xaa
 8006678:	2121      	movs	r1, #33	; 0x21
 800667a:	f7fc f955 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800667e:	aa0a      	add	r2, sp, #40	; 0x28
 8006680:	a909      	add	r1, sp, #36	; 0x24
 8006682:	ee19 0a90 	vmov	r0, s19
 8006686:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800668a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800668e:	f00c fff2 	bl	8013676 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006692:	2341      	movs	r3, #65	; 0x41
 8006694:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006698:	ee19 0a90 	vmov	r0, s19
 800669c:	f7fc f988 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80066a0:	ee19 1a90 	vmov	r1, s19
 80066a4:	4630      	mov	r0, r6
        colorPressed = col;
 80066a6:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80066aa:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80066ae:	f009 fdff 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80066b2:	ee1a 0a10 	vmov	r0, s20
 80066b6:	2264      	movs	r2, #100	; 0x64
 80066b8:	2121      	movs	r1, #33	; 0x21
 80066ba:	f7fc f935 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80066be:	aa0a      	add	r2, sp, #40	; 0x28
 80066c0:	a909      	add	r1, sp, #36	; 0x24
 80066c2:	ee1a 0a10 	vmov	r0, s20
 80066c6:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80066ca:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80066ce:	f00c ffd2 	bl	8013676 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80066d2:	2340      	movs	r3, #64	; 0x40
        updateTextPosition();
 80066d4:	ee1a 0a10 	vmov	r0, s20
 80066d8:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 80066dc:	f7fc f968 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80066e0:	4630      	mov	r0, r6
        colorPressed = col;
 80066e2:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80066e6:	ee1a 1a10 	vmov	r1, s20
 80066ea:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80066ee:	f009 fddf 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80066f2:	4620      	mov	r0, r4
 80066f4:	b00d      	add	sp, #52	; 0x34
 80066f6:	ecbd 8b06 	vpop	{d8-d10}
 80066fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80066fe:	bf00      	nop
 8006700:	20013880 	.word	0x20013880
 8006704:	0802cd0d 	.word	0x0802cd0d
 8006708:	0802cd80 	.word	0x0802cd80

0800670c <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{

}
 800670c:	4770      	bx	lr

0800670e <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800670e:	4770      	bx	lr

08006710 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006710:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006712:	68c2      	ldr	r2, [r0, #12]
 8006714:	6844      	ldr	r4, [r0, #4]
 8006716:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006718:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800671a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800671e:	07d2      	lsls	r2, r2, #31
 8006720:	bf48      	it	mi
 8006722:	5962      	ldrmi	r2, [r4, r5]
 8006724:	689b      	ldr	r3, [r3, #8]
    }
 8006726:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006728:	bf48      	it	mi
 800672a:	58d3      	ldrmi	r3, [r2, r3]
 800672c:	4718      	bx	r3

0800672e <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800672e:	6843      	ldr	r3, [r0, #4]
 8006730:	b12b      	cbz	r3, 800673e <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006732:	6883      	ldr	r3, [r0, #8]
 8006734:	b92b      	cbnz	r3, 8006742 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006736:	68c0      	ldr	r0, [r0, #12]
 8006738:	f000 0001 	and.w	r0, r0, #1
 800673c:	4770      	bx	lr
 800673e:	4618      	mov	r0, r3
 8006740:	4770      	bx	lr
 8006742:	2001      	movs	r0, #1
    }
 8006744:	4770      	bx	lr

08006746 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006746:	b510      	push	{r4, lr}
 8006748:	2110      	movs	r1, #16
 800674a:	4604      	mov	r4, r0
 800674c:	f023 ff3d 	bl	802a5ca <_ZdlPvj>
 8006750:	4620      	mov	r0, r4
 8006752:	bd10      	pop	{r4, pc}

08006754 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8006754:	b510      	push	{r4, lr}
 8006756:	4b03      	ldr	r3, [pc, #12]	; (8006764 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x10>)
 8006758:	6003      	str	r3, [r0, #0]
 800675a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800675c:	f00e f97e 	bl	8014a5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006760:	4620      	mov	r0, r4
 8006762:	bd10      	pop	{r4, pc}
 8006764:	0802e404 	.word	0x0802e404

08006768 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8006768:	b507      	push	{r0, r1, r2, lr}
 800676a:	4b07      	ldr	r3, [pc, #28]	; (8006788 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev+0x20>)
 800676c:	6003      	str	r3, [r0, #0]
 800676e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006770:	f00e f974 	bl	8014a5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006774:	9801      	ldr	r0, [sp, #4]
 8006776:	f241 015c 	movw	r1, #4188	; 0x105c
 800677a:	f023 ff26 	bl	802a5ca <_ZdlPvj>
 800677e:	9801      	ldr	r0, [sp, #4]
 8006780:	b003      	add	sp, #12
 8006782:	f85d fb04 	ldr.w	pc, [sp], #4
 8006786:	bf00      	nop
 8006788:	0802e404 	.word	0x0802e404

0800678c <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800678c:	3098      	adds	r0, #152	; 0x98
 800678e:	4288      	cmp	r0, r1
{
 8006790:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006792:	d105      	bne.n	80067a0 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006794:	f00f fe64 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006798:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 800679c:	f7fd bf56 	b.w	800464c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 80067a0:	bd08      	pop	{r3, pc}
	...

080067a4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 80067a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80067a8:	ed2d 8b02 	vpush	{d8}
 80067ac:	4604      	mov	r4, r0
 80067ae:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 80067b0:	46a1      	mov	r9, r4
 80067b2:	2500      	movs	r5, #0
 80067b4:	f011 fad4 	bl	8017d60 <_ZN8touchgfx6ScreenC1Ev>
 80067b8:	4ba5      	ldr	r3, [pc, #660]	; (8006a50 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2ac>)
 80067ba:	63e5      	str	r5, [r4, #60]	; 0x3c
 80067bc:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 80067c0:	2226      	movs	r2, #38	; 0x26
 80067c2:	4629      	mov	r1, r5
 80067c4:	4648      	mov	r0, r9
 80067c6:	f024 ff18 	bl	802b5fa <memset>
 80067ca:	4648      	mov	r0, r9
 80067cc:	f7fc f8de 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 80067d0:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 80067d4:	26ff      	movs	r6, #255	; 0xff
 80067d6:	4b9f      	ldr	r3, [pc, #636]	; (8006a54 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b0>)
 80067d8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80067da:	2226      	movs	r2, #38	; 0x26
 80067dc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80067e0:	4629      	mov	r1, r5
 80067e2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80067e6:	4640      	mov	r0, r8
 80067e8:	66a5      	str	r5, [r4, #104]	; 0x68
 80067ea:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80067ee:	f024 ff04 	bl	802b5fa <memset>
 80067f2:	4640      	mov	r0, r8
 80067f4:	f7fc f8ca 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 80067f8:	4b97      	ldr	r3, [pc, #604]	; (8006a58 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b4>)
 80067fa:	66e3      	str	r3, [r4, #108]	; 0x6c
 80067fc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006800:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006804:	a90a      	add	r1, sp, #40	; 0x28
 8006806:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 800680a:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 800680c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006810:	f00d f927 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006814:	4658      	mov	r0, fp
 8006816:	f00d fa5b 	bl	8013cd0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800681a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800681e:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006822:	4618      	mov	r0, r3
 8006824:	ee08 3a90 	vmov	s17, r3
 8006828:	f7fc f914 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 800682c:	4638      	mov	r0, r7
 800682e:	f00b fe0b 	bl	8012448 <_ZN8touchgfx4LineC1Ev>
 8006832:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006836:	4618      	mov	r0, r3
 8006838:	9303      	str	r3, [sp, #12]
 800683a:	f7fb feab 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800683e:	4b87      	ldr	r3, [pc, #540]	; (8006a5c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b8>)
 8006840:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006844:	3324      	adds	r3, #36	; 0x24
 8006846:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 800684a:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 800684e:	4618      	mov	r0, r3
 8006850:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8006854:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006858:	ee08 3a10 	vmov	s16, r3
 800685c:	f7fc f8fa 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8006860:	4650      	mov	r0, sl
 8006862:	f7fc f8f7 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006866:	4a7e      	ldr	r2, [pc, #504]	; (8006a60 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2bc>)
 8006868:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800686c:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8006870:	4a7c      	ldr	r2, [pc, #496]	; (8006a64 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006872:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006876:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 800687a:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800687e:	f00e f8e3 	bl	8014a48 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006882:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006886:	462a      	mov	r2, r5
 8006888:	4648      	mov	r0, r9
 800688a:	9300      	str	r3, [sp, #0]
 800688c:	4629      	mov	r1, r5
 800688e:	23f0      	movs	r3, #240	; 0xf0
 8006890:	f7fc f857 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006894:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006896:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800689a:	66a3      	str	r3, [r4, #104]	; 0x68
 800689c:	4649      	mov	r1, r9
 800689e:	4630      	mov	r0, r6
 80068a0:	f009 fd06 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80068a4:	462a      	mov	r2, r5
 80068a6:	4640      	mov	r0, r8
 80068a8:	4629      	mov	r1, r5
 80068aa:	f7fc f83d 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80068ae:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80068b0:	4640      	mov	r0, r8
 80068b2:	a90a      	add	r1, sp, #40	; 0x28
 80068b4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80068b8:	f00d f8d3 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80068bc:	4641      	mov	r1, r8
 80068be:	4630      	mov	r0, r6
 80068c0:	f009 fcf6 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80068c4:	4658      	mov	r0, fp
 80068c6:	f240 1201 	movw	r2, #257	; 0x101
 80068ca:	2121      	movs	r1, #33	; 0x21
 80068cc:	f7fc f82c 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80068d0:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80068d2:	aa0a      	add	r2, sp, #40	; 0x28
 80068d4:	a909      	add	r1, sp, #36	; 0x24
 80068d6:	4658      	mov	r0, fp
 80068d8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80068dc:	2302      	movs	r3, #2
 80068de:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80068e2:	f00c fec8 	bl	8013676 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80068e6:	232f      	movs	r3, #47	; 0x2f
        updateTextPosition();
 80068e8:	4658      	mov	r0, fp
 80068ea:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80068ee:	f7fc f85f 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80068f2:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 80068f6:	330c      	adds	r3, #12
        color = col;
 80068f8:	f04f 39ff 	mov.w	r9, #4294967295
 80068fc:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006900:	4659      	mov	r1, fp
 8006902:	4630      	mov	r0, r6
        colorPressed = col;
 8006904:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8006908:	f009 fcd2 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800690c:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006910:	223c      	movs	r2, #60	; 0x3c
 8006912:	ee18 0a90 	vmov	r0, s17
 8006916:	2117      	movs	r1, #23
 8006918:	f7fc f806 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 800691c:	ee18 1a90 	vmov	r1, s17
 8006920:	4640      	mov	r0, r8
        color = newColor;
 8006922:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006926:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800692a:	f00c f84f 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800692e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006932:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006936:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800693a:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8006a68 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c4>
 800693e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006942:	2330      	movs	r3, #48	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8006944:	ee18 0a90 	vmov	r0, s17
 8006948:	a90a      	add	r1, sp, #40	; 0x28
 800694a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800694e:	f00c fad7 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006952:	ee18 1a90 	vmov	r1, s17
 8006956:	4630      	mov	r0, r6
 8006958:	f009 fcaa 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800695c:	230a      	movs	r3, #10
 800695e:	9300      	str	r3, [sp, #0]
 8006960:	2232      	movs	r2, #50	; 0x32
 8006962:	23f0      	movs	r3, #240	; 0xf0
 8006964:	4629      	mov	r1, r5
 8006966:	4638      	mov	r0, r7
 8006968:	f7fb ffeb 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 800696c:	9b03      	ldr	r3, [sp, #12]
 800696e:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006972:	22a0      	movs	r2, #160	; 0xa0
 8006974:	4611      	mov	r1, r2
 8006976:	4638      	mov	r0, r7
 8006978:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 800697c:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8006980:	f00b fe78 	bl	8012674 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006984:	22a0      	movs	r2, #160	; 0xa0
 8006986:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800698a:	4638      	mov	r0, r7
 800698c:	f00b fe7d 	bl	801268a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006990:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8006994:	2b20      	cmp	r3, #32
 8006996:	d005      	beq.n	80069a4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8006998:	2320      	movs	r3, #32
 800699a:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 800699e:	4638      	mov	r0, r7
 80069a0:	f00b fd72 	bl	8012488 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80069a4:	4638      	mov	r0, r7
 80069a6:	2101      	movs	r1, #1
 80069a8:	f00b fe7a 	bl	80126a0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80069ac:	4639      	mov	r1, r7
 80069ae:	4630      	mov	r0, r6
 80069b0:	f009 fc7e 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80069b4:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 80069b8:	ee18 0a10 	vmov	r0, s16
 80069bc:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80069be:	2500      	movs	r5, #0
 80069c0:	2145      	movs	r1, #69	; 0x45
 80069c2:	f7fb ffb1 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80069c6:	ee18 1a10 	vmov	r1, s16
 80069ca:	4640      	mov	r0, r8
        color = newColor;
 80069cc:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 80069d0:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80069d4:	f00b fffa 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80069d8:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80069dc:	ee18 3a10 	vmov	r3, s16
 80069e0:	333c      	adds	r3, #60	; 0x3c
 80069e2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80069e6:	2331      	movs	r3, #49	; 0x31
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 80069e8:	ee18 0a10 	vmov	r0, s16
 80069ec:	a90a      	add	r1, sp, #40	; 0x28
 80069ee:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80069f2:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80069f6:	f00c fa83 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80069fa:	ee18 1a10 	vmov	r1, s16
 80069fe:	4630      	mov	r0, r6
 8006a00:	f009 fc56 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006a04:	220c      	movs	r2, #12
 8006a06:	4650      	mov	r0, sl
 8006a08:	2136      	movs	r1, #54	; 0x36
 8006a0a:	f7fb ff8d 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8006a0e:	4651      	mov	r1, sl
 8006a10:	4640      	mov	r0, r8
        color = newColor;
 8006a12:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8006a16:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8006a1a:	f00b ffd7 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a1e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006a22:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8006a26:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006a2a:	2332      	movs	r3, #50	; 0x32
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8006a2c:	a90a      	add	r1, sp, #40	; 0x28
 8006a2e:	4650      	mov	r0, sl
 8006a30:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a34:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006a38:	f00c fa62 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a3c:	4630      	mov	r0, r6
 8006a3e:	4651      	mov	r1, sl
 8006a40:	f009 fc36 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006a44:	4620      	mov	r0, r4
 8006a46:	b00d      	add	sp, #52	; 0x34
 8006a48:	ecbd 8b02 	vpop	{d8}
 8006a4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006a50:	0802e404 	.word	0x0802e404
 8006a54:	0802f2d4 	.word	0x0802f2d4
 8006a58:	0802f520 	.word	0x0802f520
 8006a5c:	0802f008 	.word	0x0802f008
 8006a60:	0802e3ec 	.word	0x0802e3ec
 8006a64:	0800678d 	.word	0x0800678d
 8006a68:	0802cd80 	.word	0x0802cd80

08006a6c <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{

}
 8006a6c:	4770      	bx	lr

08006a6e <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006a6e:	4770      	bx	lr

08006a70 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006a70:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006a72:	68c2      	ldr	r2, [r0, #12]
 8006a74:	6844      	ldr	r4, [r0, #4]
 8006a76:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006a78:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006a7a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006a7e:	07d2      	lsls	r2, r2, #31
 8006a80:	bf48      	it	mi
 8006a82:	5962      	ldrmi	r2, [r4, r5]
 8006a84:	689b      	ldr	r3, [r3, #8]
    }
 8006a86:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006a88:	bf48      	it	mi
 8006a8a:	58d3      	ldrmi	r3, [r2, r3]
 8006a8c:	4718      	bx	r3

08006a8e <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006a8e:	6843      	ldr	r3, [r0, #4]
 8006a90:	b12b      	cbz	r3, 8006a9e <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006a92:	6883      	ldr	r3, [r0, #8]
 8006a94:	b92b      	cbnz	r3, 8006aa2 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006a96:	68c0      	ldr	r0, [r0, #12]
 8006a98:	f000 0001 	and.w	r0, r0, #1
 8006a9c:	4770      	bx	lr
 8006a9e:	4618      	mov	r0, r3
 8006aa0:	4770      	bx	lr
 8006aa2:	2001      	movs	r0, #1
    }
 8006aa4:	4770      	bx	lr

08006aa6 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006aa6:	b510      	push	{r4, lr}
 8006aa8:	2110      	movs	r1, #16
 8006aaa:	4604      	mov	r4, r0
 8006aac:	f023 fd8d 	bl	802a5ca <_ZdlPvj>
 8006ab0:	4620      	mov	r0, r4
 8006ab2:	bd10      	pop	{r4, pc}

08006ab4 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006ab4:	b510      	push	{r4, lr}
 8006ab6:	4b03      	ldr	r3, [pc, #12]	; (8006ac4 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x10>)
 8006ab8:	6003      	str	r3, [r0, #0]
 8006aba:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006abc:	f00d ffce 	bl	8014a5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006ac0:	4620      	mov	r0, r4
 8006ac2:	bd10      	pop	{r4, pc}
 8006ac4:	0802e450 	.word	0x0802e450

08006ac8 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006ac8:	b507      	push	{r0, r1, r2, lr}
 8006aca:	4b07      	ldr	r3, [pc, #28]	; (8006ae8 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev+0x20>)
 8006acc:	6003      	str	r3, [r0, #0]
 8006ace:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006ad0:	f00d ffc4 	bl	8014a5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006ad4:	9801      	ldr	r0, [sp, #4]
 8006ad6:	f241 015c 	movw	r1, #4188	; 0x105c
 8006ada:	f023 fd76 	bl	802a5ca <_ZdlPvj>
 8006ade:	9801      	ldr	r0, [sp, #4]
 8006ae0:	b003      	add	sp, #12
 8006ae2:	f85d fb04 	ldr.w	pc, [sp], #4
 8006ae6:	bf00      	nop
 8006ae8:	0802e450 	.word	0x0802e450

08006aec <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006aec:	3098      	adds	r0, #152	; 0x98
 8006aee:	4288      	cmp	r0, r1
{
 8006af0:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006af2:	d105      	bne.n	8006b00 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006af4:	f00f fcb4 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006af8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006afc:	f7fd bda6 	b.w	800464c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006b00:	bd08      	pop	{r3, pc}
	...

08006b04 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8006b04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006b08:	ed2d 8b02 	vpush	{d8}
 8006b0c:	4604      	mov	r4, r0
 8006b0e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8006b10:	46a1      	mov	r9, r4
 8006b12:	2500      	movs	r5, #0
 8006b14:	f011 f924 	bl	8017d60 <_ZN8touchgfx6ScreenC1Ev>
 8006b18:	4ba5      	ldr	r3, [pc, #660]	; (8006db0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2ac>)
 8006b1a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006b1c:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006b20:	2226      	movs	r2, #38	; 0x26
 8006b22:	4629      	mov	r1, r5
 8006b24:	4648      	mov	r0, r9
 8006b26:	f024 fd68 	bl	802b5fa <memset>
 8006b2a:	4648      	mov	r0, r9
 8006b2c:	f7fb ff2e 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8006b30:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006b34:	26ff      	movs	r6, #255	; 0xff
 8006b36:	4b9f      	ldr	r3, [pc, #636]	; (8006db4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b0>)
 8006b38:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006b3a:	2226      	movs	r2, #38	; 0x26
 8006b3c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006b40:	4629      	mov	r1, r5
 8006b42:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006b46:	4640      	mov	r0, r8
 8006b48:	66a5      	str	r5, [r4, #104]	; 0x68
 8006b4a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006b4e:	f024 fd54 	bl	802b5fa <memset>
 8006b52:	4640      	mov	r0, r8
 8006b54:	f7fb ff1a 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8006b58:	4b97      	ldr	r3, [pc, #604]	; (8006db8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b4>)
 8006b5a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006b5c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006b60:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006b64:	a90a      	add	r1, sp, #40	; 0x28
 8006b66:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006b6a:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006b6c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006b70:	f00c ff77 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006b74:	4658      	mov	r0, fp
 8006b76:	f00d f8ab 	bl	8013cd0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006b7a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006b7e:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006b82:	4618      	mov	r0, r3
 8006b84:	ee08 3a90 	vmov	s17, r3
 8006b88:	f7fb ff64 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8006b8c:	4638      	mov	r0, r7
 8006b8e:	f00b fc5b 	bl	8012448 <_ZN8touchgfx4LineC1Ev>
 8006b92:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006b96:	4618      	mov	r0, r3
 8006b98:	9303      	str	r3, [sp, #12]
 8006b9a:	f7fb fcfb 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006b9e:	4b87      	ldr	r3, [pc, #540]	; (8006dbc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b8>)
 8006ba0:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006ba4:	3324      	adds	r3, #36	; 0x24
 8006ba6:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006baa:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8006bae:	4618      	mov	r0, r3
 8006bb0:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8006bb4:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006bb8:	ee08 3a10 	vmov	s16, r3
 8006bbc:	f7fb ff4a 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8006bc0:	4650      	mov	r0, sl
 8006bc2:	f7fb ff47 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006bc6:	4a7e      	ldr	r2, [pc, #504]	; (8006dc0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2bc>)
 8006bc8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006bcc:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8006bd0:	4a7c      	ldr	r2, [pc, #496]	; (8006dc4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006bd2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006bd6:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8006bda:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006bde:	f00d ff33 	bl	8014a48 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006be2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006be6:	462a      	mov	r2, r5
 8006be8:	4648      	mov	r0, r9
 8006bea:	9300      	str	r3, [sp, #0]
 8006bec:	4629      	mov	r1, r5
 8006bee:	23f0      	movs	r3, #240	; 0xf0
 8006bf0:	f7fb fea7 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006bf4:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006bf6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006bfa:	66a3      	str	r3, [r4, #104]	; 0x68
 8006bfc:	4649      	mov	r1, r9
 8006bfe:	4630      	mov	r0, r6
 8006c00:	f009 fb56 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006c04:	462a      	mov	r2, r5
 8006c06:	4640      	mov	r0, r8
 8006c08:	4629      	mov	r1, r5
 8006c0a:	f7fb fe8d 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8006c0e:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006c10:	4640      	mov	r0, r8
 8006c12:	a90a      	add	r1, sp, #40	; 0x28
 8006c14:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006c18:	f00c ff23 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006c1c:	4641      	mov	r1, r8
 8006c1e:	4630      	mov	r0, r6
 8006c20:	f009 fb46 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006c24:	4658      	mov	r0, fp
 8006c26:	f240 1201 	movw	r2, #257	; 0x101
 8006c2a:	2121      	movs	r1, #33	; 0x21
 8006c2c:	f7fb fe7c 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8006c30:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006c32:	aa0a      	add	r2, sp, #40	; 0x28
 8006c34:	a909      	add	r1, sp, #36	; 0x24
 8006c36:	4658      	mov	r0, fp
 8006c38:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006c3c:	2302      	movs	r3, #2
 8006c3e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006c42:	f00c fd18 	bl	8013676 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006c46:	232b      	movs	r3, #43	; 0x2b
        updateTextPosition();
 8006c48:	4658      	mov	r0, fp
 8006c4a:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8006c4e:	f7fb feaf 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006c52:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8006c56:	330c      	adds	r3, #12
        color = col;
 8006c58:	f04f 39ff 	mov.w	r9, #4294967295
 8006c5c:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006c60:	4659      	mov	r1, fp
 8006c62:	4630      	mov	r0, r6
        colorPressed = col;
 8006c64:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8006c68:	f009 fb22 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006c6c:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006c70:	223c      	movs	r2, #60	; 0x3c
 8006c72:	ee18 0a90 	vmov	r0, s17
 8006c76:	2117      	movs	r1, #23
 8006c78:	f7fb fe56 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8006c7c:	ee18 1a90 	vmov	r1, s17
 8006c80:	4640      	mov	r0, r8
        color = newColor;
 8006c82:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006c86:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006c8a:	f00b fe9f 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006c8e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006c92:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006c96:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006c9a:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8006dc8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c4>
 8006c9e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006ca2:	232c      	movs	r3, #44	; 0x2c
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 8006ca4:	ee18 0a90 	vmov	r0, s17
 8006ca8:	a90a      	add	r1, sp, #40	; 0x28
 8006caa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006cae:	f00c f927 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006cb2:	ee18 1a90 	vmov	r1, s17
 8006cb6:	4630      	mov	r0, r6
 8006cb8:	f009 fafa 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006cbc:	230a      	movs	r3, #10
 8006cbe:	9300      	str	r3, [sp, #0]
 8006cc0:	2232      	movs	r2, #50	; 0x32
 8006cc2:	23f0      	movs	r3, #240	; 0xf0
 8006cc4:	4629      	mov	r1, r5
 8006cc6:	4638      	mov	r0, r7
 8006cc8:	f7fb fe3b 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006ccc:	9b03      	ldr	r3, [sp, #12]
 8006cce:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006cd2:	22a0      	movs	r2, #160	; 0xa0
 8006cd4:	4611      	mov	r1, r2
 8006cd6:	4638      	mov	r0, r7
 8006cd8:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006cdc:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8006ce0:	f00b fcc8 	bl	8012674 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006ce4:	22a0      	movs	r2, #160	; 0xa0
 8006ce6:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006cea:	4638      	mov	r0, r7
 8006cec:	f00b fccd 	bl	801268a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006cf0:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8006cf4:	2b20      	cmp	r3, #32
 8006cf6:	d005      	beq.n	8006d04 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8006cf8:	2320      	movs	r3, #32
 8006cfa:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006cfe:	4638      	mov	r0, r7
 8006d00:	f00b fbc2 	bl	8012488 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006d04:	4638      	mov	r0, r7
 8006d06:	2101      	movs	r1, #1
 8006d08:	f00b fcca 	bl	80126a0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006d0c:	4639      	mov	r1, r7
 8006d0e:	4630      	mov	r0, r6
 8006d10:	f009 face 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006d14:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8006d18:	ee18 0a10 	vmov	r0, s16
 8006d1c:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8006d1e:	2500      	movs	r5, #0
 8006d20:	2145      	movs	r1, #69	; 0x45
 8006d22:	f7fb fe01 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006d26:	ee18 1a10 	vmov	r1, s16
 8006d2a:	4640      	mov	r0, r8
        color = newColor;
 8006d2c:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8006d30:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006d34:	f00b fe4a 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d38:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006d3c:	ee18 3a10 	vmov	r3, s16
 8006d40:	333c      	adds	r3, #60	; 0x3c
 8006d42:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006d46:	232d      	movs	r3, #45	; 0x2d
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 8006d48:	ee18 0a10 	vmov	r0, s16
 8006d4c:	a90a      	add	r1, sp, #40	; 0x28
 8006d4e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006d52:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006d56:	f00c f8d3 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d5a:	ee18 1a10 	vmov	r1, s16
 8006d5e:	4630      	mov	r0, r6
 8006d60:	f009 faa6 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006d64:	220c      	movs	r2, #12
 8006d66:	4650      	mov	r0, sl
 8006d68:	2136      	movs	r1, #54	; 0x36
 8006d6a:	f7fb fddd 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8006d6e:	4651      	mov	r1, sl
 8006d70:	4640      	mov	r0, r8
        color = newColor;
 8006d72:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8006d76:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8006d7a:	f00b fe27 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d7e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006d82:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8006d86:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006d8a:	232e      	movs	r3, #46	; 0x2e
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 8006d8c:	a90a      	add	r1, sp, #40	; 0x28
 8006d8e:	4650      	mov	r0, sl
 8006d90:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006d94:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006d98:	f00c f8b2 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d9c:	4630      	mov	r0, r6
 8006d9e:	4651      	mov	r1, sl
 8006da0:	f009 fa86 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006da4:	4620      	mov	r0, r4
 8006da6:	b00d      	add	sp, #52	; 0x34
 8006da8:	ecbd 8b02 	vpop	{d8}
 8006dac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006db0:	0802e450 	.word	0x0802e450
 8006db4:	0802f2d4 	.word	0x0802f2d4
 8006db8:	0802f520 	.word	0x0802f520
 8006dbc:	0802f008 	.word	0x0802f008
 8006dc0:	0802e438 	.word	0x0802e438
 8006dc4:	08006aed 	.word	0x08006aed
 8006dc8:	0802cd80 	.word	0x0802cd80

08006dcc <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8006dcc:	4770      	bx	lr

08006dce <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006dce:	4770      	bx	lr

08006dd0 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006dd0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006dd2:	68c2      	ldr	r2, [r0, #12]
 8006dd4:	6844      	ldr	r4, [r0, #4]
 8006dd6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006dd8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006dda:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006dde:	07d2      	lsls	r2, r2, #31
 8006de0:	bf48      	it	mi
 8006de2:	5962      	ldrmi	r2, [r4, r5]
 8006de4:	689b      	ldr	r3, [r3, #8]
    }
 8006de6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006de8:	bf48      	it	mi
 8006dea:	58d3      	ldrmi	r3, [r2, r3]
 8006dec:	4718      	bx	r3

08006dee <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006dee:	6843      	ldr	r3, [r0, #4]
 8006df0:	b12b      	cbz	r3, 8006dfe <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006df2:	6883      	ldr	r3, [r0, #8]
 8006df4:	b92b      	cbnz	r3, 8006e02 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006df6:	68c0      	ldr	r0, [r0, #12]
 8006df8:	f000 0001 	and.w	r0, r0, #1
 8006dfc:	4770      	bx	lr
 8006dfe:	4618      	mov	r0, r3
 8006e00:	4770      	bx	lr
 8006e02:	2001      	movs	r0, #1
    }
 8006e04:	4770      	bx	lr

08006e06 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006e06:	b510      	push	{r4, lr}
 8006e08:	2110      	movs	r1, #16
 8006e0a:	4604      	mov	r4, r0
 8006e0c:	f023 fbdd 	bl	802a5ca <_ZdlPvj>
 8006e10:	4620      	mov	r0, r4
 8006e12:	bd10      	pop	{r4, pc}

08006e14 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8006e14:	b510      	push	{r4, lr}
 8006e16:	4b03      	ldr	r3, [pc, #12]	; (8006e24 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8006e18:	6003      	str	r3, [r0, #0]
 8006e1a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006e1c:	f00d fe1e 	bl	8014a5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006e20:	4620      	mov	r0, r4
 8006e22:	bd10      	pop	{r4, pc}
 8006e24:	0802e49c 	.word	0x0802e49c

08006e28 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8006e28:	b507      	push	{r0, r1, r2, lr}
 8006e2a:	4b07      	ldr	r3, [pc, #28]	; (8006e48 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8006e2c:	6003      	str	r3, [r0, #0]
 8006e2e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006e30:	f00d fe14 	bl	8014a5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006e34:	9801      	ldr	r0, [sp, #4]
 8006e36:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8006e3a:	f023 fbc6 	bl	802a5ca <_ZdlPvj>
 8006e3e:	9801      	ldr	r0, [sp, #4]
 8006e40:	b003      	add	sp, #12
 8006e42:	f85d fb04 	ldr.w	pc, [sp], #4
 8006e46:	bf00      	nop
 8006e48:	0802e49c 	.word	0x0802e49c

08006e4c <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006e4c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006e4e:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8006e52:	4299      	cmp	r1, r3
{
 8006e54:	4604      	mov	r4, r0
 8006e56:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8006e58:	d103      	bne.n	8006e62 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006e5a:	f00f fb01 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8006e5e:	f7fd fba5 	bl	80045ac <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8006e62:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006e66:	429d      	cmp	r5, r3
 8006e68:	d103      	bne.n	8006e72 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006e6a:	f00f faf9 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 8006e6e:	f7fd fbbd 	bl	80045ec <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8006e72:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8006e76:	42a5      	cmp	r5, r4
 8006e78:	d105      	bne.n	8006e86 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006e7a:	f00f faf1 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 8006e7e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 8006e82:	f7fd bbc3 	b.w	800460c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 8006e86:	bd38      	pop	{r3, r4, r5, pc}

08006e88 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 8006e88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006e8c:	ed2d 8b06 	vpush	{d8-d10}
 8006e90:	4604      	mov	r4, r0
 8006e92:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8006e94:	46a3      	mov	fp, r4
 8006e96:	2500      	movs	r5, #0
 8006e98:	f010 ff62 	bl	8017d60 <_ZN8touchgfx6ScreenC1Ev>
 8006e9c:	4b66      	ldr	r3, [pc, #408]	; (8007038 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 8006e9e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006ea0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006ea4:	2226      	movs	r2, #38	; 0x26
 8006ea6:	4629      	mov	r1, r5
 8006ea8:	4658      	mov	r0, fp
 8006eaa:	f024 fba6 	bl	802b5fa <memset>
 8006eae:	4658      	mov	r0, fp
 8006eb0:	f7fb fd6c 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8006eb4:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006eb8:	26ff      	movs	r6, #255	; 0xff
 8006eba:	4b60      	ldr	r3, [pc, #384]	; (800703c <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 8006ebc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006ebe:	2226      	movs	r2, #38	; 0x26
 8006ec0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006ec4:	4629      	mov	r1, r5
 8006ec6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006eca:	4650      	mov	r0, sl
 8006ecc:	66a5      	str	r5, [r4, #104]	; 0x68
 8006ece:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006ed2:	f024 fb92 	bl	802b5fa <memset>
 8006ed6:	4650      	mov	r0, sl
 8006ed8:	f7fb fd58 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8006edc:	4b58      	ldr	r3, [pc, #352]	; (8007040 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 8006ede:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006ee0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006ee4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006ee8:	a90a      	add	r1, sp, #40	; 0x28
 8006eea:	4650      	mov	r0, sl
 8006eec:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006ef0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006ef4:	f00c fdb5 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006ef8:	4648      	mov	r0, r9
 8006efa:	f7fb fdab 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006efe:	4b51      	ldr	r3, [pc, #324]	; (8007044 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 8006f00:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006f04:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006f08:	4618      	mov	r0, r3
 8006f0a:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006f0e:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8006f12:	ee08 3a90 	vmov	s17, r3
 8006f16:	f7fb fd9d 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8006f1a:	4638      	mov	r0, r7
 8006f1c:	f00b fa94 	bl	8012448 <_ZN8touchgfx4LineC1Ev>
 8006f20:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006f24:	4618      	mov	r0, r3
 8006f26:	9303      	str	r3, [sp, #12]
 8006f28:	f7fb fb34 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006f2c:	4b46      	ldr	r3, [pc, #280]	; (8007048 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 8006f2e:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8006f32:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8006f36:	3324      	adds	r3, #36	; 0x24
 8006f38:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8006f3c:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8006f40:	4640      	mov	r0, r8
 8006f42:	f7fb fd87 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8006f46:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8006f4a:	4618      	mov	r0, r3
 8006f4c:	ee08 3a10 	vmov	s16, r3
 8006f50:	f7fb fd80 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8006f54:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006f58:	4618      	mov	r0, r3
 8006f5a:	ee09 3a10 	vmov	s18, r3
 8006f5e:	f00c feb7 	bl	8013cd0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006f62:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006f66:	4618      	mov	r0, r3
 8006f68:	ee09 3a90 	vmov	s19, r3
 8006f6c:	f00c feb0 	bl	8013cd0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006f70:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006f74:	4618      	mov	r0, r3
 8006f76:	ee0a 3a10 	vmov	s20, r3
 8006f7a:	f00c fea9 	bl	8013cd0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006f7e:	4a33      	ldr	r2, [pc, #204]	; (800704c <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 8006f80:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006f84:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006f88:	4a31      	ldr	r2, [pc, #196]	; (8007050 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006f8a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006f8e:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006f92:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006f96:	f00d fd57 	bl	8014a48 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006f9a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006f9e:	462a      	mov	r2, r5
 8006fa0:	4658      	mov	r0, fp
 8006fa2:	9300      	str	r3, [sp, #0]
 8006fa4:	4629      	mov	r1, r5
 8006fa6:	23f0      	movs	r3, #240	; 0xf0
 8006fa8:	f7fb fccb 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006fac:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006fae:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006fb2:	66a3      	str	r3, [r4, #104]	; 0x68
 8006fb4:	4659      	mov	r1, fp
 8006fb6:	4630      	mov	r0, r6
 8006fb8:	f009 f97a 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006fbc:	462a      	mov	r2, r5
 8006fbe:	4650      	mov	r0, sl
 8006fc0:	4629      	mov	r1, r5
 8006fc2:	f7fb fcb1 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8006fc6:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006fc8:	4650      	mov	r0, sl
 8006fca:	a90a      	add	r1, sp, #40	; 0x28
 8006fcc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006fd0:	f00c fd47 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006fd4:	4651      	mov	r1, sl
 8006fd6:	4630      	mov	r0, r6
 8006fd8:	f009 f96a 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006fdc:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006fe0:	2156      	movs	r1, #86	; 0x56
 8006fe2:	4648      	mov	r0, r9
 8006fe4:	f7fb fca0 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006fe8:	f04f 33ff 	mov.w	r3, #4294967295
 8006fec:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006ff0:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006ff4:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006ff8:	f10d 0b10 	add.w	fp, sp, #16
 8006ffc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8007000:	4649      	mov	r1, r9
 8007002:	4658      	mov	r0, fp
 8007004:	4798      	blx	r3
 8007006:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800700a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800700e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007012:	4b10      	ldr	r3, [pc, #64]	; (8007054 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 8007014:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8007016:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 800701a:	b92b      	cbnz	r3, 8007028 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 800701c:	4b0e      	ldr	r3, [pc, #56]	; (8007058 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 800701e:	4a0f      	ldr	r2, [pc, #60]	; (800705c <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8007020:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007022:	480f      	ldr	r0, [pc, #60]	; (8007060 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 8007024:	f024 f8e4 	bl	802b1f0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007028:	4b0e      	ldr	r3, [pc, #56]	; (8007064 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800702a:	881b      	ldrh	r3, [r3, #0]
 800702c:	2b26      	cmp	r3, #38	; 0x26
 800702e:	d81d      	bhi.n	800706c <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 8007030:	4b0d      	ldr	r3, [pc, #52]	; (8007068 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8007032:	4a0a      	ldr	r2, [pc, #40]	; (800705c <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8007034:	2161      	movs	r1, #97	; 0x61
 8007036:	e7f4      	b.n	8007022 <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 8007038:	0802e49c 	.word	0x0802e49c
 800703c:	0802f2d4 	.word	0x0802f2d4
 8007040:	0802f520 	.word	0x0802f520
 8007044:	0802ce20 	.word	0x0802ce20
 8007048:	0802f008 	.word	0x0802f008
 800704c:	0802e484 	.word	0x0802e484
 8007050:	08006e4d 	.word	0x08006e4d
 8007054:	20013874 	.word	0x20013874
 8007058:	0802cbd0 	.word	0x0802cbd0
 800705c:	0802ccd5 	.word	0x0802ccd5
 8007060:	0802cc4d 	.word	0x0802cc4d
 8007064:	20013878 	.word	0x20013878
 8007068:	0802cc94 	.word	0x0802cc94
        return texts->getText(typedTextId);
 800706c:	4b95      	ldr	r3, [pc, #596]	; (80072c4 <_ZN26Measurement_SingleViewBaseC1Ev+0x43c>)
 800706e:	2126      	movs	r1, #38	; 0x26
 8007070:	6818      	ldr	r0, [r3, #0]
 8007072:	f001 faad 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 8007076:	4a94      	ldr	r2, [pc, #592]	; (80072c8 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 8007078:	4603      	mov	r3, r0
 800707a:	2104      	movs	r1, #4
 800707c:	4650      	mov	r0, sl
 800707e:	f012 fb9d 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8007082:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8007086:	4648      	mov	r0, r9
 8007088:	f00b ff1a 	bl	8012ec0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800708c:	f8df a23c 	ldr.w	sl, [pc, #572]	; 80072cc <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8007090:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8007094:	2327      	movs	r3, #39	; 0x27
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 8007096:	a90a      	add	r1, sp, #40	; 0x28
 8007098:	4648      	mov	r0, r9
 800709a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800709e:	f00b ff2f 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80070a2:	4649      	mov	r1, r9
 80070a4:	4630      	mov	r0, r6
 80070a6:	f009 f903 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 80070aa:	223c      	movs	r2, #60	; 0x3c
 80070ac:	ee18 0a90 	vmov	r0, s17
 80070b0:	2129      	movs	r1, #41	; 0x29
 80070b2:	f7fb fc39 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80070b6:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80070ba:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 80070be:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80070c2:	4658      	mov	r0, fp
        linespace = space;
 80070c4:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 80070c8:	f00b fc80 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80070cc:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80070d0:	f504 7390 	add.w	r3, r4, #288	; 0x120
 80070d4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80070d8:	2336      	movs	r3, #54	; 0x36
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 80070da:	ee18 0a90 	vmov	r0, s17
 80070de:	a90a      	add	r1, sp, #40	; 0x28
 80070e0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80070e4:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80070e8:	f00b ff0a 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80070ec:	ee18 1a90 	vmov	r1, s17
 80070f0:	4630      	mov	r0, r6
 80070f2:	f009 f8dd 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80070f6:	230a      	movs	r3, #10
 80070f8:	9300      	str	r3, [sp, #0]
 80070fa:	2232      	movs	r2, #50	; 0x32
 80070fc:	23f0      	movs	r3, #240	; 0xf0
 80070fe:	4629      	mov	r1, r5
 8007100:	4638      	mov	r0, r7
 8007102:	f7fb fc1e 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007106:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800710a:	22a0      	movs	r2, #160	; 0xa0
 800710c:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007110:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8007114:	9b03      	ldr	r3, [sp, #12]
 8007116:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800711a:	4611      	mov	r1, r2
 800711c:	4638      	mov	r0, r7
 800711e:	f00b faa9 	bl	8012674 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007122:	22a0      	movs	r2, #160	; 0xa0
 8007124:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007128:	4638      	mov	r0, r7
 800712a:	f00b faae 	bl	801268a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800712e:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8007132:	2b20      	cmp	r3, #32
 8007134:	d005      	beq.n	8007142 <_ZN26Measurement_SingleViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8007136:	2320      	movs	r3, #32
 8007138:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 800713c:	4638      	mov	r0, r7
 800713e:	f00b f9a3 	bl	8012488 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007142:	4638      	mov	r0, r7
 8007144:	2101      	movs	r1, #1
 8007146:	f00b faab 	bl	80126a0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800714a:	4639      	mov	r1, r7
 800714c:	4630      	mov	r0, r6
 800714e:	f009 f8af 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007152:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8007156:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8007158:	2223      	movs	r2, #35	; 0x23
 800715a:	4640      	mov	r0, r8
        linespace = space;
 800715c:	f04f 0a00 	mov.w	sl, #0
 8007160:	2145      	movs	r1, #69	; 0x45
 8007162:	f7fb fbe1 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007166:	4641      	mov	r1, r8
 8007168:	4638      	mov	r0, r7
        color = newColor;
 800716a:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 800716e:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8007172:	f00b fc2b 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007176:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800717a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800717e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007182:	f8df 9148 	ldr.w	r9, [pc, #328]	; 80072cc <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8007186:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800718a:	2349      	movs	r3, #73	; 0x49
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 800718c:	a90a      	add	r1, sp, #40	; 0x28
 800718e:	4640      	mov	r0, r8
 8007190:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007194:	f00b feb4 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007198:	4641      	mov	r1, r8
 800719a:	4630      	mov	r0, r6
 800719c:	f009 f888 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80071a0:	ee18 0a10 	vmov	r0, s16
 80071a4:	220c      	movs	r2, #12
 80071a6:	2136      	movs	r1, #54	; 0x36
 80071a8:	f7fb fbbe 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80071ac:	ee18 1a10 	vmov	r1, s16
 80071b0:	4638      	mov	r0, r7
        color = newColor;
 80071b2:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 80071b6:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80071ba:	f00b fc07 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80071be:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80071c2:	ee18 3a10 	vmov	r3, s16
 80071c6:	333c      	adds	r3, #60	; 0x3c
 80071c8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80071cc:	2348      	movs	r3, #72	; 0x48
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 80071ce:	ee18 0a10 	vmov	r0, s16
 80071d2:	a90a      	add	r1, sp, #40	; 0x28
 80071d4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80071d8:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80071dc:	f00b fe90 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80071e0:	ee18 1a10 	vmov	r1, s16
 80071e4:	4630      	mov	r0, r6
 80071e6:	f009 f863 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80071ea:	ee19 0a10 	vmov	r0, s18
 80071ee:	22f0      	movs	r2, #240	; 0xf0
 80071f0:	2121      	movs	r1, #33	; 0x21
 80071f2:	f7fb fb99 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80071f6:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80071fa:	aa0a      	add	r2, sp, #40	; 0x28
 80071fc:	f04f 0802 	mov.w	r8, #2
 8007200:	a909      	add	r1, sp, #36	; 0x24
 8007202:	ee19 0a10 	vmov	r0, s18
 8007206:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800720a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 800720e:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007212:	f00c fa30 	bl	8013676 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007216:	2347      	movs	r3, #71	; 0x47
 8007218:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 800721c:	3710      	adds	r7, #16
        updateTextPosition();
 800721e:	ee19 0a10 	vmov	r0, s18
 8007222:	f7fb fbc5 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007226:	ee19 1a10 	vmov	r1, s18
 800722a:	4630      	mov	r0, r6
        colorPressed = col;
 800722c:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8007230:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8007234:	f009 f83c 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8007238:	ee19 0a90 	vmov	r0, s19
 800723c:	22aa      	movs	r2, #170	; 0xaa
 800723e:	2121      	movs	r1, #33	; 0x21
 8007240:	f7fb fb72 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007244:	aa0a      	add	r2, sp, #40	; 0x28
 8007246:	a909      	add	r1, sp, #36	; 0x24
 8007248:	ee19 0a90 	vmov	r0, s19
 800724c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007250:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007254:	f00c fa0f 	bl	8013676 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007258:	2346      	movs	r3, #70	; 0x46
 800725a:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 800725e:	ee19 0a90 	vmov	r0, s19
 8007262:	f7fb fba5 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007266:	ee19 1a90 	vmov	r1, s19
 800726a:	4630      	mov	r0, r6
        colorPressed = col;
 800726c:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8007270:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8007274:	f009 f81c 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8007278:	ee1a 0a10 	vmov	r0, s20
 800727c:	2264      	movs	r2, #100	; 0x64
 800727e:	2121      	movs	r1, #33	; 0x21
 8007280:	f7fb fb52 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007284:	aa0a      	add	r2, sp, #40	; 0x28
 8007286:	a909      	add	r1, sp, #36	; 0x24
 8007288:	ee1a 0a10 	vmov	r0, s20
 800728c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007290:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007294:	f00c f9ef 	bl	8013676 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007298:	2345      	movs	r3, #69	; 0x45
        updateTextPosition();
 800729a:	ee1a 0a10 	vmov	r0, s20
 800729e:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 80072a2:	f7fb fb85 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80072a6:	4630      	mov	r0, r6
        colorPressed = col;
 80072a8:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 80072ac:	ee1a 1a10 	vmov	r1, s20
 80072b0:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 80072b4:	f008 fffc 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80072b8:	4620      	mov	r0, r4
 80072ba:	b00d      	add	sp, #52	; 0x34
 80072bc:	ecbd 8b06 	vpop	{d8-d10}
 80072c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80072c4:	20013880 	.word	0x20013880
 80072c8:	0802cd0d 	.word	0x0802cd0d
 80072cc:	0802cd80 	.word	0x0802cd80

080072d0 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 80072d0:	4770      	bx	lr

080072d2 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 80072d2:	4770      	bx	lr

080072d4 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80072d4:	4770      	bx	lr

080072d6 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80072d6:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80072d8:	68c2      	ldr	r2, [r0, #12]
 80072da:	6844      	ldr	r4, [r0, #4]
 80072dc:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80072de:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80072e0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80072e4:	07d2      	lsls	r2, r2, #31
 80072e6:	bf48      	it	mi
 80072e8:	5962      	ldrmi	r2, [r4, r5]
 80072ea:	689b      	ldr	r3, [r3, #8]
    }
 80072ec:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80072ee:	bf48      	it	mi
 80072f0:	58d3      	ldrmi	r3, [r2, r3]
 80072f2:	4718      	bx	r3

080072f4 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80072f4:	6843      	ldr	r3, [r0, #4]
 80072f6:	b12b      	cbz	r3, 8007304 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80072f8:	6883      	ldr	r3, [r0, #8]
 80072fa:	b92b      	cbnz	r3, 8007308 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80072fc:	68c0      	ldr	r0, [r0, #12]
 80072fe:	f000 0001 	and.w	r0, r0, #1
 8007302:	4770      	bx	lr
 8007304:	4618      	mov	r0, r3
 8007306:	4770      	bx	lr
 8007308:	2001      	movs	r0, #1
    }
 800730a:	4770      	bx	lr

0800730c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800730c:	b510      	push	{r4, lr}
 800730e:	2110      	movs	r1, #16
 8007310:	4604      	mov	r4, r0
 8007312:	f023 f95a 	bl	802a5ca <_ZdlPvj>
 8007316:	4620      	mov	r0, r4
 8007318:	bd10      	pop	{r4, pc}
	...

0800731c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 800731c:	b510      	push	{r4, lr}
 800731e:	4b03      	ldr	r3, [pc, #12]	; (800732c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8007320:	6003      	str	r3, [r0, #0]
 8007322:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007324:	f00d fb9a 	bl	8014a5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007328:	4620      	mov	r0, r4
 800732a:	bd10      	pop	{r4, pc}
 800732c:	0802e4e8 	.word	0x0802e4e8

08007330 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8007330:	b507      	push	{r0, r1, r2, lr}
 8007332:	4b07      	ldr	r3, [pc, #28]	; (8007350 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8007334:	6003      	str	r3, [r0, #0]
 8007336:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007338:	f00d fb90 	bl	8014a5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800733c:	9801      	ldr	r0, [sp, #4]
 800733e:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8007342:	f023 f942 	bl	802a5ca <_ZdlPvj>
 8007346:	9801      	ldr	r0, [sp, #4]
 8007348:	b003      	add	sp, #12
 800734a:	f85d fb04 	ldr.w	pc, [sp], #4
 800734e:	bf00      	nop
 8007350:	0802e4e8 	.word	0x0802e4e8

08007354 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8007354:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8007356:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 800735a:	f8d4 23f4 	ldr.w	r2, [r4, #1012]	; 0x3f4
 800735e:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8007360:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8007362:	f8c4 23f4 	str.w	r2, [r4, #1012]	; 0x3f4
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8007366:	d105      	bne.n	8007374 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 8007368:	6803      	ldr	r3, [r0, #0]
 800736a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800736c:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 800736e:	2300      	movs	r3, #0
 8007370:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
    }
}
 8007374:	bd10      	pop	{r4, pc}

08007376 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8007376:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 800737a:	4288      	cmp	r0, r1
{
 800737c:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800737e:	d105      	bne.n	800738c <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007380:	f00f f86e 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
}
 8007384:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007388:	f7fd b920 	b.w	80045cc <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 800738c:	bd08      	pop	{r3, pc}
	...

08007390 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8007390:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007394:	ed2d 8b0a 	vpush	{d8-d12}
 8007398:	4604      	mov	r4, r0
 800739a:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 800739c:	46a3      	mov	fp, r4
 800739e:	2500      	movs	r5, #0
 80073a0:	f010 fcde 	bl	8017d60 <_ZN8touchgfx6ScreenC1Ev>
 80073a4:	4baa      	ldr	r3, [pc, #680]	; (8007650 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 80073a6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80073a8:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80073ac:	2226      	movs	r2, #38	; 0x26
 80073ae:	4629      	mov	r1, r5
 80073b0:	4658      	mov	r0, fp
 80073b2:	f024 f922 	bl	802b5fa <memset>
 80073b6:	4658      	mov	r0, fp
 80073b8:	f7fb fae8 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 80073bc:	f104 066c 	add.w	r6, r4, #108	; 0x6c
 80073c0:	27ff      	movs	r7, #255	; 0xff
 80073c2:	4ba4      	ldr	r3, [pc, #656]	; (8007654 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
 80073c4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80073c6:	2226      	movs	r2, #38	; 0x26
 80073c8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80073cc:	4629      	mov	r1, r5
 80073ce:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 80073d2:	4630      	mov	r0, r6
 80073d4:	66a5      	str	r5, [r4, #104]	; 0x68
 80073d6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80073da:	f024 f90e 	bl	802b5fa <memset>
 80073de:	4630      	mov	r0, r6
 80073e0:	f7fb fad4 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 80073e4:	4b9c      	ldr	r3, [pc, #624]	; (8007658 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
 80073e6:	66e3      	str	r3, [r4, #108]	; 0x6c
 80073e8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80073ec:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80073f0:	a90a      	add	r1, sp, #40	; 0x28
 80073f2:	4630      	mov	r0, r6
        : Widget(), bitmap(bmp), alpha(255)
 80073f4:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80073f8:	f00c fb33 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80073fc:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8007400:	f104 08e0 	add.w	r8, r4, #224	; 0xe0
 8007404:	4618      	mov	r0, r3
 8007406:	ee09 3a10 	vmov	s18, r3
 800740a:	f504 7920 	add.w	r9, r4, #640	; 0x280
 800740e:	f7fb fb21 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8007412:	4640      	mov	r0, r8
 8007414:	f00b ffe8 	bl	80133e8 <_ZN8touchgfx5GaugeC1Ev>
        : TextArea()
 8007418:	4648      	mov	r0, r9
 800741a:	f7fb fb1b 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800741e:	4f8f      	ldr	r7, [pc, #572]	; (800765c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 8007420:	f8c4 7280 	str.w	r7, [r4, #640]	; 0x280
 8007424:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextArea()
 8007428:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800742a:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 800742e:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 8007432:	f7fb fb0f 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8007436:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 800743a:	f8c4 72cc 	str.w	r7, [r4, #716]	; 0x2cc
        : TextArea()
 800743e:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007440:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 8007444:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 8007448:	f7fb fb04 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 800744c:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 8007450:	f8c4 7318 	str.w	r7, [r4, #792]	; 0x318
 8007454:	4618      	mov	r0, r3
 8007456:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 800745a:	ee0a 3a90 	vmov	s21, r3
 800745e:	f7fb faf9 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8007462:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 8007466:	4618      	mov	r0, r3
 8007468:	ee0b 3a10 	vmov	s22, r3
 800746c:	f7fb faf2 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8007470:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 8007474:	4618      	mov	r0, r3
 8007476:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 800747a:	ee0b 3a90 	vmov	s23, r3
 800747e:	f7fb fae9 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8007482:	4650      	mov	r0, sl
 8007484:	f00a ffe0 	bl	8012448 <_ZN8touchgfx4LineC1Ev>
 8007488:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800748c:	4618      	mov	r0, r3
 800748e:	9302      	str	r3, [sp, #8]
 8007490:	f7fb f880 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007494:	4b72      	ldr	r3, [pc, #456]	; (8007660 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 8007496:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 800749a:	3324      	adds	r3, #36	; 0x24
 800749c:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 80074a0:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 80074a4:	4618      	mov	r0, r3
 80074a6:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 80074aa:	ee08 3a10 	vmov	s16, r3
 80074ae:	f7fb fad1 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 80074b2:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 80074b6:	4618      	mov	r0, r3
 80074b8:	ee08 3a90 	vmov	s17, r3
 80074bc:	f7fb faca 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 80074c0:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 80074c4:	4618      	mov	r0, r3
 80074c6:	ee0c 3a10 	vmov	s24, r3
 80074ca:	f00c fc01 	bl	8013cd0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80074ce:	4a65      	ldr	r2, [pc, #404]	; (8007664 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 80074d0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80074d4:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 80074d8:	4a63      	ldr	r2, [pc, #396]	; (8007668 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 80074da:	f8c3 53f4 	str.w	r5, [r3, #1012]	; 0x3f4
 80074de:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80074e2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80074e6:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 80074ea:	f00d faad 	bl	8014a48 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80074ee:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80074f2:	462a      	mov	r2, r5
 80074f4:	4658      	mov	r0, fp
 80074f6:	9300      	str	r3, [sp, #0]
 80074f8:	4629      	mov	r1, r5
 80074fa:	23f0      	movs	r3, #240	; 0xf0
 80074fc:	f7fb fa21 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007500:	1d27      	adds	r7, r4, #4
        color = newColor;
 8007502:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007506:	66a3      	str	r3, [r4, #104]	; 0x68
 8007508:	4659      	mov	r1, fp
 800750a:	4638      	mov	r0, r7
 800750c:	f008 fed0 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007510:	462a      	mov	r2, r5
 8007512:	4630      	mov	r0, r6
 8007514:	4629      	mov	r1, r5
 8007516:	f7fb fa07 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 800751a:	f04f 0308 	mov.w	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800751e:	4630      	mov	r0, r6
 8007520:	a90a      	add	r1, sp, #40	; 0x28
 8007522:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007526:	f00c fa9c 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800752a:	4631      	mov	r1, r6
 800752c:	4638      	mov	r0, r7
 800752e:	f008 febf 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007532:	ae04      	add	r6, sp, #16
    textArea3.setXY(31, 60);
 8007534:	223c      	movs	r2, #60	; 0x3c
 8007536:	ee19 0a10 	vmov	r0, s18
 800753a:	211f      	movs	r1, #31
        color = newColor;
 800753c:	f04f 3bff 	mov.w	fp, #4294967295
 8007540:	f7fb f9f2 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007544:	ee19 1a10 	vmov	r1, s18
 8007548:	4630      	mov	r0, r6
        color = newColor;
 800754a:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        linespace = space;
 800754e:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007552:	f00b fa3b 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007556:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800755a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800755e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007562:	4b42      	ldr	r3, [pc, #264]	; (800766c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 8007564:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8007566:	ee19 0a10 	vmov	r0, s18
 800756a:	f04f 0335 	mov.w	r3, #53	; 0x35
 800756e:	a90a      	add	r1, sp, #40	; 0x28
 8007570:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007574:	f00b fcc4 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007578:	ee19 1a10 	vmov	r1, s18
 800757c:	4638      	mov	r0, r7
 800757e:	f008 fe97 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007582:	2304      	movs	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8007584:	4640      	mov	r0, r8
 8007586:	a90a      	add	r1, sp, #40	; 0x28
 8007588:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800758c:	f008 fe22 	bl	80101d4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 8007590:	236a      	movs	r3, #106	; 0x6a
 8007592:	4640      	mov	r0, r8
 8007594:	9300      	str	r3, [sp, #0]
 8007596:	225e      	movs	r2, #94	; 0x5e
 8007598:	23b8      	movs	r3, #184	; 0xb8
 800759a:	211c      	movs	r1, #28
 800759c:	f7fb f9d1 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 80075a0:	225c      	movs	r2, #92	; 0x5c
 80075a2:	4611      	mov	r1, r2
 80075a4:	4640      	mov	r0, r8
 80075a6:	f00b ffca 	bl	801353e <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 80075aa:	4640      	mov	r0, r8
 80075ac:	225a      	movs	r2, #90	; 0x5a
 80075ae:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80075b2:	f00c f849 	bl	8013648 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 80075b6:	462b      	mov	r3, r5
 80075b8:	225a      	movs	r2, #90	; 0x5a
 80075ba:	4640      	mov	r0, r8
 80075bc:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80075c0:	9500      	str	r5, [sp, #0]
 80075c2:	f008 fcb4 	bl	800ff2e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 80075c6:	4640      	mov	r0, r8
 80075c8:	4629      	mov	r1, r5
 80075ca:	f00b ffe7 	bl	801359c <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 80075ce:	2335      	movs	r3, #53	; 0x35
 80075d0:	2208      	movs	r2, #8
 80075d2:	4640      	mov	r0, r8
 80075d4:	2105      	movs	r1, #5
 80075d6:	f00b ff9d 	bl	8013514 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80075da:	4640      	mov	r0, r8
 80075dc:	2101      	movs	r1, #1
 80075de:	f00b ff3b 	bl	8013458 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80075e2:	4640      	mov	r0, r8
 80075e4:	2101      	movs	r1, #1
 80075e6:	f00b ff3a 	bl	801345e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 80075ea:	4641      	mov	r1, r8
 80075ec:	4638      	mov	r0, r7
 80075ee:	f008 fe5f 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 80075f2:	230f      	movs	r3, #15
 80075f4:	22e6      	movs	r2, #230	; 0xe6
 80075f6:	9300      	str	r3, [sp, #0]
 80075f8:	4629      	mov	r1, r5
 80075fa:	23f0      	movs	r3, #240	; 0xf0
 80075fc:	4648      	mov	r0, r9
 80075fe:	f7fb f9a0 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007602:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        color = newColor;
 8007606:	f8c4 b2b0 	str.w	fp, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 800760a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 800760e:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 8007612:	4649      	mov	r1, r9
 8007614:	4630      	mov	r0, r6
 8007616:	4798      	blx	r3
 8007618:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800761c:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007620:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8007684 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f4>
 8007624:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 8007628:	f504 63b3 	add.w	r3, r4, #1432	; 0x598
 800762c:	9303      	str	r3, [sp, #12]
 800762e:	f8d8 3000 	ldr.w	r3, [r8]
 8007632:	b92b      	cbnz	r3, 8007640 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b0>
 8007634:	4b0e      	ldr	r3, [pc, #56]	; (8007670 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 8007636:	4a0f      	ldr	r2, [pc, #60]	; (8007674 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8007638:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800763a:	480f      	ldr	r0, [pc, #60]	; (8007678 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 800763c:	f023 fdd8 	bl	802b1f0 <__assert_func>
 8007640:	4b0e      	ldr	r3, [pc, #56]	; (800767c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 8007642:	881b      	ldrh	r3, [r3, #0]
 8007644:	2b15      	cmp	r3, #21
 8007646:	d81f      	bhi.n	8007688 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f8>
 8007648:	4b0d      	ldr	r3, [pc, #52]	; (8007680 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>)
 800764a:	4a0a      	ldr	r2, [pc, #40]	; (8007674 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 800764c:	2161      	movs	r1, #97	; 0x61
 800764e:	e7f4      	b.n	800763a <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2aa>
 8007650:	0802e4e8 	.word	0x0802e4e8
 8007654:	0802f2d4 	.word	0x0802f2d4
 8007658:	0802f520 	.word	0x0802f520
 800765c:	0802ce20 	.word	0x0802ce20
 8007660:	0802f008 	.word	0x0802f008
 8007664:	0802e4d0 	.word	0x0802e4d0
 8007668:	08007377 	.word	0x08007377
 800766c:	0802cd80 	.word	0x0802cd80
 8007670:	0802cbd0 	.word	0x0802cbd0
 8007674:	0802ccd5 	.word	0x0802ccd5
 8007678:	0802cc4d 	.word	0x0802cc4d
 800767c:	20013878 	.word	0x20013878
 8007680:	0802cc94 	.word	0x0802cc94
 8007684:	20013874 	.word	0x20013874
        return texts->getText(typedTextId);
 8007688:	4bdb      	ldr	r3, [pc, #876]	; (80079f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 800768a:	2115      	movs	r1, #21
 800768c:	6818      	ldr	r0, [r3, #0]
 800768e:	f000 ff9f 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 8007692:	4ada      	ldr	r2, [pc, #872]	; (80079fc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x66c>)
 8007694:	4603      	mov	r3, r0
 8007696:	210a      	movs	r1, #10
 8007698:	9803      	ldr	r0, [sp, #12]
 800769a:	f012 f88f 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 800769e:	9903      	ldr	r1, [sp, #12]
        : typedTextId(id)
 80076a0:	4bd7      	ldr	r3, [pc, #860]	; (8007a00 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 80076a2:	f8c4 12c8 	str.w	r1, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 80076a6:	4648      	mov	r0, r9
 80076a8:	930a      	str	r3, [sp, #40]	; 0x28
 80076aa:	a90a      	add	r1, sp, #40	; 0x28
 80076ac:	2318      	movs	r3, #24
 80076ae:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80076b2:	f00b fc25 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80076b6:	4649      	mov	r1, r9
 80076b8:	4638      	mov	r0, r7
 80076ba:	f008 fdf9 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 80076be:	210f      	movs	r1, #15
 80076c0:	22d7      	movs	r2, #215	; 0xd7
 80076c2:	ee19 0a90 	vmov	r0, s19
 80076c6:	9100      	str	r1, [sp, #0]
 80076c8:	23f0      	movs	r3, #240	; 0xf0
 80076ca:	4629      	mov	r1, r5
 80076cc:	f7fb f939 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 80076d0:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        color = newColor;
 80076d4:	f8c4 b2fc 	str.w	fp, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 80076d8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80076dc:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        boundingArea = calculateBoundingArea();
 80076e0:	ee19 1a90 	vmov	r1, s19
 80076e4:	4630      	mov	r0, r6
 80076e6:	4798      	blx	r3
 80076e8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80076ec:	f504 7342 	add.w	r3, r4, #776	; 0x308
 80076f0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80076f4:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 80076f8:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 80076fc:	2b00      	cmp	r3, #0
 80076fe:	d099      	beq.n	8007634 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007700:	49c0      	ldr	r1, [pc, #768]	; (8007a04 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8007702:	880b      	ldrh	r3, [r1, #0]
 8007704:	2b16      	cmp	r3, #22
 8007706:	d99f      	bls.n	8007648 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b8>
        return texts->getText(typedTextId);
 8007708:	4abb      	ldr	r2, [pc, #748]	; (80079f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 800770a:	2116      	movs	r1, #22
 800770c:	6810      	ldr	r0, [r2, #0]
 800770e:	f000 ff5f 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 8007712:	4aba      	ldr	r2, [pc, #744]	; (80079fc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x66c>)
 8007714:	4603      	mov	r3, r0
 8007716:	210a      	movs	r1, #10
 8007718:	4648      	mov	r0, r9
 800771a:	f012 f84f 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800771e:	4bb8      	ldr	r3, [pc, #736]	; (8007a00 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007720:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 8007724:	a80a      	add	r0, sp, #40	; 0x28
 8007726:	4601      	mov	r1, r0
 8007728:	930a      	str	r3, [sp, #40]	; 0x28
 800772a:	ee19 0a90 	vmov	r0, s19
 800772e:	2319      	movs	r3, #25
 8007730:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007734:	f00b fbe4 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007738:	ee19 1a90 	vmov	r1, s19
 800773c:	4638      	mov	r0, r7
 800773e:	f008 fdb7 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 8007742:	200f      	movs	r0, #15
 8007744:	22c8      	movs	r2, #200	; 0xc8
 8007746:	9000      	str	r0, [sp, #0]
 8007748:	23f0      	movs	r3, #240	; 0xf0
 800774a:	ee1a 0a10 	vmov	r0, s20
 800774e:	4629      	mov	r1, r5
 8007750:	f7fb f8f7 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007754:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        color = newColor;
 8007758:	f8c4 b348 	str.w	fp, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 800775c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007760:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        boundingArea = calculateBoundingArea();
 8007764:	ee1a 1a10 	vmov	r1, s20
 8007768:	4630      	mov	r0, r6
 800776a:	4798      	blx	r3
 800776c:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007770:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8007774:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007778:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 800777c:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 8007780:	2b00      	cmp	r3, #0
 8007782:	f43f af57 	beq.w	8007634 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007786:	499f      	ldr	r1, [pc, #636]	; (8007a04 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8007788:	880b      	ldrh	r3, [r1, #0]
 800778a:	2b17      	cmp	r3, #23
 800778c:	f67f af5c 	bls.w	8007648 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b8>
        return texts->getText(typedTextId);
 8007790:	4a99      	ldr	r2, [pc, #612]	; (80079f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 8007792:	2117      	movs	r1, #23
 8007794:	6810      	ldr	r0, [r2, #0]
 8007796:	f000 ff1b 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 800779a:	4a98      	ldr	r2, [pc, #608]	; (80079fc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x66c>)
 800779c:	4603      	mov	r3, r0
 800779e:	210a      	movs	r1, #10
 80077a0:	4648      	mov	r0, r9
 80077a2:	f012 f80b 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80077a6:	4b96      	ldr	r3, [pc, #600]	; (8007a00 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 80077a8:	930a      	str	r3, [sp, #40]	; 0x28
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 80077aa:	ee1a 0a10 	vmov	r0, s20
 80077ae:	231a      	movs	r3, #26
 80077b0:	a90a      	add	r1, sp, #40	; 0x28
 80077b2:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 80077b6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80077ba:	f00b fba1 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80077be:	ee1a 1a10 	vmov	r1, s20
 80077c2:	4638      	mov	r0, r7
 80077c4:	f008 fd74 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 80077c8:	224c      	movs	r2, #76	; 0x4c
 80077ca:	ee1a 0a90 	vmov	r0, s21
 80077ce:	2171      	movs	r1, #113	; 0x71
 80077d0:	f7fb f8aa 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80077d4:	ee1a 1a90 	vmov	r1, s21
 80077d8:	4630      	mov	r0, r6
        color = newColor;
 80077da:	f8c4 b394 	str.w	fp, [r4, #916]	; 0x394
        linespace = space;
 80077de:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 80077e2:	f00b f8f3 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80077e6:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80077ea:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 80077ee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80077f2:	4b83      	ldr	r3, [pc, #524]	; (8007a00 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 80077f4:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 80077f6:	ee1a 0a90 	vmov	r0, s21
 80077fa:	231b      	movs	r3, #27
 80077fc:	a90a      	add	r1, sp, #40	; 0x28
 80077fe:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007802:	f00b fb7d 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007806:	ee1a 1a90 	vmov	r1, s21
 800780a:	4638      	mov	r0, r7
 800780c:	f008 fd50 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 8007810:	22b9      	movs	r2, #185	; 0xb9
 8007812:	ee1b 0a10 	vmov	r0, s22
 8007816:	4629      	mov	r1, r5
 8007818:	f7fb f886 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 800781c:	ee1b 1a10 	vmov	r1, s22
 8007820:	4630      	mov	r0, r6
        color = newColor;
 8007822:	f8c4 b3dc 	str.w	fp, [r4, #988]	; 0x3dc
        linespace = space;
 8007826:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 800782a:	f00b f8cf 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800782e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007832:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 8007836:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800783a:	4b71      	ldr	r3, [pc, #452]	; (8007a00 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 800783c:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 800783e:	ee1b 0a10 	vmov	r0, s22
 8007842:	231c      	movs	r3, #28
 8007844:	a90a      	add	r1, sp, #40	; 0x28
 8007846:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800784a:	f00b fb59 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800784e:	ee1b 1a10 	vmov	r1, s22
 8007852:	4638      	mov	r0, r7
 8007854:	f008 fd2c 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 8007858:	22b9      	movs	r2, #185	; 0xb9
 800785a:	ee1b 0a90 	vmov	r0, s23
 800785e:	21d9      	movs	r1, #217	; 0xd9
 8007860:	f7fb f862 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8007864:	ee1b 1a90 	vmov	r1, s23
 8007868:	4630      	mov	r0, r6
        color = newColor;
 800786a:	f8c4 b424 	str.w	fp, [r4, #1060]	; 0x424
        linespace = space;
 800786e:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 8007872:	f00b f8ab 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007876:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800787a:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 800787e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007882:	4b5f      	ldr	r3, [pc, #380]	; (8007a00 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007884:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 8007886:	ee1b 0a90 	vmov	r0, s23
 800788a:	231d      	movs	r3, #29
 800788c:	a90a      	add	r1, sp, #40	; 0x28
 800788e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007892:	f00b fb35 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007896:	ee1b 1a90 	vmov	r1, s23
 800789a:	4638      	mov	r0, r7
 800789c:	f008 fd08 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80078a0:	230a      	movs	r3, #10
 80078a2:	9300      	str	r3, [sp, #0]
 80078a4:	2232      	movs	r2, #50	; 0x32
 80078a6:	23f0      	movs	r3, #240	; 0xf0
 80078a8:	4629      	mov	r1, r5
 80078aa:	4650      	mov	r0, sl
 80078ac:	f7fb f849 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 80078b0:	9b02      	ldr	r3, [sp, #8]
 80078b2:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80078b6:	22a0      	movs	r2, #160	; 0xa0
 80078b8:	4611      	mov	r1, r2
 80078ba:	4650      	mov	r0, sl
 80078bc:	f8c4 b4b8 	str.w	fp, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80078c0:	f8a4 b4bc 	strh.w	fp, [r4, #1212]	; 0x4bc
 80078c4:	f00a fed6 	bl	8012674 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80078c8:	22a0      	movs	r2, #160	; 0xa0
 80078ca:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80078ce:	4650      	mov	r0, sl
 80078d0:	f00a fedb 	bl	801268a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80078d4:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 80078d8:	2b20      	cmp	r3, #32
 80078da:	d005      	beq.n	80078e8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x558>
        lineWidthQ5 = widthQ5;
 80078dc:	2320      	movs	r3, #32
 80078de:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 80078e2:	4650      	mov	r0, sl
 80078e4:	f00a fdd0 	bl	8012488 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80078e8:	4650      	mov	r0, sl
 80078ea:	2101      	movs	r1, #1
 80078ec:	f00a fed8 	bl	80126a0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80078f0:	4651      	mov	r1, sl
 80078f2:	4638      	mov	r0, r7
 80078f4:	f008 fcdc 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80078f8:	f04f 36ff 	mov.w	r6, #4294967295
        boundingArea = calculateBoundingArea();
 80078fc:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 80078fe:	ee18 0a10 	vmov	r0, s16
 8007902:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007904:	f04f 0900 	mov.w	r9, #0
 8007908:	2145      	movs	r1, #69	; 0x45
 800790a:	f7fb f80d 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800790e:	ee18 1a10 	vmov	r1, s16
 8007912:	4628      	mov	r0, r5
        color = newColor;
 8007914:	f8c4 64f0 	str.w	r6, [r4, #1264]	; 0x4f0
        linespace = space;
 8007918:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 800791c:	f00b f856 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007920:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007924:	ee18 3a10 	vmov	r3, s16
 8007928:	333c      	adds	r3, #60	; 0x3c
 800792a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800792e:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8007a00 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>
 8007932:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8007936:	233c      	movs	r3, #60	; 0x3c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 8007938:	ee18 0a10 	vmov	r0, s16
 800793c:	a90a      	add	r1, sp, #40	; 0x28
 800793e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007942:	f00b fadd 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007946:	ee18 1a10 	vmov	r1, s16
 800794a:	4638      	mov	r0, r7
 800794c:	f008 fcb0 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007950:	ee18 0a90 	vmov	r0, s17
 8007954:	220c      	movs	r2, #12
 8007956:	2136      	movs	r1, #54	; 0x36
 8007958:	f7fa ffe6 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 800795c:	ee18 1a90 	vmov	r1, s17
 8007960:	4628      	mov	r0, r5
        color = newColor;
 8007962:	f8c4 6538 	str.w	r6, [r4, #1336]	; 0x538
        linespace = space;
 8007966:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 800796a:	f00b f82f 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800796e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007972:	ee18 3a90 	vmov	r3, s17
 8007976:	333c      	adds	r3, #60	; 0x3c
 8007978:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800797c:	233b      	movs	r3, #59	; 0x3b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 800797e:	ee18 0a90 	vmov	r0, s17
 8007982:	a90a      	add	r1, sp, #40	; 0x28
 8007984:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007988:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 800798c:	f00b fab8 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007990:	ee18 1a90 	vmov	r1, s17
 8007994:	4638      	mov	r0, r7
 8007996:	f008 fc8b 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 800799a:	ee1c 0a10 	vmov	r0, s24
 800799e:	f44f 7280 	mov.w	r2, #256	; 0x100
 80079a2:	2121      	movs	r1, #33	; 0x21
 80079a4:	f7fa ffc0 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80079a8:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80079aa:	aa0a      	add	r2, sp, #40	; 0x28
 80079ac:	a909      	add	r1, sp, #36	; 0x24
 80079ae:	ee1c 0a10 	vmov	r0, s24
 80079b2:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80079b6:	2302      	movs	r3, #2
 80079b8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80079bc:	f00b fe5b 	bl	8013676 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80079c0:	233a      	movs	r3, #58	; 0x3a
        updateTextPosition();
 80079c2:	ee1c 0a10 	vmov	r0, s24
 80079c6:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 80079ca:	f7fa fff1 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80079ce:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 80079d2:	3304      	adds	r3, #4
 80079d4:	4638      	mov	r0, r7
 80079d6:	ee1c 1a10 	vmov	r1, s24
        color = col;
 80079da:	f8c4 658c 	str.w	r6, [r4, #1420]	; 0x58c
        colorPressed = col;
 80079de:	f8c4 6590 	str.w	r6, [r4, #1424]	; 0x590
 80079e2:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 80079e6:	f008 fc63 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80079ea:	4620      	mov	r0, r4
 80079ec:	b00d      	add	sp, #52	; 0x34
 80079ee:	ecbd 8b0a 	vpop	{d8-d12}
 80079f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80079f6:	bf00      	nop
 80079f8:	20013880 	.word	0x20013880
 80079fc:	0802cd0d 	.word	0x0802cd0d
 8007a00:	0802cd80 	.word	0x0802cd80
 8007a04:	20013878 	.word	0x20013878

08007a08 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{

}
 8007a08:	4770      	bx	lr

08007a0a <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007a0a:	4770      	bx	lr

08007a0c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007a0c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007a0e:	68c2      	ldr	r2, [r0, #12]
 8007a10:	6844      	ldr	r4, [r0, #4]
 8007a12:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007a14:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007a16:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007a1a:	07d2      	lsls	r2, r2, #31
 8007a1c:	bf48      	it	mi
 8007a1e:	5962      	ldrmi	r2, [r4, r5]
 8007a20:	689b      	ldr	r3, [r3, #8]
    }
 8007a22:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007a24:	bf48      	it	mi
 8007a26:	58d3      	ldrmi	r3, [r2, r3]
 8007a28:	4718      	bx	r3

08007a2a <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007a2a:	6843      	ldr	r3, [r0, #4]
 8007a2c:	b12b      	cbz	r3, 8007a3a <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007a2e:	6883      	ldr	r3, [r0, #8]
 8007a30:	b92b      	cbnz	r3, 8007a3e <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007a32:	68c0      	ldr	r0, [r0, #12]
 8007a34:	f000 0001 	and.w	r0, r0, #1
 8007a38:	4770      	bx	lr
 8007a3a:	4618      	mov	r0, r3
 8007a3c:	4770      	bx	lr
 8007a3e:	2001      	movs	r0, #1
    }
 8007a40:	4770      	bx	lr

08007a42 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007a42:	b510      	push	{r4, lr}
 8007a44:	2110      	movs	r1, #16
 8007a46:	4604      	mov	r4, r0
 8007a48:	f022 fdbf 	bl	802a5ca <_ZdlPvj>
 8007a4c:	4620      	mov	r0, r4
 8007a4e:	bd10      	pop	{r4, pc}

08007a50 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007a50:	b510      	push	{r4, lr}
 8007a52:	4b03      	ldr	r3, [pc, #12]	; (8007a60 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x10>)
 8007a54:	6003      	str	r3, [r0, #0]
 8007a56:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007a58:	f00d f800 	bl	8014a5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007a5c:	4620      	mov	r0, r4
 8007a5e:	bd10      	pop	{r4, pc}
 8007a60:	0802e538 	.word	0x0802e538

08007a64 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007a64:	b507      	push	{r0, r1, r2, lr}
 8007a66:	4b07      	ldr	r3, [pc, #28]	; (8007a84 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev+0x20>)
 8007a68:	6003      	str	r3, [r0, #0]
 8007a6a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007a6c:	f00c fff6 	bl	8014a5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007a70:	9801      	ldr	r0, [sp, #4]
 8007a72:	f241 015c 	movw	r1, #4188	; 0x105c
 8007a76:	f022 fda8 	bl	802a5ca <_ZdlPvj>
 8007a7a:	9801      	ldr	r0, [sp, #4]
 8007a7c:	b003      	add	sp, #12
 8007a7e:	f85d fb04 	ldr.w	pc, [sp], #4
 8007a82:	bf00      	nop
 8007a84:	0802e538 	.word	0x0802e538

08007a88 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007a88:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8007a8c:	4288      	cmp	r0, r1
{
 8007a8e:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007a90:	d105      	bne.n	8007a9e <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007a92:	f00e fce5 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8007a96:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007a9a:	f7fc bd97 	b.w	80045cc <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007a9e:	bd08      	pop	{r3, pc}

08007aa0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 8007aa0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007aa4:	ed2d 8b02 	vpush	{d8}
 8007aa8:	4604      	mov	r4, r0
 8007aaa:	b08d      	sub	sp, #52	; 0x34
 8007aac:	f010 f958 	bl	8017d60 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8007ab0:	4622      	mov	r2, r4
 8007ab2:	2500      	movs	r5, #0
 8007ab4:	4ba4      	ldr	r3, [pc, #656]	; (8007d48 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2a8>)
 8007ab6:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007ab8:	f842 3b40 	str.w	r3, [r2], #64
 8007abc:	ee08 2a10 	vmov	s16, r2
        : Widget(), alpha(255), color(0)
 8007ac0:	4629      	mov	r1, r5
 8007ac2:	2226      	movs	r2, #38	; 0x26
 8007ac4:	ee18 0a10 	vmov	r0, s16
 8007ac8:	f023 fd97 	bl	802b5fa <memset>
 8007acc:	ee18 0a10 	vmov	r0, s16
 8007ad0:	f7fa ff5c 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8007ad4:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 8007ad8:	26ff      	movs	r6, #255	; 0xff
 8007ada:	4b9c      	ldr	r3, [pc, #624]	; (8007d4c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2ac>)
 8007adc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007ade:	2226      	movs	r2, #38	; 0x26
 8007ae0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007ae4:	4629      	mov	r1, r5
 8007ae6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007aea:	66a5      	str	r5, [r4, #104]	; 0x68
 8007aec:	4658      	mov	r0, fp
 8007aee:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007af2:	f023 fd82 	bl	802b5fa <memset>
 8007af6:	4658      	mov	r0, fp
 8007af8:	f7fa ff48 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8007afc:	4b94      	ldr	r3, [pc, #592]	; (8007d50 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b0>)
 8007afe:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007b00:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007b04:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007b08:	a90a      	add	r1, sp, #40	; 0x28
 8007b0a:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007b0e:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007b12:	4658      	mov	r0, fp
 8007b14:	f00b ffa5 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007b18:	4638      	mov	r0, r7
 8007b1a:	f00a fc95 	bl	8012448 <_ZN8touchgfx4LineC1Ev>
 8007b1e:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007b22:	4618      	mov	r0, r3
 8007b24:	9303      	str	r3, [sp, #12]
 8007b26:	f7fa fd35 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007b2a:	4b8a      	ldr	r3, [pc, #552]	; (8007d54 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b4>)
 8007b2c:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8007b30:	f504 7a8e 	add.w	sl, r4, #284	; 0x11c
 8007b34:	3324      	adds	r3, #36	; 0x24
 8007b36:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8007b3a:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 8007b3e:	4650      	mov	r0, sl
 8007b40:	f504 79b2 	add.w	r9, r4, #356	; 0x164
 8007b44:	f7fa ff86 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8007b48:	f504 78d6 	add.w	r8, r4, #428	; 0x1ac
 8007b4c:	4648      	mov	r0, r9
 8007b4e:	f7fa ff81 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8007b52:	4640      	mov	r0, r8
 8007b54:	f7fa ff7e 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8007b58:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8007b5c:	4618      	mov	r0, r3
 8007b5e:	ee08 3a90 	vmov	s17, r3
 8007b62:	f00c f8b5 	bl	8013cd0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007b66:	4a7c      	ldr	r2, [pc, #496]	; (8007d58 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b8>)
 8007b68:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007b6c:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8007b70:	4a7a      	ldr	r2, [pc, #488]	; (8007d5c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2bc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007b72:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007b76:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8007b7a:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8007b7e:	f00c ff63 	bl	8014a48 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007b82:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007b86:	462a      	mov	r2, r5
 8007b88:	ee18 0a10 	vmov	r0, s16
 8007b8c:	9300      	str	r3, [sp, #0]
 8007b8e:	4629      	mov	r1, r5
 8007b90:	23f0      	movs	r3, #240	; 0xf0
 8007b92:	f7fa fed6 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007b96:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007b98:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007b9c:	66a3      	str	r3, [r4, #104]	; 0x68
 8007b9e:	ee18 1a10 	vmov	r1, s16
 8007ba2:	4630      	mov	r0, r6
 8007ba4:	f008 fb84 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007ba8:	462a      	mov	r2, r5
 8007baa:	4629      	mov	r1, r5
 8007bac:	4658      	mov	r0, fp
 8007bae:	f7fa febb 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8007bb2:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007bb4:	a90a      	add	r1, sp, #40	; 0x28
 8007bb6:	4658      	mov	r0, fp
 8007bb8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007bbc:	f00b ff51 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007bc0:	4659      	mov	r1, fp
 8007bc2:	4630      	mov	r0, r6
 8007bc4:	f008 fb74 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007bc8:	230a      	movs	r3, #10
 8007bca:	9300      	str	r3, [sp, #0]
 8007bcc:	2232      	movs	r2, #50	; 0x32
 8007bce:	23f0      	movs	r3, #240	; 0xf0
 8007bd0:	4629      	mov	r1, r5
 8007bd2:	4638      	mov	r0, r7
 8007bd4:	f7fa feb5 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007bd8:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007bdc:	22a0      	movs	r2, #160	; 0xa0
 8007bde:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007be2:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8007be6:	9b03      	ldr	r3, [sp, #12]
 8007be8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8007bec:	4611      	mov	r1, r2
 8007bee:	4638      	mov	r0, r7
 8007bf0:	f00a fd40 	bl	8012674 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007bf4:	22a0      	movs	r2, #160	; 0xa0
 8007bf6:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007bfa:	4638      	mov	r0, r7
 8007bfc:	f00a fd45 	bl	801268a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007c00:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8007c04:	2b20      	cmp	r3, #32
 8007c06:	d005      	beq.n	8007c14 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x174>
        lineWidthQ5 = widthQ5;
 8007c08:	2320      	movs	r3, #32
 8007c0a:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 8007c0e:	4638      	mov	r0, r7
 8007c10:	f00a fc3a 	bl	8012488 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007c14:	4638      	mov	r0, r7
 8007c16:	2101      	movs	r1, #1
 8007c18:	f00a fd42 	bl	80126a0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007c1c:	4639      	mov	r1, r7
 8007c1e:	4630      	mov	r0, r6
 8007c20:	f008 fb46 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007c24:	ad04      	add	r5, sp, #16
        color = newColor;
 8007c26:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 8007c2a:	f04f 0b00 	mov.w	fp, #0
    textArea2.setXY(69, 35);
 8007c2e:	2223      	movs	r2, #35	; 0x23
 8007c30:	4650      	mov	r0, sl
 8007c32:	2145      	movs	r1, #69	; 0x45
 8007c34:	f7fa fe78 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007c38:	4651      	mov	r1, sl
 8007c3a:	4628      	mov	r0, r5
        color = newColor;
 8007c3c:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 8007c40:	f8a4 b150 	strh.w	fp, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 8007c44:	f00a fec2 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c48:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007c4c:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8007c50:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007c54:	4b42      	ldr	r3, [pc, #264]	; (8007d60 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 8007c56:	930a      	str	r3, [sp, #40]	; 0x28
 8007c58:	223f      	movs	r2, #63	; 0x3f
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 8007c5a:	a90a      	add	r1, sp, #40	; 0x28
 8007c5c:	4650      	mov	r0, sl
 8007c5e:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8007c62:	f00b f94d 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c66:	4651      	mov	r1, sl
 8007c68:	4630      	mov	r0, r6
 8007c6a:	f008 fb21 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8007c6e:	223c      	movs	r2, #60	; 0x3c
 8007c70:	4648      	mov	r0, r9
 8007c72:	211f      	movs	r1, #31
 8007c74:	f7fa fe58 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8007c78:	4649      	mov	r1, r9
 8007c7a:	4628      	mov	r0, r5
        color = newColor;
 8007c7c:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 8007c80:	f8a4 b198 	strh.w	fp, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 8007c84:	f00a fea2 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c88:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007c8c:	f109 0c3c 	add.w	ip, r9, #60	; 0x3c
 8007c90:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8007c94:	4b32      	ldr	r3, [pc, #200]	; (8007d60 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 8007c96:	930a      	str	r3, [sp, #40]	; 0x28
 8007c98:	2234      	movs	r2, #52	; 0x34
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 8007c9a:	a90a      	add	r1, sp, #40	; 0x28
 8007c9c:	4648      	mov	r0, r9
 8007c9e:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8007ca2:	f00b f92d 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007ca6:	4649      	mov	r1, r9
 8007ca8:	4630      	mov	r0, r6
 8007caa:	f008 fb01 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007cae:	220c      	movs	r2, #12
 8007cb0:	4640      	mov	r0, r8
 8007cb2:	2136      	movs	r1, #54	; 0x36
 8007cb4:	f7fa fe38 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8007cb8:	4641      	mov	r1, r8
 8007cba:	4628      	mov	r0, r5
        color = newColor;
 8007cbc:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8007cc0:	f8a4 b1e0 	strh.w	fp, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8007cc4:	f00a fe82 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007cc8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007ccc:	f108 0c3c 	add.w	ip, r8, #60	; 0x3c
 8007cd0:	4b23      	ldr	r3, [pc, #140]	; (8007d60 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 8007cd2:	930a      	str	r3, [sp, #40]	; 0x28
 8007cd4:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8007cd8:	233e      	movs	r3, #62	; 0x3e
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8007cda:	a90a      	add	r1, sp, #40	; 0x28
 8007cdc:	4640      	mov	r0, r8
 8007cde:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007ce2:	f00b f90d 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007ce6:	4641      	mov	r1, r8
 8007ce8:	4630      	mov	r0, r6
 8007cea:	f008 fae1 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8007cee:	ee18 0a90 	vmov	r0, s17
 8007cf2:	f240 1201 	movw	r2, #257	; 0x101
 8007cf6:	2121      	movs	r1, #33	; 0x21
 8007cf8:	f7fa fe16 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8007cfc:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007cfe:	aa0a      	add	r2, sp, #40	; 0x28
 8007d00:	a909      	add	r1, sp, #36	; 0x24
 8007d02:	ee18 0a90 	vmov	r0, s17
 8007d06:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007d0a:	2302      	movs	r3, #2
 8007d0c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007d10:	f00b fcb1 	bl	8013676 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007d14:	233d      	movs	r3, #61	; 0x3d
        updateTextPosition();
 8007d16:	ee18 0a90 	vmov	r0, s17
 8007d1a:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 8007d1e:	f7fa fe47 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007d22:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8007d26:	330c      	adds	r3, #12
 8007d28:	4630      	mov	r0, r6
        colorPressed = col;
 8007d2a:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 8007d2e:	ee18 1a90 	vmov	r1, s17
 8007d32:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 8007d36:	f008 fabb 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007d3a:	4620      	mov	r0, r4
 8007d3c:	b00d      	add	sp, #52	; 0x34
 8007d3e:	ecbd 8b02 	vpop	{d8}
 8007d42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007d46:	bf00      	nop
 8007d48:	0802e538 	.word	0x0802e538
 8007d4c:	0802f2d4 	.word	0x0802f2d4
 8007d50:	0802f520 	.word	0x0802f520
 8007d54:	0802f008 	.word	0x0802f008
 8007d58:	0802e520 	.word	0x0802e520
 8007d5c:	08007a89 	.word	0x08007a89
 8007d60:	0802cd80 	.word	0x0802cd80

08007d64 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8007d64:	4770      	bx	lr

08007d66 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007d66:	4770      	bx	lr

08007d68 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007d68:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007d6a:	68c2      	ldr	r2, [r0, #12]
 8007d6c:	6844      	ldr	r4, [r0, #4]
 8007d6e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007d70:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007d72:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007d76:	07d2      	lsls	r2, r2, #31
 8007d78:	bf48      	it	mi
 8007d7a:	5962      	ldrmi	r2, [r4, r5]
 8007d7c:	689b      	ldr	r3, [r3, #8]
    }
 8007d7e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007d80:	bf48      	it	mi
 8007d82:	58d3      	ldrmi	r3, [r2, r3]
 8007d84:	4718      	bx	r3

08007d86 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007d86:	6843      	ldr	r3, [r0, #4]
 8007d88:	b12b      	cbz	r3, 8007d96 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007d8a:	6883      	ldr	r3, [r0, #8]
 8007d8c:	b92b      	cbnz	r3, 8007d9a <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007d8e:	68c0      	ldr	r0, [r0, #12]
 8007d90:	f000 0001 	and.w	r0, r0, #1
 8007d94:	4770      	bx	lr
 8007d96:	4618      	mov	r0, r3
 8007d98:	4770      	bx	lr
 8007d9a:	2001      	movs	r0, #1
    }
 8007d9c:	4770      	bx	lr

08007d9e <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007d9e:	b510      	push	{r4, lr}
 8007da0:	2110      	movs	r1, #16
 8007da2:	4604      	mov	r4, r0
 8007da4:	f022 fc11 	bl	802a5ca <_ZdlPvj>
 8007da8:	4620      	mov	r0, r4
 8007daa:	bd10      	pop	{r4, pc}

08007dac <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8007dac:	b510      	push	{r4, lr}
 8007dae:	4b03      	ldr	r3, [pc, #12]	; (8007dbc <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8007db0:	6003      	str	r3, [r0, #0]
 8007db2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007db4:	f00c fe52 	bl	8014a5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007db8:	4620      	mov	r0, r4
 8007dba:	bd10      	pop	{r4, pc}
 8007dbc:	0802e584 	.word	0x0802e584

08007dc0 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8007dc0:	b507      	push	{r0, r1, r2, lr}
 8007dc2:	4b07      	ldr	r3, [pc, #28]	; (8007de0 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8007dc4:	6003      	str	r3, [r0, #0]
 8007dc6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007dc8:	f00c fe48 	bl	8014a5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007dcc:	9801      	ldr	r0, [sp, #4]
 8007dce:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8007dd2:	f022 fbfa 	bl	802a5ca <_ZdlPvj>
 8007dd6:	9801      	ldr	r0, [sp, #4]
 8007dd8:	b003      	add	sp, #12
 8007dda:	f85d fb04 	ldr.w	pc, [sp], #4
 8007dde:	bf00      	nop
 8007de0:	0802e584 	.word	0x0802e584

08007de4 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007de4:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 8007de8:	4288      	cmp	r0, r1
{
 8007dea:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007dec:	d105      	bne.n	8007dfa <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007dee:	f00e fb37 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8007df2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8007df6:	f7fc bbb9 	b.w	800456c <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8007dfa:	bd08      	pop	{r3, pc}

08007dfc <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8007dfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007e00:	ed2d 8b04 	vpush	{d8-d9}
 8007e04:	4604      	mov	r4, r0
 8007e06:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8007e08:	46a3      	mov	fp, r4
 8007e0a:	2500      	movs	r5, #0
 8007e0c:	f00f ffa8 	bl	8017d60 <_ZN8touchgfx6ScreenC1Ev>
 8007e10:	4bd1      	ldr	r3, [pc, #836]	; (8008158 <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 8007e12:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007e14:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8007e18:	2226      	movs	r2, #38	; 0x26
 8007e1a:	4629      	mov	r1, r5
 8007e1c:	4658      	mov	r0, fp
 8007e1e:	f023 fbec 	bl	802b5fa <memset>
 8007e22:	4658      	mov	r0, fp
 8007e24:	f7fa fdb2 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8007e28:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007e2c:	26ff      	movs	r6, #255	; 0xff
 8007e2e:	4bcb      	ldr	r3, [pc, #812]	; (800815c <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 8007e30:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007e32:	2226      	movs	r2, #38	; 0x26
 8007e34:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007e38:	4629      	mov	r1, r5
 8007e3a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007e3e:	4650      	mov	r0, sl
 8007e40:	66a5      	str	r5, [r4, #104]	; 0x68
 8007e42:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007e46:	f023 fbd8 	bl	802b5fa <memset>
 8007e4a:	4650      	mov	r0, sl
 8007e4c:	f7fa fd9e 	bl	800298c <_ZN8touchgfx6WidgetC1Ev>
 8007e50:	4bc3      	ldr	r3, [pc, #780]	; (8008160 <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 8007e52:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007e54:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007e58:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007e5c:	a90a      	add	r1, sp, #40	; 0x28
 8007e5e:	4650      	mov	r0, sl
 8007e60:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007e64:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007e68:	f00b fdfb 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007e6c:	4648      	mov	r0, r9
 8007e6e:	f7fa fdf1 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8007e72:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8007e76:	4bbb      	ldr	r3, [pc, #748]	; (8008164 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 8007e78:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007e7c:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8007e80:	4638      	mov	r0, r7
 8007e82:	f00a fae1 	bl	8012448 <_ZN8touchgfx4LineC1Ev>
 8007e86:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007e8a:	4618      	mov	r0, r3
 8007e8c:	9303      	str	r3, [sp, #12]
 8007e8e:	f7fa fb81 	bl	8002594 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007e92:	4bb5      	ldr	r3, [pc, #724]	; (8008168 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 8007e94:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007e98:	3324      	adds	r3, #36	; 0x24
 8007e9a:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8007e9e:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 8007ea2:	4618      	mov	r0, r3
 8007ea4:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8007ea8:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8007eac:	ee09 3a10 	vmov	s18, r3
 8007eb0:	f00b ff0e 	bl	8013cd0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007eb4:	4640      	mov	r0, r8
 8007eb6:	f7fa fdcd 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8007eba:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8007ebe:	4618      	mov	r0, r3
 8007ec0:	ee08 3a10 	vmov	s16, r3
 8007ec4:	f7fa fdc6 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
 8007ec8:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007ecc:	4618      	mov	r0, r3
 8007ece:	ee08 3a90 	vmov	s17, r3
 8007ed2:	f7fa fdbf 	bl	8002a54 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007ed6:	4aa5      	ldr	r2, [pc, #660]	; (800816c <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 8007ed8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007edc:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 8007ee0:	4aa3      	ldr	r2, [pc, #652]	; (8008170 <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007ee2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007ee6:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 8007eea:	f504 7024 	add.w	r0, r4, #656	; 0x290
 8007eee:	f00c fdab 	bl	8014a48 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007ef2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007ef6:	462a      	mov	r2, r5
 8007ef8:	4658      	mov	r0, fp
 8007efa:	9300      	str	r3, [sp, #0]
 8007efc:	4629      	mov	r1, r5
 8007efe:	23f0      	movs	r3, #240	; 0xf0
 8007f00:	f7fa fd1f 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007f04:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007f06:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007f0a:	66a3      	str	r3, [r4, #104]	; 0x68
 8007f0c:	4659      	mov	r1, fp
 8007f0e:	4630      	mov	r0, r6
 8007f10:	f008 f9ce 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007f14:	462a      	mov	r2, r5
 8007f16:	4650      	mov	r0, sl
 8007f18:	4629      	mov	r1, r5
 8007f1a:	f7fa fd05 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8007f1e:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007f20:	4650      	mov	r0, sl
 8007f22:	a90a      	add	r1, sp, #40	; 0x28
 8007f24:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007f28:	f00b fd9b 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007f2c:	4651      	mov	r1, sl
 8007f2e:	4630      	mov	r0, r6
 8007f30:	f008 f9be 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8007f34:	f44f 729a 	mov.w	r2, #308	; 0x134
 8007f38:	2156      	movs	r1, #86	; 0x56
 8007f3a:	4648      	mov	r0, r9
 8007f3c:	f7fa fcf4 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8007f40:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007f44:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007f48:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8007f4c:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8007f50:	4650      	mov	r0, sl
 8007f52:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8007f56:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007f5a:	4649      	mov	r1, r9
 8007f5c:	4798      	blx	r3
 8007f5e:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8007f62:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007f66:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007f6a:	4b82      	ldr	r3, [pc, #520]	; (8008174 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 8007f6c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 8007f6e:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 8007f72:	b92b      	cbnz	r3, 8007f80 <_ZN20Project_InfoViewBaseC1Ev+0x184>
 8007f74:	4b80      	ldr	r3, [pc, #512]	; (8008178 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 8007f76:	4a81      	ldr	r2, [pc, #516]	; (800817c <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8007f78:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007f7a:	4881      	ldr	r0, [pc, #516]	; (8008180 <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 8007f7c:	f023 f938 	bl	802b1f0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007f80:	4b80      	ldr	r3, [pc, #512]	; (8008184 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007f82:	881b      	ldrh	r3, [r3, #0]
 8007f84:	2b22      	cmp	r3, #34	; 0x22
 8007f86:	d803      	bhi.n	8007f90 <_ZN20Project_InfoViewBaseC1Ev+0x194>
 8007f88:	4b7f      	ldr	r3, [pc, #508]	; (8008188 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 8007f8a:	4a7c      	ldr	r2, [pc, #496]	; (800817c <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8007f8c:	2161      	movs	r1, #97	; 0x61
 8007f8e:	e7f4      	b.n	8007f7a <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 8007f90:	4b7e      	ldr	r3, [pc, #504]	; (800818c <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 8007f92:	2122      	movs	r1, #34	; 0x22
 8007f94:	6818      	ldr	r0, [r3, #0]
 8007f96:	f000 fb1b 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 8007f9a:	4a7d      	ldr	r2, [pc, #500]	; (8008190 <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 8007f9c:	4603      	mov	r3, r0
 8007f9e:	2104      	movs	r1, #4
 8007fa0:	4650      	mov	r0, sl
 8007fa2:	f011 fc0b 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8007fa6:	4648      	mov	r0, r9
        wc1 = value;
 8007fa8:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8007fac:	f00a ff88 	bl	8012ec0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007fb0:	4b78      	ldr	r3, [pc, #480]	; (8008194 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 8007fb2:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8007fb4:	a90a      	add	r1, sp, #40	; 0x28
 8007fb6:	2323      	movs	r3, #35	; 0x23
 8007fb8:	4648      	mov	r0, r9
 8007fba:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007fbe:	f00a ff9f 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007fc2:	4649      	mov	r1, r9
 8007fc4:	4630      	mov	r0, r6
 8007fc6:	f008 f973 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007fca:	230a      	movs	r3, #10
 8007fcc:	9300      	str	r3, [sp, #0]
 8007fce:	2232      	movs	r2, #50	; 0x32
 8007fd0:	23f0      	movs	r3, #240	; 0xf0
 8007fd2:	4629      	mov	r1, r5
 8007fd4:	4638      	mov	r0, r7
 8007fd6:	f7fa fcb4 	bl	8002942 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007fda:	9b03      	ldr	r3, [sp, #12]
 8007fdc:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007fe0:	22a0      	movs	r2, #160	; 0xa0
 8007fe2:	4611      	mov	r1, r2
 8007fe4:	4638      	mov	r0, r7
 8007fe6:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007fea:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8007fee:	f00a fb41 	bl	8012674 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007ff2:	22a0      	movs	r2, #160	; 0xa0
 8007ff4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007ff8:	4638      	mov	r0, r7
 8007ffa:	f00a fb46 	bl	801268a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007ffe:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8008002:	2b20      	cmp	r3, #32
 8008004:	d005      	beq.n	8008012 <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 8008006:	2320      	movs	r3, #32
 8008008:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 800800c:	4638      	mov	r0, r7
 800800e:	f00a fa3b 	bl	8012488 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008012:	4638      	mov	r0, r7
 8008014:	2101      	movs	r1, #1
 8008016:	f00a fb43 	bl	80126a0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800801a:	4639      	mov	r1, r7
 800801c:	4630      	mov	r0, r6
 800801e:	f008 f947 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8008022:	ee19 0a10 	vmov	r0, s18
 8008026:	22f0      	movs	r2, #240	; 0xf0
 8008028:	2121      	movs	r1, #33	; 0x21
 800802a:	f7fa fc7d 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 800802e:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008030:	aa0a      	add	r2, sp, #40	; 0x28
 8008032:	a909      	add	r1, sp, #36	; 0x24
 8008034:	ee19 0a10 	vmov	r0, s18
 8008038:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800803c:	2302      	movs	r3, #2
 800803e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008042:	f00b fb18 	bl	8013676 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008046:	234a      	movs	r3, #74	; 0x4a
        updateTextPosition();
 8008048:	ee19 0a10 	vmov	r0, s18
 800804c:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 8008050:	f7fa fcae 	bl	80029b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8008054:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 8008058:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 800805c:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 8008060:	ee19 1a10 	vmov	r1, s18
 8008064:	4630      	mov	r0, r6
        colorPressed = col;
 8008066:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 800806a:	ad04      	add	r5, sp, #16
 800806c:	f008 f920 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8008070:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 8008074:	225b      	movs	r2, #91	; 0x5b
 8008076:	4640      	mov	r0, r8
 8008078:	2105      	movs	r1, #5
 800807a:	f7fa fc55 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800807e:	4641      	mov	r1, r8
 8008080:	4628      	mov	r0, r5
        color = newColor;
 8008082:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8008086:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 800808a:	f00a fc9f 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800808e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008092:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8008096:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800809a:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8008194 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 800809e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80080a2:	234b      	movs	r3, #75	; 0x4b
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 80080a4:	a90a      	add	r1, sp, #40	; 0x28
 80080a6:	4640      	mov	r0, r8
 80080a8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80080ac:	f00a ff28 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80080b0:	4641      	mov	r1, r8
 80080b2:	4630      	mov	r0, r6
 80080b4:	f008 f8fc 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 80080b8:	ee18 0a10 	vmov	r0, s16
 80080bc:	2223      	movs	r2, #35	; 0x23
 80080be:	2145      	movs	r1, #69	; 0x45
 80080c0:	f7fa fc32 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80080c4:	ee18 1a10 	vmov	r1, s16
 80080c8:	4628      	mov	r0, r5
        color = newColor;
 80080ca:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80080ce:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80080d2:	f00a fc7b 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80080d6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80080da:	ee18 3a10 	vmov	r3, s16
 80080de:	333c      	adds	r3, #60	; 0x3c
 80080e0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80080e4:	234d      	movs	r3, #77	; 0x4d
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 80080e6:	ee18 0a10 	vmov	r0, s16
 80080ea:	a90a      	add	r1, sp, #40	; 0x28
 80080ec:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80080f0:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80080f4:	f00a ff04 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80080f8:	ee18 1a10 	vmov	r1, s16
 80080fc:	4630      	mov	r0, r6
 80080fe:	f008 f8d7 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8008102:	ee18 0a90 	vmov	r0, s17
 8008106:	220c      	movs	r2, #12
 8008108:	2136      	movs	r1, #54	; 0x36
 800810a:	f7fa fc0d 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 800810e:	ee18 1a90 	vmov	r1, s17
 8008112:	4628      	mov	r0, r5
        color = newColor;
 8008114:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8008118:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 800811c:	f00a fc56 	bl	80129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008120:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008124:	ee18 3a90 	vmov	r3, s17
 8008128:	333c      	adds	r3, #60	; 0x3c
 800812a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800812e:	234c      	movs	r3, #76	; 0x4c
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8008130:	ee18 0a90 	vmov	r0, s17
 8008134:	a90a      	add	r1, sp, #40	; 0x28
 8008136:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800813a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800813e:	f00a fedf 	bl	8012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008142:	4630      	mov	r0, r6
 8008144:	ee18 1a90 	vmov	r1, s17
 8008148:	f008 f8b2 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800814c:	4620      	mov	r0, r4
 800814e:	b00d      	add	sp, #52	; 0x34
 8008150:	ecbd 8b04 	vpop	{d8-d9}
 8008154:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008158:	0802e584 	.word	0x0802e584
 800815c:	0802f2d4 	.word	0x0802f2d4
 8008160:	0802f520 	.word	0x0802f520
 8008164:	0802ce20 	.word	0x0802ce20
 8008168:	0802f008 	.word	0x0802f008
 800816c:	0802e56c 	.word	0x0802e56c
 8008170:	08007de5 	.word	0x08007de5
 8008174:	20013874 	.word	0x20013874
 8008178:	0802cbd0 	.word	0x0802cbd0
 800817c:	0802ccd5 	.word	0x0802ccd5
 8008180:	0802cc4d 	.word	0x0802cc4d
 8008184:	20013878 	.word	0x20013878
 8008188:	0802cc94 	.word	0x0802cc94
 800818c:	20013880 	.word	0x20013880
 8008190:	0802cd0d 	.word	0x0802cd0d
 8008194:	0802cd80 	.word	0x0802cd80

08008198 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8008198:	4770      	bx	lr

0800819a <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 800819a:	4770      	bx	lr

0800819c <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 800819c:	b510      	push	{r4, lr}
}
 800819e:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 80081a0:	4604      	mov	r4, r0
}
 80081a2:	f022 fa12 	bl	802a5ca <_ZdlPvj>
 80081a6:	4620      	mov	r0, r4
 80081a8:	bd10      	pop	{r4, pc}
	...

080081ac <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 80081ac:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80081b0:	4604      	mov	r4, r0
 80081b2:	4626      	mov	r6, r4
 80081b4:	f00f fdd4 	bl	8017d60 <_ZN8touchgfx6ScreenC1Ev>
 80081b8:	2500      	movs	r5, #0
 80081ba:	4b2e      	ldr	r3, [pc, #184]	; (8008274 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 80081bc:	63e5      	str	r5, [r4, #60]	; 0x3c
 80081be:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 80081c2:	4b2d      	ldr	r3, [pc, #180]	; (8008278 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 80081c4:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 80081c6:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 80081ca:	f44f 7280 	mov.w	r2, #256	; 0x100
 80081ce:	23ff      	movs	r3, #255	; 0xff
 80081d0:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 80081d4:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 80081d8:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 80081dc:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 80081e0:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 80081e4:	4a25      	ldr	r2, [pc, #148]	; (800827c <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 80081e6:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 80081ea:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 80081ee:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 80081f0:	a901      	add	r1, sp, #4
 80081f2:	4638      	mov	r0, r7
 80081f4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 80081f8:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 80081fc:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8008200:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8008204:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8008208:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 800820c:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8008210:	66a5      	str	r5, [r4, #104]	; 0x68
 8008212:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008216:	f00b fc24 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 800821a:	462a      	mov	r2, r5
 800821c:	4629      	mov	r1, r5
 800821e:	4630      	mov	r0, r6
 8008220:	f7fa fb82 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8008224:	4630      	mov	r0, r6
 8008226:	21f0      	movs	r1, #240	; 0xf0
 8008228:	f7fa f900 	bl	800242c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 800822c:	4630      	mov	r0, r6
 800822e:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8008232:	f7fa f8fd 	bl	8002430 <_ZN8touchgfx8Drawable9setHeightEs>
 8008236:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 800823a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800823e:	66a3      	str	r3, [r4, #104]	; 0x68
 8008240:	4631      	mov	r1, r6
 8008242:	4640      	mov	r0, r8
 8008244:	f008 f834 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8008248:	462a      	mov	r2, r5
 800824a:	4638      	mov	r0, r7
 800824c:	f06f 0102 	mvn.w	r1, #2
 8008250:	f7fa fb6a 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8008254:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8008256:	a901      	add	r1, sp, #4
 8008258:	4638      	mov	r0, r7
 800825a:	f8ad 3004 	strh.w	r3, [sp, #4]
 800825e:	f00b fc00 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008262:	4640      	mov	r0, r8
 8008264:	4639      	mov	r1, r7
 8008266:	f008 f823 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800826a:	4620      	mov	r0, r4
 800826c:	b002      	add	sp, #8
 800826e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008272:	bf00      	nop
 8008274:	0802e5b8 	.word	0x0802e5b8
 8008278:	0802f2d4 	.word	0x0802f2d4
 800827c:	0802f520 	.word	0x0802f520

08008280 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008280:	4770      	bx	lr
	...

08008284 <_Z23getFont_verdana_10_4bppv>:
{
 8008284:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008286:	4d17      	ldr	r5, [pc, #92]	; (80082e4 <_Z23getFont_verdana_10_4bppv+0x60>)
 8008288:	682c      	ldr	r4, [r5, #0]
 800828a:	f3bf 8f5b 	dmb	ish
 800828e:	f014 0401 	ands.w	r4, r4, #1
{
 8008292:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008294:	d122      	bne.n	80082dc <_Z23getFont_verdana_10_4bppv+0x58>
 8008296:	4628      	mov	r0, r5
 8008298:	f022 f999 	bl	802a5ce <__cxa_guard_acquire>
 800829c:	b1f0      	cbz	r0, 80082dc <_Z23getFont_verdana_10_4bppv+0x58>
 800829e:	233f      	movs	r3, #63	; 0x3f
 80082a0:	9309      	str	r3, [sp, #36]	; 0x24
 80082a2:	4b11      	ldr	r3, [pc, #68]	; (80082e8 <_Z23getFont_verdana_10_4bppv+0x64>)
 80082a4:	9308      	str	r3, [sp, #32]
 80082a6:	4b11      	ldr	r3, [pc, #68]	; (80082ec <_Z23getFont_verdana_10_4bppv+0x68>)
 80082a8:	9307      	str	r3, [sp, #28]
 80082aa:	2301      	movs	r3, #1
 80082ac:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80082b0:	9304      	str	r3, [sp, #16]
 80082b2:	2304      	movs	r3, #4
 80082b4:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80082b8:	230a      	movs	r3, #10
 80082ba:	490d      	ldr	r1, [pc, #52]	; (80082f0 <_Z23getFont_verdana_10_4bppv+0x6c>)
 80082bc:	9300      	str	r3, [sp, #0]
 80082be:	225f      	movs	r2, #95	; 0x5f
 80082c0:	230c      	movs	r3, #12
 80082c2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80082c6:	480b      	ldr	r0, [pc, #44]	; (80082f4 <_Z23getFont_verdana_10_4bppv+0x70>)
 80082c8:	940a      	str	r4, [sp, #40]	; 0x28
 80082ca:	9401      	str	r4, [sp, #4]
 80082cc:	f7fd fa34 	bl	8005738 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80082d0:	4809      	ldr	r0, [pc, #36]	; (80082f8 <_Z23getFont_verdana_10_4bppv+0x74>)
 80082d2:	f022 ffab 	bl	802b22c <atexit>
 80082d6:	4628      	mov	r0, r5
 80082d8:	f022 f985 	bl	802a5e6 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 80082dc:	4805      	ldr	r0, [pc, #20]	; (80082f4 <_Z23getFont_verdana_10_4bppv+0x70>)
 80082de:	b00f      	add	sp, #60	; 0x3c
 80082e0:	bd30      	pop	{r4, r5, pc}
 80082e2:	bf00      	nop
 80082e4:	2000291c 	.word	0x2000291c
 80082e8:	080471a4 	.word	0x080471a4
 80082ec:	080473e0 	.word	0x080473e0
 80082f0:	080461ec 	.word	0x080461ec
 80082f4:	20002920 	.word	0x20002920
 80082f8:	08008281 	.word	0x08008281

080082fc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 80082fc:	4770      	bx	lr
	...

08008300 <_Z23getFont_verdana_12_4bppv>:
{
 8008300:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008302:	4d17      	ldr	r5, [pc, #92]	; (8008360 <_Z23getFont_verdana_12_4bppv+0x60>)
 8008304:	682c      	ldr	r4, [r5, #0]
 8008306:	f3bf 8f5b 	dmb	ish
 800830a:	f014 0401 	ands.w	r4, r4, #1
{
 800830e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008310:	d122      	bne.n	8008358 <_Z23getFont_verdana_12_4bppv+0x58>
 8008312:	4628      	mov	r0, r5
 8008314:	f022 f95b 	bl	802a5ce <__cxa_guard_acquire>
 8008318:	b1f0      	cbz	r0, 8008358 <_Z23getFont_verdana_12_4bppv+0x58>
 800831a:	233f      	movs	r3, #63	; 0x3f
 800831c:	9309      	str	r3, [sp, #36]	; 0x24
 800831e:	4b11      	ldr	r3, [pc, #68]	; (8008364 <_Z23getFont_verdana_12_4bppv+0x64>)
 8008320:	9308      	str	r3, [sp, #32]
 8008322:	4b11      	ldr	r3, [pc, #68]	; (8008368 <_Z23getFont_verdana_12_4bppv+0x68>)
 8008324:	9307      	str	r3, [sp, #28]
 8008326:	2301      	movs	r3, #1
 8008328:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800832c:	9304      	str	r3, [sp, #16]
 800832e:	2304      	movs	r3, #4
 8008330:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008334:	230c      	movs	r3, #12
 8008336:	490d      	ldr	r1, [pc, #52]	; (800836c <_Z23getFont_verdana_12_4bppv+0x6c>)
 8008338:	9300      	str	r3, [sp, #0]
 800833a:	2260      	movs	r2, #96	; 0x60
 800833c:	230f      	movs	r3, #15
 800833e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008342:	480b      	ldr	r0, [pc, #44]	; (8008370 <_Z23getFont_verdana_12_4bppv+0x70>)
 8008344:	940a      	str	r4, [sp, #40]	; 0x28
 8008346:	9401      	str	r4, [sp, #4]
 8008348:	f7fd f9f6 	bl	8005738 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800834c:	4809      	ldr	r0, [pc, #36]	; (8008374 <_Z23getFont_verdana_12_4bppv+0x74>)
 800834e:	f022 ff6d 	bl	802b22c <atexit>
 8008352:	4628      	mov	r0, r5
 8008354:	f022 f947 	bl	802a5e6 <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8008358:	4805      	ldr	r0, [pc, #20]	; (8008370 <_Z23getFont_verdana_12_4bppv+0x70>)
 800835a:	b00f      	add	sp, #60	; 0x3c
 800835c:	bd30      	pop	{r4, r5, pc}
 800835e:	bf00      	nop
 8008360:	2000294c 	.word	0x2000294c
 8008364:	080471d8 	.word	0x080471d8
 8008368:	080473e4 	.word	0x080473e4
 800836c:	08046720 	.word	0x08046720
 8008370:	20002950 	.word	0x20002950
 8008374:	080082fd 	.word	0x080082fd

08008378 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008378:	4770      	bx	lr
	...

0800837c <_Z23getFont_verdana_19_4bppv>:
{
 800837c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800837e:	4d17      	ldr	r5, [pc, #92]	; (80083dc <_Z23getFont_verdana_19_4bppv+0x60>)
 8008380:	682c      	ldr	r4, [r5, #0]
 8008382:	f3bf 8f5b 	dmb	ish
 8008386:	f014 0401 	ands.w	r4, r4, #1
{
 800838a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800838c:	d122      	bne.n	80083d4 <_Z23getFont_verdana_19_4bppv+0x58>
 800838e:	4628      	mov	r0, r5
 8008390:	f022 f91d 	bl	802a5ce <__cxa_guard_acquire>
 8008394:	b1f0      	cbz	r0, 80083d4 <_Z23getFont_verdana_19_4bppv+0x58>
 8008396:	233f      	movs	r3, #63	; 0x3f
 8008398:	9309      	str	r3, [sp, #36]	; 0x24
 800839a:	4b11      	ldr	r3, [pc, #68]	; (80083e0 <_Z23getFont_verdana_19_4bppv+0x64>)
 800839c:	9308      	str	r3, [sp, #32]
 800839e:	4b11      	ldr	r3, [pc, #68]	; (80083e4 <_Z23getFont_verdana_19_4bppv+0x68>)
 80083a0:	9307      	str	r3, [sp, #28]
 80083a2:	2301      	movs	r3, #1
 80083a4:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80083a8:	9304      	str	r3, [sp, #16]
 80083aa:	2304      	movs	r3, #4
 80083ac:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80083b0:	2313      	movs	r3, #19
 80083b2:	490d      	ldr	r1, [pc, #52]	; (80083e8 <_Z23getFont_verdana_19_4bppv+0x6c>)
 80083b4:	9300      	str	r3, [sp, #0]
 80083b6:	225f      	movs	r2, #95	; 0x5f
 80083b8:	2317      	movs	r3, #23
 80083ba:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80083be:	480b      	ldr	r0, [pc, #44]	; (80083ec <_Z23getFont_verdana_19_4bppv+0x70>)
 80083c0:	940a      	str	r4, [sp, #40]	; 0x28
 80083c2:	9401      	str	r4, [sp, #4]
 80083c4:	f7fd f9b8 	bl	8005738 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80083c8:	4809      	ldr	r0, [pc, #36]	; (80083f0 <_Z23getFont_verdana_19_4bppv+0x74>)
 80083ca:	f022 ff2f 	bl	802b22c <atexit>
 80083ce:	4628      	mov	r0, r5
 80083d0:	f022 f909 	bl	802a5e6 <__cxa_guard_release>
    return verdana_19_4bpp;
}
 80083d4:	4805      	ldr	r0, [pc, #20]	; (80083ec <_Z23getFont_verdana_19_4bppv+0x70>)
 80083d6:	b00f      	add	sp, #60	; 0x3c
 80083d8:	bd30      	pop	{r4, r5, pc}
 80083da:	bf00      	nop
 80083dc:	2000297c 	.word	0x2000297c
 80083e0:	0804725c 	.word	0x0804725c
 80083e4:	080473e8 	.word	0x080473e8
 80083e8:	08046c60 	.word	0x08046c60
 80083ec:	20002980 	.word	0x20002980
 80083f0:	08008379 	.word	0x08008379

080083f4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80083f4:	4770      	bx	lr
	...

080083f8 <_Z23getFont_verdana_40_4bppv>:
{
 80083f8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80083fa:	4d16      	ldr	r5, [pc, #88]	; (8008454 <_Z23getFont_verdana_40_4bppv+0x5c>)
 80083fc:	682c      	ldr	r4, [r5, #0]
 80083fe:	f3bf 8f5b 	dmb	ish
 8008402:	f014 0401 	ands.w	r4, r4, #1
{
 8008406:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008408:	d120      	bne.n	800844c <_Z23getFont_verdana_40_4bppv+0x54>
 800840a:	4628      	mov	r0, r5
 800840c:	f022 f8df 	bl	802a5ce <__cxa_guard_acquire>
 8008410:	b1e0      	cbz	r0, 800844c <_Z23getFont_verdana_40_4bppv+0x54>
 8008412:	233f      	movs	r3, #63	; 0x3f
 8008414:	9309      	str	r3, [sp, #36]	; 0x24
 8008416:	4b10      	ldr	r3, [pc, #64]	; (8008458 <_Z23getFont_verdana_40_4bppv+0x60>)
 8008418:	9308      	str	r3, [sp, #32]
 800841a:	4b10      	ldr	r3, [pc, #64]	; (800845c <_Z23getFont_verdana_40_4bppv+0x64>)
 800841c:	4910      	ldr	r1, [pc, #64]	; (8008460 <_Z23getFont_verdana_40_4bppv+0x68>)
 800841e:	4811      	ldr	r0, [pc, #68]	; (8008464 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8008420:	940a      	str	r4, [sp, #40]	; 0x28
 8008422:	2201      	movs	r2, #1
 8008424:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8008428:	2304      	movs	r3, #4
 800842a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800842e:	2328      	movs	r3, #40	; 0x28
 8008430:	9300      	str	r3, [sp, #0]
 8008432:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008436:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800843a:	9405      	str	r4, [sp, #20]
 800843c:	f7fd f97c 	bl	8005738 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008440:	4809      	ldr	r0, [pc, #36]	; (8008468 <_Z23getFont_verdana_40_4bppv+0x70>)
 8008442:	f022 fef3 	bl	802b22c <atexit>
 8008446:	4628      	mov	r0, r5
 8008448:	f022 f8cd 	bl	802a5e6 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 800844c:	4805      	ldr	r0, [pc, #20]	; (8008464 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800844e:	b00f      	add	sp, #60	; 0x3c
 8008450:	bd30      	pop	{r4, r5, pc}
 8008452:	bf00      	nop
 8008454:	200029ac 	.word	0x200029ac
 8008458:	080473dc 	.word	0x080473dc
 800845c:	080473ec 	.word	0x080473ec
 8008460:	08047194 	.word	0x08047194
 8008464:	200029b0 	.word	0x200029b0
 8008468:	080083f5 	.word	0x080083f5

0800846c <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 800846c:	2000      	movs	r0, #0
 800846e:	4770      	bx	lr

08008470 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8008470:	2000      	movs	r0, #0
 8008472:	4770      	bx	lr

08008474 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008474:	b40e      	push	{r1, r2, r3}
 8008476:	b503      	push	{r0, r1, lr}
 8008478:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800847a:	2100      	movs	r1, #0
{
 800847c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8008480:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8008482:	f00e ffab 	bl	80173dc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008486:	b002      	add	sp, #8
 8008488:	f85d eb04 	ldr.w	lr, [sp], #4
 800848c:	b003      	add	sp, #12
 800848e:	4770      	bx	lr

08008490 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008490:	b40c      	push	{r2, r3}
 8008492:	b507      	push	{r0, r1, r2, lr}
 8008494:	ab04      	add	r3, sp, #16
 8008496:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800849a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800849c:	f00e ff9e 	bl	80173dc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80084a0:	b003      	add	sp, #12
 80084a2:	f85d eb04 	ldr.w	lr, [sp], #4
 80084a6:	b002      	add	sp, #8
 80084a8:	4770      	bx	lr
	...

080084ac <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80084ac:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 80084ae:	b510      	push	{r4, lr}
 80084b0:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80084b2:	b373      	cbz	r3, 8008512 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80084b4:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 80084b6:	b92b      	cbnz	r3, 80084c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80084b8:	4b18      	ldr	r3, [pc, #96]	; (800851c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80084ba:	4a19      	ldr	r2, [pc, #100]	; (8008520 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 80084bc:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80084be:	4819      	ldr	r0, [pc, #100]	; (8008524 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80084c0:	f022 fe96 	bl	802b1f0 <__assert_func>
            return buffer[pos];
 80084c4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80084c6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80084ca:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 80084cc:	b30b      	cbz	r3, 8008512 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80084ce:	f010 fbc0 	bl	8018c52 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80084d2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80084d4:	2b01      	cmp	r3, #1
 80084d6:	d803      	bhi.n	80084e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80084d8:	4b13      	ldr	r3, [pc, #76]	; (8008528 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80084da:	4a14      	ldr	r2, [pc, #80]	; (800852c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80084dc:	21cb      	movs	r1, #203	; 0xcb
 80084de:	e7ee      	b.n	80084be <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80084e0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80084e2:	1c53      	adds	r3, r2, #1
 80084e4:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80084e6:	2b09      	cmp	r3, #9
 80084e8:	4619      	mov	r1, r3
 80084ea:	bf88      	it	hi
 80084ec:	f1a3 010a 	subhi.w	r1, r3, #10
 80084f0:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80084f4:	f640 103f 	movw	r0, #2367	; 0x93f
 80084f8:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 80084fa:	4281      	cmp	r1, r0
 80084fc:	d109      	bne.n	8008512 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80084fe:	2b0a      	cmp	r3, #10
 8008500:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8008504:	bf28      	it	cs
 8008506:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8008508:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 800850c:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 800850e:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8008510:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8008512:	4620      	mov	r0, r4
}
 8008514:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8008518:	f010 ba9e 	b.w	8018a58 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800851c:	0802e5e4 	.word	0x0802e5e4
 8008520:	0802e5ed 	.word	0x0802e5ed
 8008524:	0802e698 	.word	0x0802e698
 8008528:	0802e6e2 	.word	0x0802e6e2
 800852c:	0802e6f0 	.word	0x0802e6f0

08008530 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8008530:	f010 ba59 	b.w	80189e6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08008534 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8008534:	b510      	push	{r4, lr}
 8008536:	b086      	sub	sp, #24
 8008538:	ac02      	add	r4, sp, #8
 800853a:	e884 0006 	stmia.w	r4, {r1, r2}
 800853e:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8008540:	ab0a      	add	r3, sp, #40	; 0x28
 8008542:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8008544:	9301      	str	r3, [sp, #4]
 8008546:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008548:	9300      	str	r3, [sp, #0]
 800854a:	4621      	mov	r1, r4
 800854c:	9b08      	ldr	r3, [sp, #32]
 800854e:	f00d fb09 	bl	8015b64 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8008552:	b006      	add	sp, #24
 8008554:	bd10      	pop	{r4, pc}
	...

08008558 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8008558:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800855a:	bb18      	cbnz	r0, 80085a4 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 800855c:	4b12      	ldr	r3, [pc, #72]	; (80085a8 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800855e:	4813      	ldr	r0, [pc, #76]	; (80085ac <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8008560:	681c      	ldr	r4, [r3, #0]
 8008562:	4913      	ldr	r1, [pc, #76]	; (80085b0 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8008564:	b1b4      	cbz	r4, 8008594 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8008566:	6822      	ldr	r2, [r4, #0]
 8008568:	4422      	add	r2, r4
 800856a:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800856c:	6862      	ldr	r2, [r4, #4]
 800856e:	4422      	add	r2, r4
 8008570:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8008572:	68a2      	ldr	r2, [r4, #8]
 8008574:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8008576:	4b0f      	ldr	r3, [pc, #60]	; (80085b4 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8008578:	2200      	movs	r2, #0
 800857a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800857c:	f000 f838 	bl	80085f0 <_ZN17TypedTextDatabase8getFontsEv>
 8008580:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8008582:	f000 f833 	bl	80085ec <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8008586:	4b0c      	ldr	r3, [pc, #48]	; (80085b8 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8008588:	601c      	str	r4, [r3, #0]
        fonts = f;
 800858a:	4b0c      	ldr	r3, [pc, #48]	; (80085bc <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800858c:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800858e:	4b0c      	ldr	r3, [pc, #48]	; (80085c0 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8008590:	8018      	strh	r0, [r3, #0]
    }
}
 8008592:	e007      	b.n	80085a4 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8008594:	4b0b      	ldr	r3, [pc, #44]	; (80085c4 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8008596:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8008598:	4b0b      	ldr	r3, [pc, #44]	; (80085c8 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800859a:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800859c:	4b0b      	ldr	r3, [pc, #44]	; (80085cc <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800859e:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 80085a0:	2c00      	cmp	r4, #0
 80085a2:	d1e8      	bne.n	8008576 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 80085a4:	bd38      	pop	{r3, r4, r5, pc}
 80085a6:	bf00      	nop
 80085a8:	200029dc 	.word	0x200029dc
 80085ac:	200029e0 	.word	0x200029e0
 80085b0:	200029e4 	.word	0x200029e4
 80085b4:	200029e8 	.word	0x200029e8
 80085b8:	20013874 	.word	0x20013874
 80085bc:	2001387c 	.word	0x2001387c
 80085c0:	20013878 	.word	0x20013878
 80085c4:	08047550 	.word	0x08047550
 80085c8:	080473f0 	.word	0x080473f0
 80085cc:	08047aa0 	.word	0x08047aa0

080085d0 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80085d0:	4b04      	ldr	r3, [pc, #16]	; (80085e4 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 80085d2:	681b      	ldr	r3, [r3, #0]
 80085d4:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80085d8:	4b03      	ldr	r3, [pc, #12]	; (80085e8 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 80085da:	681b      	ldr	r3, [r3, #0]
}
 80085dc:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80085e0:	4770      	bx	lr
 80085e2:	bf00      	nop
 80085e4:	200029e4 	.word	0x200029e4
 80085e8:	200029e0 	.word	0x200029e0

080085ec <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80085ec:	2058      	movs	r0, #88	; 0x58
 80085ee:	4770      	bx	lr

080085f0 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80085f0:	4800      	ldr	r0, [pc, #0]	; (80085f4 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80085f2:	4770      	bx	lr
 80085f4:	200029ec 	.word	0x200029ec

080085f8 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80085f8:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 80085fa:	f7ff febf 	bl	800837c <_Z23getFont_verdana_19_4bppv>
};
 80085fe:	4c06      	ldr	r4, [pc, #24]	; (8008618 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8008600:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8008602:	f7ff fef9 	bl	80083f8 <_Z23getFont_verdana_40_4bppv>
};
 8008606:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8008608:	f7ff fe3c 	bl	8008284 <_Z23getFont_verdana_10_4bppv>
};
 800860c:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 800860e:	f7ff fe77 	bl	8008300 <_Z23getFont_verdana_12_4bppv>
};
 8008612:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8008614:	bd10      	pop	{r4, pc}
 8008616:	bf00      	nop
 8008618:	200029ec 	.word	0x200029ec

0800861c <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 800861c:	4770      	bx	lr

0800861e <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 800861e:	3804      	subs	r0, #4
 8008620:	4770      	bx	lr

08008622 <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 8008622:	4770      	bx	lr

08008624 <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 8008624:	4770      	bx	lr

08008626 <_ZN24Calibration_PadPresenterD0Ev>:
 8008626:	b510      	push	{r4, lr}
 8008628:	2110      	movs	r1, #16
 800862a:	4604      	mov	r4, r0
 800862c:	f021 ffcd 	bl	802a5ca <_ZdlPvj>
 8008630:	4620      	mov	r0, r4
 8008632:	bd10      	pop	{r4, pc}

08008634 <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 8008634:	f1a0 0004 	sub.w	r0, r0, #4
 8008638:	e7f5      	b.n	8008626 <_ZN24Calibration_PadPresenterD0Ev>

0800863a <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 800863a:	4770      	bx	lr

0800863c <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 800863c:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800863e:	2200      	movs	r2, #0
 8008640:	6082      	str	r2, [r0, #8]
    : view(v)
 8008642:	4a04      	ldr	r2, [pc, #16]	; (8008654 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 8008644:	60c1      	str	r1, [r0, #12]
 8008646:	f102 0408 	add.w	r4, r2, #8
 800864a:	3224      	adds	r2, #36	; 0x24
 800864c:	6004      	str	r4, [r0, #0]
 800864e:	6042      	str	r2, [r0, #4]
}
 8008650:	bd10      	pop	{r4, pc}
 8008652:	bf00      	nop
 8008654:	0802e7c4 	.word	0x0802e7c4

08008658 <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 8008658:	4770      	bx	lr

0800865a <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 800865a:	4770      	bx	lr

0800865c <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 800865c:	b510      	push	{r4, lr}
 800865e:	4b03      	ldr	r3, [pc, #12]	; (800866c <_ZN19Calibration_PadViewD1Ev+0x10>)
 8008660:	6003      	str	r3, [r0, #0]
 8008662:	4604      	mov	r4, r0
 8008664:	f7fa f90a 	bl	800287c <_ZN23Calibration_PadViewBaseD1Ev>
 8008668:	4620      	mov	r0, r4
 800866a:	bd10      	pop	{r4, pc}
 800866c:	0802e7fc 	.word	0x0802e7fc

08008670 <_ZN19Calibration_PadViewD0Ev>:
 8008670:	b510      	push	{r4, lr}
 8008672:	4604      	mov	r4, r0
 8008674:	f7ff fff2 	bl	800865c <_ZN19Calibration_PadViewD1Ev>
 8008678:	4620      	mov	r0, r4
 800867a:	f641 5164 	movw	r1, #7524	; 0x1d64
 800867e:	f021 ffa4 	bl	802a5ca <_ZdlPvj>
 8008682:	4620      	mov	r0, r4
 8008684:	bd10      	pop	{r4, pc}
	...

08008688 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 8008688:	b510      	push	{r4, lr}
 800868a:	4604      	mov	r4, r0
 800868c:	f7fa fb1e 	bl	8002ccc <_ZN23Calibration_PadViewBaseC1Ev>
 8008690:	4b01      	ldr	r3, [pc, #4]	; (8008698 <_ZN19Calibration_PadViewC1Ev+0x10>)
 8008692:	6023      	str	r3, [r4, #0]
}
 8008694:	4620      	mov	r0, r4
 8008696:	bd10      	pop	{r4, pc}
 8008698:	0802e7fc 	.word	0x0802e7fc

0800869c <_ZN19Calibration_PadView17Load_FLASH_ValuesEv>:

void Calibration_PadView::Load_FLASH_Values()
{
 800869c:	b570      	push	{r4, r5, r6, lr}
 800869e:	4604      	mov	r4, r0
 80086a0:	b0c4      	sub	sp, #272	; 0x110
 80086a2:	f100 06e0 	add.w	r6, r0, #224	; 0xe0
 80086a6:	4631      	mov	r1, r6
 80086a8:	a807      	add	r0, sp, #28
 80086aa:	f7fa f9ff 	bl	8002aac <_ZN8touchgfx8DrawableC1ERKS0_>
 80086ae:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80086b2:	9311      	str	r3, [sp, #68]	; 0x44
 80086b4:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 80086b8:	9312      	str	r3, [sp, #72]	; 0x48
 80086ba:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 80086be:	4a57      	ldr	r2, [pc, #348]	; (800881c <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x180>)
 80086c0:	9313      	str	r3, [sp, #76]	; 0x4c
 80086c2:	f504 718c 	add.w	r1, r4, #280	; 0x118
 80086c6:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 80086ca:	9207      	str	r2, [sp, #28]
 80086cc:	a815      	add	r0, sp, #84	; 0x54
 80086ce:	9314      	str	r3, [sp, #80]	; 0x50
 80086d0:	f7fa f9ec 	bl	8002aac <_ZN8touchgfx8DrawableC1ERKS0_>
 80086d4:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 80086d8:	931f      	str	r3, [sp, #124]	; 0x7c
 80086da:	4b51      	ldr	r3, [pc, #324]	; (8008820 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x184>)
 80086dc:	9315      	str	r3, [sp, #84]	; 0x54
 80086de:	f894 3144 	ldrb.w	r3, [r4, #324]	; 0x144
 80086e2:	f88d 3080 	strb.w	r3, [sp, #128]	; 0x80
 80086e6:	f504 71a4 	add.w	r1, r4, #328	; 0x148
 80086ea:	f8b4 3146 	ldrh.w	r3, [r4, #326]	; 0x146
 80086ee:	f8ad 3082 	strh.w	r3, [sp, #130]	; 0x82
 80086f2:	a821      	add	r0, sp, #132	; 0x84
 80086f4:	f7fa f9da 	bl	8002aac <_ZN8touchgfx8DrawableC1ERKS0_>
 80086f8:	f8d4 3170 	ldr.w	r3, [r4, #368]	; 0x170
 80086fc:	932b      	str	r3, [sp, #172]	; 0xac
 80086fe:	f504 71ba 	add.w	r1, r4, #372	; 0x174
    class PageIndicator : public Container
 8008702:	4b48      	ldr	r3, [pc, #288]	; (8008824 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x188>)
 8008704:	9321      	str	r3, [sp, #132]	; 0x84
 8008706:	a82c      	add	r0, sp, #176	; 0xb0
 8008708:	f7fa f9d0 	bl	8002aac <_ZN8touchgfx8DrawableC1ERKS0_>
class Image : public Widget
 800870c:	f8b4 319a 	ldrh.w	r3, [r4, #410]	; 0x19a
 8008710:	f8ad 30d6 	strh.w	r3, [sp, #214]	; 0xd6
 8008714:	f894 319c 	ldrb.w	r3, [r4, #412]	; 0x19c
 8008718:	f88d 30d8 	strb.w	r3, [sp, #216]	; 0xd8
 800871c:	4b42      	ldr	r3, [pc, #264]	; (8008828 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x18c>)
 800871e:	932c      	str	r3, [sp, #176]	; 0xb0
 8008720:	f8b4 319e 	ldrh.w	r3, [r4, #414]	; 0x19e
 8008724:	f8ad 30da 	strh.w	r3, [sp, #218]	; 0xda
 8008728:	f504 71d2 	add.w	r1, r4, #420	; 0x1a4
 800872c:	f8b4 31a0 	ldrh.w	r3, [r4, #416]	; 0x1a0
 8008730:	f8ad 30dc 	strh.w	r3, [sp, #220]	; 0xdc
 8008734:	a838      	add	r0, sp, #224	; 0xe0
 8008736:	f7fa f9b9 	bl	8002aac <_ZN8touchgfx8DrawableC1ERKS0_>
 800873a:	4b3c      	ldr	r3, [pc, #240]	; (800882c <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x190>)
 800873c:	9338      	str	r3, [sp, #224]	; 0xe0
 800873e:	f8b4 31ca 	ldrh.w	r3, [r4, #458]	; 0x1ca
	//Load the 6 Calibration Values from the Flash
	Flash_Read_Data(0x081E0000, Rx_Data, 6);

	// Write current Data stored in the Flash to the GUI
	//Left Pad
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 8008742:	4d3b      	ldr	r5, [pc, #236]	; (8008830 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x194>)
 8008744:	f8ad 3106 	strh.w	r3, [sp, #262]	; 0x106
 8008748:	f894 31cc 	ldrb.w	r3, [r4, #460]	; 0x1cc
 800874c:	f88d 3108 	strb.w	r3, [sp, #264]	; 0x108
	Flash_Read_Data(0x081E0000, Rx_Data, 6);
 8008750:	a901      	add	r1, sp, #4
 8008752:	f8b4 31d0 	ldrh.w	r3, [r4, #464]	; 0x1d0
 8008756:	4837      	ldr	r0, [pc, #220]	; (8008834 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x198>)
 8008758:	f8ad 310c 	strh.w	r3, [sp, #268]	; 0x10c
 800875c:	2206      	movs	r2, #6
 800875e:	f7f8 f877 	bl	8000850 <Flash_Read_Data>
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 8008762:	9b01      	ldr	r3, [sp, #4]
 8008764:	462a      	mov	r2, r5
 8008766:	210a      	movs	r1, #10
 8008768:	f604 607c 	addw	r0, r4, #3708	; 0xe7c
 800876c:	f011 f826 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", Rx_Data[1]);
 8008770:	9b02      	ldr	r3, [sp, #8]
 8008772:	462a      	mov	r2, r5
 8008774:	210a      	movs	r1, #10
 8008776:	f604 6068 	addw	r0, r4, #3688	; 0xe68
 800877a:	f011 f81f 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", Rx_Data[2]);
 800877e:	9b03      	ldr	r3, [sp, #12]
 8008780:	462a      	mov	r2, r5
 8008782:	210a      	movs	r1, #10
 8008784:	f604 6054 	addw	r0, r4, #3668	; 0xe54
 8008788:	f011 f818 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", Rx_Data[3]);
 800878c:	9b04      	ldr	r3, [sp, #16]
 800878e:	462a      	mov	r2, r5
 8008790:	210a      	movs	r1, #10
 8008792:	f604 60b8 	addw	r0, r4, #3768	; 0xeb8
 8008796:	f011 f811 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", Rx_Data[4]);
 800879a:	9b05      	ldr	r3, [sp, #20]
 800879c:	462a      	mov	r2, r5
 800879e:	210a      	movs	r1, #10
 80087a0:	f604 60a4 	addw	r0, r4, #3748	; 0xea4
 80087a4:	f011 f80a 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", Rx_Data[5]);
 80087a8:	9b06      	ldr	r3, [sp, #24]
 80087aa:	462a      	mov	r2, r5
 80087ac:	210a      	movs	r1, #10
 80087ae:	f504 6069 	add.w	r0, r4, #3728	; 0xe90
 80087b2:	f011 f803 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

	//Left Pad
	Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", Rx_Data[6]);
 80087b6:	9b07      	ldr	r3, [sp, #28]
 80087b8:	462a      	mov	r2, r5
 80087ba:	210a      	movs	r1, #10
 80087bc:	f604 60f4 	addw	r0, r4, #3828	; 0xef4
 80087c0:	f010 fffc 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", Rx_Data[7]);
 80087c4:	9b08      	ldr	r3, [sp, #32]
 80087c6:	462a      	mov	r2, r5
 80087c8:	210a      	movs	r1, #10
 80087ca:	f504 606e 	add.w	r0, r4, #3808	; 0xee0
 80087ce:	f010 fff5 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", Rx_Data[8]);
 80087d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80087d4:	462a      	mov	r2, r5
 80087d6:	210a      	movs	r1, #10
 80087d8:	f604 60cc 	addw	r0, r4, #3788	; 0xecc
 80087dc:	f010 ffee 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", Rx_Data[9]);
 80087e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80087e2:	462a      	mov	r2, r5
 80087e4:	210a      	movs	r1, #10
 80087e6:	f504 6073 	add.w	r0, r4, #3888	; 0xf30
 80087ea:	f010 ffe7 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", Rx_Data[10]);
 80087ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80087f0:	462a      	mov	r2, r5
 80087f2:	210a      	movs	r1, #10
 80087f4:	f604 701c 	addw	r0, r4, #3868	; 0xf1c
 80087f8:	f010 ffe0 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", Rx_Data[11]);
 80087fc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80087fe:	462a      	mov	r2, r5
 8008800:	210a      	movs	r1, #10
 8008802:	f604 7008 	addw	r0, r4, #3848	; 0xf08
 8008806:	f010 ffd9 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	swipeContainer1.invalidate();
 800880a:	4630      	mov	r0, r6
 800880c:	f00e ff10 	bl	8017630 <_ZNK8touchgfx8Drawable10invalidateEv>


#endif
}
 8008810:	a807      	add	r0, sp, #28
 8008812:	f007 ffdb 	bl	80107cc <_ZN8touchgfx14SwipeContainerD1Ev>
 8008816:	b044      	add	sp, #272	; 0x110
 8008818:	bd70      	pop	{r4, r5, r6, pc}
 800881a:	bf00      	nop
 800881c:	0802ee7c 	.word	0x0802ee7c
 8008820:	0802ef40 	.word	0x0802ef40
 8008824:	0802cd90 	.word	0x0802cd90
 8008828:	0802f33c 	.word	0x0802f33c
 800882c:	0802f520 	.word	0x0802f520
 8008830:	0802ccd2 	.word	0x0802ccd2
 8008834:	081e0000 	.word	0x081e0000

08008838 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 8008838:	f7f9 bfe0 	b.w	80027fc <_ZN23Calibration_PadViewBase11setupScreenEv>

0800883c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800883c:	4770      	bx	lr

0800883e <_ZN19FrontendApplicationD0Ev>:
 800883e:	b510      	push	{r4, lr}
 8008840:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8008844:	4604      	mov	r4, r0
 8008846:	f021 fec0 	bl	802a5ca <_ZdlPvj>
 800884a:	4620      	mov	r0, r4
 800884c:	bd10      	pop	{r4, pc}

0800884e <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800884e:	b510      	push	{r4, lr}
 8008850:	4604      	mov	r4, r0
    {
        model.tick();
 8008852:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 8008856:	f000 fafb 	bl	8008e50 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800885a:	4620      	mov	r0, r4
    }
 800885c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8008860:	f00d bec2 	b.w	80165e8 <_ZN8touchgfx11Application15handleTickEventEv>

08008864 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8008864:	b510      	push	{r4, lr}
 8008866:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8008868:	f7fb fe40 	bl	80044ec <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800886c:	4b01      	ldr	r3, [pc, #4]	; (8008874 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800886e:	6023      	str	r3, [r4, #0]
{

}
 8008870:	4620      	mov	r0, r4
 8008872:	bd10      	pop	{r4, pc}
 8008874:	0802e83c 	.word	0x0802e83c

08008878 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 8008878:	4770      	bx	lr

0800887a <_ZThn4_N18Main_MenuPresenterD1Ev>:
 800887a:	3804      	subs	r0, #4
 800887c:	4770      	bx	lr

0800887e <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 800887e:	4770      	bx	lr

08008880 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008880:	68c0      	ldr	r0, [r0, #12]
 8008882:	6803      	ldr	r3, [r0, #0]
 8008884:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008886:	4718      	bx	r3

08008888 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008888:	f1a0 0004 	sub.w	r0, r0, #4
 800888c:	f7ff bff8 	b.w	8008880 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

08008890 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 8008890:	b510      	push	{r4, lr}
 8008892:	2110      	movs	r1, #16
 8008894:	4604      	mov	r4, r0
 8008896:	f021 fe98 	bl	802a5ca <_ZdlPvj>
 800889a:	4620      	mov	r0, r4
 800889c:	bd10      	pop	{r4, pc}

0800889e <_ZThn4_N18Main_MenuPresenterD0Ev>:
 800889e:	f1a0 0004 	sub.w	r0, r0, #4
 80088a2:	e7f5      	b.n	8008890 <_ZN18Main_MenuPresenterD0Ev>

080088a4 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 80088a4:	b510      	push	{r4, lr}
 80088a6:	2200      	movs	r2, #0
 80088a8:	6082      	str	r2, [r0, #8]
    : view(v)
 80088aa:	4a04      	ldr	r2, [pc, #16]	; (80088bc <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 80088ac:	60c1      	str	r1, [r0, #12]
 80088ae:	f102 0408 	add.w	r4, r2, #8
 80088b2:	3224      	adds	r2, #36	; 0x24
 80088b4:	6004      	str	r4, [r0, #0]
 80088b6:	6042      	str	r2, [r0, #4]
}
 80088b8:	bd10      	pop	{r4, pc}
 80088ba:	bf00      	nop
 80088bc:	0802e888 	.word	0x0802e888

080088c0 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 80088c0:	4770      	bx	lr
	...

080088c4 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 80088c4:	b510      	push	{r4, lr}
 80088c6:	4b03      	ldr	r3, [pc, #12]	; (80088d4 <_ZN13Main_MenuViewD1Ev+0x10>)
 80088c8:	6003      	str	r3, [r0, #0]
 80088ca:	4604      	mov	r4, r0
 80088cc:	f7fc ff88 	bl	80057e0 <_ZN17Main_MenuViewBaseD1Ev>
 80088d0:	4620      	mov	r0, r4
 80088d2:	bd10      	pop	{r4, pc}
 80088d4:	0802e8c0 	.word	0x0802e8c0

080088d8 <_ZN13Main_MenuViewD0Ev>:
 80088d8:	b510      	push	{r4, lr}
 80088da:	4604      	mov	r4, r0
 80088dc:	f7ff fff2 	bl	80088c4 <_ZN13Main_MenuViewD1Ev>
 80088e0:	4620      	mov	r0, r4
 80088e2:	f241 117c 	movw	r1, #4476	; 0x117c
 80088e6:	f021 fe70 	bl	802a5ca <_ZdlPvj>
 80088ea:	4620      	mov	r0, r4
 80088ec:	bd10      	pop	{r4, pc}
	...

080088f0 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 80088f0:	b510      	push	{r4, lr}
 80088f2:	4604      	mov	r4, r0
 80088f4:	f7fc ffbe 	bl	8005874 <_ZN17Main_MenuViewBaseC1Ev>
 80088f8:	4b01      	ldr	r3, [pc, #4]	; (8008900 <_ZN13Main_MenuViewC1Ev+0x10>)
 80088fa:	6023      	str	r3, [r4, #0]
}
 80088fc:	4620      	mov	r0, r4
 80088fe:	bd10      	pop	{r4, pc}
 8008900:	0802e8c0 	.word	0x0802e8c0

08008904 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 8008904:	f7fc bf48 	b.w	8005798 <_ZN17Main_MenuViewBase11setupScreenEv>

08008908 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 8008908:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 800890a:	4a0a      	ldr	r2, [pc, #40]	; (8008934 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 800890c:	4605      	mov	r5, r0
 800890e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008910:	460b      	mov	r3, r1
 8008912:	f500 7055 	add.w	r0, r0, #852	; 0x354
 8008916:	2104      	movs	r1, #4
 8008918:	f010 ff50 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 800891c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008920:	f00e fe86 	bl	8017630 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008924:	b92c      	cbnz	r4, 8008932 <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 8008926:	f00d fd9b 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800892a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800892e:	f7fb bedd 	b.w	80046ec <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008932:	bd38      	pop	{r3, r4, r5, pc}
 8008934:	0802ccd2 	.word	0x0802ccd2

08008938 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 8008938:	4770      	bx	lr

0800893a <_ZThn4_N20MeasurementPresenterD1Ev>:
 800893a:	3804      	subs	r0, #4
 800893c:	4770      	bx	lr

0800893e <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 800893e:	4770      	bx	lr

08008940 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008940:	68c0      	ldr	r0, [r0, #12]
 8008942:	6803      	ldr	r3, [r0, #0]
 8008944:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008946:	4718      	bx	r3

08008948 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008948:	f1a0 0004 	sub.w	r0, r0, #4
 800894c:	f7ff bff8 	b.w	8008940 <_ZN20MeasurementPresenter15setTimeoutValueEi>

08008950 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 8008950:	b510      	push	{r4, lr}
 8008952:	2110      	movs	r1, #16
 8008954:	4604      	mov	r4, r0
 8008956:	f021 fe38 	bl	802a5ca <_ZdlPvj>
 800895a:	4620      	mov	r0, r4
 800895c:	bd10      	pop	{r4, pc}

0800895e <_ZThn4_N20MeasurementPresenterD0Ev>:
 800895e:	f1a0 0004 	sub.w	r0, r0, #4
 8008962:	e7f5      	b.n	8008950 <_ZN20MeasurementPresenterD0Ev>

08008964 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 8008964:	b510      	push	{r4, lr}
 8008966:	2200      	movs	r2, #0
 8008968:	6082      	str	r2, [r0, #8]
    : view(v)
 800896a:	4a04      	ldr	r2, [pc, #16]	; (800897c <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 800896c:	60c1      	str	r1, [r0, #12]
 800896e:	f102 0408 	add.w	r4, r2, #8
 8008972:	3224      	adds	r2, #36	; 0x24
 8008974:	6004      	str	r4, [r0, #0]
 8008976:	6042      	str	r2, [r0, #4]
}
 8008978:	bd10      	pop	{r4, pc}
 800897a:	bf00      	nop
 800897c:	0802e8f0 	.word	0x0802e8f0

08008980 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8008980:	4770      	bx	lr
	...

08008984 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8008984:	b510      	push	{r4, lr}
 8008986:	4b03      	ldr	r3, [pc, #12]	; (8008994 <_ZN15MeasurementViewD1Ev+0x10>)
 8008988:	6003      	str	r3, [r0, #0]
 800898a:	4604      	mov	r4, r0
 800898c:	f7fd f9e2 	bl	8005d54 <_ZN19MeasurementViewBaseD1Ev>
 8008990:	4620      	mov	r0, r4
 8008992:	bd10      	pop	{r4, pc}
 8008994:	0802e928 	.word	0x0802e928

08008998 <_ZN15MeasurementViewD0Ev>:
 8008998:	b510      	push	{r4, lr}
 800899a:	4604      	mov	r4, r0
 800899c:	f7ff fff2 	bl	8008984 <_ZN15MeasurementViewD1Ev>
 80089a0:	4620      	mov	r0, r4
 80089a2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80089a6:	f021 fe10 	bl	802a5ca <_ZdlPvj>
 80089aa:	4620      	mov	r0, r4
 80089ac:	bd10      	pop	{r4, pc}
	...

080089b0 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 80089b0:	b510      	push	{r4, lr}
 80089b2:	4604      	mov	r4, r0
 80089b4:	f7fd fa08 	bl	8005dc8 <_ZN19MeasurementViewBaseC1Ev>
 80089b8:	4b01      	ldr	r3, [pc, #4]	; (80089c0 <_ZN15MeasurementViewC1Ev+0x10>)
 80089ba:	6023      	str	r3, [r4, #0]
}
 80089bc:	4620      	mov	r0, r4
 80089be:	bd10      	pop	{r4, pc}
 80089c0:	0802e928 	.word	0x0802e928

080089c4 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 80089c4:	f7fd b9a2 	b.w	8005d0c <_ZN19MeasurementViewBase11setupScreenEv>

080089c8 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 80089c8:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80089ca:	4a0a      	ldr	r2, [pc, #40]	; (80089f4 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 80089cc:	4605      	mov	r5, r0
 80089ce:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80089d0:	460b      	mov	r3, r1
 80089d2:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80089d6:	2104      	movs	r1, #4
 80089d8:	f010 fef0 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80089dc:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80089e0:	f00e fe26 	bl	8017630 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80089e4:	b92c      	cbnz	r4, 80089f2 <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 80089e6:	f00d fd3b 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80089ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80089ee:	f7fb be7d 	b.w	80046ec <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80089f2:	bd38      	pop	{r3, r4, r5, pc}
 80089f4:	0802ccd2 	.word	0x0802ccd2

080089f8 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 80089f8:	4770      	bx	lr

080089fa <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 80089fa:	3804      	subs	r0, #4
 80089fc:	4770      	bx	lr

080089fe <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 80089fe:	4770      	bx	lr

08008a00 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008a00:	68c0      	ldr	r0, [r0, #12]
 8008a02:	6803      	ldr	r3, [r0, #0]
 8008a04:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008a06:	4718      	bx	r3

08008a08 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008a08:	f1a0 0004 	sub.w	r0, r0, #4
 8008a0c:	f7ff bff8 	b.w	8008a00 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

08008a10 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 8008a10:	b510      	push	{r4, lr}
 8008a12:	2110      	movs	r1, #16
 8008a14:	4604      	mov	r4, r0
 8008a16:	f021 fdd8 	bl	802a5ca <_ZdlPvj>
 8008a1a:	4620      	mov	r0, r4
 8008a1c:	bd10      	pop	{r4, pc}

08008a1e <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 8008a1e:	f1a0 0004 	sub.w	r0, r0, #4
 8008a22:	e7f5      	b.n	8008a10 <_ZN29Measurement_AccuratePresenterD0Ev>

08008a24 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 8008a24:	b510      	push	{r4, lr}
 8008a26:	2200      	movs	r2, #0
 8008a28:	6082      	str	r2, [r0, #8]
    : view(v)
 8008a2a:	4a04      	ldr	r2, [pc, #16]	; (8008a3c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 8008a2c:	60c1      	str	r1, [r0, #12]
 8008a2e:	f102 0408 	add.w	r4, r2, #8
 8008a32:	3224      	adds	r2, #36	; 0x24
 8008a34:	6004      	str	r4, [r0, #0]
 8008a36:	6042      	str	r2, [r0, #4]
}
 8008a38:	bd10      	pop	{r4, pc}
 8008a3a:	bf00      	nop
 8008a3c:	0802e958 	.word	0x0802e958

08008a40 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 8008a40:	4770      	bx	lr
	...

08008a44 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8008a44:	b510      	push	{r4, lr}
 8008a46:	4b03      	ldr	r3, [pc, #12]	; (8008a54 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 8008a48:	6003      	str	r3, [r0, #0]
 8008a4a:	4604      	mov	r4, r0
 8008a4c:	f7fd fc04 	bl	8006258 <_ZN28Measurement_AccurateViewBaseD1Ev>
 8008a50:	4620      	mov	r0, r4
 8008a52:	bd10      	pop	{r4, pc}
 8008a54:	0802e990 	.word	0x0802e990

08008a58 <_ZN24Measurement_AccurateViewD0Ev>:
 8008a58:	b510      	push	{r4, lr}
 8008a5a:	4604      	mov	r4, r0
 8008a5c:	f7ff fff2 	bl	8008a44 <_ZN24Measurement_AccurateViewD1Ev>
 8008a60:	4620      	mov	r0, r4
 8008a62:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008a66:	f021 fdb0 	bl	802a5ca <_ZdlPvj>
 8008a6a:	4620      	mov	r0, r4
 8008a6c:	bd10      	pop	{r4, pc}
	...

08008a70 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 8008a70:	b510      	push	{r4, lr}
 8008a72:	4604      	mov	r4, r0
 8008a74:	f7fd fc2a 	bl	80062cc <_ZN28Measurement_AccurateViewBaseC1Ev>
 8008a78:	4b01      	ldr	r3, [pc, #4]	; (8008a80 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 8008a7a:	6023      	str	r3, [r4, #0]
}
 8008a7c:	4620      	mov	r0, r4
 8008a7e:	bd10      	pop	{r4, pc}
 8008a80:	0802e990 	.word	0x0802e990

08008a84 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8008a84:	f7fd bbc4 	b.w	8006210 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08008a88 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 8008a88:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008a8a:	4a0a      	ldr	r2, [pc, #40]	; (8008ab4 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 8008a8c:	4605      	mov	r5, r0
 8008a8e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008a90:	460b      	mov	r3, r1
 8008a92:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008a96:	2104      	movs	r1, #4
 8008a98:	f010 fe90 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008a9c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008aa0:	f00e fdc6 	bl	8017630 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008aa4:	b92c      	cbnz	r4, 8008ab2 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 8008aa6:	f00d fcdb 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008aaa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008aae:	f7fb be1d 	b.w	80046ec <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008ab2:	bd38      	pop	{r3, r4, r5, pc}
 8008ab4:	0802ccd2 	.word	0x0802ccd2

08008ab8 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8008ab8:	4770      	bx	lr

08008aba <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 8008aba:	3804      	subs	r0, #4
 8008abc:	4770      	bx	lr

08008abe <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 8008abe:	4770      	bx	lr

08008ac0 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8008ac0:	4770      	bx	lr

08008ac2 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008ac2:	b510      	push	{r4, lr}
 8008ac4:	2110      	movs	r1, #16
 8008ac6:	4604      	mov	r4, r0
 8008ac8:	f021 fd7f 	bl	802a5ca <_ZdlPvj>
 8008acc:	4620      	mov	r0, r4
 8008ace:	bd10      	pop	{r4, pc}

08008ad0 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008ad0:	f1a0 0004 	sub.w	r0, r0, #4
 8008ad4:	e7f5      	b.n	8008ac2 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

08008ad6 <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 8008ad6:	4770      	bx	lr

08008ad8 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8008ad8:	b510      	push	{r4, lr}
 8008ada:	2200      	movs	r2, #0
 8008adc:	6082      	str	r2, [r0, #8]
    : view(v)
 8008ade:	4a04      	ldr	r2, [pc, #16]	; (8008af0 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 8008ae0:	60c1      	str	r1, [r0, #12]
 8008ae2:	f102 0408 	add.w	r4, r2, #8
 8008ae6:	3224      	adds	r2, #36	; 0x24
 8008ae8:	6004      	str	r4, [r0, #0]
 8008aea:	6042      	str	r2, [r0, #4]
}
 8008aec:	bd10      	pop	{r4, pc}
 8008aee:	bf00      	nop
 8008af0:	0802e9c0 	.word	0x0802e9c0

08008af4 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 8008af4:	4770      	bx	lr
	...

08008af8 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 8008af8:	b510      	push	{r4, lr}
 8008afa:	4b03      	ldr	r3, [pc, #12]	; (8008b08 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 8008afc:	6003      	str	r3, [r0, #0]
 8008afe:	4604      	mov	r4, r0
 8008b00:	f7fd fe28 	bl	8006754 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8008b04:	4620      	mov	r0, r4
 8008b06:	bd10      	pop	{r4, pc}
 8008b08:	0802e9f8 	.word	0x0802e9f8

08008b0c <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 8008b0c:	b510      	push	{r4, lr}
 8008b0e:	4604      	mov	r4, r0
 8008b10:	f7ff fff2 	bl	8008af8 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 8008b14:	4620      	mov	r0, r4
 8008b16:	f241 015c 	movw	r1, #4188	; 0x105c
 8008b1a:	f021 fd56 	bl	802a5ca <_ZdlPvj>
 8008b1e:	4620      	mov	r0, r4
 8008b20:	bd10      	pop	{r4, pc}
	...

08008b24 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 8008b24:	b510      	push	{r4, lr}
 8008b26:	4604      	mov	r4, r0
 8008b28:	f7fd fe3c 	bl	80067a4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 8008b2c:	4b01      	ldr	r3, [pc, #4]	; (8008b34 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 8008b2e:	6023      	str	r3, [r4, #0]
}
 8008b30:	4620      	mov	r0, r4
 8008b32:	bd10      	pop	{r4, pc}
 8008b34:	0802e9f8 	.word	0x0802e9f8

08008b38 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 8008b38:	f7fd bde8 	b.w	800670c <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

08008b3c <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 8008b3c:	4770      	bx	lr

08008b3e <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 8008b3e:	3804      	subs	r0, #4
 8008b40:	4770      	bx	lr

08008b42 <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 8008b42:	4770      	bx	lr

08008b44 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8008b44:	4770      	bx	lr

08008b46 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008b46:	b510      	push	{r4, lr}
 8008b48:	2110      	movs	r1, #16
 8008b4a:	4604      	mov	r4, r0
 8008b4c:	f021 fd3d 	bl	802a5ca <_ZdlPvj>
 8008b50:	4620      	mov	r0, r4
 8008b52:	bd10      	pop	{r4, pc}

08008b54 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008b54:	f1a0 0004 	sub.w	r0, r0, #4
 8008b58:	e7f5      	b.n	8008b46 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

08008b5a <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 8008b5a:	4770      	bx	lr

08008b5c <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 8008b5c:	b510      	push	{r4, lr}
 8008b5e:	2200      	movs	r2, #0
 8008b60:	6082      	str	r2, [r0, #8]
    : view(v)
 8008b62:	4a04      	ldr	r2, [pc, #16]	; (8008b74 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 8008b64:	60c1      	str	r1, [r0, #12]
 8008b66:	f102 0408 	add.w	r4, r2, #8
 8008b6a:	3224      	adds	r2, #36	; 0x24
 8008b6c:	6004      	str	r4, [r0, #0]
 8008b6e:	6042      	str	r2, [r0, #4]
}
 8008b70:	bd10      	pop	{r4, pc}
 8008b72:	bf00      	nop
 8008b74:	0802ea24 	.word	0x0802ea24

08008b78 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 8008b78:	4770      	bx	lr
	...

08008b7c <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 8008b7c:	b510      	push	{r4, lr}
 8008b7e:	4b03      	ldr	r3, [pc, #12]	; (8008b8c <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 8008b80:	6003      	str	r3, [r0, #0]
 8008b82:	4604      	mov	r4, r0
 8008b84:	f7fd ff96 	bl	8006ab4 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8008b88:	4620      	mov	r0, r4
 8008b8a:	bd10      	pop	{r4, pc}
 8008b8c:	0802ea5c 	.word	0x0802ea5c

08008b90 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 8008b90:	b510      	push	{r4, lr}
 8008b92:	4604      	mov	r4, r0
 8008b94:	f7ff fff2 	bl	8008b7c <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 8008b98:	4620      	mov	r0, r4
 8008b9a:	f241 015c 	movw	r1, #4188	; 0x105c
 8008b9e:	f021 fd14 	bl	802a5ca <_ZdlPvj>
 8008ba2:	4620      	mov	r0, r4
 8008ba4:	bd10      	pop	{r4, pc}
	...

08008ba8 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 8008ba8:	b510      	push	{r4, lr}
 8008baa:	4604      	mov	r4, r0
 8008bac:	f7fd ffaa 	bl	8006b04 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 8008bb0:	4b01      	ldr	r3, [pc, #4]	; (8008bb8 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 8008bb2:	6023      	str	r3, [r4, #0]
}
 8008bb4:	4620      	mov	r0, r4
 8008bb6:	bd10      	pop	{r4, pc}
 8008bb8:	0802ea5c 	.word	0x0802ea5c

08008bbc <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8008bbc:	f7fd bf56 	b.w	8006a6c <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

08008bc0 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 8008bc0:	4770      	bx	lr

08008bc2 <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 8008bc2:	3804      	subs	r0, #4
 8008bc4:	4770      	bx	lr

08008bc6 <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 8008bc6:	4770      	bx	lr

08008bc8 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008bc8:	68c0      	ldr	r0, [r0, #12]
 8008bca:	6803      	ldr	r3, [r0, #0]
 8008bcc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008bce:	4718      	bx	r3

08008bd0 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008bd0:	f1a0 0004 	sub.w	r0, r0, #4
 8008bd4:	f7ff bff8 	b.w	8008bc8 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

08008bd8 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 8008bd8:	b510      	push	{r4, lr}
 8008bda:	2110      	movs	r1, #16
 8008bdc:	4604      	mov	r4, r0
 8008bde:	f021 fcf4 	bl	802a5ca <_ZdlPvj>
 8008be2:	4620      	mov	r0, r4
 8008be4:	bd10      	pop	{r4, pc}

08008be6 <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 8008be6:	f1a0 0004 	sub.w	r0, r0, #4
 8008bea:	e7f5      	b.n	8008bd8 <_ZN27Measurement_SinglePresenterD0Ev>

08008bec <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8008bec:	b510      	push	{r4, lr}
 8008bee:	2200      	movs	r2, #0
 8008bf0:	6082      	str	r2, [r0, #8]
    : view(v)
 8008bf2:	4a04      	ldr	r2, [pc, #16]	; (8008c04 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 8008bf4:	60c1      	str	r1, [r0, #12]
 8008bf6:	f102 0408 	add.w	r4, r2, #8
 8008bfa:	3224      	adds	r2, #36	; 0x24
 8008bfc:	6004      	str	r4, [r0, #0]
 8008bfe:	6042      	str	r2, [r0, #4]
}
 8008c00:	bd10      	pop	{r4, pc}
 8008c02:	bf00      	nop
 8008c04:	0802ea88 	.word	0x0802ea88

08008c08 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 8008c08:	4770      	bx	lr
	...

08008c0c <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 8008c0c:	b510      	push	{r4, lr}
 8008c0e:	4b03      	ldr	r3, [pc, #12]	; (8008c1c <_ZN22Measurement_SingleViewD1Ev+0x10>)
 8008c10:	6003      	str	r3, [r0, #0]
 8008c12:	4604      	mov	r4, r0
 8008c14:	f7fe f8fe 	bl	8006e14 <_ZN26Measurement_SingleViewBaseD1Ev>
 8008c18:	4620      	mov	r0, r4
 8008c1a:	bd10      	pop	{r4, pc}
 8008c1c:	0802eac0 	.word	0x0802eac0

08008c20 <_ZN22Measurement_SingleViewD0Ev>:
 8008c20:	b510      	push	{r4, lr}
 8008c22:	4604      	mov	r4, r0
 8008c24:	f7ff fff2 	bl	8008c0c <_ZN22Measurement_SingleViewD1Ev>
 8008c28:	4620      	mov	r0, r4
 8008c2a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008c2e:	f021 fccc 	bl	802a5ca <_ZdlPvj>
 8008c32:	4620      	mov	r0, r4
 8008c34:	bd10      	pop	{r4, pc}
	...

08008c38 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 8008c38:	b510      	push	{r4, lr}
 8008c3a:	4604      	mov	r4, r0
 8008c3c:	f7fe f924 	bl	8006e88 <_ZN26Measurement_SingleViewBaseC1Ev>
 8008c40:	4b01      	ldr	r3, [pc, #4]	; (8008c48 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 8008c42:	6023      	str	r3, [r4, #0]
}
 8008c44:	4620      	mov	r0, r4
 8008c46:	bd10      	pop	{r4, pc}
 8008c48:	0802eac0 	.word	0x0802eac0

08008c4c <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 8008c4c:	f7fe b8be 	b.w	8006dcc <_ZN26Measurement_SingleViewBase11setupScreenEv>

08008c50 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 8008c50:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008c52:	4a0a      	ldr	r2, [pc, #40]	; (8008c7c <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 8008c54:	4605      	mov	r5, r0
 8008c56:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008c58:	460b      	mov	r3, r1
 8008c5a:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008c5e:	2104      	movs	r1, #4
 8008c60:	f010 fdac 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008c64:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008c68:	f00e fce2 	bl	8017630 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008c6c:	b92c      	cbnz	r4, 8008c7a <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 8008c6e:	f00d fbf7 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008c72:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008c76:	f7fb bd39 	b.w	80046ec <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008c7a:	bd38      	pop	{r3, r4, r5, pc}
 8008c7c:	0802ccd2 	.word	0x0802ccd2

08008c80 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 8008c80:	4770      	bx	lr

08008c82 <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 8008c82:	3804      	subs	r0, #4
 8008c84:	4770      	bx	lr

08008c86 <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 8008c86:	4770      	bx	lr

08008c88 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 8008c88:	4770      	bx	lr

08008c8a <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 8008c8a:	b510      	push	{r4, lr}
 8008c8c:	2110      	movs	r1, #16
 8008c8e:	4604      	mov	r4, r0
 8008c90:	f021 fc9b 	bl	802a5ca <_ZdlPvj>
 8008c94:	4620      	mov	r0, r4
 8008c96:	bd10      	pop	{r4, pc}

08008c98 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 8008c98:	f1a0 0004 	sub.w	r0, r0, #4
 8008c9c:	e7f5      	b.n	8008c8a <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

08008c9e <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 8008c9e:	4770      	bx	lr

08008ca0 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 8008ca0:	b510      	push	{r4, lr}
 8008ca2:	2200      	movs	r2, #0
 8008ca4:	6082      	str	r2, [r0, #8]
    : view(v)
 8008ca6:	4a04      	ldr	r2, [pc, #16]	; (8008cb8 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 8008ca8:	60c1      	str	r1, [r0, #12]
 8008caa:	f102 0408 	add.w	r4, r2, #8
 8008cae:	3224      	adds	r2, #36	; 0x24
 8008cb0:	6004      	str	r4, [r0, #0]
 8008cb2:	6042      	str	r2, [r0, #4]
}
 8008cb4:	bd10      	pop	{r4, pc}
 8008cb6:	bf00      	nop
 8008cb8:	0802eaf0 	.word	0x0802eaf0

08008cbc <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 8008cbc:	4770      	bx	lr
	...

08008cc0 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 8008cc0:	b510      	push	{r4, lr}
 8008cc2:	4b03      	ldr	r3, [pc, #12]	; (8008cd0 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8008cc4:	6003      	str	r3, [r0, #0]
 8008cc6:	4604      	mov	r4, r0
 8008cc8:	f7fe fb28 	bl	800731c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8008ccc:	4620      	mov	r0, r4
 8008cce:	bd10      	pop	{r4, pc}
 8008cd0:	0802eb30 	.word	0x0802eb30

08008cd4 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 8008cd4:	b510      	push	{r4, lr}
 8008cd6:	4604      	mov	r4, r0
 8008cd8:	f7ff fff2 	bl	8008cc0 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8008cdc:	4620      	mov	r0, r4
 8008cde:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8008ce2:	f021 fc72 	bl	802a5ca <_ZdlPvj>
 8008ce6:	4620      	mov	r0, r4
 8008ce8:	bd10      	pop	{r4, pc}
	...

08008cec <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8008cec:	b510      	push	{r4, lr}
 8008cee:	4604      	mov	r4, r0
 8008cf0:	f7fe fb4e 	bl	8007390 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 8008cf4:	4b01      	ldr	r3, [pc, #4]	; (8008cfc <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 8008cf6:	6023      	str	r3, [r4, #0]
}
 8008cf8:	4620      	mov	r0, r4
 8008cfa:	bd10      	pop	{r4, pc}
 8008cfc:	0802eb30 	.word	0x0802eb30

08008d00 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 8008d00:	f7fe bae7 	b.w	80072d2 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

08008d04 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 8008d04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008d06:	4e2a      	ldr	r6, [pc, #168]	; (8008db0 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xac>)
	// Disable Touchgfx tasks to avoid interference
	touchgfx::HAL::getInstance()->disableInterrupts();

	int test = 	0;

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 8008d08:	4f2a      	ldr	r7, [pc, #168]	; (8008db4 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb0>)
{
 8008d0a:	4604      	mov	r4, r0
 8008d0c:	6830      	ldr	r0, [r6, #0]
	touchgfx::HAL::getInstance()->disableInterrupts();
 8008d0e:	6803      	ldr	r3, [r0, #0]
{
 8008d10:	b087      	sub	sp, #28
	touchgfx::HAL::getInstance()->disableInterrupts();
 8008d12:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8008d14:	4798      	blx	r3
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 8008d16:	2201      	movs	r2, #1
 8008d18:	2180      	movs	r1, #128	; 0x80
 8008d1a:	4638      	mov	r0, r7
 8008d1c:	f000 ffe2 	bl	8009ce4 <HAL_GPIO_WritePin>

	test = updateGUI_test();
 8008d20:	f7f7 fe56 	bl	80009d0 <updateGUI_test>
 8008d24:	4605      	mov	r5, r0

	uint32_t* Samples = MEAS_start_measure();
 8008d26:	f7f8 fbd7 	bl	80014d8 <MEAS_start_measure>

	//callback to fft
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8008d2a:	2232      	movs	r2, #50	; 0x32
	uint32_t* Samples = MEAS_start_measure();
 8008d2c:	4601      	mov	r1, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8008d2e:	2001      	movs	r0, #1
 8008d30:	f7f7 fd9a 	bl	8000868 <calculate_freq_and_signalstrength>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(test);
 8008d34:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 8008d38:	4629      	mov	r1, r5
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8008d3a:	ed8d 0a04 	vstr	s0, [sp, #16]
 8008d3e:	edcd 0a05 	vstr	s1, [sp, #20]
	SMD1_gauge.setValue(test);
 8008d42:	9001      	str	r0, [sp, #4]
 8008d44:	f00a fc2a 	bl	801359c <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 8008d48:	9801      	ldr	r0, [sp, #4]
 8008d4a:	f00e fc71 	bl	8017630 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 8008d4e:	462b      	mov	r3, r5
 8008d50:	4a19      	ldr	r2, [pc, #100]	; (8008db8 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb4>)
 8008d52:	210a      	movs	r1, #10
 8008d54:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 8008d58:	f010 fd30 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 8008d5c:	f504 7020 	add.w	r0, r4, #640	; 0x280
 8008d60:	f00e fc66 	bl	8017630 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", fft.main_freq);
 8008d64:	9b04      	ldr	r3, [sp, #16]
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8008d66:	4a15      	ldr	r2, [pc, #84]	; (8008dbc <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 8008d68:	9303      	str	r3, [sp, #12]
 8008d6a:	210a      	movs	r1, #10
 8008d6c:	ab03      	add	r3, sp, #12
 8008d6e:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 8008d72:	f010 ff0f 	bl	8019b94 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 8008d76:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 8008d7a:	f00e fc59 	bl	8017630 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", fft.signal_strength);
 8008d7e:	9b05      	ldr	r3, [sp, #20]
 8008d80:	4a0e      	ldr	r2, [pc, #56]	; (8008dbc <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 8008d82:	9303      	str	r3, [sp, #12]
 8008d84:	210a      	movs	r1, #10
 8008d86:	ab03      	add	r3, sp, #12
 8008d88:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 8008d8c:	f010 ff02 	bl	8019b94 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 8008d90:	f504 7046 	add.w	r0, r4, #792	; 0x318
 8008d94:	f00e fc4c 	bl	8017630 <_ZNK8touchgfx8Drawable10invalidateEv>

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 8008d98:	4638      	mov	r0, r7
 8008d9a:	2200      	movs	r2, #0
 8008d9c:	2180      	movs	r1, #128	; 0x80
 8008d9e:	f000 ffa1 	bl	8009ce4 <HAL_GPIO_WritePin>
 8008da2:	6830      	ldr	r0, [r6, #0]

	// Enable Touchgfx tasks
	touchgfx::HAL::getInstance()->enableInterrupts();
 8008da4:	6803      	ldr	r3, [r0, #0]
 8008da6:	6f9b      	ldr	r3, [r3, #120]	; 0x78

#endif
}
 8008da8:	b007      	add	sp, #28
 8008daa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	touchgfx::HAL::getInstance()->enableInterrupts();
 8008dae:	4718      	bx	r3
 8008db0:	2001381c 	.word	0x2001381c
 8008db4:	40020000 	.word	0x40020000
 8008db8:	0802ccd2 	.word	0x0802ccd2
 8008dbc:	0802eb20 	.word	0x0802eb20

08008dc0 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 8008dc0:	4770      	bx	lr

08008dc2 <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 8008dc2:	3804      	subs	r0, #4
 8008dc4:	4770      	bx	lr

08008dc6 <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 8008dc6:	4770      	bx	lr

08008dc8 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 8008dc8:	4770      	bx	lr

08008dca <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 8008dca:	b510      	push	{r4, lr}
 8008dcc:	2110      	movs	r1, #16
 8008dce:	4604      	mov	r4, r0
 8008dd0:	f021 fbfb 	bl	802a5ca <_ZdlPvj>
 8008dd4:	4620      	mov	r0, r4
 8008dd6:	bd10      	pop	{r4, pc}

08008dd8 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 8008dd8:	f1a0 0004 	sub.w	r0, r0, #4
 8008ddc:	e7f5      	b.n	8008dca <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

08008dde <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 8008dde:	4770      	bx	lr

08008de0 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 8008de0:	b510      	push	{r4, lr}
 8008de2:	2200      	movs	r2, #0
 8008de4:	6082      	str	r2, [r0, #8]
    : view(v)
 8008de6:	4a04      	ldr	r2, [pc, #16]	; (8008df8 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 8008de8:	60c1      	str	r1, [r0, #12]
 8008dea:	f102 0408 	add.w	r4, r2, #8
 8008dee:	3224      	adds	r2, #36	; 0x24
 8008df0:	6004      	str	r4, [r0, #0]
 8008df2:	6042      	str	r2, [r0, #4]
}
 8008df4:	bd10      	pop	{r4, pc}
 8008df6:	bf00      	nop
 8008df8:	0802eb60 	.word	0x0802eb60

08008dfc <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 8008dfc:	4770      	bx	lr
	...

08008e00 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 8008e00:	b510      	push	{r4, lr}
 8008e02:	4b03      	ldr	r3, [pc, #12]	; (8008e10 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8008e04:	6003      	str	r3, [r0, #0]
 8008e06:	4604      	mov	r4, r0
 8008e08:	f7fe fe22 	bl	8007a50 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8008e0c:	4620      	mov	r0, r4
 8008e0e:	bd10      	pop	{r4, pc}
 8008e10:	0802eb98 	.word	0x0802eb98

08008e14 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8008e14:	b510      	push	{r4, lr}
 8008e16:	4604      	mov	r4, r0
 8008e18:	f7ff fff2 	bl	8008e00 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 8008e1c:	4620      	mov	r0, r4
 8008e1e:	f241 015c 	movw	r1, #4188	; 0x105c
 8008e22:	f021 fbd2 	bl	802a5ca <_ZdlPvj>
 8008e26:	4620      	mov	r0, r4
 8008e28:	bd10      	pop	{r4, pc}
	...

08008e2c <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 8008e2c:	b510      	push	{r4, lr}
 8008e2e:	4604      	mov	r4, r0
 8008e30:	f7fe fe36 	bl	8007aa0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 8008e34:	4b01      	ldr	r3, [pc, #4]	; (8008e3c <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 8008e36:	6023      	str	r3, [r4, #0]
}
 8008e38:	4620      	mov	r0, r4
 8008e3a:	bd10      	pop	{r4, pc}
 8008e3c:	0802eb98 	.word	0x0802eb98

08008e40 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 8008e40:	f7fe bde2 	b.w	8007a08 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

08008e44 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 8008e44:	2100      	movs	r1, #0
 8008e46:	223c      	movs	r2, #60	; 0x3c
 8008e48:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 8008e4c:	4770      	bx	lr
	...

08008e50 <_ZN5Model4tickEv>:

void Model::tick()
{
 8008e50:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8008e52:	4d0a      	ldr	r5, [pc, #40]	; (8008e7c <_ZN5Model4tickEv+0x2c>)
{
 8008e54:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8008e56:	6828      	ldr	r0, [r5, #0]
 8008e58:	f004 fc20 	bl	800d69c <osMessageQueueGetCount>
 8008e5c:	b168      	cbz	r0, 8008e7a <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 8008e5e:	2300      	movs	r3, #0
 8008e60:	6828      	ldr	r0, [r5, #0]
 8008e62:	461a      	mov	r2, r3
 8008e64:	1d21      	adds	r1, r4, #4
 8008e66:	f004 fbe5 	bl	800d634 <osMessageQueueGet>
 8008e6a:	b930      	cbnz	r0, 8008e7a <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 8008e6c:	6820      	ldr	r0, [r4, #0]
 8008e6e:	6861      	ldr	r1, [r4, #4]
 8008e70:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 8008e72:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 8008e76:	689b      	ldr	r3, [r3, #8]
 8008e78:	4718      	bx	r3
}
 8008e7a:	bd70      	pop	{r4, r5, r6, pc}
 8008e7c:	200001a0 	.word	0x200001a0

08008e80 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 8008e80:	4770      	bx	lr

08008e82 <_ZThn4_N21Project_InfoPresenterD1Ev>:
 8008e82:	3804      	subs	r0, #4
 8008e84:	4770      	bx	lr

08008e86 <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 8008e86:	4770      	bx	lr

08008e88 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008e88:	68c0      	ldr	r0, [r0, #12]
 8008e8a:	6803      	ldr	r3, [r0, #0]
 8008e8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008e8e:	4718      	bx	r3

08008e90 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008e90:	f1a0 0004 	sub.w	r0, r0, #4
 8008e94:	f7ff bff8 	b.w	8008e88 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

08008e98 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 8008e98:	b510      	push	{r4, lr}
 8008e9a:	2110      	movs	r1, #16
 8008e9c:	4604      	mov	r4, r0
 8008e9e:	f021 fb94 	bl	802a5ca <_ZdlPvj>
 8008ea2:	4620      	mov	r0, r4
 8008ea4:	bd10      	pop	{r4, pc}

08008ea6 <_ZThn4_N21Project_InfoPresenterD0Ev>:
 8008ea6:	f1a0 0004 	sub.w	r0, r0, #4
 8008eaa:	e7f5      	b.n	8008e98 <_ZN21Project_InfoPresenterD0Ev>

08008eac <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 8008eac:	b510      	push	{r4, lr}
 8008eae:	2200      	movs	r2, #0
 8008eb0:	6082      	str	r2, [r0, #8]
    : view(v)
 8008eb2:	4a04      	ldr	r2, [pc, #16]	; (8008ec4 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8008eb4:	60c1      	str	r1, [r0, #12]
 8008eb6:	f102 0408 	add.w	r4, r2, #8
 8008eba:	3224      	adds	r2, #36	; 0x24
 8008ebc:	6004      	str	r4, [r0, #0]
 8008ebe:	6042      	str	r2, [r0, #4]
}
 8008ec0:	bd10      	pop	{r4, pc}
 8008ec2:	bf00      	nop
 8008ec4:	0802ebc4 	.word	0x0802ebc4

08008ec8 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 8008ec8:	4770      	bx	lr
	...

08008ecc <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 8008ecc:	b510      	push	{r4, lr}
 8008ece:	4b03      	ldr	r3, [pc, #12]	; (8008edc <_ZN16Project_InfoViewD1Ev+0x10>)
 8008ed0:	6003      	str	r3, [r0, #0]
 8008ed2:	4604      	mov	r4, r0
 8008ed4:	f7fe ff6a 	bl	8007dac <_ZN20Project_InfoViewBaseD1Ev>
 8008ed8:	4620      	mov	r0, r4
 8008eda:	bd10      	pop	{r4, pc}
 8008edc:	0802ebfc 	.word	0x0802ebfc

08008ee0 <_ZN16Project_InfoViewD0Ev>:
 8008ee0:	b510      	push	{r4, lr}
 8008ee2:	4604      	mov	r4, r0
 8008ee4:	f7ff fff2 	bl	8008ecc <_ZN16Project_InfoViewD1Ev>
 8008ee8:	4620      	mov	r0, r4
 8008eea:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8008eee:	f021 fb6c 	bl	802a5ca <_ZdlPvj>
 8008ef2:	4620      	mov	r0, r4
 8008ef4:	bd10      	pop	{r4, pc}
	...

08008ef8 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 8008ef8:	b510      	push	{r4, lr}
 8008efa:	4604      	mov	r4, r0
 8008efc:	f7fe ff7e 	bl	8007dfc <_ZN20Project_InfoViewBaseC1Ev>
 8008f00:	4b01      	ldr	r3, [pc, #4]	; (8008f08 <_ZN16Project_InfoViewC1Ev+0x10>)
 8008f02:	6023      	str	r3, [r4, #0]
}
 8008f04:	4620      	mov	r0, r4
 8008f06:	bd10      	pop	{r4, pc}
 8008f08:	0802ebfc 	.word	0x0802ebfc

08008f0c <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 8008f0c:	f7fe bf2a 	b.w	8007d64 <_ZN20Project_InfoViewBase11setupScreenEv>

08008f10 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 8008f10:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008f12:	4a0a      	ldr	r2, [pc, #40]	; (8008f3c <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8008f14:	4605      	mov	r5, r0
 8008f16:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008f18:	460b      	mov	r3, r1
 8008f1a:	f500 7022 	add.w	r0, r0, #648	; 0x288
 8008f1e:	2104      	movs	r1, #4
 8008f20:	f010 fc4c 	bl	80197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008f24:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008f28:	f00e fb82 	bl	8017630 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 8008f2c:	b92c      	cbnz	r4, 8008f3a <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 8008f2e:	f00d fa97 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008f32:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008f36:	f7fb bbd9 	b.w	80046ec <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008f3a:	bd38      	pop	{r3, r4, r5, pc}
 8008f3c:	0802ccd2 	.word	0x0802ccd2

08008f40 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 8008f40:	4770      	bx	lr

08008f42 <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 8008f42:	3804      	subs	r0, #4
 8008f44:	4770      	bx	lr

08008f46 <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 8008f46:	4770      	bx	lr

08008f48 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 8008f48:	4770      	bx	lr

08008f4a <_ZN21Shutting_OffPresenterD0Ev>:
 8008f4a:	b510      	push	{r4, lr}
 8008f4c:	2110      	movs	r1, #16
 8008f4e:	4604      	mov	r4, r0
 8008f50:	f021 fb3b 	bl	802a5ca <_ZdlPvj>
 8008f54:	4620      	mov	r0, r4
 8008f56:	bd10      	pop	{r4, pc}

08008f58 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 8008f58:	f1a0 0004 	sub.w	r0, r0, #4
 8008f5c:	e7f5      	b.n	8008f4a <_ZN21Shutting_OffPresenterD0Ev>

08008f5e <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 8008f5e:	4770      	bx	lr

08008f60 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 8008f60:	b510      	push	{r4, lr}
 8008f62:	2200      	movs	r2, #0
 8008f64:	6082      	str	r2, [r0, #8]
    : view(v)
 8008f66:	4a04      	ldr	r2, [pc, #16]	; (8008f78 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 8008f68:	60c1      	str	r1, [r0, #12]
 8008f6a:	f102 0408 	add.w	r4, r2, #8
 8008f6e:	3224      	adds	r2, #36	; 0x24
 8008f70:	6004      	str	r4, [r0, #0]
 8008f72:	6042      	str	r2, [r0, #4]
}
 8008f74:	bd10      	pop	{r4, pc}
 8008f76:	bf00      	nop
 8008f78:	0802ec2c 	.word	0x0802ec2c

08008f7c <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 8008f7c:	4770      	bx	lr
	...

08008f80 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 8008f80:	b510      	push	{r4, lr}
 8008f82:	4b03      	ldr	r3, [pc, #12]	; (8008f90 <_ZN16Shutting_OffViewD1Ev+0x10>)
 8008f84:	6003      	str	r3, [r0, #0]
 8008f86:	4604      	mov	r4, r0
 8008f88:	f7ff f906 	bl	8008198 <_ZN20Shutting_OffViewBaseD1Ev>
 8008f8c:	4620      	mov	r0, r4
 8008f8e:	bd10      	pop	{r4, pc}
 8008f90:	0802ec64 	.word	0x0802ec64

08008f94 <_ZN16Shutting_OffViewD0Ev>:
 8008f94:	b510      	push	{r4, lr}
 8008f96:	4604      	mov	r4, r0
 8008f98:	f7ff fff2 	bl	8008f80 <_ZN16Shutting_OffViewD1Ev>
 8008f9c:	4620      	mov	r0, r4
 8008f9e:	2198      	movs	r1, #152	; 0x98
 8008fa0:	f021 fb13 	bl	802a5ca <_ZdlPvj>
 8008fa4:	4620      	mov	r0, r4
 8008fa6:	bd10      	pop	{r4, pc}

08008fa8 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8008fa8:	b510      	push	{r4, lr}
 8008faa:	4604      	mov	r4, r0
 8008fac:	f7ff f8fe 	bl	80081ac <_ZN20Shutting_OffViewBaseC1Ev>
 8008fb0:	4b01      	ldr	r3, [pc, #4]	; (8008fb8 <_ZN16Shutting_OffViewC1Ev+0x10>)
 8008fb2:	6023      	str	r3, [r4, #0]
}
 8008fb4:	4620      	mov	r0, r4
 8008fb6:	bd10      	pop	{r4, pc}
 8008fb8:	0802ec64 	.word	0x0802ec64

08008fbc <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 8008fbc:	f7ff b8ed 	b.w	800819a <_ZN20Shutting_OffViewBase11setupScreenEv>

08008fc0 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8008fc0:	20f0      	movs	r0, #240	; 0xf0
 8008fc2:	4770      	bx	lr

08008fc4 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8008fc4:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8008fc8:	4770      	bx	lr
 8008fca:	bf00      	nop

08008fcc <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8008fcc:	2029      	movs	r0, #41	; 0x29
 8008fce:	f7f8 b8fb 	b.w	80011c8 <LCD_IO_WriteReg>
 8008fd2:	bf00      	nop

08008fd4 <ili9341_DisplayOff>:
 8008fd4:	2028      	movs	r0, #40	; 0x28
 8008fd6:	f7f8 b8f7 	b.w	80011c8 <LCD_IO_WriteReg>
 8008fda:	bf00      	nop

08008fdc <ili9341_Init>:
{
 8008fdc:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008fde:	f7f8 f8b9 	bl	8001154 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8008fe2:	20ca      	movs	r0, #202	; 0xca
 8008fe4:	f7f8 f8f0 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008fe8:	20c3      	movs	r0, #195	; 0xc3
 8008fea:	f7f8 f8c3 	bl	8001174 <LCD_IO_WriteData>
 8008fee:	2008      	movs	r0, #8
 8008ff0:	f7f8 f8c0 	bl	8001174 <LCD_IO_WriteData>
 8008ff4:	2050      	movs	r0, #80	; 0x50
 8008ff6:	f7f8 f8bd 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008ffa:	20cf      	movs	r0, #207	; 0xcf
 8008ffc:	f7f8 f8e4 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009000:	2000      	movs	r0, #0
 8009002:	f7f8 f8b7 	bl	8001174 <LCD_IO_WriteData>
 8009006:	20c1      	movs	r0, #193	; 0xc1
 8009008:	f7f8 f8b4 	bl	8001174 <LCD_IO_WriteData>
 800900c:	2030      	movs	r0, #48	; 0x30
 800900e:	f7f8 f8b1 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009012:	20ed      	movs	r0, #237	; 0xed
 8009014:	f7f8 f8d8 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009018:	2064      	movs	r0, #100	; 0x64
 800901a:	f7f8 f8ab 	bl	8001174 <LCD_IO_WriteData>
 800901e:	2003      	movs	r0, #3
 8009020:	f7f8 f8a8 	bl	8001174 <LCD_IO_WriteData>
 8009024:	2012      	movs	r0, #18
 8009026:	f7f8 f8a5 	bl	8001174 <LCD_IO_WriteData>
 800902a:	2081      	movs	r0, #129	; 0x81
 800902c:	f7f8 f8a2 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009030:	20e8      	movs	r0, #232	; 0xe8
 8009032:	f7f8 f8c9 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009036:	2085      	movs	r0, #133	; 0x85
 8009038:	f7f8 f89c 	bl	8001174 <LCD_IO_WriteData>
 800903c:	2000      	movs	r0, #0
 800903e:	f7f8 f899 	bl	8001174 <LCD_IO_WriteData>
 8009042:	2078      	movs	r0, #120	; 0x78
 8009044:	f7f8 f896 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009048:	20cb      	movs	r0, #203	; 0xcb
 800904a:	f7f8 f8bd 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800904e:	2039      	movs	r0, #57	; 0x39
 8009050:	f7f8 f890 	bl	8001174 <LCD_IO_WriteData>
 8009054:	202c      	movs	r0, #44	; 0x2c
 8009056:	f7f8 f88d 	bl	8001174 <LCD_IO_WriteData>
 800905a:	2000      	movs	r0, #0
 800905c:	f7f8 f88a 	bl	8001174 <LCD_IO_WriteData>
 8009060:	2034      	movs	r0, #52	; 0x34
 8009062:	f7f8 f887 	bl	8001174 <LCD_IO_WriteData>
 8009066:	2002      	movs	r0, #2
 8009068:	f7f8 f884 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800906c:	20f7      	movs	r0, #247	; 0xf7
 800906e:	f7f8 f8ab 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009072:	2020      	movs	r0, #32
 8009074:	f7f8 f87e 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009078:	20ea      	movs	r0, #234	; 0xea
 800907a:	f7f8 f8a5 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800907e:	2000      	movs	r0, #0
 8009080:	f7f8 f878 	bl	8001174 <LCD_IO_WriteData>
 8009084:	2000      	movs	r0, #0
 8009086:	f7f8 f875 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800908a:	20b1      	movs	r0, #177	; 0xb1
 800908c:	f7f8 f89c 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009090:	2000      	movs	r0, #0
 8009092:	f7f8 f86f 	bl	8001174 <LCD_IO_WriteData>
 8009096:	201b      	movs	r0, #27
 8009098:	f7f8 f86c 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800909c:	20b6      	movs	r0, #182	; 0xb6
 800909e:	f7f8 f893 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80090a2:	200a      	movs	r0, #10
 80090a4:	f7f8 f866 	bl	8001174 <LCD_IO_WriteData>
 80090a8:	20a2      	movs	r0, #162	; 0xa2
 80090aa:	f7f8 f863 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80090ae:	20c0      	movs	r0, #192	; 0xc0
 80090b0:	f7f8 f88a 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80090b4:	2010      	movs	r0, #16
 80090b6:	f7f8 f85d 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80090ba:	20c1      	movs	r0, #193	; 0xc1
 80090bc:	f7f8 f884 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80090c0:	2010      	movs	r0, #16
 80090c2:	f7f8 f857 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80090c6:	20c5      	movs	r0, #197	; 0xc5
 80090c8:	f7f8 f87e 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80090cc:	2045      	movs	r0, #69	; 0x45
 80090ce:	f7f8 f851 	bl	8001174 <LCD_IO_WriteData>
 80090d2:	2015      	movs	r0, #21
 80090d4:	f7f8 f84e 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80090d8:	20c7      	movs	r0, #199	; 0xc7
 80090da:	f7f8 f875 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80090de:	2090      	movs	r0, #144	; 0x90
 80090e0:	f7f8 f848 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80090e4:	2036      	movs	r0, #54	; 0x36
 80090e6:	f7f8 f86f 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80090ea:	20c8      	movs	r0, #200	; 0xc8
 80090ec:	f7f8 f842 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80090f0:	20f2      	movs	r0, #242	; 0xf2
 80090f2:	f7f8 f869 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80090f6:	2000      	movs	r0, #0
 80090f8:	f7f8 f83c 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80090fc:	20b0      	movs	r0, #176	; 0xb0
 80090fe:	f7f8 f863 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009102:	20c2      	movs	r0, #194	; 0xc2
 8009104:	f7f8 f836 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009108:	20b6      	movs	r0, #182	; 0xb6
 800910a:	f7f8 f85d 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800910e:	200a      	movs	r0, #10
 8009110:	f7f8 f830 	bl	8001174 <LCD_IO_WriteData>
 8009114:	20a7      	movs	r0, #167	; 0xa7
 8009116:	f7f8 f82d 	bl	8001174 <LCD_IO_WriteData>
 800911a:	2027      	movs	r0, #39	; 0x27
 800911c:	f7f8 f82a 	bl	8001174 <LCD_IO_WriteData>
 8009120:	2004      	movs	r0, #4
 8009122:	f7f8 f827 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009126:	202a      	movs	r0, #42	; 0x2a
 8009128:	f7f8 f84e 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800912c:	2000      	movs	r0, #0
 800912e:	f7f8 f821 	bl	8001174 <LCD_IO_WriteData>
 8009132:	2000      	movs	r0, #0
 8009134:	f7f8 f81e 	bl	8001174 <LCD_IO_WriteData>
 8009138:	2000      	movs	r0, #0
 800913a:	f7f8 f81b 	bl	8001174 <LCD_IO_WriteData>
 800913e:	20ef      	movs	r0, #239	; 0xef
 8009140:	f7f8 f818 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009144:	202b      	movs	r0, #43	; 0x2b
 8009146:	f7f8 f83f 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800914a:	2000      	movs	r0, #0
 800914c:	f7f8 f812 	bl	8001174 <LCD_IO_WriteData>
 8009150:	2000      	movs	r0, #0
 8009152:	f7f8 f80f 	bl	8001174 <LCD_IO_WriteData>
 8009156:	2001      	movs	r0, #1
 8009158:	f7f8 f80c 	bl	8001174 <LCD_IO_WriteData>
 800915c:	203f      	movs	r0, #63	; 0x3f
 800915e:	f7f8 f809 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009162:	20f6      	movs	r0, #246	; 0xf6
 8009164:	f7f8 f830 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009168:	2001      	movs	r0, #1
 800916a:	f7f8 f803 	bl	8001174 <LCD_IO_WriteData>
 800916e:	2000      	movs	r0, #0
 8009170:	f7f8 f800 	bl	8001174 <LCD_IO_WriteData>
 8009174:	2006      	movs	r0, #6
 8009176:	f7f7 fffd 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800917a:	202c      	movs	r0, #44	; 0x2c
 800917c:	f7f8 f824 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8009180:	20c8      	movs	r0, #200	; 0xc8
 8009182:	f7f8 f889 	bl	8001298 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8009186:	2026      	movs	r0, #38	; 0x26
 8009188:	f7f8 f81e 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800918c:	2001      	movs	r0, #1
 800918e:	f7f7 fff1 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009192:	20e0      	movs	r0, #224	; 0xe0
 8009194:	f7f8 f818 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009198:	200f      	movs	r0, #15
 800919a:	f7f7 ffeb 	bl	8001174 <LCD_IO_WriteData>
 800919e:	2029      	movs	r0, #41	; 0x29
 80091a0:	f7f7 ffe8 	bl	8001174 <LCD_IO_WriteData>
 80091a4:	2024      	movs	r0, #36	; 0x24
 80091a6:	f7f7 ffe5 	bl	8001174 <LCD_IO_WriteData>
 80091aa:	200c      	movs	r0, #12
 80091ac:	f7f7 ffe2 	bl	8001174 <LCD_IO_WriteData>
 80091b0:	200e      	movs	r0, #14
 80091b2:	f7f7 ffdf 	bl	8001174 <LCD_IO_WriteData>
 80091b6:	2009      	movs	r0, #9
 80091b8:	f7f7 ffdc 	bl	8001174 <LCD_IO_WriteData>
 80091bc:	204e      	movs	r0, #78	; 0x4e
 80091be:	f7f7 ffd9 	bl	8001174 <LCD_IO_WriteData>
 80091c2:	2078      	movs	r0, #120	; 0x78
 80091c4:	f7f7 ffd6 	bl	8001174 <LCD_IO_WriteData>
 80091c8:	203c      	movs	r0, #60	; 0x3c
 80091ca:	f7f7 ffd3 	bl	8001174 <LCD_IO_WriteData>
 80091ce:	2009      	movs	r0, #9
 80091d0:	f7f7 ffd0 	bl	8001174 <LCD_IO_WriteData>
 80091d4:	2013      	movs	r0, #19
 80091d6:	f7f7 ffcd 	bl	8001174 <LCD_IO_WriteData>
 80091da:	2005      	movs	r0, #5
 80091dc:	f7f7 ffca 	bl	8001174 <LCD_IO_WriteData>
 80091e0:	2017      	movs	r0, #23
 80091e2:	f7f7 ffc7 	bl	8001174 <LCD_IO_WriteData>
 80091e6:	2011      	movs	r0, #17
 80091e8:	f7f7 ffc4 	bl	8001174 <LCD_IO_WriteData>
 80091ec:	2000      	movs	r0, #0
 80091ee:	f7f7 ffc1 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80091f2:	20e1      	movs	r0, #225	; 0xe1
 80091f4:	f7f7 ffe8 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80091f8:	2000      	movs	r0, #0
 80091fa:	f7f7 ffbb 	bl	8001174 <LCD_IO_WriteData>
 80091fe:	2016      	movs	r0, #22
 8009200:	f7f7 ffb8 	bl	8001174 <LCD_IO_WriteData>
 8009204:	201b      	movs	r0, #27
 8009206:	f7f7 ffb5 	bl	8001174 <LCD_IO_WriteData>
 800920a:	2004      	movs	r0, #4
 800920c:	f7f7 ffb2 	bl	8001174 <LCD_IO_WriteData>
 8009210:	2011      	movs	r0, #17
 8009212:	f7f7 ffaf 	bl	8001174 <LCD_IO_WriteData>
 8009216:	2007      	movs	r0, #7
 8009218:	f7f7 ffac 	bl	8001174 <LCD_IO_WriteData>
 800921c:	2031      	movs	r0, #49	; 0x31
 800921e:	f7f7 ffa9 	bl	8001174 <LCD_IO_WriteData>
 8009222:	2033      	movs	r0, #51	; 0x33
 8009224:	f7f7 ffa6 	bl	8001174 <LCD_IO_WriteData>
 8009228:	2042      	movs	r0, #66	; 0x42
 800922a:	f7f7 ffa3 	bl	8001174 <LCD_IO_WriteData>
 800922e:	2005      	movs	r0, #5
 8009230:	f7f7 ffa0 	bl	8001174 <LCD_IO_WriteData>
 8009234:	200c      	movs	r0, #12
 8009236:	f7f7 ff9d 	bl	8001174 <LCD_IO_WriteData>
 800923a:	200a      	movs	r0, #10
 800923c:	f7f7 ff9a 	bl	8001174 <LCD_IO_WriteData>
 8009240:	2028      	movs	r0, #40	; 0x28
 8009242:	f7f7 ff97 	bl	8001174 <LCD_IO_WriteData>
 8009246:	202f      	movs	r0, #47	; 0x2f
 8009248:	f7f7 ff94 	bl	8001174 <LCD_IO_WriteData>
 800924c:	200f      	movs	r0, #15
 800924e:	f7f7 ff91 	bl	8001174 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009252:	2011      	movs	r0, #17
 8009254:	f7f7 ffb8 	bl	80011c8 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8009258:	20c8      	movs	r0, #200	; 0xc8
 800925a:	f7f8 f81d 	bl	8001298 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800925e:	2029      	movs	r0, #41	; 0x29
 8009260:	f7f7 ffb2 	bl	80011c8 <LCD_IO_WriteReg>
}
 8009264:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8009268:	202c      	movs	r0, #44	; 0x2c
 800926a:	f7f7 bfad 	b.w	80011c8 <LCD_IO_WriteReg>
 800926e:	bf00      	nop

08009270 <ili9341_ReadID>:
{
 8009270:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8009272:	f7f7 ff6f 	bl	8001154 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8009276:	2103      	movs	r1, #3
 8009278:	20d3      	movs	r0, #211	; 0xd3
 800927a:	f7f7 ffcf 	bl	800121c <LCD_IO_ReadData>
}
 800927e:	b280      	uxth	r0, r0
 8009280:	bd08      	pop	{r3, pc}
 8009282:	bf00      	nop

08009284 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8009284:	221f      	movs	r2, #31
 8009286:	210b      	movs	r1, #11
 8009288:	b2c0      	uxtb	r0, r0
 800928a:	f7f7 bf15 	b.w	80010b8 <IOE_Write>
 800928e:	bf00      	nop

08009290 <stmpe811_Reset>:
{
 8009290:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8009292:	b2c4      	uxtb	r4, r0
 8009294:	2202      	movs	r2, #2
 8009296:	2103      	movs	r1, #3
 8009298:	4620      	mov	r0, r4
 800929a:	f7f7 ff0d 	bl	80010b8 <IOE_Write>
  IOE_Delay(10); 
 800929e:	200a      	movs	r0, #10
 80092a0:	f7f7 ff56 	bl	8001150 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80092a4:	4620      	mov	r0, r4
 80092a6:	2200      	movs	r2, #0
 80092a8:	2103      	movs	r1, #3
 80092aa:	f7f7 ff05 	bl	80010b8 <IOE_Write>
}
 80092ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80092b2:	2002      	movs	r0, #2
 80092b4:	f7f7 bf4c 	b.w	8001150 <IOE_Delay>

080092b8 <stmpe811_ReadID>:
{
 80092b8:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80092ba:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 80092bc:	f7f7 fef8 	bl	80010b0 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80092c0:	2100      	movs	r1, #0
 80092c2:	4620      	mov	r0, r4
 80092c4:	f7f7 ff10 	bl	80010e8 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80092c8:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80092ca:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80092cc:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80092ce:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80092d0:	f7f7 ff0a 	bl	80010e8 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80092d4:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 80092d8:	b280      	uxth	r0, r0
 80092da:	bd10      	pop	{r4, pc}

080092dc <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 80092dc:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 80092de:	b2c4      	uxtb	r4, r0
 80092e0:	2140      	movs	r1, #64	; 0x40
 80092e2:	4620      	mov	r0, r4
 80092e4:	f7f7 ff00 	bl	80010e8 <IOE_Read>
  
  if(state > 0)
 80092e8:	0603      	lsls	r3, r0, #24
 80092ea:	d40b      	bmi.n	8009304 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80092ec:	4620      	mov	r0, r4
 80092ee:	2201      	movs	r2, #1
 80092f0:	214b      	movs	r1, #75	; 0x4b
 80092f2:	f7f7 fee1 	bl	80010b8 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80092f6:	4620      	mov	r0, r4
 80092f8:	2200      	movs	r2, #0
 80092fa:	214b      	movs	r1, #75	; 0x4b
 80092fc:	f7f7 fedc 	bl	80010b8 <IOE_Write>
  uint8_t ret = 0;
 8009300:	2000      	movs	r0, #0
  }
  
  return ret;
}
 8009302:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8009304:	214c      	movs	r1, #76	; 0x4c
 8009306:	4620      	mov	r0, r4
 8009308:	f7f7 feee 	bl	80010e8 <IOE_Read>
      ret = 1;
 800930c:	3800      	subs	r0, #0
 800930e:	bf18      	it	ne
 8009310:	2001      	movne	r0, #1
}
 8009312:	bd10      	pop	{r4, pc}

08009314 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8009314:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8009316:	210b      	movs	r1, #11
 8009318:	b2c0      	uxtb	r0, r0
 800931a:	f7f7 fee5 	bl	80010e8 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 800931e:	f000 001f 	and.w	r0, r0, #31
 8009322:	bd08      	pop	{r3, pc}

08009324 <stmpe811_TS_GetXY>:
{
 8009324:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009326:	2304      	movs	r3, #4
{
 8009328:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800932a:	b2c4      	uxtb	r4, r0
{
 800932c:	4615      	mov	r5, r2
 800932e:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009330:	eb0d 0203 	add.w	r2, sp, r3
 8009334:	21d7      	movs	r1, #215	; 0xd7
 8009336:	4620      	mov	r0, r4
 8009338:	f7f7 fef2 	bl	8001120 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 800933c:	9b01      	ldr	r3, [sp, #4]
 800933e:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8009340:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8009342:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8009346:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009348:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800934a:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800934c:	2201      	movs	r2, #1
 800934e:	214b      	movs	r1, #75	; 0x4b
 8009350:	f7f7 feb2 	bl	80010b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009354:	2200      	movs	r2, #0
 8009356:	214b      	movs	r1, #75	; 0x4b
 8009358:	4620      	mov	r0, r4
 800935a:	f7f7 fead 	bl	80010b8 <IOE_Write>
}
 800935e:	b002      	add	sp, #8
 8009360:	bd70      	pop	{r4, r5, r6, pc}
 8009362:	bf00      	nop

08009364 <stmpe811_TS_Start>:
{
 8009364:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8009366:	b2c4      	uxtb	r4, r0
 8009368:	2104      	movs	r1, #4
 800936a:	4620      	mov	r0, r4
 800936c:	f7f7 febc 	bl	80010e8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8009370:	2104      	movs	r1, #4
 8009372:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8009376:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8009378:	4620      	mov	r0, r4
 800937a:	f7f7 fe9d 	bl	80010b8 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800937e:	2117      	movs	r1, #23
 8009380:	4620      	mov	r0, r4
 8009382:	f7f7 feb1 	bl	80010e8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8009386:	2117      	movs	r1, #23
 8009388:	f000 020f 	and.w	r2, r0, #15
 800938c:	4620      	mov	r0, r4
 800938e:	f7f7 fe93 	bl	80010b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8009392:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8009396:	4620      	mov	r0, r4
 8009398:	2104      	movs	r1, #4
 800939a:	f7f7 fe8d 	bl	80010b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800939e:	2249      	movs	r2, #73	; 0x49
 80093a0:	2120      	movs	r1, #32
 80093a2:	4620      	mov	r0, r4
 80093a4:	f7f7 fe88 	bl	80010b8 <IOE_Write>
  IOE_Delay(2); 
 80093a8:	2002      	movs	r0, #2
 80093aa:	f7f7 fed1 	bl	8001150 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 80093ae:	4620      	mov	r0, r4
 80093b0:	2201      	movs	r2, #1
 80093b2:	2121      	movs	r1, #33	; 0x21
 80093b4:	f7f7 fe80 	bl	80010b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 80093b8:	4620      	mov	r0, r4
 80093ba:	229a      	movs	r2, #154	; 0x9a
 80093bc:	2141      	movs	r1, #65	; 0x41
 80093be:	f7f7 fe7b 	bl	80010b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 80093c2:	4620      	mov	r0, r4
 80093c4:	2201      	movs	r2, #1
 80093c6:	214a      	movs	r1, #74	; 0x4a
 80093c8:	f7f7 fe76 	bl	80010b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80093cc:	4620      	mov	r0, r4
 80093ce:	2201      	movs	r2, #1
 80093d0:	214b      	movs	r1, #75	; 0x4b
 80093d2:	f7f7 fe71 	bl	80010b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80093d6:	4620      	mov	r0, r4
 80093d8:	2200      	movs	r2, #0
 80093da:	214b      	movs	r1, #75	; 0x4b
 80093dc:	f7f7 fe6c 	bl	80010b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 80093e0:	4620      	mov	r0, r4
 80093e2:	2201      	movs	r2, #1
 80093e4:	2156      	movs	r1, #86	; 0x56
 80093e6:	f7f7 fe67 	bl	80010b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 80093ea:	4620      	mov	r0, r4
 80093ec:	2201      	movs	r2, #1
 80093ee:	2158      	movs	r1, #88	; 0x58
 80093f0:	f7f7 fe62 	bl	80010b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 80093f4:	4620      	mov	r0, r4
 80093f6:	2201      	movs	r2, #1
 80093f8:	2140      	movs	r1, #64	; 0x40
 80093fa:	f7f7 fe5d 	bl	80010b8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 80093fe:	4620      	mov	r0, r4
 8009400:	22ff      	movs	r2, #255	; 0xff
 8009402:	210b      	movs	r1, #11
 8009404:	f7f7 fe58 	bl	80010b8 <IOE_Write>
}
 8009408:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 800940c:	2002      	movs	r0, #2
 800940e:	f7f7 be9f 	b.w	8001150 <IOE_Delay>
 8009412:	bf00      	nop

08009414 <stmpe811_TS_DisableIT>:
{
 8009414:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8009416:	b2c4      	uxtb	r4, r0
 8009418:	2109      	movs	r1, #9
 800941a:	4620      	mov	r0, r4
 800941c:	f7f7 fe64 	bl	80010e8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8009420:	2109      	movs	r1, #9
 8009422:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8009426:	4620      	mov	r0, r4
 8009428:	f7f7 fe46 	bl	80010b8 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800942c:	210a      	movs	r1, #10
 800942e:	4620      	mov	r0, r4
 8009430:	f7f7 fe5a 	bl	80010e8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009434:	210a      	movs	r1, #10
 8009436:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 800943a:	4620      	mov	r0, r4
}
 800943c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009440:	f7f7 be3a 	b.w	80010b8 <IOE_Write>

08009444 <stmpe811_TS_EnableIT>:
{
 8009444:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009446:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 8009448:	f7f7 fe34 	bl	80010b4 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800944c:	210a      	movs	r1, #10
 800944e:	4620      	mov	r0, r4
 8009450:	f7f7 fe4a 	bl	80010e8 <IOE_Read>
  tmp |= Source; 
 8009454:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009458:	b2c2      	uxtb	r2, r0
 800945a:	210a      	movs	r1, #10
 800945c:	4620      	mov	r0, r4
 800945e:	f7f7 fe2b 	bl	80010b8 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8009462:	2109      	movs	r1, #9
 8009464:	4620      	mov	r0, r4
 8009466:	f7f7 fe3f 	bl	80010e8 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 800946a:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800946e:	b2c2      	uxtb	r2, r0
 8009470:	2109      	movs	r1, #9
 8009472:	4620      	mov	r0, r4
}
 8009474:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8009478:	f7f7 be1e 	b.w	80010b8 <IOE_Write>

0800947c <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800947c:	4a10      	ldr	r2, [pc, #64]	; (80094c0 <stmpe811_Init+0x44>)
 800947e:	7813      	ldrb	r3, [r2, #0]
 8009480:	4298      	cmp	r0, r3
 8009482:	d004      	beq.n	800948e <stmpe811_Init+0x12>
 8009484:	7851      	ldrb	r1, [r2, #1]
 8009486:	4288      	cmp	r0, r1
 8009488:	d001      	beq.n	800948e <stmpe811_Init+0x12>
 800948a:	b113      	cbz	r3, 8009492 <stmpe811_Init+0x16>
 800948c:	b101      	cbz	r1, 8009490 <stmpe811_Init+0x14>
 800948e:	4770      	bx	lr
 8009490:	2301      	movs	r3, #1
{
 8009492:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 8009494:	b2c4      	uxtb	r4, r0
 8009496:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8009498:	f7f7 fe0a 	bl	80010b0 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800949c:	2202      	movs	r2, #2
 800949e:	2103      	movs	r1, #3
 80094a0:	4620      	mov	r0, r4
 80094a2:	f7f7 fe09 	bl	80010b8 <IOE_Write>
  IOE_Delay(10); 
 80094a6:	200a      	movs	r0, #10
 80094a8:	f7f7 fe52 	bl	8001150 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80094ac:	4620      	mov	r0, r4
 80094ae:	2200      	movs	r2, #0
 80094b0:	2103      	movs	r1, #3
 80094b2:	f7f7 fe01 	bl	80010b8 <IOE_Write>
}
 80094b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80094ba:	2002      	movs	r0, #2
 80094bc:	f7f7 be48 	b.w	8001150 <IOE_Delay>
 80094c0:	200029fc 	.word	0x200029fc

080094c4 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80094c4:	4b05      	ldr	r3, [pc, #20]	; (80094dc <SystemInit+0x18>)
 80094c6:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80094ca:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80094ce:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 80094d2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80094d6:	6099      	str	r1, [r3, #8]
#endif
}
 80094d8:	4770      	bx	lr
 80094da:	bf00      	nop
 80094dc:	e000ed00 	.word	0xe000ed00

080094e0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80094e0:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80094e2:	4b0b      	ldr	r3, [pc, #44]	; (8009510 <HAL_Init+0x30>)
 80094e4:	681a      	ldr	r2, [r3, #0]
 80094e6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80094ea:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80094ec:	681a      	ldr	r2, [r3, #0]
 80094ee:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80094f2:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80094f4:	681a      	ldr	r2, [r3, #0]
 80094f6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80094fa:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80094fc:	2003      	movs	r0, #3
 80094fe:	f000 f82d 	bl	800955c <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8009502:	2000      	movs	r0, #0
 8009504:	f7f8 fa9a 	bl	8001a3c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8009508:	f7f8 f81a 	bl	8001540 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800950c:	2000      	movs	r0, #0
 800950e:	bd08      	pop	{r3, pc}
 8009510:	40023c00 	.word	0x40023c00

08009514 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8009514:	4a03      	ldr	r2, [pc, #12]	; (8009524 <HAL_IncTick+0x10>)
 8009516:	4b04      	ldr	r3, [pc, #16]	; (8009528 <HAL_IncTick+0x14>)
 8009518:	6811      	ldr	r1, [r2, #0]
 800951a:	781b      	ldrb	r3, [r3, #0]
 800951c:	440b      	add	r3, r1
 800951e:	6013      	str	r3, [r2, #0]
}
 8009520:	4770      	bx	lr
 8009522:	bf00      	nop
 8009524:	20002a00 	.word	0x20002a00
 8009528:	2000007c 	.word	0x2000007c

0800952c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800952c:	4b01      	ldr	r3, [pc, #4]	; (8009534 <HAL_GetTick+0x8>)
 800952e:	6818      	ldr	r0, [r3, #0]
}
 8009530:	4770      	bx	lr
 8009532:	bf00      	nop
 8009534:	20002a00 	.word	0x20002a00

08009538 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8009538:	b538      	push	{r3, r4, r5, lr}
 800953a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800953c:	f7ff fff6 	bl	800952c <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8009540:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 8009542:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 8009544:	d002      	beq.n	800954c <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8009546:	4b04      	ldr	r3, [pc, #16]	; (8009558 <HAL_Delay+0x20>)
 8009548:	781b      	ldrb	r3, [r3, #0]
 800954a:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800954c:	f7ff ffee 	bl	800952c <HAL_GetTick>
 8009550:	1b43      	subs	r3, r0, r5
 8009552:	42a3      	cmp	r3, r4
 8009554:	d3fa      	bcc.n	800954c <HAL_Delay+0x14>
  {
  }
}
 8009556:	bd38      	pop	{r3, r4, r5, pc}
 8009558:	2000007c 	.word	0x2000007c

0800955c <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800955c:	4907      	ldr	r1, [pc, #28]	; (800957c <HAL_NVIC_SetPriorityGrouping+0x20>)
 800955e:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009560:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009562:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009566:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800956a:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800956c:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800956e:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8009572:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8009576:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8009578:	4770      	bx	lr
 800957a:	bf00      	nop
 800957c:	e000ed00 	.word	0xe000ed00

08009580 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8009580:	4b1c      	ldr	r3, [pc, #112]	; (80095f4 <HAL_NVIC_SetPriority+0x74>)
 8009582:	68db      	ldr	r3, [r3, #12]
 8009584:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8009588:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800958a:	f1c3 0e07 	rsb	lr, r3, #7
 800958e:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009592:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8009596:	bf28      	it	cs
 8009598:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800959c:	f1bc 0f06 	cmp.w	ip, #6
 80095a0:	d91b      	bls.n	80095da <HAL_NVIC_SetPriority+0x5a>
 80095a2:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80095a4:	f04f 3cff 	mov.w	ip, #4294967295
 80095a8:	fa0c fc03 	lsl.w	ip, ip, r3
 80095ac:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80095b0:	f04f 3cff 	mov.w	ip, #4294967295
 80095b4:	fa0c fc0e 	lsl.w	ip, ip, lr
 80095b8:	ea21 010c 	bic.w	r1, r1, ip
 80095bc:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 80095be:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80095c0:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 80095c4:	db0c      	blt.n	80095e0 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80095c6:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 80095ca:	0109      	lsls	r1, r1, #4
 80095cc:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 80095d0:	b2c9      	uxtb	r1, r1
 80095d2:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 80095d6:	f85d fb04 	ldr.w	pc, [sp], #4
 80095da:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80095dc:	4613      	mov	r3, r2
 80095de:	e7e7      	b.n	80095b0 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80095e0:	4b05      	ldr	r3, [pc, #20]	; (80095f8 <HAL_NVIC_SetPriority+0x78>)
 80095e2:	f000 000f 	and.w	r0, r0, #15
 80095e6:	0109      	lsls	r1, r1, #4
 80095e8:	4403      	add	r3, r0
 80095ea:	b2c9      	uxtb	r1, r1
 80095ec:	7619      	strb	r1, [r3, #24]
 80095ee:	f85d fb04 	ldr.w	pc, [sp], #4
 80095f2:	bf00      	nop
 80095f4:	e000ed00 	.word	0xe000ed00
 80095f8:	e000ecfc 	.word	0xe000ecfc

080095fc <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80095fc:	2800      	cmp	r0, #0
 80095fe:	db07      	blt.n	8009610 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8009600:	0941      	lsrs	r1, r0, #5
 8009602:	4a04      	ldr	r2, [pc, #16]	; (8009614 <HAL_NVIC_EnableIRQ+0x18>)
 8009604:	f000 001f 	and.w	r0, r0, #31
 8009608:	2301      	movs	r3, #1
 800960a:	4083      	lsls	r3, r0
 800960c:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8009610:	4770      	bx	lr
 8009612:	bf00      	nop
 8009614:	e000e100 	.word	0xe000e100

08009618 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8009618:	b180      	cbz	r0, 800963c <HAL_CRC_Init+0x24>
{
 800961a:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800961c:	7943      	ldrb	r3, [r0, #5]
 800961e:	4604      	mov	r4, r0
 8009620:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009624:	b11b      	cbz	r3, 800962e <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8009626:	2301      	movs	r3, #1
 8009628:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800962a:	2000      	movs	r0, #0
}
 800962c:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 800962e:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 8009630:	f7f7 ffa6 	bl	8001580 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 8009634:	2301      	movs	r3, #1
 8009636:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 8009638:	2000      	movs	r0, #0
}
 800963a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800963c:	2001      	movs	r0, #1
}
 800963e:	4770      	bx	lr

08009640 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8009640:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8009644:	2b02      	cmp	r3, #2
 8009646:	d003      	beq.n	8009650 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8009648:	2380      	movs	r3, #128	; 0x80
 800964a:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 800964c:	2001      	movs	r0, #1
 800964e:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8009650:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8009652:	2305      	movs	r3, #5
 8009654:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8009658:	6813      	ldr	r3, [r2, #0]
 800965a:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 800965e:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 8009660:	6013      	str	r3, [r2, #0]
}
 8009662:	4770      	bx	lr

08009664 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 8009664:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 8009668:	4770      	bx	lr
 800966a:	bf00      	nop

0800966c <FLASH_SetErrorCode>:
  * @brief  Set the specific FLASH error flag.
  * @retval None
  */
static void FLASH_SetErrorCode(void)
{ 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 800966c:	4b21      	ldr	r3, [pc, #132]	; (80096f4 <FLASH_SetErrorCode+0x88>)
 800966e:	68da      	ldr	r2, [r3, #12]
 8009670:	06d0      	lsls	r0, r2, #27
 8009672:	d505      	bpl.n	8009680 <FLASH_SetErrorCode+0x14>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 8009674:	4920      	ldr	r1, [pc, #128]	; (80096f8 <FLASH_SetErrorCode+0x8c>)
 8009676:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH write protection error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 8009678:	2010      	movs	r0, #16
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 800967a:	4302      	orrs	r2, r0
 800967c:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 800967e:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 8009680:	4b1c      	ldr	r3, [pc, #112]	; (80096f4 <FLASH_SetErrorCode+0x88>)
 8009682:	68da      	ldr	r2, [r3, #12]
 8009684:	0691      	lsls	r1, r2, #26
 8009686:	d506      	bpl.n	8009696 <FLASH_SetErrorCode+0x2a>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 8009688:	491b      	ldr	r1, [pc, #108]	; (80096f8 <FLASH_SetErrorCode+0x8c>)
 800968a:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH Programming alignment error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 800968c:	2020      	movs	r0, #32
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 800968e:	f042 0208 	orr.w	r2, r2, #8
 8009692:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 8009694:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 8009696:	4b17      	ldr	r3, [pc, #92]	; (80096f4 <FLASH_SetErrorCode+0x88>)
 8009698:	68da      	ldr	r2, [r3, #12]
 800969a:	0652      	lsls	r2, r2, #25
 800969c:	d506      	bpl.n	80096ac <FLASH_SetErrorCode+0x40>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 800969e:	4916      	ldr	r1, [pc, #88]	; (80096f8 <FLASH_SetErrorCode+0x8c>)
 80096a0:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming parallelism error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 80096a2:	2040      	movs	r0, #64	; 0x40
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 80096a4:	f042 0204 	orr.w	r2, r2, #4
 80096a8:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 80096aa:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 80096ac:	4b11      	ldr	r3, [pc, #68]	; (80096f4 <FLASH_SetErrorCode+0x88>)
 80096ae:	68da      	ldr	r2, [r3, #12]
 80096b0:	0610      	lsls	r0, r2, #24
 80096b2:	d506      	bpl.n	80096c2 <FLASH_SetErrorCode+0x56>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 80096b4:	4910      	ldr	r1, [pc, #64]	; (80096f8 <FLASH_SetErrorCode+0x8c>)
 80096b6:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming sequence error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 80096b8:	2080      	movs	r0, #128	; 0x80
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 80096ba:	f042 0202 	orr.w	r2, r2, #2
 80096be:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 80096c0:	60d8      	str	r0, [r3, #12]
  }
#if defined(FLASH_SR_RDERR) 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_RDERR) != RESET)
 80096c2:	4b0c      	ldr	r3, [pc, #48]	; (80096f4 <FLASH_SetErrorCode+0x88>)
 80096c4:	68da      	ldr	r2, [r3, #12]
 80096c6:	05d1      	lsls	r1, r2, #23
 80096c8:	d507      	bpl.n	80096da <FLASH_SetErrorCode+0x6e>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 80096ca:	490b      	ldr	r1, [pc, #44]	; (80096f8 <FLASH_SetErrorCode+0x8c>)
 80096cc:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Proprietary readout protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 80096ce:	f44f 7080 	mov.w	r0, #256	; 0x100
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 80096d2:	f042 0201 	orr.w	r2, r2, #1
 80096d6:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 80096d8:	60d8      	str	r0, [r3, #12]
  }
#endif /* FLASH_SR_RDERR */  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 80096da:	4b06      	ldr	r3, [pc, #24]	; (80096f4 <FLASH_SetErrorCode+0x88>)
 80096dc:	68da      	ldr	r2, [r3, #12]
 80096de:	0792      	lsls	r2, r2, #30
 80096e0:	d506      	bpl.n	80096f0 <FLASH_SetErrorCode+0x84>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 80096e2:	4905      	ldr	r1, [pc, #20]	; (80096f8 <FLASH_SetErrorCode+0x8c>)
 80096e4:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Operation error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 80096e6:	2002      	movs	r0, #2
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 80096e8:	f042 0220 	orr.w	r2, r2, #32
 80096ec:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 80096ee:	60d8      	str	r0, [r3, #12]
  }
}
 80096f0:	4770      	bx	lr
 80096f2:	bf00      	nop
 80096f4:	40023c00 	.word	0x40023c00
 80096f8:	20002a04 	.word	0x20002a04

080096fc <HAL_FLASH_Program>:
{
 80096fc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  __HAL_LOCK(&pFlash);
 8009700:	4f4d      	ldr	r7, [pc, #308]	; (8009838 <HAL_FLASH_Program+0x13c>)
{
 8009702:	469b      	mov	fp, r3
  __HAL_LOCK(&pFlash);
 8009704:	7e3b      	ldrb	r3, [r7, #24]
 8009706:	2b01      	cmp	r3, #1
 8009708:	d060      	beq.n	80097cc <HAL_FLASH_Program+0xd0>
 800970a:	2301      	movs	r3, #1
 800970c:	763b      	strb	r3, [r7, #24]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800970e:	2300      	movs	r3, #0
 8009710:	4681      	mov	r9, r0
 8009712:	468a      	mov	sl, r1
 8009714:	4690      	mov	r8, r2
 8009716:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 8009718:	f7ff ff08 	bl	800952c <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800971c:	4d47      	ldr	r5, [pc, #284]	; (800983c <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 800971e:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009720:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009724:	e004      	b.n	8009730 <HAL_FLASH_Program+0x34>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009726:	f7ff ff01 	bl	800952c <HAL_GetTick>
 800972a:	1b00      	subs	r0, r0, r4
 800972c:	42b0      	cmp	r0, r6
 800972e:	d848      	bhi.n	80097c2 <HAL_FLASH_Program+0xc6>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009730:	68eb      	ldr	r3, [r5, #12]
 8009732:	03d8      	lsls	r0, r3, #15
 8009734:	d4f7      	bmi.n	8009726 <HAL_FLASH_Program+0x2a>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009736:	68eb      	ldr	r3, [r5, #12]
 8009738:	07d9      	lsls	r1, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800973a:	bf44      	itt	mi
 800973c:	2301      	movmi	r3, #1
 800973e:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009740:	4b3e      	ldr	r3, [pc, #248]	; (800983c <HAL_FLASH_Program+0x140>)
 8009742:	68da      	ldr	r2, [r3, #12]
 8009744:	f412 7ff9 	tst.w	r2, #498	; 0x1f2
 8009748:	d154      	bne.n	80097f4 <HAL_FLASH_Program+0xf8>
    if(TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 800974a:	f1b9 0f00 	cmp.w	r9, #0
 800974e:	d040      	beq.n	80097d2 <HAL_FLASH_Program+0xd6>
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 8009750:	f1b9 0f01 	cmp.w	r9, #1
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009754:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 8009756:	d051      	beq.n	80097fc <HAL_FLASH_Program+0x100>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009758:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800975c:	611a      	str	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 800975e:	f1b9 0f02 	cmp.w	r9, #2
  FLASH->CR |= FLASH_PSIZE_WORD;
 8009762:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 8009764:	d05e      	beq.n	8009824 <HAL_FLASH_Program+0x128>
  FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 8009766:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 800976a:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800976c:	691a      	ldr	r2, [r3, #16]
 800976e:	f042 0201 	orr.w	r2, r2, #1
 8009772:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = (uint32_t)Data;
 8009774:	f8ca 8000 	str.w	r8, [sl]
 8009778:	f3bf 8f6f 	isb	sy
  *(__IO uint32_t*)(Address+4) = (uint32_t)(Data >> 32);
 800977c:	f8ca b004 	str.w	fp, [sl, #4]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009780:	2300      	movs	r3, #0
 8009782:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 8009784:	f7ff fed2 	bl	800952c <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009788:	4d2c      	ldr	r5, [pc, #176]	; (800983c <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 800978a:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800978c:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009790:	e004      	b.n	800979c <HAL_FLASH_Program+0xa0>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009792:	f7ff fecb 	bl	800952c <HAL_GetTick>
 8009796:	1b00      	subs	r0, r0, r4
 8009798:	42b0      	cmp	r0, r6
 800979a:	d829      	bhi.n	80097f0 <HAL_FLASH_Program+0xf4>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800979c:	68eb      	ldr	r3, [r5, #12]
 800979e:	03da      	lsls	r2, r3, #15
 80097a0:	d4f7      	bmi.n	8009792 <HAL_FLASH_Program+0x96>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 80097a2:	68eb      	ldr	r3, [r5, #12]
 80097a4:	07db      	lsls	r3, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 80097a6:	bf44      	itt	mi
 80097a8:	2301      	movmi	r3, #1
 80097aa:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 80097ac:	4b23      	ldr	r3, [pc, #140]	; (800983c <HAL_FLASH_Program+0x140>)
 80097ae:	68d8      	ldr	r0, [r3, #12]
 80097b0:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 80097b4:	d132      	bne.n	800981c <HAL_FLASH_Program+0x120>
    FLASH->CR &= (~FLASH_CR_PG);  
 80097b6:	4a21      	ldr	r2, [pc, #132]	; (800983c <HAL_FLASH_Program+0x140>)
 80097b8:	6913      	ldr	r3, [r2, #16]
 80097ba:	f023 0301 	bic.w	r3, r3, #1
 80097be:	6113      	str	r3, [r2, #16]
 80097c0:	e000      	b.n	80097c4 <HAL_FLASH_Program+0xc8>
 80097c2:	2003      	movs	r0, #3
  __HAL_UNLOCK(&pFlash);
 80097c4:	2300      	movs	r3, #0
 80097c6:	763b      	strb	r3, [r7, #24]
}
 80097c8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  __HAL_LOCK(&pFlash);
 80097cc:	2002      	movs	r0, #2
}
 80097ce:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 80097d2:	691a      	ldr	r2, [r3, #16]
 80097d4:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 80097d8:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_BYTE;
 80097da:	691a      	ldr	r2, [r3, #16]
 80097dc:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 80097de:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_Byte(Address, (uint8_t) Data);
 80097e0:	fa5f f888 	uxtb.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 80097e4:	f042 0201 	orr.w	r2, r2, #1
 80097e8:	611a      	str	r2, [r3, #16]
  *(__IO uint8_t*)Address = Data;
 80097ea:	f88a 8000 	strb.w	r8, [sl]
}
 80097ee:	e7c7      	b.n	8009780 <HAL_FLASH_Program+0x84>
        return HAL_TIMEOUT;
 80097f0:	2003      	movs	r0, #3
 80097f2:	e7e0      	b.n	80097b6 <HAL_FLASH_Program+0xba>
    FLASH_SetErrorCode();
 80097f4:	f7ff ff3a 	bl	800966c <FLASH_SetErrorCode>
    return HAL_ERROR;
 80097f8:	2001      	movs	r0, #1
 80097fa:	e7e3      	b.n	80097c4 <HAL_FLASH_Program+0xc8>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 80097fc:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009800:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 8009802:	691a      	ldr	r2, [r3, #16]
 8009804:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009808:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800980a:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_HalfWord(Address, (uint16_t) Data);
 800980c:	fa1f f888 	uxth.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 8009810:	f042 0201 	orr.w	r2, r2, #1
 8009814:	611a      	str	r2, [r3, #16]
  *(__IO uint16_t*)Address = Data;
 8009816:	f8aa 8000 	strh.w	r8, [sl]
}
 800981a:	e7b1      	b.n	8009780 <HAL_FLASH_Program+0x84>
    FLASH_SetErrorCode();
 800981c:	f7ff ff26 	bl	800966c <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009820:	2001      	movs	r0, #1
 8009822:	e7c8      	b.n	80097b6 <HAL_FLASH_Program+0xba>
  FLASH->CR |= FLASH_PSIZE_WORD;
 8009824:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009828:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800982a:	691a      	ldr	r2, [r3, #16]
 800982c:	f042 0201 	orr.w	r2, r2, #1
 8009830:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = Data;
 8009832:	f8ca 8000 	str.w	r8, [sl]
}
 8009836:	e7a3      	b.n	8009780 <HAL_FLASH_Program+0x84>
 8009838:	20002a04 	.word	0x20002a04
 800983c:	40023c00 	.word	0x40023c00

08009840 <HAL_FLASH_Unlock>:
  if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8009840:	4b06      	ldr	r3, [pc, #24]	; (800985c <HAL_FLASH_Unlock+0x1c>)
 8009842:	691a      	ldr	r2, [r3, #16]
 8009844:	2a00      	cmp	r2, #0
 8009846:	db01      	blt.n	800984c <HAL_FLASH_Unlock+0xc>
  HAL_StatusTypeDef status = HAL_OK;
 8009848:	2000      	movs	r0, #0
}
 800984a:	4770      	bx	lr
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 800984c:	4904      	ldr	r1, [pc, #16]	; (8009860 <HAL_FLASH_Unlock+0x20>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 800984e:	4a05      	ldr	r2, [pc, #20]	; (8009864 <HAL_FLASH_Unlock+0x24>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 8009850:	6059      	str	r1, [r3, #4]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 8009852:	605a      	str	r2, [r3, #4]
    if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8009854:	6918      	ldr	r0, [r3, #16]
  HAL_StatusTypeDef status = HAL_OK;
 8009856:	0fc0      	lsrs	r0, r0, #31
 8009858:	4770      	bx	lr
 800985a:	bf00      	nop
 800985c:	40023c00 	.word	0x40023c00
 8009860:	45670123 	.word	0x45670123
 8009864:	cdef89ab 	.word	0xcdef89ab

08009868 <HAL_FLASH_Lock>:
  FLASH->CR |= FLASH_CR_LOCK;
 8009868:	4a03      	ldr	r2, [pc, #12]	; (8009878 <HAL_FLASH_Lock+0x10>)
 800986a:	6913      	ldr	r3, [r2, #16]
 800986c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
}
 8009870:	2000      	movs	r0, #0
  FLASH->CR |= FLASH_CR_LOCK;
 8009872:	6113      	str	r3, [r2, #16]
}
 8009874:	4770      	bx	lr
 8009876:	bf00      	nop
 8009878:	40023c00 	.word	0x40023c00

0800987c <HAL_FLASH_GetError>:
   return pFlash.ErrorCode;
 800987c:	4b01      	ldr	r3, [pc, #4]	; (8009884 <HAL_FLASH_GetError+0x8>)
 800987e:	69d8      	ldr	r0, [r3, #28]
}  
 8009880:	4770      	bx	lr
 8009882:	bf00      	nop
 8009884:	20002a04 	.word	0x20002a04

08009888 <FLASH_WaitForLastOperation>:
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009888:	4b14      	ldr	r3, [pc, #80]	; (80098dc <FLASH_WaitForLastOperation+0x54>)
{ 
 800988a:	b570      	push	{r4, r5, r6, lr}
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800988c:	2200      	movs	r2, #0
{ 
 800988e:	4604      	mov	r4, r0
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009890:	61da      	str	r2, [r3, #28]
  tickstart = HAL_GetTick();
 8009892:	f7ff fe4b 	bl	800952c <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009896:	4e12      	ldr	r6, [pc, #72]	; (80098e0 <FLASH_WaitForLastOperation+0x58>)
  tickstart = HAL_GetTick();
 8009898:	4605      	mov	r5, r0
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800989a:	1c63      	adds	r3, r4, #1
 800989c:	d10f      	bne.n	80098be <FLASH_WaitForLastOperation+0x36>
 800989e:	4a10      	ldr	r2, [pc, #64]	; (80098e0 <FLASH_WaitForLastOperation+0x58>)
 80098a0:	68d3      	ldr	r3, [r2, #12]
 80098a2:	03d8      	lsls	r0, r3, #15
 80098a4:	d4fc      	bmi.n	80098a0 <FLASH_WaitForLastOperation+0x18>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 80098a6:	4b0e      	ldr	r3, [pc, #56]	; (80098e0 <FLASH_WaitForLastOperation+0x58>)
 80098a8:	68da      	ldr	r2, [r3, #12]
 80098aa:	07d2      	lsls	r2, r2, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 80098ac:	bf44      	itt	mi
 80098ae:	2201      	movmi	r2, #1
 80098b0:	60da      	strmi	r2, [r3, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 80098b2:	4b0b      	ldr	r3, [pc, #44]	; (80098e0 <FLASH_WaitForLastOperation+0x58>)
 80098b4:	68d8      	ldr	r0, [r3, #12]
 80098b6:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 80098ba:	d10b      	bne.n	80098d4 <FLASH_WaitForLastOperation+0x4c>
}  
 80098bc:	bd70      	pop	{r4, r5, r6, pc}
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 80098be:	68f3      	ldr	r3, [r6, #12]
 80098c0:	03d9      	lsls	r1, r3, #15
 80098c2:	d5f0      	bpl.n	80098a6 <FLASH_WaitForLastOperation+0x1e>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 80098c4:	b124      	cbz	r4, 80098d0 <FLASH_WaitForLastOperation+0x48>
 80098c6:	f7ff fe31 	bl	800952c <HAL_GetTick>
 80098ca:	1b40      	subs	r0, r0, r5
 80098cc:	42a0      	cmp	r0, r4
 80098ce:	d9e4      	bls.n	800989a <FLASH_WaitForLastOperation+0x12>
        return HAL_TIMEOUT;
 80098d0:	2003      	movs	r0, #3
}  
 80098d2:	bd70      	pop	{r4, r5, r6, pc}
    FLASH_SetErrorCode();
 80098d4:	f7ff feca 	bl	800966c <FLASH_SetErrorCode>
    return HAL_ERROR;
 80098d8:	2001      	movs	r0, #1
}  
 80098da:	bd70      	pop	{r4, r5, r6, pc}
 80098dc:	20002a04 	.word	0x20002a04
 80098e0:	40023c00 	.word	0x40023c00

080098e4 <FLASH_FlushCaches>:
  * @retval None
  */
void FLASH_FlushCaches(void)
{
  /* Flush instruction cache  */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 80098e4:	4b14      	ldr	r3, [pc, #80]	; (8009938 <FLASH_FlushCaches+0x54>)
 80098e6:	681a      	ldr	r2, [r3, #0]
 80098e8:	0591      	lsls	r1, r2, #22
 80098ea:	d50f      	bpl.n	800990c <FLASH_FlushCaches+0x28>
  {
    /* Disable instruction cache  */
    __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 80098ec:	681a      	ldr	r2, [r3, #0]
 80098ee:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80098f2:	601a      	str	r2, [r3, #0]
    /* Reset instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 80098f4:	681a      	ldr	r2, [r3, #0]
 80098f6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80098fa:	601a      	str	r2, [r3, #0]
 80098fc:	681a      	ldr	r2, [r3, #0]
 80098fe:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009902:	601a      	str	r2, [r3, #0]
    /* Enable instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8009904:	681a      	ldr	r2, [r3, #0]
 8009906:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800990a:	601a      	str	r2, [r3, #0]
  }

  /* Flush data cache */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 800990c:	4b0a      	ldr	r3, [pc, #40]	; (8009938 <FLASH_FlushCaches+0x54>)
 800990e:	681a      	ldr	r2, [r3, #0]
 8009910:	0552      	lsls	r2, r2, #21
 8009912:	d50f      	bpl.n	8009934 <FLASH_FlushCaches+0x50>
  {
    /* Disable data cache  */
    __HAL_FLASH_DATA_CACHE_DISABLE();
 8009914:	681a      	ldr	r2, [r3, #0]
 8009916:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800991a:	601a      	str	r2, [r3, #0]
    /* Reset data cache */
    __HAL_FLASH_DATA_CACHE_RESET();
 800991c:	681a      	ldr	r2, [r3, #0]
 800991e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8009922:	601a      	str	r2, [r3, #0]
 8009924:	681a      	ldr	r2, [r3, #0]
 8009926:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800992a:	601a      	str	r2, [r3, #0]
    /* Enable data cache */
    __HAL_FLASH_DATA_CACHE_ENABLE();
 800992c:	681a      	ldr	r2, [r3, #0]
 800992e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009932:	601a      	str	r2, [r3, #0]
  }
}
 8009934:	4770      	bx	lr
 8009936:	bf00      	nop
 8009938:	40023c00 	.word	0x40023c00

0800993c <HAL_FLASHEx_Erase>:
{
 800993c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  __HAL_LOCK(&pFlash);
 8009940:	4f44      	ldr	r7, [pc, #272]	; (8009a54 <HAL_FLASHEx_Erase+0x118>)
 8009942:	7e3b      	ldrb	r3, [r7, #24]
 8009944:	2b01      	cmp	r3, #1
 8009946:	d053      	beq.n	80099f0 <HAL_FLASHEx_Erase+0xb4>
 8009948:	2301      	movs	r3, #1
 800994a:	4681      	mov	r9, r0
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800994c:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009950:	4688      	mov	r8, r1
  __HAL_LOCK(&pFlash);
 8009952:	763b      	strb	r3, [r7, #24]
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009954:	f7ff ff98 	bl	8009888 <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 8009958:	4606      	mov	r6, r0
 800995a:	2800      	cmp	r0, #0
 800995c:	d143      	bne.n	80099e6 <HAL_FLASHEx_Erase+0xaa>
    *SectorError = 0xFFFFFFFFU;
 800995e:	f04f 33ff 	mov.w	r3, #4294967295
 8009962:	f8c8 3000 	str.w	r3, [r8]
    if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 8009966:	f8d9 3000 	ldr.w	r3, [r9]
 800996a:	2b01      	cmp	r3, #1
 800996c:	d044      	beq.n	80099f8 <HAL_FLASHEx_Erase+0xbc>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 800996e:	e9d9 5302 	ldrd	r5, r3, [r9, #8]
 8009972:	442b      	add	r3, r5
 8009974:	429d      	cmp	r5, r3
 8009976:	d234      	bcs.n	80099e2 <HAL_FLASHEx_Erase+0xa6>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009978:	4c37      	ldr	r4, [pc, #220]	; (8009a58 <HAL_FLASHEx_Erase+0x11c>)
 800997a:	e005      	b.n	8009988 <HAL_FLASHEx_Erase+0x4c>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 800997c:	e9d9 2302 	ldrd	r2, r3, [r9, #8]
 8009980:	3501      	adds	r5, #1
 8009982:	4413      	add	r3, r2
 8009984:	42ab      	cmp	r3, r5
 8009986:	d92c      	bls.n	80099e2 <HAL_FLASHEx_Erase+0xa6>
  if (VoltageRange == FLASH_VOLTAGE_RANGE_1)
 8009988:	f899 3010 	ldrb.w	r3, [r9, #16]
 800998c:	2b02      	cmp	r3, #2
        FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 800998e:	f44f 7140 	mov.w	r1, #768	; 0x300
 8009992:	bf98      	it	ls
 8009994:	0219      	lslls	r1, r3, #8
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009996:	6923      	ldr	r3, [r4, #16]
 8009998:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800999c:	6123      	str	r3, [r4, #16]
  FLASH->CR |= tmp_psize;
 800999e:	6923      	ldr	r3, [r4, #16]
 80099a0:	430b      	orrs	r3, r1
 80099a2:	6123      	str	r3, [r4, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 80099a4:	6923      	ldr	r3, [r4, #16]
 80099a6:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80099aa:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 80099ac:	6923      	ldr	r3, [r4, #16]
  if (Sector > FLASH_SECTOR_11)
 80099ae:	2d0b      	cmp	r5, #11
    Sector += 4U;
 80099b0:	bf8c      	ite	hi
 80099b2:	1d2a      	addhi	r2, r5, #4
 80099b4:	462a      	movls	r2, r5
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 80099b6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80099ba:	f043 0302 	orr.w	r3, r3, #2
 80099be:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_STRT;
 80099c0:	6923      	ldr	r3, [r4, #16]
 80099c2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80099c6:	6123      	str	r3, [r4, #16]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 80099c8:	f24c 3050 	movw	r0, #50000	; 0xc350
 80099cc:	f7ff ff5c 	bl	8009888 <FLASH_WaitForLastOperation>
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 80099d0:	6923      	ldr	r3, [r4, #16]
 80099d2:	f023 03fa 	bic.w	r3, r3, #250	; 0xfa
 80099d6:	6123      	str	r3, [r4, #16]
        if (status != HAL_OK)
 80099d8:	2800      	cmp	r0, #0
 80099da:	d0cf      	beq.n	800997c <HAL_FLASHEx_Erase+0x40>
          *SectorError = index;
 80099dc:	f8c8 5000 	str.w	r5, [r8]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 80099e0:	4606      	mov	r6, r0
    FLASH_FlushCaches();
 80099e2:	f7ff ff7f 	bl	80098e4 <FLASH_FlushCaches>
  __HAL_UNLOCK(&pFlash);
 80099e6:	2300      	movs	r3, #0
 80099e8:	763b      	strb	r3, [r7, #24]
}
 80099ea:	4630      	mov	r0, r6
 80099ec:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(&pFlash);
 80099f0:	2602      	movs	r6, #2
}
 80099f2:	4630      	mov	r0, r6
 80099f4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 80099f8:	4a17      	ldr	r2, [pc, #92]	; (8009a58 <HAL_FLASHEx_Erase+0x11c>)
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 80099fa:	f8d9 0004 	ldr.w	r0, [r9, #4]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 80099fe:	6911      	ldr	r1, [r2, #16]
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 8009a00:	f8d9 3010 	ldr.w	r3, [r9, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009a04:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 8009a08:	6111      	str	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 8009a0a:	2803      	cmp	r0, #3
    FLASH->CR |= FLASH_MER_BIT;
 8009a0c:	6911      	ldr	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 8009a0e:	d01a      	beq.n	8009a46 <HAL_FLASHEx_Erase+0x10a>
  else if (Banks == FLASH_BANK_1)
 8009a10:	2801      	cmp	r0, #1
    FLASH->CR |= FLASH_CR_MER1;
 8009a12:	bf0c      	ite	eq
 8009a14:	f041 0104 	orreq.w	r1, r1, #4
    FLASH->CR |= FLASH_CR_MER2;
 8009a18:	f441 4100 	orrne.w	r1, r1, #32768	; 0x8000
 8009a1c:	6111      	str	r1, [r2, #16]
  FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange << 8U);
 8009a1e:	4c0e      	ldr	r4, [pc, #56]	; (8009a58 <HAL_FLASHEx_Erase+0x11c>)
 8009a20:	021b      	lsls	r3, r3, #8
 8009a22:	6922      	ldr	r2, [r4, #16]
 8009a24:	b29b      	uxth	r3, r3
 8009a26:	4313      	orrs	r3, r2
 8009a28:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009a2c:	6123      	str	r3, [r4, #16]
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009a2e:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009a32:	f7ff ff29 	bl	8009888 <FLASH_WaitForLastOperation>
      FLASH->CR &= (~FLASH_MER_BIT);
 8009a36:	6923      	ldr	r3, [r4, #16]
 8009a38:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8009a3c:	f023 0304 	bic.w	r3, r3, #4
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009a40:	4606      	mov	r6, r0
      FLASH->CR &= (~FLASH_MER_BIT);
 8009a42:	6123      	str	r3, [r4, #16]
 8009a44:	e7cd      	b.n	80099e2 <HAL_FLASHEx_Erase+0xa6>
    FLASH->CR |= FLASH_MER_BIT;
 8009a46:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8009a4a:	f041 0104 	orr.w	r1, r1, #4
 8009a4e:	6111      	str	r1, [r2, #16]
 8009a50:	e7e5      	b.n	8009a1e <HAL_FLASHEx_Erase+0xe2>
 8009a52:	bf00      	nop
 8009a54:	20002a04 	.word	0x20002a04
 8009a58:	40023c00 	.word	0x40023c00

08009a5c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8009a5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009a60:	2200      	movs	r2, #0
 8009a62:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009a64:	f8df a260 	ldr.w	sl, [pc, #608]	; 8009cc8 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8009a68:	4e90      	ldr	r6, [pc, #576]	; (8009cac <HAL_GPIO_Init+0x250>)
{
 8009a6a:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009a6c:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009a6e:	4689      	mov	r9, r1
 8009a70:	e005      	b.n	8009a7e <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009a72:	3301      	adds	r3, #1
 8009a74:	2b10      	cmp	r3, #16
 8009a76:	f102 0202 	add.w	r2, r2, #2
 8009a7a:	f000 8095 	beq.w	8009ba8 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 8009a7e:	2101      	movs	r1, #1
 8009a80:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009a82:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 8009a86:	43a1      	bics	r1, r4
 8009a88:	d1f3      	bne.n	8009a72 <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8009a8a:	f8d9 c004 	ldr.w	ip, [r9, #4]
 8009a8e:	f00c 0103 	and.w	r1, ip, #3
 8009a92:	1e4d      	subs	r5, r1, #1
 8009a94:	2d01      	cmp	r5, #1
 8009a96:	f240 808a 	bls.w	8009bae <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8009a9a:	2903      	cmp	r1, #3
 8009a9c:	f040 80ca 	bne.w	8009c34 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009aa0:	4091      	lsls	r1, r2
 8009aa2:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 8009aa4:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8009aa6:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8009aa8:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009aaa:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 8009aae:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009ab0:	d0df      	beq.n	8009a72 <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009ab2:	2100      	movs	r1, #0
 8009ab4:	9103      	str	r1, [sp, #12]
 8009ab6:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009aba:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8009abe:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 8009ac2:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009ac6:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8009aca:	9103      	str	r1, [sp, #12]
 8009acc:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 8009ace:	f023 0103 	bic.w	r1, r3, #3
 8009ad2:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8009ad6:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009ada:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8009ade:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009ae0:	00bf      	lsls	r7, r7, #2
 8009ae2:	f04f 0e0f 	mov.w	lr, #15
 8009ae6:	fa0e fe07 	lsl.w	lr, lr, r7
 8009aea:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009aee:	4d70      	ldr	r5, [pc, #448]	; (8009cb0 <HAL_GPIO_Init+0x254>)
 8009af0:	42a8      	cmp	r0, r5
 8009af2:	d02e      	beq.n	8009b52 <HAL_GPIO_Init+0xf6>
 8009af4:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8009af8:	42a8      	cmp	r0, r5
 8009afa:	f000 809f 	beq.w	8009c3c <HAL_GPIO_Init+0x1e0>
 8009afe:	4d6d      	ldr	r5, [pc, #436]	; (8009cb4 <HAL_GPIO_Init+0x258>)
 8009b00:	42a8      	cmp	r0, r5
 8009b02:	f000 80a2 	beq.w	8009c4a <HAL_GPIO_Init+0x1ee>
 8009b06:	4d6c      	ldr	r5, [pc, #432]	; (8009cb8 <HAL_GPIO_Init+0x25c>)
 8009b08:	42a8      	cmp	r0, r5
 8009b0a:	f000 80a5 	beq.w	8009c58 <HAL_GPIO_Init+0x1fc>
 8009b0e:	4d6b      	ldr	r5, [pc, #428]	; (8009cbc <HAL_GPIO_Init+0x260>)
 8009b10:	42a8      	cmp	r0, r5
 8009b12:	f000 80a8 	beq.w	8009c66 <HAL_GPIO_Init+0x20a>
 8009b16:	4d6a      	ldr	r5, [pc, #424]	; (8009cc0 <HAL_GPIO_Init+0x264>)
 8009b18:	42a8      	cmp	r0, r5
 8009b1a:	f000 80b2 	beq.w	8009c82 <HAL_GPIO_Init+0x226>
 8009b1e:	4d69      	ldr	r5, [pc, #420]	; (8009cc4 <HAL_GPIO_Init+0x268>)
 8009b20:	42a8      	cmp	r0, r5
 8009b22:	f000 80b5 	beq.w	8009c90 <HAL_GPIO_Init+0x234>
 8009b26:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 8009ccc <HAL_GPIO_Init+0x270>
 8009b2a:	4570      	cmp	r0, lr
 8009b2c:	f000 80a2 	beq.w	8009c74 <HAL_GPIO_Init+0x218>
 8009b30:	f8df e19c 	ldr.w	lr, [pc, #412]	; 8009cd0 <HAL_GPIO_Init+0x274>
 8009b34:	4570      	cmp	r0, lr
 8009b36:	f000 80b2 	beq.w	8009c9e <HAL_GPIO_Init+0x242>
 8009b3a:	f8df e198 	ldr.w	lr, [pc, #408]	; 8009cd4 <HAL_GPIO_Init+0x278>
 8009b3e:	4570      	cmp	r0, lr
 8009b40:	bf0c      	ite	eq
 8009b42:	f04f 0e09 	moveq.w	lr, #9
 8009b46:	f04f 0e0a 	movne.w	lr, #10
 8009b4a:	fa0e f707 	lsl.w	r7, lr, r7
 8009b4e:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8009b52:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 8009b56:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 8009b58:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8009b5c:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8009b60:	bf0c      	ite	eq
 8009b62:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009b64:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 8009b68:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 8009b6a:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8009b6c:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 8009b70:	bf0c      	ite	eq
 8009b72:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009b74:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 8009b78:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 8009b7a:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8009b7c:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8009b80:	bf0c      	ite	eq
 8009b82:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009b84:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 8009b88:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8009b8a:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8009b8c:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009b90:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 8009b94:	bf0c      	ite	eq
 8009b96:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009b98:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009b9c:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 8009b9e:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009ba0:	f102 0202 	add.w	r2, r2, #2
 8009ba4:	f47f af6b 	bne.w	8009a7e <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 8009ba8:	b005      	add	sp, #20
 8009baa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009bae:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 8009bb2:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009bb6:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009bba:	2503      	movs	r5, #3
 8009bbc:	fa05 f802 	lsl.w	r8, r5, r2
 8009bc0:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009bc4:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8009bc8:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8009bca:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8009bcc:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8009bd0:	f3cc 1700 	ubfx	r7, ip, #4, #1
 8009bd4:	409f      	lsls	r7, r3
 8009bd6:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009bda:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 8009bde:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8009be0:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8009be2:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8009be6:	f8d9 7008 	ldr.w	r7, [r9, #8]
 8009bea:	4097      	lsls	r7, r2
 8009bec:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8009bf0:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 8009bf2:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8009bf4:	fa01 f102 	lsl.w	r1, r1, r2
 8009bf8:	f47f af54 	bne.w	8009aa4 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 8009bfc:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 8009c00:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009c04:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8009c08:	f8de 7020 	ldr.w	r7, [lr, #32]
 8009c0c:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8009c0e:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009c12:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8009c16:	fa07 f708 	lsl.w	r7, r7, r8
 8009c1a:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009c1c:	270f      	movs	r7, #15
 8009c1e:	fa07 f808 	lsl.w	r8, r7, r8
 8009c22:	9f00      	ldr	r7, [sp, #0]
 8009c24:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8009c28:	9f01      	ldr	r7, [sp, #4]
 8009c2a:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 8009c2e:	f8ce 7020 	str.w	r7, [lr, #32]
 8009c32:	e737      	b.n	8009aa4 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009c34:	2503      	movs	r5, #3
 8009c36:	4095      	lsls	r5, r2
 8009c38:	43ed      	mvns	r5, r5
 8009c3a:	e7d1      	b.n	8009be0 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009c3c:	f04f 0e01 	mov.w	lr, #1
 8009c40:	fa0e f707 	lsl.w	r7, lr, r7
 8009c44:	ea48 0807 	orr.w	r8, r8, r7
 8009c48:	e783      	b.n	8009b52 <HAL_GPIO_Init+0xf6>
 8009c4a:	f04f 0e02 	mov.w	lr, #2
 8009c4e:	fa0e f707 	lsl.w	r7, lr, r7
 8009c52:	ea48 0807 	orr.w	r8, r8, r7
 8009c56:	e77c      	b.n	8009b52 <HAL_GPIO_Init+0xf6>
 8009c58:	f04f 0e03 	mov.w	lr, #3
 8009c5c:	fa0e f707 	lsl.w	r7, lr, r7
 8009c60:	ea48 0807 	orr.w	r8, r8, r7
 8009c64:	e775      	b.n	8009b52 <HAL_GPIO_Init+0xf6>
 8009c66:	f04f 0e04 	mov.w	lr, #4
 8009c6a:	fa0e f707 	lsl.w	r7, lr, r7
 8009c6e:	ea48 0807 	orr.w	r8, r8, r7
 8009c72:	e76e      	b.n	8009b52 <HAL_GPIO_Init+0xf6>
 8009c74:	f04f 0e07 	mov.w	lr, #7
 8009c78:	fa0e f707 	lsl.w	r7, lr, r7
 8009c7c:	ea48 0807 	orr.w	r8, r8, r7
 8009c80:	e767      	b.n	8009b52 <HAL_GPIO_Init+0xf6>
 8009c82:	f04f 0e05 	mov.w	lr, #5
 8009c86:	fa0e f707 	lsl.w	r7, lr, r7
 8009c8a:	ea48 0807 	orr.w	r8, r8, r7
 8009c8e:	e760      	b.n	8009b52 <HAL_GPIO_Init+0xf6>
 8009c90:	f04f 0e06 	mov.w	lr, #6
 8009c94:	fa0e f707 	lsl.w	r7, lr, r7
 8009c98:	ea48 0807 	orr.w	r8, r8, r7
 8009c9c:	e759      	b.n	8009b52 <HAL_GPIO_Init+0xf6>
 8009c9e:	f04f 0e08 	mov.w	lr, #8
 8009ca2:	fa0e f707 	lsl.w	r7, lr, r7
 8009ca6:	ea48 0807 	orr.w	r8, r8, r7
 8009caa:	e752      	b.n	8009b52 <HAL_GPIO_Init+0xf6>
 8009cac:	40013c00 	.word	0x40013c00
 8009cb0:	40020000 	.word	0x40020000
 8009cb4:	40020800 	.word	0x40020800
 8009cb8:	40020c00 	.word	0x40020c00
 8009cbc:	40021000 	.word	0x40021000
 8009cc0:	40021400 	.word	0x40021400
 8009cc4:	40021800 	.word	0x40021800
 8009cc8:	40023800 	.word	0x40023800
 8009ccc:	40021c00 	.word	0x40021c00
 8009cd0:	40022000 	.word	0x40022000
 8009cd4:	40022400 	.word	0x40022400

08009cd8 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8009cd8:	6903      	ldr	r3, [r0, #16]
 8009cda:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8009cdc:	bf14      	ite	ne
 8009cde:	2001      	movne	r0, #1
 8009ce0:	2000      	moveq	r0, #0
 8009ce2:	4770      	bx	lr

08009ce4 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8009ce4:	b902      	cbnz	r2, 8009ce8 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8009ce6:	0409      	lsls	r1, r1, #16
 8009ce8:	6181      	str	r1, [r0, #24]
  }
}
 8009cea:	4770      	bx	lr

08009cec <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8009cec:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8009cee:	ea01 0203 	and.w	r2, r1, r3
 8009cf2:	ea21 0103 	bic.w	r1, r1, r3
 8009cf6:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8009cfa:	6181      	str	r1, [r0, #24]
}
 8009cfc:	4770      	bx	lr
 8009cfe:	bf00      	nop

08009d00 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 8009d00:	4770      	bx	lr
 8009d02:	bf00      	nop

08009d04 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8009d04:	4a04      	ldr	r2, [pc, #16]	; (8009d18 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 8009d06:	6951      	ldr	r1, [r2, #20]
 8009d08:	4201      	tst	r1, r0
 8009d0a:	d100      	bne.n	8009d0e <HAL_GPIO_EXTI_IRQHandler+0xa>
 8009d0c:	4770      	bx	lr
{
 8009d0e:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8009d10:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8009d12:	f7ff fff5 	bl	8009d00 <HAL_GPIO_EXTI_Callback>
}
 8009d16:	bd08      	pop	{r3, pc}
 8009d18:	40013c00 	.word	0x40013c00

08009d1c <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 8009d1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009d20:	6804      	ldr	r4, [r0, #0]
{
 8009d22:	b083      	sub	sp, #12
 8009d24:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009d26:	6823      	ldr	r3, [r4, #0]
{
 8009d28:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8009d2c:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009d30:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8009d34:	4606      	mov	r6, r0
 8009d36:	468a      	mov	sl, r1
 8009d38:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009d3a:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009d3c:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009d40:	d136      	bne.n	8009db0 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009d42:	6965      	ldr	r5, [r4, #20]
 8009d44:	07e8      	lsls	r0, r5, #31
 8009d46:	d5fc      	bpl.n	8009d42 <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8009d48:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 8009d4c:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 8009d4e:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009d52:	d003      	beq.n	8009d5c <I2C_RequestMemoryWrite+0x40>
 8009d54:	e04f      	b.n	8009df6 <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009d56:	6961      	ldr	r1, [r4, #20]
 8009d58:	054d      	lsls	r5, r1, #21
 8009d5a:	d45d      	bmi.n	8009e18 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009d5c:	6961      	ldr	r1, [r4, #20]
 8009d5e:	078b      	lsls	r3, r1, #30
 8009d60:	d5f9      	bpl.n	8009d56 <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009d62:	2300      	movs	r3, #0
 8009d64:	9301      	str	r3, [sp, #4]
 8009d66:	6963      	ldr	r3, [r4, #20]
 8009d68:	9301      	str	r3, [sp, #4]
 8009d6a:	69a3      	ldr	r3, [r4, #24]
 8009d6c:	9301      	str	r3, [sp, #4]
 8009d6e:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009d70:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009d74:	f040 8088 	bne.w	8009e88 <I2C_RequestMemoryWrite+0x16c>
 8009d78:	6963      	ldr	r3, [r4, #20]
 8009d7a:	061a      	lsls	r2, r3, #24
 8009d7c:	d464      	bmi.n	8009e48 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009d7e:	6963      	ldr	r3, [r4, #20]
 8009d80:	055b      	lsls	r3, r3, #21
 8009d82:	d5f9      	bpl.n	8009d78 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 8009d84:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009d86:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009d8a:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009d8c:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009d8e:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009d90:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009d94:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009d98:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009d9a:	f043 0304 	orr.w	r3, r3, #4
 8009d9e:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009da0:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8009da2:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009da4:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009da6:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009daa:	d066      	beq.n	8009e7a <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 8009dac:	2001      	movs	r0, #1
 8009dae:	e01f      	b.n	8009df0 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009db0:	6963      	ldr	r3, [r4, #20]
 8009db2:	07d9      	lsls	r1, r3, #31
 8009db4:	d4c8      	bmi.n	8009d48 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009db6:	f7ff fbb9 	bl	800952c <HAL_GetTick>
 8009dba:	eba0 000b 	sub.w	r0, r0, fp
 8009dbe:	4581      	cmp	r9, r0
 8009dc0:	d304      	bcc.n	8009dcc <I2C_RequestMemoryWrite+0xb0>
 8009dc2:	f1b9 0f00 	cmp.w	r9, #0
 8009dc6:	d001      	beq.n	8009dcc <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009dc8:	6834      	ldr	r4, [r6, #0]
 8009dca:	e7b7      	b.n	8009d3c <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009dcc:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009dce:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009dd0:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009dd2:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009dd6:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009dda:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009ddc:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 8009dde:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009de2:	f042 0220 	orr.w	r2, r2, #32
 8009de6:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009de8:	680b      	ldr	r3, [r1, #0]
 8009dea:	05dc      	lsls	r4, r3, #23
 8009dec:	d435      	bmi.n	8009e5a <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 8009dee:	2003      	movs	r0, #3
}
 8009df0:	b003      	add	sp, #12
 8009df2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009df6:	6963      	ldr	r3, [r4, #20]
 8009df8:	0798      	lsls	r0, r3, #30
 8009dfa:	d4b2      	bmi.n	8009d62 <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009dfc:	6963      	ldr	r3, [r4, #20]
 8009dfe:	055a      	lsls	r2, r3, #21
 8009e00:	d40a      	bmi.n	8009e18 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009e02:	f7ff fb93 	bl	800952c <HAL_GetTick>
 8009e06:	eba0 000b 	sub.w	r0, r0, fp
 8009e0a:	4581      	cmp	r9, r0
 8009e0c:	d34e      	bcc.n	8009eac <I2C_RequestMemoryWrite+0x190>
 8009e0e:	f1b9 0f00 	cmp.w	r9, #0
 8009e12:	d04b      	beq.n	8009eac <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009e14:	6834      	ldr	r4, [r6, #0]
 8009e16:	e79a      	b.n	8009d4e <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009e18:	6823      	ldr	r3, [r4, #0]
 8009e1a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009e1e:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009e20:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009e22:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 8009e26:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009e28:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009e2a:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009e2c:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009e30:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009e34:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009e36:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009e3a:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 8009e3e:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009e40:	6433      	str	r3, [r6, #64]	; 0x40
}
 8009e42:	b003      	add	sp, #12
 8009e44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8009e48:	f1b8 0f01 	cmp.w	r8, #1
 8009e4c:	d109      	bne.n	8009e62 <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009e4e:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 8009e50:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009e52:	6127      	str	r7, [r4, #16]
}
 8009e54:	b003      	add	sp, #12
 8009e56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8009e5a:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009e5e:	6433      	str	r3, [r6, #64]	; 0x40
 8009e60:	e7c5      	b.n	8009dee <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8009e62:	0a3b      	lsrs	r3, r7, #8
 8009e64:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009e66:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009e6a:	d12e      	bne.n	8009eca <I2C_RequestMemoryWrite+0x1ae>
 8009e6c:	6963      	ldr	r3, [r4, #20]
 8009e6e:	0619      	lsls	r1, r3, #24
 8009e70:	d4ed      	bmi.n	8009e4e <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009e72:	6963      	ldr	r3, [r4, #20]
 8009e74:	055a      	lsls	r2, r3, #21
 8009e76:	d5f9      	bpl.n	8009e6c <I2C_RequestMemoryWrite+0x150>
 8009e78:	e784      	b.n	8009d84 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009e7a:	6832      	ldr	r2, [r6, #0]
 8009e7c:	6813      	ldr	r3, [r2, #0]
 8009e7e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8009e82:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009e84:	6013      	str	r3, [r2, #0]
 8009e86:	e7b3      	b.n	8009df0 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009e88:	6963      	ldr	r3, [r4, #20]
 8009e8a:	061d      	lsls	r5, r3, #24
 8009e8c:	d4dc      	bmi.n	8009e48 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009e8e:	6963      	ldr	r3, [r4, #20]
 8009e90:	0559      	lsls	r1, r3, #21
 8009e92:	f53f af77 	bmi.w	8009d84 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009e96:	f7ff fb49 	bl	800952c <HAL_GetTick>
 8009e9a:	eba0 000b 	sub.w	r0, r0, fp
 8009e9e:	4581      	cmp	r9, r0
 8009ea0:	d325      	bcc.n	8009eee <I2C_RequestMemoryWrite+0x1d2>
 8009ea2:	f1b9 0f00 	cmp.w	r9, #0
 8009ea6:	d022      	beq.n	8009eee <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009ea8:	6834      	ldr	r4, [r6, #0]
 8009eaa:	e761      	b.n	8009d70 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009eac:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8009eae:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009eb0:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8009eb2:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009eb6:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009eba:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009ebc:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009ec0:	f043 0320 	orr.w	r3, r3, #32
 8009ec4:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 8009ec6:	2001      	movs	r0, #1
 8009ec8:	e792      	b.n	8009df0 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009eca:	6963      	ldr	r3, [r4, #20]
 8009ecc:	061b      	lsls	r3, r3, #24
 8009ece:	d4be      	bmi.n	8009e4e <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009ed0:	6963      	ldr	r3, [r4, #20]
 8009ed2:	0558      	lsls	r0, r3, #21
 8009ed4:	f53f af56 	bmi.w	8009d84 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009ed8:	f7ff fb28 	bl	800952c <HAL_GetTick>
 8009edc:	eba0 000b 	sub.w	r0, r0, fp
 8009ee0:	4581      	cmp	r9, r0
 8009ee2:	d304      	bcc.n	8009eee <I2C_RequestMemoryWrite+0x1d2>
 8009ee4:	f1b9 0f00 	cmp.w	r9, #0
 8009ee8:	d001      	beq.n	8009eee <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009eea:	6834      	ldr	r4, [r6, #0]
 8009eec:	e7bb      	b.n	8009e66 <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009eee:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009ef0:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009ef2:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009ef4:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009ef8:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009efc:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009efe:	4313      	orrs	r3, r2
 8009f00:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8009f02:	e74d      	b.n	8009da0 <I2C_RequestMemoryWrite+0x84>

08009f04 <I2C_RequestMemoryRead>:
{
 8009f04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009f08:	6804      	ldr	r4, [r0, #0]
{
 8009f0a:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009f0c:	6823      	ldr	r3, [r4, #0]
 8009f0e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8009f12:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009f14:	6823      	ldr	r3, [r4, #0]
{
 8009f16:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009f18:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8009f1c:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8009f20:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009f24:	6023      	str	r3, [r4, #0]
{
 8009f26:	4606      	mov	r6, r0
 8009f28:	468b      	mov	fp, r1
 8009f2a:	4617      	mov	r7, r2
 8009f2c:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009f30:	d13a      	bne.n	8009fa8 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009f32:	6965      	ldr	r5, [r4, #20]
 8009f34:	07eb      	lsls	r3, r5, #31
 8009f36:	d5fc      	bpl.n	8009f32 <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8009f38:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 8009f3c:	6123      	str	r3, [r4, #16]
 8009f3e:	fa5f fb8b 	uxtb.w	fp, fp
 8009f42:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009f46:	d003      	beq.n	8009f50 <I2C_RequestMemoryRead+0x4c>
 8009f48:	e069      	b.n	800a01e <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009f4a:	6965      	ldr	r5, [r4, #20]
 8009f4c:	056a      	lsls	r2, r5, #21
 8009f4e:	d44e      	bmi.n	8009fee <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009f50:	6965      	ldr	r5, [r4, #20]
 8009f52:	07a9      	lsls	r1, r5, #30
 8009f54:	d5f9      	bpl.n	8009f4a <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009f56:	2300      	movs	r3, #0
 8009f58:	9301      	str	r3, [sp, #4]
 8009f5a:	6963      	ldr	r3, [r4, #20]
 8009f5c:	9301      	str	r3, [sp, #4]
 8009f5e:	69a3      	ldr	r3, [r4, #24]
 8009f60:	9301      	str	r3, [sp, #4]
 8009f62:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009f64:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009f68:	f040 80bd 	bne.w	800a0e6 <I2C_RequestMemoryRead+0x1e2>
 8009f6c:	6963      	ldr	r3, [r4, #20]
 8009f6e:	0618      	lsls	r0, r3, #24
 8009f70:	d468      	bmi.n	800a044 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009f72:	6963      	ldr	r3, [r4, #20]
 8009f74:	0559      	lsls	r1, r3, #21
 8009f76:	d5f9      	bpl.n	8009f6c <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009f78:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009f7a:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009f7e:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009f80:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009f82:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009f84:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009f88:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009f8c:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009f8e:	f043 0304 	orr.w	r3, r3, #4
 8009f92:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009f94:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 8009f96:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009f98:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009f9a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009f9e:	d070      	beq.n	800a082 <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 8009fa0:	2001      	movs	r0, #1
}
 8009fa2:	b003      	add	sp, #12
 8009fa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009fa8:	6963      	ldr	r3, [r4, #20]
 8009faa:	07dd      	lsls	r5, r3, #31
 8009fac:	d4c4      	bmi.n	8009f38 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009fae:	f7ff fabd 	bl	800952c <HAL_GetTick>
 8009fb2:	eba0 0009 	sub.w	r0, r0, r9
 8009fb6:	4582      	cmp	sl, r0
 8009fb8:	d304      	bcc.n	8009fc4 <I2C_RequestMemoryRead+0xc0>
 8009fba:	f1ba 0f00 	cmp.w	sl, #0
 8009fbe:	d001      	beq.n	8009fc4 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009fc0:	6834      	ldr	r4, [r6, #0]
 8009fc2:	e7b3      	b.n	8009f2c <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009fc4:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009fc6:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009fc8:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009fca:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009fce:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009fd2:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009fd4:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 8009fd6:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009fda:	f042 0220 	orr.w	r2, r2, #32
 8009fde:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009fe0:	680b      	ldr	r3, [r1, #0]
 8009fe2:	05dc      	lsls	r4, r3, #23
 8009fe4:	d43d      	bmi.n	800a062 <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 8009fe6:	2003      	movs	r0, #3
}
 8009fe8:	b003      	add	sp, #12
 8009fea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009fee:	6823      	ldr	r3, [r4, #0]
 8009ff0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009ff4:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009ff6:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009ff8:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 8009ffc:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009ffe:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a000:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a002:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a006:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a00a:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a00c:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a010:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a014:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a016:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a018:	b003      	add	sp, #12
 800a01a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a01e:	6963      	ldr	r3, [r4, #20]
 800a020:	079b      	lsls	r3, r3, #30
 800a022:	d498      	bmi.n	8009f56 <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a024:	6963      	ldr	r3, [r4, #20]
 800a026:	0558      	lsls	r0, r3, #21
 800a028:	d4e1      	bmi.n	8009fee <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a02a:	f7ff fa7f 	bl	800952c <HAL_GetTick>
 800a02e:	eba0 0009 	sub.w	r0, r0, r9
 800a032:	4582      	cmp	sl, r0
 800a034:	f0c0 808f 	bcc.w	800a156 <I2C_RequestMemoryRead+0x252>
 800a038:	f1ba 0f00 	cmp.w	sl, #0
 800a03c:	f000 808b 	beq.w	800a156 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a040:	6834      	ldr	r4, [r6, #0]
 800a042:	e77e      	b.n	8009f42 <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a044:	f1b8 0f01 	cmp.w	r8, #1
 800a048:	d10f      	bne.n	800a06a <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a04a:	b2ff      	uxtb	r7, r7
 800a04c:	6127      	str	r7, [r4, #16]
 800a04e:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a052:	d16e      	bne.n	800a132 <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a054:	6963      	ldr	r3, [r4, #20]
 800a056:	061b      	lsls	r3, r3, #24
 800a058:	d41a      	bmi.n	800a090 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a05a:	6963      	ldr	r3, [r4, #20]
 800a05c:	055f      	lsls	r7, r3, #21
 800a05e:	d5f9      	bpl.n	800a054 <I2C_RequestMemoryRead+0x150>
 800a060:	e78a      	b.n	8009f78 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a062:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a066:	6433      	str	r3, [r6, #64]	; 0x40
 800a068:	e7bd      	b.n	8009fe6 <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a06a:	0a3b      	lsrs	r3, r7, #8
 800a06c:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a06e:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a072:	d17e      	bne.n	800a172 <I2C_RequestMemoryRead+0x26e>
 800a074:	6963      	ldr	r3, [r4, #20]
 800a076:	061d      	lsls	r5, r3, #24
 800a078:	d4e7      	bmi.n	800a04a <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a07a:	6963      	ldr	r3, [r4, #20]
 800a07c:	0558      	lsls	r0, r3, #21
 800a07e:	d5f9      	bpl.n	800a074 <I2C_RequestMemoryRead+0x170>
 800a080:	e77a      	b.n	8009f78 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a082:	6832      	ldr	r2, [r6, #0]
 800a084:	6813      	ldr	r3, [r2, #0]
 800a086:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800a08a:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a08c:	6013      	str	r3, [r2, #0]
 800a08e:	e7ab      	b.n	8009fe8 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a090:	6823      	ldr	r3, [r4, #0]
 800a092:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a096:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a098:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a09c:	d113      	bne.n	800a0c6 <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a09e:	6963      	ldr	r3, [r4, #20]
 800a0a0:	07d8      	lsls	r0, r3, #31
 800a0a2:	d5fc      	bpl.n	800a09e <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800a0a4:	f04b 0301 	orr.w	r3, fp, #1
 800a0a8:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a0aa:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a0ae:	d003      	beq.n	800a0b8 <I2C_RequestMemoryRead+0x1b4>
 800a0b0:	e02b      	b.n	800a10a <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a0b2:	6963      	ldr	r3, [r4, #20]
 800a0b4:	055b      	lsls	r3, r3, #21
 800a0b6:	d49a      	bmi.n	8009fee <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a0b8:	6963      	ldr	r3, [r4, #20]
 800a0ba:	43db      	mvns	r3, r3
 800a0bc:	f013 0302 	ands.w	r3, r3, #2
 800a0c0:	d1f7      	bne.n	800a0b2 <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800a0c2:	4618      	mov	r0, r3
 800a0c4:	e790      	b.n	8009fe8 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a0c6:	6963      	ldr	r3, [r4, #20]
 800a0c8:	07d9      	lsls	r1, r3, #31
 800a0ca:	d4eb      	bmi.n	800a0a4 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a0cc:	f7ff fa2e 	bl	800952c <HAL_GetTick>
 800a0d0:	eba0 0009 	sub.w	r0, r0, r9
 800a0d4:	4582      	cmp	sl, r0
 800a0d6:	f4ff af75 	bcc.w	8009fc4 <I2C_RequestMemoryRead+0xc0>
 800a0da:	f1ba 0f00 	cmp.w	sl, #0
 800a0de:	f43f af71 	beq.w	8009fc4 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a0e2:	6834      	ldr	r4, [r6, #0]
 800a0e4:	e7d8      	b.n	800a098 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a0e6:	6963      	ldr	r3, [r4, #20]
 800a0e8:	061a      	lsls	r2, r3, #24
 800a0ea:	d4ab      	bmi.n	800a044 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a0ec:	6963      	ldr	r3, [r4, #20]
 800a0ee:	055d      	lsls	r5, r3, #21
 800a0f0:	f53f af42 	bmi.w	8009f78 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a0f4:	f7ff fa1a 	bl	800952c <HAL_GetTick>
 800a0f8:	eba0 0009 	sub.w	r0, r0, r9
 800a0fc:	4582      	cmp	sl, r0
 800a0fe:	d34b      	bcc.n	800a198 <I2C_RequestMemoryRead+0x294>
 800a100:	f1ba 0f00 	cmp.w	sl, #0
 800a104:	d048      	beq.n	800a198 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a106:	6834      	ldr	r4, [r6, #0]
 800a108:	e72c      	b.n	8009f64 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a10a:	6963      	ldr	r3, [r4, #20]
 800a10c:	43db      	mvns	r3, r3
 800a10e:	f013 0302 	ands.w	r3, r3, #2
 800a112:	d0d6      	beq.n	800a0c2 <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a114:	6963      	ldr	r3, [r4, #20]
 800a116:	055a      	lsls	r2, r3, #21
 800a118:	f53f af69 	bmi.w	8009fee <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a11c:	f7ff fa06 	bl	800952c <HAL_GetTick>
 800a120:	eba0 0009 	sub.w	r0, r0, r9
 800a124:	4582      	cmp	sl, r0
 800a126:	d316      	bcc.n	800a156 <I2C_RequestMemoryRead+0x252>
 800a128:	f1ba 0f00 	cmp.w	sl, #0
 800a12c:	d013      	beq.n	800a156 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a12e:	6834      	ldr	r4, [r6, #0]
 800a130:	e7bb      	b.n	800a0aa <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a132:	6963      	ldr	r3, [r4, #20]
 800a134:	061d      	lsls	r5, r3, #24
 800a136:	d4ab      	bmi.n	800a090 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a138:	6963      	ldr	r3, [r4, #20]
 800a13a:	055a      	lsls	r2, r3, #21
 800a13c:	f53f af1c 	bmi.w	8009f78 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a140:	f7ff f9f4 	bl	800952c <HAL_GetTick>
 800a144:	eba0 0009 	sub.w	r0, r0, r9
 800a148:	4582      	cmp	sl, r0
 800a14a:	d325      	bcc.n	800a198 <I2C_RequestMemoryRead+0x294>
 800a14c:	f1ba 0f00 	cmp.w	sl, #0
 800a150:	d022      	beq.n	800a198 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a152:	6834      	ldr	r4, [r6, #0]
 800a154:	e77b      	b.n	800a04e <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a156:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a158:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a15a:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a15c:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a160:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a164:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a166:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a16a:	f043 0320 	orr.w	r3, r3, #32
 800a16e:	6433      	str	r3, [r6, #64]	; 0x40
 800a170:	e716      	b.n	8009fa0 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a172:	6963      	ldr	r3, [r4, #20]
 800a174:	0619      	lsls	r1, r3, #24
 800a176:	f53f af68 	bmi.w	800a04a <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a17a:	6963      	ldr	r3, [r4, #20]
 800a17c:	055b      	lsls	r3, r3, #21
 800a17e:	f53f aefb 	bmi.w	8009f78 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a182:	f7ff f9d3 	bl	800952c <HAL_GetTick>
 800a186:	eba0 0009 	sub.w	r0, r0, r9
 800a18a:	4582      	cmp	sl, r0
 800a18c:	d304      	bcc.n	800a198 <I2C_RequestMemoryRead+0x294>
 800a18e:	f1ba 0f00 	cmp.w	sl, #0
 800a192:	d001      	beq.n	800a198 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a194:	6834      	ldr	r4, [r6, #0]
 800a196:	e76a      	b.n	800a06e <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a198:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a19a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a19c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a19e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a1a2:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a1a6:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a1a8:	4313      	orrs	r3, r2
 800a1aa:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a1ac:	e6f2      	b.n	8009f94 <I2C_RequestMemoryRead+0x90>
 800a1ae:	bf00      	nop

0800a1b0 <HAL_I2C_Init>:
  if (hi2c == NULL)
 800a1b0:	2800      	cmp	r0, #0
 800a1b2:	f000 80b9 	beq.w	800a328 <HAL_I2C_Init+0x178>
{
 800a1b6:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800a1b8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a1bc:	4604      	mov	r4, r0
 800a1be:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a1c2:	2b00      	cmp	r3, #0
 800a1c4:	f000 8098 	beq.w	800a2f8 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800a1c8:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800a1ca:	2224      	movs	r2, #36	; 0x24
 800a1cc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800a1d0:	681a      	ldr	r2, [r3, #0]
 800a1d2:	f022 0201 	bic.w	r2, r2, #1
 800a1d6:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800a1d8:	681a      	ldr	r2, [r3, #0]
 800a1da:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800a1de:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800a1e0:	681a      	ldr	r2, [r3, #0]
 800a1e2:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800a1e6:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800a1e8:	f001 fe70 	bl	800becc <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a1ec:	6865      	ldr	r5, [r4, #4]
 800a1ee:	4b4f      	ldr	r3, [pc, #316]	; (800a32c <HAL_I2C_Init+0x17c>)
 800a1f0:	429d      	cmp	r5, r3
 800a1f2:	d84f      	bhi.n	800a294 <HAL_I2C_Init+0xe4>
 800a1f4:	4b4e      	ldr	r3, [pc, #312]	; (800a330 <HAL_I2C_Init+0x180>)
 800a1f6:	4298      	cmp	r0, r3
 800a1f8:	d97c      	bls.n	800a2f4 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800a1fa:	4b4e      	ldr	r3, [pc, #312]	; (800a334 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a1fc:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800a1fe:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a202:	1e43      	subs	r3, r0, #1
 800a204:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a208:	6822      	ldr	r2, [r4, #0]
 800a20a:	6851      	ldr	r1, [r2, #4]
 800a20c:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a210:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 800a214:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a216:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800a218:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a21c:	f10c 0c01 	add.w	ip, ip, #1
 800a220:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a224:	ea41 010c 	orr.w	r1, r1, ip
 800a228:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a22a:	69d1      	ldr	r1, [r2, #28]
 800a22c:	f640 70fc 	movw	r0, #4092	; 0xffc
 800a230:	3301      	adds	r3, #1
 800a232:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800a236:	4203      	tst	r3, r0
 800a238:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a23c:	d161      	bne.n	800a302 <HAL_I2C_Init+0x152>
 800a23e:	2304      	movs	r3, #4
 800a240:	430b      	orrs	r3, r1
 800a242:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800a244:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800a248:	6811      	ldr	r1, [r2, #0]
 800a24a:	4303      	orrs	r3, r0
 800a24c:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800a250:	430b      	orrs	r3, r1
 800a252:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800a254:	6891      	ldr	r1, [r2, #8]
 800a256:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800a25a:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800a25e:	4303      	orrs	r3, r0
 800a260:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a264:	430b      	orrs	r3, r1
 800a266:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800a268:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800a26c:	68d1      	ldr	r1, [r2, #12]
 800a26e:	4303      	orrs	r3, r0
 800a270:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a274:	430b      	orrs	r3, r1
 800a276:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800a278:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a27a:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 800a27c:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 800a280:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800a282:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a284:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800a286:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800a28a:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800a28c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 800a290:	4618      	mov	r0, r3
}
 800a292:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a294:	4b28      	ldr	r3, [pc, #160]	; (800a338 <HAL_I2C_Init+0x188>)
 800a296:	4298      	cmp	r0, r3
 800a298:	d92c      	bls.n	800a2f4 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a29a:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800a29c:	4b25      	ldr	r3, [pc, #148]	; (800a334 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a29e:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a2a0:	4e26      	ldr	r6, [pc, #152]	; (800a33c <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800a2a2:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a2a6:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a2aa:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 800a2ae:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800a2b0:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a2b4:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800a2b8:	fb01 f303 	mul.w	r3, r1, r3
 800a2bc:	fba6 6303 	umull	r6, r3, r6, r3
 800a2c0:	6a11      	ldr	r1, [r2, #32]
 800a2c2:	099b      	lsrs	r3, r3, #6
 800a2c4:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a2c8:	3301      	adds	r3, #1
 800a2ca:	430b      	orrs	r3, r1
 800a2cc:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a2ce:	69d1      	ldr	r1, [r2, #28]
 800a2d0:	68a3      	ldr	r3, [r4, #8]
 800a2d2:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800a2d6:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a2da:	b9ab      	cbnz	r3, 800a308 <HAL_I2C_Init+0x158>
 800a2dc:	1e43      	subs	r3, r0, #1
 800a2de:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800a2e2:	fbb3 f3f5 	udiv	r3, r3, r5
 800a2e6:	3301      	adds	r3, #1
 800a2e8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a2ec:	b1d3      	cbz	r3, 800a324 <HAL_I2C_Init+0x174>
 800a2ee:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800a2f2:	e7a5      	b.n	800a240 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800a2f4:	2001      	movs	r0, #1
}
 800a2f6:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 800a2f8:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800a2fc:	f7f7 f95a 	bl	80015b4 <HAL_I2C_MspInit>
 800a300:	e762      	b.n	800a1c8 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a302:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a306:	e79b      	b.n	800a240 <HAL_I2C_Init+0x90>
 800a308:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800a30c:	1e43      	subs	r3, r0, #1
 800a30e:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800a312:	fbb3 f3f5 	udiv	r3, r3, r5
 800a316:	3301      	adds	r3, #1
 800a318:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a31c:	b113      	cbz	r3, 800a324 <HAL_I2C_Init+0x174>
 800a31e:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800a322:	e78d      	b.n	800a240 <HAL_I2C_Init+0x90>
 800a324:	2301      	movs	r3, #1
 800a326:	e78b      	b.n	800a240 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800a328:	2001      	movs	r0, #1
}
 800a32a:	4770      	bx	lr
 800a32c:	000186a0 	.word	0x000186a0
 800a330:	001e847f 	.word	0x001e847f
 800a334:	431bde83 	.word	0x431bde83
 800a338:	003d08ff 	.word	0x003d08ff
 800a33c:	10624dd3 	.word	0x10624dd3

0800a340 <HAL_I2C_Mem_Write>:
{
 800a340:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a344:	4604      	mov	r4, r0
 800a346:	b083      	sub	sp, #12
 800a348:	4699      	mov	r9, r3
 800a34a:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 800a34e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800a350:	460f      	mov	r7, r1
 800a352:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800a354:	f7ff f8ea 	bl	800952c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a358:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a35c:	2b20      	cmp	r3, #32
 800a35e:	d004      	beq.n	800a36a <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800a360:	2702      	movs	r7, #2
}
 800a362:	4638      	mov	r0, r7
 800a364:	b003      	add	sp, #12
 800a366:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a36a:	4605      	mov	r5, r0
 800a36c:	e005      	b.n	800a37a <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a36e:	f7ff f8dd 	bl	800952c <HAL_GetTick>
 800a372:	1b40      	subs	r0, r0, r5
 800a374:	2819      	cmp	r0, #25
 800a376:	f200 80a8 	bhi.w	800a4ca <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a37a:	6820      	ldr	r0, [r4, #0]
 800a37c:	6983      	ldr	r3, [r0, #24]
 800a37e:	ea6f 0c03 	mvn.w	ip, r3
 800a382:	f01c 0b02 	ands.w	fp, ip, #2
 800a386:	d0f2      	beq.n	800a36e <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800a388:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a38c:	2b01      	cmp	r3, #1
 800a38e:	d0e7      	beq.n	800a360 <HAL_I2C_Mem_Write+0x20>
 800a390:	2301      	movs	r3, #1
 800a392:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a396:	6803      	ldr	r3, [r0, #0]
 800a398:	07db      	lsls	r3, r3, #31
 800a39a:	d572      	bpl.n	800a482 <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a39c:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a39e:	6807      	ldr	r7, [r0, #0]
 800a3a0:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800a3a4:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800a3a6:	980c      	ldr	r0, [sp, #48]	; 0x30
 800a3a8:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800a3aa:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a3ac:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800a3b0:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a3b4:	2040      	movs	r0, #64	; 0x40
 800a3b6:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a3ba:	2000      	movs	r0, #0
 800a3bc:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a3be:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800a3c2:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800a3c4:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a3c6:	4856      	ldr	r0, [pc, #344]	; (800a520 <HAL_I2C_Mem_Write+0x1e0>)
 800a3c8:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a3ca:	464b      	mov	r3, r9
 800a3cc:	4642      	mov	r2, r8
 800a3ce:	4620      	mov	r0, r4
 800a3d0:	f7ff fca4 	bl	8009d1c <I2C_RequestMemoryWrite>
 800a3d4:	4607      	mov	r7, r0
 800a3d6:	bb00      	cbnz	r0, 800a41a <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800a3d8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800a3da:	2b00      	cmp	r3, #0
 800a3dc:	f000 809e 	beq.w	800a51c <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a3e0:	6823      	ldr	r3, [r4, #0]
 800a3e2:	1c72      	adds	r2, r6, #1
 800a3e4:	d159      	bne.n	800a49a <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a3e6:	695a      	ldr	r2, [r3, #20]
 800a3e8:	0610      	lsls	r0, r2, #24
 800a3ea:	d41b      	bmi.n	800a424 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a3ec:	695a      	ldr	r2, [r3, #20]
 800a3ee:	0551      	lsls	r1, r2, #21
 800a3f0:	d5f9      	bpl.n	800a3e6 <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a3f2:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a3f4:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a3f8:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a3fa:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a3fc:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a3fe:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a402:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a406:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a408:	f043 0304 	orr.w	r3, r3, #4
 800a40c:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a40e:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800a410:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a412:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a414:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a418:	d038      	beq.n	800a48c <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800a41a:	2701      	movs	r7, #1
}
 800a41c:	4638      	mov	r0, r7
 800a41e:	b003      	add	sp, #12
 800a420:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a424:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800a428:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a42c:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800a42e:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a432:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a436:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800a438:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a43a:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a43c:	3a01      	subs	r2, #1
 800a43e:	b292      	uxth	r2, r2
 800a440:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800a442:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800a444:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800a446:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800a448:	0740      	lsls	r0, r0, #29
 800a44a:	d517      	bpl.n	800a47c <HAL_I2C_Mem_Write+0x13c>
 800a44c:	b942      	cbnz	r2, 800a460 <HAL_I2C_Mem_Write+0x120>
 800a44e:	1c72      	adds	r2, r6, #1
 800a450:	d156      	bne.n	800a500 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a452:	695a      	ldr	r2, [r3, #20]
 800a454:	0750      	lsls	r0, r2, #29
 800a456:	d446      	bmi.n	800a4e6 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a458:	695a      	ldr	r2, [r3, #20]
 800a45a:	0551      	lsls	r1, r2, #21
 800a45c:	d5f9      	bpl.n	800a452 <HAL_I2C_Mem_Write+0x112>
 800a45e:	e7c8      	b.n	800a3f2 <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a460:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800a464:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800a466:	f10c 0102 	add.w	r1, ip, #2
 800a46a:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800a46c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800a46e:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800a472:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800a474:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800a476:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800a478:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800a47a:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800a47c:	2a00      	cmp	r2, #0
 800a47e:	d1b0      	bne.n	800a3e2 <HAL_I2C_Mem_Write+0xa2>
 800a480:	e7e5      	b.n	800a44e <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800a482:	6803      	ldr	r3, [r0, #0]
 800a484:	f043 0301 	orr.w	r3, r3, #1
 800a488:	6003      	str	r3, [r0, #0]
 800a48a:	e787      	b.n	800a39c <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a48c:	6822      	ldr	r2, [r4, #0]
 800a48e:	6813      	ldr	r3, [r2, #0]
 800a490:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800a494:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a496:	6013      	str	r3, [r2, #0]
 800a498:	e763      	b.n	800a362 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a49a:	695a      	ldr	r2, [r3, #20]
 800a49c:	0612      	lsls	r2, r2, #24
 800a49e:	d4c1      	bmi.n	800a424 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a4a0:	695a      	ldr	r2, [r3, #20]
 800a4a2:	0551      	lsls	r1, r2, #21
 800a4a4:	d4a5      	bmi.n	800a3f2 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a4a6:	f7ff f841 	bl	800952c <HAL_GetTick>
 800a4aa:	1b40      	subs	r0, r0, r5
 800a4ac:	4286      	cmp	r6, r0
 800a4ae:	d301      	bcc.n	800a4b4 <HAL_I2C_Mem_Write+0x174>
 800a4b0:	2e00      	cmp	r6, #0
 800a4b2:	d195      	bne.n	800a3e0 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a4b4:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a4b6:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a4b8:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a4ba:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a4be:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a4c2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a4c4:	4313      	orrs	r3, r2
 800a4c6:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800a4c8:	e7a1      	b.n	800a40e <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800a4ca:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a4cc:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a4d0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a4d4:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a4d8:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a4da:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a4de:	f043 0320 	orr.w	r3, r3, #32
 800a4e2:	6423      	str	r3, [r4, #64]	; 0x40
 800a4e4:	e73c      	b.n	800a360 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a4e6:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a4e8:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a4ea:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800a4ee:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a4f0:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800a4f2:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800a4f6:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a4fa:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800a4fe:	e730      	b.n	800a362 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a500:	695a      	ldr	r2, [r3, #20]
 800a502:	0752      	lsls	r2, r2, #29
 800a504:	d4ef      	bmi.n	800a4e6 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a506:	695a      	ldr	r2, [r3, #20]
 800a508:	0551      	lsls	r1, r2, #21
 800a50a:	f53f af72 	bmi.w	800a3f2 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a50e:	f7ff f80d 	bl	800952c <HAL_GetTick>
 800a512:	1b40      	subs	r0, r0, r5
 800a514:	4286      	cmp	r6, r0
 800a516:	d3cd      	bcc.n	800a4b4 <HAL_I2C_Mem_Write+0x174>
 800a518:	2e00      	cmp	r6, #0
 800a51a:	d0cb      	beq.n	800a4b4 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a51c:	6823      	ldr	r3, [r4, #0]
 800a51e:	e796      	b.n	800a44e <HAL_I2C_Mem_Write+0x10e>
 800a520:	ffff0000 	.word	0xffff0000

0800a524 <HAL_I2C_Mem_Read>:
{
 800a524:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a528:	4604      	mov	r4, r0
 800a52a:	b087      	sub	sp, #28
 800a52c:	4699      	mov	r9, r3
 800a52e:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800a532:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800a534:	460f      	mov	r7, r1
 800a536:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800a538:	f7fe fff8 	bl	800952c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a53c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a540:	2b20      	cmp	r3, #32
 800a542:	d004      	beq.n	800a54e <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800a544:	2702      	movs	r7, #2
}
 800a546:	4638      	mov	r0, r7
 800a548:	b007      	add	sp, #28
 800a54a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a54e:	4606      	mov	r6, r0
 800a550:	e005      	b.n	800a55e <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a552:	f7fe ffeb 	bl	800952c <HAL_GetTick>
 800a556:	1b80      	subs	r0, r0, r6
 800a558:	2819      	cmp	r0, #25
 800a55a:	f200 80d2 	bhi.w	800a702 <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a55e:	f8d4 c000 	ldr.w	ip, [r4]
 800a562:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800a566:	43c0      	mvns	r0, r0
 800a568:	f010 0b02 	ands.w	fp, r0, #2
 800a56c:	d0f1      	beq.n	800a552 <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800a56e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a572:	2b01      	cmp	r3, #1
 800a574:	d0e6      	beq.n	800a544 <HAL_I2C_Mem_Read+0x20>
 800a576:	2301      	movs	r3, #1
 800a578:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a57c:	f8dc 3000 	ldr.w	r3, [ip]
 800a580:	07d9      	lsls	r1, r3, #31
 800a582:	d537      	bpl.n	800a5f4 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a584:	f8dc 0000 	ldr.w	r0, [ip]
 800a588:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800a58c:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800a590:	9810      	ldr	r0, [sp, #64]	; 0x40
 800a592:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a594:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a596:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a59a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a59e:	2040      	movs	r0, #64	; 0x40
 800a5a0:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a5a4:	2000      	movs	r0, #0
 800a5a6:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a5a8:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800a5ac:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800a5ae:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a5b0:	4893      	ldr	r0, [pc, #588]	; (800a800 <HAL_I2C_Mem_Read+0x2dc>)
 800a5b2:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a5b4:	4639      	mov	r1, r7
 800a5b6:	464b      	mov	r3, r9
 800a5b8:	4642      	mov	r2, r8
 800a5ba:	4620      	mov	r0, r4
 800a5bc:	f7ff fca2 	bl	8009f04 <I2C_RequestMemoryRead>
 800a5c0:	4607      	mov	r7, r0
 800a5c2:	2800      	cmp	r0, #0
 800a5c4:	f040 80ab 	bne.w	800a71e <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800a5c8:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800a5ca:	b9d2      	cbnz	r2, 800a602 <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a5cc:	6823      	ldr	r3, [r4, #0]
 800a5ce:	9002      	str	r0, [sp, #8]
 800a5d0:	695a      	ldr	r2, [r3, #20]
 800a5d2:	9202      	str	r2, [sp, #8]
 800a5d4:	699a      	ldr	r2, [r3, #24]
 800a5d6:	9202      	str	r2, [sp, #8]
 800a5d8:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a5da:	681a      	ldr	r2, [r3, #0]
 800a5dc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a5e0:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a5e2:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800a5e4:	2220      	movs	r2, #32
 800a5e6:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800a5ea:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a5ee:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800a5f2:	e7a8      	b.n	800a546 <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800a5f4:	f8dc 3000 	ldr.w	r3, [ip]
 800a5f8:	f043 0301 	orr.w	r3, r3, #1
 800a5fc:	f8cc 3000 	str.w	r3, [ip]
 800a600:	e7c0      	b.n	800a584 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800a602:	2a01      	cmp	r2, #1
 800a604:	f000 812c 	beq.w	800a860 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800a608:	2a02      	cmp	r2, #2
 800a60a:	f000 80bd 	beq.w	800a788 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a60e:	6823      	ldr	r3, [r4, #0]
 800a610:	9005      	str	r0, [sp, #20]
 800a612:	6959      	ldr	r1, [r3, #20]
 800a614:	9105      	str	r1, [sp, #20]
 800a616:	6999      	ldr	r1, [r3, #24]
 800a618:	9105      	str	r1, [sp, #20]
 800a61a:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800a61c:	2a03      	cmp	r2, #3
 800a61e:	d849      	bhi.n	800a6b4 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800a620:	2a01      	cmp	r2, #1
 800a622:	f000 80eb 	beq.w	800a7fc <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800a626:	2a02      	cmp	r2, #2
 800a628:	f000 8089 	beq.w	800a73e <HAL_I2C_Mem_Read+0x21a>
 800a62c:	1c69      	adds	r1, r5, #1
 800a62e:	f040 80bb 	bne.w	800a7a8 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a632:	695a      	ldr	r2, [r3, #20]
 800a634:	0752      	lsls	r2, r2, #29
 800a636:	d5fc      	bpl.n	800a632 <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a638:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a63a:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a63c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a640:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a642:	691b      	ldr	r3, [r3, #16]
 800a644:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800a646:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a648:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a64a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a64c:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800a64e:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800a650:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a652:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800a654:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a656:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a658:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a65a:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a65c:	6822      	ldr	r2, [r4, #0]
 800a65e:	f040 80af 	bne.w	800a7c0 <HAL_I2C_Mem_Read+0x29c>
 800a662:	6953      	ldr	r3, [r2, #20]
 800a664:	075b      	lsls	r3, r3, #29
 800a666:	d5fc      	bpl.n	800a662 <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a668:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a66a:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a66c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a670:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a672:	6913      	ldr	r3, [r2, #16]
 800a674:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800a676:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a678:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a67a:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a67c:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800a67e:	3b01      	subs	r3, #1
 800a680:	b29b      	uxth	r3, r3
 800a682:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a684:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800a686:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800a688:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800a68c:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a68e:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a692:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800a694:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a696:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a698:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a69a:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a69c:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800a69e:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800a6a0:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800a6a2:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800a6a4:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a6a6:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a6a8:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800a6aa:	2a00      	cmp	r2, #0
 800a6ac:	d099      	beq.n	800a5e2 <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800a6ae:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a6b0:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800a6b2:	d9b5      	bls.n	800a620 <HAL_I2C_Mem_Read+0xfc>
 800a6b4:	b95d      	cbnz	r5, 800a6ce <HAL_I2C_Mem_Read+0x1aa>
 800a6b6:	e0c5      	b.n	800a844 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a6b8:	695a      	ldr	r2, [r3, #20]
 800a6ba:	06d0      	lsls	r0, r2, #27
 800a6bc:	f100 80b2 	bmi.w	800a824 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a6c0:	f7fe ff34 	bl	800952c <HAL_GetTick>
 800a6c4:	1b80      	subs	r0, r0, r6
 800a6c6:	4285      	cmp	r5, r0
 800a6c8:	f0c0 8086 	bcc.w	800a7d8 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a6cc:	6823      	ldr	r3, [r4, #0]
 800a6ce:	695a      	ldr	r2, [r3, #20]
 800a6d0:	0652      	lsls	r2, r2, #25
 800a6d2:	d5f1      	bpl.n	800a6b8 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a6d4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a6d6:	691b      	ldr	r3, [r3, #16]
 800a6d8:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800a6da:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a6dc:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800a6de:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800a6e0:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800a6e2:	3b01      	subs	r3, #1
 800a6e4:	b29b      	uxth	r3, r3
 800a6e6:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a6e8:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800a6ea:	3a01      	subs	r2, #1
 800a6ec:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800a6ee:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a6f2:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800a6f4:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800a6f6:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a6fa:	d5d6      	bpl.n	800a6aa <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a6fc:	6903      	ldr	r3, [r0, #16]
 800a6fe:	704b      	strb	r3, [r1, #1]
 800a700:	e036      	b.n	800a770 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800a702:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a704:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a708:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a70c:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a710:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a712:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a716:	f043 0320 	orr.w	r3, r3, #32
 800a71a:	6423      	str	r3, [r4, #64]	; 0x40
 800a71c:	e712      	b.n	800a544 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800a71e:	2701      	movs	r7, #1
}
 800a720:	4638      	mov	r0, r7
 800a722:	b007      	add	sp, #28
 800a724:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a728:	695a      	ldr	r2, [r3, #20]
 800a72a:	0750      	lsls	r0, r2, #29
 800a72c:	d40c      	bmi.n	800a748 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a72e:	f7fe fefd 	bl	800952c <HAL_GetTick>
 800a732:	1b80      	subs	r0, r0, r6
 800a734:	4285      	cmp	r5, r0
 800a736:	d34f      	bcc.n	800a7d8 <HAL_I2C_Mem_Read+0x2b4>
 800a738:	2d00      	cmp	r5, #0
 800a73a:	d04d      	beq.n	800a7d8 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a73c:	6823      	ldr	r3, [r4, #0]
 800a73e:	1c69      	adds	r1, r5, #1
 800a740:	d1f2      	bne.n	800a728 <HAL_I2C_Mem_Read+0x204>
 800a742:	695a      	ldr	r2, [r3, #20]
 800a744:	0752      	lsls	r2, r2, #29
 800a746:	d5fc      	bpl.n	800a742 <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a748:	681a      	ldr	r2, [r3, #0]
 800a74a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a74e:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a750:	691a      	ldr	r2, [r3, #16]
 800a752:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a754:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800a756:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a758:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800a75a:	3b01      	subs	r3, #1
 800a75c:	b29b      	uxth	r3, r3
 800a75e:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a760:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800a762:	3b01      	subs	r3, #1
 800a764:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a766:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800a768:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a76a:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800a76c:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a76e:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800a770:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a772:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a774:	3301      	adds	r3, #1
 800a776:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800a778:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a77a:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a77c:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800a77e:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800a780:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800a782:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a784:	8563      	strh	r3, [r4, #42]	; 0x2a
 800a786:	e790      	b.n	800a6aa <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a788:	6823      	ldr	r3, [r4, #0]
 800a78a:	6819      	ldr	r1, [r3, #0]
 800a78c:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a790:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a792:	6819      	ldr	r1, [r3, #0]
 800a794:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800a798:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a79a:	9004      	str	r0, [sp, #16]
 800a79c:	6959      	ldr	r1, [r3, #20]
 800a79e:	9104      	str	r1, [sp, #16]
 800a7a0:	6999      	ldr	r1, [r3, #24]
 800a7a2:	9104      	str	r1, [sp, #16]
 800a7a4:	9904      	ldr	r1, [sp, #16]
 800a7a6:	e739      	b.n	800a61c <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a7a8:	695a      	ldr	r2, [r3, #20]
 800a7aa:	0750      	lsls	r0, r2, #29
 800a7ac:	f53f af44 	bmi.w	800a638 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a7b0:	f7fe febc 	bl	800952c <HAL_GetTick>
 800a7b4:	1b80      	subs	r0, r0, r6
 800a7b6:	4285      	cmp	r5, r0
 800a7b8:	d30e      	bcc.n	800a7d8 <HAL_I2C_Mem_Read+0x2b4>
 800a7ba:	b16d      	cbz	r5, 800a7d8 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a7bc:	6823      	ldr	r3, [r4, #0]
 800a7be:	e735      	b.n	800a62c <HAL_I2C_Mem_Read+0x108>
 800a7c0:	6953      	ldr	r3, [r2, #20]
 800a7c2:	0758      	lsls	r0, r3, #29
 800a7c4:	f53f af50 	bmi.w	800a668 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a7c8:	f7fe feb0 	bl	800952c <HAL_GetTick>
 800a7cc:	1b80      	subs	r0, r0, r6
 800a7ce:	4285      	cmp	r5, r0
 800a7d0:	d302      	bcc.n	800a7d8 <HAL_I2C_Mem_Read+0x2b4>
 800a7d2:	2d00      	cmp	r5, #0
 800a7d4:	f47f af41 	bne.w	800a65a <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a7d8:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a7da:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a7dc:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a7de:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a7e2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a7e6:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a7e8:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800a7ec:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a7ee:	f043 0320 	orr.w	r3, r3, #32
}
 800a7f2:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a7f4:	6423      	str	r3, [r4, #64]	; 0x40
}
 800a7f6:	b007      	add	sp, #28
 800a7f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a7fc:	b95d      	cbnz	r5, 800a816 <HAL_I2C_Mem_Read+0x2f2>
 800a7fe:	e02b      	b.n	800a858 <HAL_I2C_Mem_Read+0x334>
 800a800:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a804:	695a      	ldr	r2, [r3, #20]
 800a806:	06d2      	lsls	r2, r2, #27
 800a808:	d40c      	bmi.n	800a824 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a80a:	f7fe fe8f 	bl	800952c <HAL_GetTick>
 800a80e:	1b80      	subs	r0, r0, r6
 800a810:	4285      	cmp	r5, r0
 800a812:	d3e1      	bcc.n	800a7d8 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a814:	6823      	ldr	r3, [r4, #0]
 800a816:	695a      	ldr	r2, [r3, #20]
 800a818:	0651      	lsls	r1, r2, #25
 800a81a:	d5f3      	bpl.n	800a804 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a81c:	691a      	ldr	r2, [r3, #16]
 800a81e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a820:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800a822:	e7a5      	b.n	800a770 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a824:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800a826:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800a82a:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800a82c:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a82e:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a830:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a834:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800a838:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a83a:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a83c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800a840:	2701      	movs	r7, #1
 800a842:	e680      	b.n	800a546 <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a844:	695a      	ldr	r2, [r3, #20]
 800a846:	0652      	lsls	r2, r2, #25
 800a848:	f53f af44 	bmi.w	800a6d4 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a84c:	695a      	ldr	r2, [r3, #20]
 800a84e:	06d1      	lsls	r1, r2, #27
 800a850:	d4e8      	bmi.n	800a824 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a852:	f7fe fe6b 	bl	800952c <HAL_GetTick>
 800a856:	e7bf      	b.n	800a7d8 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a858:	695a      	ldr	r2, [r3, #20]
 800a85a:	0650      	lsls	r0, r2, #25
 800a85c:	d5f6      	bpl.n	800a84c <HAL_I2C_Mem_Read+0x328>
 800a85e:	e7dd      	b.n	800a81c <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a860:	6823      	ldr	r3, [r4, #0]
 800a862:	6819      	ldr	r1, [r3, #0]
 800a864:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a868:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a86a:	9003      	str	r0, [sp, #12]
 800a86c:	6959      	ldr	r1, [r3, #20]
 800a86e:	9103      	str	r1, [sp, #12]
 800a870:	6999      	ldr	r1, [r3, #24]
 800a872:	9103      	str	r1, [sp, #12]
 800a874:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a876:	6819      	ldr	r1, [r3, #0]
 800a878:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800a87c:	6019      	str	r1, [r3, #0]
 800a87e:	e6cd      	b.n	800a61c <HAL_I2C_Mem_Read+0xf8>

0800a880 <HAL_I2C_MasterTxCpltCallback>:
 800a880:	4770      	bx	lr
 800a882:	bf00      	nop

0800a884 <HAL_I2C_MasterRxCpltCallback>:
 800a884:	4770      	bx	lr
 800a886:	bf00      	nop

0800a888 <HAL_I2C_SlaveTxCpltCallback>:
 800a888:	4770      	bx	lr
 800a88a:	bf00      	nop

0800a88c <HAL_I2C_SlaveRxCpltCallback>:
 800a88c:	4770      	bx	lr
 800a88e:	bf00      	nop

0800a890 <HAL_I2C_AddrCallback>:
}
 800a890:	4770      	bx	lr
 800a892:	bf00      	nop

0800a894 <HAL_I2C_ListenCpltCallback>:
 800a894:	4770      	bx	lr
 800a896:	bf00      	nop

0800a898 <HAL_I2C_MemTxCpltCallback>:
 800a898:	4770      	bx	lr
 800a89a:	bf00      	nop

0800a89c <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a89c:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800a8a0:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800a8a2:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800a8a4:	b959      	cbnz	r1, 800a8be <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a8a6:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a8a8:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a8aa:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a8ac:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a8ae:	d00d      	beq.n	800a8cc <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800a8b0:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800a8b4:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800a8b6:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a8b8:	3201      	adds	r2, #1
 800a8ba:	6502      	str	r2, [r0, #80]	; 0x50
 800a8bc:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800a8be:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a8c0:	2901      	cmp	r1, #1
 800a8c2:	d009      	beq.n	800a8d8 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800a8c4:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a8c6:	2902      	cmp	r1, #2
 800a8c8:	d00e      	beq.n	800a8e8 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800a8ca:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a8cc:	b2d2      	uxtb	r2, r2
 800a8ce:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800a8d0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a8d2:	3202      	adds	r2, #2
 800a8d4:	6502      	str	r2, [r0, #80]	; 0x50
 800a8d6:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a8d8:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800a8da:	6801      	ldr	r1, [r0, #0]
 800a8dc:	b2d2      	uxtb	r2, r2
 800a8de:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800a8e0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a8e2:	3201      	adds	r2, #1
 800a8e4:	6502      	str	r2, [r0, #80]	; 0x50
 800a8e6:	4770      	bx	lr
 800a8e8:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800a8ea:	2a22      	cmp	r2, #34	; 0x22
 800a8ec:	d01f      	beq.n	800a92e <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a8ee:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a8f0:	b289      	uxth	r1, r1
 800a8f2:	b9c1      	cbnz	r1, 800a926 <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a8f4:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a8f6:	b289      	uxth	r1, r1
 800a8f8:	2900      	cmp	r1, #0
 800a8fa:	d1e6      	bne.n	800a8ca <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800a8fc:	2a21      	cmp	r2, #33	; 0x21
 800a8fe:	d1e4      	bne.n	800a8ca <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a900:	6802      	ldr	r2, [r0, #0]
{
 800a902:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a904:	6854      	ldr	r4, [r2, #4]
 800a906:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800a90a:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a90c:	6814      	ldr	r4, [r2, #0]
 800a90e:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800a912:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800a914:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800a916:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800a918:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a91c:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800a920:	f7ff ffba 	bl	800a898 <HAL_I2C_MemTxCpltCallback>
}
 800a924:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a926:	2a21      	cmp	r2, #33	; 0x21
 800a928:	d00a      	beq.n	800a940 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a92a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800a92c:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800a92e:	6801      	ldr	r1, [r0, #0]
 800a930:	680a      	ldr	r2, [r1, #0]
 800a932:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a936:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800a938:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a93a:	3201      	adds	r2, #1
 800a93c:	6502      	str	r2, [r0, #80]	; 0x50
 800a93e:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a940:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800a942:	6802      	ldr	r2, [r0, #0]
 800a944:	f811 0b01 	ldrb.w	r0, [r1], #1
 800a948:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800a94a:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a94c:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800a94e:	3a01      	subs	r2, #1
 800a950:	b292      	uxth	r2, r2
 800a952:	855a      	strh	r2, [r3, #42]	; 0x2a
 800a954:	4770      	bx	lr
 800a956:	bf00      	nop

0800a958 <HAL_I2C_MemRxCpltCallback>:
 800a958:	4770      	bx	lr
 800a95a:	bf00      	nop

0800a95c <HAL_I2C_ErrorCallback>:
 800a95c:	4770      	bx	lr
 800a95e:	bf00      	nop

0800a960 <HAL_I2C_AbortCpltCallback>:
 800a960:	4770      	bx	lr
 800a962:	bf00      	nop

0800a964 <I2C_DMAAbort>:
{
 800a964:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a966:	4b3a      	ldr	r3, [pc, #232]	; (800aa50 <I2C_DMAAbort+0xec>)
 800a968:	4a3a      	ldr	r2, [pc, #232]	; (800aa54 <I2C_DMAAbort+0xf0>)
 800a96a:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800a96c:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800a96e:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a970:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800a972:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a974:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800a978:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a97a:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a97c:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a980:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a982:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800a986:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a98a:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a98c:	9301      	str	r3, [sp, #4]
 800a98e:	e005      	b.n	800a99c <I2C_DMAAbort+0x38>
    count--;
 800a990:	9b01      	ldr	r3, [sp, #4]
 800a992:	3b01      	subs	r3, #1
 800a994:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a996:	6813      	ldr	r3, [r2, #0]
 800a998:	059b      	lsls	r3, r3, #22
 800a99a:	d506      	bpl.n	800a9aa <I2C_DMAAbort+0x46>
    if (count == 0U)
 800a99c:	9b01      	ldr	r3, [sp, #4]
 800a99e:	2b00      	cmp	r3, #0
 800a9a0:	d1f6      	bne.n	800a990 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800a9a2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a9a4:	f043 0320 	orr.w	r3, r3, #32
 800a9a8:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800a9aa:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800a9ac:	b34c      	cbz	r4, 800aa02 <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800a9ae:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800a9b0:	2500      	movs	r5, #0
 800a9b2:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800a9b4:	b1f3      	cbz	r3, 800a9f4 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a9b6:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a9b8:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a9ba:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800a9be:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800a9c0:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a9c2:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800a9c4:	2400      	movs	r4, #0
 800a9c6:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800a9c8:	6813      	ldr	r3, [r2, #0]
 800a9ca:	f023 0301 	bic.w	r3, r3, #1
 800a9ce:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a9d0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a9d4:	2b60      	cmp	r3, #96	; 0x60
 800a9d6:	d02a      	beq.n	800aa2e <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a9d8:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800a9dc:	2928      	cmp	r1, #40	; 0x28
 800a9de:	d019      	beq.n	800aa14 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800a9e0:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a9e2:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a9e4:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a9e8:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800a9ec:	f7ff ffb6 	bl	800a95c <HAL_I2C_ErrorCallback>
}
 800a9f0:	b002      	add	sp, #8
 800a9f2:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a9f4:	6815      	ldr	r5, [r2, #0]
 800a9f6:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a9fa:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a9fc:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a9fe:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800aa00:	e7e2      	b.n	800a9c8 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800aa02:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800aa04:	b1f3      	cbz	r3, 800aa44 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa06:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800aa08:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa0a:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800aa0e:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800aa10:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800aa12:	e7d7      	b.n	800a9c4 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800aa14:	6813      	ldr	r3, [r2, #0]
 800aa16:	f043 0301 	orr.w	r3, r3, #1
 800aa1a:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa1c:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800aa1e:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa20:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800aa24:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800aa26:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800aa28:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800aa2c:	e7de      	b.n	800a9ec <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800aa2e:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800aa30:	2220      	movs	r2, #32
 800aa32:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800aa36:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800aa3a:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800aa3c:	f7ff ff90 	bl	800a960 <HAL_I2C_AbortCpltCallback>
}
 800aa40:	b002      	add	sp, #8
 800aa42:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa44:	6814      	ldr	r4, [r2, #0]
 800aa46:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800aa4a:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800aa4c:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800aa4e:	e7bb      	b.n	800a9c8 <I2C_DMAAbort+0x64>
 800aa50:	20000078 	.word	0x20000078
 800aa54:	14f8b589 	.word	0x14f8b589

0800aa58 <I2C_ITError>:
{
 800aa58:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aa5a:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800aa5e:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800aa62:	2b10      	cmp	r3, #16
{
 800aa64:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aa66:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800aa68:	d039      	beq.n	800aade <I2C_ITError+0x86>
 800aa6a:	b2d9      	uxtb	r1, r3
 800aa6c:	2940      	cmp	r1, #64	; 0x40
 800aa6e:	d036      	beq.n	800aade <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800aa70:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800aa74:	2928      	cmp	r1, #40	; 0x28
 800aa76:	d03d      	beq.n	800aaf4 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800aa78:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800aa7a:	6859      	ldr	r1, [r3, #4]
 800aa7c:	0508      	lsls	r0, r1, #20
 800aa7e:	d407      	bmi.n	800aa90 <I2C_ITError+0x38>
 800aa80:	2a60      	cmp	r2, #96	; 0x60
 800aa82:	d005      	beq.n	800aa90 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800aa84:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa86:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800aa88:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa8c:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800aa90:	2200      	movs	r2, #0
 800aa92:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800aa94:	685a      	ldr	r2, [r3, #4]
 800aa96:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800aa9a:	d134      	bne.n	800ab06 <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800aa9c:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800aaa0:	2960      	cmp	r1, #96	; 0x60
 800aaa2:	d075      	beq.n	800ab90 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800aaa4:	695a      	ldr	r2, [r3, #20]
 800aaa6:	0650      	lsls	r0, r2, #25
 800aaa8:	d505      	bpl.n	800aab6 <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aaaa:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aaac:	691b      	ldr	r3, [r3, #16]
 800aaae:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800aab0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800aab2:	3301      	adds	r3, #1
 800aab4:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800aab6:	4620      	mov	r0, r4
 800aab8:	f7ff ff50 	bl	800a95c <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800aabc:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800aabe:	0719      	lsls	r1, r3, #28
 800aac0:	d004      	beq.n	800aacc <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800aac2:	6822      	ldr	r2, [r4, #0]
 800aac4:	6853      	ldr	r3, [r2, #4]
 800aac6:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800aaca:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800aacc:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800aad0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800aad2:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800aad4:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800aad6:	d501      	bpl.n	800aadc <I2C_ITError+0x84>
 800aad8:	2b28      	cmp	r3, #40	; 0x28
 800aada:	d02f      	beq.n	800ab3c <I2C_ITError+0xe4>
}
 800aadc:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800aade:	2a22      	cmp	r2, #34	; 0x22
 800aae0:	d1c6      	bne.n	800aa70 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800aae2:	6823      	ldr	r3, [r4, #0]
 800aae4:	681a      	ldr	r2, [r3, #0]
 800aae6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800aaea:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800aaec:	685a      	ldr	r2, [r3, #4]
 800aaee:	0512      	lsls	r2, r2, #20
 800aaf0:	d5c8      	bpl.n	800aa84 <I2C_ITError+0x2c>
 800aaf2:	e7cd      	b.n	800aa90 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800aaf4:	2300      	movs	r3, #0
 800aaf6:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800aaf8:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800aafa:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800aafe:	685a      	ldr	r2, [r3, #4]
 800ab00:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800ab04:	d0ca      	beq.n	800aa9c <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800ab06:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800ab08:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800ab0a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800ab0e:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800ab10:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800ab14:	2b01      	cmp	r3, #1
 800ab16:	d01e      	beq.n	800ab56 <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800ab18:	4b28      	ldr	r3, [pc, #160]	; (800abbc <I2C_ITError+0x164>)
 800ab1a:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800ab1c:	f7fe fd90 	bl	8009640 <HAL_DMA_Abort_IT>
 800ab20:	2800      	cmp	r0, #0
 800ab22:	d0cb      	beq.n	800aabc <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800ab24:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800ab26:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800ab28:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800ab2a:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800ab2c:	f023 0301 	bic.w	r3, r3, #1
 800ab30:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800ab32:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800ab36:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800ab38:	4798      	blx	r3
 800ab3a:	e7bf      	b.n	800aabc <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800ab3c:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800ab3e:	4920      	ldr	r1, [pc, #128]	; (800abc0 <I2C_ITError+0x168>)
 800ab40:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800ab42:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800ab44:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800ab46:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800ab48:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800ab4c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800ab50:	f7ff fea0 	bl	800a894 <HAL_I2C_ListenCpltCallback>
}
 800ab54:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800ab56:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800ab58:	4b18      	ldr	r3, [pc, #96]	; (800abbc <I2C_ITError+0x164>)
 800ab5a:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800ab5c:	f7fe fd70 	bl	8009640 <HAL_DMA_Abort_IT>
 800ab60:	2800      	cmp	r0, #0
 800ab62:	d0ab      	beq.n	800aabc <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800ab64:	6823      	ldr	r3, [r4, #0]
 800ab66:	695a      	ldr	r2, [r3, #20]
 800ab68:	0651      	lsls	r1, r2, #25
 800ab6a:	d506      	bpl.n	800ab7a <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab6c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ab6e:	691b      	ldr	r3, [r3, #16]
 800ab70:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800ab72:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800ab74:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800ab76:	3201      	adds	r2, #1
 800ab78:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800ab7a:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800ab7c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800ab7e:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800ab82:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800ab84:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800ab86:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800ab8a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800ab8c:	4798      	blx	r3
 800ab8e:	e795      	b.n	800aabc <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800ab90:	2120      	movs	r1, #32
 800ab92:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800ab96:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800ab98:	695a      	ldr	r2, [r3, #20]
 800ab9a:	0652      	lsls	r2, r2, #25
 800ab9c:	d506      	bpl.n	800abac <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab9e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aba0:	691b      	ldr	r3, [r3, #16]
 800aba2:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800aba4:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800aba6:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800aba8:	3201      	adds	r2, #1
 800abaa:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800abac:	681a      	ldr	r2, [r3, #0]
 800abae:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800abb2:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800abb4:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800abb6:	f7ff fed3 	bl	800a960 <HAL_I2C_AbortCpltCallback>
 800abba:	e77f      	b.n	800aabc <I2C_ITError+0x64>
 800abbc:	0800a965 	.word	0x0800a965
 800abc0:	ffff0000 	.word	0xffff0000

0800abc4 <HAL_I2C_EV_IRQHandler>:
{
 800abc4:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800abc6:	6803      	ldr	r3, [r0, #0]
{
 800abc8:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800abca:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800abcc:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800abce:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800abd2:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800abd6:	2910      	cmp	r1, #16
{
 800abd8:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800abda:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800abdc:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800abe0:	d022      	beq.n	800ac28 <HAL_I2C_EV_IRQHandler+0x64>
 800abe2:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800abe6:	d01f      	beq.n	800ac28 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800abe8:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800abea:	2900      	cmp	r1, #0
 800abec:	f000 8094 	beq.w	800ad18 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800abf0:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800abf2:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800abf4:	f011 0602 	ands.w	r6, r1, #2
 800abf8:	d059      	beq.n	800acae <HAL_I2C_EV_IRQHandler+0xea>
 800abfa:	0586      	lsls	r6, r0, #22
 800abfc:	d559      	bpl.n	800acb2 <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800abfe:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ac00:	b102      	cbz	r2, 800ac04 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800ac02:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800ac04:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800ac08:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800ac0c:	2a28      	cmp	r2, #40	; 0x28
 800ac0e:	f000 821e 	beq.w	800b04e <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ac12:	2200      	movs	r2, #0
 800ac14:	920c      	str	r2, [sp, #48]	; 0x30
 800ac16:	6959      	ldr	r1, [r3, #20]
 800ac18:	910c      	str	r1, [sp, #48]	; 0x30
 800ac1a:	699b      	ldr	r3, [r3, #24]
 800ac1c:	930c      	str	r3, [sp, #48]	; 0x30
 800ac1e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800ac20:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800ac24:	b00e      	add	sp, #56	; 0x38
 800ac26:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800ac28:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800ac2a:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800ac2c:	f011 0f01 	tst.w	r1, #1
 800ac30:	d11a      	bne.n	800ac68 <HAL_I2C_EV_IRQHandler+0xa4>
 800ac32:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800ac36:	d0f5      	beq.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
 800ac38:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800ac3c:	d0f2      	beq.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ac3e:	070d      	lsls	r5, r1, #28
 800ac40:	d56d      	bpl.n	800ad1e <HAL_I2C_EV_IRQHandler+0x15a>
 800ac42:	0585      	lsls	r5, r0, #22
 800ac44:	f140 8083 	bpl.w	800ad4e <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800ac48:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800ac4a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800ac4c:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800ac4e:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800ac50:	2900      	cmp	r1, #0
 800ac52:	f000 81e3 	beq.w	800b01c <HAL_I2C_EV_IRQHandler+0x458>
 800ac56:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800ac58:	2a00      	cmp	r2, #0
 800ac5a:	f000 81df 	beq.w	800b01c <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800ac5e:	685a      	ldr	r2, [r3, #4]
 800ac60:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800ac64:	605a      	str	r2, [r3, #4]
 800ac66:	e7dd      	b.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ac68:	0585      	lsls	r5, r0, #22
 800ac6a:	d56e      	bpl.n	800ad4a <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800ac6c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ac6e:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800ac72:	f000 81e9 	beq.w	800b048 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800ac76:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ac78:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800ac7c:	bf04      	itt	eq
 800ac7e:	2208      	moveq	r2, #8
 800ac80:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ac82:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800ac86:	2a40      	cmp	r2, #64	; 0x40
 800ac88:	f000 81d7 	beq.w	800b03a <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800ac8c:	6922      	ldr	r2, [r4, #16]
 800ac8e:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800ac92:	f000 81b2 	beq.w	800affa <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800ac96:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800ac98:	2a00      	cmp	r2, #0
 800ac9a:	f040 81ef 	bne.w	800b07c <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800ac9e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800aca0:	11d2      	asrs	r2, r2, #7
 800aca2:	f002 0206 	and.w	r2, r2, #6
 800aca6:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800acaa:	611a      	str	r2, [r3, #16]
 800acac:	e7ba      	b.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800acae:	06cd      	lsls	r5, r1, #27
 800acb0:	d47c      	bmi.n	800adac <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800acb2:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800acb6:	2a21      	cmp	r2, #33	; 0x21
 800acb8:	f000 80f5 	beq.w	800aea6 <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800acbc:	064e      	lsls	r6, r1, #25
 800acbe:	f140 8132 	bpl.w	800af26 <HAL_I2C_EV_IRQHandler+0x362>
 800acc2:	0545      	lsls	r5, r0, #21
 800acc4:	f140 812f 	bpl.w	800af26 <HAL_I2C_EV_IRQHandler+0x362>
 800acc8:	0749      	lsls	r1, r1, #29
 800acca:	f100 812f 	bmi.w	800af2c <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800acce:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800acd2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800acd4:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800acd6:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800acd8:	2a00      	cmp	r2, #0
 800acda:	d0a3      	beq.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800acdc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800acde:	691b      	ldr	r3, [r3, #16]
 800ace0:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800ace2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800ace4:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800ace6:	3b01      	subs	r3, #1
 800ace8:	b29b      	uxth	r3, r3
 800acea:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800acec:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800acee:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800acf0:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800acf2:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800acf4:	2b00      	cmp	r3, #0
 800acf6:	d195      	bne.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
 800acf8:	292a      	cmp	r1, #42	; 0x2a
 800acfa:	d193      	bne.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800acfc:	6822      	ldr	r2, [r4, #0]
 800acfe:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800ad00:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800ad02:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ad04:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800ad08:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800ad0a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800ad0c:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800ad0e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800ad12:	f7ff fdbb 	bl	800a88c <HAL_I2C_SlaveRxCpltCallback>
 800ad16:	e785      	b.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800ad18:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800ad1a:	6959      	ldr	r1, [r3, #20]
 800ad1c:	e76a      	b.n	800abf4 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ad1e:	078d      	lsls	r5, r1, #30
 800ad20:	d515      	bpl.n	800ad4e <HAL_I2C_EV_IRQHandler+0x18a>
 800ad22:	0585      	lsls	r5, r0, #22
 800ad24:	d513      	bpl.n	800ad4e <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800ad26:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800ad2a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800ad2c:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800ad2e:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800ad32:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800ad34:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800ad36:	f000 81b3 	beq.w	800b0a0 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ad3a:	2200      	movs	r2, #0
 800ad3c:	920a      	str	r2, [sp, #40]	; 0x28
 800ad3e:	695a      	ldr	r2, [r3, #20]
 800ad40:	920a      	str	r2, [sp, #40]	; 0x28
 800ad42:	699b      	ldr	r3, [r3, #24]
 800ad44:	930a      	str	r3, [sp, #40]	; 0x28
 800ad46:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ad48:	e76c      	b.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ad4a:	070d      	lsls	r5, r1, #28
 800ad4c:	d5e7      	bpl.n	800ad1e <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800ad4e:	0776      	lsls	r6, r6, #29
 800ad50:	f140 80f5 	bpl.w	800af3e <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800ad54:	685d      	ldr	r5, [r3, #4]
 800ad56:	052d      	lsls	r5, r5, #20
 800ad58:	f53f af64 	bmi.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800ad5c:	060e      	lsls	r6, r1, #24
 800ad5e:	f140 8115 	bpl.w	800af8c <HAL_I2C_EV_IRQHandler+0x3c8>
 800ad62:	0545      	lsls	r5, r0, #21
 800ad64:	f140 8112 	bpl.w	800af8c <HAL_I2C_EV_IRQHandler+0x3c8>
 800ad68:	074e      	lsls	r6, r1, #29
 800ad6a:	f100 8112 	bmi.w	800af92 <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ad6e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ad72:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800ad74:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800ad78:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ad7a:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800ad7c:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ad7e:	2800      	cmp	r0, #0
 800ad80:	f040 8235 	bne.w	800b1ee <HAL_I2C_EV_IRQHandler+0x62a>
 800ad84:	2a21      	cmp	r2, #33	; 0x21
 800ad86:	f000 8347 	beq.w	800b418 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800ad8a:	2940      	cmp	r1, #64	; 0x40
 800ad8c:	f47f af4a 	bne.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800ad90:	2a22      	cmp	r2, #34	; 0x22
 800ad92:	f47f af47 	bne.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800ad96:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ad98:	b292      	uxth	r2, r2
 800ad9a:	2a00      	cmp	r2, #0
 800ad9c:	f000 8268 	beq.w	800b270 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ada0:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800ada4:	2a40      	cmp	r2, #64	; 0x40
 800ada6:	f040 80b4 	bne.w	800af12 <HAL_I2C_EV_IRQHandler+0x34e>
 800adaa:	e0fc      	b.n	800afa6 <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800adac:	0585      	lsls	r5, r0, #22
 800adae:	d580      	bpl.n	800acb2 <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800adb0:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800adb4:	685a      	ldr	r2, [r3, #4]
 800adb6:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800adba:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800adbc:	960d      	str	r6, [sp, #52]	; 0x34
 800adbe:	695a      	ldr	r2, [r3, #20]
 800adc0:	920d      	str	r2, [sp, #52]	; 0x34
 800adc2:	681a      	ldr	r2, [r3, #0]
 800adc4:	f042 0201 	orr.w	r2, r2, #1
 800adc8:	601a      	str	r2, [r3, #0]
 800adca:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800adcc:	681a      	ldr	r2, [r3, #0]
 800adce:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800add2:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800add4:	685a      	ldr	r2, [r3, #4]
 800add6:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800add8:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800adda:	d521      	bpl.n	800ae20 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800addc:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800ade0:	2a22      	cmp	r2, #34	; 0x22
 800ade2:	f000 817a 	beq.w	800b0da <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800ade6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800ade8:	6802      	ldr	r2, [r0, #0]
 800adea:	6852      	ldr	r2, [r2, #4]
 800adec:	b292      	uxth	r2, r2
 800adee:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800adf0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800adf2:	b292      	uxth	r2, r2
 800adf4:	b11a      	cbz	r2, 800adfe <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800adf6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800adf8:	f042 0204 	orr.w	r2, r2, #4
 800adfc:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800adfe:	685a      	ldr	r2, [r3, #4]
 800ae00:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800ae04:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800ae06:	f7fe fc2d 	bl	8009664 <HAL_DMA_GetState>
 800ae0a:	2801      	cmp	r0, #1
 800ae0c:	d008      	beq.n	800ae20 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800ae0e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800ae10:	4b99      	ldr	r3, [pc, #612]	; (800b078 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800ae12:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800ae14:	f7fe fc14 	bl	8009640 <HAL_DMA_Abort_IT>
 800ae18:	b110      	cbz	r0, 800ae20 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800ae1a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800ae1c:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800ae1e:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800ae20:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800ae22:	b29b      	uxth	r3, r3
 800ae24:	b313      	cbz	r3, 800ae6c <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ae26:	6823      	ldr	r3, [r4, #0]
 800ae28:	695a      	ldr	r2, [r3, #20]
 800ae2a:	0752      	lsls	r2, r2, #29
 800ae2c:	d50a      	bpl.n	800ae44 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae2e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ae30:	691b      	ldr	r3, [r3, #16]
 800ae32:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800ae34:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800ae36:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800ae38:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800ae3a:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800ae3c:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800ae3e:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800ae40:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800ae42:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800ae44:	695a      	ldr	r2, [r3, #20]
 800ae46:	0656      	lsls	r6, r2, #25
 800ae48:	d509      	bpl.n	800ae5e <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae4a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ae4c:	691b      	ldr	r3, [r3, #16]
 800ae4e:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800ae50:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800ae52:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800ae54:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800ae56:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800ae58:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800ae5a:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800ae5c:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800ae5e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800ae60:	b29b      	uxth	r3, r3
 800ae62:	b11b      	cbz	r3, 800ae6c <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800ae64:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ae66:	f043 0304 	orr.w	r3, r3, #4
 800ae6a:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800ae6c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ae6e:	2b00      	cmp	r3, #0
 800ae70:	f040 80dd 	bne.w	800b02e <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800ae74:	2d2a      	cmp	r5, #42	; 0x2a
 800ae76:	f000 8151 	beq.w	800b11c <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800ae7a:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800ae7e:	2b28      	cmp	r3, #40	; 0x28
 800ae80:	f000 8154 	beq.w	800b12c <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800ae84:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ae86:	2b22      	cmp	r3, #34	; 0x22
 800ae88:	d002      	beq.n	800ae90 <HAL_I2C_EV_IRQHandler+0x2cc>
 800ae8a:	2d22      	cmp	r5, #34	; 0x22
 800ae8c:	f47f aeca 	bne.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800ae90:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800ae92:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800ae94:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800ae96:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800ae98:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800ae9c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800aea0:	f7ff fcf4 	bl	800a88c <HAL_I2C_SlaveRxCpltCallback>
 800aea4:	e6be      	b.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800aea6:	060d      	lsls	r5, r1, #24
 800aea8:	d528      	bpl.n	800aefc <HAL_I2C_EV_IRQHandler+0x338>
 800aeaa:	0546      	lsls	r6, r0, #21
 800aeac:	d526      	bpl.n	800aefc <HAL_I2C_EV_IRQHandler+0x338>
 800aeae:	074d      	lsls	r5, r1, #29
 800aeb0:	d427      	bmi.n	800af02 <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aeb2:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800aeb6:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800aeb8:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aeba:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800aebc:	2900      	cmp	r1, #0
 800aebe:	f43f aeb1 	beq.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800aec2:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800aec4:	f811 5b01 	ldrb.w	r5, [r1], #1
 800aec8:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800aeca:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800aecc:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800aece:	3901      	subs	r1, #1
 800aed0:	b289      	uxth	r1, r1
 800aed2:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800aed4:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800aed6:	b289      	uxth	r1, r1
 800aed8:	2900      	cmp	r1, #0
 800aeda:	f47f aea3 	bne.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
 800aede:	2829      	cmp	r0, #41	; 0x29
 800aee0:	f47f aea0 	bne.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800aee4:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800aee6:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800aee8:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800aeec:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800aeee:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800aef0:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800aef2:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800aef6:	f7ff fcc7 	bl	800a888 <HAL_I2C_SlaveTxCpltCallback>
 800aefa:	e693      	b.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800aefc:	0749      	lsls	r1, r1, #29
 800aefe:	f57f ae91 	bpl.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
 800af02:	0582      	lsls	r2, r0, #22
 800af04:	f57f ae8e 	bpl.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800af08:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800af0a:	b292      	uxth	r2, r2
 800af0c:	2a00      	cmp	r2, #0
 800af0e:	f43f ae89 	beq.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800af12:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800af14:	f812 1b01 	ldrb.w	r1, [r2], #1
 800af18:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800af1a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800af1c:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800af1e:	3b01      	subs	r3, #1
 800af20:	b29b      	uxth	r3, r3
 800af22:	8563      	strh	r3, [r4, #42]	; 0x2a
 800af24:	e67e      	b.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800af26:	074a      	lsls	r2, r1, #29
 800af28:	f57f ae7c 	bpl.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
 800af2c:	0586      	lsls	r6, r0, #22
 800af2e:	f57f ae79 	bpl.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800af32:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800af34:	b292      	uxth	r2, r2
 800af36:	2a00      	cmp	r2, #0
 800af38:	f43f ae74 	beq.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
 800af3c:	e01b      	b.n	800af76 <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800af3e:	685a      	ldr	r2, [r3, #4]
 800af40:	0512      	lsls	r2, r2, #20
 800af42:	f53f ae6f 	bmi.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800af46:	064e      	lsls	r6, r1, #25
 800af48:	d433      	bmi.n	800afb2 <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800af4a:	0749      	lsls	r1, r1, #29
 800af4c:	f57f ae6a 	bpl.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
 800af50:	0582      	lsls	r2, r0, #22
 800af52:	f57f ae67 	bpl.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800af56:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800af58:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800af5a:	b292      	uxth	r2, r2
 800af5c:	2a04      	cmp	r2, #4
 800af5e:	f000 8113 	beq.w	800b188 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800af62:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800af64:	b292      	uxth	r2, r2
 800af66:	2a03      	cmp	r2, #3
 800af68:	f000 8153 	beq.w	800b212 <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800af6c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800af6e:	b292      	uxth	r2, r2
 800af70:	2a02      	cmp	r2, #2
 800af72:	f000 8182 	beq.w	800b27a <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af76:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800af78:	691b      	ldr	r3, [r3, #16]
 800af7a:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800af7c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800af7e:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800af80:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800af82:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800af84:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800af86:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800af88:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800af8a:	e64b      	b.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800af8c:	074d      	lsls	r5, r1, #29
 800af8e:	f57f ae49 	bpl.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
 800af92:	0581      	lsls	r1, r0, #22
 800af94:	f57f ae46 	bpl.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800af98:	2a21      	cmp	r2, #33	; 0x21
 800af9a:	f000 80fd 	beq.w	800b198 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800af9e:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800afa2:	f47f ae3f 	bne.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800afa6:	4620      	mov	r0, r4
}
 800afa8:	b00e      	add	sp, #56	; 0x38
 800afaa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800afae:	f7ff bc75 	b.w	800a89c <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800afb2:	0545      	lsls	r5, r0, #21
 800afb4:	d5c9      	bpl.n	800af4a <HAL_I2C_EV_IRQHandler+0x386>
 800afb6:	f011 0104 	ands.w	r1, r1, #4
 800afba:	d1c9      	bne.n	800af50 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800afbc:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800afc0:	2a22      	cmp	r2, #34	; 0x22
 800afc2:	f47f ae2f 	bne.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800afc6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800afc8:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800afca:	2a03      	cmp	r2, #3
 800afcc:	f240 81ec 	bls.w	800b3a8 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800afd0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800afd2:	691b      	ldr	r3, [r3, #16]
 800afd4:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800afd6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800afd8:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800afda:	3b01      	subs	r3, #1
 800afdc:	b29b      	uxth	r3, r3
 800afde:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800afe0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800afe2:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800afe4:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800afe6:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800afe8:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800afea:	f47f ae1b 	bne.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800afee:	6822      	ldr	r2, [r4, #0]
 800aff0:	6853      	ldr	r3, [r2, #4]
 800aff2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800aff6:	6053      	str	r3, [r2, #4]
 800aff8:	e614      	b.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800affa:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800affe:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b000:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b002:	bf16      	itet	ne
 800b004:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b008:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b00c:	b2d2      	uxtbne	r2, r2
 800b00e:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b010:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800b012:	b11a      	cbz	r2, 800b01c <HAL_I2C_EV_IRQHandler+0x458>
 800b014:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b016:	2a00      	cmp	r2, #0
 800b018:	f47f ae21 	bne.w	800ac5e <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800b01c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b01e:	2a00      	cmp	r2, #0
 800b020:	f43f ae00 	beq.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
 800b024:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b026:	2a00      	cmp	r2, #0
 800b028:	f47f ae19 	bne.w	800ac5e <HAL_I2C_EV_IRQHandler+0x9a>
 800b02c:	e5fa      	b.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800b02e:	4620      	mov	r0, r4
}
 800b030:	b00e      	add	sp, #56	; 0x38
 800b032:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800b036:	f7ff bd0f 	b.w	800aa58 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800b03a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b03c:	bb52      	cbnz	r2, 800b094 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b03e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b040:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800b044:	611a      	str	r2, [r3, #16]
 800b046:	e5ed      	b.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800b048:	2201      	movs	r2, #1
 800b04a:	62e2      	str	r2, [r4, #44]	; 0x2c
 800b04c:	e619      	b.n	800ac82 <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800b04e:	685a      	ldr	r2, [r3, #4]
 800b050:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b054:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800b056:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800b058:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800b05c:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800b060:	bf54      	ite	pl
 800b062:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800b064:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800b066:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800b06a:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800b06e:	4620      	mov	r0, r4
 800b070:	f7ff fc0e 	bl	800a890 <HAL_I2C_AddrCallback>
 800b074:	e5d6      	b.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
 800b076:	bf00      	nop
 800b078:	0800a965 	.word	0x0800a965
      else if (hi2c->EventCount == 1U)
 800b07c:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b07e:	2a01      	cmp	r2, #1
 800b080:	f47f add0 	bne.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800b084:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b086:	11d2      	asrs	r2, r2, #7
 800b088:	f002 0206 	and.w	r2, r2, #6
 800b08c:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800b090:	611a      	str	r2, [r3, #16]
 800b092:	e5c7      	b.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b094:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b096:	f042 0201 	orr.w	r2, r2, #1
 800b09a:	b2d2      	uxtb	r2, r2
 800b09c:	611a      	str	r2, [r3, #16]
 800b09e:	e5c1      	b.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800b0a0:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800b0a2:	b911      	cbnz	r1, 800b0aa <HAL_I2C_EV_IRQHandler+0x4e6>
 800b0a4:	2a40      	cmp	r2, #64	; 0x40
 800b0a6:	f000 809b 	beq.w	800b1e0 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800b0aa:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b0ac:	b922      	cbnz	r2, 800b0b8 <HAL_I2C_EV_IRQHandler+0x4f4>
 800b0ae:	6921      	ldr	r1, [r4, #16]
 800b0b0:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800b0b4:	f000 809f 	beq.w	800b1f6 <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800b0b8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b0ba:	b292      	uxth	r2, r2
 800b0bc:	2a00      	cmp	r2, #0
 800b0be:	d142      	bne.n	800b146 <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b0c0:	9203      	str	r2, [sp, #12]
 800b0c2:	695a      	ldr	r2, [r3, #20]
 800b0c4:	9203      	str	r2, [sp, #12]
 800b0c6:	699a      	ldr	r2, [r3, #24]
 800b0c8:	9203      	str	r2, [sp, #12]
 800b0ca:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b0cc:	681a      	ldr	r2, [r3, #0]
 800b0ce:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b0d2:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800b0d4:	2300      	movs	r3, #0
 800b0d6:	6523      	str	r3, [r4, #80]	; 0x50
 800b0d8:	e5a4      	b.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800b0da:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b0dc:	6802      	ldr	r2, [r0, #0]
 800b0de:	6852      	ldr	r2, [r2, #4]
 800b0e0:	b292      	uxth	r2, r2
 800b0e2:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b0e4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b0e6:	b292      	uxth	r2, r2
 800b0e8:	b11a      	cbz	r2, 800b0f2 <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b0ea:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b0ec:	f042 0204 	orr.w	r2, r2, #4
 800b0f0:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b0f2:	685a      	ldr	r2, [r3, #4]
 800b0f4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b0f8:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800b0fa:	f7fe fab3 	bl	8009664 <HAL_DMA_GetState>
 800b0fe:	2801      	cmp	r0, #1
 800b100:	f43f ae8e 	beq.w	800ae20 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800b104:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b106:	4b98      	ldr	r3, [pc, #608]	; (800b368 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800b108:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800b10a:	f7fe fa99 	bl	8009640 <HAL_DMA_Abort_IT>
 800b10e:	2800      	cmp	r0, #0
 800b110:	f43f ae86 	beq.w	800ae20 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b114:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b116:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b118:	4798      	blx	r3
 800b11a:	e681      	b.n	800ae20 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b11c:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800b11e:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b120:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b122:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b126:	f7ff fbb1 	bl	800a88c <HAL_I2C_SlaveRxCpltCallback>
 800b12a:	e6a6      	b.n	800ae7a <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800b12c:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b12e:	498f      	ldr	r1, [pc, #572]	; (800b36c <HAL_I2C_EV_IRQHandler+0x7a8>)
 800b130:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800b132:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800b134:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800b136:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b138:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b13c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800b140:	f7ff fba8 	bl	800a894 <HAL_I2C_ListenCpltCallback>
 800b144:	e56e      	b.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800b146:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b148:	b292      	uxth	r2, r2
 800b14a:	2a01      	cmp	r2, #1
 800b14c:	d070      	beq.n	800b230 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800b14e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b150:	b292      	uxth	r2, r2
 800b152:	2a02      	cmp	r2, #2
 800b154:	f000 80d6 	beq.w	800b304 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b158:	681a      	ldr	r2, [r3, #0]
 800b15a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b15e:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b160:	685a      	ldr	r2, [r3, #4]
 800b162:	0511      	lsls	r1, r2, #20
 800b164:	d508      	bpl.n	800b178 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b166:	2820      	cmp	r0, #32
 800b168:	f200 80f8 	bhi.w	800b35c <HAL_I2C_EV_IRQHandler+0x798>
 800b16c:	2807      	cmp	r0, #7
 800b16e:	f200 80ea 	bhi.w	800b346 <HAL_I2C_EV_IRQHandler+0x782>
 800b172:	2801      	cmp	r0, #1
 800b174:	f000 80ed 	beq.w	800b352 <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b178:	2200      	movs	r2, #0
 800b17a:	9209      	str	r2, [sp, #36]	; 0x24
 800b17c:	695a      	ldr	r2, [r3, #20]
 800b17e:	9209      	str	r2, [sp, #36]	; 0x24
 800b180:	699b      	ldr	r3, [r3, #24]
 800b182:	9309      	str	r3, [sp, #36]	; 0x24
 800b184:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b186:	e7a5      	b.n	800b0d4 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b188:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b18a:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b18c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b190:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b192:	691b      	ldr	r3, [r3, #16]
 800b194:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800b196:	e6f1      	b.n	800af7c <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b198:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b19a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b19e:	2a21      	cmp	r2, #33	; 0x21
 800b1a0:	f47f ad40 	bne.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800b1a4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b1a6:	b292      	uxth	r2, r2
 800b1a8:	2a00      	cmp	r2, #0
 800b1aa:	f47f aeb2 	bne.w	800af12 <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800b1ae:	2908      	cmp	r1, #8
 800b1b0:	f000 80e2 	beq.w	800b378 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b1b4:	2920      	cmp	r1, #32
 800b1b6:	f000 80df 	beq.w	800b378 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b1ba:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800b1be:	f000 80db 	beq.w	800b378 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b1c2:	6859      	ldr	r1, [r3, #4]
 800b1c4:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b1c8:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b1ca:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800b1cc:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b1ce:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b1d0:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b1d4:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b1d6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b1da:	f7ff fb51 	bl	800a880 <HAL_I2C_MasterTxCpltCallback>
 800b1de:	e521      	b.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b1e0:	9101      	str	r1, [sp, #4]
 800b1e2:	695a      	ldr	r2, [r3, #20]
 800b1e4:	9201      	str	r2, [sp, #4]
 800b1e6:	699b      	ldr	r3, [r3, #24]
 800b1e8:	9301      	str	r3, [sp, #4]
 800b1ea:	9b01      	ldr	r3, [sp, #4]
 800b1ec:	e51a      	b.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b1ee:	2a21      	cmp	r2, #33	; 0x21
 800b1f0:	f43f add1 	beq.w	800ad96 <HAL_I2C_EV_IRQHandler+0x1d2>
 800b1f4:	e5c9      	b.n	800ad8a <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b1f6:	9202      	str	r2, [sp, #8]
 800b1f8:	695a      	ldr	r2, [r3, #20]
 800b1fa:	9202      	str	r2, [sp, #8]
 800b1fc:	699a      	ldr	r2, [r3, #24]
 800b1fe:	9202      	str	r2, [sp, #8]
 800b200:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b202:	681a      	ldr	r2, [r3, #0]
 800b204:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b208:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800b20a:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800b20c:	3301      	adds	r3, #1
 800b20e:	6523      	str	r3, [r4, #80]	; 0x50
 800b210:	e508      	b.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b212:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b214:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b216:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b21a:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b21c:	f43f aeab 	beq.w	800af76 <HAL_I2C_EV_IRQHandler+0x3b2>
 800b220:	2902      	cmp	r1, #2
 800b222:	f43f aea8 	beq.w	800af76 <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b226:	681a      	ldr	r2, [r3, #0]
 800b228:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b22c:	601a      	str	r2, [r3, #0]
 800b22e:	e6a2      	b.n	800af76 <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800b230:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b234:	f000 811b 	beq.w	800b46e <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800b238:	2808      	cmp	r0, #8
 800b23a:	f000 8108 	beq.w	800b44e <HAL_I2C_EV_IRQHandler+0x88a>
 800b23e:	2820      	cmp	r0, #32
 800b240:	f000 8105 	beq.w	800b44e <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800b244:	2d12      	cmp	r5, #18
 800b246:	f000 80ff 	beq.w	800b448 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800b24a:	2810      	cmp	r0, #16
 800b24c:	d804      	bhi.n	800b258 <HAL_I2C_EV_IRQHandler+0x694>
 800b24e:	4a48      	ldr	r2, [pc, #288]	; (800b370 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800b250:	40c2      	lsrs	r2, r0
 800b252:	07d1      	lsls	r1, r2, #31
 800b254:	f100 814c 	bmi.w	800b4f0 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b258:	681a      	ldr	r2, [r3, #0]
 800b25a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b25e:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b260:	2200      	movs	r2, #0
 800b262:	9206      	str	r2, [sp, #24]
 800b264:	695a      	ldr	r2, [r3, #20]
 800b266:	9206      	str	r2, [sp, #24]
 800b268:	699b      	ldr	r3, [r3, #24]
 800b26a:	9306      	str	r3, [sp, #24]
 800b26c:	9b06      	ldr	r3, [sp, #24]
 800b26e:	e731      	b.n	800b0d4 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b270:	685a      	ldr	r2, [r3, #4]
 800b272:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b276:	605a      	str	r2, [r3, #4]
 800b278:	e4d4      	b.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800b27a:	3901      	subs	r1, #1
 800b27c:	290f      	cmp	r1, #15
 800b27e:	d809      	bhi.n	800b294 <HAL_I2C_EV_IRQHandler+0x6d0>
 800b280:	e8df f001 	tbb	[pc, r1]
 800b284:	3608363b 	.word	0x3608363b
 800b288:	08080808 	.word	0x08080808
 800b28c:	08080808 	.word	0x08080808
 800b290:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b294:	681a      	ldr	r2, [r3, #0]
 800b296:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b29a:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b29c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b29e:	691b      	ldr	r3, [r3, #16]
 800b2a0:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b2a2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b2a4:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b2a6:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800b2a8:	3b01      	subs	r3, #1
 800b2aa:	b29b      	uxth	r3, r3
 800b2ac:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b2ae:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800b2b0:	1c51      	adds	r1, r2, #1
 800b2b2:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b2b4:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800b2b6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b2b8:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800b2ba:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b2bc:	3b01      	subs	r3, #1
 800b2be:	b29b      	uxth	r3, r3
 800b2c0:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b2c2:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800b2c4:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b2c6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800b2ca:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800b2cc:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b2ce:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800b2d0:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b2d4:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800b2d8:	2b40      	cmp	r3, #64	; 0x40
 800b2da:	f000 80f5 	beq.w	800b4c8 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b2de:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800b2e0:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b2e2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800b2e6:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800b2e8:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800b2ea:	f7ff facb 	bl	800a884 <HAL_I2C_MasterRxCpltCallback>
 800b2ee:	e499      	b.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b2f0:	681a      	ldr	r2, [r3, #0]
 800b2f2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b2f6:	601a      	str	r2, [r3, #0]
 800b2f8:	e7d0      	b.n	800b29c <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b2fa:	681a      	ldr	r2, [r3, #0]
 800b2fc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b300:	601a      	str	r2, [r3, #0]
 800b302:	e7cb      	b.n	800b29c <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800b304:	2810      	cmp	r0, #16
 800b306:	d804      	bhi.n	800b312 <HAL_I2C_EV_IRQHandler+0x74e>
 800b308:	4a19      	ldr	r2, [pc, #100]	; (800b370 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800b30a:	40c2      	lsrs	r2, r0
 800b30c:	07d2      	lsls	r2, r2, #31
 800b30e:	f100 80c2 	bmi.w	800b496 <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b312:	681a      	ldr	r2, [r3, #0]
 800b314:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b318:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b31a:	681a      	ldr	r2, [r3, #0]
 800b31c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b320:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b322:	685a      	ldr	r2, [r3, #4]
 800b324:	0516      	lsls	r6, r2, #20
 800b326:	d506      	bpl.n	800b336 <HAL_I2C_EV_IRQHandler+0x772>
 800b328:	2820      	cmp	r0, #32
 800b32a:	f240 80bc 	bls.w	800b4a6 <HAL_I2C_EV_IRQHandler+0x8e2>
 800b32e:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b332:	f000 80bd 	beq.w	800b4b0 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b336:	2200      	movs	r2, #0
 800b338:	9208      	str	r2, [sp, #32]
 800b33a:	695a      	ldr	r2, [r3, #20]
 800b33c:	9208      	str	r2, [sp, #32]
 800b33e:	699b      	ldr	r3, [r3, #24]
 800b340:	9308      	str	r3, [sp, #32]
 800b342:	9b08      	ldr	r3, [sp, #32]
 800b344:	e6c6      	b.n	800b0d4 <HAL_I2C_EV_IRQHandler+0x510>
 800b346:	4a0b      	ldr	r2, [pc, #44]	; (800b374 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800b348:	3808      	subs	r0, #8
 800b34a:	40c2      	lsrs	r2, r0
 800b34c:	07d2      	lsls	r2, r2, #31
 800b34e:	f57f af13 	bpl.w	800b178 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800b352:	685a      	ldr	r2, [r3, #4]
 800b354:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b358:	605a      	str	r2, [r3, #4]
 800b35a:	e70d      	b.n	800b178 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b35c:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b360:	f47f af0a 	bne.w	800b178 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b364:	e7f5      	b.n	800b352 <HAL_I2C_EV_IRQHandler+0x78e>
 800b366:	bf00      	nop
 800b368:	0800a965 	.word	0x0800a965
 800b36c:	ffff0000 	.word	0xffff0000
 800b370:	00010014 	.word	0x00010014
 800b374:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b378:	6859      	ldr	r1, [r3, #4]
 800b37a:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b37e:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b380:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800b382:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b384:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b386:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800b38a:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800b38c:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800b38e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b392:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800b396:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b39a:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800b39c:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b39e:	f47f af1c 	bne.w	800b1da <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800b3a2:	f7ff fa79 	bl	800a898 <HAL_I2C_MemTxCpltCallback>
 800b3a6:	e43d      	b.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800b3a8:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800b3aa:	2802      	cmp	r0, #2
 800b3ac:	f43f af60 	beq.w	800b270 <HAL_I2C_EV_IRQHandler+0x6ac>
 800b3b0:	2a01      	cmp	r2, #1
 800b3b2:	f63f af5d 	bhi.w	800b270 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800b3b6:	4a62      	ldr	r2, [pc, #392]	; (800b540 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800b3b8:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800b3ba:	6812      	ldr	r2, [r2, #0]
 800b3bc:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800b3c0:	fbb2 f2f0 	udiv	r2, r2, r0
 800b3c4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800b3c8:	920b      	str	r2, [sp, #44]	; 0x2c
 800b3ca:	e004      	b.n	800b3d6 <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800b3cc:	681a      	ldr	r2, [r3, #0]
 800b3ce:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800b3d2:	f000 8092 	beq.w	800b4fa <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800b3d6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b3d8:	3a01      	subs	r2, #1
 800b3da:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800b3dc:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b3de:	2900      	cmp	r1, #0
 800b3e0:	d1f4      	bne.n	800b3cc <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b3e2:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b3e4:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b3e6:	f042 0220 	orr.w	r2, r2, #32
 800b3ea:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b3ec:	685a      	ldr	r2, [r3, #4]
 800b3ee:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b3f2:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b3f4:	691b      	ldr	r3, [r3, #16]
 800b3f6:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800b3f8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800b3fa:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800b3fc:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800b3fe:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800b400:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800b402:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800b404:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800b406:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800b408:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800b40c:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b40e:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800b412:	f7ff faa3 	bl	800a95c <HAL_I2C_ErrorCallback>
 800b416:	e405      	b.n	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800b418:	2d08      	cmp	r5, #8
 800b41a:	d0ad      	beq.n	800b378 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b41c:	2d20      	cmp	r5, #32
 800b41e:	d0ab      	beq.n	800b378 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b420:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800b424:	d0a8      	beq.n	800b378 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b426:	685a      	ldr	r2, [r3, #4]
 800b428:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b42c:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b42e:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b430:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800b432:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b434:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b436:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800b43a:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b43c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800b440:	f7ff fa1e 	bl	800a880 <HAL_I2C_MasterTxCpltCallback>
 800b444:	f7ff bbee 	b.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800b448:	2801      	cmp	r0, #1
 800b44a:	f43f af05 	beq.w	800b258 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b44e:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b450:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b452:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b456:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b458:	9107      	str	r1, [sp, #28]
 800b45a:	695a      	ldr	r2, [r3, #20]
 800b45c:	9207      	str	r2, [sp, #28]
 800b45e:	699a      	ldr	r2, [r3, #24]
 800b460:	9207      	str	r2, [sp, #28]
 800b462:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b464:	681a      	ldr	r2, [r3, #0]
 800b466:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b46a:	601a      	str	r2, [r3, #0]
 800b46c:	e632      	b.n	800b0d4 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b46e:	681a      	ldr	r2, [r3, #0]
 800b470:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b474:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b476:	685a      	ldr	r2, [r3, #4]
 800b478:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800b47c:	d02d      	beq.n	800b4da <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b47e:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b480:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b482:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b486:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b488:	9104      	str	r1, [sp, #16]
 800b48a:	695a      	ldr	r2, [r3, #20]
 800b48c:	9204      	str	r2, [sp, #16]
 800b48e:	699b      	ldr	r3, [r3, #24]
 800b490:	9304      	str	r3, [sp, #16]
 800b492:	9b04      	ldr	r3, [sp, #16]
 800b494:	e61e      	b.n	800b0d4 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b496:	681a      	ldr	r2, [r3, #0]
 800b498:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b49c:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b49e:	685a      	ldr	r2, [r3, #4]
 800b4a0:	0515      	lsls	r5, r2, #20
 800b4a2:	f57f af48 	bpl.w	800b336 <HAL_I2C_EV_IRQHandler+0x772>
 800b4a6:	2807      	cmp	r0, #7
 800b4a8:	d807      	bhi.n	800b4ba <HAL_I2C_EV_IRQHandler+0x8f6>
 800b4aa:	2801      	cmp	r0, #1
 800b4ac:	f47f af43 	bne.w	800b336 <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800b4b0:	685a      	ldr	r2, [r3, #4]
 800b4b2:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b4b6:	605a      	str	r2, [r3, #4]
 800b4b8:	e73d      	b.n	800b336 <HAL_I2C_EV_IRQHandler+0x772>
 800b4ba:	4a22      	ldr	r2, [pc, #136]	; (800b544 <HAL_I2C_EV_IRQHandler+0x980>)
 800b4bc:	3808      	subs	r0, #8
 800b4be:	40c2      	lsrs	r2, r0
 800b4c0:	07d0      	lsls	r0, r2, #31
 800b4c2:	f57f af38 	bpl.w	800b336 <HAL_I2C_EV_IRQHandler+0x772>
 800b4c6:	e7f3      	b.n	800b4b0 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b4c8:	2300      	movs	r3, #0
 800b4ca:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b4ce:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800b4d0:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b4d2:	f7ff fa41 	bl	800a958 <HAL_I2C_MemRxCpltCallback>
 800b4d6:	f7ff bba5 	b.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b4da:	9205      	str	r2, [sp, #20]
 800b4dc:	695a      	ldr	r2, [r3, #20]
 800b4de:	9205      	str	r2, [sp, #20]
 800b4e0:	699a      	ldr	r2, [r3, #24]
 800b4e2:	9205      	str	r2, [sp, #20]
 800b4e4:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b4e6:	681a      	ldr	r2, [r3, #0]
 800b4e8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b4ec:	601a      	str	r2, [r3, #0]
 800b4ee:	e5f1      	b.n	800b0d4 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b4f0:	681a      	ldr	r2, [r3, #0]
 800b4f2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b4f6:	601a      	str	r2, [r3, #0]
 800b4f8:	e6b2      	b.n	800b260 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b4fa:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b4fc:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b4fe:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b502:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b504:	6859      	ldr	r1, [r3, #4]
 800b506:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b50a:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b50c:	691b      	ldr	r3, [r3, #16]
 800b50e:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800b510:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b512:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800b514:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800b516:	b29b      	uxth	r3, r3
 800b518:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800b51a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800b51e:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b520:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800b524:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b526:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800b528:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b52a:	f47f aed9 	bne.w	800b2e0 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800b52e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800b532:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800b534:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800b536:	f7ff fa0f 	bl	800a958 <HAL_I2C_MemRxCpltCallback>
 800b53a:	f7ff bb73 	b.w	800ac24 <HAL_I2C_EV_IRQHandler+0x60>
 800b53e:	bf00      	nop
 800b540:	20000078 	.word	0x20000078
 800b544:	01000101 	.word	0x01000101

0800b548 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b548:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b54c:	2a20      	cmp	r2, #32
{
 800b54e:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b550:	fa5f fc82 	uxtb.w	ip, r2
 800b554:	d001      	beq.n	800b55a <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b556:	2002      	movs	r0, #2
  }
}
 800b558:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800b55a:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b55c:	2024      	movs	r0, #36	; 0x24
 800b55e:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b562:	6810      	ldr	r0, [r2, #0]
 800b564:	f020 0001 	bic.w	r0, r0, #1
 800b568:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800b56a:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b56c:	f020 0010 	bic.w	r0, r0, #16
 800b570:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800b572:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b574:	4301      	orrs	r1, r0
 800b576:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800b578:	6811      	ldr	r1, [r2, #0]
 800b57a:	f041 0101 	orr.w	r1, r1, #1
 800b57e:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800b580:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800b582:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800b586:	4770      	bx	lr

0800b588 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b588:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b58c:	2a20      	cmp	r2, #32
 800b58e:	d001      	beq.n	800b594 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b590:	2002      	movs	r0, #2
  }
}
 800b592:	4770      	bx	lr
{
 800b594:	b410      	push	{r4}
 800b596:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800b59a:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b59c:	2224      	movs	r2, #36	; 0x24
 800b59e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b5a2:	6822      	ldr	r2, [r4, #0]
 800b5a4:	f022 0201 	bic.w	r2, r2, #1
 800b5a8:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800b5aa:	4603      	mov	r3, r0
 800b5ac:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800b5ae:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800b5b2:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800b5b4:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800b5b6:	b289      	uxth	r1, r1
 800b5b8:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800b5ba:	6822      	ldr	r2, [r4, #0]
 800b5bc:	f042 0201 	orr.w	r2, r2, #1
 800b5c0:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800b5c2:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800b5c6:	2000      	movs	r0, #0
}
 800b5c8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b5cc:	4770      	bx	lr
 800b5ce:	bf00      	nop

0800b5d0 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800b5d0:	2800      	cmp	r0, #0
 800b5d2:	d069      	beq.n	800b6a8 <HAL_LTDC_Init+0xd8>
{
 800b5d4:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800b5d6:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800b5da:	4604      	mov	r4, r0
 800b5dc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b5e0:	2b00      	cmp	r3, #0
 800b5e2:	d05c      	beq.n	800b69e <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b5e4:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b5e6:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b5e8:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b5ec:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b5f0:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b5f2:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800b5f4:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b5f8:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800b5fc:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b5fe:	6999      	ldr	r1, [r3, #24]
 800b600:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800b602:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b604:	430a      	orrs	r2, r1
 800b606:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b608:	689a      	ldr	r2, [r3, #8]
 800b60a:	4928      	ldr	r1, [pc, #160]	; (800b6ac <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800b60c:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b60e:	400a      	ands	r2, r1
 800b610:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800b612:	689a      	ldr	r2, [r3, #8]
 800b614:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b618:	69a0      	ldr	r0, [r4, #24]
 800b61a:	4302      	orrs	r2, r0
 800b61c:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b61e:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800b620:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b622:	400a      	ands	r2, r1
 800b624:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800b626:	68da      	ldr	r2, [r3, #12]
 800b628:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b62c:	6a20      	ldr	r0, [r4, #32]
 800b62e:	4302      	orrs	r2, r0
 800b630:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b632:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800b634:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b636:	400a      	ands	r2, r1
 800b638:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800b63a:	691a      	ldr	r2, [r3, #16]
 800b63c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b640:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800b642:	4302      	orrs	r2, r0
 800b644:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800b646:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800b648:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800b64a:	400a      	ands	r2, r1
 800b64c:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800b64e:	695a      	ldr	r2, [r3, #20]
 800b650:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800b652:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b656:	430a      	orrs	r2, r1
 800b658:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b65a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800b65c:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800b660:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b664:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800b668:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800b66a:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800b66c:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800b670:	432a      	orrs	r2, r5
 800b672:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800b676:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800b67a:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800b67c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b67e:	f042 0206 	orr.w	r2, r2, #6
 800b682:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800b684:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800b686:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b68a:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800b68c:	ea42 020c 	orr.w	r2, r2, ip
 800b690:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b692:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800b696:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800b69a:	4608      	mov	r0, r1
}
 800b69c:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800b69e:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800b6a2:	f7f5 ffef 	bl	8001684 <HAL_LTDC_MspInit>
 800b6a6:	e79d      	b.n	800b5e4 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800b6a8:	2001      	movs	r0, #1
}
 800b6aa:	4770      	bx	lr
 800b6ac:	f000f800 	.word	0xf000f800

0800b6b0 <HAL_LTDC_ErrorCallback>:
 800b6b0:	4770      	bx	lr
 800b6b2:	bf00      	nop

0800b6b4 <HAL_LTDC_ReloadEventCallback>:
 800b6b4:	4770      	bx	lr
 800b6b6:	bf00      	nop

0800b6b8 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b6b8:	6803      	ldr	r3, [r0, #0]
{
 800b6ba:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b6bc:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800b6be:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b6c0:	076a      	lsls	r2, r5, #29
{
 800b6c2:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b6c4:	d501      	bpl.n	800b6ca <HAL_LTDC_IRQHandler+0x12>
 800b6c6:	0771      	lsls	r1, r6, #29
 800b6c8:	d41d      	bmi.n	800b706 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800b6ca:	07aa      	lsls	r2, r5, #30
 800b6cc:	d501      	bpl.n	800b6d2 <HAL_LTDC_IRQHandler+0x1a>
 800b6ce:	07b3      	lsls	r3, r6, #30
 800b6d0:	d42d      	bmi.n	800b72e <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800b6d2:	07e8      	lsls	r0, r5, #31
 800b6d4:	d501      	bpl.n	800b6da <HAL_LTDC_IRQHandler+0x22>
 800b6d6:	07f1      	lsls	r1, r6, #31
 800b6d8:	d440      	bmi.n	800b75c <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800b6da:	072a      	lsls	r2, r5, #28
 800b6dc:	d501      	bpl.n	800b6e2 <HAL_LTDC_IRQHandler+0x2a>
 800b6de:	0733      	lsls	r3, r6, #28
 800b6e0:	d400      	bmi.n	800b6e4 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800b6e2:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800b6e4:	6823      	ldr	r3, [r4, #0]
 800b6e6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800b6e8:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800b6ea:	f022 0208 	bic.w	r2, r2, #8
 800b6ee:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800b6f0:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800b6f2:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800b6f4:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800b6f6:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b6fa:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800b6fe:	4620      	mov	r0, r4
 800b700:	f7ff ffd8 	bl	800b6b4 <HAL_LTDC_ReloadEventCallback>
}
 800b704:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800b706:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b708:	f022 0204 	bic.w	r2, r2, #4
 800b70c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800b70e:	2204      	movs	r2, #4
 800b710:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800b712:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800b716:	f043 0301 	orr.w	r3, r3, #1
 800b71a:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800b71e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b720:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b724:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b728:	f7ff ffc2 	bl	800b6b0 <HAL_LTDC_ErrorCallback>
 800b72c:	e7cd      	b.n	800b6ca <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800b72e:	6823      	ldr	r3, [r4, #0]
 800b730:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b732:	f022 0202 	bic.w	r2, r2, #2
 800b736:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800b738:	2202      	movs	r2, #2
 800b73a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800b73c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800b740:	f043 0302 	orr.w	r3, r3, #2
 800b744:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b748:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800b74a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b74c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b750:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b754:	4620      	mov	r0, r4
 800b756:	f7ff ffab 	bl	800b6b0 <HAL_LTDC_ErrorCallback>
 800b75a:	e7ba      	b.n	800b6d2 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b75c:	6823      	ldr	r3, [r4, #0]
 800b75e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b760:	f022 0201 	bic.w	r2, r2, #1
 800b764:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800b766:	2201      	movs	r2, #1
 800b768:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800b76a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800b76c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b770:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800b774:	4620      	mov	r0, r4
 800b776:	f7f6 ff81 	bl	800267c <HAL_LTDC_LineEventCallback>
 800b77a:	e7ae      	b.n	800b6da <HAL_LTDC_IRQHandler+0x22>

0800b77c <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800b77c:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b780:	2b01      	cmp	r3, #1
 800b782:	f000 80c2 	beq.w	800b90a <HAL_LTDC_ConfigLayer+0x18e>
{
 800b786:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b78a:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b78e:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b792:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b796:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b798:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b79a:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b79e:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800b7a2:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b7a6:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800b7aa:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b7ae:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800b7b2:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b7b4:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b7b8:	460c      	mov	r4, r1
 800b7ba:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b7bc:	9301      	str	r3, [sp, #4]
 800b7be:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b7c0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b7c2:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800b7c6:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b7ca:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b7cc:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b7ce:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b7d2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b7d4:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b7d8:	6823      	ldr	r3, [r4, #0]
 800b7da:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b7de:	9b01      	ldr	r3, [sp, #4]
 800b7e0:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b7e4:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b7e8:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b7ea:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800b7ec:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b7f0:	1c51      	adds	r1, r2, #1
 800b7f2:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800b7f6:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b7f8:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b7fa:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b7fe:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b802:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800b806:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800b80a:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800b80e:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b812:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b816:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b818:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b81a:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800b81e:	3301      	adds	r3, #1
 800b820:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800b824:	4403      	add	r3, r0
 800b826:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800b82a:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b82e:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b832:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b834:	f023 0307 	bic.w	r3, r3, #7
 800b838:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b83c:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b840:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b844:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800b848:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800b84c:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b850:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800b854:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800b858:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800b85c:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800b860:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800b864:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800b868:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800b86c:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800b870:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800b874:	696b      	ldr	r3, [r5, #20]
 800b876:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800b87a:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800b87e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800b882:	f023 0307 	bic.w	r3, r3, #7
 800b886:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800b88a:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800b88e:	4303      	orrs	r3, r0
 800b890:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b894:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b898:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b89a:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b89e:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b8a2:	bb69      	cbnz	r1, 800b900 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800b8a4:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b8a6:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b8a8:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b8aa:	fb03 f707 	mul.w	r7, r3, r7
 800b8ae:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b8b0:	fb02 f303 	mul.w	r3, r2, r3
 800b8b4:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b8b8:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b8bc:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b8be:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800b8c2:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b8c6:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800b8ca:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800b8ce:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800b8d2:	f023 0307 	bic.w	r3, r3, #7
 800b8d6:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b8da:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b8de:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b8e2:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b8e4:	4313      	orrs	r3, r2
 800b8e6:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800b8ea:	2300      	movs	r3, #0
  return HAL_OK;
 800b8ec:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b8ee:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800b8f2:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b8f6:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800b8fa:	b003      	add	sp, #12
 800b8fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800b900:	3901      	subs	r1, #1
 800b902:	2906      	cmp	r1, #6
 800b904:	d903      	bls.n	800b90e <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b906:	2301      	movs	r3, #1
 800b908:	e7cd      	b.n	800b8a6 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800b90a:	2002      	movs	r0, #2
}
 800b90c:	4770      	bx	lr
 800b90e:	4b02      	ldr	r3, [pc, #8]	; (800b918 <HAL_LTDC_ConfigLayer+0x19c>)
 800b910:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800b914:	e7c7      	b.n	800b8a6 <HAL_LTDC_ConfigLayer+0x12a>
 800b916:	bf00      	nop
 800b918:	0802eca8 	.word	0x0802eca8

0800b91c <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800b91c:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b920:	2b01      	cmp	r3, #1
 800b922:	d019      	beq.n	800b958 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b924:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b926:	2302      	movs	r3, #2
{
 800b928:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b92a:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b92e:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b930:	4c0a      	ldr	r4, [pc, #40]	; (800b95c <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b932:	f023 0301 	bic.w	r3, r3, #1
 800b936:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b938:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b93a:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800b93c:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b93e:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800b942:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b946:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800b948:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b94c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800b950:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800b954:	4618      	mov	r0, r3
}
 800b956:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800b958:	2002      	movs	r0, #2
}
 800b95a:	4770      	bx	lr
 800b95c:	40016800 	.word	0x40016800

0800b960 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800b960:	2800      	cmp	r0, #0
 800b962:	f000 81a2 	beq.w	800bcaa <HAL_RCC_OscConfig+0x34a>
{
 800b966:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b96a:	6803      	ldr	r3, [r0, #0]
 800b96c:	07dd      	lsls	r5, r3, #31
{
 800b96e:	b082      	sub	sp, #8
 800b970:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b972:	d52f      	bpl.n	800b9d4 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b974:	499e      	ldr	r1, [pc, #632]	; (800bbf0 <HAL_RCC_OscConfig+0x290>)
 800b976:	688a      	ldr	r2, [r1, #8]
 800b978:	f002 020c 	and.w	r2, r2, #12
 800b97c:	2a04      	cmp	r2, #4
 800b97e:	f000 80ed 	beq.w	800bb5c <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b982:	688a      	ldr	r2, [r1, #8]
 800b984:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b988:	2a08      	cmp	r2, #8
 800b98a:	f000 80e3 	beq.w	800bb54 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b98e:	6863      	ldr	r3, [r4, #4]
 800b990:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800b994:	f000 80ec 	beq.w	800bb70 <HAL_RCC_OscConfig+0x210>
 800b998:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800b99c:	f000 8175 	beq.w	800bc8a <HAL_RCC_OscConfig+0x32a>
 800b9a0:	4d93      	ldr	r5, [pc, #588]	; (800bbf0 <HAL_RCC_OscConfig+0x290>)
 800b9a2:	682a      	ldr	r2, [r5, #0]
 800b9a4:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800b9a8:	602a      	str	r2, [r5, #0]
 800b9aa:	682a      	ldr	r2, [r5, #0]
 800b9ac:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800b9b0:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b9b2:	2b00      	cmp	r3, #0
 800b9b4:	f040 80e1 	bne.w	800bb7a <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b9b8:	f7fd fdb8 	bl	800952c <HAL_GetTick>
 800b9bc:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b9be:	e005      	b.n	800b9cc <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b9c0:	f7fd fdb4 	bl	800952c <HAL_GetTick>
 800b9c4:	1b80      	subs	r0, r0, r6
 800b9c6:	2864      	cmp	r0, #100	; 0x64
 800b9c8:	f200 8101 	bhi.w	800bbce <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b9cc:	682b      	ldr	r3, [r5, #0]
 800b9ce:	039b      	lsls	r3, r3, #14
 800b9d0:	d4f6      	bmi.n	800b9c0 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800b9d2:	6823      	ldr	r3, [r4, #0]
 800b9d4:	079f      	lsls	r7, r3, #30
 800b9d6:	d528      	bpl.n	800ba2a <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b9d8:	4a85      	ldr	r2, [pc, #532]	; (800bbf0 <HAL_RCC_OscConfig+0x290>)
 800b9da:	6891      	ldr	r1, [r2, #8]
 800b9dc:	f011 0f0c 	tst.w	r1, #12
 800b9e0:	f000 8090 	beq.w	800bb04 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b9e4:	6891      	ldr	r1, [r2, #8]
 800b9e6:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b9ea:	2908      	cmp	r1, #8
 800b9ec:	f000 8086 	beq.w	800bafc <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800b9f0:	68e3      	ldr	r3, [r4, #12]
 800b9f2:	2b00      	cmp	r3, #0
 800b9f4:	f000 810e 	beq.w	800bc14 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800b9f8:	4b7e      	ldr	r3, [pc, #504]	; (800bbf4 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b9fa:	4e7d      	ldr	r6, [pc, #500]	; (800bbf0 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800b9fc:	2201      	movs	r2, #1
 800b9fe:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800ba00:	f7fd fd94 	bl	800952c <HAL_GetTick>
 800ba04:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800ba06:	e005      	b.n	800ba14 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800ba08:	f7fd fd90 	bl	800952c <HAL_GetTick>
 800ba0c:	1b40      	subs	r0, r0, r5
 800ba0e:	2802      	cmp	r0, #2
 800ba10:	f200 80dd 	bhi.w	800bbce <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800ba14:	6833      	ldr	r3, [r6, #0]
 800ba16:	0798      	lsls	r0, r3, #30
 800ba18:	d5f6      	bpl.n	800ba08 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800ba1a:	6833      	ldr	r3, [r6, #0]
 800ba1c:	6922      	ldr	r2, [r4, #16]
 800ba1e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800ba22:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800ba26:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800ba28:	6823      	ldr	r3, [r4, #0]
 800ba2a:	071a      	lsls	r2, r3, #28
 800ba2c:	d451      	bmi.n	800bad2 <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800ba2e:	0758      	lsls	r0, r3, #29
 800ba30:	d52f      	bpl.n	800ba92 <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800ba32:	4a6f      	ldr	r2, [pc, #444]	; (800bbf0 <HAL_RCC_OscConfig+0x290>)
 800ba34:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800ba36:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800ba3a:	d07f      	beq.n	800bb3c <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800ba3c:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800ba3e:	4e6e      	ldr	r6, [pc, #440]	; (800bbf8 <HAL_RCC_OscConfig+0x298>)
 800ba40:	6833      	ldr	r3, [r6, #0]
 800ba42:	05d9      	lsls	r1, r3, #23
 800ba44:	f140 80b3 	bpl.w	800bbae <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800ba48:	68a3      	ldr	r3, [r4, #8]
 800ba4a:	2b01      	cmp	r3, #1
 800ba4c:	f000 80c3 	beq.w	800bbd6 <HAL_RCC_OscConfig+0x276>
 800ba50:	2b05      	cmp	r3, #5
 800ba52:	f000 812c 	beq.w	800bcae <HAL_RCC_OscConfig+0x34e>
 800ba56:	4e66      	ldr	r6, [pc, #408]	; (800bbf0 <HAL_RCC_OscConfig+0x290>)
 800ba58:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800ba5a:	f022 0201 	bic.w	r2, r2, #1
 800ba5e:	6732      	str	r2, [r6, #112]	; 0x70
 800ba60:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800ba62:	f022 0204 	bic.w	r2, r2, #4
 800ba66:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800ba68:	2b00      	cmp	r3, #0
 800ba6a:	f040 80b9 	bne.w	800bbe0 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800ba6e:	f7fd fd5d 	bl	800952c <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800ba72:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800ba76:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800ba78:	e005      	b.n	800ba86 <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800ba7a:	f7fd fd57 	bl	800952c <HAL_GetTick>
 800ba7e:	1bc0      	subs	r0, r0, r7
 800ba80:	4540      	cmp	r0, r8
 800ba82:	f200 80a4 	bhi.w	800bbce <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800ba86:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800ba88:	0798      	lsls	r0, r3, #30
 800ba8a:	d4f6      	bmi.n	800ba7a <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800ba8c:	2d00      	cmp	r5, #0
 800ba8e:	f040 8106 	bne.w	800bc9e <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800ba92:	69a0      	ldr	r0, [r4, #24]
 800ba94:	b1c8      	cbz	r0, 800baca <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800ba96:	4d56      	ldr	r5, [pc, #344]	; (800bbf0 <HAL_RCC_OscConfig+0x290>)
 800ba98:	68ab      	ldr	r3, [r5, #8]
 800ba9a:	f003 030c 	and.w	r3, r3, #12
 800ba9e:	2b08      	cmp	r3, #8
 800baa0:	f000 80c9 	beq.w	800bc36 <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800baa4:	4b53      	ldr	r3, [pc, #332]	; (800bbf4 <HAL_RCC_OscConfig+0x294>)
 800baa6:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800baa8:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800baaa:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800baac:	f000 8109 	beq.w	800bcc2 <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800bab0:	f7fd fd3c 	bl	800952c <HAL_GetTick>
 800bab4:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800bab6:	e005      	b.n	800bac4 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800bab8:	f7fd fd38 	bl	800952c <HAL_GetTick>
 800babc:	1b00      	subs	r0, r0, r4
 800babe:	2802      	cmp	r0, #2
 800bac0:	f200 8085 	bhi.w	800bbce <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800bac4:	682b      	ldr	r3, [r5, #0]
 800bac6:	019b      	lsls	r3, r3, #6
 800bac8:	d4f6      	bmi.n	800bab8 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800baca:	2000      	movs	r0, #0
}
 800bacc:	b002      	add	sp, #8
 800bace:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800bad2:	6963      	ldr	r3, [r4, #20]
 800bad4:	b30b      	cbz	r3, 800bb1a <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800bad6:	4b47      	ldr	r3, [pc, #284]	; (800bbf4 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800bad8:	4e45      	ldr	r6, [pc, #276]	; (800bbf0 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800bada:	2201      	movs	r2, #1
 800badc:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800bae0:	f7fd fd24 	bl	800952c <HAL_GetTick>
 800bae4:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800bae6:	e004      	b.n	800baf2 <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800bae8:	f7fd fd20 	bl	800952c <HAL_GetTick>
 800baec:	1b40      	subs	r0, r0, r5
 800baee:	2802      	cmp	r0, #2
 800baf0:	d86d      	bhi.n	800bbce <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800baf2:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800baf4:	079b      	lsls	r3, r3, #30
 800baf6:	d5f7      	bpl.n	800bae8 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800baf8:	6823      	ldr	r3, [r4, #0]
 800bafa:	e798      	b.n	800ba2e <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800bafc:	6852      	ldr	r2, [r2, #4]
 800bafe:	0256      	lsls	r6, r2, #9
 800bb00:	f53f af76 	bmi.w	800b9f0 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800bb04:	4a3a      	ldr	r2, [pc, #232]	; (800bbf0 <HAL_RCC_OscConfig+0x290>)
 800bb06:	6812      	ldr	r2, [r2, #0]
 800bb08:	0795      	lsls	r5, r2, #30
 800bb0a:	d544      	bpl.n	800bb96 <HAL_RCC_OscConfig+0x236>
 800bb0c:	68e2      	ldr	r2, [r4, #12]
 800bb0e:	2a01      	cmp	r2, #1
 800bb10:	d041      	beq.n	800bb96 <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800bb12:	2001      	movs	r0, #1
}
 800bb14:	b002      	add	sp, #8
 800bb16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800bb1a:	4a36      	ldr	r2, [pc, #216]	; (800bbf4 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800bb1c:	4e34      	ldr	r6, [pc, #208]	; (800bbf0 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800bb1e:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800bb22:	f7fd fd03 	bl	800952c <HAL_GetTick>
 800bb26:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800bb28:	e004      	b.n	800bb34 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800bb2a:	f7fd fcff 	bl	800952c <HAL_GetTick>
 800bb2e:	1b40      	subs	r0, r0, r5
 800bb30:	2802      	cmp	r0, #2
 800bb32:	d84c      	bhi.n	800bbce <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800bb34:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800bb36:	079f      	lsls	r7, r3, #30
 800bb38:	d4f7      	bmi.n	800bb2a <HAL_RCC_OscConfig+0x1ca>
 800bb3a:	e7dd      	b.n	800baf8 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800bb3c:	9301      	str	r3, [sp, #4]
 800bb3e:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800bb40:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800bb44:	6413      	str	r3, [r2, #64]	; 0x40
 800bb46:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800bb48:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800bb4c:	9301      	str	r3, [sp, #4]
 800bb4e:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800bb50:	2501      	movs	r5, #1
 800bb52:	e774      	b.n	800ba3e <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800bb54:	684a      	ldr	r2, [r1, #4]
 800bb56:	0250      	lsls	r0, r2, #9
 800bb58:	f57f af19 	bpl.w	800b98e <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800bb5c:	4a24      	ldr	r2, [pc, #144]	; (800bbf0 <HAL_RCC_OscConfig+0x290>)
 800bb5e:	6812      	ldr	r2, [r2, #0]
 800bb60:	0391      	lsls	r1, r2, #14
 800bb62:	f57f af37 	bpl.w	800b9d4 <HAL_RCC_OscConfig+0x74>
 800bb66:	6862      	ldr	r2, [r4, #4]
 800bb68:	2a00      	cmp	r2, #0
 800bb6a:	f47f af33 	bne.w	800b9d4 <HAL_RCC_OscConfig+0x74>
 800bb6e:	e7d0      	b.n	800bb12 <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800bb70:	4a1f      	ldr	r2, [pc, #124]	; (800bbf0 <HAL_RCC_OscConfig+0x290>)
 800bb72:	6813      	ldr	r3, [r2, #0]
 800bb74:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800bb78:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800bb7a:	f7fd fcd7 	bl	800952c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bb7e:	4e1c      	ldr	r6, [pc, #112]	; (800bbf0 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800bb80:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bb82:	e004      	b.n	800bb8e <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800bb84:	f7fd fcd2 	bl	800952c <HAL_GetTick>
 800bb88:	1b40      	subs	r0, r0, r5
 800bb8a:	2864      	cmp	r0, #100	; 0x64
 800bb8c:	d81f      	bhi.n	800bbce <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bb8e:	6833      	ldr	r3, [r6, #0]
 800bb90:	039a      	lsls	r2, r3, #14
 800bb92:	d5f7      	bpl.n	800bb84 <HAL_RCC_OscConfig+0x224>
 800bb94:	e71d      	b.n	800b9d2 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800bb96:	4916      	ldr	r1, [pc, #88]	; (800bbf0 <HAL_RCC_OscConfig+0x290>)
 800bb98:	6920      	ldr	r0, [r4, #16]
 800bb9a:	680a      	ldr	r2, [r1, #0]
 800bb9c:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800bba0:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800bba4:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800bba6:	071a      	lsls	r2, r3, #28
 800bba8:	f57f af41 	bpl.w	800ba2e <HAL_RCC_OscConfig+0xce>
 800bbac:	e791      	b.n	800bad2 <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800bbae:	6833      	ldr	r3, [r6, #0]
 800bbb0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800bbb4:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800bbb6:	f7fd fcb9 	bl	800952c <HAL_GetTick>
 800bbba:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800bbbc:	6833      	ldr	r3, [r6, #0]
 800bbbe:	05da      	lsls	r2, r3, #23
 800bbc0:	f53f af42 	bmi.w	800ba48 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800bbc4:	f7fd fcb2 	bl	800952c <HAL_GetTick>
 800bbc8:	1bc0      	subs	r0, r0, r7
 800bbca:	2802      	cmp	r0, #2
 800bbcc:	d9f6      	bls.n	800bbbc <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800bbce:	2003      	movs	r0, #3
}
 800bbd0:	b002      	add	sp, #8
 800bbd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800bbd6:	4a06      	ldr	r2, [pc, #24]	; (800bbf0 <HAL_RCC_OscConfig+0x290>)
 800bbd8:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800bbda:	f043 0301 	orr.w	r3, r3, #1
 800bbde:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800bbe0:	f7fd fca4 	bl	800952c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800bbe4:	4f02      	ldr	r7, [pc, #8]	; (800bbf0 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800bbe6:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bbe8:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800bbec:	e00b      	b.n	800bc06 <HAL_RCC_OscConfig+0x2a6>
 800bbee:	bf00      	nop
 800bbf0:	40023800 	.word	0x40023800
 800bbf4:	42470000 	.word	0x42470000
 800bbf8:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bbfc:	f7fd fc96 	bl	800952c <HAL_GetTick>
 800bc00:	1b80      	subs	r0, r0, r6
 800bc02:	4540      	cmp	r0, r8
 800bc04:	d8e3      	bhi.n	800bbce <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800bc06:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800bc08:	079b      	lsls	r3, r3, #30
 800bc0a:	d5f7      	bpl.n	800bbfc <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800bc0c:	2d00      	cmp	r5, #0
 800bc0e:	f43f af40 	beq.w	800ba92 <HAL_RCC_OscConfig+0x132>
 800bc12:	e044      	b.n	800bc9e <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800bc14:	4a42      	ldr	r2, [pc, #264]	; (800bd20 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800bc16:	4e43      	ldr	r6, [pc, #268]	; (800bd24 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800bc18:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800bc1a:	f7fd fc87 	bl	800952c <HAL_GetTick>
 800bc1e:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800bc20:	e004      	b.n	800bc2c <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800bc22:	f7fd fc83 	bl	800952c <HAL_GetTick>
 800bc26:	1b40      	subs	r0, r0, r5
 800bc28:	2802      	cmp	r0, #2
 800bc2a:	d8d0      	bhi.n	800bbce <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800bc2c:	6833      	ldr	r3, [r6, #0]
 800bc2e:	0799      	lsls	r1, r3, #30
 800bc30:	d4f7      	bmi.n	800bc22 <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800bc32:	6823      	ldr	r3, [r4, #0]
 800bc34:	e6f9      	b.n	800ba2a <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800bc36:	2801      	cmp	r0, #1
 800bc38:	f43f af48 	beq.w	800bacc <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800bc3c:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800bc3e:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800bc40:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800bc44:	4291      	cmp	r1, r2
 800bc46:	f47f af64 	bne.w	800bb12 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800bc4a:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800bc4c:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800bc50:	4291      	cmp	r1, r2
 800bc52:	f47f af5e 	bne.w	800bb12 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800bc56:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800bc58:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800bc5c:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800bc5e:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800bc62:	f47f af56 	bne.w	800bb12 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800bc66:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800bc68:	0852      	lsrs	r2, r2, #1
 800bc6a:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800bc6e:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800bc70:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800bc74:	f47f af4d 	bne.w	800bb12 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800bc78:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800bc7a:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800bc7e:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800bc82:	bf14      	ite	ne
 800bc84:	2001      	movne	r0, #1
 800bc86:	2000      	moveq	r0, #0
 800bc88:	e720      	b.n	800bacc <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800bc8a:	4b26      	ldr	r3, [pc, #152]	; (800bd24 <HAL_RCC_OscConfig+0x3c4>)
 800bc8c:	681a      	ldr	r2, [r3, #0]
 800bc8e:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800bc92:	601a      	str	r2, [r3, #0]
 800bc94:	681a      	ldr	r2, [r3, #0]
 800bc96:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800bc9a:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800bc9c:	e76d      	b.n	800bb7a <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800bc9e:	4a21      	ldr	r2, [pc, #132]	; (800bd24 <HAL_RCC_OscConfig+0x3c4>)
 800bca0:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800bca2:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800bca6:	6413      	str	r3, [r2, #64]	; 0x40
 800bca8:	e6f3      	b.n	800ba92 <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800bcaa:	2001      	movs	r0, #1
}
 800bcac:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800bcae:	4b1d      	ldr	r3, [pc, #116]	; (800bd24 <HAL_RCC_OscConfig+0x3c4>)
 800bcb0:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800bcb2:	f042 0204 	orr.w	r2, r2, #4
 800bcb6:	671a      	str	r2, [r3, #112]	; 0x70
 800bcb8:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800bcba:	f042 0201 	orr.w	r2, r2, #1
 800bcbe:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800bcc0:	e78e      	b.n	800bbe0 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800bcc2:	f7fd fc33 	bl	800952c <HAL_GetTick>
 800bcc6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800bcc8:	e005      	b.n	800bcd6 <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800bcca:	f7fd fc2f 	bl	800952c <HAL_GetTick>
 800bcce:	1b80      	subs	r0, r0, r6
 800bcd0:	2802      	cmp	r0, #2
 800bcd2:	f63f af7c 	bhi.w	800bbce <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800bcd6:	682b      	ldr	r3, [r5, #0]
 800bcd8:	0199      	lsls	r1, r3, #6
 800bcda:	d4f6      	bmi.n	800bcca <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800bcdc:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800bce0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800bce2:	430b      	orrs	r3, r1
 800bce4:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800bce8:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800bcec:	0852      	lsrs	r2, r2, #1
 800bcee:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800bcf2:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800bcf4:	490a      	ldr	r1, [pc, #40]	; (800bd20 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800bcf6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800bcfa:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800bcfc:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800bcfe:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800bd00:	f7fd fc14 	bl	800952c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800bd04:	4d07      	ldr	r5, [pc, #28]	; (800bd24 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800bd06:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800bd08:	e005      	b.n	800bd16 <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800bd0a:	f7fd fc0f 	bl	800952c <HAL_GetTick>
 800bd0e:	1b00      	subs	r0, r0, r4
 800bd10:	2802      	cmp	r0, #2
 800bd12:	f63f af5c 	bhi.w	800bbce <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800bd16:	682b      	ldr	r3, [r5, #0]
 800bd18:	019a      	lsls	r2, r3, #6
 800bd1a:	d5f6      	bpl.n	800bd0a <HAL_RCC_OscConfig+0x3aa>
 800bd1c:	e6d5      	b.n	800baca <HAL_RCC_OscConfig+0x16a>
 800bd1e:	bf00      	nop
 800bd20:	42470000 	.word	0x42470000
 800bd24:	40023800 	.word	0x40023800

0800bd28 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800bd28:	4916      	ldr	r1, [pc, #88]	; (800bd84 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800bd2a:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800bd2c:	688b      	ldr	r3, [r1, #8]
 800bd2e:	f003 030c 	and.w	r3, r3, #12
 800bd32:	2b04      	cmp	r3, #4
 800bd34:	d01b      	beq.n	800bd6e <HAL_RCC_GetSysClockFreq+0x46>
 800bd36:	2b08      	cmp	r3, #8
 800bd38:	d117      	bne.n	800bd6a <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800bd3a:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800bd3c:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800bd3e:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800bd40:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800bd44:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800bd48:	d113      	bne.n	800bd72 <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800bd4a:	480f      	ldr	r0, [pc, #60]	; (800bd88 <HAL_RCC_GetSysClockFreq+0x60>)
 800bd4c:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800bd50:	fba1 0100 	umull	r0, r1, r1, r0
 800bd54:	f7f4 fafc 	bl	8000350 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800bd58:	4b0a      	ldr	r3, [pc, #40]	; (800bd84 <HAL_RCC_GetSysClockFreq+0x5c>)
 800bd5a:	685b      	ldr	r3, [r3, #4]
 800bd5c:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800bd60:	3301      	adds	r3, #1
 800bd62:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800bd64:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800bd68:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800bd6a:	4807      	ldr	r0, [pc, #28]	; (800bd88 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800bd6c:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800bd6e:	4807      	ldr	r0, [pc, #28]	; (800bd8c <HAL_RCC_GetSysClockFreq+0x64>)
}
 800bd70:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800bd72:	4806      	ldr	r0, [pc, #24]	; (800bd8c <HAL_RCC_GetSysClockFreq+0x64>)
 800bd74:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800bd78:	2300      	movs	r3, #0
 800bd7a:	fba1 0100 	umull	r0, r1, r1, r0
 800bd7e:	f7f4 fae7 	bl	8000350 <__aeabi_uldivmod>
 800bd82:	e7e9      	b.n	800bd58 <HAL_RCC_GetSysClockFreq+0x30>
 800bd84:	40023800 	.word	0x40023800
 800bd88:	00f42400 	.word	0x00f42400
 800bd8c:	007a1200 	.word	0x007a1200

0800bd90 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800bd90:	2800      	cmp	r0, #0
 800bd92:	f000 8087 	beq.w	800bea4 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800bd96:	4a48      	ldr	r2, [pc, #288]	; (800beb8 <HAL_RCC_ClockConfig+0x128>)
 800bd98:	6813      	ldr	r3, [r2, #0]
 800bd9a:	f003 030f 	and.w	r3, r3, #15
 800bd9e:	428b      	cmp	r3, r1
{
 800bda0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bda4:	460d      	mov	r5, r1
 800bda6:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800bda8:	d209      	bcs.n	800bdbe <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800bdaa:	b2cb      	uxtb	r3, r1
 800bdac:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800bdae:	6813      	ldr	r3, [r2, #0]
 800bdb0:	f003 030f 	and.w	r3, r3, #15
 800bdb4:	428b      	cmp	r3, r1
 800bdb6:	d002      	beq.n	800bdbe <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800bdb8:	2001      	movs	r0, #1
}
 800bdba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800bdbe:	6823      	ldr	r3, [r4, #0]
 800bdc0:	0798      	lsls	r0, r3, #30
 800bdc2:	d514      	bpl.n	800bdee <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800bdc4:	0759      	lsls	r1, r3, #29
 800bdc6:	d504      	bpl.n	800bdd2 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800bdc8:	493c      	ldr	r1, [pc, #240]	; (800bebc <HAL_RCC_ClockConfig+0x12c>)
 800bdca:	688a      	ldr	r2, [r1, #8]
 800bdcc:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800bdd0:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800bdd2:	071a      	lsls	r2, r3, #28
 800bdd4:	d504      	bpl.n	800bde0 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800bdd6:	4939      	ldr	r1, [pc, #228]	; (800bebc <HAL_RCC_ClockConfig+0x12c>)
 800bdd8:	688a      	ldr	r2, [r1, #8]
 800bdda:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800bdde:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800bde0:	4936      	ldr	r1, [pc, #216]	; (800bebc <HAL_RCC_ClockConfig+0x12c>)
 800bde2:	68a0      	ldr	r0, [r4, #8]
 800bde4:	688a      	ldr	r2, [r1, #8]
 800bde6:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800bdea:	4302      	orrs	r2, r0
 800bdec:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800bdee:	07df      	lsls	r7, r3, #31
 800bdf0:	d521      	bpl.n	800be36 <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800bdf2:	6862      	ldr	r2, [r4, #4]
 800bdf4:	2a01      	cmp	r2, #1
 800bdf6:	d057      	beq.n	800bea8 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800bdf8:	1e93      	subs	r3, r2, #2
 800bdfa:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800bdfc:	4b2f      	ldr	r3, [pc, #188]	; (800bebc <HAL_RCC_ClockConfig+0x12c>)
 800bdfe:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800be00:	d94d      	bls.n	800be9e <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800be02:	0799      	lsls	r1, r3, #30
 800be04:	d5d8      	bpl.n	800bdb8 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800be06:	4e2d      	ldr	r6, [pc, #180]	; (800bebc <HAL_RCC_ClockConfig+0x12c>)
 800be08:	68b3      	ldr	r3, [r6, #8]
 800be0a:	f023 0303 	bic.w	r3, r3, #3
 800be0e:	4313      	orrs	r3, r2
 800be10:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800be12:	f7fd fb8b 	bl	800952c <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800be16:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800be1a:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800be1c:	e004      	b.n	800be28 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800be1e:	f7fd fb85 	bl	800952c <HAL_GetTick>
 800be22:	1bc0      	subs	r0, r0, r7
 800be24:	4540      	cmp	r0, r8
 800be26:	d844      	bhi.n	800beb2 <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800be28:	68b3      	ldr	r3, [r6, #8]
 800be2a:	6862      	ldr	r2, [r4, #4]
 800be2c:	f003 030c 	and.w	r3, r3, #12
 800be30:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800be34:	d1f3      	bne.n	800be1e <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800be36:	4a20      	ldr	r2, [pc, #128]	; (800beb8 <HAL_RCC_ClockConfig+0x128>)
 800be38:	6813      	ldr	r3, [r2, #0]
 800be3a:	f003 030f 	and.w	r3, r3, #15
 800be3e:	42ab      	cmp	r3, r5
 800be40:	d906      	bls.n	800be50 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800be42:	b2eb      	uxtb	r3, r5
 800be44:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800be46:	6813      	ldr	r3, [r2, #0]
 800be48:	f003 030f 	and.w	r3, r3, #15
 800be4c:	42ab      	cmp	r3, r5
 800be4e:	d1b3      	bne.n	800bdb8 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800be50:	6823      	ldr	r3, [r4, #0]
 800be52:	075a      	lsls	r2, r3, #29
 800be54:	d506      	bpl.n	800be64 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800be56:	4919      	ldr	r1, [pc, #100]	; (800bebc <HAL_RCC_ClockConfig+0x12c>)
 800be58:	68e0      	ldr	r0, [r4, #12]
 800be5a:	688a      	ldr	r2, [r1, #8]
 800be5c:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800be60:	4302      	orrs	r2, r0
 800be62:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800be64:	071b      	lsls	r3, r3, #28
 800be66:	d507      	bpl.n	800be78 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800be68:	4a14      	ldr	r2, [pc, #80]	; (800bebc <HAL_RCC_ClockConfig+0x12c>)
 800be6a:	6921      	ldr	r1, [r4, #16]
 800be6c:	6893      	ldr	r3, [r2, #8]
 800be6e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800be72:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800be76:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800be78:	f7ff ff56 	bl	800bd28 <HAL_RCC_GetSysClockFreq>
 800be7c:	4a0f      	ldr	r2, [pc, #60]	; (800bebc <HAL_RCC_ClockConfig+0x12c>)
 800be7e:	4c10      	ldr	r4, [pc, #64]	; (800bec0 <HAL_RCC_ClockConfig+0x130>)
 800be80:	6892      	ldr	r2, [r2, #8]
 800be82:	4910      	ldr	r1, [pc, #64]	; (800bec4 <HAL_RCC_ClockConfig+0x134>)
 800be84:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800be88:	4603      	mov	r3, r0
 800be8a:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800be8c:	480e      	ldr	r0, [pc, #56]	; (800bec8 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800be8e:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800be90:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800be92:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800be94:	f7f5 fdd2 	bl	8001a3c <HAL_InitTick>
  return HAL_OK;
 800be98:	2000      	movs	r0, #0
}
 800be9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800be9e:	0198      	lsls	r0, r3, #6
 800bea0:	d4b1      	bmi.n	800be06 <HAL_RCC_ClockConfig+0x76>
 800bea2:	e789      	b.n	800bdb8 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800bea4:	2001      	movs	r0, #1
}
 800bea6:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bea8:	4b04      	ldr	r3, [pc, #16]	; (800bebc <HAL_RCC_ClockConfig+0x12c>)
 800beaa:	681b      	ldr	r3, [r3, #0]
 800beac:	039e      	lsls	r6, r3, #14
 800beae:	d4aa      	bmi.n	800be06 <HAL_RCC_ClockConfig+0x76>
 800beb0:	e782      	b.n	800bdb8 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800beb2:	2003      	movs	r0, #3
 800beb4:	e781      	b.n	800bdba <HAL_RCC_ClockConfig+0x2a>
 800beb6:	bf00      	nop
 800beb8:	40023c00 	.word	0x40023c00
 800bebc:	40023800 	.word	0x40023800
 800bec0:	0802ec90 	.word	0x0802ec90
 800bec4:	20000078 	.word	0x20000078
 800bec8:	20000080 	.word	0x20000080

0800becc <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800becc:	4b04      	ldr	r3, [pc, #16]	; (800bee0 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800bece:	4905      	ldr	r1, [pc, #20]	; (800bee4 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800bed0:	689b      	ldr	r3, [r3, #8]
 800bed2:	4a05      	ldr	r2, [pc, #20]	; (800bee8 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800bed4:	6808      	ldr	r0, [r1, #0]
 800bed6:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800beda:	5cd3      	ldrb	r3, [r2, r3]
}
 800bedc:	40d8      	lsrs	r0, r3
 800bede:	4770      	bx	lr
 800bee0:	40023800 	.word	0x40023800
 800bee4:	20000078 	.word	0x20000078
 800bee8:	0802eca0 	.word	0x0802eca0

0800beec <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800beec:	4b0e      	ldr	r3, [pc, #56]	; (800bf28 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800beee:	220f      	movs	r2, #15
 800bef0:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800bef2:	689a      	ldr	r2, [r3, #8]
 800bef4:	f002 0203 	and.w	r2, r2, #3
 800bef8:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800befa:	689a      	ldr	r2, [r3, #8]
 800befc:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800bf00:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800bf02:	689a      	ldr	r2, [r3, #8]
 800bf04:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800bf08:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800bf0a:	689b      	ldr	r3, [r3, #8]
 800bf0c:	08db      	lsrs	r3, r3, #3
{
 800bf0e:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800bf10:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800bf14:	4c05      	ldr	r4, [pc, #20]	; (800bf2c <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800bf16:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800bf18:	6823      	ldr	r3, [r4, #0]
}
 800bf1a:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800bf1e:	f003 030f 	and.w	r3, r3, #15
 800bf22:	600b      	str	r3, [r1, #0]
}
 800bf24:	4770      	bx	lr
 800bf26:	bf00      	nop
 800bf28:	40023800 	.word	0x40023800
 800bf2c:	40023c00 	.word	0x40023c00

0800bf30 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800bf30:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800bf32:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800bf34:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800bf38:	b083      	sub	sp, #12
 800bf3a:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800bf3c:	d111      	bne.n	800bf62 <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800bf3e:	f013 0f0c 	tst.w	r3, #12
 800bf42:	d16f      	bne.n	800c024 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800bf44:	0698      	lsls	r0, r3, #26
 800bf46:	f100 80c2 	bmi.w	800c0ce <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800bf4a:	f013 0310 	ands.w	r3, r3, #16
 800bf4e:	f000 80bb 	beq.w	800c0c8 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800bf52:	4b89      	ldr	r3, [pc, #548]	; (800c178 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800bf54:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800bf58:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800bf5c:	2000      	movs	r0, #0
}
 800bf5e:	b003      	add	sp, #12
 800bf60:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800bf62:	4b86      	ldr	r3, [pc, #536]	; (800c17c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800bf64:	4e86      	ldr	r6, [pc, #536]	; (800c180 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800bf66:	2200      	movs	r2, #0
 800bf68:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800bf6a:	f7fd fadf 	bl	800952c <HAL_GetTick>
 800bf6e:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800bf70:	e004      	b.n	800bf7c <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800bf72:	f7fd fadb 	bl	800952c <HAL_GetTick>
 800bf76:	1b43      	subs	r3, r0, r5
 800bf78:	2b02      	cmp	r3, #2
 800bf7a:	d850      	bhi.n	800c01e <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800bf7c:	6833      	ldr	r3, [r6, #0]
 800bf7e:	0118      	lsls	r0, r3, #4
 800bf80:	d4f7      	bmi.n	800bf72 <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800bf82:	6823      	ldr	r3, [r4, #0]
 800bf84:	07d9      	lsls	r1, r3, #31
 800bf86:	d506      	bpl.n	800bf96 <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800bf88:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800bf8c:	0712      	lsls	r2, r2, #28
 800bf8e:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800bf92:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800bf96:	079a      	lsls	r2, r3, #30
 800bf98:	d515      	bpl.n	800bfc6 <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800bf9a:	4979      	ldr	r1, [pc, #484]	; (800c180 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800bf9c:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800bf9e:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800bfa2:	6865      	ldr	r5, [r4, #4]
 800bfa4:	0612      	lsls	r2, r2, #24
 800bfa6:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800bfaa:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800bfae:	4302      	orrs	r2, r0
 800bfb0:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800bfb4:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800bfb8:	69e2      	ldr	r2, [r4, #28]
 800bfba:	f020 001f 	bic.w	r0, r0, #31
 800bfbe:	3a01      	subs	r2, #1
 800bfc0:	4302      	orrs	r2, r0
 800bfc2:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800bfc6:	065b      	lsls	r3, r3, #25
 800bfc8:	d509      	bpl.n	800bfde <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800bfca:	1d20      	adds	r0, r4, #4
 800bfcc:	c80b      	ldmia	r0, {r0, r1, r3}
 800bfce:	061b      	lsls	r3, r3, #24
 800bfd0:	4a6b      	ldr	r2, [pc, #428]	; (800c180 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800bfd2:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800bfd6:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800bfda:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800bfde:	4b67      	ldr	r3, [pc, #412]	; (800c17c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800bfe0:	4e67      	ldr	r6, [pc, #412]	; (800c180 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800bfe2:	2201      	movs	r2, #1
 800bfe4:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800bfe6:	f7fd faa1 	bl	800952c <HAL_GetTick>
 800bfea:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800bfec:	e004      	b.n	800bff8 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800bfee:	f7fd fa9d 	bl	800952c <HAL_GetTick>
 800bff2:	1b40      	subs	r0, r0, r5
 800bff4:	2802      	cmp	r0, #2
 800bff6:	d812      	bhi.n	800c01e <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800bff8:	6833      	ldr	r3, [r6, #0]
 800bffa:	011f      	lsls	r7, r3, #4
 800bffc:	d5f7      	bpl.n	800bfee <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800bffe:	6823      	ldr	r3, [r4, #0]
 800c000:	e79d      	b.n	800bf3e <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800c002:	f7fd fa93 	bl	800952c <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c006:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800c00a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c00c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c00e:	079b      	lsls	r3, r3, #30
 800c010:	f100 80a5 	bmi.w	800c15e <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c014:	f7fd fa8a 	bl	800952c <HAL_GetTick>
 800c018:	1b80      	subs	r0, r0, r6
 800c01a:	42b8      	cmp	r0, r7
 800c01c:	d9f6      	bls.n	800c00c <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800c01e:	2003      	movs	r0, #3
}
 800c020:	b003      	add	sp, #12
 800c022:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800c024:	4b55      	ldr	r3, [pc, #340]	; (800c17c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c026:	4e56      	ldr	r6, [pc, #344]	; (800c180 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800c028:	2200      	movs	r2, #0
 800c02a:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c02c:	f7fd fa7e 	bl	800952c <HAL_GetTick>
 800c030:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c032:	e004      	b.n	800c03e <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c034:	f7fd fa7a 	bl	800952c <HAL_GetTick>
 800c038:	1b43      	subs	r3, r0, r5
 800c03a:	2b02      	cmp	r3, #2
 800c03c:	d8ef      	bhi.n	800c01e <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c03e:	6833      	ldr	r3, [r6, #0]
 800c040:	0098      	lsls	r0, r3, #2
 800c042:	d4f7      	bmi.n	800c034 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800c044:	6822      	ldr	r2, [r4, #0]
 800c046:	0751      	lsls	r1, r2, #29
 800c048:	d515      	bpl.n	800c076 <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c04a:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800c04c:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c050:	6920      	ldr	r0, [r4, #16]
 800c052:	061b      	lsls	r3, r3, #24
 800c054:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800c058:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c05c:	430b      	orrs	r3, r1
 800c05e:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800c062:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800c066:	6a21      	ldr	r1, [r4, #32]
 800c068:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800c06c:	3901      	subs	r1, #1
 800c06e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800c072:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800c076:	0713      	lsls	r3, r2, #28
 800c078:	d514      	bpl.n	800c0a4 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c07a:	4a41      	ldr	r2, [pc, #260]	; (800c180 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c07c:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c07e:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c082:	6920      	ldr	r0, [r4, #16]
 800c084:	071b      	lsls	r3, r3, #28
 800c086:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800c08a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c08e:	430b      	orrs	r3, r1
 800c090:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800c094:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800c098:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c09a:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800c09e:	430b      	orrs	r3, r1
 800c0a0:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800c0a4:	4b35      	ldr	r3, [pc, #212]	; (800c17c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c0a6:	4e36      	ldr	r6, [pc, #216]	; (800c180 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800c0a8:	2201      	movs	r2, #1
 800c0aa:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c0ac:	f7fd fa3e 	bl	800952c <HAL_GetTick>
 800c0b0:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c0b2:	e004      	b.n	800c0be <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c0b4:	f7fd fa3a 	bl	800952c <HAL_GetTick>
 800c0b8:	1b40      	subs	r0, r0, r5
 800c0ba:	2802      	cmp	r0, #2
 800c0bc:	d8af      	bhi.n	800c01e <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c0be:	6833      	ldr	r3, [r6, #0]
 800c0c0:	009f      	lsls	r7, r3, #2
 800c0c2:	d5f7      	bpl.n	800c0b4 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c0c4:	6823      	ldr	r3, [r4, #0]
 800c0c6:	e73d      	b.n	800bf44 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800c0c8:	4618      	mov	r0, r3
}
 800c0ca:	b003      	add	sp, #12
 800c0cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800c0ce:	4b2c      	ldr	r3, [pc, #176]	; (800c180 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800c0d0:	4d2c      	ldr	r5, [pc, #176]	; (800c184 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800c0d2:	2200      	movs	r2, #0
 800c0d4:	9201      	str	r2, [sp, #4]
 800c0d6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c0d8:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800c0dc:	641a      	str	r2, [r3, #64]	; 0x40
 800c0de:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c0e0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c0e4:	9301      	str	r3, [sp, #4]
 800c0e6:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800c0e8:	682b      	ldr	r3, [r5, #0]
 800c0ea:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c0ee:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c0f0:	f7fd fa1c 	bl	800952c <HAL_GetTick>
 800c0f4:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c0f6:	e004      	b.n	800c102 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800c0f8:	f7fd fa18 	bl	800952c <HAL_GetTick>
 800c0fc:	1b83      	subs	r3, r0, r6
 800c0fe:	2b02      	cmp	r3, #2
 800c100:	d88d      	bhi.n	800c01e <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c102:	682b      	ldr	r3, [r5, #0]
 800c104:	05d9      	lsls	r1, r3, #23
 800c106:	d5f7      	bpl.n	800c0f8 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c108:	4d1d      	ldr	r5, [pc, #116]	; (800c180 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c10a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c10c:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c10e:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800c112:	d111      	bne.n	800c138 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c114:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800c118:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800c11c:	d021      	beq.n	800c162 <HAL_RCCEx_PeriphCLKConfig+0x232>
 800c11e:	4918      	ldr	r1, [pc, #96]	; (800c180 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c120:	688a      	ldr	r2, [r1, #8]
 800c122:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c126:	608a      	str	r2, [r1, #8]
 800c128:	4a15      	ldr	r2, [pc, #84]	; (800c180 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c12a:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800c12c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c130:	430b      	orrs	r3, r1
 800c132:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c134:	6823      	ldr	r3, [r4, #0]
 800c136:	e708      	b.n	800bf4a <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c138:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800c13c:	4291      	cmp	r1, r2
 800c13e:	d0eb      	beq.n	800c118 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c140:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800c142:	4a0e      	ldr	r2, [pc, #56]	; (800c17c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800c144:	2101      	movs	r1, #1
 800c146:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c14a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800c14e:	2100      	movs	r1, #0
 800c150:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800c154:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800c156:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c158:	07da      	lsls	r2, r3, #31
 800c15a:	f53f af52 	bmi.w	800c002 <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c15e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800c160:	e7d8      	b.n	800c114 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800c162:	4807      	ldr	r0, [pc, #28]	; (800c180 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c164:	6882      	ldr	r2, [r0, #8]
 800c166:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800c16a:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800c16e:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c172:	430a      	orrs	r2, r1
 800c174:	6082      	str	r2, [r0, #8]
 800c176:	e7d7      	b.n	800c128 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800c178:	42471000 	.word	0x42471000
 800c17c:	42470000 	.word	0x42470000
 800c180:	40023800 	.word	0x40023800
 800c184:	40007000 	.word	0x40007000

0800c188 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800c188:	b1f0      	cbz	r0, 800c1c8 <HAL_SDRAM_Init+0x40>
{
 800c18a:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800c18c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c190:	460d      	mov	r5, r1
 800c192:	4604      	mov	r4, r0
 800c194:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c198:	b18b      	cbz	r3, 800c1be <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c19a:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c19c:	2302      	movs	r3, #2
 800c19e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c1a2:	f851 0b04 	ldr.w	r0, [r1], #4
 800c1a6:	f000 ffcd 	bl	800d144 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800c1aa:	e9d4 0200 	ldrd	r0, r2, [r4]
 800c1ae:	4629      	mov	r1, r5
 800c1b0:	f001 f806 	bl	800d1c0 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800c1b4:	2301      	movs	r3, #1
 800c1b6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800c1ba:	2000      	movs	r0, #0
}
 800c1bc:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800c1be:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800c1c2:	f7f5 fbd3 	bl	800196c <HAL_SDRAM_MspInit>
 800c1c6:	e7e8      	b.n	800c19a <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800c1c8:	2001      	movs	r0, #1
}
 800c1ca:	4770      	bx	lr

0800c1cc <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800c1cc:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c1ce:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800c1d2:	2b02      	cmp	r3, #2
{
 800c1d4:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c1d6:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800c1d8:	d004      	beq.n	800c1e4 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800c1da:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800c1de:	2c01      	cmp	r4, #1
 800c1e0:	d001      	beq.n	800c1e6 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800c1e2:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c1e4:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c1e6:	460e      	mov	r6, r1
 800c1e8:	2302      	movs	r3, #2
 800c1ea:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800c1ee:	6828      	ldr	r0, [r5, #0]
 800c1f0:	f001 f832 	bl	800d258 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800c1f4:	6833      	ldr	r3, [r6, #0]
 800c1f6:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800c1f8:	bf06      	itte	eq
 800c1fa:	2305      	moveq	r3, #5
 800c1fc:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800c200:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800c204:	2000      	movs	r0, #0
}
 800c206:	bd70      	pop	{r4, r5, r6, pc}

0800c208 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800c208:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c20a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c20e:	2b02      	cmp	r3, #2
{
 800c210:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c212:	b2d8      	uxtb	r0, r3
 800c214:	d005      	beq.n	800c222 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800c216:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800c21a:	2b01      	cmp	r3, #1
 800c21c:	b2dd      	uxtb	r5, r3
 800c21e:	d001      	beq.n	800c224 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800c220:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c222:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c224:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c226:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c228:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c22c:	f001 f83e 	bl	800d2ac <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800c230:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800c234:	2000      	movs	r0, #0
}
 800c236:	bd38      	pop	{r3, r4, r5, pc}

0800c238 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800c238:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c23c:	b082      	sub	sp, #8
 800c23e:	461d      	mov	r5, r3
 800c240:	4616      	mov	r6, r2
 800c242:	460c      	mov	r4, r1
 800c244:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800c246:	f7fd f971 	bl	800952c <HAL_GetTick>
 800c24a:	4435      	add	r5, r6
 800c24c:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800c24e:	f7fd f96d 	bl	800952c <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c252:	4b27      	ldr	r3, [pc, #156]	; (800c2f0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800c254:	681b      	ldr	r3, [r3, #0]
 800c256:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800c25a:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800c25e:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c260:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800c262:	1c73      	adds	r3, r6, #1
 800c264:	6839      	ldr	r1, [r7, #0]
 800c266:	d107      	bne.n	800c278 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800c268:	688b      	ldr	r3, [r1, #8]
 800c26a:	ea34 0303 	bics.w	r3, r4, r3
 800c26e:	d0fb      	beq.n	800c268 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800c270:	2000      	movs	r0, #0
}
 800c272:	b002      	add	sp, #8
 800c274:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800c278:	688b      	ldr	r3, [r1, #8]
 800c27a:	ea34 0303 	bics.w	r3, r4, r3
 800c27e:	d1f7      	bne.n	800c270 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800c280:	f7fd f954 	bl	800952c <HAL_GetTick>
 800c284:	eba0 0008 	sub.w	r0, r0, r8
 800c288:	42a8      	cmp	r0, r5
 800c28a:	d208      	bcs.n	800c29e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800c28c:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800c28e:	2b00      	cmp	r3, #0
      count--;
 800c290:	9b01      	ldr	r3, [sp, #4]
 800c292:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800c296:	bf08      	it	eq
 800c298:	2500      	moveq	r5, #0
      count--;
 800c29a:	9301      	str	r3, [sp, #4]
 800c29c:	e7e1      	b.n	800c262 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c29e:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800c2a2:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c2a4:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800c2a8:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800c2ac:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c2ae:	d013      	beq.n	800c2d8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800c2b0:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800c2b2:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800c2b6:	d107      	bne.n	800c2c8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800c2b8:	681a      	ldr	r2, [r3, #0]
 800c2ba:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800c2be:	601a      	str	r2, [r3, #0]
 800c2c0:	681a      	ldr	r2, [r3, #0]
 800c2c2:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800c2c6:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800c2c8:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800c2ca:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800c2cc:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800c2d0:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800c2d4:	2003      	movs	r0, #3
 800c2d6:	e7cc      	b.n	800c272 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c2d8:	68ba      	ldr	r2, [r7, #8]
 800c2da:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800c2de:	d002      	beq.n	800c2e6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800c2e0:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800c2e4:	d1e4      	bne.n	800c2b0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800c2e6:	681a      	ldr	r2, [r3, #0]
 800c2e8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c2ec:	601a      	str	r2, [r3, #0]
 800c2ee:	e7df      	b.n	800c2b0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800c2f0:	20000078 	.word	0x20000078

0800c2f4 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800c2f4:	b538      	push	{r3, r4, r5, lr}
 800c2f6:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c2f8:	6842      	ldr	r2, [r0, #4]
 800c2fa:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800c2fe:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c300:	d006      	beq.n	800c310 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c302:	460a      	mov	r2, r1
 800c304:	2101      	movs	r1, #1
 800c306:	f7ff ff97 	bl	800c238 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c30a:	b978      	cbnz	r0, 800c32c <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800c30c:	2000      	movs	r0, #0
}
 800c30e:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c310:	6882      	ldr	r2, [r0, #8]
 800c312:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800c316:	d01c      	beq.n	800c352 <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800c318:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800c31c:	d00c      	beq.n	800c338 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c31e:	460a      	mov	r2, r1
 800c320:	4620      	mov	r0, r4
 800c322:	2180      	movs	r1, #128	; 0x80
 800c324:	f7ff ff88 	bl	800c238 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c328:	2800      	cmp	r0, #0
 800c32a:	d0ef      	beq.n	800c30c <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c32c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800c32e:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800c332:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c334:	6563      	str	r3, [r4, #84]	; 0x54
}
 800c336:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800c338:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c33a:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800c33c:	6829      	ldr	r1, [r5, #0]
 800c33e:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800c342:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c344:	2101      	movs	r1, #1
 800c346:	f7ff ff77 	bl	800c238 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c34a:	2800      	cmp	r0, #0
 800c34c:	d1ee      	bne.n	800c32c <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800c34e:	2000      	movs	r0, #0
 800c350:	e7dd      	b.n	800c30e <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800c352:	6800      	ldr	r0, [r0, #0]
 800c354:	6802      	ldr	r2, [r0, #0]
 800c356:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c35a:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c35c:	460a      	mov	r2, r1
 800c35e:	4620      	mov	r0, r4
 800c360:	2180      	movs	r1, #128	; 0x80
 800c362:	f7ff ff69 	bl	800c238 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c366:	2800      	cmp	r0, #0
 800c368:	d0d0      	beq.n	800c30c <SPI_EndRxTransaction+0x18>
 800c36a:	e7df      	b.n	800c32c <SPI_EndRxTransaction+0x38>

0800c36c <HAL_SPI_Init>:
  if (hspi == NULL)
 800c36c:	2800      	cmp	r0, #0
 800c36e:	d05c      	beq.n	800c42a <HAL_SPI_Init+0xbe>
{
 800c370:	b570      	push	{r4, r5, r6, lr}
 800c372:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800c374:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800c376:	2800      	cmp	r0, #0
 800c378:	d047      	beq.n	800c40a <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800c37a:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800c37c:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800c380:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800c384:	2200      	movs	r2, #0
 800c386:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800c388:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800c38c:	2b00      	cmp	r3, #0
 800c38e:	d042      	beq.n	800c416 <HAL_SPI_Init+0xaa>
 800c390:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800c392:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c394:	68a5      	ldr	r5, [r4, #8]
 800c396:	69a2      	ldr	r2, [r4, #24]
 800c398:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800c39a:	2302      	movs	r3, #2
 800c39c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800c3a0:	680b      	ldr	r3, [r1, #0]
 800c3a2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c3a6:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c3a8:	6863      	ldr	r3, [r4, #4]
 800c3aa:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800c3ae:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800c3b2:	432b      	orrs	r3, r5
 800c3b4:	68e5      	ldr	r5, [r4, #12]
 800c3b6:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800c3ba:	432b      	orrs	r3, r5
 800c3bc:	6925      	ldr	r5, [r4, #16]
 800c3be:	f005 0502 	and.w	r5, r5, #2
 800c3c2:	432b      	orrs	r3, r5
 800c3c4:	6965      	ldr	r5, [r4, #20]
 800c3c6:	f005 0501 	and.w	r5, r5, #1
 800c3ca:	432b      	orrs	r3, r5
 800c3cc:	69e5      	ldr	r5, [r4, #28]
 800c3ce:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800c3d2:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800c3d6:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800c3da:	4333      	orrs	r3, r6
 800c3dc:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c3de:	0c12      	lsrs	r2, r2, #16
 800c3e0:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c3e4:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c3e8:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c3ec:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c3f0:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c3f2:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c3f4:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c3f6:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c3f8:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c3fa:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800c3fe:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c400:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c402:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800c404:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800c408:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c40a:	6863      	ldr	r3, [r4, #4]
 800c40c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800c410:	d0b6      	beq.n	800c380 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800c412:	61e0      	str	r0, [r4, #28]
 800c414:	e7b4      	b.n	800c380 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800c416:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800c418:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800c41c:	f7f5 fa20 	bl	8001860 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c420:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c424:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800c428:	e7b3      	b.n	800c392 <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800c42a:	2001      	movs	r0, #1
}
 800c42c:	4770      	bx	lr
 800c42e:	bf00      	nop

0800c430 <HAL_SPI_Transmit>:
{
 800c430:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c434:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800c436:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800c43a:	2801      	cmp	r0, #1
{
 800c43c:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800c43e:	f000 8085 	beq.w	800c54c <HAL_SPI_Transmit+0x11c>
 800c442:	461d      	mov	r5, r3
 800c444:	2301      	movs	r3, #1
 800c446:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c44a:	4688      	mov	r8, r1
 800c44c:	4617      	mov	r7, r2
 800c44e:	f7fd f86d 	bl	800952c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c452:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800c456:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800c458:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c45a:	b2d8      	uxtb	r0, r3
 800c45c:	d009      	beq.n	800c472 <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800c45e:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c460:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c462:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c464:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c468:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c46c:	b002      	add	sp, #8
 800c46e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c472:	f1b8 0f00 	cmp.w	r8, #0
 800c476:	d0f3      	beq.n	800c460 <HAL_SPI_Transmit+0x30>
 800c478:	2f00      	cmp	r7, #0
 800c47a:	d0f1      	beq.n	800c460 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c47c:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800c47e:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800c480:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c484:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800c486:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c488:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800c48c:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800c490:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c494:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800c496:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800c498:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800c49a:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800c49c:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800c49e:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c4a0:	f000 8085 	beq.w	800c5ae <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c4a4:	6803      	ldr	r3, [r0, #0]
 800c4a6:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800c4a8:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c4aa:	d403      	bmi.n	800c4b4 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800c4ac:	6803      	ldr	r3, [r0, #0]
 800c4ae:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c4b2:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800c4b4:	68e3      	ldr	r3, [r4, #12]
 800c4b6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800c4ba:	d04b      	beq.n	800c554 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c4bc:	6863      	ldr	r3, [r4, #4]
 800c4be:	2b00      	cmp	r3, #0
 800c4c0:	f000 8097 	beq.w	800c5f2 <HAL_SPI_Transmit+0x1c2>
 800c4c4:	2f01      	cmp	r7, #1
 800c4c6:	f000 8094 	beq.w	800c5f2 <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800c4ca:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c4cc:	b29b      	uxth	r3, r3
 800c4ce:	b1ab      	cbz	r3, 800c4fc <HAL_SPI_Transmit+0xcc>
 800c4d0:	1c68      	adds	r0, r5, #1
 800c4d2:	f040 8083 	bne.w	800c5dc <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c4d6:	6823      	ldr	r3, [r4, #0]
 800c4d8:	689a      	ldr	r2, [r3, #8]
 800c4da:	0791      	lsls	r1, r2, #30
 800c4dc:	f140 8094 	bpl.w	800c608 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c4e0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c4e2:	7812      	ldrb	r2, [r2, #0]
 800c4e4:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800c4e6:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c4e8:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c4ea:	3901      	subs	r1, #1
 800c4ec:	b289      	uxth	r1, r1
 800c4ee:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c4f0:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c4f2:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800c4f4:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c4f6:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800c4f8:	2900      	cmp	r1, #0
 800c4fa:	d1ec      	bne.n	800c4d6 <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c4fc:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c4fe:	4b5b      	ldr	r3, [pc, #364]	; (800c66c <HAL_SPI_Transmit+0x23c>)
 800c500:	4a5b      	ldr	r2, [pc, #364]	; (800c670 <HAL_SPI_Transmit+0x240>)
 800c502:	681b      	ldr	r3, [r3, #0]
 800c504:	fba2 2303 	umull	r2, r3, r2, r3
 800c508:	0d5b      	lsrs	r3, r3, #21
 800c50a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800c50e:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c512:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c516:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c518:	d107      	bne.n	800c52a <HAL_SPI_Transmit+0xfa>
 800c51a:	e098      	b.n	800c64e <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800c51c:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c51e:	6822      	ldr	r2, [r4, #0]
      count--;
 800c520:	3b01      	subs	r3, #1
 800c522:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c524:	6893      	ldr	r3, [r2, #8]
 800c526:	061b      	lsls	r3, r3, #24
 800c528:	d502      	bpl.n	800c530 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800c52a:	9b01      	ldr	r3, [sp, #4]
 800c52c:	2b00      	cmp	r3, #0
 800c52e:	d1f5      	bne.n	800c51c <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800c530:	68a3      	ldr	r3, [r4, #8]
 800c532:	b933      	cbnz	r3, 800c542 <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800c534:	6822      	ldr	r2, [r4, #0]
 800c536:	9300      	str	r3, [sp, #0]
 800c538:	68d3      	ldr	r3, [r2, #12]
 800c53a:	9300      	str	r3, [sp, #0]
 800c53c:	6893      	ldr	r3, [r2, #8]
 800c53e:	9300      	str	r3, [sp, #0]
 800c540:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c542:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c544:	3800      	subs	r0, #0
 800c546:	bf18      	it	ne
 800c548:	2001      	movne	r0, #1
error:
 800c54a:	e789      	b.n	800c460 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800c54c:	2002      	movs	r0, #2
}
 800c54e:	b002      	add	sp, #8
 800c550:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c554:	6861      	ldr	r1, [r4, #4]
 800c556:	2900      	cmp	r1, #0
 800c558:	d176      	bne.n	800c648 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c55a:	4643      	mov	r3, r8
 800c55c:	f833 7b02 	ldrh.w	r7, [r3], #2
 800c560:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c562:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c564:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c566:	3b01      	subs	r3, #1
 800c568:	b29b      	uxth	r3, r3
 800c56a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c56c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c56e:	b29b      	uxth	r3, r3
 800c570:	2b00      	cmp	r3, #0
 800c572:	d0c4      	beq.n	800c4fe <HAL_SPI_Transmit+0xce>
 800c574:	1c6b      	adds	r3, r5, #1
 800c576:	d15e      	bne.n	800c636 <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c578:	6883      	ldr	r3, [r0, #8]
 800c57a:	079f      	lsls	r7, r3, #30
 800c57c:	d50f      	bpl.n	800c59e <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c57e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c580:	f832 3b02 	ldrh.w	r3, [r2], #2
 800c584:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800c586:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c588:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c58a:	3b01      	subs	r3, #1
 800c58c:	b29b      	uxth	r3, r3
 800c58e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c590:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c592:	b29b      	uxth	r3, r3
 800c594:	2b00      	cmp	r3, #0
 800c596:	d0b1      	beq.n	800c4fc <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c598:	6883      	ldr	r3, [r0, #8]
 800c59a:	079f      	lsls	r7, r3, #30
 800c59c:	d4ef      	bmi.n	800c57e <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c59e:	f7fc ffc5 	bl	800952c <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800c5a2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c5a4:	b29b      	uxth	r3, r3
 800c5a6:	2b00      	cmp	r3, #0
 800c5a8:	d0a8      	beq.n	800c4fc <HAL_SPI_Transmit+0xcc>
 800c5aa:	6820      	ldr	r0, [r4, #0]
 800c5ac:	e7e4      	b.n	800c578 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800c5ae:	6803      	ldr	r3, [r0, #0]
 800c5b0:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c5b4:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800c5b6:	6803      	ldr	r3, [r0, #0]
 800c5b8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800c5bc:	6003      	str	r3, [r0, #0]
 800c5be:	e771      	b.n	800c4a4 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c5c0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c5c2:	7812      	ldrb	r2, [r2, #0]
 800c5c4:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800c5c6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c5c8:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c5ca:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c5cc:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c5ce:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c5d0:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c5d2:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c5d4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c5d6:	b29b      	uxth	r3, r3
 800c5d8:	2b00      	cmp	r3, #0
 800c5da:	d08f      	beq.n	800c4fc <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c5dc:	6823      	ldr	r3, [r4, #0]
 800c5de:	689a      	ldr	r2, [r3, #8]
 800c5e0:	0792      	lsls	r2, r2, #30
 800c5e2:	d4ed      	bmi.n	800c5c0 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c5e4:	f7fc ffa2 	bl	800952c <HAL_GetTick>
 800c5e8:	1b80      	subs	r0, r0, r6
 800c5ea:	42a8      	cmp	r0, r5
 800c5ec:	d3f2      	bcc.n	800c5d4 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800c5ee:	2003      	movs	r0, #3
 800c5f0:	e736      	b.n	800c460 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c5f2:	f898 3000 	ldrb.w	r3, [r8]
 800c5f6:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800c5f8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c5fa:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c5fc:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c5fe:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800c600:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c602:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c604:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c606:	e760      	b.n	800c4ca <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c608:	f7fc ff90 	bl	800952c <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800c60c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c60e:	b29b      	uxth	r3, r3
 800c610:	2b00      	cmp	r3, #0
 800c612:	f47f af60 	bne.w	800c4d6 <HAL_SPI_Transmit+0xa6>
 800c616:	e771      	b.n	800c4fc <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c618:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c61a:	f831 3b02 	ldrh.w	r3, [r1], #2
 800c61e:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800c620:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c622:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c624:	3b01      	subs	r3, #1
 800c626:	b29b      	uxth	r3, r3
 800c628:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c62a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c62c:	b29b      	uxth	r3, r3
 800c62e:	2b00      	cmp	r3, #0
 800c630:	f43f af64 	beq.w	800c4fc <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c634:	6822      	ldr	r2, [r4, #0]
 800c636:	6893      	ldr	r3, [r2, #8]
 800c638:	0799      	lsls	r1, r3, #30
 800c63a:	d4ed      	bmi.n	800c618 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c63c:	f7fc ff76 	bl	800952c <HAL_GetTick>
 800c640:	1b80      	subs	r0, r0, r6
 800c642:	42a8      	cmp	r0, r5
 800c644:	d3f1      	bcc.n	800c62a <HAL_SPI_Transmit+0x1fa>
 800c646:	e7d2      	b.n	800c5ee <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c648:	2f01      	cmp	r7, #1
 800c64a:	d18f      	bne.n	800c56c <HAL_SPI_Transmit+0x13c>
 800c64c:	e785      	b.n	800c55a <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c64e:	4633      	mov	r3, r6
 800c650:	462a      	mov	r2, r5
 800c652:	2180      	movs	r1, #128	; 0x80
 800c654:	4620      	mov	r0, r4
 800c656:	f7ff fdef 	bl	800c238 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c65a:	2800      	cmp	r0, #0
 800c65c:	f43f af68 	beq.w	800c530 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c660:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c662:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c664:	4313      	orrs	r3, r2
 800c666:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c668:	6562      	str	r2, [r4, #84]	; 0x54
 800c66a:	e761      	b.n	800c530 <HAL_SPI_Transmit+0x100>
 800c66c:	20000078 	.word	0x20000078
 800c670:	165e9f81 	.word	0x165e9f81

0800c674 <HAL_SPI_TransmitReceive>:
{
 800c674:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c678:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800c67a:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800c67e:	2801      	cmp	r0, #1
{
 800c680:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800c682:	f000 80ac 	beq.w	800c7de <HAL_SPI_TransmitReceive+0x16a>
 800c686:	461e      	mov	r6, r3
 800c688:	2301      	movs	r3, #1
 800c68a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c68e:	4690      	mov	r8, r2
 800c690:	460f      	mov	r7, r1
 800c692:	f7fc ff4b 	bl	800952c <HAL_GetTick>
 800c696:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800c698:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800c69c:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800c69e:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800c6a0:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800c6a2:	d011      	beq.n	800c6c8 <HAL_SPI_TransmitReceive+0x54>
 800c6a4:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800c6a8:	d009      	beq.n	800c6be <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800c6aa:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c6ac:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c6ae:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c6b0:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c6b4:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c6b8:	b002      	add	sp, #8
 800c6ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800c6be:	68a1      	ldr	r1, [r4, #8]
 800c6c0:	2900      	cmp	r1, #0
 800c6c2:	d1f2      	bne.n	800c6aa <HAL_SPI_TransmitReceive+0x36>
 800c6c4:	2a04      	cmp	r2, #4
 800c6c6:	d1f0      	bne.n	800c6aa <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800c6c8:	2f00      	cmp	r7, #0
 800c6ca:	f000 808c 	beq.w	800c7e6 <HAL_SPI_TransmitReceive+0x172>
 800c6ce:	f1b8 0f00 	cmp.w	r8, #0
 800c6d2:	f000 8088 	beq.w	800c7e6 <HAL_SPI_TransmitReceive+0x172>
 800c6d6:	2e00      	cmp	r6, #0
 800c6d8:	f000 8085 	beq.w	800c7e6 <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800c6dc:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800c6e0:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800c6e4:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800c6e6:	bf1c      	itt	ne
 800c6e8:	2205      	movne	r2, #5
 800c6ea:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c6ee:	2200      	movs	r2, #0
 800c6f0:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800c6f2:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c6f6:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800c6f8:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800c6fa:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c6fc:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800c6fe:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c700:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800c702:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800c704:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c706:	d403      	bmi.n	800c710 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800c708:	6811      	ldr	r1, [r2, #0]
 800c70a:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800c70e:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800c710:	68e1      	ldr	r1, [r4, #12]
 800c712:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800c716:	f000 809e 	beq.w	800c856 <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c71a:	2b00      	cmp	r3, #0
 800c71c:	f000 8091 	beq.w	800c842 <HAL_SPI_TransmitReceive+0x1ce>
 800c720:	2e01      	cmp	r6, #1
 800c722:	f000 808e 	beq.w	800c842 <HAL_SPI_TransmitReceive+0x1ce>
 800c726:	9b08      	ldr	r3, [sp, #32]
 800c728:	3301      	adds	r3, #1
        txallowed = 1U;
 800c72a:	f04f 0601 	mov.w	r6, #1
 800c72e:	d028      	beq.n	800c782 <HAL_SPI_TransmitReceive+0x10e>
 800c730:	e05b      	b.n	800c7ea <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c732:	6821      	ldr	r1, [r4, #0]
 800c734:	688b      	ldr	r3, [r1, #8]
 800c736:	0798      	lsls	r0, r3, #30
 800c738:	d50f      	bpl.n	800c75a <HAL_SPI_TransmitReceive+0xe6>
 800c73a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c73c:	b29b      	uxth	r3, r3
 800c73e:	b163      	cbz	r3, 800c75a <HAL_SPI_TransmitReceive+0xe6>
 800c740:	b15e      	cbz	r6, 800c75a <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800c742:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c744:	781b      	ldrb	r3, [r3, #0]
 800c746:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800c748:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c74a:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c74c:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800c74e:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800c750:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c752:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800c754:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800c756:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c758:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c75a:	688a      	ldr	r2, [r1, #8]
 800c75c:	f012 0201 	ands.w	r2, r2, #1
 800c760:	d00d      	beq.n	800c77e <HAL_SPI_TransmitReceive+0x10a>
 800c762:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c764:	b29b      	uxth	r3, r3
 800c766:	b153      	cbz	r3, 800c77e <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800c768:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c76a:	68c9      	ldr	r1, [r1, #12]
 800c76c:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800c76e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800c770:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c772:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800c774:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800c776:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800c778:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c77a:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800c77c:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800c77e:	f7fc fed5 	bl	800952c <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c782:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800c784:	b292      	uxth	r2, r2
 800c786:	2a00      	cmp	r2, #0
 800c788:	d1d3      	bne.n	800c732 <HAL_SPI_TransmitReceive+0xbe>
 800c78a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c78c:	b29b      	uxth	r3, r3
 800c78e:	2b00      	cmp	r3, #0
 800c790:	d1cf      	bne.n	800c732 <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c792:	4b79      	ldr	r3, [pc, #484]	; (800c978 <HAL_SPI_TransmitReceive+0x304>)
 800c794:	4a79      	ldr	r2, [pc, #484]	; (800c97c <HAL_SPI_TransmitReceive+0x308>)
 800c796:	681b      	ldr	r3, [r3, #0]
 800c798:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c79c:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c79e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800c7a2:	0d5b      	lsrs	r3, r3, #21
 800c7a4:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c7a8:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c7ac:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c7ae:	d107      	bne.n	800c7c0 <HAL_SPI_TransmitReceive+0x14c>
 800c7b0:	e0d2      	b.n	800c958 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800c7b2:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c7b4:	6822      	ldr	r2, [r4, #0]
      count--;
 800c7b6:	3b01      	subs	r3, #1
 800c7b8:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c7ba:	6893      	ldr	r3, [r2, #8]
 800c7bc:	061b      	lsls	r3, r3, #24
 800c7be:	d502      	bpl.n	800c7c6 <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800c7c0:	9b01      	ldr	r3, [sp, #4]
 800c7c2:	2b00      	cmp	r3, #0
 800c7c4:	d1f5      	bne.n	800c7b2 <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800c7c6:	68a0      	ldr	r0, [r4, #8]
 800c7c8:	2800      	cmp	r0, #0
 800c7ca:	f040 8082 	bne.w	800c8d2 <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800c7ce:	6823      	ldr	r3, [r4, #0]
 800c7d0:	9000      	str	r0, [sp, #0]
 800c7d2:	68da      	ldr	r2, [r3, #12]
 800c7d4:	9200      	str	r2, [sp, #0]
 800c7d6:	689b      	ldr	r3, [r3, #8]
 800c7d8:	9300      	str	r3, [sp, #0]
 800c7da:	9b00      	ldr	r3, [sp, #0]
 800c7dc:	e766      	b.n	800c6ac <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800c7de:	2002      	movs	r0, #2
}
 800c7e0:	b002      	add	sp, #8
 800c7e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800c7e6:	2001      	movs	r0, #1
 800c7e8:	e760      	b.n	800c6ac <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c7ea:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c7ec:	b29b      	uxth	r3, r3
 800c7ee:	b91b      	cbnz	r3, 800c7f8 <HAL_SPI_TransmitReceive+0x184>
 800c7f0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c7f2:	b29b      	uxth	r3, r3
 800c7f4:	2b00      	cmp	r3, #0
 800c7f6:	d0cc      	beq.n	800c792 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c7f8:	6822      	ldr	r2, [r4, #0]
 800c7fa:	6893      	ldr	r3, [r2, #8]
 800c7fc:	0799      	lsls	r1, r3, #30
 800c7fe:	d50f      	bpl.n	800c820 <HAL_SPI_TransmitReceive+0x1ac>
 800c800:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c802:	b29b      	uxth	r3, r3
 800c804:	b163      	cbz	r3, 800c820 <HAL_SPI_TransmitReceive+0x1ac>
 800c806:	b15e      	cbz	r6, 800c820 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800c808:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c80a:	781b      	ldrb	r3, [r3, #0]
 800c80c:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800c80e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c810:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c812:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800c814:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c816:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800c818:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c81a:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800c81c:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800c81e:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c820:	6893      	ldr	r3, [r2, #8]
 800c822:	f013 0301 	ands.w	r3, r3, #1
 800c826:	d004      	beq.n	800c832 <HAL_SPI_TransmitReceive+0x1be>
 800c828:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c82a:	b289      	uxth	r1, r1
 800c82c:	2900      	cmp	r1, #0
 800c82e:	f040 8087 	bne.w	800c940 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800c832:	f7fc fe7b 	bl	800952c <HAL_GetTick>
 800c836:	9b08      	ldr	r3, [sp, #32]
 800c838:	1b40      	subs	r0, r0, r5
 800c83a:	4298      	cmp	r0, r3
 800c83c:	d3d5      	bcc.n	800c7ea <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800c83e:	2003      	movs	r0, #3
 800c840:	e734      	b.n	800c6ac <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c842:	783b      	ldrb	r3, [r7, #0]
 800c844:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800c846:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c848:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c84a:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c84c:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800c84e:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c850:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c852:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c854:	e767      	b.n	800c726 <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c856:	2b00      	cmp	r3, #0
 800c858:	d13d      	bne.n	800c8d6 <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c85a:	f837 3b02 	ldrh.w	r3, [r7], #2
 800c85e:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800c860:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c862:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c864:	3b01      	subs	r3, #1
 800c866:	b29b      	uxth	r3, r3
 800c868:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c86a:	9b08      	ldr	r3, [sp, #32]
 800c86c:	3301      	adds	r3, #1
{
 800c86e:	f04f 0601 	mov.w	r6, #1
 800c872:	d025      	beq.n	800c8c0 <HAL_SPI_TransmitReceive+0x24c>
 800c874:	e032      	b.n	800c8dc <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c876:	6823      	ldr	r3, [r4, #0]
 800c878:	689a      	ldr	r2, [r3, #8]
 800c87a:	0792      	lsls	r2, r2, #30
 800c87c:	d50d      	bpl.n	800c89a <HAL_SPI_TransmitReceive+0x226>
 800c87e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800c880:	b292      	uxth	r2, r2
 800c882:	b152      	cbz	r2, 800c89a <HAL_SPI_TransmitReceive+0x226>
 800c884:	b14e      	cbz	r6, 800c89a <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c886:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c888:	f831 2b02 	ldrh.w	r2, [r1], #2
 800c88c:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800c88e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c890:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c892:	3a01      	subs	r2, #1
 800c894:	b292      	uxth	r2, r2
        txallowed = 0U;
 800c896:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800c898:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c89a:	689a      	ldr	r2, [r3, #8]
 800c89c:	f012 0201 	ands.w	r2, r2, #1
 800c8a0:	d00c      	beq.n	800c8bc <HAL_SPI_TransmitReceive+0x248>
 800c8a2:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c8a4:	b289      	uxth	r1, r1
 800c8a6:	b149      	cbz	r1, 800c8bc <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c8a8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800c8aa:	68db      	ldr	r3, [r3, #12]
 800c8ac:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800c8b0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c8b2:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c8b4:	3b01      	subs	r3, #1
 800c8b6:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800c8b8:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800c8ba:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c8bc:	f7fc fe36 	bl	800952c <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c8c0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c8c2:	b29b      	uxth	r3, r3
 800c8c4:	2b00      	cmp	r3, #0
 800c8c6:	d1d6      	bne.n	800c876 <HAL_SPI_TransmitReceive+0x202>
 800c8c8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c8ca:	b29b      	uxth	r3, r3
 800c8cc:	2b00      	cmp	r3, #0
 800c8ce:	d1d2      	bne.n	800c876 <HAL_SPI_TransmitReceive+0x202>
 800c8d0:	e75f      	b.n	800c792 <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800c8d2:	2000      	movs	r0, #0
 800c8d4:	e6ea      	b.n	800c6ac <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c8d6:	2e01      	cmp	r6, #1
 800c8d8:	d1c7      	bne.n	800c86a <HAL_SPI_TransmitReceive+0x1f6>
 800c8da:	e7be      	b.n	800c85a <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c8dc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c8de:	b29b      	uxth	r3, r3
 800c8e0:	b923      	cbnz	r3, 800c8ec <HAL_SPI_TransmitReceive+0x278>
 800c8e2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c8e4:	b29b      	uxth	r3, r3
 800c8e6:	2b00      	cmp	r3, #0
 800c8e8:	f43f af53 	beq.w	800c792 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c8ec:	6822      	ldr	r2, [r4, #0]
 800c8ee:	6893      	ldr	r3, [r2, #8]
 800c8f0:	079f      	lsls	r7, r3, #30
 800c8f2:	d50d      	bpl.n	800c910 <HAL_SPI_TransmitReceive+0x29c>
 800c8f4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c8f6:	b29b      	uxth	r3, r3
 800c8f8:	b153      	cbz	r3, 800c910 <HAL_SPI_TransmitReceive+0x29c>
 800c8fa:	b14e      	cbz	r6, 800c910 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c8fc:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c8fe:	f831 3b02 	ldrh.w	r3, [r1], #2
 800c902:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800c904:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c906:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c908:	3b01      	subs	r3, #1
 800c90a:	b29b      	uxth	r3, r3
 800c90c:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800c90e:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c910:	6893      	ldr	r3, [r2, #8]
 800c912:	f013 0301 	ands.w	r3, r3, #1
 800c916:	d00c      	beq.n	800c932 <HAL_SPI_TransmitReceive+0x2be>
 800c918:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c91a:	b289      	uxth	r1, r1
 800c91c:	b149      	cbz	r1, 800c932 <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c91e:	68d1      	ldr	r1, [r2, #12]
 800c920:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c922:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800c926:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800c928:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c92a:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c92c:	3b01      	subs	r3, #1
 800c92e:	b29b      	uxth	r3, r3
 800c930:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c932:	f7fc fdfb 	bl	800952c <HAL_GetTick>
 800c936:	9b08      	ldr	r3, [sp, #32]
 800c938:	1b40      	subs	r0, r0, r5
 800c93a:	4298      	cmp	r0, r3
 800c93c:	d3ce      	bcc.n	800c8dc <HAL_SPI_TransmitReceive+0x268>
 800c93e:	e77e      	b.n	800c83e <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800c940:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800c942:	68d2      	ldr	r2, [r2, #12]
 800c944:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800c946:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800c948:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c94a:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800c94c:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800c94e:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800c950:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c952:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800c954:	461e      	mov	r6, r3
 800c956:	e76c      	b.n	800c832 <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c958:	9a08      	ldr	r2, [sp, #32]
 800c95a:	462b      	mov	r3, r5
 800c95c:	2180      	movs	r1, #128	; 0x80
 800c95e:	4620      	mov	r0, r4
 800c960:	f7ff fc6a 	bl	800c238 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c964:	2800      	cmp	r0, #0
 800c966:	f43f af2e 	beq.w	800c7c6 <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c96a:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c96c:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c96e:	4313      	orrs	r3, r2
 800c970:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800c972:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c974:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800c976:	e699      	b.n	800c6ac <HAL_SPI_TransmitReceive+0x38>
 800c978:	20000078 	.word	0x20000078
 800c97c:	165e9f81 	.word	0x165e9f81

0800c980 <HAL_SPI_Receive>:
{
 800c980:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c984:	6846      	ldr	r6, [r0, #4]
 800c986:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800c98a:	b082      	sub	sp, #8
 800c98c:	4604      	mov	r4, r0
 800c98e:	4690      	mov	r8, r2
 800c990:	461d      	mov	r5, r3
 800c992:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c994:	d06e      	beq.n	800ca74 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800c996:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800c99a:	2b01      	cmp	r3, #1
 800c99c:	d076      	beq.n	800ca8c <HAL_SPI_Receive+0x10c>
 800c99e:	2301      	movs	r3, #1
 800c9a0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c9a4:	f7fc fdc2 	bl	800952c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c9a8:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800c9ac:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800c9b0:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c9b2:	fa5f f08c 	uxtb.w	r0, ip
 800c9b6:	d009      	beq.n	800c9cc <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800c9b8:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c9ba:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c9bc:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c9be:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c9c2:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c9c6:	b002      	add	sp, #8
 800c9c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c9cc:	2f00      	cmp	r7, #0
 800c9ce:	d0f4      	beq.n	800c9ba <HAL_SPI_Receive+0x3a>
 800c9d0:	f1b8 0f00 	cmp.w	r8, #0
 800c9d4:	d0f1      	beq.n	800c9ba <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c9d6:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800c9d8:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c9da:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800c9de:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800c9e0:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c9e4:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800c9e8:	f04f 0104 	mov.w	r1, #4
 800c9ec:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800c9f0:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c9f4:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800c9f6:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800c9f8:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800c9fa:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800c9fe:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800ca00:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ca02:	d107      	bne.n	800ca14 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800ca04:	6811      	ldr	r1, [r2, #0]
 800ca06:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800ca0a:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800ca0c:	6811      	ldr	r1, [r2, #0]
 800ca0e:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800ca12:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ca14:	6811      	ldr	r1, [r2, #0]
 800ca16:	0648      	lsls	r0, r1, #25
 800ca18:	d403      	bmi.n	800ca22 <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800ca1a:	6811      	ldr	r1, [r2, #0]
 800ca1c:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800ca20:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800ca22:	68e1      	ldr	r1, [r4, #12]
 800ca24:	2900      	cmp	r1, #0
 800ca26:	d054      	beq.n	800cad2 <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800ca28:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800ca2a:	b289      	uxth	r1, r1
 800ca2c:	b1a9      	cbz	r1, 800ca5a <HAL_SPI_Receive+0xda>
 800ca2e:	1c69      	adds	r1, r5, #1
 800ca30:	d13e      	bne.n	800cab0 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ca32:	6893      	ldr	r3, [r2, #8]
 800ca34:	07db      	lsls	r3, r3, #31
 800ca36:	d544      	bpl.n	800cac2 <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ca38:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ca3a:	68d1      	ldr	r1, [r2, #12]
 800ca3c:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800ca40:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ca44:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ca46:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ca4a:	fa1f fc8c 	uxth.w	ip, ip
 800ca4e:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800ca52:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ca54:	b29b      	uxth	r3, r3
 800ca56:	2b00      	cmp	r3, #0
 800ca58:	d1eb      	bne.n	800ca32 <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800ca5a:	4632      	mov	r2, r6
 800ca5c:	4629      	mov	r1, r5
 800ca5e:	4620      	mov	r0, r4
 800ca60:	f7ff fc48 	bl	800c2f4 <SPI_EndRxTransaction>
 800ca64:	b108      	cbz	r0, 800ca6a <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ca66:	2320      	movs	r3, #32
 800ca68:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800ca6a:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800ca6c:	3800      	subs	r0, #0
 800ca6e:	bf18      	it	ne
 800ca70:	2001      	movne	r0, #1
error :
 800ca72:	e7a2      	b.n	800c9ba <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800ca74:	6883      	ldr	r3, [r0, #8]
 800ca76:	2b00      	cmp	r3, #0
 800ca78:	d18d      	bne.n	800c996 <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800ca7a:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800ca7c:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800ca7e:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800ca80:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800ca84:	460a      	mov	r2, r1
 800ca86:	f7ff fdf5 	bl	800c674 <HAL_SPI_TransmitReceive>
 800ca8a:	e79c      	b.n	800c9c6 <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800ca8c:	2002      	movs	r0, #2
}
 800ca8e:	b002      	add	sp, #8
 800ca90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ca94:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ca96:	68db      	ldr	r3, [r3, #12]
 800ca98:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800ca9c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ca9e:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800caa0:	3b01      	subs	r3, #1
 800caa2:	b29b      	uxth	r3, r3
 800caa4:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800caa6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800caa8:	b29b      	uxth	r3, r3
 800caaa:	2b00      	cmp	r3, #0
 800caac:	d0d5      	beq.n	800ca5a <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800caae:	6823      	ldr	r3, [r4, #0]
 800cab0:	689a      	ldr	r2, [r3, #8]
 800cab2:	07d2      	lsls	r2, r2, #31
 800cab4:	d4ee      	bmi.n	800ca94 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cab6:	f7fc fd39 	bl	800952c <HAL_GetTick>
 800caba:	1b80      	subs	r0, r0, r6
 800cabc:	42a8      	cmp	r0, r5
 800cabe:	d243      	bcs.n	800cb48 <HAL_SPI_Receive+0x1c8>
 800cac0:	e7f1      	b.n	800caa6 <HAL_SPI_Receive+0x126>
 800cac2:	f7fc fd33 	bl	800952c <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800cac6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cac8:	b29b      	uxth	r3, r3
 800caca:	2b00      	cmp	r3, #0
 800cacc:	d0c5      	beq.n	800ca5a <HAL_SPI_Receive+0xda>
 800cace:	6822      	ldr	r2, [r4, #0]
 800cad0:	e7af      	b.n	800ca32 <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800cad2:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800cad4:	b292      	uxth	r2, r2
 800cad6:	2a00      	cmp	r2, #0
 800cad8:	d0bf      	beq.n	800ca5a <HAL_SPI_Receive+0xda>
 800cada:	1c6f      	adds	r7, r5, #1
 800cadc:	d013      	beq.n	800cb06 <HAL_SPI_Receive+0x186>
 800cade:	e02b      	b.n	800cb38 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800cae0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cae2:	7b1b      	ldrb	r3, [r3, #12]
 800cae4:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800cae6:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800caea:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800caec:	f10c 3cff 	add.w	ip, ip, #4294967295
 800caf0:	fa1f fc8c 	uxth.w	ip, ip
 800caf4:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800caf8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cafa:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800cafc:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cafe:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800cb00:	2b00      	cmp	r3, #0
 800cb02:	d0aa      	beq.n	800ca5a <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800cb04:	6823      	ldr	r3, [r4, #0]
 800cb06:	689a      	ldr	r2, [r3, #8]
 800cb08:	07d0      	lsls	r0, r2, #31
 800cb0a:	d4e9      	bmi.n	800cae0 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cb0c:	f7fc fd0e 	bl	800952c <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800cb10:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cb12:	b29b      	uxth	r3, r3
 800cb14:	2b00      	cmp	r3, #0
 800cb16:	d1f5      	bne.n	800cb04 <HAL_SPI_Receive+0x184>
 800cb18:	e79f      	b.n	800ca5a <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800cb1a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cb1c:	7b1b      	ldrb	r3, [r3, #12]
 800cb1e:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800cb20:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cb22:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cb24:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cb26:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800cb28:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cb2a:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cb2c:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800cb2e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cb30:	b29b      	uxth	r3, r3
 800cb32:	2b00      	cmp	r3, #0
 800cb34:	d091      	beq.n	800ca5a <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800cb36:	6823      	ldr	r3, [r4, #0]
 800cb38:	689a      	ldr	r2, [r3, #8]
 800cb3a:	07d1      	lsls	r1, r2, #31
 800cb3c:	d4ed      	bmi.n	800cb1a <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cb3e:	f7fc fcf5 	bl	800952c <HAL_GetTick>
 800cb42:	1b80      	subs	r0, r0, r6
 800cb44:	42a8      	cmp	r0, r5
 800cb46:	d3f2      	bcc.n	800cb2e <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800cb48:	2003      	movs	r0, #3
 800cb4a:	e736      	b.n	800c9ba <HAL_SPI_Receive+0x3a>

0800cb4c <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800cb4c:	2800      	cmp	r0, #0
 800cb4e:	f000 8087 	beq.w	800cc60 <HAL_TIM_Base_Init+0x114>
{
 800cb52:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800cb54:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800cb58:	4604      	mov	r4, r0
 800cb5a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800cb5e:	2b00      	cmp	r3, #0
 800cb60:	d079      	beq.n	800cc56 <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800cb62:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cb64:	493f      	ldr	r1, [pc, #252]	; (800cc64 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800cb66:	2302      	movs	r3, #2
 800cb68:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cb6c:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800cb6e:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cb70:	d05d      	beq.n	800cc2e <HAL_TIM_Base_Init+0xe2>
 800cb72:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800cb76:	d031      	beq.n	800cbdc <HAL_TIM_Base_Init+0x90>
 800cb78:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800cb7c:	428a      	cmp	r2, r1
 800cb7e:	d02d      	beq.n	800cbdc <HAL_TIM_Base_Init+0x90>
 800cb80:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cb84:	428a      	cmp	r2, r1
 800cb86:	d029      	beq.n	800cbdc <HAL_TIM_Base_Init+0x90>
 800cb88:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cb8c:	428a      	cmp	r2, r1
 800cb8e:	d025      	beq.n	800cbdc <HAL_TIM_Base_Init+0x90>
 800cb90:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800cb94:	428a      	cmp	r2, r1
 800cb96:	d04a      	beq.n	800cc2e <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800cb98:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800cb9c:	428a      	cmp	r2, r1
 800cb9e:	d021      	beq.n	800cbe4 <HAL_TIM_Base_Init+0x98>
 800cba0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cba4:	428a      	cmp	r2, r1
 800cba6:	d01d      	beq.n	800cbe4 <HAL_TIM_Base_Init+0x98>
 800cba8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cbac:	428a      	cmp	r2, r1
 800cbae:	d019      	beq.n	800cbe4 <HAL_TIM_Base_Init+0x98>
 800cbb0:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800cbb4:	428a      	cmp	r2, r1
 800cbb6:	d015      	beq.n	800cbe4 <HAL_TIM_Base_Init+0x98>
 800cbb8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cbbc:	428a      	cmp	r2, r1
 800cbbe:	d011      	beq.n	800cbe4 <HAL_TIM_Base_Init+0x98>
 800cbc0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cbc4:	428a      	cmp	r2, r1
 800cbc6:	d00d      	beq.n	800cbe4 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800cbc8:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800cbca:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800cbcc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800cbd0:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800cbd2:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800cbd4:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800cbd6:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800cbd8:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800cbda:	e010      	b.n	800cbfe <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800cbdc:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800cbde:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800cbe2:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800cbe4:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800cbe6:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800cbe8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800cbec:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800cbee:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800cbf2:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800cbf4:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800cbf6:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800cbf8:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800cbfa:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800cbfc:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800cbfe:	2301      	movs	r3, #1
 800cc00:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800cc02:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800cc06:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800cc0a:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800cc0e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800cc12:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800cc16:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800cc1a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800cc1e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800cc22:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800cc26:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800cc2a:	2000      	movs	r0, #0
}
 800cc2c:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800cc2e:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800cc30:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800cc32:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800cc36:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800cc38:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800cc3c:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800cc3e:	69a1      	ldr	r1, [r4, #24]
 800cc40:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800cc44:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800cc46:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800cc48:	68e3      	ldr	r3, [r4, #12]
 800cc4a:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800cc4c:	6863      	ldr	r3, [r4, #4]
 800cc4e:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800cc50:	6963      	ldr	r3, [r4, #20]
 800cc52:	6313      	str	r3, [r2, #48]	; 0x30
 800cc54:	e7d3      	b.n	800cbfe <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800cc56:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800cc5a:	f7f4 fe3d 	bl	80018d8 <HAL_TIM_Base_MspInit>
 800cc5e:	e780      	b.n	800cb62 <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800cc60:	2001      	movs	r0, #1
}
 800cc62:	4770      	bx	lr
 800cc64:	40010000 	.word	0x40010000

0800cc68 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800cc68:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800cc6c:	2b01      	cmp	r3, #1
 800cc6e:	d12f      	bne.n	800ccd0 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800cc70:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800cc72:	4919      	ldr	r1, [pc, #100]	; (800ccd8 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800cc74:	2202      	movs	r2, #2
 800cc76:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800cc7a:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800cc7c:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800cc7e:	f042 0201 	orr.w	r2, r2, #1
 800cc82:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800cc84:	d019      	beq.n	800ccba <HAL_TIM_Base_Start_IT+0x52>
 800cc86:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800cc8a:	d016      	beq.n	800ccba <HAL_TIM_Base_Start_IT+0x52>
 800cc8c:	4a13      	ldr	r2, [pc, #76]	; (800ccdc <HAL_TIM_Base_Start_IT+0x74>)
 800cc8e:	4293      	cmp	r3, r2
 800cc90:	d013      	beq.n	800ccba <HAL_TIM_Base_Start_IT+0x52>
 800cc92:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cc96:	4293      	cmp	r3, r2
 800cc98:	d00f      	beq.n	800ccba <HAL_TIM_Base_Start_IT+0x52>
 800cc9a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cc9e:	4293      	cmp	r3, r2
 800cca0:	d00b      	beq.n	800ccba <HAL_TIM_Base_Start_IT+0x52>
 800cca2:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800cca6:	4293      	cmp	r3, r2
 800cca8:	d007      	beq.n	800ccba <HAL_TIM_Base_Start_IT+0x52>
 800ccaa:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800ccae:	4293      	cmp	r3, r2
 800ccb0:	d003      	beq.n	800ccba <HAL_TIM_Base_Start_IT+0x52>
 800ccb2:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800ccb6:	4293      	cmp	r3, r2
 800ccb8:	d104      	bne.n	800ccc4 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800ccba:	689a      	ldr	r2, [r3, #8]
 800ccbc:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800ccc0:	2a06      	cmp	r2, #6
 800ccc2:	d007      	beq.n	800ccd4 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800ccc4:	681a      	ldr	r2, [r3, #0]
 800ccc6:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800ccca:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800cccc:	601a      	str	r2, [r3, #0]
 800ccce:	4770      	bx	lr
    return HAL_ERROR;
 800ccd0:	2001      	movs	r0, #1
 800ccd2:	4770      	bx	lr
  return HAL_OK;
 800ccd4:	2000      	movs	r0, #0
}
 800ccd6:	4770      	bx	lr
 800ccd8:	40010000 	.word	0x40010000
 800ccdc:	40000400 	.word	0x40000400

0800cce0 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800cce0:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800cce4:	2b01      	cmp	r3, #1
 800cce6:	d075      	beq.n	800cdd4 <HAL_TIM_ConfigClockSource+0xf4>
 800cce8:	4602      	mov	r2, r0
{
 800ccea:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800ccec:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800ccee:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800ccf0:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800ccf4:	2001      	movs	r0, #1
 800ccf6:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800ccfa:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800ccfc:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800cd00:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800cd04:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800cd06:	680b      	ldr	r3, [r1, #0]
 800cd08:	2b60      	cmp	r3, #96	; 0x60
 800cd0a:	d065      	beq.n	800cdd8 <HAL_TIM_ConfigClockSource+0xf8>
 800cd0c:	d824      	bhi.n	800cd58 <HAL_TIM_ConfigClockSource+0x78>
 800cd0e:	2b40      	cmp	r3, #64	; 0x40
 800cd10:	d07c      	beq.n	800ce0c <HAL_TIM_ConfigClockSource+0x12c>
 800cd12:	d94b      	bls.n	800cdac <HAL_TIM_ConfigClockSource+0xcc>
 800cd14:	2b50      	cmp	r3, #80	; 0x50
 800cd16:	d117      	bne.n	800cd48 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800cd18:	684b      	ldr	r3, [r1, #4]
 800cd1a:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800cd1c:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800cd1e:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800cd22:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800cd24:	6a23      	ldr	r3, [r4, #32]
 800cd26:	f023 0301 	bic.w	r3, r3, #1
 800cd2a:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800cd2c:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800cd2e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800cd32:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800cd36:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800cd38:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800cd3a:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800cd3c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800cd40:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800cd44:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800cd46:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800cd48:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800cd4a:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800cd4c:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800cd50:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800cd54:	bc30      	pop	{r4, r5}
 800cd56:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800cd58:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800cd5c:	d038      	beq.n	800cdd0 <HAL_TIM_ConfigClockSource+0xf0>
 800cd5e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800cd62:	d110      	bne.n	800cd86 <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800cd64:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800cd68:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800cd6a:	432b      	orrs	r3, r5
 800cd6c:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800cd6e:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800cd72:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800cd76:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800cd78:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800cd7a:	68a3      	ldr	r3, [r4, #8]
 800cd7c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800cd80:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800cd82:	60a3      	str	r3, [r4, #8]
      break;
 800cd84:	e7e0      	b.n	800cd48 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800cd86:	2b70      	cmp	r3, #112	; 0x70
 800cd88:	d1de      	bne.n	800cd48 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800cd8a:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800cd8e:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800cd90:	432b      	orrs	r3, r5
 800cd92:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800cd94:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800cd98:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800cd9c:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800cd9e:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800cda0:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800cda2:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800cda6:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800cda8:	60a3      	str	r3, [r4, #8]
      break;
 800cdaa:	e7cd      	b.n	800cd48 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800cdac:	2b20      	cmp	r3, #32
 800cdae:	d002      	beq.n	800cdb6 <HAL_TIM_ConfigClockSource+0xd6>
 800cdb0:	d90a      	bls.n	800cdc8 <HAL_TIM_ConfigClockSource+0xe8>
 800cdb2:	2b30      	cmp	r3, #48	; 0x30
 800cdb4:	d1c8      	bne.n	800cd48 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800cdb6:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800cdb8:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800cdbc:	430b      	orrs	r3, r1
 800cdbe:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800cdc2:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800cdc4:	60a3      	str	r3, [r4, #8]
}
 800cdc6:	e7bf      	b.n	800cd48 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800cdc8:	f033 0110 	bics.w	r1, r3, #16
 800cdcc:	d1bc      	bne.n	800cd48 <HAL_TIM_ConfigClockSource+0x68>
 800cdce:	e7f2      	b.n	800cdb6 <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800cdd0:	2000      	movs	r0, #0
 800cdd2:	e7b9      	b.n	800cd48 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800cdd4:	2002      	movs	r0, #2
}
 800cdd6:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800cdd8:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800cdda:	6848      	ldr	r0, [r1, #4]
 800cddc:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800cdde:	f023 0310 	bic.w	r3, r3, #16
 800cde2:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800cde4:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800cde6:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800cde8:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800cdec:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800cdf0:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800cdf4:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800cdf8:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800cdfa:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800cdfc:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800cdfe:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800ce02:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800ce06:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800ce08:	60a3      	str	r3, [r4, #8]
}
 800ce0a:	e79d      	b.n	800cd48 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800ce0c:	684b      	ldr	r3, [r1, #4]
 800ce0e:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800ce10:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800ce12:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800ce16:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800ce18:	6a23      	ldr	r3, [r4, #32]
 800ce1a:	f023 0301 	bic.w	r3, r3, #1
 800ce1e:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800ce20:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800ce22:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800ce26:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800ce2a:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800ce2c:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800ce2e:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800ce30:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800ce34:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800ce38:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800ce3a:	60a3      	str	r3, [r4, #8]
}
 800ce3c:	e784      	b.n	800cd48 <HAL_TIM_ConfigClockSource+0x68>
 800ce3e:	bf00      	nop

0800ce40 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800ce40:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800ce44:	2a01      	cmp	r2, #1
 800ce46:	d050      	beq.n	800ceea <HAL_TIM_SlaveConfigSynchro+0xaa>
 800ce48:	4603      	mov	r3, r0
{
 800ce4a:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800ce4c:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800ce4e:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800ce50:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800ce54:	2001      	movs	r0, #1
 800ce56:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800ce5a:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800ce5c:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800ce5e:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800ce60:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800ce64:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800ce66:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800ce6a:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800ce6c:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800ce6e:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800ce70:	d060      	beq.n	800cf34 <HAL_TIM_SlaveConfigSynchro+0xf4>
 800ce72:	d90f      	bls.n	800ce94 <HAL_TIM_SlaveConfigSynchro+0x54>
 800ce74:	2860      	cmp	r0, #96	; 0x60
 800ce76:	d03a      	beq.n	800ceee <HAL_TIM_SlaveConfigSynchro+0xae>
 800ce78:	2870      	cmp	r0, #112	; 0x70
 800ce7a:	d10e      	bne.n	800ce9a <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800ce7c:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800ce80:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800ce82:	432a      	orrs	r2, r5
 800ce84:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800ce86:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800ce8a:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800ce8e:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800ce90:	60a2      	str	r2, [r4, #8]
 800ce92:	e00f      	b.n	800ceb4 <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800ce94:	2840      	cmp	r0, #64	; 0x40
 800ce96:	d03d      	beq.n	800cf14 <HAL_TIM_SlaveConfigSynchro+0xd4>
 800ce98:	d907      	bls.n	800ceaa <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800ce9a:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800ce9c:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800ce9e:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800cea2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800cea6:	bc30      	pop	{r4, r5}
 800cea8:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800ceaa:	2820      	cmp	r0, #32
 800ceac:	d002      	beq.n	800ceb4 <HAL_TIM_SlaveConfigSynchro+0x74>
 800ceae:	d912      	bls.n	800ced6 <HAL_TIM_SlaveConfigSynchro+0x96>
 800ceb0:	2830      	cmp	r0, #48	; 0x30
 800ceb2:	d1f2      	bne.n	800ce9a <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800ceb4:	68e2      	ldr	r2, [r4, #12]
 800ceb6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800ceba:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800cebc:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800cebe:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800cec0:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800cec2:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800cec6:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800cec8:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800cecc:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800ced0:	4608      	mov	r0, r1
}
 800ced2:	bc30      	pop	{r4, r5}
 800ced4:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800ced6:	f030 0210 	bics.w	r2, r0, #16
 800ceda:	d0eb      	beq.n	800ceb4 <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800cedc:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800cede:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800cee0:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800cee4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800cee8:	e7dd      	b.n	800cea6 <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800ceea:	2002      	movs	r0, #2
}
 800ceec:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800ceee:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800cef0:	6888      	ldr	r0, [r1, #8]
 800cef2:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800cef4:	f022 0210 	bic.w	r2, r2, #16
 800cef8:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800cefa:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800cefc:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800cefe:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800cf02:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800cf06:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800cf0a:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800cf0e:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800cf10:	6222      	str	r2, [r4, #32]
 800cf12:	e7cf      	b.n	800ceb4 <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800cf14:	2d05      	cmp	r5, #5
 800cf16:	d0c0      	beq.n	800ce9a <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800cf18:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800cf1a:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800cf1c:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800cf1e:	f022 0201 	bic.w	r2, r2, #1
 800cf22:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800cf24:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800cf26:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800cf2a:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800cf2e:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800cf30:	6220      	str	r0, [r4, #32]
      break;
 800cf32:	e7bf      	b.n	800ceb4 <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800cf34:	688a      	ldr	r2, [r1, #8]
 800cf36:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800cf38:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800cf3a:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800cf3e:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800cf40:	6a22      	ldr	r2, [r4, #32]
 800cf42:	f022 0201 	bic.w	r2, r2, #1
 800cf46:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800cf48:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800cf4a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800cf4e:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800cf52:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800cf54:	6221      	str	r1, [r4, #32]
 800cf56:	e7ad      	b.n	800ceb4 <HAL_TIM_SlaveConfigSynchro+0x74>

0800cf58 <HAL_TIM_OC_DelayElapsedCallback>:
 800cf58:	4770      	bx	lr
 800cf5a:	bf00      	nop

0800cf5c <HAL_TIM_IC_CaptureCallback>:
 800cf5c:	4770      	bx	lr
 800cf5e:	bf00      	nop

0800cf60 <HAL_TIM_PWM_PulseFinishedCallback>:
 800cf60:	4770      	bx	lr
 800cf62:	bf00      	nop

0800cf64 <HAL_TIM_TriggerCallback>:
 800cf64:	4770      	bx	lr
 800cf66:	bf00      	nop

0800cf68 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800cf68:	6803      	ldr	r3, [r0, #0]
 800cf6a:	691a      	ldr	r2, [r3, #16]
 800cf6c:	0791      	lsls	r1, r2, #30
{
 800cf6e:	b510      	push	{r4, lr}
 800cf70:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800cf72:	d502      	bpl.n	800cf7a <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800cf74:	68da      	ldr	r2, [r3, #12]
 800cf76:	0792      	lsls	r2, r2, #30
 800cf78:	d45f      	bmi.n	800d03a <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800cf7a:	691a      	ldr	r2, [r3, #16]
 800cf7c:	0750      	lsls	r0, r2, #29
 800cf7e:	d502      	bpl.n	800cf86 <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800cf80:	68da      	ldr	r2, [r3, #12]
 800cf82:	0751      	lsls	r1, r2, #29
 800cf84:	d446      	bmi.n	800d014 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800cf86:	691a      	ldr	r2, [r3, #16]
 800cf88:	0712      	lsls	r2, r2, #28
 800cf8a:	d502      	bpl.n	800cf92 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800cf8c:	68da      	ldr	r2, [r3, #12]
 800cf8e:	0710      	lsls	r0, r2, #28
 800cf90:	d42e      	bmi.n	800cff0 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800cf92:	691a      	ldr	r2, [r3, #16]
 800cf94:	06d2      	lsls	r2, r2, #27
 800cf96:	d502      	bpl.n	800cf9e <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800cf98:	68da      	ldr	r2, [r3, #12]
 800cf9a:	06d0      	lsls	r0, r2, #27
 800cf9c:	d418      	bmi.n	800cfd0 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800cf9e:	691a      	ldr	r2, [r3, #16]
 800cfa0:	07d1      	lsls	r1, r2, #31
 800cfa2:	d502      	bpl.n	800cfaa <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800cfa4:	68da      	ldr	r2, [r3, #12]
 800cfa6:	07d2      	lsls	r2, r2, #31
 800cfa8:	d45d      	bmi.n	800d066 <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800cfaa:	691a      	ldr	r2, [r3, #16]
 800cfac:	0610      	lsls	r0, r2, #24
 800cfae:	d502      	bpl.n	800cfb6 <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800cfb0:	68da      	ldr	r2, [r3, #12]
 800cfb2:	0611      	lsls	r1, r2, #24
 800cfb4:	d45f      	bmi.n	800d076 <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800cfb6:	691a      	ldr	r2, [r3, #16]
 800cfb8:	0652      	lsls	r2, r2, #25
 800cfba:	d502      	bpl.n	800cfc2 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800cfbc:	68da      	ldr	r2, [r3, #12]
 800cfbe:	0650      	lsls	r0, r2, #25
 800cfc0:	d461      	bmi.n	800d086 <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800cfc2:	691a      	ldr	r2, [r3, #16]
 800cfc4:	0691      	lsls	r1, r2, #26
 800cfc6:	d502      	bpl.n	800cfce <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800cfc8:	68da      	ldr	r2, [r3, #12]
 800cfca:	0692      	lsls	r2, r2, #26
 800cfcc:	d443      	bmi.n	800d056 <HAL_TIM_IRQHandler+0xee>
}
 800cfce:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800cfd0:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800cfd4:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800cfd6:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800cfd8:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800cfda:	69db      	ldr	r3, [r3, #28]
 800cfdc:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800cfe0:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800cfe2:	d064      	beq.n	800d0ae <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800cfe4:	f7ff ffba 	bl	800cf5c <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cfe8:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800cfea:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cfec:	7722      	strb	r2, [r4, #28]
 800cfee:	e7d6      	b.n	800cf9e <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800cff0:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800cff4:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800cff6:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800cff8:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800cffa:	69db      	ldr	r3, [r3, #28]
 800cffc:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800cffe:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d000:	d152      	bne.n	800d0a8 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d002:	f7ff ffa9 	bl	800cf58 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d006:	4620      	mov	r0, r4
 800d008:	f7ff ffaa 	bl	800cf60 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d00c:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d00e:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d010:	7722      	strb	r2, [r4, #28]
 800d012:	e7be      	b.n	800cf92 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d014:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d018:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d01a:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d01c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d01e:	699b      	ldr	r3, [r3, #24]
 800d020:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d024:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d026:	d13c      	bne.n	800d0a2 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d028:	f7ff ff96 	bl	800cf58 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d02c:	4620      	mov	r0, r4
 800d02e:	f7ff ff97 	bl	800cf60 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d032:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d034:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d036:	7722      	strb	r2, [r4, #28]
 800d038:	e7a5      	b.n	800cf86 <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d03a:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d03e:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d040:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d042:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800d044:	699b      	ldr	r3, [r3, #24]
 800d046:	079b      	lsls	r3, r3, #30
 800d048:	d025      	beq.n	800d096 <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800d04a:	f7ff ff87 	bl	800cf5c <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d04e:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d050:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d052:	7722      	strb	r2, [r4, #28]
 800d054:	e791      	b.n	800cf7a <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d056:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800d05a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d05c:	611a      	str	r2, [r3, #16]
}
 800d05e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800d062:	f000 b86b 	b.w	800d13c <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800d066:	f06f 0201 	mvn.w	r2, #1
 800d06a:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800d06c:	4620      	mov	r0, r4
 800d06e:	f7f4 f915 	bl	800129c <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d072:	6823      	ldr	r3, [r4, #0]
 800d074:	e799      	b.n	800cfaa <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800d076:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800d07a:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800d07c:	4620      	mov	r0, r4
 800d07e:	f000 f85f 	bl	800d140 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d082:	6823      	ldr	r3, [r4, #0]
 800d084:	e797      	b.n	800cfb6 <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800d086:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800d08a:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800d08c:	4620      	mov	r0, r4
 800d08e:	f7ff ff69 	bl	800cf64 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d092:	6823      	ldr	r3, [r4, #0]
 800d094:	e795      	b.n	800cfc2 <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800d096:	f7ff ff5f 	bl	800cf58 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d09a:	4620      	mov	r0, r4
 800d09c:	f7ff ff60 	bl	800cf60 <HAL_TIM_PWM_PulseFinishedCallback>
 800d0a0:	e7d5      	b.n	800d04e <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800d0a2:	f7ff ff5b 	bl	800cf5c <HAL_TIM_IC_CaptureCallback>
 800d0a6:	e7c4      	b.n	800d032 <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800d0a8:	f7ff ff58 	bl	800cf5c <HAL_TIM_IC_CaptureCallback>
 800d0ac:	e7ae      	b.n	800d00c <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d0ae:	f7ff ff53 	bl	800cf58 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d0b2:	4620      	mov	r0, r4
 800d0b4:	f7ff ff54 	bl	800cf60 <HAL_TIM_PWM_PulseFinishedCallback>
 800d0b8:	e796      	b.n	800cfe8 <HAL_TIM_IRQHandler+0x80>
 800d0ba:	bf00      	nop

0800d0bc <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800d0bc:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800d0c0:	2b01      	cmp	r3, #1
 800d0c2:	d037      	beq.n	800d134 <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800d0c4:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800d0c6:	2202      	movs	r2, #2
{
 800d0c8:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800d0ca:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800d0ce:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800d0d0:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800d0d2:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800d0d4:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800d0d8:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800d0da:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d0dc:	4a16      	ldr	r2, [pc, #88]	; (800d138 <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800d0de:	4293      	cmp	r3, r2
 800d0e0:	d01a      	beq.n	800d118 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d0e2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800d0e6:	d017      	beq.n	800d118 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d0e8:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800d0ec:	4293      	cmp	r3, r2
 800d0ee:	d013      	beq.n	800d118 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d0f0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d0f4:	4293      	cmp	r3, r2
 800d0f6:	d00f      	beq.n	800d118 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d0f8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d0fc:	4293      	cmp	r3, r2
 800d0fe:	d00b      	beq.n	800d118 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d100:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800d104:	4293      	cmp	r3, r2
 800d106:	d007      	beq.n	800d118 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d108:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800d10c:	4293      	cmp	r3, r2
 800d10e:	d003      	beq.n	800d118 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d110:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800d114:	4293      	cmp	r3, r2
 800d116:	d104      	bne.n	800d122 <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800d118:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800d11a:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800d11e:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800d120:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800d122:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800d124:	2201      	movs	r2, #1
 800d126:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800d12a:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800d12e:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800d130:	4618      	mov	r0, r3
}
 800d132:	4770      	bx	lr
  __HAL_LOCK(htim);
 800d134:	2002      	movs	r0, #2
}
 800d136:	4770      	bx	lr
 800d138:	40010000 	.word	0x40010000

0800d13c <HAL_TIMEx_CommutCallback>:
 800d13c:	4770      	bx	lr
 800d13e:	bf00      	nop

0800d140 <HAL_TIMEx_BreakCallback>:
 800d140:	4770      	bx	lr
 800d142:	bf00      	nop

0800d144 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d144:	680b      	ldr	r3, [r1, #0]
{
 800d146:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d148:	b9d3      	cbnz	r3, 800d180 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d14a:	6803      	ldr	r3, [r0, #0]
 800d14c:	684c      	ldr	r4, [r1, #4]
 800d14e:	688a      	ldr	r2, [r1, #8]
 800d150:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d154:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d158:	4323      	orrs	r3, r4
 800d15a:	4313      	orrs	r3, r2
 800d15c:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800d160:	4323      	orrs	r3, r4
 800d162:	4313      	orrs	r3, r2
 800d164:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800d168:	4323      	orrs	r3, r4
 800d16a:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800d16e:	4313      	orrs	r3, r2
 800d170:	432b      	orrs	r3, r5
 800d172:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800d174:	4323      	orrs	r3, r4
 800d176:	4313      	orrs	r3, r2
 800d178:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800d17a:	bc30      	pop	{r4, r5}
 800d17c:	2000      	movs	r0, #0
 800d17e:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d180:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800d184:	6803      	ldr	r3, [r0, #0]
 800d186:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800d18a:	4323      	orrs	r3, r4
 800d18c:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800d18e:	4313      	orrs	r3, r2
 800d190:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d192:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d194:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d196:	6843      	ldr	r3, [r0, #4]
 800d198:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d19c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d1a0:	4313      	orrs	r3, r2
 800d1a2:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800d1a6:	4323      	orrs	r3, r4
 800d1a8:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800d1ac:	4313      	orrs	r3, r2
 800d1ae:	432b      	orrs	r3, r5
 800d1b0:	698a      	ldr	r2, [r1, #24]
 800d1b2:	4323      	orrs	r3, r4
 800d1b4:	4313      	orrs	r3, r2
 800d1b6:	6043      	str	r3, [r0, #4]
}
 800d1b8:	bc30      	pop	{r4, r5}
 800d1ba:	2000      	movs	r0, #0
 800d1bc:	4770      	bx	lr
 800d1be:	bf00      	nop

0800d1c0 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800d1c0:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d1c2:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800d1c4:	bb02      	cbnz	r2, 800d208 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d1c6:	e9d1 2400 	ldrd	r2, r4, [r1]
 800d1ca:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800d1ce:	3c01      	subs	r4, #1
 800d1d0:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800d1d4:	3a01      	subs	r2, #1
 800d1d6:	4313      	orrs	r3, r2
 800d1d8:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800d1dc:	3c01      	subs	r4, #1
 800d1de:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800d1e2:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800d1e6:	3a01      	subs	r2, #1
 800d1e8:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800d1ec:	698a      	ldr	r2, [r1, #24]
 800d1ee:	1e69      	subs	r1, r5, #1
 800d1f0:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d1f4:	1e61      	subs	r1, r4, #1
 800d1f6:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800d1fa:	3a01      	subs	r2, #1
 800d1fc:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d200:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800d202:	bc30      	pop	{r4, r5}
 800d204:	2000      	movs	r0, #0
 800d206:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d208:	68cc      	ldr	r4, [r1, #12]
 800d20a:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800d20c:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d20e:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800d212:	3c01      	subs	r4, #1
 800d214:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800d218:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800d21c:	3a01      	subs	r2, #1
 800d21e:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800d222:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800d224:	e9d1 2400 	ldrd	r2, r4, [r1]
 800d228:	68c3      	ldr	r3, [r0, #12]
 800d22a:	3c01      	subs	r4, #1
 800d22c:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800d230:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800d234:	3a01      	subs	r2, #1
 800d236:	690c      	ldr	r4, [r1, #16]
 800d238:	4313      	orrs	r3, r2
 800d23a:	698a      	ldr	r2, [r1, #24]
 800d23c:	1e69      	subs	r1, r5, #1
 800d23e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800d242:	1e61      	subs	r1, r4, #1
 800d244:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d248:	3a01      	subs	r2, #1
 800d24a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d24e:	60c3      	str	r3, [r0, #12]
}
 800d250:	bc30      	pop	{r4, r5}
 800d252:	2000      	movs	r0, #0
 800d254:	4770      	bx	lr
 800d256:	bf00      	nop

0800d258 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800d258:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d25a:	680b      	ldr	r3, [r1, #0]
{
 800d25c:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d25e:	684a      	ldr	r2, [r1, #4]
{
 800d260:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d262:	4313      	orrs	r3, r2
 800d264:	6900      	ldr	r0, [r0, #16]
 800d266:	68ca      	ldr	r2, [r1, #12]
 800d268:	0d80      	lsrs	r0, r0, #22
 800d26a:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800d26e:	688a      	ldr	r2, [r1, #8]
 800d270:	0580      	lsls	r0, r0, #22
 800d272:	4303      	orrs	r3, r0
 800d274:	3a01      	subs	r2, #1
 800d276:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800d27a:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800d27c:	f7fc f956 	bl	800952c <HAL_GetTick>
 800d280:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800d282:	1c6b      	adds	r3, r5, #1
 800d284:	d105      	bne.n	800d292 <FMC_SDRAM_SendCommand+0x3a>
 800d286:	69a3      	ldr	r3, [r4, #24]
 800d288:	f013 0320 	ands.w	r3, r3, #32
 800d28c:	d1fb      	bne.n	800d286 <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800d28e:	4618      	mov	r0, r3
}
 800d290:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800d292:	69a3      	ldr	r3, [r4, #24]
 800d294:	f013 0320 	ands.w	r3, r3, #32
 800d298:	d0f9      	beq.n	800d28e <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800d29a:	b125      	cbz	r5, 800d2a6 <FMC_SDRAM_SendCommand+0x4e>
 800d29c:	f7fc f946 	bl	800952c <HAL_GetTick>
 800d2a0:	1b80      	subs	r0, r0, r6
 800d2a2:	42a8      	cmp	r0, r5
 800d2a4:	d9ed      	bls.n	800d282 <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800d2a6:	2003      	movs	r0, #3
}
 800d2a8:	bd70      	pop	{r4, r5, r6, pc}
 800d2aa:	bf00      	nop

0800d2ac <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d2ac:	6943      	ldr	r3, [r0, #20]
 800d2ae:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800d2b2:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d2b4:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800d2b8:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800d2bc:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d2be:	6151      	str	r1, [r2, #20]
}
 800d2c0:	4770      	bx	lr
 800d2c2:	bf00      	nop

0800d2c4 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800d2c4:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800d2c6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d2ca:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800d2cc:	f002 fb02 	bl	800f8d4 <xTaskGetSchedulerState>
 800d2d0:	2801      	cmp	r0, #1
 800d2d2:	d100      	bne.n	800d2d6 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800d2d4:	bd08      	pop	{r3, pc}
 800d2d6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800d2da:	f000 bc43 	b.w	800db64 <xPortSysTickHandler>
 800d2de:	bf00      	nop

0800d2e0 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800d2e0:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800d2e4:	b92b      	cbnz	r3, 800d2f2 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800d2e6:	4b06      	ldr	r3, [pc, #24]	; (800d300 <osKernelInitialize+0x20>)
 800d2e8:	6818      	ldr	r0, [r3, #0]
 800d2ea:	b928      	cbnz	r0, 800d2f8 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800d2ec:	2201      	movs	r2, #1
 800d2ee:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800d2f0:	4770      	bx	lr
    stat = osErrorISR;
 800d2f2:	f06f 0005 	mvn.w	r0, #5
 800d2f6:	4770      	bx	lr
    } else {
      stat = osError;
 800d2f8:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800d2fc:	4770      	bx	lr
 800d2fe:	bf00      	nop
 800d300:	20002cd0 	.word	0x20002cd0

0800d304 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800d304:	b510      	push	{r4, lr}
 800d306:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d30a:	b974      	cbnz	r4, 800d32a <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800d30c:	4b08      	ldr	r3, [pc, #32]	; (800d330 <osKernelStart+0x2c>)
 800d30e:	681a      	ldr	r2, [r3, #0]
 800d310:	2a01      	cmp	r2, #1
 800d312:	d107      	bne.n	800d324 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800d314:	4907      	ldr	r1, [pc, #28]	; (800d334 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800d316:	2202      	movs	r2, #2
 800d318:	77cc      	strb	r4, [r1, #31]
 800d31a:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800d31c:	f002 f8b4 	bl	800f488 <vTaskStartScheduler>
      stat = osOK;
 800d320:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800d322:	bd10      	pop	{r4, pc}
      stat = osError;
 800d324:	f04f 30ff 	mov.w	r0, #4294967295
}
 800d328:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d32a:	f06f 0005 	mvn.w	r0, #5
}
 800d32e:	bd10      	pop	{r4, pc}
 800d330:	20002cd0 	.word	0x20002cd0
 800d334:	e000ed00 	.word	0xe000ed00

0800d338 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800d338:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d33a:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800d33c:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800d33e:	4615      	mov	r5, r2
  hTask = NULL;
 800d340:	9405      	str	r4, [sp, #20]
 800d342:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800d346:	b9ea      	cbnz	r2, 800d384 <osThreadNew+0x4c>
 800d348:	b350      	cbz	r0, 800d3a0 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800d34a:	b1f5      	cbz	r5, 800d38a <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800d34c:	69ab      	ldr	r3, [r5, #24]
 800d34e:	bb5b      	cbnz	r3, 800d3a8 <osThreadNew+0x70>
 800d350:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800d352:	686a      	ldr	r2, [r5, #4]
 800d354:	07d2      	lsls	r2, r2, #31
 800d356:	d423      	bmi.n	800d3a0 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800d358:	696e      	ldr	r6, [r5, #20]
 800d35a:	b34e      	cbz	r6, 800d3b0 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800d35c:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d360:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800d362:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d364:	b34c      	cbz	r4, 800d3ba <osThreadNew+0x82>
 800d366:	68ea      	ldr	r2, [r5, #12]
 800d368:	2aab      	cmp	r2, #171	; 0xab
 800d36a:	d919      	bls.n	800d3a0 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d36c:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d36e:	b1bd      	cbz	r5, 800d3a0 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d370:	b1b6      	cbz	r6, 800d3a0 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800d372:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800d376:	9300      	str	r3, [sp, #0]
 800d378:	4662      	mov	r2, ip
 800d37a:	460b      	mov	r3, r1
 800d37c:	4639      	mov	r1, r7
 800d37e:	f001 ffc1 	bl	800f304 <xTaskCreateStatic>
 800d382:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800d384:	4620      	mov	r0, r4
 800d386:	b007      	add	sp, #28
 800d388:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d38a:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800d38c:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800d38e:	ac05      	add	r4, sp, #20
 800d390:	9300      	str	r3, [sp, #0]
 800d392:	9401      	str	r4, [sp, #4]
 800d394:	460b      	mov	r3, r1
 800d396:	4629      	mov	r1, r5
 800d398:	f001 ffee 	bl	800f378 <xTaskCreate>
 800d39c:	2801      	cmp	r0, #1
 800d39e:	d00a      	beq.n	800d3b6 <osThreadNew+0x7e>
        return (NULL);
 800d3a0:	2400      	movs	r4, #0
}
 800d3a2:	4620      	mov	r0, r4
 800d3a4:	b007      	add	sp, #28
 800d3a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800d3a8:	1e5c      	subs	r4, r3, #1
 800d3aa:	2c37      	cmp	r4, #55	; 0x37
 800d3ac:	d9d1      	bls.n	800d352 <osThreadNew+0x1a>
 800d3ae:	e7f7      	b.n	800d3a0 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800d3b0:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800d3b4:	e7d4      	b.n	800d360 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800d3b6:	9c05      	ldr	r4, [sp, #20]
 800d3b8:	e7e4      	b.n	800d384 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800d3ba:	68ee      	ldr	r6, [r5, #12]
 800d3bc:	2e00      	cmp	r6, #0
 800d3be:	d1e1      	bne.n	800d384 <osThreadNew+0x4c>
 800d3c0:	692d      	ldr	r5, [r5, #16]
 800d3c2:	2d00      	cmp	r5, #0
 800d3c4:	d1de      	bne.n	800d384 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800d3c6:	fa1f f28c 	uxth.w	r2, ip
 800d3ca:	463d      	mov	r5, r7
 800d3cc:	e7df      	b.n	800d38e <osThreadNew+0x56>
 800d3ce:	bf00      	nop

0800d3d0 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800d3d0:	b510      	push	{r4, lr}
 800d3d2:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d3d6:	b92c      	cbnz	r4, 800d3e4 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800d3d8:	b900      	cbnz	r0, 800d3dc <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800d3da:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800d3dc:	f001 fffe 	bl	800f3dc <vTaskDelay>
    stat = osOK;
 800d3e0:	4620      	mov	r0, r4
}
 800d3e2:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d3e4:	f06f 0005 	mvn.w	r0, #5
}
 800d3e8:	bd10      	pop	{r4, pc}
 800d3ea:	bf00      	nop

0800d3ec <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800d3ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d3ee:	b083      	sub	sp, #12
 800d3f0:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800d3f4:	b9fe      	cbnz	r6, 800d436 <osSemaphoreNew+0x4a>
 800d3f6:	b1f0      	cbz	r0, 800d436 <osSemaphoreNew+0x4a>
 800d3f8:	4288      	cmp	r0, r1
 800d3fa:	460f      	mov	r7, r1
 800d3fc:	d31b      	bcc.n	800d436 <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800d3fe:	4615      	mov	r5, r2
 800d400:	b192      	cbz	r2, 800d428 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800d402:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800d406:	b1d2      	cbz	r2, 800d43e <osSemaphoreNew+0x52>
 800d408:	2b4f      	cmp	r3, #79	; 0x4f
 800d40a:	d914      	bls.n	800d436 <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800d40c:	2801      	cmp	r0, #1
 800d40e:	d038      	beq.n	800d482 <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800d410:	f000 fd8e 	bl	800df30 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800d414:	4604      	mov	r4, r0
 800d416:	b170      	cbz	r0, 800d436 <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800d418:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800d41a:	4620      	mov	r0, r4
 800d41c:	4629      	mov	r1, r5
 800d41e:	f001 fc39 	bl	800ec94 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800d422:	4620      	mov	r0, r4
 800d424:	b003      	add	sp, #12
 800d426:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800d428:	2801      	cmp	r0, #1
 800d42a:	d012      	beq.n	800d452 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d42c:	f000 fde0 	bl	800dff0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d430:	4604      	mov	r4, r0
 800d432:	2800      	cmp	r0, #0
 800d434:	d1f1      	bne.n	800d41a <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800d436:	2400      	movs	r4, #0
}
 800d438:	4620      	mov	r0, r4
 800d43a:	b003      	add	sp, #12
 800d43c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800d43e:	2b00      	cmp	r3, #0
 800d440:	d1f9      	bne.n	800d436 <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800d442:	2801      	cmp	r0, #1
 800d444:	d005      	beq.n	800d452 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d446:	f000 fdd3 	bl	800dff0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d44a:	4604      	mov	r4, r0
 800d44c:	2800      	cmp	r0, #0
 800d44e:	d1e3      	bne.n	800d418 <osSemaphoreNew+0x2c>
 800d450:	e7f1      	b.n	800d436 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800d452:	2203      	movs	r2, #3
 800d454:	2100      	movs	r1, #0
 800d456:	2001      	movs	r0, #1
 800d458:	f000 fd28 	bl	800deac <xQueueGenericCreate>
 800d45c:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800d45e:	2c00      	cmp	r4, #0
 800d460:	d0e9      	beq.n	800d436 <osSemaphoreNew+0x4a>
 800d462:	b917      	cbnz	r7, 800d46a <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800d464:	2d00      	cmp	r5, #0
 800d466:	d1d7      	bne.n	800d418 <osSemaphoreNew+0x2c>
 800d468:	e7d7      	b.n	800d41a <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d46a:	2300      	movs	r3, #0
 800d46c:	461a      	mov	r2, r3
 800d46e:	4619      	mov	r1, r3
 800d470:	4620      	mov	r0, r4
 800d472:	f000 fe03 	bl	800e07c <xQueueGenericSend>
 800d476:	2801      	cmp	r0, #1
 800d478:	d0f4      	beq.n	800d464 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800d47a:	4620      	mov	r0, r4
 800d47c:	f001 fbc4 	bl	800ec08 <vQueueDelete>
 800d480:	e7d9      	b.n	800d436 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800d482:	4613      	mov	r3, r2
 800d484:	2203      	movs	r2, #3
 800d486:	9200      	str	r2, [sp, #0]
 800d488:	4631      	mov	r1, r6
 800d48a:	4632      	mov	r2, r6
 800d48c:	f000 fca0 	bl	800ddd0 <xQueueGenericCreateStatic>
 800d490:	4604      	mov	r4, r0
 800d492:	e7e4      	b.n	800d45e <osSemaphoreNew+0x72>

0800d494 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d494:	b370      	cbz	r0, 800d4f4 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800d496:	b510      	push	{r4, lr}
 800d498:	460c      	mov	r4, r1
 800d49a:	b082      	sub	sp, #8
 800d49c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d4a0:	b1c3      	cbz	r3, 800d4d4 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800d4a2:	bb21      	cbnz	r1, 800d4ee <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d4a4:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d4a6:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d4a8:	f001 fb2c 	bl	800eb04 <xQueueReceiveFromISR>
 800d4ac:	2801      	cmp	r0, #1
 800d4ae:	d11a      	bne.n	800d4e6 <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d4b0:	9b01      	ldr	r3, [sp, #4]
 800d4b2:	b913      	cbnz	r3, 800d4ba <osSemaphoreAcquire+0x26>
  stat = osOK;
 800d4b4:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800d4b6:	b002      	add	sp, #8
 800d4b8:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800d4ba:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d4be:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d4c2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d4c6:	f3bf 8f4f 	dsb	sy
 800d4ca:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d4ce:	4620      	mov	r0, r4
}
 800d4d0:	b002      	add	sp, #8
 800d4d2:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800d4d4:	f001 f98c 	bl	800e7f0 <xQueueSemaphoreTake>
 800d4d8:	2801      	cmp	r0, #1
 800d4da:	d0eb      	beq.n	800d4b4 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800d4dc:	b11c      	cbz	r4, 800d4e6 <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800d4de:	f06f 0001 	mvn.w	r0, #1
}
 800d4e2:	b002      	add	sp, #8
 800d4e4:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800d4e6:	f06f 0002 	mvn.w	r0, #2
}
 800d4ea:	b002      	add	sp, #8
 800d4ec:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800d4ee:	f06f 0003 	mvn.w	r0, #3
 800d4f2:	e7e0      	b.n	800d4b6 <osSemaphoreAcquire+0x22>
 800d4f4:	f06f 0003 	mvn.w	r0, #3
}
 800d4f8:	4770      	bx	lr
 800d4fa:	bf00      	nop

0800d4fc <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d4fc:	b330      	cbz	r0, 800d54c <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800d4fe:	b510      	push	{r4, lr}
 800d500:	b082      	sub	sp, #8
 800d502:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d506:	b1ab      	cbz	r3, 800d534 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800d508:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d50a:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800d50c:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d50e:	f000 ff99 	bl	800e444 <xQueueGiveFromISR>
 800d512:	2801      	cmp	r0, #1
 800d514:	d117      	bne.n	800d546 <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800d516:	9b01      	ldr	r3, [sp, #4]
 800d518:	b193      	cbz	r3, 800d540 <osSemaphoreRelease+0x44>
 800d51a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d51e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d522:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d526:	f3bf 8f4f 	dsb	sy
 800d52a:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d52e:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800d530:	b002      	add	sp, #8
 800d532:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d534:	461a      	mov	r2, r3
 800d536:	4619      	mov	r1, r3
 800d538:	f000 fda0 	bl	800e07c <xQueueGenericSend>
 800d53c:	2801      	cmp	r0, #1
 800d53e:	d102      	bne.n	800d546 <osSemaphoreRelease+0x4a>
  stat = osOK;
 800d540:	2000      	movs	r0, #0
}
 800d542:	b002      	add	sp, #8
 800d544:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800d546:	f06f 0002 	mvn.w	r0, #2
 800d54a:	e7fa      	b.n	800d542 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800d54c:	f06f 0003 	mvn.w	r0, #3
}
 800d550:	4770      	bx	lr
 800d552:	bf00      	nop

0800d554 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800d554:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d556:	b085      	sub	sp, #20
 800d558:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800d55c:	b987      	cbnz	r7, 800d580 <osMessageQueueNew+0x2c>
 800d55e:	4605      	mov	r5, r0
 800d560:	b170      	cbz	r0, 800d580 <osMessageQueueNew+0x2c>
 800d562:	b169      	cbz	r1, 800d580 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800d564:	4614      	mov	r4, r2
 800d566:	b1ea      	cbz	r2, 800d5a4 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d568:	6893      	ldr	r3, [r2, #8]
 800d56a:	b163      	cbz	r3, 800d586 <osMessageQueueNew+0x32>
 800d56c:	68d2      	ldr	r2, [r2, #12]
 800d56e:	2a4f      	cmp	r2, #79	; 0x4f
 800d570:	d906      	bls.n	800d580 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d572:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d574:	b122      	cbz	r2, 800d580 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d576:	6966      	ldr	r6, [r4, #20]
 800d578:	fb01 f505 	mul.w	r5, r1, r5
 800d57c:	42ae      	cmp	r6, r5
 800d57e:	d21c      	bcs.n	800d5ba <osMessageQueueNew+0x66>
  hQueue = NULL;
 800d580:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800d582:	b005      	add	sp, #20
 800d584:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800d586:	68d3      	ldr	r3, [r2, #12]
 800d588:	2b00      	cmp	r3, #0
 800d58a:	d1f9      	bne.n	800d580 <osMessageQueueNew+0x2c>
 800d58c:	6913      	ldr	r3, [r2, #16]
 800d58e:	2b00      	cmp	r3, #0
 800d590:	d1f6      	bne.n	800d580 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800d592:	6952      	ldr	r2, [r2, #20]
 800d594:	2a00      	cmp	r2, #0
 800d596:	d1f3      	bne.n	800d580 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d598:	f000 fc88 	bl	800deac <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d59c:	2800      	cmp	r0, #0
 800d59e:	d0ef      	beq.n	800d580 <osMessageQueueNew+0x2c>
        name = attr->name;
 800d5a0:	6824      	ldr	r4, [r4, #0]
 800d5a2:	e003      	b.n	800d5ac <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d5a4:	f000 fc82 	bl	800deac <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d5a8:	2800      	cmp	r0, #0
 800d5aa:	d0e9      	beq.n	800d580 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800d5ac:	4621      	mov	r1, r4
 800d5ae:	9003      	str	r0, [sp, #12]
 800d5b0:	f001 fb70 	bl	800ec94 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800d5b4:	9803      	ldr	r0, [sp, #12]
}
 800d5b6:	b005      	add	sp, #20
 800d5b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800d5ba:	9700      	str	r7, [sp, #0]
 800d5bc:	f000 fc08 	bl	800ddd0 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800d5c0:	2800      	cmp	r0, #0
 800d5c2:	d1ed      	bne.n	800d5a0 <osMessageQueueNew+0x4c>
 800d5c4:	e7dc      	b.n	800d580 <osMessageQueueNew+0x2c>
 800d5c6:	bf00      	nop

0800d5c8 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800d5c8:	b570      	push	{r4, r5, r6, lr}
 800d5ca:	461c      	mov	r4, r3
 800d5cc:	b082      	sub	sp, #8
 800d5ce:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d5d2:	b1be      	cbz	r6, 800d604 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d5d4:	b350      	cbz	r0, 800d62c <osMessageQueuePut+0x64>
 800d5d6:	b349      	cbz	r1, 800d62c <osMessageQueuePut+0x64>
 800d5d8:	bb43      	cbnz	r3, 800d62c <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d5da:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d5dc:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d5de:	f000 fecb 	bl	800e378 <xQueueGenericSendFromISR>
 800d5e2:	2801      	cmp	r0, #1
 800d5e4:	d11e      	bne.n	800d624 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d5e6:	9b01      	ldr	r3, [sp, #4]
 800d5e8:	b1cb      	cbz	r3, 800d61e <osMessageQueuePut+0x56>
 800d5ea:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d5ee:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d5f2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d5f6:	f3bf 8f4f 	dsb	sy
 800d5fa:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d5fe:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800d600:	b002      	add	sp, #8
 800d602:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d604:	b190      	cbz	r0, 800d62c <osMessageQueuePut+0x64>
 800d606:	b189      	cbz	r1, 800d62c <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d608:	4633      	mov	r3, r6
 800d60a:	4622      	mov	r2, r4
 800d60c:	f000 fd36 	bl	800e07c <xQueueGenericSend>
 800d610:	2801      	cmp	r0, #1
 800d612:	d004      	beq.n	800d61e <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800d614:	b134      	cbz	r4, 800d624 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800d616:	f06f 0001 	mvn.w	r0, #1
}
 800d61a:	b002      	add	sp, #8
 800d61c:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800d61e:	2000      	movs	r0, #0
}
 800d620:	b002      	add	sp, #8
 800d622:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800d624:	f06f 0002 	mvn.w	r0, #2
}
 800d628:	b002      	add	sp, #8
 800d62a:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800d62c:	f06f 0003 	mvn.w	r0, #3
 800d630:	e7e6      	b.n	800d600 <osMessageQueuePut+0x38>
 800d632:	bf00      	nop

0800d634 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800d634:	b530      	push	{r4, r5, lr}
 800d636:	461c      	mov	r4, r3
 800d638:	b083      	sub	sp, #12
 800d63a:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d63e:	b1bb      	cbz	r3, 800d670 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d640:	b348      	cbz	r0, 800d696 <osMessageQueueGet+0x62>
 800d642:	b341      	cbz	r1, 800d696 <osMessageQueueGet+0x62>
 800d644:	bb3c      	cbnz	r4, 800d696 <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d646:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d648:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d64a:	f001 fa5b 	bl	800eb04 <xQueueReceiveFromISR>
 800d64e:	2801      	cmp	r0, #1
 800d650:	d11d      	bne.n	800d68e <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d652:	9b01      	ldr	r3, [sp, #4]
 800d654:	b1c3      	cbz	r3, 800d688 <osMessageQueueGet+0x54>
 800d656:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d65a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d65e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d662:	f3bf 8f4f 	dsb	sy
 800d666:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d66a:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800d66c:	b003      	add	sp, #12
 800d66e:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d670:	b188      	cbz	r0, 800d696 <osMessageQueueGet+0x62>
 800d672:	b181      	cbz	r1, 800d696 <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d674:	4622      	mov	r2, r4
 800d676:	f000 ff3d 	bl	800e4f4 <xQueueReceive>
 800d67a:	2801      	cmp	r0, #1
 800d67c:	d004      	beq.n	800d688 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800d67e:	b134      	cbz	r4, 800d68e <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800d680:	f06f 0001 	mvn.w	r0, #1
}
 800d684:	b003      	add	sp, #12
 800d686:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800d688:	2000      	movs	r0, #0
}
 800d68a:	b003      	add	sp, #12
 800d68c:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800d68e:	f06f 0002 	mvn.w	r0, #2
}
 800d692:	b003      	add	sp, #12
 800d694:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800d696:	f06f 0003 	mvn.w	r0, #3
 800d69a:	e7e7      	b.n	800d66c <osMessageQueueGet+0x38>

0800d69c <osMessageQueueGetCount>:
 800d69c:	b130      	cbz	r0, 800d6ac <osMessageQueueGetCount+0x10>
 800d69e:	f3ef 8305 	mrs	r3, IPSR
 800d6a2:	b10b      	cbz	r3, 800d6a8 <osMessageQueueGetCount+0xc>
 800d6a4:	f001 baa2 	b.w	800ebec <uxQueueMessagesWaitingFromISR>
 800d6a8:	f001 ba8a 	b.w	800ebc0 <uxQueueMessagesWaiting>
 800d6ac:	4770      	bx	lr
 800d6ae:	bf00      	nop

0800d6b0 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800d6b0:	4b04      	ldr	r3, [pc, #16]	; (800d6c4 <vApplicationGetIdleTaskMemory+0x14>)
 800d6b2:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800d6b4:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800d6b6:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800d6b8:	4c03      	ldr	r4, [pc, #12]	; (800d6c8 <vApplicationGetIdleTaskMemory+0x18>)
 800d6ba:	600c      	str	r4, [r1, #0]
}
 800d6bc:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800d6c0:	6013      	str	r3, [r2, #0]
}
 800d6c2:	4770      	bx	lr
 800d6c4:	20002c24 	.word	0x20002c24
 800d6c8:	20002a24 	.word	0x20002a24

0800d6cc <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800d6cc:	4b05      	ldr	r3, [pc, #20]	; (800d6e4 <vApplicationGetTimerTaskMemory+0x18>)
 800d6ce:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800d6d0:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800d6d2:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800d6d6:	4c04      	ldr	r4, [pc, #16]	; (800d6e8 <vApplicationGetTimerTaskMemory+0x1c>)
 800d6d8:	600c      	str	r4, [r1, #0]
}
 800d6da:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800d6de:	6013      	str	r3, [r2, #0]
}
 800d6e0:	4770      	bx	lr
 800d6e2:	bf00      	nop
 800d6e4:	200030d4 	.word	0x200030d4
 800d6e8:	20002cd4 	.word	0x20002cd4

0800d6ec <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800d6ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d6f0:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800d6f2:	f001 ff45 	bl	800f580 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800d6f6:	4a54      	ldr	r2, [pc, #336]	; (800d848 <pvPortMalloc+0x15c>)
 800d6f8:	6816      	ldr	r6, [r2, #0]
 800d6fa:	2e00      	cmp	r6, #0
 800d6fc:	d06e      	beq.n	800d7dc <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800d6fe:	4b53      	ldr	r3, [pc, #332]	; (800d84c <pvPortMalloc+0x160>)
 800d700:	681f      	ldr	r7, [r3, #0]
 800d702:	423d      	tst	r5, r7
 800d704:	d12e      	bne.n	800d764 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800d706:	b36d      	cbz	r5, 800d764 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800d708:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800d70c:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800d70e:	bf1c      	itt	ne
 800d710:	f024 0407 	bicne.w	r4, r4, #7
 800d714:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800d716:	b32c      	cbz	r4, 800d764 <pvPortMalloc+0x78>
 800d718:	f8df c144 	ldr.w	ip, [pc, #324]	; 800d860 <pvPortMalloc+0x174>
 800d71c:	f8dc 5000 	ldr.w	r5, [ip]
 800d720:	42a5      	cmp	r5, r4
 800d722:	d31f      	bcc.n	800d764 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800d724:	484a      	ldr	r0, [pc, #296]	; (800d850 <pvPortMalloc+0x164>)
 800d726:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800d728:	e003      	b.n	800d732 <pvPortMalloc+0x46>
 800d72a:	681a      	ldr	r2, [r3, #0]
 800d72c:	b122      	cbz	r2, 800d738 <pvPortMalloc+0x4c>
 800d72e:	4618      	mov	r0, r3
 800d730:	4613      	mov	r3, r2
 800d732:	6859      	ldr	r1, [r3, #4]
 800d734:	42a1      	cmp	r1, r4
 800d736:	d3f8      	bcc.n	800d72a <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800d738:	42b3      	cmp	r3, r6
 800d73a:	d013      	beq.n	800d764 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800d73c:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d73e:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800d740:	f858 eb08 	ldr.w	lr, [r8], #8
 800d744:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d748:	2a10      	cmp	r2, #16
 800d74a:	d929      	bls.n	800d7a0 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800d74c:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800d74e:	0748      	lsls	r0, r1, #29
 800d750:	d00f      	beq.n	800d772 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800d752:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d756:	f383 8811 	msr	BASEPRI, r3
 800d75a:	f3bf 8f6f 	isb	sy
 800d75e:	f3bf 8f4f 	dsb	sy
 800d762:	e7fe      	b.n	800d762 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800d764:	f001 ff14 	bl	800f590 <xTaskResumeAll>
 800d768:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800d76c:	4640      	mov	r0, r8
 800d76e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800d772:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d774:	4a36      	ldr	r2, [pc, #216]	; (800d850 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800d776:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d778:	4614      	mov	r4, r2
 800d77a:	6812      	ldr	r2, [r2, #0]
 800d77c:	4291      	cmp	r1, r2
 800d77e:	d8fb      	bhi.n	800d778 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d780:	6860      	ldr	r0, [r4, #4]
 800d782:	eb04 0e00 	add.w	lr, r4, r0
 800d786:	4571      	cmp	r1, lr
 800d788:	d04b      	beq.n	800d822 <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d78a:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d78e:	eb01 000e 	add.w	r0, r1, lr
 800d792:	4282      	cmp	r2, r0
 800d794:	d051      	beq.n	800d83a <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800d796:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d798:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d79a:	bf18      	it	ne
 800d79c:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d79e:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d7a0:	4a2c      	ldr	r2, [pc, #176]	; (800d854 <pvPortMalloc+0x168>)
 800d7a2:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d7a4:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d7a6:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800d7a8:	bf38      	it	cc
 800d7aa:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800d7ac:	4a2a      	ldr	r2, [pc, #168]	; (800d858 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d7ae:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800d7b2:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800d7b4:	2000      	movs	r0, #0
 800d7b6:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800d7ba:	6813      	ldr	r3, [r2, #0]
 800d7bc:	3301      	adds	r3, #1
 800d7be:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800d7c0:	f001 fee6 	bl	800f590 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800d7c4:	f018 0f07 	tst.w	r8, #7
 800d7c8:	d0d0      	beq.n	800d76c <pvPortMalloc+0x80>
 800d7ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7ce:	f383 8811 	msr	BASEPRI, r3
 800d7d2:	f3bf 8f6f 	isb	sy
 800d7d6:	f3bf 8f4f 	dsb	sy
 800d7da:	e7fe      	b.n	800d7da <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800d7dc:	4b1f      	ldr	r3, [pc, #124]	; (800d85c <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800d7de:	075e      	lsls	r6, r3, #29
 800d7e0:	d118      	bne.n	800d814 <pvPortMalloc+0x128>
 800d7e2:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800d7e6:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800d7e8:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d7ea:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800d7ee:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d7f0:	4a18      	ldr	r2, [pc, #96]	; (800d854 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d7f2:	4817      	ldr	r0, [pc, #92]	; (800d850 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d7f4:	4c15      	ldr	r4, [pc, #84]	; (800d84c <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d7f6:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800d7f8:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d7fa:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d7fc:	4a18      	ldr	r2, [pc, #96]	; (800d860 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d7fe:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d802:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800d804:	2200      	movs	r2, #0
 800d806:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d808:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800d80a:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800d80e:	e9c1 6300 	strd	r6, r3, [r1]
}
 800d812:	e776      	b.n	800d702 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800d814:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800d816:	f021 0107 	bic.w	r1, r1, #7
 800d81a:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d81e:	460b      	mov	r3, r1
 800d820:	e7e2      	b.n	800d7e8 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d822:	6849      	ldr	r1, [r1, #4]
 800d824:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d828:	eb04 010e 	add.w	r1, r4, lr
 800d82c:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d82e:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d832:	d001      	beq.n	800d838 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d834:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800d836:	e7b2      	b.n	800d79e <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d838:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d83a:	42b2      	cmp	r2, r6
 800d83c:	d0ab      	beq.n	800d796 <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d83e:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d840:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d842:	4470      	add	r0, lr
 800d844:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d846:	e7a6      	b.n	800d796 <pvPortMalloc+0xaa>
 800d848:	20003180 	.word	0x20003180
 800d84c:	20013184 	.word	0x20013184
 800d850:	20013198 	.word	0x20013198
 800d854:	2001318c 	.word	0x2001318c
 800d858:	20013190 	.word	0x20013190
 800d85c:	20003184 	.word	0x20003184
 800d860:	20013188 	.word	0x20013188

0800d864 <vPortFree>:
	if( pv != NULL )
 800d864:	b1d0      	cbz	r0, 800d89c <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d866:	4a2c      	ldr	r2, [pc, #176]	; (800d918 <vPortFree+0xb4>)
 800d868:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800d86c:	6812      	ldr	r2, [r2, #0]
 800d86e:	4213      	tst	r3, r2
 800d870:	d00b      	beq.n	800d88a <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800d872:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800d876:	b191      	cbz	r1, 800d89e <vPortFree+0x3a>
 800d878:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d87c:	f383 8811 	msr	BASEPRI, r3
 800d880:	f3bf 8f6f 	isb	sy
 800d884:	f3bf 8f4f 	dsb	sy
 800d888:	e7fe      	b.n	800d888 <vPortFree+0x24>
 800d88a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d88e:	f383 8811 	msr	BASEPRI, r3
 800d892:	f3bf 8f6f 	isb	sy
 800d896:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d89a:	e7fe      	b.n	800d89a <vPortFree+0x36>
 800d89c:	4770      	bx	lr
{
 800d89e:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d8a0:	ea23 0302 	bic.w	r3, r3, r2
{
 800d8a4:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d8a6:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d8aa:	4c1c      	ldr	r4, [pc, #112]	; (800d91c <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d8ac:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800d8ae:	f001 fe67 	bl	800f580 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d8b2:	9801      	ldr	r0, [sp, #4]
 800d8b4:	6822      	ldr	r2, [r4, #0]
 800d8b6:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d8ba:	4b19      	ldr	r3, [pc, #100]	; (800d920 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d8bc:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800d8be:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d8c0:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d8c2:	461a      	mov	r2, r3
 800d8c4:	681b      	ldr	r3, [r3, #0]
 800d8c6:	4298      	cmp	r0, r3
 800d8c8:	d8fb      	bhi.n	800d8c2 <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d8ca:	6854      	ldr	r4, [r2, #4]
 800d8cc:	eb02 0e04 	add.w	lr, r2, r4
 800d8d0:	4570      	cmp	r0, lr
 800d8d2:	d010      	beq.n	800d8f6 <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d8d4:	eb00 0c01 	add.w	ip, r0, r1
 800d8d8:	4563      	cmp	r3, ip
 800d8da:	d014      	beq.n	800d906 <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800d8dc:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d8de:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d8e0:	bf18      	it	ne
 800d8e2:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800d8e4:	4a0f      	ldr	r2, [pc, #60]	; (800d924 <vPortFree+0xc0>)
 800d8e6:	6813      	ldr	r3, [r2, #0]
 800d8e8:	3301      	adds	r3, #1
 800d8ea:	6013      	str	r3, [r2, #0]
}
 800d8ec:	b002      	add	sp, #8
 800d8ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800d8f2:	f001 be4d 	b.w	800f590 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d8f6:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d8f8:	1850      	adds	r0, r2, r1
 800d8fa:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d8fc:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d8fe:	d001      	beq.n	800d904 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d900:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800d902:	e7ef      	b.n	800d8e4 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d904:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d906:	4c08      	ldr	r4, [pc, #32]	; (800d928 <vPortFree+0xc4>)
 800d908:	6824      	ldr	r4, [r4, #0]
 800d90a:	42a3      	cmp	r3, r4
 800d90c:	d0e6      	beq.n	800d8dc <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d90e:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d912:	4421      	add	r1, r4
 800d914:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d916:	e7e1      	b.n	800d8dc <vPortFree+0x78>
 800d918:	20013184 	.word	0x20013184
 800d91c:	20013188 	.word	0x20013188
 800d920:	20013198 	.word	0x20013198
 800d924:	20013194 	.word	0x20013194
 800d928:	20003180 	.word	0x20003180

0800d92c <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d92c:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d930:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d934:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d936:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d93a:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d93e:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800d940:	4770      	bx	lr
 800d942:	bf00      	nop

0800d944 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800d944:	2300      	movs	r3, #0
 800d946:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800d948:	4770      	bx	lr
 800d94a:	bf00      	nop

0800d94c <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800d94c:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800d94e:	689a      	ldr	r2, [r3, #8]
 800d950:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d952:	6802      	ldr	r2, [r0, #0]
{
 800d954:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d956:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800d958:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d95a:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d95c:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800d95e:	6099      	str	r1, [r3, #8]
}
 800d960:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800d964:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d966:	6002      	str	r2, [r0, #0]
}
 800d968:	4770      	bx	lr
 800d96a:	bf00      	nop

0800d96c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800d96c:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800d96e:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800d970:	1c6b      	adds	r3, r5, #1
 800d972:	d010      	beq.n	800d996 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800d974:	f100 0308 	add.w	r3, r0, #8
 800d978:	461c      	mov	r4, r3
 800d97a:	685b      	ldr	r3, [r3, #4]
 800d97c:	681a      	ldr	r2, [r3, #0]
 800d97e:	42aa      	cmp	r2, r5
 800d980:	d9fa      	bls.n	800d978 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d982:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d984:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d986:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800d988:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800d98a:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800d98c:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800d98e:	6108      	str	r0, [r1, #16]
}
 800d990:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800d992:	6002      	str	r2, [r0, #0]
}
 800d994:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800d996:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d998:	6863      	ldr	r3, [r4, #4]
 800d99a:	e7f2      	b.n	800d982 <vListInsert+0x16>

0800d99c <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800d99c:	6903      	ldr	r3, [r0, #16]
{
 800d99e:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d9a0:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800d9a4:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d9a6:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800d9a8:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800d9aa:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800d9ac:	bf08      	it	eq
 800d9ae:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800d9b0:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800d9b2:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800d9b6:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800d9b8:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800d9ba:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800d9bc:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800d9be:	6818      	ldr	r0, [r3, #0]
}
 800d9c0:	4770      	bx	lr
 800d9c2:	bf00      	nop

0800d9c4 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800d9c4:	4808      	ldr	r0, [pc, #32]	; (800d9e8 <prvPortStartFirstTask+0x24>)
 800d9c6:	6800      	ldr	r0, [r0, #0]
 800d9c8:	6800      	ldr	r0, [r0, #0]
 800d9ca:	f380 8808 	msr	MSP, r0
 800d9ce:	f04f 0000 	mov.w	r0, #0
 800d9d2:	f380 8814 	msr	CONTROL, r0
 800d9d6:	b662      	cpsie	i
 800d9d8:	b661      	cpsie	f
 800d9da:	f3bf 8f4f 	dsb	sy
 800d9de:	f3bf 8f6f 	isb	sy
 800d9e2:	df00      	svc	0
 800d9e4:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800d9e6:	0000      	.short	0x0000
 800d9e8:	e000ed08 	.word	0xe000ed08

0800d9ec <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800d9ec:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800d9fc <vPortEnableVFP+0x10>
 800d9f0:	6801      	ldr	r1, [r0, #0]
 800d9f2:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800d9f6:	6001      	str	r1, [r0, #0]
 800d9f8:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800d9fa:	0000      	.short	0x0000
 800d9fc:	e000ed88 	.word	0xe000ed88

0800da00 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800da00:	4b0e      	ldr	r3, [pc, #56]	; (800da3c <prvTaskExitError+0x3c>)
 800da02:	681b      	ldr	r3, [r3, #0]
{
 800da04:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800da06:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800da08:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800da0a:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800da0c:	d008      	beq.n	800da20 <prvTaskExitError+0x20>
 800da0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da12:	f383 8811 	msr	BASEPRI, r3
 800da16:	f3bf 8f6f 	isb	sy
 800da1a:	f3bf 8f4f 	dsb	sy
 800da1e:	e7fe      	b.n	800da1e <prvTaskExitError+0x1e>
 800da20:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da24:	f383 8811 	msr	BASEPRI, r3
 800da28:	f3bf 8f6f 	isb	sy
 800da2c:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800da30:	9b01      	ldr	r3, [sp, #4]
 800da32:	2b00      	cmp	r3, #0
 800da34:	d0fc      	beq.n	800da30 <prvTaskExitError+0x30>
}
 800da36:	b002      	add	sp, #8
 800da38:	4770      	bx	lr
 800da3a:	bf00      	nop
 800da3c:	20000084 	.word	0x20000084

0800da40 <pxPortInitialiseStack>:
{
 800da40:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800da42:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800da46:	4c07      	ldr	r4, [pc, #28]	; (800da64 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800da48:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800da4c:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800da50:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800da54:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800da58:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800da5c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800da60:	3844      	subs	r0, #68	; 0x44
 800da62:	4770      	bx	lr
 800da64:	0800da01 	.word	0x0800da01
	...

0800da70 <SVC_Handler>:
	__asm volatile (
 800da70:	4b07      	ldr	r3, [pc, #28]	; (800da90 <pxCurrentTCBConst2>)
 800da72:	6819      	ldr	r1, [r3, #0]
 800da74:	6808      	ldr	r0, [r1, #0]
 800da76:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800da7a:	f380 8809 	msr	PSP, r0
 800da7e:	f3bf 8f6f 	isb	sy
 800da82:	f04f 0000 	mov.w	r0, #0
 800da86:	f380 8811 	msr	BASEPRI, r0
 800da8a:	4770      	bx	lr
 800da8c:	f3af 8000 	nop.w

0800da90 <pxCurrentTCBConst2>:
 800da90:	200131e8 	.word	0x200131e8

0800da94 <vPortEnterCritical>:
 800da94:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da98:	f383 8811 	msr	BASEPRI, r3
 800da9c:	f3bf 8f6f 	isb	sy
 800daa0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800daa4:	4a0b      	ldr	r2, [pc, #44]	; (800dad4 <vPortEnterCritical+0x40>)
 800daa6:	6813      	ldr	r3, [r2, #0]
 800daa8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800daaa:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800daac:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800daae:	d000      	beq.n	800dab2 <vPortEnterCritical+0x1e>
}
 800dab0:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800dab2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dab6:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800daba:	b2db      	uxtb	r3, r3
 800dabc:	2b00      	cmp	r3, #0
 800dabe:	d0f7      	beq.n	800dab0 <vPortEnterCritical+0x1c>
 800dac0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dac4:	f383 8811 	msr	BASEPRI, r3
 800dac8:	f3bf 8f6f 	isb	sy
 800dacc:	f3bf 8f4f 	dsb	sy
 800dad0:	e7fe      	b.n	800dad0 <vPortEnterCritical+0x3c>
 800dad2:	bf00      	nop
 800dad4:	20000084 	.word	0x20000084

0800dad8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800dad8:	4a08      	ldr	r2, [pc, #32]	; (800dafc <vPortExitCritical+0x24>)
 800dada:	6813      	ldr	r3, [r2, #0]
 800dadc:	b943      	cbnz	r3, 800daf0 <vPortExitCritical+0x18>
 800dade:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dae2:	f383 8811 	msr	BASEPRI, r3
 800dae6:	f3bf 8f6f 	isb	sy
 800daea:	f3bf 8f4f 	dsb	sy
 800daee:	e7fe      	b.n	800daee <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800daf0:	3b01      	subs	r3, #1
 800daf2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800daf4:	b90b      	cbnz	r3, 800dafa <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800daf6:	f383 8811 	msr	BASEPRI, r3
}
 800dafa:	4770      	bx	lr
 800dafc:	20000084 	.word	0x20000084

0800db00 <PendSV_Handler>:
	__asm volatile
 800db00:	f3ef 8009 	mrs	r0, PSP
 800db04:	f3bf 8f6f 	isb	sy
 800db08:	4b15      	ldr	r3, [pc, #84]	; (800db60 <pxCurrentTCBConst>)
 800db0a:	681a      	ldr	r2, [r3, #0]
 800db0c:	f01e 0f10 	tst.w	lr, #16
 800db10:	bf08      	it	eq
 800db12:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800db16:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800db1a:	6010      	str	r0, [r2, #0]
 800db1c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800db20:	f04f 0050 	mov.w	r0, #80	; 0x50
 800db24:	f380 8811 	msr	BASEPRI, r0
 800db28:	f3bf 8f4f 	dsb	sy
 800db2c:	f3bf 8f6f 	isb	sy
 800db30:	f001 fd54 	bl	800f5dc <vTaskSwitchContext>
 800db34:	f04f 0000 	mov.w	r0, #0
 800db38:	f380 8811 	msr	BASEPRI, r0
 800db3c:	bc09      	pop	{r0, r3}
 800db3e:	6819      	ldr	r1, [r3, #0]
 800db40:	6808      	ldr	r0, [r1, #0]
 800db42:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800db46:	f01e 0f10 	tst.w	lr, #16
 800db4a:	bf08      	it	eq
 800db4c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800db50:	f380 8809 	msr	PSP, r0
 800db54:	f3bf 8f6f 	isb	sy
 800db58:	4770      	bx	lr
 800db5a:	bf00      	nop
 800db5c:	f3af 8000 	nop.w

0800db60 <pxCurrentTCBConst>:
 800db60:	200131e8 	.word	0x200131e8

0800db64 <xPortSysTickHandler>:
{
 800db64:	b508      	push	{r3, lr}
	__asm volatile
 800db66:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db6a:	f383 8811 	msr	BASEPRI, r3
 800db6e:	f3bf 8f6f 	isb	sy
 800db72:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800db76:	f001 fd21 	bl	800f5bc <xTaskIncrementTick>
 800db7a:	b128      	cbz	r0, 800db88 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800db7c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800db80:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800db84:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800db88:	2300      	movs	r3, #0
 800db8a:	f383 8811 	msr	BASEPRI, r3
}
 800db8e:	bd08      	pop	{r3, pc}

0800db90 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800db90:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800db94:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800db96:	4906      	ldr	r1, [pc, #24]	; (800dbb0 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800db98:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800db9a:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800db9c:	680b      	ldr	r3, [r1, #0]
 800db9e:	4905      	ldr	r1, [pc, #20]	; (800dbb4 <vPortSetupTimerInterrupt+0x24>)
 800dba0:	fba1 1303 	umull	r1, r3, r1, r3
 800dba4:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800dba6:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800dba8:	3b01      	subs	r3, #1
 800dbaa:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800dbac:	6110      	str	r0, [r2, #16]
}
 800dbae:	4770      	bx	lr
 800dbb0:	20000078 	.word	0x20000078
 800dbb4:	10624dd3 	.word	0x10624dd3

0800dbb8 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800dbb8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dbbc:	4a49      	ldr	r2, [pc, #292]	; (800dce4 <xPortStartScheduler+0x12c>)
 800dbbe:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800dbc2:	4291      	cmp	r1, r2
 800dbc4:	d043      	beq.n	800dc4e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800dbc6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800dbca:	4b47      	ldr	r3, [pc, #284]	; (800dce8 <xPortStartScheduler+0x130>)
 800dbcc:	429a      	cmp	r2, r3
 800dbce:	d035      	beq.n	800dc3c <xPortStartScheduler+0x84>
{
 800dbd0:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800dbd2:	4b46      	ldr	r3, [pc, #280]	; (800dcec <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800dbd4:	4846      	ldr	r0, [pc, #280]	; (800dcf0 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800dbd6:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800dbd8:	4c46      	ldr	r4, [pc, #280]	; (800dcf4 <xPortStartScheduler+0x13c>)
{
 800dbda:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800dbdc:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800dbde:	b2d2      	uxtb	r2, r2
 800dbe0:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800dbe2:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800dbe4:	781b      	ldrb	r3, [r3, #0]
 800dbe6:	b2db      	uxtb	r3, r3
 800dbe8:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800dbec:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800dbf0:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800dbf4:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800dbf8:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800dbfa:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800dbfc:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800dbfe:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800dc00:	bf48      	it	mi
 800dc02:	2206      	movmi	r2, #6
 800dc04:	d511      	bpl.n	800dc2a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800dc06:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800dc0a:	005b      	lsls	r3, r3, #1
 800dc0c:	b2db      	uxtb	r3, r3
 800dc0e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800dc12:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800dc16:	0609      	lsls	r1, r1, #24
 800dc18:	4610      	mov	r0, r2
 800dc1a:	f102 32ff 	add.w	r2, r2, #4294967295
 800dc1e:	d4f2      	bmi.n	800dc06 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800dc20:	2803      	cmp	r0, #3
 800dc22:	6020      	str	r0, [r4, #0]
 800dc24:	f88d 3007 	strb.w	r3, [sp, #7]
 800dc28:	d01a      	beq.n	800dc60 <xPortStartScheduler+0xa8>
	__asm volatile
 800dc2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc2e:	f383 8811 	msr	BASEPRI, r3
 800dc32:	f3bf 8f6f 	isb	sy
 800dc36:	f3bf 8f4f 	dsb	sy
 800dc3a:	e7fe      	b.n	800dc3a <xPortStartScheduler+0x82>
 800dc3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc40:	f383 8811 	msr	BASEPRI, r3
 800dc44:	f3bf 8f6f 	isb	sy
 800dc48:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800dc4c:	e7fe      	b.n	800dc4c <xPortStartScheduler+0x94>
 800dc4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc52:	f383 8811 	msr	BASEPRI, r3
 800dc56:	f3bf 8f6f 	isb	sy
 800dc5a:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800dc5e:	e7fe      	b.n	800dc5e <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800dc60:	9b02      	ldr	r3, [sp, #8]
 800dc62:	4a22      	ldr	r2, [pc, #136]	; (800dcec <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800dc64:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800dc68:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800dc6c:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800dc6e:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800dc70:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800dc72:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800dc76:	4c20      	ldr	r4, [pc, #128]	; (800dcf8 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800dc78:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800dc7c:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800dc80:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800dc84:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800dc88:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800dc8c:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800dc8e:	f7ff ff7f 	bl	800db90 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800dc92:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800dc94:	f7ff feaa 	bl	800d9ec <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800dc98:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800dc9c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800dca0:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800dca4:	f7ff fe8e 	bl	800d9c4 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800dca8:	f001 fc98 	bl	800f5dc <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800dcac:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800dcae:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800dcb0:	3301      	adds	r3, #1
 800dcb2:	d008      	beq.n	800dcc6 <xPortStartScheduler+0x10e>
 800dcb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dcb8:	f383 8811 	msr	BASEPRI, r3
 800dcbc:	f3bf 8f6f 	isb	sy
 800dcc0:	f3bf 8f4f 	dsb	sy
 800dcc4:	e7fe      	b.n	800dcc4 <xPortStartScheduler+0x10c>
 800dcc6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dcca:	f383 8811 	msr	BASEPRI, r3
 800dcce:	f3bf 8f6f 	isb	sy
 800dcd2:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800dcd6:	9b03      	ldr	r3, [sp, #12]
 800dcd8:	2b00      	cmp	r3, #0
 800dcda:	d0fc      	beq.n	800dcd6 <xPortStartScheduler+0x11e>
}
 800dcdc:	2000      	movs	r0, #0
 800dcde:	b004      	add	sp, #16
 800dce0:	bd70      	pop	{r4, r5, r6, pc}
 800dce2:	bf00      	nop
 800dce4:	410fc271 	.word	0x410fc271
 800dce8:	410fc270 	.word	0x410fc270
 800dcec:	e000e400 	.word	0xe000e400
 800dcf0:	200131a0 	.word	0x200131a0
 800dcf4:	200131a4 	.word	0x200131a4
 800dcf8:	20000084 	.word	0x20000084

0800dcfc <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800dcfc:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800dd00:	2b0f      	cmp	r3, #15
 800dd02:	d90e      	bls.n	800dd22 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800dd04:	4911      	ldr	r1, [pc, #68]	; (800dd4c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800dd06:	4a12      	ldr	r2, [pc, #72]	; (800dd50 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800dd08:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800dd0a:	7812      	ldrb	r2, [r2, #0]
 800dd0c:	429a      	cmp	r2, r3
 800dd0e:	d908      	bls.n	800dd22 <vPortValidateInterruptPriority+0x26>
 800dd10:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd14:	f383 8811 	msr	BASEPRI, r3
 800dd18:	f3bf 8f6f 	isb	sy
 800dd1c:	f3bf 8f4f 	dsb	sy
 800dd20:	e7fe      	b.n	800dd20 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800dd22:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dd26:	4a0b      	ldr	r2, [pc, #44]	; (800dd54 <vPortValidateInterruptPriority+0x58>)
 800dd28:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800dd2c:	6812      	ldr	r2, [r2, #0]
 800dd2e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800dd32:	4293      	cmp	r3, r2
 800dd34:	d908      	bls.n	800dd48 <vPortValidateInterruptPriority+0x4c>
 800dd36:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd3a:	f383 8811 	msr	BASEPRI, r3
 800dd3e:	f3bf 8f6f 	isb	sy
 800dd42:	f3bf 8f4f 	dsb	sy
 800dd46:	e7fe      	b.n	800dd46 <vPortValidateInterruptPriority+0x4a>
	}
 800dd48:	4770      	bx	lr
 800dd4a:	bf00      	nop
 800dd4c:	e000e3f0 	.word	0xe000e3f0
 800dd50:	200131a0 	.word	0x200131a0
 800dd54:	200131a4 	.word	0x200131a4

0800dd58 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800dd58:	b570      	push	{r4, r5, r6, lr}
 800dd5a:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800dd5c:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dd5e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800dd60:	b920      	cbnz	r0, 800dd6c <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800dd62:	6825      	ldr	r5, [r4, #0]
 800dd64:	b34d      	cbz	r5, 800ddba <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800dd66:	3601      	adds	r6, #1
 800dd68:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800dd6a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800dd6c:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800dd6e:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800dd70:	b97d      	cbnz	r5, 800dd92 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800dd72:	6860      	ldr	r0, [r4, #4]
 800dd74:	f01d fd67 	bl	802b846 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800dd78:	6863      	ldr	r3, [r4, #4]
 800dd7a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800dd7c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800dd7e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800dd80:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800dd82:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800dd84:	bf24      	itt	cs
 800dd86:	6823      	ldrcs	r3, [r4, #0]
 800dd88:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800dd8a:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800dd8c:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800dd8e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800dd90:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800dd92:	68e0      	ldr	r0, [r4, #12]
 800dd94:	f01d fd57 	bl	802b846 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800dd98:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800dd9a:	68e3      	ldr	r3, [r4, #12]
 800dd9c:	4251      	negs	r1, r2
 800dd9e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800dda0:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800dda2:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800dda4:	4293      	cmp	r3, r2
 800dda6:	d202      	bcs.n	800ddae <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800dda8:	68a3      	ldr	r3, [r4, #8]
 800ddaa:	440b      	add	r3, r1
 800ddac:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800ddae:	2d02      	cmp	r5, #2
 800ddb0:	d008      	beq.n	800ddc4 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800ddb2:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800ddb4:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800ddb6:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800ddb8:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800ddba:	68a0      	ldr	r0, [r4, #8]
 800ddbc:	f001 fde0 	bl	800f980 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800ddc0:	60a5      	str	r5, [r4, #8]
 800ddc2:	e7d0      	b.n	800dd66 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ddc4:	2e01      	cmp	r6, #1
 800ddc6:	bf38      	it	cc
 800ddc8:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800ddca:	2000      	movs	r0, #0
 800ddcc:	e7cc      	b.n	800dd68 <prvCopyDataToQueue+0x10>
 800ddce:	bf00      	nop

0800ddd0 <xQueueGenericCreateStatic>:
	{
 800ddd0:	b530      	push	{r4, r5, lr}
 800ddd2:	b083      	sub	sp, #12
 800ddd4:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800ddd8:	b940      	cbnz	r0, 800ddec <xQueueGenericCreateStatic+0x1c>
 800ddda:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ddde:	f383 8811 	msr	BASEPRI, r3
 800dde2:	f3bf 8f6f 	isb	sy
 800dde6:	f3bf 8f4f 	dsb	sy
 800ddea:	e7fe      	b.n	800ddea <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800ddec:	461d      	mov	r5, r3
 800ddee:	b17b      	cbz	r3, 800de10 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800ddf0:	b302      	cbz	r2, 800de34 <xQueueGenericCreateStatic+0x64>
 800ddf2:	b1b1      	cbz	r1, 800de22 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800ddf4:	2350      	movs	r3, #80	; 0x50
 800ddf6:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800ddf8:	9b01      	ldr	r3, [sp, #4]
 800ddfa:	2b50      	cmp	r3, #80	; 0x50
 800ddfc:	d023      	beq.n	800de46 <xQueueGenericCreateStatic+0x76>
 800ddfe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de02:	f383 8811 	msr	BASEPRI, r3
 800de06:	f3bf 8f6f 	isb	sy
 800de0a:	f3bf 8f4f 	dsb	sy
 800de0e:	e7fe      	b.n	800de0e <xQueueGenericCreateStatic+0x3e>
 800de10:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de14:	f383 8811 	msr	BASEPRI, r3
 800de18:	f3bf 8f6f 	isb	sy
 800de1c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800de20:	e7fe      	b.n	800de20 <xQueueGenericCreateStatic+0x50>
 800de22:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de26:	f383 8811 	msr	BASEPRI, r3
 800de2a:	f3bf 8f6f 	isb	sy
 800de2e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800de32:	e7fe      	b.n	800de32 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800de34:	bb89      	cbnz	r1, 800de9a <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800de36:	2250      	movs	r2, #80	; 0x50
 800de38:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800de3a:	9a01      	ldr	r2, [sp, #4]
 800de3c:	2a50      	cmp	r2, #80	; 0x50
 800de3e:	d1de      	bne.n	800ddfe <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800de40:	9a01      	ldr	r2, [sp, #4]
 800de42:	462a      	mov	r2, r5
 800de44:	e000      	b.n	800de48 <xQueueGenericCreateStatic+0x78>
 800de46:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800de48:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800de4a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800de4c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800de50:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800de54:	f7ff fe1e 	bl	800da94 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800de58:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800de5c:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800de5e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800de60:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800de64:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800de66:	4401      	add	r1, r0
 800de68:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800de6a:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800de6c:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800de6e:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800de70:	21ff      	movs	r1, #255	; 0xff
 800de72:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800de76:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800de78:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800de7c:	f105 0010 	add.w	r0, r5, #16
 800de80:	f7ff fd54 	bl	800d92c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800de84:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800de88:	f7ff fd50 	bl	800d92c <vListInitialise>
	taskEXIT_CRITICAL();
 800de8c:	f7ff fe24 	bl	800dad8 <vPortExitCritical>
	}
 800de90:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800de92:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800de96:	b003      	add	sp, #12
 800de98:	bd30      	pop	{r4, r5, pc}
 800de9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de9e:	f383 8811 	msr	BASEPRI, r3
 800dea2:	f3bf 8f6f 	isb	sy
 800dea6:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800deaa:	e7fe      	b.n	800deaa <xQueueGenericCreateStatic+0xda>

0800deac <xQueueGenericCreate>:
	{
 800deac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800deae:	b940      	cbnz	r0, 800dec2 <xQueueGenericCreate+0x16>
 800deb0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800deb4:	f383 8811 	msr	BASEPRI, r3
 800deb8:	f3bf 8f6f 	isb	sy
 800debc:	f3bf 8f4f 	dsb	sy
 800dec0:	e7fe      	b.n	800dec0 <xQueueGenericCreate+0x14>
 800dec2:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800dec4:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800dec8:	3050      	adds	r0, #80	; 0x50
 800deca:	460e      	mov	r6, r1
 800decc:	4617      	mov	r7, r2
 800dece:	f7ff fc0d 	bl	800d6ec <pvPortMalloc>
		if( pxNewQueue != NULL )
 800ded2:	4604      	mov	r4, r0
 800ded4:	b340      	cbz	r0, 800df28 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800ded6:	2300      	movs	r3, #0
 800ded8:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800dedc:	b336      	cbz	r6, 800df2c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dede:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800dee2:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800dee4:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800dee8:	f7ff fdd4 	bl	800da94 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800deec:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800def0:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800def2:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800def4:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800def8:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800defa:	440a      	add	r2, r1
 800defc:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800defe:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800df00:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800df02:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800df04:	22ff      	movs	r2, #255	; 0xff
 800df06:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800df0a:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800df0c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800df10:	f104 0010 	add.w	r0, r4, #16
 800df14:	f7ff fd0a 	bl	800d92c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800df18:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800df1c:	f7ff fd06 	bl	800d92c <vListInitialise>
	taskEXIT_CRITICAL();
 800df20:	f7ff fdda 	bl	800dad8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800df24:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800df28:	4620      	mov	r0, r4
 800df2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800df2c:	4603      	mov	r3, r0
 800df2e:	e7d8      	b.n	800dee2 <xQueueGenericCreate+0x36>

0800df30 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800df30:	b940      	cbnz	r0, 800df44 <xQueueCreateCountingSemaphoreStatic+0x14>
 800df32:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df36:	f383 8811 	msr	BASEPRI, r3
 800df3a:	f3bf 8f6f 	isb	sy
 800df3e:	f3bf 8f4f 	dsb	sy
 800df42:	e7fe      	b.n	800df42 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800df44:	4288      	cmp	r0, r1
 800df46:	d208      	bcs.n	800df5a <xQueueCreateCountingSemaphoreStatic+0x2a>
 800df48:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df4c:	f383 8811 	msr	BASEPRI, r3
 800df50:	f3bf 8f6f 	isb	sy
 800df54:	f3bf 8f4f 	dsb	sy
 800df58:	e7fe      	b.n	800df58 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800df5a:	b530      	push	{r4, r5, lr}
 800df5c:	4615      	mov	r5, r2
 800df5e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800df60:	2a00      	cmp	r2, #0
 800df62:	d03c      	beq.n	800dfde <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800df64:	2350      	movs	r3, #80	; 0x50
 800df66:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800df68:	9b03      	ldr	r3, [sp, #12]
 800df6a:	2b50      	cmp	r3, #80	; 0x50
 800df6c:	d008      	beq.n	800df80 <xQueueCreateCountingSemaphoreStatic+0x50>
 800df6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df72:	f383 8811 	msr	BASEPRI, r3
 800df76:	f3bf 8f6f 	isb	sy
 800df7a:	f3bf 8f4f 	dsb	sy
 800df7e:	e7fe      	b.n	800df7e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800df80:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800df82:	2301      	movs	r3, #1
 800df84:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800df88:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800df8a:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800df8e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800df90:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800df92:	f7ff fd7f 	bl	800da94 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800df96:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800df9a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800df9c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800df9e:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dfa2:	1ac3      	subs	r3, r0, r3
 800dfa4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dfa6:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800dfa8:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800dfac:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dfb0:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800dfb2:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800dfb4:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dfb8:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800dfba:	f105 0010 	add.w	r0, r5, #16
 800dfbe:	f7ff fcb5 	bl	800d92c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800dfc2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800dfc6:	f7ff fcb1 	bl	800d92c <vListInitialise>
	taskEXIT_CRITICAL();
 800dfca:	f7ff fd85 	bl	800dad8 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800dfce:	9901      	ldr	r1, [sp, #4]
 800dfd0:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800dfd2:	2302      	movs	r3, #2
	}
 800dfd4:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800dfd6:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800dfda:	b005      	add	sp, #20
 800dfdc:	bd30      	pop	{r4, r5, pc}
 800dfde:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfe2:	f383 8811 	msr	BASEPRI, r3
 800dfe6:	f3bf 8f6f 	isb	sy
 800dfea:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800dfee:	e7fe      	b.n	800dfee <xQueueCreateCountingSemaphoreStatic+0xbe>

0800dff0 <xQueueCreateCountingSemaphore>:
	{
 800dff0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800dff2:	b940      	cbnz	r0, 800e006 <xQueueCreateCountingSemaphore+0x16>
 800dff4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dff8:	f383 8811 	msr	BASEPRI, r3
 800dffc:	f3bf 8f6f 	isb	sy
 800e000:	f3bf 8f4f 	dsb	sy
 800e004:	e7fe      	b.n	800e004 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e006:	4288      	cmp	r0, r1
 800e008:	460e      	mov	r6, r1
 800e00a:	4604      	mov	r4, r0
 800e00c:	d208      	bcs.n	800e020 <xQueueCreateCountingSemaphore+0x30>
 800e00e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e012:	f383 8811 	msr	BASEPRI, r3
 800e016:	f3bf 8f6f 	isb	sy
 800e01a:	f3bf 8f4f 	dsb	sy
 800e01e:	e7fe      	b.n	800e01e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e020:	2050      	movs	r0, #80	; 0x50
 800e022:	f7ff fb63 	bl	800d6ec <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e026:	4605      	mov	r5, r0
 800e028:	b330      	cbz	r0, 800e078 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e02a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800e02c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e030:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e034:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800e036:	f7ff fd2d 	bl	800da94 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e03a:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800e03e:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e040:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e042:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e046:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e048:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e04a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e04c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800e04e:	22ff      	movs	r2, #255	; 0xff
 800e050:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e054:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e056:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e058:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e05c:	f105 0010 	add.w	r0, r5, #16
 800e060:	f7ff fc64 	bl	800d92c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e064:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e068:	f7ff fc60 	bl	800d92c <vListInitialise>
	taskEXIT_CRITICAL();
 800e06c:	f7ff fd34 	bl	800dad8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e070:	2302      	movs	r3, #2
 800e072:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e076:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800e078:	4628      	mov	r0, r5
 800e07a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e07c <xQueueGenericSend>:
{
 800e07c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e080:	b085      	sub	sp, #20
 800e082:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800e084:	2800      	cmp	r0, #0
 800e086:	f000 80a4 	beq.w	800e1d2 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e08a:	4688      	mov	r8, r1
 800e08c:	461f      	mov	r7, r3
 800e08e:	4604      	mov	r4, r0
 800e090:	2900      	cmp	r1, #0
 800e092:	f000 8091 	beq.w	800e1b8 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e096:	2f02      	cmp	r7, #2
 800e098:	d10b      	bne.n	800e0b2 <xQueueGenericSend+0x36>
 800e09a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e09c:	2b01      	cmp	r3, #1
 800e09e:	d008      	beq.n	800e0b2 <xQueueGenericSend+0x36>
 800e0a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0a4:	f383 8811 	msr	BASEPRI, r3
 800e0a8:	f3bf 8f6f 	isb	sy
 800e0ac:	f3bf 8f4f 	dsb	sy
 800e0b0:	e7fe      	b.n	800e0b0 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e0b2:	f001 fc0f 	bl	800f8d4 <xTaskGetSchedulerState>
 800e0b6:	4605      	mov	r5, r0
 800e0b8:	2800      	cmp	r0, #0
 800e0ba:	f000 8093 	beq.w	800e1e4 <xQueueGenericSend+0x168>
 800e0be:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e0c0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e0c4:	f7ff fce6 	bl	800da94 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e0c8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e0ca:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e0cc:	429a      	cmp	r2, r3
 800e0ce:	f0c0 80ef 	bcc.w	800e2b0 <xQueueGenericSend+0x234>
 800e0d2:	2f02      	cmp	r7, #2
 800e0d4:	f000 80ec 	beq.w	800e2b0 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e0d8:	9801      	ldr	r0, [sp, #4]
 800e0da:	2800      	cmp	r0, #0
 800e0dc:	f000 8101 	beq.w	800e2e2 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800e0e0:	2d00      	cmp	r5, #0
 800e0e2:	f000 80e1 	beq.w	800e2a8 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800e0e6:	f7ff fcf7 	bl	800dad8 <vPortExitCritical>
		vTaskSuspendAll();
 800e0ea:	f001 fa49 	bl	800f580 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e0ee:	f7ff fcd1 	bl	800da94 <vPortEnterCritical>
 800e0f2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e0f6:	2bff      	cmp	r3, #255	; 0xff
 800e0f8:	bf04      	itt	eq
 800e0fa:	2300      	moveq	r3, #0
 800e0fc:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e100:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e104:	2bff      	cmp	r3, #255	; 0xff
 800e106:	bf04      	itt	eq
 800e108:	2300      	moveq	r3, #0
 800e10a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e10e:	f7ff fce3 	bl	800dad8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e112:	a901      	add	r1, sp, #4
 800e114:	a802      	add	r0, sp, #8
 800e116:	f001 fb8f 	bl	800f838 <xTaskCheckForTimeOut>
 800e11a:	2800      	cmp	r0, #0
 800e11c:	f040 80e6 	bne.w	800e2ec <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800e120:	f7ff fcb8 	bl	800da94 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800e124:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e126:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e128:	429a      	cmp	r2, r3
 800e12a:	d068      	beq.n	800e1fe <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800e12c:	f7ff fcd4 	bl	800dad8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e130:	f7ff fcb0 	bl	800da94 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e134:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800e138:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e13a:	2d00      	cmp	r5, #0
 800e13c:	dc04      	bgt.n	800e148 <xQueueGenericSend+0xcc>
 800e13e:	e011      	b.n	800e164 <xQueueGenericSend+0xe8>
			--cTxLock;
 800e140:	1e6a      	subs	r2, r5, #1
 800e142:	b2d3      	uxtb	r3, r2
 800e144:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e146:	b16b      	cbz	r3, 800e164 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e148:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e14a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e14c:	b153      	cbz	r3, 800e164 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e14e:	f001 fb1f 	bl	800f790 <xTaskRemoveFromEventList>
 800e152:	2800      	cmp	r0, #0
 800e154:	d0f4      	beq.n	800e140 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800e156:	f001 fbb7 	bl	800f8c8 <vTaskMissedYield>
			--cTxLock;
 800e15a:	1e6a      	subs	r2, r5, #1
 800e15c:	b2d3      	uxtb	r3, r2
 800e15e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e160:	2b00      	cmp	r3, #0
 800e162:	d1f1      	bne.n	800e148 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e164:	23ff      	movs	r3, #255	; 0xff
 800e166:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e16a:	f7ff fcb5 	bl	800dad8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e16e:	f7ff fc91 	bl	800da94 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e172:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800e176:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e178:	2d00      	cmp	r5, #0
 800e17a:	dd14      	ble.n	800e1a6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e17c:	f104 0910 	add.w	r9, r4, #16
 800e180:	e003      	b.n	800e18a <xQueueGenericSend+0x10e>
				--cRxLock;
 800e182:	1e6a      	subs	r2, r5, #1
 800e184:	b2d3      	uxtb	r3, r2
 800e186:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e188:	b16b      	cbz	r3, 800e1a6 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e18a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e18c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e18e:	b153      	cbz	r3, 800e1a6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e190:	f001 fafe 	bl	800f790 <xTaskRemoveFromEventList>
 800e194:	2800      	cmp	r0, #0
 800e196:	d0f4      	beq.n	800e182 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800e198:	f001 fb96 	bl	800f8c8 <vTaskMissedYield>
				--cRxLock;
 800e19c:	1e6a      	subs	r2, r5, #1
 800e19e:	b2d3      	uxtb	r3, r2
 800e1a0:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e1a2:	2b00      	cmp	r3, #0
 800e1a4:	d1f1      	bne.n	800e18a <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800e1a6:	23ff      	movs	r3, #255	; 0xff
 800e1a8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e1ac:	f7ff fc94 	bl	800dad8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e1b0:	f001 f9ee 	bl	800f590 <xTaskResumeAll>
 800e1b4:	2501      	movs	r5, #1
 800e1b6:	e785      	b.n	800e0c4 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e1b8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e1ba:	2b00      	cmp	r3, #0
 800e1bc:	f43f af6b 	beq.w	800e096 <xQueueGenericSend+0x1a>
 800e1c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1c4:	f383 8811 	msr	BASEPRI, r3
 800e1c8:	f3bf 8f6f 	isb	sy
 800e1cc:	f3bf 8f4f 	dsb	sy
 800e1d0:	e7fe      	b.n	800e1d0 <xQueueGenericSend+0x154>
 800e1d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1d6:	f383 8811 	msr	BASEPRI, r3
 800e1da:	f3bf 8f6f 	isb	sy
 800e1de:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e1e2:	e7fe      	b.n	800e1e2 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e1e4:	9b01      	ldr	r3, [sp, #4]
 800e1e6:	2b00      	cmp	r3, #0
 800e1e8:	f43f af6a 	beq.w	800e0c0 <xQueueGenericSend+0x44>
 800e1ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1f0:	f383 8811 	msr	BASEPRI, r3
 800e1f4:	f3bf 8f6f 	isb	sy
 800e1f8:	f3bf 8f4f 	dsb	sy
 800e1fc:	e7fe      	b.n	800e1fc <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800e1fe:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800e202:	f7ff fc69 	bl	800dad8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800e206:	9901      	ldr	r1, [sp, #4]
 800e208:	4648      	mov	r0, r9
 800e20a:	f001 fa33 	bl	800f674 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e20e:	f7ff fc41 	bl	800da94 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e212:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e216:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e218:	2d00      	cmp	r5, #0
 800e21a:	dc04      	bgt.n	800e226 <xQueueGenericSend+0x1aa>
 800e21c:	e011      	b.n	800e242 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800e21e:	1e6b      	subs	r3, r5, #1
 800e220:	b2da      	uxtb	r2, r3
 800e222:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e224:	b16a      	cbz	r2, 800e242 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e226:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e228:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e22a:	b153      	cbz	r3, 800e242 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e22c:	f001 fab0 	bl	800f790 <xTaskRemoveFromEventList>
 800e230:	2800      	cmp	r0, #0
 800e232:	d0f4      	beq.n	800e21e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800e234:	f001 fb48 	bl	800f8c8 <vTaskMissedYield>
			--cTxLock;
 800e238:	1e6b      	subs	r3, r5, #1
 800e23a:	b2da      	uxtb	r2, r3
 800e23c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e23e:	2a00      	cmp	r2, #0
 800e240:	d1f1      	bne.n	800e226 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800e242:	23ff      	movs	r3, #255	; 0xff
 800e244:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e248:	f7ff fc46 	bl	800dad8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e24c:	f7ff fc22 	bl	800da94 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e250:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e254:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e256:	2d00      	cmp	r5, #0
 800e258:	dc04      	bgt.n	800e264 <xQueueGenericSend+0x1e8>
 800e25a:	e011      	b.n	800e280 <xQueueGenericSend+0x204>
				--cRxLock;
 800e25c:	1e6b      	subs	r3, r5, #1
 800e25e:	b2da      	uxtb	r2, r3
 800e260:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e262:	b16a      	cbz	r2, 800e280 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e264:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e266:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e268:	b153      	cbz	r3, 800e280 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e26a:	f001 fa91 	bl	800f790 <xTaskRemoveFromEventList>
 800e26e:	2800      	cmp	r0, #0
 800e270:	d0f4      	beq.n	800e25c <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800e272:	f001 fb29 	bl	800f8c8 <vTaskMissedYield>
				--cRxLock;
 800e276:	1e6b      	subs	r3, r5, #1
 800e278:	b2da      	uxtb	r2, r3
 800e27a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e27c:	2a00      	cmp	r2, #0
 800e27e:	d1f1      	bne.n	800e264 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800e280:	23ff      	movs	r3, #255	; 0xff
 800e282:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e286:	f7ff fc27 	bl	800dad8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e28a:	f001 f981 	bl	800f590 <xTaskResumeAll>
 800e28e:	2800      	cmp	r0, #0
 800e290:	d190      	bne.n	800e1b4 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800e292:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e296:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e29a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e29e:	f3bf 8f4f 	dsb	sy
 800e2a2:	f3bf 8f6f 	isb	sy
 800e2a6:	e785      	b.n	800e1b4 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e2a8:	a802      	add	r0, sp, #8
 800e2aa:	f001 fab9 	bl	800f820 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800e2ae:	e71a      	b.n	800e0e6 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e2b0:	463a      	mov	r2, r7
 800e2b2:	4641      	mov	r1, r8
 800e2b4:	4620      	mov	r0, r4
 800e2b6:	f7ff fd4f 	bl	800dd58 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e2ba:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e2bc:	2b00      	cmp	r3, #0
 800e2be:	d153      	bne.n	800e368 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800e2c0:	b148      	cbz	r0, 800e2d6 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800e2c2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e2c6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e2ca:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e2ce:	f3bf 8f4f 	dsb	sy
 800e2d2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800e2d6:	f7ff fbff 	bl	800dad8 <vPortExitCritical>
				return pdPASS;
 800e2da:	2001      	movs	r0, #1
}
 800e2dc:	b005      	add	sp, #20
 800e2de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e2e2:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800e2e4:	f7ff fbf8 	bl	800dad8 <vPortExitCritical>
					return errQUEUE_FULL;
 800e2e8:	9800      	ldr	r0, [sp, #0]
 800e2ea:	e7f7      	b.n	800e2dc <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800e2ec:	f7ff fbd2 	bl	800da94 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e2f0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e2f4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e2f6:	2d00      	cmp	r5, #0
 800e2f8:	dd10      	ble.n	800e31c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e2fa:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800e2fe:	e003      	b.n	800e308 <xQueueGenericSend+0x28c>
			--cTxLock;
 800e300:	1e6b      	subs	r3, r5, #1
 800e302:	b2da      	uxtb	r2, r3
 800e304:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e306:	b14a      	cbz	r2, 800e31c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e308:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e30a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e30c:	b133      	cbz	r3, 800e31c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e30e:	f001 fa3f 	bl	800f790 <xTaskRemoveFromEventList>
 800e312:	2800      	cmp	r0, #0
 800e314:	d0f4      	beq.n	800e300 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800e316:	f001 fad7 	bl	800f8c8 <vTaskMissedYield>
 800e31a:	e7f1      	b.n	800e300 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800e31c:	23ff      	movs	r3, #255	; 0xff
 800e31e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e322:	f7ff fbd9 	bl	800dad8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e326:	f7ff fbb5 	bl	800da94 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e32a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e32e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e330:	2d00      	cmp	r5, #0
 800e332:	dd10      	ble.n	800e356 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e334:	f104 0610 	add.w	r6, r4, #16
 800e338:	e003      	b.n	800e342 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800e33a:	1e6b      	subs	r3, r5, #1
 800e33c:	b2da      	uxtb	r2, r3
 800e33e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e340:	b14a      	cbz	r2, 800e356 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e342:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e344:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e346:	b133      	cbz	r3, 800e356 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e348:	f001 fa22 	bl	800f790 <xTaskRemoveFromEventList>
 800e34c:	2800      	cmp	r0, #0
 800e34e:	d0f4      	beq.n	800e33a <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800e350:	f001 faba 	bl	800f8c8 <vTaskMissedYield>
 800e354:	e7f1      	b.n	800e33a <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800e356:	23ff      	movs	r3, #255	; 0xff
 800e358:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e35c:	f7ff fbbc 	bl	800dad8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e360:	f001 f916 	bl	800f590 <xTaskResumeAll>
			return errQUEUE_FULL;
 800e364:	2000      	movs	r0, #0
 800e366:	e7b9      	b.n	800e2dc <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e368:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e36c:	f001 fa10 	bl	800f790 <xTaskRemoveFromEventList>
 800e370:	2800      	cmp	r0, #0
 800e372:	d0b0      	beq.n	800e2d6 <xQueueGenericSend+0x25a>
 800e374:	e7a5      	b.n	800e2c2 <xQueueGenericSend+0x246>
 800e376:	bf00      	nop

0800e378 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800e378:	2800      	cmp	r0, #0
 800e37a:	d04b      	beq.n	800e414 <xQueueGenericSendFromISR+0x9c>
{
 800e37c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e380:	460e      	mov	r6, r1
 800e382:	4617      	mov	r7, r2
 800e384:	461d      	mov	r5, r3
 800e386:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e388:	b321      	cbz	r1, 800e3d4 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e38a:	2d02      	cmp	r5, #2
 800e38c:	d10b      	bne.n	800e3a6 <xQueueGenericSendFromISR+0x2e>
 800e38e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e390:	2b01      	cmp	r3, #1
 800e392:	d008      	beq.n	800e3a6 <xQueueGenericSendFromISR+0x2e>
 800e394:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e398:	f383 8811 	msr	BASEPRI, r3
 800e39c:	f3bf 8f6f 	isb	sy
 800e3a0:	f3bf 8f4f 	dsb	sy
 800e3a4:	e7fe      	b.n	800e3a4 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e3a6:	f7ff fca9 	bl	800dcfc <vPortValidateInterruptPriority>
	__asm volatile
 800e3aa:	f3ef 8811 	mrs	r8, BASEPRI
 800e3ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3b2:	f383 8811 	msr	BASEPRI, r3
 800e3b6:	f3bf 8f6f 	isb	sy
 800e3ba:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e3be:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e3c0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e3c2:	429a      	cmp	r2, r3
 800e3c4:	d312      	bcc.n	800e3ec <xQueueGenericSendFromISR+0x74>
 800e3c6:	2d02      	cmp	r5, #2
 800e3c8:	d010      	beq.n	800e3ec <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800e3ca:	2000      	movs	r0, #0
	__asm volatile
 800e3cc:	f388 8811 	msr	BASEPRI, r8
}
 800e3d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e3d4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e3d6:	2b00      	cmp	r3, #0
 800e3d8:	d0d7      	beq.n	800e38a <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800e3da:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3de:	f383 8811 	msr	BASEPRI, r3
 800e3e2:	f3bf 8f6f 	isb	sy
 800e3e6:	f3bf 8f4f 	dsb	sy
 800e3ea:	e7fe      	b.n	800e3ea <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e3ec:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800e3ee:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e3f2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e3f4:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800e3f6:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e3f8:	4620      	mov	r0, r4
 800e3fa:	f7ff fcad 	bl	800dd58 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800e3fe:	1c6b      	adds	r3, r5, #1
 800e400:	d011      	beq.n	800e426 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e402:	1c6b      	adds	r3, r5, #1
 800e404:	b25b      	sxtb	r3, r3
 800e406:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800e40a:	2001      	movs	r0, #1
	__asm volatile
 800e40c:	f388 8811 	msr	BASEPRI, r8
}
 800e410:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800e414:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e418:	f383 8811 	msr	BASEPRI, r3
 800e41c:	f3bf 8f6f 	isb	sy
 800e420:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e424:	e7fe      	b.n	800e424 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e426:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e428:	2b00      	cmp	r3, #0
 800e42a:	d0ee      	beq.n	800e40a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e42c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e430:	f001 f9ae 	bl	800f790 <xTaskRemoveFromEventList>
 800e434:	2800      	cmp	r0, #0
 800e436:	d0e8      	beq.n	800e40a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800e438:	2f00      	cmp	r7, #0
 800e43a:	d0e6      	beq.n	800e40a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e43c:	2001      	movs	r0, #1
 800e43e:	6038      	str	r0, [r7, #0]
 800e440:	e7c4      	b.n	800e3cc <xQueueGenericSendFromISR+0x54>
 800e442:	bf00      	nop

0800e444 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800e444:	b370      	cbz	r0, 800e4a4 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e446:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800e448:	b570      	push	{r4, r5, r6, lr}
 800e44a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800e44c:	b143      	cbz	r3, 800e460 <xQueueGiveFromISR+0x1c>
 800e44e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e452:	f383 8811 	msr	BASEPRI, r3
 800e456:	f3bf 8f6f 	isb	sy
 800e45a:	f3bf 8f4f 	dsb	sy
 800e45e:	e7fe      	b.n	800e45e <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e460:	6803      	ldr	r3, [r0, #0]
 800e462:	460c      	mov	r4, r1
 800e464:	b33b      	cbz	r3, 800e4b6 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e466:	f7ff fc49 	bl	800dcfc <vPortValidateInterruptPriority>
	__asm volatile
 800e46a:	f3ef 8511 	mrs	r5, BASEPRI
 800e46e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e472:	f383 8811 	msr	BASEPRI, r3
 800e476:	f3bf 8f6f 	isb	sy
 800e47a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e47e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800e480:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800e482:	429a      	cmp	r2, r3
 800e484:	d923      	bls.n	800e4ce <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800e486:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e48a:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800e48c:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e48e:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800e490:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800e492:	d020      	beq.n	800e4d6 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e494:	3301      	adds	r3, #1
 800e496:	b25b      	sxtb	r3, r3
 800e498:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800e49c:	2001      	movs	r0, #1
	__asm volatile
 800e49e:	f385 8811 	msr	BASEPRI, r5
}
 800e4a2:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800e4a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4a8:	f383 8811 	msr	BASEPRI, r3
 800e4ac:	f3bf 8f6f 	isb	sy
 800e4b0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e4b4:	e7fe      	b.n	800e4b4 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e4b6:	6883      	ldr	r3, [r0, #8]
 800e4b8:	2b00      	cmp	r3, #0
 800e4ba:	d0d4      	beq.n	800e466 <xQueueGiveFromISR+0x22>
 800e4bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4c0:	f383 8811 	msr	BASEPRI, r3
 800e4c4:	f3bf 8f6f 	isb	sy
 800e4c8:	f3bf 8f4f 	dsb	sy
 800e4cc:	e7fe      	b.n	800e4cc <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800e4ce:	2000      	movs	r0, #0
	__asm volatile
 800e4d0:	f385 8811 	msr	BASEPRI, r5
}
 800e4d4:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e4d6:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800e4d8:	2b00      	cmp	r3, #0
 800e4da:	d0df      	beq.n	800e49c <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e4dc:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800e4e0:	f001 f956 	bl	800f790 <xTaskRemoveFromEventList>
 800e4e4:	2800      	cmp	r0, #0
 800e4e6:	d0d9      	beq.n	800e49c <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800e4e8:	2c00      	cmp	r4, #0
 800e4ea:	d0d7      	beq.n	800e49c <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e4ec:	2001      	movs	r0, #1
 800e4ee:	6020      	str	r0, [r4, #0]
 800e4f0:	e7ee      	b.n	800e4d0 <xQueueGiveFromISR+0x8c>
 800e4f2:	bf00      	nop

0800e4f4 <xQueueReceive>:
{
 800e4f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e4f8:	b085      	sub	sp, #20
 800e4fa:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e4fc:	2800      	cmp	r0, #0
 800e4fe:	f000 815c 	beq.w	800e7ba <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e502:	460f      	mov	r7, r1
 800e504:	4604      	mov	r4, r0
 800e506:	2900      	cmp	r1, #0
 800e508:	d079      	beq.n	800e5fe <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e50a:	f001 f9e3 	bl	800f8d4 <xTaskGetSchedulerState>
 800e50e:	2800      	cmp	r0, #0
 800e510:	f000 8081 	beq.w	800e616 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800e514:	f7ff fabe 	bl	800da94 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e518:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e51a:	2d00      	cmp	r5, #0
 800e51c:	f040 8138 	bne.w	800e790 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e520:	9b01      	ldr	r3, [sp, #4]
 800e522:	2b00      	cmp	r3, #0
 800e524:	f000 80d5 	beq.w	800e6d2 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e528:	a802      	add	r0, sp, #8
 800e52a:	f001 f979 	bl	800f820 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800e52e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e530:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800e534:	f7ff fad0 	bl	800dad8 <vPortExitCritical>
		vTaskSuspendAll();
 800e538:	f001 f822 	bl	800f580 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e53c:	f7ff faaa 	bl	800da94 <vPortEnterCritical>
 800e540:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e544:	2bff      	cmp	r3, #255	; 0xff
 800e546:	bf08      	it	eq
 800e548:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800e54c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e550:	2bff      	cmp	r3, #255	; 0xff
 800e552:	bf08      	it	eq
 800e554:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800e558:	f7ff fabe 	bl	800dad8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e55c:	a901      	add	r1, sp, #4
 800e55e:	a802      	add	r0, sp, #8
 800e560:	f001 f96a 	bl	800f838 <xTaskCheckForTimeOut>
 800e564:	2800      	cmp	r0, #0
 800e566:	d163      	bne.n	800e630 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800e568:	f7ff fa94 	bl	800da94 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e56c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e56e:	2b00      	cmp	r3, #0
 800e570:	f000 80b5 	beq.w	800e6de <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800e574:	f7ff fab0 	bl	800dad8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e578:	f7ff fa8c 	bl	800da94 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e57c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e580:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e582:	2d00      	cmp	r5, #0
 800e584:	dc04      	bgt.n	800e590 <xQueueReceive+0x9c>
 800e586:	e011      	b.n	800e5ac <xQueueReceive+0xb8>
			--cTxLock;
 800e588:	1e6b      	subs	r3, r5, #1
 800e58a:	b2da      	uxtb	r2, r3
 800e58c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e58e:	b16a      	cbz	r2, 800e5ac <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e590:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e592:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e594:	b153      	cbz	r3, 800e5ac <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e596:	f001 f8fb 	bl	800f790 <xTaskRemoveFromEventList>
 800e59a:	2800      	cmp	r0, #0
 800e59c:	d0f4      	beq.n	800e588 <xQueueReceive+0x94>
						vTaskMissedYield();
 800e59e:	f001 f993 	bl	800f8c8 <vTaskMissedYield>
			--cTxLock;
 800e5a2:	1e6b      	subs	r3, r5, #1
 800e5a4:	b2da      	uxtb	r2, r3
 800e5a6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e5a8:	2a00      	cmp	r2, #0
 800e5aa:	d1f1      	bne.n	800e590 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800e5ac:	23ff      	movs	r3, #255	; 0xff
 800e5ae:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e5b2:	f7ff fa91 	bl	800dad8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e5b6:	f7ff fa6d 	bl	800da94 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e5ba:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e5be:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e5c0:	2d00      	cmp	r5, #0
 800e5c2:	dd14      	ble.n	800e5ee <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e5c4:	f104 0910 	add.w	r9, r4, #16
 800e5c8:	e003      	b.n	800e5d2 <xQueueReceive+0xde>
				--cRxLock;
 800e5ca:	1e6b      	subs	r3, r5, #1
 800e5cc:	b2da      	uxtb	r2, r3
 800e5ce:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e5d0:	b16a      	cbz	r2, 800e5ee <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e5d2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e5d4:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e5d6:	b153      	cbz	r3, 800e5ee <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e5d8:	f001 f8da 	bl	800f790 <xTaskRemoveFromEventList>
 800e5dc:	2800      	cmp	r0, #0
 800e5de:	d0f4      	beq.n	800e5ca <xQueueReceive+0xd6>
					vTaskMissedYield();
 800e5e0:	f001 f972 	bl	800f8c8 <vTaskMissedYield>
				--cRxLock;
 800e5e4:	1e6b      	subs	r3, r5, #1
 800e5e6:	b2da      	uxtb	r2, r3
 800e5e8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e5ea:	2a00      	cmp	r2, #0
 800e5ec:	d1f1      	bne.n	800e5d2 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800e5ee:	23ff      	movs	r3, #255	; 0xff
 800e5f0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e5f4:	f7ff fa70 	bl	800dad8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e5f8:	f000 ffca 	bl	800f590 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800e5fc:	e060      	b.n	800e6c0 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e5fe:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e600:	2b00      	cmp	r3, #0
 800e602:	d082      	beq.n	800e50a <xQueueReceive+0x16>
	__asm volatile
 800e604:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e608:	f383 8811 	msr	BASEPRI, r3
 800e60c:	f3bf 8f6f 	isb	sy
 800e610:	f3bf 8f4f 	dsb	sy
 800e614:	e7fe      	b.n	800e614 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e616:	9b01      	ldr	r3, [sp, #4]
 800e618:	2b00      	cmp	r3, #0
 800e61a:	f43f af7b 	beq.w	800e514 <xQueueReceive+0x20>
 800e61e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e622:	f383 8811 	msr	BASEPRI, r3
 800e626:	f3bf 8f6f 	isb	sy
 800e62a:	f3bf 8f4f 	dsb	sy
 800e62e:	e7fe      	b.n	800e62e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800e630:	f7ff fa30 	bl	800da94 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e634:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e638:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e63a:	2d00      	cmp	r5, #0
 800e63c:	dc04      	bgt.n	800e648 <xQueueReceive+0x154>
 800e63e:	e011      	b.n	800e664 <xQueueReceive+0x170>
			--cTxLock;
 800e640:	1e6b      	subs	r3, r5, #1
 800e642:	b2da      	uxtb	r2, r3
 800e644:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e646:	b16a      	cbz	r2, 800e664 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e648:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e64a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e64c:	b153      	cbz	r3, 800e664 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e64e:	f001 f89f 	bl	800f790 <xTaskRemoveFromEventList>
 800e652:	2800      	cmp	r0, #0
 800e654:	d0f4      	beq.n	800e640 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800e656:	f001 f937 	bl	800f8c8 <vTaskMissedYield>
			--cTxLock;
 800e65a:	1e6b      	subs	r3, r5, #1
 800e65c:	b2da      	uxtb	r2, r3
 800e65e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e660:	2a00      	cmp	r2, #0
 800e662:	d1f1      	bne.n	800e648 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800e664:	23ff      	movs	r3, #255	; 0xff
 800e666:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e66a:	f7ff fa35 	bl	800dad8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e66e:	f7ff fa11 	bl	800da94 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e672:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e676:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e678:	2d00      	cmp	r5, #0
 800e67a:	dd14      	ble.n	800e6a6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e67c:	f104 0910 	add.w	r9, r4, #16
 800e680:	e003      	b.n	800e68a <xQueueReceive+0x196>
				--cRxLock;
 800e682:	1e6b      	subs	r3, r5, #1
 800e684:	b2da      	uxtb	r2, r3
 800e686:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e688:	b16a      	cbz	r2, 800e6a6 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e68a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e68c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e68e:	b153      	cbz	r3, 800e6a6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e690:	f001 f87e 	bl	800f790 <xTaskRemoveFromEventList>
 800e694:	2800      	cmp	r0, #0
 800e696:	d0f4      	beq.n	800e682 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800e698:	f001 f916 	bl	800f8c8 <vTaskMissedYield>
				--cRxLock;
 800e69c:	1e6b      	subs	r3, r5, #1
 800e69e:	b2da      	uxtb	r2, r3
 800e6a0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e6a2:	2a00      	cmp	r2, #0
 800e6a4:	d1f1      	bne.n	800e68a <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800e6a6:	23ff      	movs	r3, #255	; 0xff
 800e6a8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e6ac:	f7ff fa14 	bl	800dad8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e6b0:	f000 ff6e 	bl	800f590 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800e6b4:	f7ff f9ee 	bl	800da94 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e6b8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e6ba:	b153      	cbz	r3, 800e6d2 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800e6bc:	f7ff fa0c 	bl	800dad8 <vPortExitCritical>
		taskENTER_CRITICAL();
 800e6c0:	f7ff f9e8 	bl	800da94 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e6c4:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e6c6:	2d00      	cmp	r5, #0
 800e6c8:	d162      	bne.n	800e790 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e6ca:	9b01      	ldr	r3, [sp, #4]
 800e6cc:	2b00      	cmp	r3, #0
 800e6ce:	f47f af31 	bne.w	800e534 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800e6d2:	f7ff fa01 	bl	800dad8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800e6d6:	2000      	movs	r0, #0
}
 800e6d8:	b005      	add	sp, #20
 800e6da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800e6de:	f7ff f9fb 	bl	800dad8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e6e2:	9901      	ldr	r1, [sp, #4]
 800e6e4:	4630      	mov	r0, r6
 800e6e6:	f000 ffc5 	bl	800f674 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e6ea:	f7ff f9d3 	bl	800da94 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e6ee:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e6f2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e6f4:	2d00      	cmp	r5, #0
 800e6f6:	dc04      	bgt.n	800e702 <xQueueReceive+0x20e>
 800e6f8:	e011      	b.n	800e71e <xQueueReceive+0x22a>
			--cTxLock;
 800e6fa:	1e6b      	subs	r3, r5, #1
 800e6fc:	b2da      	uxtb	r2, r3
 800e6fe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e700:	b16a      	cbz	r2, 800e71e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e702:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e704:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e706:	b153      	cbz	r3, 800e71e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e708:	f001 f842 	bl	800f790 <xTaskRemoveFromEventList>
 800e70c:	2800      	cmp	r0, #0
 800e70e:	d0f4      	beq.n	800e6fa <xQueueReceive+0x206>
						vTaskMissedYield();
 800e710:	f001 f8da 	bl	800f8c8 <vTaskMissedYield>
			--cTxLock;
 800e714:	1e6b      	subs	r3, r5, #1
 800e716:	b2da      	uxtb	r2, r3
 800e718:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e71a:	2a00      	cmp	r2, #0
 800e71c:	d1f1      	bne.n	800e702 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e71e:	23ff      	movs	r3, #255	; 0xff
 800e720:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e724:	f7ff f9d8 	bl	800dad8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e728:	f7ff f9b4 	bl	800da94 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e72c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e730:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e732:	2d00      	cmp	r5, #0
 800e734:	dd14      	ble.n	800e760 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e736:	f104 0910 	add.w	r9, r4, #16
 800e73a:	e003      	b.n	800e744 <xQueueReceive+0x250>
				--cRxLock;
 800e73c:	1e6b      	subs	r3, r5, #1
 800e73e:	b2da      	uxtb	r2, r3
 800e740:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e742:	b16a      	cbz	r2, 800e760 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e744:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e746:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e748:	b153      	cbz	r3, 800e760 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e74a:	f001 f821 	bl	800f790 <xTaskRemoveFromEventList>
 800e74e:	2800      	cmp	r0, #0
 800e750:	d0f4      	beq.n	800e73c <xQueueReceive+0x248>
					vTaskMissedYield();
 800e752:	f001 f8b9 	bl	800f8c8 <vTaskMissedYield>
				--cRxLock;
 800e756:	1e6b      	subs	r3, r5, #1
 800e758:	b2da      	uxtb	r2, r3
 800e75a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e75c:	2a00      	cmp	r2, #0
 800e75e:	d1f1      	bne.n	800e744 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800e760:	23ff      	movs	r3, #255	; 0xff
 800e762:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e766:	f7ff f9b7 	bl	800dad8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e76a:	f000 ff11 	bl	800f590 <xTaskResumeAll>
 800e76e:	2800      	cmp	r0, #0
 800e770:	d1a6      	bne.n	800e6c0 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800e772:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e776:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e77a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e77e:	f3bf 8f4f 	dsb	sy
 800e782:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800e786:	f7ff f985 	bl	800da94 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e78a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e78c:	2d00      	cmp	r5, #0
 800e78e:	d09c      	beq.n	800e6ca <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e790:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e792:	b152      	cbz	r2, 800e7aa <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e794:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e796:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e798:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e79a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e79c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e79e:	bf24      	itt	cs
 800e7a0:	6821      	ldrcs	r1, [r4, #0]
 800e7a2:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e7a4:	4638      	mov	r0, r7
 800e7a6:	f01d f84e 	bl	802b846 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e7aa:	3d01      	subs	r5, #1
 800e7ac:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e7ae:	6923      	ldr	r3, [r4, #16]
 800e7b0:	b963      	cbnz	r3, 800e7cc <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800e7b2:	f7ff f991 	bl	800dad8 <vPortExitCritical>
				return pdPASS;
 800e7b6:	2001      	movs	r0, #1
 800e7b8:	e78e      	b.n	800e6d8 <xQueueReceive+0x1e4>
 800e7ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7be:	f383 8811 	msr	BASEPRI, r3
 800e7c2:	f3bf 8f6f 	isb	sy
 800e7c6:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800e7ca:	e7fe      	b.n	800e7ca <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e7cc:	f104 0010 	add.w	r0, r4, #16
 800e7d0:	f000 ffde 	bl	800f790 <xTaskRemoveFromEventList>
 800e7d4:	2800      	cmp	r0, #0
 800e7d6:	d0ec      	beq.n	800e7b2 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800e7d8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e7dc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e7e0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e7e4:	f3bf 8f4f 	dsb	sy
 800e7e8:	f3bf 8f6f 	isb	sy
 800e7ec:	e7e1      	b.n	800e7b2 <xQueueReceive+0x2be>
 800e7ee:	bf00      	nop

0800e7f0 <xQueueSemaphoreTake>:
{
 800e7f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e7f4:	b084      	sub	sp, #16
 800e7f6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e7f8:	2800      	cmp	r0, #0
 800e7fa:	d05c      	beq.n	800e8b6 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e7fc:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800e7fe:	4604      	mov	r4, r0
 800e800:	b147      	cbz	r7, 800e814 <xQueueSemaphoreTake+0x24>
 800e802:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e806:	f383 8811 	msr	BASEPRI, r3
 800e80a:	f3bf 8f6f 	isb	sy
 800e80e:	f3bf 8f4f 	dsb	sy
 800e812:	e7fe      	b.n	800e812 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e814:	f001 f85e 	bl	800f8d4 <xTaskGetSchedulerState>
 800e818:	4605      	mov	r5, r0
 800e81a:	2800      	cmp	r0, #0
 800e81c:	d054      	beq.n	800e8c8 <xQueueSemaphoreTake+0xd8>
 800e81e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e820:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e824:	f7ff f936 	bl	800da94 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800e828:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800e82a:	2b00      	cmp	r3, #0
 800e82c:	f040 8148 	bne.w	800eac0 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e830:	9b01      	ldr	r3, [sp, #4]
 800e832:	2b00      	cmp	r3, #0
 800e834:	f000 813a 	beq.w	800eaac <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800e838:	2d00      	cmp	r5, #0
 800e83a:	f000 809d 	beq.w	800e978 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800e83e:	f7ff f94b 	bl	800dad8 <vPortExitCritical>
		vTaskSuspendAll();
 800e842:	f000 fe9d 	bl	800f580 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e846:	f7ff f925 	bl	800da94 <vPortEnterCritical>
 800e84a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e84e:	2bff      	cmp	r3, #255	; 0xff
 800e850:	bf04      	itt	eq
 800e852:	2300      	moveq	r3, #0
 800e854:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e858:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e85c:	2bff      	cmp	r3, #255	; 0xff
 800e85e:	bf04      	itt	eq
 800e860:	2300      	moveq	r3, #0
 800e862:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e866:	f7ff f937 	bl	800dad8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e86a:	a901      	add	r1, sp, #4
 800e86c:	a802      	add	r0, sp, #8
 800e86e:	f000 ffe3 	bl	800f838 <xTaskCheckForTimeOut>
 800e872:	2800      	cmp	r0, #0
 800e874:	d135      	bne.n	800e8e2 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800e876:	f7ff f90d 	bl	800da94 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e87a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e87c:	2b00      	cmp	r3, #0
 800e87e:	f000 80a4 	beq.w	800e9ca <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800e882:	f7ff f929 	bl	800dad8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e886:	f7ff f905 	bl	800da94 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e88a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e88e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e890:	2d00      	cmp	r5, #0
 800e892:	dc05      	bgt.n	800e8a0 <xQueueSemaphoreTake+0xb0>
 800e894:	e074      	b.n	800e980 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800e896:	1e6b      	subs	r3, r5, #1
 800e898:	b2da      	uxtb	r2, r3
 800e89a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e89c:	2a00      	cmp	r2, #0
 800e89e:	d06f      	beq.n	800e980 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e8a0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e8a2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e8a4:	2b00      	cmp	r3, #0
 800e8a6:	d06b      	beq.n	800e980 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e8a8:	f000 ff72 	bl	800f790 <xTaskRemoveFromEventList>
 800e8ac:	2800      	cmp	r0, #0
 800e8ae:	d0f2      	beq.n	800e896 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800e8b0:	f001 f80a 	bl	800f8c8 <vTaskMissedYield>
 800e8b4:	e7ef      	b.n	800e896 <xQueueSemaphoreTake+0xa6>
 800e8b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e8ba:	f383 8811 	msr	BASEPRI, r3
 800e8be:	f3bf 8f6f 	isb	sy
 800e8c2:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800e8c6:	e7fe      	b.n	800e8c6 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e8c8:	9b01      	ldr	r3, [sp, #4]
 800e8ca:	2b00      	cmp	r3, #0
 800e8cc:	f000 80d4 	beq.w	800ea78 <xQueueSemaphoreTake+0x288>
 800e8d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e8d4:	f383 8811 	msr	BASEPRI, r3
 800e8d8:	f3bf 8f6f 	isb	sy
 800e8dc:	f3bf 8f4f 	dsb	sy
 800e8e0:	e7fe      	b.n	800e8e0 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800e8e2:	f7ff f8d7 	bl	800da94 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e8e6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e8ea:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e8ec:	2d00      	cmp	r5, #0
 800e8ee:	dc04      	bgt.n	800e8fa <xQueueSemaphoreTake+0x10a>
 800e8f0:	e011      	b.n	800e916 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800e8f2:	1e6b      	subs	r3, r5, #1
 800e8f4:	b2da      	uxtb	r2, r3
 800e8f6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e8f8:	b16a      	cbz	r2, 800e916 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e8fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e8fc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e8fe:	b153      	cbz	r3, 800e916 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e900:	f000 ff46 	bl	800f790 <xTaskRemoveFromEventList>
 800e904:	2800      	cmp	r0, #0
 800e906:	d0f4      	beq.n	800e8f2 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800e908:	f000 ffde 	bl	800f8c8 <vTaskMissedYield>
			--cTxLock;
 800e90c:	1e6b      	subs	r3, r5, #1
 800e90e:	b2da      	uxtb	r2, r3
 800e910:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e912:	2a00      	cmp	r2, #0
 800e914:	d1f1      	bne.n	800e8fa <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800e916:	23ff      	movs	r3, #255	; 0xff
 800e918:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e91c:	f7ff f8dc 	bl	800dad8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e920:	f7ff f8b8 	bl	800da94 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e924:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e928:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e92a:	2d00      	cmp	r5, #0
 800e92c:	dd14      	ble.n	800e958 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e92e:	f104 0810 	add.w	r8, r4, #16
 800e932:	e003      	b.n	800e93c <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800e934:	1e6b      	subs	r3, r5, #1
 800e936:	b2da      	uxtb	r2, r3
 800e938:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e93a:	b16a      	cbz	r2, 800e958 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e93c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e93e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e940:	b153      	cbz	r3, 800e958 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e942:	f000 ff25 	bl	800f790 <xTaskRemoveFromEventList>
 800e946:	2800      	cmp	r0, #0
 800e948:	d0f4      	beq.n	800e934 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800e94a:	f000 ffbd 	bl	800f8c8 <vTaskMissedYield>
				--cRxLock;
 800e94e:	1e6b      	subs	r3, r5, #1
 800e950:	b2da      	uxtb	r2, r3
 800e952:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e954:	2a00      	cmp	r2, #0
 800e956:	d1f1      	bne.n	800e93c <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800e958:	23ff      	movs	r3, #255	; 0xff
 800e95a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e95e:	f7ff f8bb 	bl	800dad8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e962:	f000 fe15 	bl	800f590 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800e966:	f7ff f895 	bl	800da94 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e96a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e96c:	2b00      	cmp	r3, #0
 800e96e:	d07c      	beq.n	800ea6a <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800e970:	f7ff f8b2 	bl	800dad8 <vPortExitCritical>
	return xReturn;
 800e974:	2501      	movs	r5, #1
 800e976:	e755      	b.n	800e824 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e978:	a802      	add	r0, sp, #8
 800e97a:	f000 ff51 	bl	800f820 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800e97e:	e75e      	b.n	800e83e <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e980:	23ff      	movs	r3, #255	; 0xff
 800e982:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e986:	f7ff f8a7 	bl	800dad8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e98a:	f7ff f883 	bl	800da94 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e98e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e992:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e994:	2d00      	cmp	r5, #0
 800e996:	dd10      	ble.n	800e9ba <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e998:	f104 0810 	add.w	r8, r4, #16
 800e99c:	e003      	b.n	800e9a6 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800e99e:	1e6b      	subs	r3, r5, #1
 800e9a0:	b2da      	uxtb	r2, r3
 800e9a2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e9a4:	b14a      	cbz	r2, 800e9ba <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e9a6:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e9a8:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e9aa:	b133      	cbz	r3, 800e9ba <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e9ac:	f000 fef0 	bl	800f790 <xTaskRemoveFromEventList>
 800e9b0:	2800      	cmp	r0, #0
 800e9b2:	d0f4      	beq.n	800e99e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800e9b4:	f000 ff88 	bl	800f8c8 <vTaskMissedYield>
 800e9b8:	e7f1      	b.n	800e99e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800e9ba:	23ff      	movs	r3, #255	; 0xff
 800e9bc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e9c0:	f7ff f88a 	bl	800dad8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e9c4:	f000 fde4 	bl	800f590 <xTaskResumeAll>
 800e9c8:	e7d4      	b.n	800e974 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800e9ca:	f7ff f885 	bl	800dad8 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e9ce:	6823      	ldr	r3, [r4, #0]
 800e9d0:	2b00      	cmp	r3, #0
 800e9d2:	d062      	beq.n	800ea9a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e9d4:	9901      	ldr	r1, [sp, #4]
 800e9d6:	4630      	mov	r0, r6
 800e9d8:	f000 fe4c 	bl	800f674 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e9dc:	f7ff f85a 	bl	800da94 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e9e0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e9e4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e9e6:	2d00      	cmp	r5, #0
 800e9e8:	dc04      	bgt.n	800e9f4 <xQueueSemaphoreTake+0x204>
 800e9ea:	e00d      	b.n	800ea08 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800e9ec:	1e6b      	subs	r3, r5, #1
 800e9ee:	b2da      	uxtb	r2, r3
 800e9f0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e9f2:	b14a      	cbz	r2, 800ea08 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e9f4:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e9f6:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e9f8:	b133      	cbz	r3, 800ea08 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e9fa:	f000 fec9 	bl	800f790 <xTaskRemoveFromEventList>
 800e9fe:	2800      	cmp	r0, #0
 800ea00:	d0f4      	beq.n	800e9ec <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800ea02:	f000 ff61 	bl	800f8c8 <vTaskMissedYield>
 800ea06:	e7f1      	b.n	800e9ec <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800ea08:	23ff      	movs	r3, #255	; 0xff
 800ea0a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ea0e:	f7ff f863 	bl	800dad8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ea12:	f7ff f83f 	bl	800da94 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ea16:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ea1a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea1c:	2d00      	cmp	r5, #0
 800ea1e:	dd10      	ble.n	800ea42 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea20:	f104 0810 	add.w	r8, r4, #16
 800ea24:	e003      	b.n	800ea2e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800ea26:	1e6b      	subs	r3, r5, #1
 800ea28:	b2da      	uxtb	r2, r3
 800ea2a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea2c:	b14a      	cbz	r2, 800ea42 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ea2e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea30:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ea32:	b133      	cbz	r3, 800ea42 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea34:	f000 feac 	bl	800f790 <xTaskRemoveFromEventList>
 800ea38:	2800      	cmp	r0, #0
 800ea3a:	d0f4      	beq.n	800ea26 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800ea3c:	f000 ff44 	bl	800f8c8 <vTaskMissedYield>
 800ea40:	e7f1      	b.n	800ea26 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800ea42:	23ff      	movs	r3, #255	; 0xff
 800ea44:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ea48:	f7ff f846 	bl	800dad8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800ea4c:	f000 fda0 	bl	800f590 <xTaskResumeAll>
 800ea50:	2800      	cmp	r0, #0
 800ea52:	d18f      	bne.n	800e974 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800ea54:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ea58:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ea5c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ea60:	f3bf 8f4f 	dsb	sy
 800ea64:	f3bf 8f6f 	isb	sy
 800ea68:	e784      	b.n	800e974 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800ea6a:	f7ff f835 	bl	800dad8 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800ea6e:	b92f      	cbnz	r7, 800ea7c <xQueueSemaphoreTake+0x28c>
}
 800ea70:	4638      	mov	r0, r7
 800ea72:	b004      	add	sp, #16
 800ea74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ea78:	4607      	mov	r7, r0
 800ea7a:	e6d1      	b.n	800e820 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800ea7c:	f7ff f80a 	bl	800da94 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800ea80:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800ea82:	b119      	cbz	r1, 800ea8c <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800ea84:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ea86:	6819      	ldr	r1, [r3, #0]
 800ea88:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800ea8c:	68a0      	ldr	r0, [r4, #8]
 800ea8e:	f000 ffbd 	bl	800fa0c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800ea92:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800ea94:	f7ff f820 	bl	800dad8 <vPortExitCritical>
 800ea98:	e7ea      	b.n	800ea70 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800ea9a:	f7fe fffb 	bl	800da94 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800ea9e:	68a0      	ldr	r0, [r4, #8]
 800eaa0:	f000 ff28 	bl	800f8f4 <xTaskPriorityInherit>
 800eaa4:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800eaa6:	f7ff f817 	bl	800dad8 <vPortExitCritical>
 800eaaa:	e793      	b.n	800e9d4 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800eaac:	b197      	cbz	r7, 800ead4 <xQueueSemaphoreTake+0x2e4>
 800eaae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eab2:	f383 8811 	msr	BASEPRI, r3
 800eab6:	f3bf 8f6f 	isb	sy
 800eaba:	f3bf 8f4f 	dsb	sy
 800eabe:	e7fe      	b.n	800eabe <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800eac0:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800eac2:	3b01      	subs	r3, #1
 800eac4:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800eac6:	b1ca      	cbz	r2, 800eafc <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eac8:	6923      	ldr	r3, [r4, #16]
 800eaca:	b933      	cbnz	r3, 800eada <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800eacc:	f7ff f804 	bl	800dad8 <vPortExitCritical>
				return pdPASS;
 800ead0:	2701      	movs	r7, #1
 800ead2:	e7cd      	b.n	800ea70 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800ead4:	f7ff f800 	bl	800dad8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800ead8:	e7ca      	b.n	800ea70 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eada:	f104 0010 	add.w	r0, r4, #16
 800eade:	f000 fe57 	bl	800f790 <xTaskRemoveFromEventList>
 800eae2:	2800      	cmp	r0, #0
 800eae4:	d0f2      	beq.n	800eacc <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800eae6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eaea:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eaee:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eaf2:	f3bf 8f4f 	dsb	sy
 800eaf6:	f3bf 8f6f 	isb	sy
 800eafa:	e7e7      	b.n	800eacc <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800eafc:	f000 ffda 	bl	800fab4 <pvTaskIncrementMutexHeldCount>
 800eb00:	60a0      	str	r0, [r4, #8]
 800eb02:	e7e1      	b.n	800eac8 <xQueueSemaphoreTake+0x2d8>

0800eb04 <xQueueReceiveFromISR>:
{
 800eb04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800eb08:	b310      	cbz	r0, 800eb50 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800eb0a:	460e      	mov	r6, r1
 800eb0c:	4617      	mov	r7, r2
 800eb0e:	4604      	mov	r4, r0
 800eb10:	b191      	cbz	r1, 800eb38 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800eb12:	f7ff f8f3 	bl	800dcfc <vPortValidateInterruptPriority>
	__asm volatile
 800eb16:	f3ef 8911 	mrs	r9, BASEPRI
 800eb1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb1e:	f383 8811 	msr	BASEPRI, r3
 800eb22:	f3bf 8f6f 	isb	sy
 800eb26:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800eb2a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800eb2c:	b9cd      	cbnz	r5, 800eb62 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800eb2e:	4628      	mov	r0, r5
	__asm volatile
 800eb30:	f389 8811 	msr	BASEPRI, r9
}
 800eb34:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800eb38:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800eb3a:	2b00      	cmp	r3, #0
 800eb3c:	d0e9      	beq.n	800eb12 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800eb3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb42:	f383 8811 	msr	BASEPRI, r3
 800eb46:	f3bf 8f6f 	isb	sy
 800eb4a:	f3bf 8f4f 	dsb	sy
 800eb4e:	e7fe      	b.n	800eb4e <xQueueReceiveFromISR+0x4a>
 800eb50:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb54:	f383 8811 	msr	BASEPRI, r3
 800eb58:	f3bf 8f6f 	isb	sy
 800eb5c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800eb60:	e7fe      	b.n	800eb60 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800eb62:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800eb66:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800eb68:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800eb6c:	b152      	cbz	r2, 800eb84 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800eb6e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800eb70:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800eb72:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800eb74:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800eb76:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800eb78:	bf24      	itt	cs
 800eb7a:	6821      	ldrcs	r1, [r4, #0]
 800eb7c:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800eb7e:	4630      	mov	r0, r6
 800eb80:	f01c fe61 	bl	802b846 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800eb84:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800eb86:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800eb8a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800eb8c:	d009      	beq.n	800eba2 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800eb8e:	f108 0301 	add.w	r3, r8, #1
 800eb92:	b25b      	sxtb	r3, r3
 800eb94:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800eb98:	2001      	movs	r0, #1
	__asm volatile
 800eb9a:	f389 8811 	msr	BASEPRI, r9
}
 800eb9e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eba2:	6923      	ldr	r3, [r4, #16]
 800eba4:	2b00      	cmp	r3, #0
 800eba6:	d0f7      	beq.n	800eb98 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eba8:	f104 0010 	add.w	r0, r4, #16
 800ebac:	f000 fdf0 	bl	800f790 <xTaskRemoveFromEventList>
 800ebb0:	2800      	cmp	r0, #0
 800ebb2:	d0f1      	beq.n	800eb98 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800ebb4:	2f00      	cmp	r7, #0
 800ebb6:	d0ef      	beq.n	800eb98 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800ebb8:	2001      	movs	r0, #1
 800ebba:	6038      	str	r0, [r7, #0]
 800ebbc:	e7b8      	b.n	800eb30 <xQueueReceiveFromISR+0x2c>
 800ebbe:	bf00      	nop

0800ebc0 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800ebc0:	b158      	cbz	r0, 800ebda <uxQueueMessagesWaiting+0x1a>
{
 800ebc2:	b510      	push	{r4, lr}
 800ebc4:	4604      	mov	r4, r0
 800ebc6:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800ebc8:	f7fe ff64 	bl	800da94 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800ebcc:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800ebce:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800ebd0:	f7fe ff82 	bl	800dad8 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800ebd4:	9801      	ldr	r0, [sp, #4]
 800ebd6:	b002      	add	sp, #8
 800ebd8:	bd10      	pop	{r4, pc}
	__asm volatile
 800ebda:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ebde:	f383 8811 	msr	BASEPRI, r3
 800ebe2:	f3bf 8f6f 	isb	sy
 800ebe6:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800ebea:	e7fe      	b.n	800ebea <uxQueueMessagesWaiting+0x2a>

0800ebec <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800ebec:	b108      	cbz	r0, 800ebf2 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800ebee:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800ebf0:	4770      	bx	lr
 800ebf2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ebf6:	f383 8811 	msr	BASEPRI, r3
 800ebfa:	f3bf 8f6f 	isb	sy
 800ebfe:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ec02:	e7fe      	b.n	800ec02 <uxQueueMessagesWaitingFromISR+0x16>
 800ec04:	0000      	movs	r0, r0
	...

0800ec08 <vQueueDelete>:
	configASSERT( pxQueue );
 800ec08:	b1f0      	cbz	r0, 800ec48 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800ec0a:	4b21      	ldr	r3, [pc, #132]	; (800ec90 <vQueueDelete+0x88>)
 800ec0c:	685a      	ldr	r2, [r3, #4]
 800ec0e:	4290      	cmp	r0, r2
 800ec10:	d025      	beq.n	800ec5e <vQueueDelete+0x56>
 800ec12:	68da      	ldr	r2, [r3, #12]
 800ec14:	4290      	cmp	r0, r2
 800ec16:	d02c      	beq.n	800ec72 <vQueueDelete+0x6a>
 800ec18:	695a      	ldr	r2, [r3, #20]
 800ec1a:	4290      	cmp	r0, r2
 800ec1c:	d02b      	beq.n	800ec76 <vQueueDelete+0x6e>
 800ec1e:	69da      	ldr	r2, [r3, #28]
 800ec20:	4290      	cmp	r0, r2
 800ec22:	d02a      	beq.n	800ec7a <vQueueDelete+0x72>
 800ec24:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800ec26:	4290      	cmp	r0, r2
 800ec28:	d029      	beq.n	800ec7e <vQueueDelete+0x76>
 800ec2a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ec2c:	4290      	cmp	r0, r2
 800ec2e:	d01e      	beq.n	800ec6e <vQueueDelete+0x66>
 800ec30:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800ec32:	4290      	cmp	r0, r2
 800ec34:	d025      	beq.n	800ec82 <vQueueDelete+0x7a>
 800ec36:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800ec38:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ec3a:	bf08      	it	eq
 800ec3c:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800ec3e:	d00f      	beq.n	800ec60 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800ec40:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800ec44:	b14b      	cbz	r3, 800ec5a <vQueueDelete+0x52>
}
 800ec46:	4770      	bx	lr
 800ec48:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec4c:	f383 8811 	msr	BASEPRI, r3
 800ec50:	f3bf 8f6f 	isb	sy
 800ec54:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ec58:	e7fe      	b.n	800ec58 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800ec5a:	f7fe be03 	b.w	800d864 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ec5e:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800ec60:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800ec88 <vQueueDelete+0x80>
 800ec64:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800ec68:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800ec6c:	e7e8      	b.n	800ec40 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ec6e:	2205      	movs	r2, #5
 800ec70:	e7f6      	b.n	800ec60 <vQueueDelete+0x58>
 800ec72:	2201      	movs	r2, #1
 800ec74:	e7f4      	b.n	800ec60 <vQueueDelete+0x58>
 800ec76:	2202      	movs	r2, #2
 800ec78:	e7f2      	b.n	800ec60 <vQueueDelete+0x58>
 800ec7a:	2203      	movs	r2, #3
 800ec7c:	e7f0      	b.n	800ec60 <vQueueDelete+0x58>
 800ec7e:	2204      	movs	r2, #4
 800ec80:	e7ee      	b.n	800ec60 <vQueueDelete+0x58>
 800ec82:	2206      	movs	r2, #6
 800ec84:	e7ec      	b.n	800ec60 <vQueueDelete+0x58>
 800ec86:	bf00      	nop
	...
 800ec90:	200131a8 	.word	0x200131a8

0800ec94 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800ec94:	4b12      	ldr	r3, [pc, #72]	; (800ece0 <vQueueAddToRegistry+0x4c>)
 800ec96:	681a      	ldr	r2, [r3, #0]
 800ec98:	b17a      	cbz	r2, 800ecba <vQueueAddToRegistry+0x26>
 800ec9a:	689a      	ldr	r2, [r3, #8]
 800ec9c:	b162      	cbz	r2, 800ecb8 <vQueueAddToRegistry+0x24>
 800ec9e:	691a      	ldr	r2, [r3, #16]
 800eca0:	b192      	cbz	r2, 800ecc8 <vQueueAddToRegistry+0x34>
 800eca2:	699a      	ldr	r2, [r3, #24]
 800eca4:	b192      	cbz	r2, 800eccc <vQueueAddToRegistry+0x38>
 800eca6:	6a1a      	ldr	r2, [r3, #32]
 800eca8:	b192      	cbz	r2, 800ecd0 <vQueueAddToRegistry+0x3c>
 800ecaa:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800ecac:	b192      	cbz	r2, 800ecd4 <vQueueAddToRegistry+0x40>
 800ecae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800ecb0:	b192      	cbz	r2, 800ecd8 <vQueueAddToRegistry+0x44>
 800ecb2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800ecb4:	b192      	cbz	r2, 800ecdc <vQueueAddToRegistry+0x48>
	}
 800ecb6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ecb8:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800ecba:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800ecbe:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800ecc2:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800ecc6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ecc8:	2202      	movs	r2, #2
 800ecca:	e7f6      	b.n	800ecba <vQueueAddToRegistry+0x26>
 800eccc:	2203      	movs	r2, #3
 800ecce:	e7f4      	b.n	800ecba <vQueueAddToRegistry+0x26>
 800ecd0:	2204      	movs	r2, #4
 800ecd2:	e7f2      	b.n	800ecba <vQueueAddToRegistry+0x26>
 800ecd4:	2205      	movs	r2, #5
 800ecd6:	e7f0      	b.n	800ecba <vQueueAddToRegistry+0x26>
 800ecd8:	2206      	movs	r2, #6
 800ecda:	e7ee      	b.n	800ecba <vQueueAddToRegistry+0x26>
 800ecdc:	2207      	movs	r2, #7
 800ecde:	e7ec      	b.n	800ecba <vQueueAddToRegistry+0x26>
 800ece0:	200131a8 	.word	0x200131a8

0800ece4 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800ece4:	b570      	push	{r4, r5, r6, lr}
 800ece6:	4605      	mov	r5, r0
 800ece8:	460e      	mov	r6, r1
 800ecea:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800ecec:	f7fe fed2 	bl	800da94 <vPortEnterCritical>
 800ecf0:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800ecf4:	2bff      	cmp	r3, #255	; 0xff
 800ecf6:	bf04      	itt	eq
 800ecf8:	2300      	moveq	r3, #0
 800ecfa:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800ecfe:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800ed02:	2bff      	cmp	r3, #255	; 0xff
 800ed04:	bf04      	itt	eq
 800ed06:	2300      	moveq	r3, #0
 800ed08:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800ed0c:	f7fe fee4 	bl	800dad8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800ed10:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800ed12:	2b00      	cmp	r3, #0
 800ed14:	d043      	beq.n	800ed9e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800ed16:	f7fe febd 	bl	800da94 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ed1a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800ed1e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ed20:	2c00      	cmp	r4, #0
 800ed22:	dd14      	ble.n	800ed4e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ed24:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800ed28:	e003      	b.n	800ed32 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800ed2a:	1e63      	subs	r3, r4, #1
 800ed2c:	b2da      	uxtb	r2, r3
 800ed2e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ed30:	b16a      	cbz	r2, 800ed4e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ed32:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ed34:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ed36:	b153      	cbz	r3, 800ed4e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ed38:	f000 fd2a 	bl	800f790 <xTaskRemoveFromEventList>
 800ed3c:	2800      	cmp	r0, #0
 800ed3e:	d0f4      	beq.n	800ed2a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800ed40:	f000 fdc2 	bl	800f8c8 <vTaskMissedYield>
			--cTxLock;
 800ed44:	1e63      	subs	r3, r4, #1
 800ed46:	b2da      	uxtb	r2, r3
 800ed48:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ed4a:	2a00      	cmp	r2, #0
 800ed4c:	d1f1      	bne.n	800ed32 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800ed4e:	23ff      	movs	r3, #255	; 0xff
 800ed50:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ed54:	f7fe fec0 	bl	800dad8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ed58:	f7fe fe9c 	bl	800da94 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ed5c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800ed60:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ed62:	2c00      	cmp	r4, #0
 800ed64:	dd14      	ble.n	800ed90 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed66:	f105 0610 	add.w	r6, r5, #16
 800ed6a:	e003      	b.n	800ed74 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800ed6c:	1e63      	subs	r3, r4, #1
 800ed6e:	b2da      	uxtb	r2, r3
 800ed70:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ed72:	b16a      	cbz	r2, 800ed90 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ed74:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed76:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ed78:	b153      	cbz	r3, 800ed90 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed7a:	f000 fd09 	bl	800f790 <xTaskRemoveFromEventList>
 800ed7e:	2800      	cmp	r0, #0
 800ed80:	d0f4      	beq.n	800ed6c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800ed82:	f000 fda1 	bl	800f8c8 <vTaskMissedYield>
				--cRxLock;
 800ed86:	1e63      	subs	r3, r4, #1
 800ed88:	b2da      	uxtb	r2, r3
 800ed8a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ed8c:	2a00      	cmp	r2, #0
 800ed8e:	d1f1      	bne.n	800ed74 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800ed90:	23ff      	movs	r3, #255	; 0xff
 800ed92:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800ed96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800ed9a:	f7fe be9d 	b.w	800dad8 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800ed9e:	4622      	mov	r2, r4
 800eda0:	4631      	mov	r1, r6
 800eda2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800eda6:	f000 fca9 	bl	800f6fc <vTaskPlaceOnEventListRestricted>
 800edaa:	e7b4      	b.n	800ed16 <vQueueWaitForMessageRestricted+0x32>

0800edac <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800edac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800edb0:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800edb2:	f7fe fe6f 	bl	800da94 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800edb6:	4a34      	ldr	r2, [pc, #208]	; (800ee88 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800edb8:	4e34      	ldr	r6, [pc, #208]	; (800ee8c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800edba:	6813      	ldr	r3, [r2, #0]
 800edbc:	3301      	adds	r3, #1
 800edbe:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800edc0:	6833      	ldr	r3, [r6, #0]
 800edc2:	2b00      	cmp	r3, #0
 800edc4:	d032      	beq.n	800ee2c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800edc6:	4c32      	ldr	r4, [pc, #200]	; (800ee90 <prvAddNewTaskToReadyList+0xe4>)
 800edc8:	6823      	ldr	r3, [r4, #0]
 800edca:	b33b      	cbz	r3, 800ee1c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800edcc:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800edce:	4f31      	ldr	r7, [pc, #196]	; (800ee94 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800edd0:	4a31      	ldr	r2, [pc, #196]	; (800ee98 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800edd2:	4932      	ldr	r1, [pc, #200]	; (800ee9c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800edd4:	6813      	ldr	r3, [r2, #0]
 800edd6:	3301      	adds	r3, #1
 800edd8:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800edda:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800eddc:	680b      	ldr	r3, [r1, #0]
 800edde:	4283      	cmp	r3, r0
 800ede0:	bf38      	it	cc
 800ede2:	6008      	strcc	r0, [r1, #0]
 800ede4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800ede8:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800edec:	1d29      	adds	r1, r5, #4
 800edee:	f7fe fdad 	bl	800d94c <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800edf2:	f7fe fe71 	bl	800dad8 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800edf6:	6823      	ldr	r3, [r4, #0]
 800edf8:	b173      	cbz	r3, 800ee18 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800edfa:	6832      	ldr	r2, [r6, #0]
 800edfc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800edfe:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800ee00:	429a      	cmp	r2, r3
 800ee02:	d209      	bcs.n	800ee18 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800ee04:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ee08:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ee0c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ee10:	f3bf 8f4f 	dsb	sy
 800ee14:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800ee18:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800ee1c:	6833      	ldr	r3, [r6, #0]
 800ee1e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800ee20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ee22:	4f1c      	ldr	r7, [pc, #112]	; (800ee94 <prvAddNewTaskToReadyList+0xe8>)
 800ee24:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800ee26:	bf98      	it	ls
 800ee28:	6035      	strls	r5, [r6, #0]
 800ee2a:	e7d1      	b.n	800edd0 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800ee2c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800ee2e:	6813      	ldr	r3, [r2, #0]
 800ee30:	2b01      	cmp	r3, #1
 800ee32:	d003      	beq.n	800ee3c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800ee34:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800ee36:	4f17      	ldr	r7, [pc, #92]	; (800ee94 <prvAddNewTaskToReadyList+0xe8>)
 800ee38:	4c15      	ldr	r4, [pc, #84]	; (800ee90 <prvAddNewTaskToReadyList+0xe4>)
 800ee3a:	e7c9      	b.n	800edd0 <prvAddNewTaskToReadyList+0x24>
 800ee3c:	4f15      	ldr	r7, [pc, #84]	; (800ee94 <prvAddNewTaskToReadyList+0xe8>)
 800ee3e:	463c      	mov	r4, r7
 800ee40:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800ee44:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800ee46:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800ee48:	f7fe fd70 	bl	800d92c <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800ee4c:	45a0      	cmp	r8, r4
 800ee4e:	d1f9      	bne.n	800ee44 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800ee50:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800eeb4 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800ee54:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800eeb8 <prvAddNewTaskToReadyList+0x10c>
 800ee58:	4c0d      	ldr	r4, [pc, #52]	; (800ee90 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800ee5a:	4648      	mov	r0, r9
 800ee5c:	f7fe fd66 	bl	800d92c <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800ee60:	4640      	mov	r0, r8
 800ee62:	f7fe fd63 	bl	800d92c <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800ee66:	480e      	ldr	r0, [pc, #56]	; (800eea0 <prvAddNewTaskToReadyList+0xf4>)
 800ee68:	f7fe fd60 	bl	800d92c <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800ee6c:	480d      	ldr	r0, [pc, #52]	; (800eea4 <prvAddNewTaskToReadyList+0xf8>)
 800ee6e:	f7fe fd5d 	bl	800d92c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800ee72:	480d      	ldr	r0, [pc, #52]	; (800eea8 <prvAddNewTaskToReadyList+0xfc>)
 800ee74:	f7fe fd5a 	bl	800d92c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800ee78:	4b0c      	ldr	r3, [pc, #48]	; (800eeac <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800ee7a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800ee7c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800ee80:	4b0b      	ldr	r3, [pc, #44]	; (800eeb0 <prvAddNewTaskToReadyList+0x104>)
 800ee82:	f8c3 8000 	str.w	r8, [r3]
}
 800ee86:	e7a3      	b.n	800edd0 <prvAddNewTaskToReadyList+0x24>
 800ee88:	20013654 	.word	0x20013654
 800ee8c:	200131e8 	.word	0x200131e8
 800ee90:	200136b0 	.word	0x200136b0
 800ee94:	200131f4 	.word	0x200131f4
 800ee98:	20013660 	.word	0x20013660
 800ee9c:	20013664 	.word	0x20013664
 800eea0:	2001369c 	.word	0x2001369c
 800eea4:	200136c8 	.word	0x200136c8
 800eea8:	200136b4 	.word	0x200136b4
 800eeac:	200131ec 	.word	0x200131ec
 800eeb0:	200131f0 	.word	0x200131f0
 800eeb4:	20013668 	.word	0x20013668
 800eeb8:	2001367c 	.word	0x2001367c

0800eebc <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800eebc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800eec0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800eec2:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800eec6:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800eeca:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800eecc:	4606      	mov	r6, r0
 800eece:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800eed0:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800eed2:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800eed4:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800eed6:	f01c fb90 	bl	802b5fa <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800eeda:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800eedc:	f1a9 0904 	sub.w	r9, r9, #4
 800eee0:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800eee2:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800eee6:	2d00      	cmp	r5, #0
 800eee8:	d079      	beq.n	800efde <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800eeea:	782b      	ldrb	r3, [r5, #0]
 800eeec:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800eef0:	2b00      	cmp	r3, #0
 800eef2:	d03b      	beq.n	800ef6c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800eef4:	786b      	ldrb	r3, [r5, #1]
 800eef6:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800eefa:	2b00      	cmp	r3, #0
 800eefc:	d036      	beq.n	800ef6c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800eefe:	78ab      	ldrb	r3, [r5, #2]
 800ef00:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800ef04:	b393      	cbz	r3, 800ef6c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ef06:	78eb      	ldrb	r3, [r5, #3]
 800ef08:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800ef0c:	b373      	cbz	r3, 800ef6c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ef0e:	792b      	ldrb	r3, [r5, #4]
 800ef10:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800ef14:	b353      	cbz	r3, 800ef6c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ef16:	796b      	ldrb	r3, [r5, #5]
 800ef18:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800ef1c:	b333      	cbz	r3, 800ef6c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ef1e:	79ab      	ldrb	r3, [r5, #6]
 800ef20:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800ef24:	b313      	cbz	r3, 800ef6c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ef26:	79eb      	ldrb	r3, [r5, #7]
 800ef28:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800ef2c:	b1f3      	cbz	r3, 800ef6c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ef2e:	7a2b      	ldrb	r3, [r5, #8]
 800ef30:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800ef34:	b1d3      	cbz	r3, 800ef6c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ef36:	7a6b      	ldrb	r3, [r5, #9]
 800ef38:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800ef3c:	b1b3      	cbz	r3, 800ef6c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ef3e:	7aab      	ldrb	r3, [r5, #10]
 800ef40:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800ef44:	b193      	cbz	r3, 800ef6c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ef46:	7aeb      	ldrb	r3, [r5, #11]
 800ef48:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800ef4c:	b173      	cbz	r3, 800ef6c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ef4e:	7b2b      	ldrb	r3, [r5, #12]
 800ef50:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800ef54:	b153      	cbz	r3, 800ef6c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ef56:	7b6b      	ldrb	r3, [r5, #13]
 800ef58:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800ef5c:	b133      	cbz	r3, 800ef6c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ef5e:	7bab      	ldrb	r3, [r5, #14]
 800ef60:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800ef64:	b113      	cbz	r3, 800ef6c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ef66:	7beb      	ldrb	r3, [r5, #15]
 800ef68:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800ef6c:	2300      	movs	r3, #0
 800ef6e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800ef72:	9d08      	ldr	r5, [sp, #32]
 800ef74:	2d37      	cmp	r5, #55	; 0x37
 800ef76:	bf28      	it	cs
 800ef78:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800ef7a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800ef7e:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800ef80:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800ef82:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800ef84:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800ef88:	f7fe fcdc 	bl	800d944 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ef8c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800ef90:	f104 0018 	add.w	r0, r4, #24
 800ef94:	f7fe fcd6 	bl	800d944 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ef98:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800ef9a:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800ef9e:	4651      	mov	r1, sl
 800efa0:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800efa2:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800efa4:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800efa6:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800efaa:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800efae:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800efb2:	f01c fb22 	bl	802b5fa <memset>
 800efb6:	4b0b      	ldr	r3, [pc, #44]	; (800efe4 <prvInitialiseNewTask.constprop.0+0x128>)
 800efb8:	65e3      	str	r3, [r4, #92]	; 0x5c
 800efba:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800efbe:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800efc0:	463a      	mov	r2, r7
 800efc2:	4631      	mov	r1, r6
 800efc4:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800efc6:	6625      	str	r5, [r4, #96]	; 0x60
 800efc8:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800efca:	f7fe fd39 	bl	800da40 <pxPortInitialiseStack>
 800efce:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800efd0:	f1b8 0f00 	cmp.w	r8, #0
 800efd4:	d001      	beq.n	800efda <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800efd6:	f8c8 4000 	str.w	r4, [r8]
}
 800efda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800efde:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800efe2:	e7c6      	b.n	800ef72 <prvInitialiseNewTask.constprop.0+0xb6>
 800efe4:	20014178 	.word	0x20014178

0800efe8 <prvIdleTask>:
{
 800efe8:	b580      	push	{r7, lr}
 800efea:	4d23      	ldr	r5, [pc, #140]	; (800f078 <prvIdleTask+0x90>)
 800efec:	4f23      	ldr	r7, [pc, #140]	; (800f07c <prvIdleTask+0x94>)
 800efee:	4e24      	ldr	r6, [pc, #144]	; (800f080 <prvIdleTask+0x98>)
 800eff0:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800f084 <prvIdleTask+0x9c>
				taskYIELD();
 800eff4:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800eff8:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800effc:	682b      	ldr	r3, [r5, #0]
 800effe:	b35b      	cbz	r3, 800f058 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800f000:	f7fe fd48 	bl	800da94 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f004:	68fb      	ldr	r3, [r7, #12]
 800f006:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f008:	1d20      	adds	r0, r4, #4
 800f00a:	f7fe fcc7 	bl	800d99c <uxListRemove>
				--uxCurrentNumberOfTasks;
 800f00e:	6833      	ldr	r3, [r6, #0]
 800f010:	3b01      	subs	r3, #1
 800f012:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800f014:	682b      	ldr	r3, [r5, #0]
 800f016:	3b01      	subs	r3, #1
 800f018:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800f01a:	f7fe fd5d 	bl	800dad8 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800f01e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f022:	f01c fb33 	bl	802b68c <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800f026:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800f02a:	b163      	cbz	r3, 800f046 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800f02c:	2b01      	cmp	r3, #1
 800f02e:	d01e      	beq.n	800f06e <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800f030:	2b02      	cmp	r3, #2
 800f032:	d0e3      	beq.n	800effc <prvIdleTask+0x14>
 800f034:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f038:	f383 8811 	msr	BASEPRI, r3
 800f03c:	f3bf 8f6f 	isb	sy
 800f040:	f3bf 8f4f 	dsb	sy
 800f044:	e7fe      	b.n	800f044 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800f046:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f048:	f7fe fc0c 	bl	800d864 <vPortFree>
				vPortFree( pxTCB );
 800f04c:	4620      	mov	r0, r4
 800f04e:	f7fe fc09 	bl	800d864 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f052:	682b      	ldr	r3, [r5, #0]
 800f054:	2b00      	cmp	r3, #0
 800f056:	d1d3      	bne.n	800f000 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800f058:	f8d8 3000 	ldr.w	r3, [r8]
 800f05c:	2b01      	cmp	r3, #1
 800f05e:	d9cd      	bls.n	800effc <prvIdleTask+0x14>
				taskYIELD();
 800f060:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800f064:	f3bf 8f4f 	dsb	sy
 800f068:	f3bf 8f6f 	isb	sy
 800f06c:	e7c6      	b.n	800effc <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800f06e:	4620      	mov	r0, r4
 800f070:	f7fe fbf8 	bl	800d864 <vPortFree>
 800f074:	e7c2      	b.n	800effc <prvIdleTask+0x14>
 800f076:	bf00      	nop
 800f078:	20013658 	.word	0x20013658
 800f07c:	200136c8 	.word	0x200136c8
 800f080:	20013654 	.word	0x20013654
 800f084:	200131f4 	.word	0x200131f4

0800f088 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800f088:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800f08c:	4b47      	ldr	r3, [pc, #284]	; (800f1ac <xTaskIncrementTick.part.0+0x124>)
 800f08e:	681e      	ldr	r6, [r3, #0]
 800f090:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800f092:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800f094:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800f096:	2e00      	cmp	r6, #0
 800f098:	d040      	beq.n	800f11c <xTaskIncrementTick.part.0+0x94>
 800f09a:	f8df b124 	ldr.w	fp, [pc, #292]	; 800f1c0 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800f09e:	f8db 3000 	ldr.w	r3, [fp]
 800f0a2:	429e      	cmp	r6, r3
 800f0a4:	d347      	bcc.n	800f136 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f0a6:	4f42      	ldr	r7, [pc, #264]	; (800f1b0 <xTaskIncrementTick.part.0+0x128>)
 800f0a8:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800f1c4 <xTaskIncrementTick.part.0+0x13c>
 800f0ac:	683b      	ldr	r3, [r7, #0]
 800f0ae:	f8df a118 	ldr.w	sl, [pc, #280]	; 800f1c8 <xTaskIncrementTick.part.0+0x140>
 800f0b2:	681d      	ldr	r5, [r3, #0]
 800f0b4:	2d00      	cmp	r5, #0
 800f0b6:	d073      	beq.n	800f1a0 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800f0b8:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800f1cc <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800f0bc:	2500      	movs	r5, #0
 800f0be:	e022      	b.n	800f106 <xTaskIncrementTick.part.0+0x7e>
 800f0c0:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f0c2:	f7fe fc6b 	bl	800d99c <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f0c6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800f0c8:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f0ca:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f0ce:	b113      	cbz	r3, 800f0d6 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f0d0:	f7fe fc64 	bl	800d99c <uxListRemove>
 800f0d4:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800f0d6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f0d8:	f8d8 2000 	ldr.w	r2, [r8]
 800f0dc:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800f0e0:	4293      	cmp	r3, r2
 800f0e2:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f0e6:	bf88      	it	hi
 800f0e8:	f8c8 3000 	strhi.w	r3, [r8]
 800f0ec:	f7fe fc2e 	bl	800d94c <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f0f0:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f0f4:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f0f6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f0f8:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f0fa:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800f0fc:	4291      	cmp	r1, r2
 800f0fe:	bf28      	it	cs
 800f100:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f102:	2b00      	cmp	r3, #0
 800f104:	d04c      	beq.n	800f1a0 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f106:	683b      	ldr	r3, [r7, #0]
 800f108:	68db      	ldr	r3, [r3, #12]
 800f10a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800f10c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f10e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800f110:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f112:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800f114:	d2d4      	bcs.n	800f0c0 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800f116:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800f11a:	e011      	b.n	800f140 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800f11c:	4b24      	ldr	r3, [pc, #144]	; (800f1b0 <xTaskIncrementTick.part.0+0x128>)
 800f11e:	681a      	ldr	r2, [r3, #0]
 800f120:	6812      	ldr	r2, [r2, #0]
 800f122:	b30a      	cbz	r2, 800f168 <xTaskIncrementTick.part.0+0xe0>
 800f124:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f128:	f383 8811 	msr	BASEPRI, r3
 800f12c:	f3bf 8f6f 	isb	sy
 800f130:	f3bf 8f4f 	dsb	sy
 800f134:	e7fe      	b.n	800f134 <xTaskIncrementTick.part.0+0xac>
 800f136:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800f1c4 <xTaskIncrementTick.part.0+0x13c>
 800f13a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800f1c8 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800f13e:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f140:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800f144:	491b      	ldr	r1, [pc, #108]	; (800f1b4 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f146:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f148:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f14c:	009b      	lsls	r3, r3, #2
 800f14e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800f152:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800f154:	2a02      	cmp	r2, #2
 800f156:	bf28      	it	cs
 800f158:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800f15a:	2b00      	cmp	r3, #0
}
 800f15c:	bf0c      	ite	eq
 800f15e:	4628      	moveq	r0, r5
 800f160:	2001      	movne	r0, #1
 800f162:	b003      	add	sp, #12
 800f164:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800f168:	4a13      	ldr	r2, [pc, #76]	; (800f1b8 <xTaskIncrementTick.part.0+0x130>)
 800f16a:	6818      	ldr	r0, [r3, #0]
 800f16c:	6811      	ldr	r1, [r2, #0]
 800f16e:	6019      	str	r1, [r3, #0]
 800f170:	4912      	ldr	r1, [pc, #72]	; (800f1bc <xTaskIncrementTick.part.0+0x134>)
 800f172:	6010      	str	r0, [r2, #0]
 800f174:	680a      	ldr	r2, [r1, #0]
 800f176:	3201      	adds	r2, #1
 800f178:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f17a:	681a      	ldr	r2, [r3, #0]
 800f17c:	6812      	ldr	r2, [r2, #0]
 800f17e:	b932      	cbnz	r2, 800f18e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800f180:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800f1c0 <xTaskIncrementTick.part.0+0x138>
 800f184:	f04f 33ff 	mov.w	r3, #4294967295
 800f188:	f8cb 3000 	str.w	r3, [fp]
 800f18c:	e787      	b.n	800f09e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f18e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f190:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800f1c0 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f194:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f196:	68db      	ldr	r3, [r3, #12]
 800f198:	685b      	ldr	r3, [r3, #4]
 800f19a:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800f19e:	e77e      	b.n	800f09e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f1a0:	f04f 33ff 	mov.w	r3, #4294967295
 800f1a4:	f8cb 3000 	str.w	r3, [fp]
					break;
 800f1a8:	e7ca      	b.n	800f140 <xTaskIncrementTick.part.0+0xb8>
 800f1aa:	bf00      	nop
 800f1ac:	200136dc 	.word	0x200136dc
 800f1b0:	200131ec 	.word	0x200131ec
 800f1b4:	200136e0 	.word	0x200136e0
 800f1b8:	200131f0 	.word	0x200131f0
 800f1bc:	20013694 	.word	0x20013694
 800f1c0:	20013690 	.word	0x20013690
 800f1c4:	200131f4 	.word	0x200131f4
 800f1c8:	200131e8 	.word	0x200131e8
 800f1cc:	20013664 	.word	0x20013664

0800f1d0 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800f1d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800f1d4:	4d41      	ldr	r5, [pc, #260]	; (800f2dc <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800f1d6:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800f1d8:	f7fe fc5c 	bl	800da94 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800f1dc:	682b      	ldr	r3, [r5, #0]
 800f1de:	3b01      	subs	r3, #1
 800f1e0:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f1e2:	682b      	ldr	r3, [r5, #0]
 800f1e4:	2b00      	cmp	r3, #0
 800f1e6:	d161      	bne.n	800f2ac <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800f1e8:	4b3d      	ldr	r3, [pc, #244]	; (800f2e0 <xTaskResumeAll.part.0+0x110>)
 800f1ea:	681b      	ldr	r3, [r3, #0]
 800f1ec:	2b00      	cmp	r3, #0
 800f1ee:	d05d      	beq.n	800f2ac <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f1f0:	4e3c      	ldr	r6, [pc, #240]	; (800f2e4 <xTaskResumeAll.part.0+0x114>)
 800f1f2:	6833      	ldr	r3, [r6, #0]
 800f1f4:	2b00      	cmp	r3, #0
 800f1f6:	d06e      	beq.n	800f2d6 <xTaskResumeAll.part.0+0x106>
 800f1f8:	4f3b      	ldr	r7, [pc, #236]	; (800f2e8 <xTaskResumeAll.part.0+0x118>)
 800f1fa:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800f2f8 <xTaskResumeAll.part.0+0x128>
 800f1fe:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800f2fc <xTaskResumeAll.part.0+0x12c>
 800f202:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800f300 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f206:	68f3      	ldr	r3, [r6, #12]
 800f208:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f20a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f20e:	f104 0018 	add.w	r0, r4, #24
 800f212:	f7fe fbc3 	bl	800d99c <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f216:	4658      	mov	r0, fp
 800f218:	f7fe fbc0 	bl	800d99c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800f21c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f21e:	683a      	ldr	r2, [r7, #0]
 800f220:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800f224:	4293      	cmp	r3, r2
 800f226:	4659      	mov	r1, fp
 800f228:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f22c:	bf88      	it	hi
 800f22e:	603b      	strhi	r3, [r7, #0]
 800f230:	f7fe fb8c 	bl	800d94c <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f234:	f8d8 3000 	ldr.w	r3, [r8]
 800f238:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f23a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f23c:	429a      	cmp	r2, r3
 800f23e:	d33d      	bcc.n	800f2bc <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800f240:	2301      	movs	r3, #1
 800f242:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f246:	6833      	ldr	r3, [r6, #0]
 800f248:	2b00      	cmp	r3, #0
 800f24a:	d1dc      	bne.n	800f206 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f24c:	4b27      	ldr	r3, [pc, #156]	; (800f2ec <xTaskResumeAll.part.0+0x11c>)
 800f24e:	681a      	ldr	r2, [r3, #0]
 800f250:	6812      	ldr	r2, [r2, #0]
 800f252:	2a00      	cmp	r2, #0
 800f254:	d03a      	beq.n	800f2cc <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f256:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f258:	4b25      	ldr	r3, [pc, #148]	; (800f2f0 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f25a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f25c:	68d2      	ldr	r2, [r2, #12]
 800f25e:	6852      	ldr	r2, [r2, #4]
 800f260:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800f262:	4e24      	ldr	r6, [pc, #144]	; (800f2f4 <xTaskResumeAll.part.0+0x124>)
 800f264:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800f266:	b194      	cbz	r4, 800f28e <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800f268:	2701      	movs	r7, #1
 800f26a:	e006      	b.n	800f27a <xTaskResumeAll.part.0+0xaa>
 800f26c:	f7ff ff0c 	bl	800f088 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800f270:	b108      	cbz	r0, 800f276 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800f272:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f276:	3c01      	subs	r4, #1
 800f278:	d008      	beq.n	800f28c <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f27a:	682b      	ldr	r3, [r5, #0]
 800f27c:	2b00      	cmp	r3, #0
 800f27e:	d0f5      	beq.n	800f26c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800f280:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f282:	3c01      	subs	r4, #1
		++xPendedTicks;
 800f284:	f103 0301 	add.w	r3, r3, #1
 800f288:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f28a:	d1f6      	bne.n	800f27a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800f28c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800f28e:	f8da 3000 	ldr.w	r3, [sl]
 800f292:	b15b      	cbz	r3, 800f2ac <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800f294:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f298:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f29c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f2a0:	f3bf 8f4f 	dsb	sy
 800f2a4:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800f2a8:	2001      	movs	r0, #1
 800f2aa:	e000      	b.n	800f2ae <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800f2ac:	2000      	movs	r0, #0
 800f2ae:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f2b0:	f7fe fc12 	bl	800dad8 <vPortExitCritical>
}
 800f2b4:	9801      	ldr	r0, [sp, #4]
 800f2b6:	b003      	add	sp, #12
 800f2b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f2bc:	6833      	ldr	r3, [r6, #0]
 800f2be:	2b00      	cmp	r3, #0
 800f2c0:	d1a1      	bne.n	800f206 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f2c2:	4b0a      	ldr	r3, [pc, #40]	; (800f2ec <xTaskResumeAll.part.0+0x11c>)
 800f2c4:	681a      	ldr	r2, [r3, #0]
 800f2c6:	6812      	ldr	r2, [r2, #0]
 800f2c8:	2a00      	cmp	r2, #0
 800f2ca:	d1c4      	bne.n	800f256 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800f2cc:	4b08      	ldr	r3, [pc, #32]	; (800f2f0 <xTaskResumeAll.part.0+0x120>)
 800f2ce:	f04f 32ff 	mov.w	r2, #4294967295
 800f2d2:	601a      	str	r2, [r3, #0]
 800f2d4:	e7c5      	b.n	800f262 <xTaskResumeAll.part.0+0x92>
 800f2d6:	f8df a028 	ldr.w	sl, [pc, #40]	; 800f300 <xTaskResumeAll.part.0+0x130>
 800f2da:	e7c2      	b.n	800f262 <xTaskResumeAll.part.0+0x92>
 800f2dc:	2001365c 	.word	0x2001365c
 800f2e0:	20013654 	.word	0x20013654
 800f2e4:	2001369c 	.word	0x2001369c
 800f2e8:	20013664 	.word	0x20013664
 800f2ec:	200131ec 	.word	0x200131ec
 800f2f0:	20013690 	.word	0x20013690
 800f2f4:	20013698 	.word	0x20013698
 800f2f8:	200131f4 	.word	0x200131f4
 800f2fc:	200131e8 	.word	0x200131e8
 800f300:	200136e0 	.word	0x200136e0

0800f304 <xTaskCreateStatic>:
	{
 800f304:	b530      	push	{r4, r5, lr}
 800f306:	b087      	sub	sp, #28
 800f308:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800f30a:	b1c4      	cbz	r4, 800f33e <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800f30c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800f30e:	b16d      	cbz	r5, 800f32c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800f310:	25ac      	movs	r5, #172	; 0xac
 800f312:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800f314:	9d05      	ldr	r5, [sp, #20]
 800f316:	2dac      	cmp	r5, #172	; 0xac
 800f318:	d01a      	beq.n	800f350 <xTaskCreateStatic+0x4c>
 800f31a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f31e:	f383 8811 	msr	BASEPRI, r3
 800f322:	f3bf 8f6f 	isb	sy
 800f326:	f3bf 8f4f 	dsb	sy
 800f32a:	e7fe      	b.n	800f32a <xTaskCreateStatic+0x26>
 800f32c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f330:	f383 8811 	msr	BASEPRI, r3
 800f334:	f3bf 8f6f 	isb	sy
 800f338:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800f33c:	e7fe      	b.n	800f33c <xTaskCreateStatic+0x38>
 800f33e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f342:	f383 8811 	msr	BASEPRI, r3
 800f346:	f3bf 8f6f 	isb	sy
 800f34a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800f34e:	e7fe      	b.n	800f34e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800f350:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800f352:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f354:	2402      	movs	r4, #2
 800f356:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f35a:	ac04      	add	r4, sp, #16
 800f35c:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800f360:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f362:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f364:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f366:	f7ff fda9 	bl	800eebc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f36a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800f36c:	f7ff fd1e 	bl	800edac <prvAddNewTaskToReadyList>
	}
 800f370:	9804      	ldr	r0, [sp, #16]
 800f372:	b007      	add	sp, #28
 800f374:	bd30      	pop	{r4, r5, pc}
 800f376:	bf00      	nop

0800f378 <xTaskCreate>:
	{
 800f378:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f37c:	4607      	mov	r7, r0
 800f37e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f380:	0090      	lsls	r0, r2, #2
	{
 800f382:	4615      	mov	r5, r2
 800f384:	4688      	mov	r8, r1
 800f386:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f388:	f7fe f9b0 	bl	800d6ec <pvPortMalloc>
			if( pxStack != NULL )
 800f38c:	b1d8      	cbz	r0, 800f3c6 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800f38e:	4604      	mov	r4, r0
 800f390:	20ac      	movs	r0, #172	; 0xac
 800f392:	f7fe f9ab 	bl	800d6ec <pvPortMalloc>
				if( pxNewTCB != NULL )
 800f396:	4606      	mov	r6, r0
 800f398:	b1d0      	cbz	r0, 800f3d0 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800f39a:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800f39c:	2400      	movs	r4, #0
 800f39e:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800f3a2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800f3a4:	9401      	str	r4, [sp, #4]
 800f3a6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800f3a8:	9602      	str	r6, [sp, #8]
 800f3aa:	464b      	mov	r3, r9
 800f3ac:	462a      	mov	r2, r5
 800f3ae:	4641      	mov	r1, r8
 800f3b0:	4638      	mov	r0, r7
 800f3b2:	9400      	str	r4, [sp, #0]
 800f3b4:	f7ff fd82 	bl	800eebc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f3b8:	4630      	mov	r0, r6
 800f3ba:	f7ff fcf7 	bl	800edac <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800f3be:	2001      	movs	r0, #1
	}
 800f3c0:	b005      	add	sp, #20
 800f3c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f3c6:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800f3ca:	b005      	add	sp, #20
 800f3cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800f3d0:	4620      	mov	r0, r4
 800f3d2:	f7fe fa47 	bl	800d864 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f3d6:	f04f 30ff 	mov.w	r0, #4294967295
 800f3da:	e7f1      	b.n	800f3c0 <xTaskCreate+0x48>

0800f3dc <vTaskDelay>:
	{
 800f3dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800f3de:	b950      	cbnz	r0, 800f3f6 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800f3e0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f3e4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f3e8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f3ec:	f3bf 8f4f 	dsb	sy
 800f3f0:	f3bf 8f6f 	isb	sy
	}
 800f3f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800f3f6:	4d1e      	ldr	r5, [pc, #120]	; (800f470 <vTaskDelay+0x94>)
 800f3f8:	682b      	ldr	r3, [r5, #0]
 800f3fa:	b143      	cbz	r3, 800f40e <vTaskDelay+0x32>
 800f3fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f400:	f383 8811 	msr	BASEPRI, r3
 800f404:	f3bf 8f6f 	isb	sy
 800f408:	f3bf 8f4f 	dsb	sy
 800f40c:	e7fe      	b.n	800f40c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800f40e:	682b      	ldr	r3, [r5, #0]
 800f410:	3301      	adds	r3, #1
 800f412:	4604      	mov	r4, r0
 800f414:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800f416:	4b17      	ldr	r3, [pc, #92]	; (800f474 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f418:	4e17      	ldr	r6, [pc, #92]	; (800f478 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800f41a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f41c:	6830      	ldr	r0, [r6, #0]
 800f41e:	3004      	adds	r0, #4
 800f420:	f7fe fabc 	bl	800d99c <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f424:	6833      	ldr	r3, [r6, #0]
 800f426:	19e4      	adds	r4, r4, r7
 800f428:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800f42a:	d310      	bcc.n	800f44e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f42c:	4b13      	ldr	r3, [pc, #76]	; (800f47c <vTaskDelay+0xa0>)
 800f42e:	6818      	ldr	r0, [r3, #0]
 800f430:	6831      	ldr	r1, [r6, #0]
 800f432:	3104      	adds	r1, #4
 800f434:	f7fe fa9a 	bl	800d96c <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800f438:	682b      	ldr	r3, [r5, #0]
 800f43a:	b9a3      	cbnz	r3, 800f466 <vTaskDelay+0x8a>
 800f43c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f440:	f383 8811 	msr	BASEPRI, r3
 800f444:	f3bf 8f6f 	isb	sy
 800f448:	f3bf 8f4f 	dsb	sy
 800f44c:	e7fe      	b.n	800f44c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f44e:	4b0c      	ldr	r3, [pc, #48]	; (800f480 <vTaskDelay+0xa4>)
 800f450:	6818      	ldr	r0, [r3, #0]
 800f452:	6831      	ldr	r1, [r6, #0]
 800f454:	3104      	adds	r1, #4
 800f456:	f7fe fa89 	bl	800d96c <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800f45a:	4b0a      	ldr	r3, [pc, #40]	; (800f484 <vTaskDelay+0xa8>)
 800f45c:	681a      	ldr	r2, [r3, #0]
 800f45e:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800f460:	bf38      	it	cc
 800f462:	601c      	strcc	r4, [r3, #0]
 800f464:	e7e8      	b.n	800f438 <vTaskDelay+0x5c>
 800f466:	f7ff feb3 	bl	800f1d0 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800f46a:	2800      	cmp	r0, #0
 800f46c:	d0b8      	beq.n	800f3e0 <vTaskDelay+0x4>
	}
 800f46e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f470:	2001365c 	.word	0x2001365c
 800f474:	200136dc 	.word	0x200136dc
 800f478:	200131e8 	.word	0x200131e8
 800f47c:	200131f0 	.word	0x200131f0
 800f480:	200131ec 	.word	0x200131ec
 800f484:	20013690 	.word	0x20013690

0800f488 <vTaskStartScheduler>:
{
 800f488:	b530      	push	{r4, r5, lr}
 800f48a:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f48c:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800f48e:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f490:	a906      	add	r1, sp, #24
 800f492:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800f494:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f498:	f7fe f90a 	bl	800d6b0 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800f49c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800f4a0:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800f4a2:	b1bb      	cbz	r3, 800f4d4 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800f4a4:	b16d      	cbz	r5, 800f4c2 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800f4a6:	21ac      	movs	r1, #172	; 0xac
 800f4a8:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800f4aa:	9909      	ldr	r1, [sp, #36]	; 0x24
 800f4ac:	29ac      	cmp	r1, #172	; 0xac
 800f4ae:	d01a      	beq.n	800f4e6 <vTaskStartScheduler+0x5e>
 800f4b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f4b4:	f383 8811 	msr	BASEPRI, r3
 800f4b8:	f3bf 8f6f 	isb	sy
 800f4bc:	f3bf 8f4f 	dsb	sy
 800f4c0:	e7fe      	b.n	800f4c0 <vTaskStartScheduler+0x38>
 800f4c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f4c6:	f383 8811 	msr	BASEPRI, r3
 800f4ca:	f3bf 8f6f 	isb	sy
 800f4ce:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800f4d2:	e7fe      	b.n	800f4d2 <vTaskStartScheduler+0x4a>
 800f4d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f4d8:	f383 8811 	msr	BASEPRI, r3
 800f4dc:	f3bf 8f6f 	isb	sy
 800f4e0:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800f4e4:	e7fe      	b.n	800f4e4 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f4e6:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f4e8:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800f4ea:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f4ec:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f4f0:	4623      	mov	r3, r4
 800f4f2:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800f4f6:	491b      	ldr	r1, [pc, #108]	; (800f564 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f4f8:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f4fa:	9400      	str	r4, [sp, #0]
 800f4fc:	481a      	ldr	r0, [pc, #104]	; (800f568 <vTaskStartScheduler+0xe0>)
 800f4fe:	f7ff fcdd 	bl	800eebc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f502:	4628      	mov	r0, r5
 800f504:	f7ff fc52 	bl	800edac <prvAddNewTaskToReadyList>
		return xReturn;
 800f508:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800f50a:	b1eb      	cbz	r3, 800f548 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800f50c:	f000 fc6e 	bl	800fdec <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800f510:	2801      	cmp	r0, #1
 800f512:	d11b      	bne.n	800f54c <vTaskStartScheduler+0xc4>
 800f514:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f518:	f383 8811 	msr	BASEPRI, r3
 800f51c:	f3bf 8f6f 	isb	sy
 800f520:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f524:	4b11      	ldr	r3, [pc, #68]	; (800f56c <vTaskStartScheduler+0xe4>)
 800f526:	4a12      	ldr	r2, [pc, #72]	; (800f570 <vTaskStartScheduler+0xe8>)
 800f528:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800f52a:	4912      	ldr	r1, [pc, #72]	; (800f574 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f52c:	3358      	adds	r3, #88	; 0x58
 800f52e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800f530:	4a11      	ldr	r2, [pc, #68]	; (800f578 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f532:	4b12      	ldr	r3, [pc, #72]	; (800f57c <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800f534:	f04f 35ff 	mov.w	r5, #4294967295
 800f538:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800f53a:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f53c:	601c      	str	r4, [r3, #0]
}
 800f53e:	b00b      	add	sp, #44	; 0x2c
 800f540:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800f544:	f7fe bb38 	b.w	800dbb8 <xPortStartScheduler>
}
 800f548:	b00b      	add	sp, #44	; 0x2c
 800f54a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800f54c:	3001      	adds	r0, #1
 800f54e:	d1fb      	bne.n	800f548 <vTaskStartScheduler+0xc0>
 800f550:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f554:	f383 8811 	msr	BASEPRI, r3
 800f558:	f3bf 8f6f 	isb	sy
 800f55c:	f3bf 8f4f 	dsb	sy
 800f560:	e7fe      	b.n	800f560 <vTaskStartScheduler+0xd8>
 800f562:	bf00      	nop
 800f564:	0802ecc4 	.word	0x0802ecc4
 800f568:	0800efe9 	.word	0x0800efe9
 800f56c:	200131e8 	.word	0x200131e8
 800f570:	20000160 	.word	0x20000160
 800f574:	20013690 	.word	0x20013690
 800f578:	200136b0 	.word	0x200136b0
 800f57c:	200136dc 	.word	0x200136dc

0800f580 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800f580:	4a02      	ldr	r2, [pc, #8]	; (800f58c <vTaskSuspendAll+0xc>)
 800f582:	6813      	ldr	r3, [r2, #0]
 800f584:	3301      	adds	r3, #1
 800f586:	6013      	str	r3, [r2, #0]
}
 800f588:	4770      	bx	lr
 800f58a:	bf00      	nop
 800f58c:	2001365c 	.word	0x2001365c

0800f590 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800f590:	4b06      	ldr	r3, [pc, #24]	; (800f5ac <xTaskResumeAll+0x1c>)
 800f592:	681b      	ldr	r3, [r3, #0]
 800f594:	b943      	cbnz	r3, 800f5a8 <xTaskResumeAll+0x18>
 800f596:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f59a:	f383 8811 	msr	BASEPRI, r3
 800f59e:	f3bf 8f6f 	isb	sy
 800f5a2:	f3bf 8f4f 	dsb	sy
 800f5a6:	e7fe      	b.n	800f5a6 <xTaskResumeAll+0x16>
 800f5a8:	f7ff be12 	b.w	800f1d0 <xTaskResumeAll.part.0>
 800f5ac:	2001365c 	.word	0x2001365c

0800f5b0 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800f5b0:	4b01      	ldr	r3, [pc, #4]	; (800f5b8 <xTaskGetTickCount+0x8>)
 800f5b2:	6818      	ldr	r0, [r3, #0]
}
 800f5b4:	4770      	bx	lr
 800f5b6:	bf00      	nop
 800f5b8:	200136dc 	.word	0x200136dc

0800f5bc <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f5bc:	4b05      	ldr	r3, [pc, #20]	; (800f5d4 <xTaskIncrementTick+0x18>)
 800f5be:	681b      	ldr	r3, [r3, #0]
 800f5c0:	b90b      	cbnz	r3, 800f5c6 <xTaskIncrementTick+0xa>
 800f5c2:	f7ff bd61 	b.w	800f088 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800f5c6:	4a04      	ldr	r2, [pc, #16]	; (800f5d8 <xTaskIncrementTick+0x1c>)
 800f5c8:	6813      	ldr	r3, [r2, #0]
 800f5ca:	3301      	adds	r3, #1
}
 800f5cc:	2000      	movs	r0, #0
		++xPendedTicks;
 800f5ce:	6013      	str	r3, [r2, #0]
}
 800f5d0:	4770      	bx	lr
 800f5d2:	bf00      	nop
 800f5d4:	2001365c 	.word	0x2001365c
 800f5d8:	20013698 	.word	0x20013698

0800f5dc <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800f5dc:	4b1f      	ldr	r3, [pc, #124]	; (800f65c <vTaskSwitchContext+0x80>)
 800f5de:	681b      	ldr	r3, [r3, #0]
 800f5e0:	b11b      	cbz	r3, 800f5ea <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800f5e2:	4b1f      	ldr	r3, [pc, #124]	; (800f660 <vTaskSwitchContext+0x84>)
 800f5e4:	2201      	movs	r2, #1
 800f5e6:	601a      	str	r2, [r3, #0]
 800f5e8:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800f5ea:	4a1d      	ldr	r2, [pc, #116]	; (800f660 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f5ec:	491d      	ldr	r1, [pc, #116]	; (800f664 <vTaskSwitchContext+0x88>)
{
 800f5ee:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f5f0:	4c1d      	ldr	r4, [pc, #116]	; (800f668 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800f5f2:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f5f4:	6823      	ldr	r3, [r4, #0]
 800f5f6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800f5fa:	0092      	lsls	r2, r2, #2
 800f5fc:	0098      	lsls	r0, r3, #2
 800f5fe:	588a      	ldr	r2, [r1, r2]
 800f600:	b942      	cbnz	r2, 800f614 <vTaskSwitchContext+0x38>
 800f602:	b313      	cbz	r3, 800f64a <vTaskSwitchContext+0x6e>
 800f604:	3b01      	subs	r3, #1
 800f606:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800f60a:	0098      	lsls	r0, r3, #2
 800f60c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800f610:	2a00      	cmp	r2, #0
 800f612:	d0f6      	beq.n	800f602 <vTaskSwitchContext+0x26>
 800f614:	4418      	add	r0, r3
 800f616:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800f61a:	4662      	mov	r2, ip
 800f61c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800f620:	6849      	ldr	r1, [r1, #4]
 800f622:	f8cc 1004 	str.w	r1, [ip, #4]
 800f626:	3208      	adds	r2, #8
 800f628:	4291      	cmp	r1, r2
 800f62a:	bf08      	it	eq
 800f62c:	6849      	ldreq	r1, [r1, #4]
 800f62e:	4a0f      	ldr	r2, [pc, #60]	; (800f66c <vTaskSwitchContext+0x90>)
 800f630:	bf08      	it	eq
 800f632:	f8cc 1004 	streq.w	r1, [ip, #4]
 800f636:	68c9      	ldr	r1, [r1, #12]
 800f638:	6011      	str	r1, [r2, #0]
 800f63a:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f63c:	6813      	ldr	r3, [r2, #0]
 800f63e:	4a0c      	ldr	r2, [pc, #48]	; (800f670 <vTaskSwitchContext+0x94>)
}
 800f640:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f644:	3358      	adds	r3, #88	; 0x58
 800f646:	6013      	str	r3, [r2, #0]
}
 800f648:	4770      	bx	lr
 800f64a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f64e:	f383 8811 	msr	BASEPRI, r3
 800f652:	f3bf 8f6f 	isb	sy
 800f656:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f65a:	e7fe      	b.n	800f65a <vTaskSwitchContext+0x7e>
 800f65c:	2001365c 	.word	0x2001365c
 800f660:	200136e0 	.word	0x200136e0
 800f664:	200131f4 	.word	0x200131f4
 800f668:	20013664 	.word	0x20013664
 800f66c:	200131e8 	.word	0x200131e8
 800f670:	20000160 	.word	0x20000160

0800f674 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800f674:	b1d0      	cbz	r0, 800f6ac <vTaskPlaceOnEventList+0x38>
{
 800f676:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800f678:	4d1a      	ldr	r5, [pc, #104]	; (800f6e4 <vTaskPlaceOnEventList+0x70>)
 800f67a:	460c      	mov	r4, r1
 800f67c:	6829      	ldr	r1, [r5, #0]
 800f67e:	3118      	adds	r1, #24
 800f680:	f7fe f974 	bl	800d96c <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800f684:	4b18      	ldr	r3, [pc, #96]	; (800f6e8 <vTaskPlaceOnEventList+0x74>)
 800f686:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f688:	6828      	ldr	r0, [r5, #0]
 800f68a:	3004      	adds	r0, #4
 800f68c:	f7fe f986 	bl	800d99c <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800f690:	1c63      	adds	r3, r4, #1
 800f692:	d014      	beq.n	800f6be <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f694:	682b      	ldr	r3, [r5, #0]
 800f696:	19a4      	adds	r4, r4, r6
 800f698:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800f69a:	d317      	bcc.n	800f6cc <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f69c:	4b13      	ldr	r3, [pc, #76]	; (800f6ec <vTaskPlaceOnEventList+0x78>)
 800f69e:	6818      	ldr	r0, [r3, #0]
 800f6a0:	6829      	ldr	r1, [r5, #0]
}
 800f6a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f6a6:	3104      	adds	r1, #4
 800f6a8:	f7fe b960 	b.w	800d96c <vListInsert>
 800f6ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f6b0:	f383 8811 	msr	BASEPRI, r3
 800f6b4:	f3bf 8f6f 	isb	sy
 800f6b8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800f6bc:	e7fe      	b.n	800f6bc <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f6be:	6829      	ldr	r1, [r5, #0]
 800f6c0:	480b      	ldr	r0, [pc, #44]	; (800f6f0 <vTaskPlaceOnEventList+0x7c>)
}
 800f6c2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f6c6:	3104      	adds	r1, #4
 800f6c8:	f7fe b940 	b.w	800d94c <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f6cc:	4b09      	ldr	r3, [pc, #36]	; (800f6f4 <vTaskPlaceOnEventList+0x80>)
 800f6ce:	6818      	ldr	r0, [r3, #0]
 800f6d0:	6829      	ldr	r1, [r5, #0]
 800f6d2:	3104      	adds	r1, #4
 800f6d4:	f7fe f94a 	bl	800d96c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800f6d8:	4b07      	ldr	r3, [pc, #28]	; (800f6f8 <vTaskPlaceOnEventList+0x84>)
 800f6da:	681a      	ldr	r2, [r3, #0]
 800f6dc:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800f6de:	bf38      	it	cc
 800f6e0:	601c      	strcc	r4, [r3, #0]
}
 800f6e2:	bd70      	pop	{r4, r5, r6, pc}
 800f6e4:	200131e8 	.word	0x200131e8
 800f6e8:	200136dc 	.word	0x200136dc
 800f6ec:	200131f0 	.word	0x200131f0
 800f6f0:	200136b4 	.word	0x200136b4
 800f6f4:	200131ec 	.word	0x200131ec
 800f6f8:	20013690 	.word	0x20013690

0800f6fc <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800f6fc:	b330      	cbz	r0, 800f74c <vTaskPlaceOnEventListRestricted+0x50>
	{
 800f6fe:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800f700:	4e1d      	ldr	r6, [pc, #116]	; (800f778 <vTaskPlaceOnEventListRestricted+0x7c>)
 800f702:	460c      	mov	r4, r1
 800f704:	6831      	ldr	r1, [r6, #0]
 800f706:	4615      	mov	r5, r2
 800f708:	3118      	adds	r1, #24
 800f70a:	f7fe f91f 	bl	800d94c <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800f70e:	4b1b      	ldr	r3, [pc, #108]	; (800f77c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800f710:	b985      	cbnz	r5, 800f734 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800f712:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f714:	6830      	ldr	r0, [r6, #0]
 800f716:	3004      	adds	r0, #4
 800f718:	f7fe f940 	bl	800d99c <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f71c:	6833      	ldr	r3, [r6, #0]
 800f71e:	1964      	adds	r4, r4, r5
 800f720:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800f722:	d31c      	bcc.n	800f75e <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f724:	4b16      	ldr	r3, [pc, #88]	; (800f780 <vTaskPlaceOnEventListRestricted+0x84>)
 800f726:	6818      	ldr	r0, [r3, #0]
 800f728:	6831      	ldr	r1, [r6, #0]
	}
 800f72a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f72e:	3104      	adds	r1, #4
 800f730:	f7fe b91c 	b.w	800d96c <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800f734:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f736:	6830      	ldr	r0, [r6, #0]
 800f738:	3004      	adds	r0, #4
 800f73a:	f7fe f92f 	bl	800d99c <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f73e:	6831      	ldr	r1, [r6, #0]
 800f740:	4810      	ldr	r0, [pc, #64]	; (800f784 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800f742:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f746:	3104      	adds	r1, #4
 800f748:	f7fe b900 	b.w	800d94c <vListInsertEnd>
 800f74c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f750:	f383 8811 	msr	BASEPRI, r3
 800f754:	f3bf 8f6f 	isb	sy
 800f758:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800f75c:	e7fe      	b.n	800f75c <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f75e:	4b0a      	ldr	r3, [pc, #40]	; (800f788 <vTaskPlaceOnEventListRestricted+0x8c>)
 800f760:	6818      	ldr	r0, [r3, #0]
 800f762:	6831      	ldr	r1, [r6, #0]
 800f764:	3104      	adds	r1, #4
 800f766:	f7fe f901 	bl	800d96c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800f76a:	4b08      	ldr	r3, [pc, #32]	; (800f78c <vTaskPlaceOnEventListRestricted+0x90>)
 800f76c:	681a      	ldr	r2, [r3, #0]
 800f76e:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800f770:	bf38      	it	cc
 800f772:	601c      	strcc	r4, [r3, #0]
	}
 800f774:	bd70      	pop	{r4, r5, r6, pc}
 800f776:	bf00      	nop
 800f778:	200131e8 	.word	0x200131e8
 800f77c:	200136dc 	.word	0x200136dc
 800f780:	200131f0 	.word	0x200131f0
 800f784:	200136b4 	.word	0x200136b4
 800f788:	200131ec 	.word	0x200131ec
 800f78c:	20013690 	.word	0x20013690

0800f790 <xTaskRemoveFromEventList>:
{
 800f790:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f792:	68c3      	ldr	r3, [r0, #12]
 800f794:	68dc      	ldr	r4, [r3, #12]
{
 800f796:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800f798:	2c00      	cmp	r4, #0
 800f79a:	d02b      	beq.n	800f7f4 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800f79c:	f104 0518 	add.w	r5, r4, #24
 800f7a0:	4628      	mov	r0, r5
 800f7a2:	f7fe f8fb 	bl	800d99c <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f7a6:	4b18      	ldr	r3, [pc, #96]	; (800f808 <xTaskRemoveFromEventList+0x78>)
 800f7a8:	681b      	ldr	r3, [r3, #0]
 800f7aa:	b17b      	cbz	r3, 800f7cc <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800f7ac:	4817      	ldr	r0, [pc, #92]	; (800f80c <xTaskRemoveFromEventList+0x7c>)
 800f7ae:	4629      	mov	r1, r5
 800f7b0:	f7fe f8cc 	bl	800d94c <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800f7b4:	4b16      	ldr	r3, [pc, #88]	; (800f810 <xTaskRemoveFromEventList+0x80>)
 800f7b6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f7b8:	681b      	ldr	r3, [r3, #0]
 800f7ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f7bc:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800f7be:	bf85      	ittet	hi
 800f7c0:	4b14      	ldrhi	r3, [pc, #80]	; (800f814 <xTaskRemoveFromEventList+0x84>)
 800f7c2:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800f7c4:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800f7c6:	6018      	strhi	r0, [r3, #0]
}
 800f7c8:	b003      	add	sp, #12
 800f7ca:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800f7cc:	1d21      	adds	r1, r4, #4
 800f7ce:	4608      	mov	r0, r1
 800f7d0:	9101      	str	r1, [sp, #4]
 800f7d2:	f7fe f8e3 	bl	800d99c <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800f7d6:	4a10      	ldr	r2, [pc, #64]	; (800f818 <xTaskRemoveFromEventList+0x88>)
 800f7d8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f7da:	6810      	ldr	r0, [r2, #0]
 800f7dc:	9901      	ldr	r1, [sp, #4]
 800f7de:	4283      	cmp	r3, r0
 800f7e0:	480e      	ldr	r0, [pc, #56]	; (800f81c <xTaskRemoveFromEventList+0x8c>)
 800f7e2:	bf88      	it	hi
 800f7e4:	6013      	strhi	r3, [r2, #0]
 800f7e6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f7ea:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f7ee:	f7fe f8ad 	bl	800d94c <vListInsertEnd>
 800f7f2:	e7df      	b.n	800f7b4 <xTaskRemoveFromEventList+0x24>
 800f7f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f7f8:	f383 8811 	msr	BASEPRI, r3
 800f7fc:	f3bf 8f6f 	isb	sy
 800f800:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800f804:	e7fe      	b.n	800f804 <xTaskRemoveFromEventList+0x74>
 800f806:	bf00      	nop
 800f808:	2001365c 	.word	0x2001365c
 800f80c:	2001369c 	.word	0x2001369c
 800f810:	200131e8 	.word	0x200131e8
 800f814:	200136e0 	.word	0x200136e0
 800f818:	20013664 	.word	0x20013664
 800f81c:	200131f4 	.word	0x200131f4

0800f820 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f820:	4a03      	ldr	r2, [pc, #12]	; (800f830 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f822:	4b04      	ldr	r3, [pc, #16]	; (800f834 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f824:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f826:	681b      	ldr	r3, [r3, #0]
 800f828:	e9c0 2300 	strd	r2, r3, [r0]
}
 800f82c:	4770      	bx	lr
 800f82e:	bf00      	nop
 800f830:	20013694 	.word	0x20013694
 800f834:	200136dc 	.word	0x200136dc

0800f838 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800f838:	b328      	cbz	r0, 800f886 <xTaskCheckForTimeOut+0x4e>
{
 800f83a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f83c:	460d      	mov	r5, r1
 800f83e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800f840:	b1c1      	cbz	r1, 800f874 <xTaskCheckForTimeOut+0x3c>
 800f842:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800f844:	f7fe f926 	bl	800da94 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800f848:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800f84a:	4a1d      	ldr	r2, [pc, #116]	; (800f8c0 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800f84c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800f84e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800f850:	d030      	beq.n	800f8b4 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800f852:	f8df c070 	ldr.w	ip, [pc, #112]	; 800f8c4 <xTaskCheckForTimeOut+0x8c>
 800f856:	e9d4 6000 	ldrd	r6, r0, [r4]
 800f85a:	f8dc 7000 	ldr.w	r7, [ip]
 800f85e:	42be      	cmp	r6, r7
 800f860:	d01a      	beq.n	800f898 <xTaskCheckForTimeOut+0x60>
 800f862:	4288      	cmp	r0, r1
 800f864:	d818      	bhi.n	800f898 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800f866:	2001      	movs	r0, #1
 800f868:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f86a:	f7fe f935 	bl	800dad8 <vPortExitCritical>
}
 800f86e:	9801      	ldr	r0, [sp, #4]
 800f870:	b003      	add	sp, #12
 800f872:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f874:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f878:	f383 8811 	msr	BASEPRI, r3
 800f87c:	f3bf 8f6f 	isb	sy
 800f880:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800f884:	e7fe      	b.n	800f884 <xTaskCheckForTimeOut+0x4c>
 800f886:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f88a:	f383 8811 	msr	BASEPRI, r3
 800f88e:	f3bf 8f6f 	isb	sy
 800f892:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800f896:	e7fe      	b.n	800f896 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800f898:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800f89c:	4573      	cmp	r3, lr
 800f89e:	d90b      	bls.n	800f8b8 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800f8a0:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f8a2:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f8a6:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800f8a8:	4403      	add	r3, r0
 800f8aa:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800f8ac:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f8ae:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800f8b2:	e7d9      	b.n	800f868 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800f8b4:	2000      	movs	r0, #0
 800f8b6:	e7d7      	b.n	800f868 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800f8b8:	2300      	movs	r3, #0
 800f8ba:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800f8bc:	2001      	movs	r0, #1
 800f8be:	e7d3      	b.n	800f868 <xTaskCheckForTimeOut+0x30>
 800f8c0:	200136dc 	.word	0x200136dc
 800f8c4:	20013694 	.word	0x20013694

0800f8c8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800f8c8:	4b01      	ldr	r3, [pc, #4]	; (800f8d0 <vTaskMissedYield+0x8>)
 800f8ca:	2201      	movs	r2, #1
 800f8cc:	601a      	str	r2, [r3, #0]
}
 800f8ce:	4770      	bx	lr
 800f8d0:	200136e0 	.word	0x200136e0

0800f8d4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800f8d4:	4b05      	ldr	r3, [pc, #20]	; (800f8ec <xTaskGetSchedulerState+0x18>)
 800f8d6:	681b      	ldr	r3, [r3, #0]
 800f8d8:	b133      	cbz	r3, 800f8e8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f8da:	4b05      	ldr	r3, [pc, #20]	; (800f8f0 <xTaskGetSchedulerState+0x1c>)
 800f8dc:	6818      	ldr	r0, [r3, #0]
 800f8de:	fab0 f080 	clz	r0, r0
 800f8e2:	0940      	lsrs	r0, r0, #5
 800f8e4:	0040      	lsls	r0, r0, #1
 800f8e6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800f8e8:	2001      	movs	r0, #1
	}
 800f8ea:	4770      	bx	lr
 800f8ec:	200136b0 	.word	0x200136b0
 800f8f0:	2001365c 	.word	0x2001365c

0800f8f4 <xTaskPriorityInherit>:
	{
 800f8f4:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800f8f6:	4604      	mov	r4, r0
	{
 800f8f8:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800f8fa:	b1c8      	cbz	r0, 800f930 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800f8fc:	4d1d      	ldr	r5, [pc, #116]	; (800f974 <xTaskPriorityInherit+0x80>)
 800f8fe:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800f900:	682a      	ldr	r2, [r5, #0]
 800f902:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f904:	4293      	cmp	r3, r2
 800f906:	d215      	bcs.n	800f934 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f908:	6982      	ldr	r2, [r0, #24]
 800f90a:	2a00      	cmp	r2, #0
 800f90c:	db04      	blt.n	800f918 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f90e:	682a      	ldr	r2, [r5, #0]
 800f910:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f912:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800f916:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800f918:	4e17      	ldr	r6, [pc, #92]	; (800f978 <xTaskPriorityInherit+0x84>)
 800f91a:	6962      	ldr	r2, [r4, #20]
 800f91c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f920:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800f924:	429a      	cmp	r2, r3
 800f926:	d00e      	beq.n	800f946 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f928:	682b      	ldr	r3, [r5, #0]
 800f92a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f92c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800f92e:	2001      	movs	r0, #1
	}
 800f930:	b002      	add	sp, #8
 800f932:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800f934:	682b      	ldr	r3, [r5, #0]
 800f936:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800f938:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f93a:	4298      	cmp	r0, r3
 800f93c:	bf2c      	ite	cs
 800f93e:	2000      	movcs	r0, #0
 800f940:	2001      	movcc	r0, #1
	}
 800f942:	b002      	add	sp, #8
 800f944:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f946:	1d21      	adds	r1, r4, #4
 800f948:	4608      	mov	r0, r1
 800f94a:	9101      	str	r1, [sp, #4]
 800f94c:	f7fe f826 	bl	800d99c <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f950:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f952:	4b0a      	ldr	r3, [pc, #40]	; (800f97c <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f954:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f956:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f958:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f95a:	4290      	cmp	r0, r2
 800f95c:	bf88      	it	hi
 800f95e:	6018      	strhi	r0, [r3, #0]
 800f960:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f964:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800f968:	9901      	ldr	r1, [sp, #4]
 800f96a:	f7fd ffef 	bl	800d94c <vListInsertEnd>
				xReturn = pdTRUE;
 800f96e:	2001      	movs	r0, #1
 800f970:	e7de      	b.n	800f930 <xTaskPriorityInherit+0x3c>
 800f972:	bf00      	nop
 800f974:	200131e8 	.word	0x200131e8
 800f978:	200131f4 	.word	0x200131f4
 800f97c:	20013664 	.word	0x20013664

0800f980 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800f980:	b318      	cbz	r0, 800f9ca <xTaskPriorityDisinherit+0x4a>
	{
 800f982:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800f984:	4b1e      	ldr	r3, [pc, #120]	; (800fa00 <xTaskPriorityDisinherit+0x80>)
 800f986:	681c      	ldr	r4, [r3, #0]
 800f988:	4284      	cmp	r4, r0
	{
 800f98a:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800f98c:	d008      	beq.n	800f9a0 <xTaskPriorityDisinherit+0x20>
 800f98e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f992:	f383 8811 	msr	BASEPRI, r3
 800f996:	f3bf 8f6f 	isb	sy
 800f99a:	f3bf 8f4f 	dsb	sy
 800f99e:	e7fe      	b.n	800f99e <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800f9a0:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800f9a2:	b14b      	cbz	r3, 800f9b8 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f9a4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f9a6:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800f9a8:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f9aa:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800f9ac:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f9ae:	d000      	beq.n	800f9b2 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800f9b0:	b16b      	cbz	r3, 800f9ce <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800f9b2:	2000      	movs	r0, #0
	}
 800f9b4:	b002      	add	sp, #8
 800f9b6:	bd10      	pop	{r4, pc}
 800f9b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f9bc:	f383 8811 	msr	BASEPRI, r3
 800f9c0:	f3bf 8f6f 	isb	sy
 800f9c4:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800f9c8:	e7fe      	b.n	800f9c8 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800f9ca:	2000      	movs	r0, #0
	}
 800f9cc:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f9ce:	1d21      	adds	r1, r4, #4
 800f9d0:	4608      	mov	r0, r1
 800f9d2:	9101      	str	r1, [sp, #4]
 800f9d4:	f7fd ffe2 	bl	800d99c <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f9d8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800f9da:	4a0a      	ldr	r2, [pc, #40]	; (800fa04 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f9dc:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f9de:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800f9e2:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800f9e4:	6810      	ldr	r0, [r2, #0]
 800f9e6:	9901      	ldr	r1, [sp, #4]
 800f9e8:	4283      	cmp	r3, r0
 800f9ea:	4807      	ldr	r0, [pc, #28]	; (800fa08 <xTaskPriorityDisinherit+0x88>)
 800f9ec:	bf88      	it	hi
 800f9ee:	6013      	strhi	r3, [r2, #0]
 800f9f0:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f9f4:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f9f8:	f7fd ffa8 	bl	800d94c <vListInsertEnd>
					xReturn = pdTRUE;
 800f9fc:	2001      	movs	r0, #1
		return xReturn;
 800f9fe:	e7d9      	b.n	800f9b4 <xTaskPriorityDisinherit+0x34>
 800fa00:	200131e8 	.word	0x200131e8
 800fa04:	20013664 	.word	0x20013664
 800fa08:	200131f4 	.word	0x200131f4

0800fa0c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800fa0c:	2800      	cmp	r0, #0
 800fa0e:	d041      	beq.n	800fa94 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800fa10:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800fa12:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800fa14:	b083      	sub	sp, #12
 800fa16:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800fa18:	b153      	cbz	r3, 800fa30 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800fa1a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800fa1c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fa1e:	4281      	cmp	r1, r0
 800fa20:	bf38      	it	cc
 800fa22:	4601      	movcc	r1, r0
 800fa24:	428a      	cmp	r2, r1
 800fa26:	d001      	beq.n	800fa2c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800fa28:	2b01      	cmp	r3, #1
 800fa2a:	d00a      	beq.n	800fa42 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800fa2c:	b003      	add	sp, #12
 800fa2e:	bd30      	pop	{r4, r5, pc}
 800fa30:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fa34:	f383 8811 	msr	BASEPRI, r3
 800fa38:	f3bf 8f6f 	isb	sy
 800fa3c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800fa40:	e7fe      	b.n	800fa40 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800fa42:	4b19      	ldr	r3, [pc, #100]	; (800faa8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800fa44:	681b      	ldr	r3, [r3, #0]
 800fa46:	42a3      	cmp	r3, r4
 800fa48:	d025      	beq.n	800fa96 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fa4a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800fa4c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fa4e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fa50:	bfa8      	it	ge
 800fa52:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800fa56:	4d15      	ldr	r5, [pc, #84]	; (800faac <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fa58:	bfa8      	it	ge
 800fa5a:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800fa5c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800fa60:	6961      	ldr	r1, [r4, #20]
 800fa62:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800fa66:	4299      	cmp	r1, r3
 800fa68:	d1e0      	bne.n	800fa2c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fa6a:	1d21      	adds	r1, r4, #4
 800fa6c:	4608      	mov	r0, r1
 800fa6e:	9101      	str	r1, [sp, #4]
 800fa70:	f7fd ff94 	bl	800d99c <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800fa74:	4b0e      	ldr	r3, [pc, #56]	; (800fab0 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800fa76:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800fa78:	681a      	ldr	r2, [r3, #0]
 800fa7a:	9901      	ldr	r1, [sp, #4]
 800fa7c:	4290      	cmp	r0, r2
 800fa7e:	bf88      	it	hi
 800fa80:	6018      	strhi	r0, [r3, #0]
 800fa82:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800fa86:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800fa8a:	b003      	add	sp, #12
 800fa8c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800fa90:	f7fd bf5c 	b.w	800d94c <vListInsertEnd>
 800fa94:	4770      	bx	lr
 800fa96:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fa9a:	f383 8811 	msr	BASEPRI, r3
 800fa9e:	f3bf 8f6f 	isb	sy
 800faa2:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800faa6:	e7fe      	b.n	800faa6 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800faa8:	200131e8 	.word	0x200131e8
 800faac:	200131f4 	.word	0x200131f4
 800fab0:	20013664 	.word	0x20013664

0800fab4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800fab4:	4b04      	ldr	r3, [pc, #16]	; (800fac8 <pvTaskIncrementMutexHeldCount+0x14>)
 800fab6:	681a      	ldr	r2, [r3, #0]
 800fab8:	b11a      	cbz	r2, 800fac2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800faba:	6819      	ldr	r1, [r3, #0]
 800fabc:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800fabe:	3201      	adds	r2, #1
 800fac0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800fac2:	6818      	ldr	r0, [r3, #0]
	}
 800fac4:	4770      	bx	lr
 800fac6:	bf00      	nop
 800fac8:	200131e8 	.word	0x200131e8

0800facc <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800facc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fad0:	4e22      	ldr	r6, [pc, #136]	; (800fb5c <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800fad2:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800fb64 <prvSwitchTimerLists+0x98>
{
 800fad6:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800fad8:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800fadc:	e00d      	b.n	800fafa <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800fade:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fae0:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800fae2:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800fae4:	1d25      	adds	r5, r4, #4
 800fae6:	4628      	mov	r0, r5
 800fae8:	f7fd ff58 	bl	800d99c <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800faec:	6a23      	ldr	r3, [r4, #32]
 800faee:	4620      	mov	r0, r4
 800faf0:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800faf2:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800faf6:	075b      	lsls	r3, r3, #29
 800faf8:	d40a      	bmi.n	800fb10 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800fafa:	6833      	ldr	r3, [r6, #0]
 800fafc:	681a      	ldr	r2, [r3, #0]
 800fafe:	2a00      	cmp	r2, #0
 800fb00:	d1ed      	bne.n	800fade <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800fb02:	4a17      	ldr	r2, [pc, #92]	; (800fb60 <prvSwitchTimerLists+0x94>)
 800fb04:	6811      	ldr	r1, [r2, #0]
 800fb06:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800fb08:	6013      	str	r3, [r2, #0]
}
 800fb0a:	b005      	add	sp, #20
 800fb0c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800fb10:	69a3      	ldr	r3, [r4, #24]
 800fb12:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800fb14:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fb16:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800fb18:	d205      	bcs.n	800fb26 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fb1a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800fb1c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800fb1e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fb20:	f7fd ff24 	bl	800d96c <vListInsert>
 800fb24:	e7e9      	b.n	800fafa <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800fb26:	f8d9 3000 	ldr.w	r3, [r9]
 800fb2a:	b16b      	cbz	r3, 800fb48 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800fb2c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800fb30:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800fb32:	f7ff fecf 	bl	800f8d4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800fb36:	2300      	movs	r3, #0
 800fb38:	f8d9 0000 	ldr.w	r0, [r9]
 800fb3c:	461a      	mov	r2, r3
 800fb3e:	4669      	mov	r1, sp
 800fb40:	f7fe fa9c 	bl	800e07c <xQueueGenericSend>
				configASSERT( xResult );
 800fb44:	2800      	cmp	r0, #0
 800fb46:	d1d8      	bne.n	800fafa <prvSwitchTimerLists+0x2e>
 800fb48:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb4c:	f383 8811 	msr	BASEPRI, r3
 800fb50:	f3bf 8f6f 	isb	sy
 800fb54:	f3bf 8f4f 	dsb	sy
 800fb58:	e7fe      	b.n	800fb58 <prvSwitchTimerLists+0x8c>
 800fb5a:	bf00      	nop
 800fb5c:	200136e4 	.word	0x200136e4
 800fb60:	200136e8 	.word	0x200136e8
 800fb64:	20013808 	.word	0x20013808

0800fb68 <prvTimerTask>:
{
 800fb68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb6c:	4e9b      	ldr	r6, [pc, #620]	; (800fddc <prvTimerTask+0x274>)
 800fb6e:	4d9c      	ldr	r5, [pc, #624]	; (800fde0 <prvTimerTask+0x278>)
 800fb70:	4c9c      	ldr	r4, [pc, #624]	; (800fde4 <prvTimerTask+0x27c>)
 800fb72:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800fb74:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800fb78:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800fb7c:	6833      	ldr	r3, [r6, #0]
 800fb7e:	681f      	ldr	r7, [r3, #0]
 800fb80:	2f00      	cmp	r7, #0
 800fb82:	f000 80a8 	beq.w	800fcd6 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800fb86:	68db      	ldr	r3, [r3, #12]
 800fb88:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800fb8a:	f7ff fcf9 	bl	800f580 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800fb8e:	f7ff fd0f 	bl	800f5b0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800fb92:	682a      	ldr	r2, [r5, #0]
 800fb94:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800fb96:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800fb98:	f0c0 80ae 	bcc.w	800fcf8 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800fb9c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800fb9e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800fba0:	f240 80b4 	bls.w	800fd0c <prvTimerTask+0x1a4>
 800fba4:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800fba6:	6820      	ldr	r0, [r4, #0]
 800fba8:	eba7 010a 	sub.w	r1, r7, sl
 800fbac:	f7ff f89a 	bl	800ece4 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800fbb0:	f7ff fcee 	bl	800f590 <xTaskResumeAll>
 800fbb4:	b928      	cbnz	r0, 800fbc2 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800fbb6:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800fbba:	f3bf 8f4f 	dsb	sy
 800fbbe:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800fbc2:	6820      	ldr	r0, [r4, #0]
 800fbc4:	2200      	movs	r2, #0
 800fbc6:	a902      	add	r1, sp, #8
 800fbc8:	f7fe fc94 	bl	800e4f4 <xQueueReceive>
 800fbcc:	2800      	cmp	r0, #0
 800fbce:	d0d5      	beq.n	800fb7c <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800fbd0:	9b02      	ldr	r3, [sp, #8]
 800fbd2:	2b00      	cmp	r3, #0
 800fbd4:	db76      	blt.n	800fcc4 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800fbd6:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800fbd8:	697b      	ldr	r3, [r7, #20]
 800fbda:	b113      	cbz	r3, 800fbe2 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800fbdc:	1d38      	adds	r0, r7, #4
 800fbde:	f7fd fedd 	bl	800d99c <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800fbe2:	f7ff fce5 	bl	800f5b0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800fbe6:	682b      	ldr	r3, [r5, #0]
 800fbe8:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800fbea:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800fbec:	f0c0 808b 	bcc.w	800fd06 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800fbf0:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800fbf2:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800fbf6:	2b09      	cmp	r3, #9
 800fbf8:	d8e3      	bhi.n	800fbc2 <prvTimerTask+0x5a>
 800fbfa:	e8df f003 	tbb	[pc, r3]
 800fbfe:	0505      	.short	0x0505
 800fc00:	5a3d5305 	.word	0x5a3d5305
 800fc04:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800fc08:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800fc0c:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800fc0e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800fc10:	f043 0301 	orr.w	r3, r3, #1
 800fc14:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800fc18:	9b03      	ldr	r3, [sp, #12]
 800fc1a:	1899      	adds	r1, r3, r2
 800fc1c:	bf2c      	ite	cs
 800fc1e:	2001      	movcs	r0, #1
 800fc20:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800fc22:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800fc24:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800fc26:	f200 808c 	bhi.w	800fd42 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fc2a:	ebaa 0303 	sub.w	r3, sl, r3
 800fc2e:	429a      	cmp	r2, r3
 800fc30:	d832      	bhi.n	800fc98 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800fc32:	6a3b      	ldr	r3, [r7, #32]
 800fc34:	4638      	mov	r0, r7
 800fc36:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800fc38:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800fc3c:	075b      	lsls	r3, r3, #29
 800fc3e:	d5c0      	bpl.n	800fbc2 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800fc40:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800fc42:	9903      	ldr	r1, [sp, #12]
 800fc44:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800fc46:	b172      	cbz	r2, 800fc66 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800fc48:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800fc4a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800fc4e:	2300      	movs	r3, #0
 800fc50:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800fc52:	f7ff fe3f 	bl	800f8d4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800fc56:	2300      	movs	r3, #0
 800fc58:	6820      	ldr	r0, [r4, #0]
 800fc5a:	461a      	mov	r2, r3
 800fc5c:	a906      	add	r1, sp, #24
 800fc5e:	f7fe fa0d 	bl	800e07c <xQueueGenericSend>
							configASSERT( xResult );
 800fc62:	2800      	cmp	r0, #0
 800fc64:	d1ad      	bne.n	800fbc2 <prvTimerTask+0x5a>
 800fc66:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc6a:	f383 8811 	msr	BASEPRI, r3
 800fc6e:	f3bf 8f6f 	isb	sy
 800fc72:	f3bf 8f4f 	dsb	sy
 800fc76:	e7fe      	b.n	800fc76 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800fc78:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800fc7c:	f043 0301 	orr.w	r3, r3, #1
 800fc80:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800fc84:	9b03      	ldr	r3, [sp, #12]
 800fc86:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800fc88:	2b00      	cmp	r3, #0
 800fc8a:	f000 809d 	beq.w	800fdc8 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800fc8e:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 800fc90:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800fc92:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800fc94:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 800fc96:	d85e      	bhi.n	800fd56 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800fc98:	4b53      	ldr	r3, [pc, #332]	; (800fde8 <prvTimerTask+0x280>)
 800fc9a:	1d39      	adds	r1, r7, #4
 800fc9c:	6818      	ldr	r0, [r3, #0]
 800fc9e:	f7fd fe65 	bl	800d96c <vListInsert>
	return xProcessTimerNow;
 800fca2:	e78e      	b.n	800fbc2 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800fca4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800fca8:	f023 0301 	bic.w	r3, r3, #1
 800fcac:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 800fcb0:	e787      	b.n	800fbc2 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800fcb2:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800fcb6:	079a      	lsls	r2, r3, #30
 800fcb8:	d552      	bpl.n	800fd60 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800fcba:	f023 0301 	bic.w	r3, r3, #1
 800fcbe:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 800fcc2:	e77e      	b.n	800fbc2 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800fcc4:	9b03      	ldr	r3, [sp, #12]
 800fcc6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800fcca:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800fccc:	9b02      	ldr	r3, [sp, #8]
 800fcce:	2b00      	cmp	r3, #0
 800fcd0:	f6ff af77 	blt.w	800fbc2 <prvTimerTask+0x5a>
 800fcd4:	e77f      	b.n	800fbd6 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 800fcd6:	f7ff fc53 	bl	800f580 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800fcda:	f7ff fc69 	bl	800f5b0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800fcde:	682a      	ldr	r2, [r5, #0]
 800fce0:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 800fce2:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800fce4:	d808      	bhi.n	800fcf8 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800fce6:	4b40      	ldr	r3, [pc, #256]	; (800fde8 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 800fce8:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800fcec:	681a      	ldr	r2, [r3, #0]
 800fcee:	6812      	ldr	r2, [r2, #0]
 800fcf0:	fab2 f282 	clz	r2, r2
 800fcf4:	0952      	lsrs	r2, r2, #5
 800fcf6:	e756      	b.n	800fba6 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 800fcf8:	f7ff fee8 	bl	800facc <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800fcfc:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 800fd00:	f7ff fc46 	bl	800f590 <xTaskResumeAll>
 800fd04:	e75d      	b.n	800fbc2 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 800fd06:	f7ff fee1 	bl	800facc <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 800fd0a:	e771      	b.n	800fbf0 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 800fd0c:	f7ff fc40 	bl	800f590 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fd10:	6832      	ldr	r2, [r6, #0]
 800fd12:	68d2      	ldr	r2, [r2, #12]
 800fd14:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800fd18:	f10b 0104 	add.w	r1, fp, #4
 800fd1c:	4608      	mov	r0, r1
 800fd1e:	9101      	str	r1, [sp, #4]
 800fd20:	f7fd fe3c 	bl	800d99c <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800fd24:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 800fd28:	9901      	ldr	r1, [sp, #4]
 800fd2a:	f010 0f04 	tst.w	r0, #4
 800fd2e:	d11b      	bne.n	800fd68 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800fd30:	f020 0001 	bic.w	r0, r0, #1
 800fd34:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800fd38:	f8db 3020 	ldr.w	r3, [fp, #32]
 800fd3c:	4658      	mov	r0, fp
 800fd3e:	4798      	blx	r3
}
 800fd40:	e73f      	b.n	800fbc2 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800fd42:	4553      	cmp	r3, sl
 800fd44:	d902      	bls.n	800fd4c <prvTimerTask+0x1e4>
 800fd46:	2800      	cmp	r0, #0
 800fd48:	f43f af73 	beq.w	800fc32 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fd4c:	6830      	ldr	r0, [r6, #0]
 800fd4e:	1d39      	adds	r1, r7, #4
 800fd50:	f7fd fe0c 	bl	800d96c <vListInsert>
	return xProcessTimerNow;
 800fd54:	e735      	b.n	800fbc2 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fd56:	6830      	ldr	r0, [r6, #0]
 800fd58:	1d39      	adds	r1, r7, #4
 800fd5a:	f7fd fe07 	bl	800d96c <vListInsert>
 800fd5e:	e730      	b.n	800fbc2 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 800fd60:	4638      	mov	r0, r7
 800fd62:	f7fd fd7f 	bl	800d864 <vPortFree>
 800fd66:	e72c      	b.n	800fbc2 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800fd68:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800fd6c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800fd70:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 800fd72:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800fd74:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 800fd78:	d903      	bls.n	800fd82 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fd7a:	6830      	ldr	r0, [r6, #0]
 800fd7c:	f7fd fdf6 	bl	800d96c <vListInsert>
	return xProcessTimerNow;
 800fd80:	e7da      	b.n	800fd38 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fd82:	ebaa 0307 	sub.w	r3, sl, r7
 800fd86:	429a      	cmp	r2, r3
 800fd88:	d819      	bhi.n	800fdbe <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 800fd8a:	6823      	ldr	r3, [r4, #0]
 800fd8c:	b173      	cbz	r3, 800fdac <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 800fd8e:	2300      	movs	r3, #0
 800fd90:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800fd92:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800fd94:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800fd98:	f7ff fd9c 	bl	800f8d4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800fd9c:	2300      	movs	r3, #0
 800fd9e:	6820      	ldr	r0, [r4, #0]
 800fda0:	461a      	mov	r2, r3
 800fda2:	a906      	add	r1, sp, #24
 800fda4:	f7fe f96a 	bl	800e07c <xQueueGenericSend>
			configASSERT( xResult );
 800fda8:	2800      	cmp	r0, #0
 800fdaa:	d1c5      	bne.n	800fd38 <prvTimerTask+0x1d0>
 800fdac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fdb0:	f383 8811 	msr	BASEPRI, r3
 800fdb4:	f3bf 8f6f 	isb	sy
 800fdb8:	f3bf 8f4f 	dsb	sy
 800fdbc:	e7fe      	b.n	800fdbc <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800fdbe:	4b0a      	ldr	r3, [pc, #40]	; (800fde8 <prvTimerTask+0x280>)
 800fdc0:	6818      	ldr	r0, [r3, #0]
 800fdc2:	f7fd fdd3 	bl	800d96c <vListInsert>
	return xProcessTimerNow;
 800fdc6:	e7b7      	b.n	800fd38 <prvTimerTask+0x1d0>
 800fdc8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fdcc:	f383 8811 	msr	BASEPRI, r3
 800fdd0:	f3bf 8f6f 	isb	sy
 800fdd4:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800fdd8:	e7fe      	b.n	800fdd8 <prvTimerTask+0x270>
 800fdda:	bf00      	nop
 800fddc:	200136e4 	.word	0x200136e4
 800fde0:	200137b4 	.word	0x200137b4
 800fde4:	20013808 	.word	0x20013808
 800fde8:	200136e8 	.word	0x200136e8

0800fdec <xTimerCreateTimerTask>:
{
 800fdec:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800fdee:	4c23      	ldr	r4, [pc, #140]	; (800fe7c <xTimerCreateTimerTask+0x90>)
{
 800fdf0:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 800fdf2:	f7fd fe4f 	bl	800da94 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800fdf6:	6825      	ldr	r5, [r4, #0]
 800fdf8:	b335      	cbz	r5, 800fe48 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800fdfa:	f7fd fe6d 	bl	800dad8 <vPortExitCritical>
	if( xTimerQueue != NULL )
 800fdfe:	6823      	ldr	r3, [r4, #0]
 800fe00:	b1cb      	cbz	r3, 800fe36 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800fe02:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800fe04:	aa07      	add	r2, sp, #28
 800fe06:	a906      	add	r1, sp, #24
 800fe08:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800fe0a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800fe0e:	f7fd fc5d 	bl	800d6cc <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800fe12:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 800fe16:	2302      	movs	r3, #2
 800fe18:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800fe1c:	9300      	str	r3, [sp, #0]
 800fe1e:	9a07      	ldr	r2, [sp, #28]
 800fe20:	4917      	ldr	r1, [pc, #92]	; (800fe80 <xTimerCreateTimerTask+0x94>)
 800fe22:	4818      	ldr	r0, [pc, #96]	; (800fe84 <xTimerCreateTimerTask+0x98>)
 800fe24:	4623      	mov	r3, r4
 800fe26:	f7ff fa6d 	bl	800f304 <xTaskCreateStatic>
 800fe2a:	4b17      	ldr	r3, [pc, #92]	; (800fe88 <xTimerCreateTimerTask+0x9c>)
 800fe2c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800fe2e:	b110      	cbz	r0, 800fe36 <xTimerCreateTimerTask+0x4a>
}
 800fe30:	2001      	movs	r0, #1
 800fe32:	b009      	add	sp, #36	; 0x24
 800fe34:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fe36:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe3a:	f383 8811 	msr	BASEPRI, r3
 800fe3e:	f3bf 8f6f 	isb	sy
 800fe42:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800fe46:	e7fe      	b.n	800fe46 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 800fe48:	4f10      	ldr	r7, [pc, #64]	; (800fe8c <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 800fe4a:	4e11      	ldr	r6, [pc, #68]	; (800fe90 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 800fe4c:	4638      	mov	r0, r7
 800fe4e:	f7fd fd6d 	bl	800d92c <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800fe52:	4630      	mov	r0, r6
 800fe54:	f7fd fd6a 	bl	800d92c <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800fe58:	4a0e      	ldr	r2, [pc, #56]	; (800fe94 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800fe5a:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 800fe5c:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800fe5e:	4a0e      	ldr	r2, [pc, #56]	; (800fe98 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800fe60:	4b0e      	ldr	r3, [pc, #56]	; (800fe9c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 800fe62:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800fe64:	2110      	movs	r1, #16
 800fe66:	4a0e      	ldr	r2, [pc, #56]	; (800fea0 <xTimerCreateTimerTask+0xb4>)
 800fe68:	200a      	movs	r0, #10
 800fe6a:	f7fd ffb1 	bl	800ddd0 <xQueueGenericCreateStatic>
 800fe6e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 800fe70:	2800      	cmp	r0, #0
 800fe72:	d0c2      	beq.n	800fdfa <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800fe74:	490b      	ldr	r1, [pc, #44]	; (800fea4 <xTimerCreateTimerTask+0xb8>)
 800fe76:	f7fe ff0d 	bl	800ec94 <vQueueAddToRegistry>
 800fe7a:	e7be      	b.n	800fdfa <xTimerCreateTimerTask+0xe>
 800fe7c:	20013808 	.word	0x20013808
 800fe80:	0802ecd4 	.word	0x0802ecd4
 800fe84:	0800fb69 	.word	0x0800fb69
 800fe88:	2001380c 	.word	0x2001380c
 800fe8c:	2001378c 	.word	0x2001378c
 800fe90:	200137a0 	.word	0x200137a0
 800fe94:	200136e4 	.word	0x200136e4
 800fe98:	200136e8 	.word	0x200136e8
 800fe9c:	200137b8 	.word	0x200137b8
 800fea0:	200136ec 	.word	0x200136ec
 800fea4:	0802eccc 	.word	0x0802eccc

0800fea8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800fea8:	8880      	ldrh	r0, [r0, #4]
 800feaa:	4770      	bx	lr

0800feac <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800feac:	b570      	push	{r4, r5, r6, lr}
 800feae:	6803      	ldr	r3, [r0, #0]
 800feb0:	4605      	mov	r5, r0
 800feb2:	460c      	mov	r4, r1
 800feb4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800feb6:	2100      	movs	r1, #0
 800feb8:	4798      	blx	r3
 800feba:	682b      	ldr	r3, [r5, #0]
 800febc:	4606      	mov	r6, r0
 800febe:	6a1b      	ldr	r3, [r3, #32]
 800fec0:	4628      	mov	r0, r5
 800fec2:	4798      	blx	r3
 800fec4:	1ba4      	subs	r4, r4, r6
 800fec6:	b2a4      	uxth	r4, r4
 800fec8:	fbb4 f0f0 	udiv	r0, r4, r0
 800fecc:	bd70      	pop	{r4, r5, r6, pc}

0800fece <_ZN8touchgfx17AbstractPartition5clearEv>:
 800fece:	2300      	movs	r3, #0
 800fed0:	8083      	strh	r3, [r0, #4]
 800fed2:	4770      	bx	lr

0800fed4 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800fed4:	b510      	push	{r4, lr}
 800fed6:	6803      	ldr	r3, [r0, #0]
 800fed8:	8881      	ldrh	r1, [r0, #4]
 800feda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fedc:	4604      	mov	r4, r0
 800fede:	4798      	blx	r3
 800fee0:	88a3      	ldrh	r3, [r4, #4]
 800fee2:	3301      	adds	r3, #1
 800fee4:	80a3      	strh	r3, [r4, #4]
 800fee6:	bd10      	pop	{r4, pc}

0800fee8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800fee8:	6803      	ldr	r3, [r0, #0]
 800feea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800feec:	4718      	bx	r3

0800feee <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800feee:	4770      	bx	lr

0800fef0 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800fef0:	4a02      	ldr	r2, [pc, #8]	; (800fefc <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800fef2:	6002      	str	r2, [r0, #0]
 800fef4:	2200      	movs	r2, #0
 800fef6:	8082      	strh	r2, [r0, #4]
 800fef8:	4770      	bx	lr
 800fefa:	bf00      	nop
 800fefc:	0802ece4 	.word	0x0802ece4

0800ff00 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800ff00:	b510      	push	{r4, lr}
 800ff02:	6803      	ldr	r3, [r0, #0]
 800ff04:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800ff08:	4604      	mov	r4, r0
 800ff0a:	4798      	blx	r3
 800ff0c:	b110      	cbz	r0, 800ff14 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800ff0e:	4620      	mov	r0, r4
 800ff10:	f7f2 fb2c 	bl	800256c <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800ff14:	bd10      	pop	{r4, pc}

0800ff16 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800ff16:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800ff1a:	4770      	bx	lr

0800ff1c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800ff1c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800ff20:	4770      	bx	lr

0800ff22 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800ff22:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800ff26:	4770      	bx	lr

0800ff28 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800ff28:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800ff2c:	4770      	bx	lr

0800ff2e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800ff2e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ff30:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800ff34:	461e      	mov	r6, r3
 800ff36:	6803      	ldr	r3, [r0, #0]
 800ff38:	460f      	mov	r7, r1
 800ff3a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800ff3e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800ff42:	4604      	mov	r4, r0
 800ff44:	4615      	mov	r5, r2
 800ff46:	4798      	blx	r3
 800ff48:	b93e      	cbnz	r6, 800ff5a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800ff4a:	1bed      	subs	r5, r5, r7
 800ff4c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800ff50:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800ff54:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800ff58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ff5a:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800ff5e:	e7f7      	b.n	800ff50 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800ff60 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800ff60:	b510      	push	{r4, lr}
 800ff62:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800ff66:	600c      	str	r4, [r1, #0]
 800ff68:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800ff6c:	6011      	str	r1, [r2, #0]
 800ff6e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800ff72:	801a      	strh	r2, [r3, #0]
 800ff74:	9b02      	ldr	r3, [sp, #8]
 800ff76:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800ff7a:	801a      	strh	r2, [r3, #0]
 800ff7c:	bd10      	pop	{r4, pc}

0800ff7e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800ff7e:	b510      	push	{r4, lr}
 800ff80:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800ff84:	600c      	str	r4, [r1, #0]
 800ff86:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800ff8a:	6011      	str	r1, [r2, #0]
 800ff8c:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800ff90:	801a      	strh	r2, [r3, #0]
 800ff92:	bd10      	pop	{r4, pc}

0800ff94 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800ff94:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800ff98:	600b      	str	r3, [r1, #0]
 800ff9a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800ff9e:	6013      	str	r3, [r2, #0]
 800ffa0:	4770      	bx	lr

0800ffa2 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800ffa2:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800ffa6:	4770      	bx	lr

0800ffa8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800ffa8:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800ffac:	4770      	bx	lr

0800ffae <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800ffae:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800ffb2:	4770      	bx	lr

0800ffb4 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800ffb4:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800ffb8:	4770      	bx	lr

0800ffba <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800ffba:	4770      	bx	lr

0800ffbc <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800ffbc:	b510      	push	{r4, lr}
 800ffbe:	21b4      	movs	r1, #180	; 0xb4
 800ffc0:	4604      	mov	r4, r0
 800ffc2:	f01a fb02 	bl	802a5ca <_ZdlPvj>
 800ffc6:	4620      	mov	r0, r4
 800ffc8:	bd10      	pop	{r4, pc}

0800ffca <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800ffca:	b570      	push	{r4, r5, r6, lr}
 800ffcc:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800ffd0:	428d      	cmp	r5, r1
 800ffd2:	bfb8      	it	lt
 800ffd4:	460d      	movlt	r5, r1
 800ffd6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800ffda:	428d      	cmp	r5, r1
 800ffdc:	4604      	mov	r4, r0
 800ffde:	bfa8      	it	ge
 800ffe0:	460d      	movge	r5, r1
 800ffe2:	4616      	mov	r6, r2
 800ffe4:	b99a      	cbnz	r2, 801000e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800ffe6:	6803      	ldr	r3, [r0, #0]
 800ffe8:	4629      	mov	r1, r5
 800ffea:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800ffee:	4798      	blx	r3
 800fff0:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800fff4:	b368      	cbz	r0, 8010052 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800fff6:	6803      	ldr	r3, [r0, #0]
 800fff8:	68db      	ldr	r3, [r3, #12]
 800fffa:	4798      	blx	r3
 800fffc:	b348      	cbz	r0, 8010052 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800fffe:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010002:	6803      	ldr	r3, [r0, #0]
 8010004:	4621      	mov	r1, r4
 8010006:	689b      	ldr	r3, [r3, #8]
 8010008:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801000c:	4718      	bx	r3
 801000e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8010012:	2b00      	cmp	r3, #0
 8010014:	dd08      	ble.n	8010028 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 8010016:	f006 fa23 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
 801001a:	4621      	mov	r1, r4
 801001c:	3004      	adds	r0, #4
 801001e:	f006 fa6c 	bl	80164fa <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010022:	2300      	movs	r3, #0
 8010024:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8010028:	6823      	ldr	r3, [r4, #0]
 801002a:	4620      	mov	r0, r4
 801002c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010030:	4798      	blx	r3
 8010032:	2300      	movs	r3, #0
 8010034:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8010038:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 801003c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 8010040:	f006 fa0e 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
 8010044:	4621      	mov	r1, r4
 8010046:	3004      	adds	r0, #4
 8010048:	f006 fb00 	bl	801664c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 801004c:	2301      	movs	r3, #1
 801004e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8010052:	bd70      	pop	{r4, r5, r6, pc}

08010054 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 8010054:	b510      	push	{r4, lr}
 8010056:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 801005a:	4299      	cmp	r1, r3
 801005c:	bfb8      	it	lt
 801005e:	4619      	movlt	r1, r3
 8010060:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8010064:	4299      	cmp	r1, r3
 8010066:	bfa8      	it	ge
 8010068:	4619      	movge	r1, r3
 801006a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 801006e:	428b      	cmp	r3, r1
 8010070:	4604      	mov	r4, r0
 8010072:	d010      	beq.n	8010096 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8010074:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 8010078:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 801007c:	b158      	cbz	r0, 8010096 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 801007e:	6803      	ldr	r3, [r0, #0]
 8010080:	68db      	ldr	r3, [r3, #12]
 8010082:	4798      	blx	r3
 8010084:	b138      	cbz	r0, 8010096 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8010086:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 801008a:	6803      	ldr	r3, [r0, #0]
 801008c:	4621      	mov	r1, r4
 801008e:	689b      	ldr	r3, [r3, #8]
 8010090:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010094:	4718      	bx	r3
 8010096:	bd10      	pop	{r4, pc}

08010098 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 8010098:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801009a:	4604      	mov	r4, r0
 801009c:	460d      	mov	r5, r1
 801009e:	b1a9      	cbz	r1, 80100cc <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 80100a0:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 80100a4:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 80100a8:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 80100ac:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 80100b0:	ab01      	add	r3, sp, #4
 80100b2:	1a12      	subs	r2, r2, r0
 80100b4:	1b89      	subs	r1, r1, r6
 80100b6:	1a38      	subs	r0, r7, r0
 80100b8:	f007 fc88 	bl	80179cc <_ZN8touchgfx6muldivElllRl>
 80100bc:	4629      	mov	r1, r5
 80100be:	ab01      	add	r3, sp, #4
 80100c0:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 80100c4:	4430      	add	r0, r6
 80100c6:	f007 fc81 	bl	80179cc <_ZN8touchgfx6muldivElllRl>
 80100ca:	b285      	uxth	r5, r0
 80100cc:	4628      	mov	r0, r5
 80100ce:	b003      	add	sp, #12
 80100d0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080100d2 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 80100d2:	b570      	push	{r4, r5, r6, lr}
 80100d4:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 80100d8:	4604      	mov	r4, r0
 80100da:	2b00      	cmp	r3, #0
 80100dc:	d035      	beq.n	801014a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80100de:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 80100e2:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 80100e6:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 80100ea:	3001      	adds	r0, #1
 80100ec:	1ad2      	subs	r2, r2, r3
 80100ee:	b212      	sxth	r2, r2
 80100f0:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 80100f4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80100f8:	2100      	movs	r1, #0
 80100fa:	b280      	uxth	r0, r0
 80100fc:	47a8      	blx	r5
 80100fe:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 8010102:	6823      	ldr	r3, [r4, #0]
 8010104:	4401      	add	r1, r0
 8010106:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801010a:	4620      	mov	r0, r4
 801010c:	4798      	blx	r3
 801010e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8010112:	429a      	cmp	r2, r3
 8010114:	db19      	blt.n	801014a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8010116:	2500      	movs	r5, #0
 8010118:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 801011c:	f006 f9a0 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
 8010120:	4621      	mov	r1, r4
 8010122:	3004      	adds	r0, #4
 8010124:	f006 f9e9 	bl	80164fa <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010128:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801012c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8010130:	b158      	cbz	r0, 801014a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8010132:	6803      	ldr	r3, [r0, #0]
 8010134:	68db      	ldr	r3, [r3, #12]
 8010136:	4798      	blx	r3
 8010138:	b138      	cbz	r0, 801014a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801013a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801013e:	6803      	ldr	r3, [r0, #0]
 8010140:	4621      	mov	r1, r4
 8010142:	689b      	ldr	r3, [r3, #8]
 8010144:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010148:	4718      	bx	r3
 801014a:	bd70      	pop	{r4, r5, r6, pc}

0801014c <_ZN8touchgfx8DrawableC1Ev>:
 801014c:	4a0a      	ldr	r2, [pc, #40]	; (8010178 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 801014e:	6002      	str	r2, [r0, #0]
 8010150:	2200      	movs	r2, #0
 8010152:	8082      	strh	r2, [r0, #4]
 8010154:	80c2      	strh	r2, [r0, #6]
 8010156:	8102      	strh	r2, [r0, #8]
 8010158:	8142      	strh	r2, [r0, #10]
 801015a:	8182      	strh	r2, [r0, #12]
 801015c:	81c2      	strh	r2, [r0, #14]
 801015e:	8202      	strh	r2, [r0, #16]
 8010160:	8242      	strh	r2, [r0, #18]
 8010162:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8010166:	61c2      	str	r2, [r0, #28]
 8010168:	8402      	strh	r2, [r0, #32]
 801016a:	8442      	strh	r2, [r0, #34]	; 0x22
 801016c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8010170:	2201      	movs	r2, #1
 8010172:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8010176:	4770      	bx	lr
 8010178:	0802f664 	.word	0x0802f664

0801017c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 801017c:	b570      	push	{r4, r5, r6, lr}
 801017e:	6803      	ldr	r3, [r0, #0]
 8010180:	4604      	mov	r4, r0
 8010182:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010184:	4615      	mov	r5, r2
 8010186:	4798      	blx	r3
 8010188:	6823      	ldr	r3, [r4, #0]
 801018a:	4629      	mov	r1, r5
 801018c:	4620      	mov	r0, r4
 801018e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010190:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010194:	4718      	bx	r3

08010196 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 8010196:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801019a:	4604      	mov	r4, r0
 801019c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 80101a0:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 80101a4:	460e      	mov	r6, r1
 80101a6:	4615      	mov	r5, r2
 80101a8:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80101ac:	4619      	mov	r1, r3
 80101ae:	463a      	mov	r2, r7
 80101b0:	3058      	adds	r0, #88	; 0x58
 80101b2:	4698      	mov	r8, r3
 80101b4:	f7ff ffe2 	bl	801017c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80101b8:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 80101bc:	4446      	add	r6, r8
 80101be:	42b3      	cmp	r3, r6
 80101c0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80101c4:	bfb8      	it	lt
 80101c6:	8126      	strhlt	r6, [r4, #8]
 80101c8:	443d      	add	r5, r7
 80101ca:	42ab      	cmp	r3, r5
 80101cc:	bfb8      	it	lt
 80101ce:	8165      	strhlt	r5, [r4, #10]
 80101d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080101d4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 80101d4:	b510      	push	{r4, lr}
 80101d6:	4604      	mov	r4, r0
 80101d8:	302c      	adds	r0, #44	; 0x2c
 80101da:	f003 fc42 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80101de:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 80101e2:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 80101e6:	4620      	mov	r0, r4
 80101e8:	f7ff ffc8 	bl	801017c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80101ec:	bd10      	pop	{r4, pc}
	...

080101f0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 80101f0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80101f2:	4604      	mov	r4, r0
 80101f4:	4626      	mov	r6, r4
 80101f6:	2500      	movs	r5, #0
 80101f8:	f7ff ffa8 	bl	801014c <_ZN8touchgfx8DrawableC1Ev>
 80101fc:	4b23      	ldr	r3, [pc, #140]	; (801028c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 80101fe:	62a5      	str	r5, [r4, #40]	; 0x28
 8010200:	f846 3b2c 	str.w	r3, [r6], #44
 8010204:	2226      	movs	r2, #38	; 0x26
 8010206:	4629      	mov	r1, r5
 8010208:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801020c:	4630      	mov	r0, r6
 801020e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010212:	f01b f9f2 	bl	802b5fa <memset>
 8010216:	4630      	mov	r0, r6
 8010218:	f7ff ff98 	bl	801014c <_ZN8touchgfx8DrawableC1Ev>
 801021c:	a902      	add	r1, sp, #8
 801021e:	4b1c      	ldr	r3, [pc, #112]	; (8010290 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8010220:	62e3      	str	r3, [r4, #44]	; 0x2c
 8010222:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8010226:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 801022a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 801022e:	4630      	mov	r0, r6
 8010230:	f104 0758 	add.w	r7, r4, #88	; 0x58
 8010234:	f003 fc15 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010238:	4638      	mov	r0, r7
 801023a:	f7ff ff87 	bl	801014c <_ZN8touchgfx8DrawableC1Ev>
 801023e:	4b15      	ldr	r3, [pc, #84]	; (8010294 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8010240:	65a3      	str	r3, [r4, #88]	; 0x58
 8010242:	2364      	movs	r3, #100	; 0x64
 8010244:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 8010248:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 801024c:	4b12      	ldr	r3, [pc, #72]	; (8010298 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 801024e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8010252:	4629      	mov	r1, r5
 8010254:	4630      	mov	r0, r6
 8010256:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 801025a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 801025e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 8010262:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8010266:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 801026a:	f7f2 f8db 	bl	8002424 <_ZN8touchgfx8Drawable4setXEs>
 801026e:	4629      	mov	r1, r5
 8010270:	4630      	mov	r0, r6
 8010272:	f7f2 f8d9 	bl	8002428 <_ZN8touchgfx8Drawable4setYEs>
 8010276:	4631      	mov	r1, r6
 8010278:	4620      	mov	r0, r4
 801027a:	f000 f819 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801027e:	4620      	mov	r0, r4
 8010280:	4639      	mov	r1, r7
 8010282:	f000 f815 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010286:	4620      	mov	r0, r4
 8010288:	b003      	add	sp, #12
 801028a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801028c:	0802ed18 	.word	0x0802ed18
 8010290:	0802f520 	.word	0x0802f520
 8010294:	0802edec 	.word	0x0802edec
 8010298:	080181a7 	.word	0x080181a7

0801029c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 801029c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801029e:	2000      	movs	r0, #0
 80102a0:	b12b      	cbz	r3, 80102ae <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80102a2:	b920      	cbnz	r0, 80102ae <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80102a4:	1a5a      	subs	r2, r3, r1
 80102a6:	4250      	negs	r0, r2
 80102a8:	4150      	adcs	r0, r2
 80102aa:	699b      	ldr	r3, [r3, #24]
 80102ac:	e7f8      	b.n	80102a0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80102ae:	4770      	bx	lr

080102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 80102b0:	2300      	movs	r3, #0
 80102b2:	6148      	str	r0, [r1, #20]
 80102b4:	618b      	str	r3, [r1, #24]
 80102b6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80102b8:	b913      	cbnz	r3, 80102c0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 80102ba:	6281      	str	r1, [r0, #40]	; 0x28
 80102bc:	4770      	bx	lr
 80102be:	4613      	mov	r3, r2
 80102c0:	699a      	ldr	r2, [r3, #24]
 80102c2:	2a00      	cmp	r2, #0
 80102c4:	d1fb      	bne.n	80102be <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 80102c6:	6199      	str	r1, [r3, #24]
 80102c8:	4770      	bx	lr

080102ca <_ZN8touchgfx9Container9removeAllEv>:
 80102ca:	2200      	movs	r2, #0
 80102cc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80102ce:	b123      	cbz	r3, 80102da <_ZN8touchgfx9Container9removeAllEv+0x10>
 80102d0:	6999      	ldr	r1, [r3, #24]
 80102d2:	6281      	str	r1, [r0, #40]	; 0x28
 80102d4:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80102d8:	e7f8      	b.n	80102cc <_ZN8touchgfx9Container9removeAllEv+0x2>
 80102da:	4770      	bx	lr

080102dc <_ZN8touchgfx9Container6unlinkEv>:
 80102dc:	2300      	movs	r3, #0
 80102de:	6283      	str	r3, [r0, #40]	; 0x28
 80102e0:	4770      	bx	lr

080102e2 <_ZNK8touchgfx9Container12getSolidRectEv>:
 80102e2:	2200      	movs	r2, #0
 80102e4:	8002      	strh	r2, [r0, #0]
 80102e6:	8042      	strh	r2, [r0, #2]
 80102e8:	8082      	strh	r2, [r0, #4]
 80102ea:	80c2      	strh	r2, [r0, #6]
 80102ec:	4770      	bx	lr

080102ee <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 80102ee:	b570      	push	{r4, r5, r6, lr}
 80102f0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80102f2:	460d      	mov	r5, r1
 80102f4:	4616      	mov	r6, r2
 80102f6:	b13c      	cbz	r4, 8010308 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 80102f8:	6823      	ldr	r3, [r4, #0]
 80102fa:	4620      	mov	r0, r4
 80102fc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80102fe:	4632      	mov	r2, r6
 8010300:	4629      	mov	r1, r5
 8010302:	4798      	blx	r3
 8010304:	69a4      	ldr	r4, [r4, #24]
 8010306:	e7f6      	b.n	80102f6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8010308:	bd70      	pop	{r4, r5, r6, pc}

0801030a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 801030a:	b538      	push	{r3, r4, r5, lr}
 801030c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801030e:	460d      	mov	r5, r1
 8010310:	b134      	cbz	r4, 8010320 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8010312:	682b      	ldr	r3, [r5, #0]
 8010314:	4621      	mov	r1, r4
 8010316:	689b      	ldr	r3, [r3, #8]
 8010318:	4628      	mov	r0, r5
 801031a:	4798      	blx	r3
 801031c:	69a4      	ldr	r4, [r4, #24]
 801031e:	e7f7      	b.n	8010310 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8010320:	bd38      	pop	{r3, r4, r5, pc}

08010322 <_ZN8touchgfx9ContainerD1Ev>:
 8010322:	4770      	bx	lr

08010324 <_ZN8touchgfx9ContainerD0Ev>:
 8010324:	b510      	push	{r4, lr}
 8010326:	212c      	movs	r1, #44	; 0x2c
 8010328:	4604      	mov	r4, r0
 801032a:	f01a f94e 	bl	802a5ca <_ZdlPvj>
 801032e:	4620      	mov	r0, r4
 8010330:	bd10      	pop	{r4, pc}

08010332 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8010332:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010334:	b19b      	cbz	r3, 801035e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8010336:	428b      	cmp	r3, r1
 8010338:	d109      	bne.n	801034e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 801033a:	699a      	ldr	r2, [r3, #24]
 801033c:	2100      	movs	r1, #0
 801033e:	6159      	str	r1, [r3, #20]
 8010340:	6282      	str	r2, [r0, #40]	; 0x28
 8010342:	b902      	cbnz	r2, 8010346 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8010344:	4770      	bx	lr
 8010346:	6199      	str	r1, [r3, #24]
 8010348:	4770      	bx	lr
 801034a:	4613      	mov	r3, r2
 801034c:	b13a      	cbz	r2, 801035e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801034e:	699a      	ldr	r2, [r3, #24]
 8010350:	428a      	cmp	r2, r1
 8010352:	d1fa      	bne.n	801034a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8010354:	698a      	ldr	r2, [r1, #24]
 8010356:	619a      	str	r2, [r3, #24]
 8010358:	2300      	movs	r3, #0
 801035a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 801035e:	4770      	bx	lr

08010360 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8010360:	b410      	push	{r4}
 8010362:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010364:	4604      	mov	r4, r0
 8010366:	b92b      	cbnz	r3, 8010374 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8010368:	6803      	ldr	r3, [r0, #0]
 801036a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801036e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8010370:	4611      	mov	r1, r2
 8010372:	4718      	bx	r3
 8010374:	b941      	cbnz	r1, 8010388 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8010376:	6193      	str	r3, [r2, #24]
 8010378:	6282      	str	r2, [r0, #40]	; 0x28
 801037a:	6154      	str	r4, [r2, #20]
 801037c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010380:	4770      	bx	lr
 8010382:	4603      	mov	r3, r0
 8010384:	2800      	cmp	r0, #0
 8010386:	d0f9      	beq.n	801037c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8010388:	4299      	cmp	r1, r3
 801038a:	6998      	ldr	r0, [r3, #24]
 801038c:	d1f9      	bne.n	8010382 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 801038e:	6190      	str	r0, [r2, #24]
 8010390:	618a      	str	r2, [r1, #24]
 8010392:	e7f2      	b.n	801037a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08010394 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8010394:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010398:	461f      	mov	r7, r3
 801039a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 801039e:	460d      	mov	r5, r1
 80103a0:	4616      	mov	r6, r2
 80103a2:	b103      	cbz	r3, 80103a6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 80103a4:	6038      	str	r0, [r7, #0]
 80103a6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80103a8:	b314      	cbz	r4, 80103f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 80103aa:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80103ae:	b1eb      	cbz	r3, 80103ec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80103b0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80103b4:	428d      	cmp	r5, r1
 80103b6:	db19      	blt.n	80103ec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80103b8:	8923      	ldrh	r3, [r4, #8]
 80103ba:	b289      	uxth	r1, r1
 80103bc:	440b      	add	r3, r1
 80103be:	b21b      	sxth	r3, r3
 80103c0:	429d      	cmp	r5, r3
 80103c2:	da13      	bge.n	80103ec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80103c4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80103c8:	4296      	cmp	r6, r2
 80103ca:	db0f      	blt.n	80103ec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80103cc:	8963      	ldrh	r3, [r4, #10]
 80103ce:	b292      	uxth	r2, r2
 80103d0:	4413      	add	r3, r2
 80103d2:	b21b      	sxth	r3, r3
 80103d4:	429e      	cmp	r6, r3
 80103d6:	da09      	bge.n	80103ec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80103d8:	6823      	ldr	r3, [r4, #0]
 80103da:	1ab2      	subs	r2, r6, r2
 80103dc:	1a69      	subs	r1, r5, r1
 80103de:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 80103e2:	b212      	sxth	r2, r2
 80103e4:	463b      	mov	r3, r7
 80103e6:	b209      	sxth	r1, r1
 80103e8:	4620      	mov	r0, r4
 80103ea:	47c0      	blx	r8
 80103ec:	69a4      	ldr	r4, [r4, #24]
 80103ee:	e7db      	b.n	80103a8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 80103f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080103f4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 80103f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80103f8:	4c6e      	ldr	r4, [pc, #440]	; (80105b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 80103fa:	b0a1      	sub	sp, #132	; 0x84
 80103fc:	6824      	ldr	r4, [r4, #0]
 80103fe:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8010400:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8010404:	9303      	str	r3, [sp, #12]
 8010406:	2400      	movs	r4, #0
 8010408:	802c      	strh	r4, [r5, #0]
 801040a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 801040c:	802c      	strh	r4, [r5, #0]
 801040e:	601c      	str	r4, [r3, #0]
 8010410:	4606      	mov	r6, r0
 8010412:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8010416:	f7ff ffbd 	bl	8010394 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801041a:	f1b9 0f03 	cmp.w	r9, #3
 801041e:	f340 80c2 	ble.w	80105a6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8010422:	4631      	mov	r1, r6
 8010424:	a80c      	add	r0, sp, #48	; 0x30
 8010426:	f007 f99f 	bl	8017768 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801042a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801042e:	9306      	str	r3, [sp, #24]
 8010430:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8010434:	9307      	str	r3, [sp, #28]
 8010436:	9b03      	ldr	r3, [sp, #12]
 8010438:	f8d3 a000 	ldr.w	sl, [r3]
 801043c:	f1ba 0f00 	cmp.w	sl, #0
 8010440:	f000 80b4 	beq.w	80105ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8010444:	4651      	mov	r1, sl
 8010446:	a810      	add	r0, sp, #64	; 0x40
 8010448:	f007 f98e 	bl	8017768 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801044c:	9b01      	ldr	r3, [sp, #4]
 801044e:	9a06      	ldr	r2, [sp, #24]
 8010450:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8010454:	189d      	adds	r5, r3, r2
 8010456:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 801045a:	9a07      	ldr	r2, [sp, #28]
 801045c:	2002      	movs	r0, #2
 801045e:	fb91 f1f0 	sdiv	r1, r1, r0
 8010462:	4419      	add	r1, r3
 8010464:	1a6d      	subs	r5, r5, r1
 8010466:	9b02      	ldr	r3, [sp, #8]
 8010468:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801046c:	4413      	add	r3, r2
 801046e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8010472:	fb92 f2f0 	sdiv	r2, r2, r0
 8010476:	440a      	add	r2, r1
 8010478:	1a9b      	subs	r3, r3, r2
 801047a:	435b      	muls	r3, r3
 801047c:	fb05 3505 	mla	r5, r5, r5, r3
 8010480:	4f4d      	ldr	r7, [pc, #308]	; (80105b8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8010482:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010484:	ac10      	add	r4, sp, #64	; 0x40
 8010486:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010488:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801048a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801048c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801048e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010490:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8010494:	f1b9 0f0c 	cmp.w	r9, #12
 8010498:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801049c:	f04f 0303 	mov.w	r3, #3
 80104a0:	bfc8      	it	gt
 80104a2:	4698      	movgt	r8, r3
 80104a4:	f8cd 9000 	str.w	r9, [sp]
 80104a8:	f04f 0400 	mov.w	r4, #0
 80104ac:	bfdc      	itt	le
 80104ae:	f109 32ff 	addle.w	r2, r9, #4294967295
 80104b2:	fb92 f8f3 	sdivle	r8, r2, r3
 80104b6:	1c63      	adds	r3, r4, #1
 80104b8:	aa10      	add	r2, sp, #64	; 0x40
 80104ba:	f004 0401 	and.w	r4, r4, #1
 80104be:	9308      	str	r3, [sp, #32]
 80104c0:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 80104c4:	9b00      	ldr	r3, [sp, #0]
 80104c6:	fb93 f3f8 	sdiv	r3, r3, r8
 80104ca:	b29b      	uxth	r3, r3
 80104cc:	3404      	adds	r4, #4
 80104ce:	f04f 0b00 	mov.w	fp, #0
 80104d2:	9304      	str	r3, [sp, #16]
 80104d4:	9a04      	ldr	r2, [sp, #16]
 80104d6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80104da:	fb13 f302 	smulbb	r3, r3, r2
 80104de:	9a01      	ldr	r2, [sp, #4]
 80104e0:	b29b      	uxth	r3, r3
 80104e2:	1899      	adds	r1, r3, r2
 80104e4:	9305      	str	r3, [sp, #20]
 80104e6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80104ea:	b209      	sxth	r1, r1
 80104ec:	4299      	cmp	r1, r3
 80104ee:	db4d      	blt.n	801058c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80104f0:	8932      	ldrh	r2, [r6, #8]
 80104f2:	4413      	add	r3, r2
 80104f4:	b21b      	sxth	r3, r3
 80104f6:	4299      	cmp	r1, r3
 80104f8:	da48      	bge.n	801058c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80104fa:	9b04      	ldr	r3, [sp, #16]
 80104fc:	6827      	ldr	r7, [r4, #0]
 80104fe:	fb17 f703 	smulbb	r7, r7, r3
 8010502:	9b02      	ldr	r3, [sp, #8]
 8010504:	b2bf      	uxth	r7, r7
 8010506:	18fa      	adds	r2, r7, r3
 8010508:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 801050c:	b212      	sxth	r2, r2
 801050e:	429a      	cmp	r2, r3
 8010510:	db3c      	blt.n	801058c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010512:	8970      	ldrh	r0, [r6, #10]
 8010514:	4403      	add	r3, r0
 8010516:	b21b      	sxth	r3, r3
 8010518:	429a      	cmp	r2, r3
 801051a:	da37      	bge.n	801058c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801051c:	2300      	movs	r3, #0
 801051e:	930b      	str	r3, [sp, #44]	; 0x2c
 8010520:	4630      	mov	r0, r6
 8010522:	ab0b      	add	r3, sp, #44	; 0x2c
 8010524:	f7ff ff36 	bl	8010394 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010528:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801052a:	b37a      	cbz	r2, 801058c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801052c:	4552      	cmp	r2, sl
 801052e:	d02d      	beq.n	801058c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010530:	4611      	mov	r1, r2
 8010532:	a80e      	add	r0, sp, #56	; 0x38
 8010534:	9209      	str	r2, [sp, #36]	; 0x24
 8010536:	f007 f917 	bl	8017768 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801053a:	9a06      	ldr	r2, [sp, #24]
 801053c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8010540:	9b01      	ldr	r3, [sp, #4]
 8010542:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8010546:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 801054a:	4413      	add	r3, r2
 801054c:	f04f 0e02 	mov.w	lr, #2
 8010550:	fb91 f1fe 	sdiv	r1, r1, lr
 8010554:	4401      	add	r1, r0
 8010556:	1a58      	subs	r0, r3, r1
 8010558:	9a07      	ldr	r2, [sp, #28]
 801055a:	9b02      	ldr	r3, [sp, #8]
 801055c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8010560:	fb9c fcfe 	sdiv	ip, ip, lr
 8010564:	4413      	add	r3, r2
 8010566:	448c      	add	ip, r1
 8010568:	eba3 030c 	sub.w	r3, r3, ip
 801056c:	435b      	muls	r3, r3
 801056e:	fb00 3300 	mla	r3, r0, r0, r3
 8010572:	42ab      	cmp	r3, r5
 8010574:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010576:	d208      	bcs.n	801058a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8010578:	9803      	ldr	r0, [sp, #12]
 801057a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801057c:	6001      	str	r1, [r0, #0]
 801057e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8010580:	9805      	ldr	r0, [sp, #20]
 8010582:	8008      	strh	r0, [r1, #0]
 8010584:	992b      	ldr	r1, [sp, #172]	; 0xac
 8010586:	461d      	mov	r5, r3
 8010588:	800f      	strh	r7, [r1, #0]
 801058a:	4692      	mov	sl, r2
 801058c:	f10b 0b01 	add.w	fp, fp, #1
 8010590:	f1bb 0f04 	cmp.w	fp, #4
 8010594:	f104 0408 	add.w	r4, r4, #8
 8010598:	d19c      	bne.n	80104d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 801059a:	9b00      	ldr	r3, [sp, #0]
 801059c:	9c08      	ldr	r4, [sp, #32]
 801059e:	444b      	add	r3, r9
 80105a0:	4544      	cmp	r4, r8
 80105a2:	9300      	str	r3, [sp, #0]
 80105a4:	d187      	bne.n	80104b6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 80105a6:	b021      	add	sp, #132	; 0x84
 80105a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80105ac:	f04f 35ff 	mov.w	r5, #4294967295
 80105b0:	e766      	b.n	8010480 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 80105b2:	bf00      	nop
 80105b4:	2001381c 	.word	0x2001381c
 80105b8:	0802c308 	.word	0x0802c308

080105bc <_ZN8touchgfx4RectaNERKS0_>:
 80105bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80105c0:	f9b1 7000 	ldrsh.w	r7, [r1]
 80105c4:	888c      	ldrh	r4, [r1, #4]
 80105c6:	f9b0 9000 	ldrsh.w	r9, [r0]
 80105ca:	443c      	add	r4, r7
 80105cc:	b2a4      	uxth	r4, r4
 80105ce:	fa0f f884 	sxth.w	r8, r4
 80105d2:	45c1      	cmp	r9, r8
 80105d4:	da2f      	bge.n	8010636 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80105d6:	8882      	ldrh	r2, [r0, #4]
 80105d8:	444a      	add	r2, r9
 80105da:	b292      	uxth	r2, r2
 80105dc:	fa0f fe82 	sxth.w	lr, r2
 80105e0:	4577      	cmp	r7, lr
 80105e2:	da28      	bge.n	8010636 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80105e4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80105e8:	88cb      	ldrh	r3, [r1, #6]
 80105ea:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80105ee:	442b      	add	r3, r5
 80105f0:	b21b      	sxth	r3, r3
 80105f2:	429e      	cmp	r6, r3
 80105f4:	da1f      	bge.n	8010636 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80105f6:	88c3      	ldrh	r3, [r0, #6]
 80105f8:	4433      	add	r3, r6
 80105fa:	b29b      	uxth	r3, r3
 80105fc:	fa0f fc83 	sxth.w	ip, r3
 8010600:	4565      	cmp	r5, ip
 8010602:	da18      	bge.n	8010636 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010604:	454f      	cmp	r7, r9
 8010606:	bfb8      	it	lt
 8010608:	464f      	movlt	r7, r9
 801060a:	42b5      	cmp	r5, r6
 801060c:	bfb8      	it	lt
 801060e:	4635      	movlt	r5, r6
 8010610:	45f0      	cmp	r8, lr
 8010612:	bfd8      	it	le
 8010614:	4622      	movle	r2, r4
 8010616:	1bd2      	subs	r2, r2, r7
 8010618:	8082      	strh	r2, [r0, #4]
 801061a:	884a      	ldrh	r2, [r1, #2]
 801061c:	88c9      	ldrh	r1, [r1, #6]
 801061e:	8007      	strh	r7, [r0, #0]
 8010620:	440a      	add	r2, r1
 8010622:	b292      	uxth	r2, r2
 8010624:	b211      	sxth	r1, r2
 8010626:	458c      	cmp	ip, r1
 8010628:	bfa8      	it	ge
 801062a:	4613      	movge	r3, r2
 801062c:	1b5b      	subs	r3, r3, r5
 801062e:	80c3      	strh	r3, [r0, #6]
 8010630:	8045      	strh	r5, [r0, #2]
 8010632:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010636:	2300      	movs	r3, #0
 8010638:	8003      	strh	r3, [r0, #0]
 801063a:	8043      	strh	r3, [r0, #2]
 801063c:	8083      	strh	r3, [r0, #4]
 801063e:	80c3      	strh	r3, [r0, #6]
 8010640:	e7f7      	b.n	8010632 <_ZN8touchgfx4RectaNERKS0_+0x76>

08010642 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8010642:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010646:	2b00      	cmp	r3, #0
 8010648:	dd06      	ble.n	8010658 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 801064a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 801064e:	2800      	cmp	r0, #0
 8010650:	bfcc      	ite	gt
 8010652:	2000      	movgt	r0, #0
 8010654:	2001      	movle	r0, #1
 8010656:	4770      	bx	lr
 8010658:	2001      	movs	r0, #1
 801065a:	4770      	bx	lr

0801065c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 801065c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010660:	2300      	movs	r3, #0
 8010662:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8010664:	8003      	strh	r3, [r0, #0]
 8010666:	4604      	mov	r4, r0
 8010668:	8043      	strh	r3, [r0, #2]
 801066a:	8083      	strh	r3, [r0, #4]
 801066c:	80c3      	strh	r3, [r0, #6]
 801066e:	2d00      	cmp	r5, #0
 8010670:	d040      	beq.n	80106f4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8010672:	1d28      	adds	r0, r5, #4
 8010674:	f7ff ffe5 	bl	8010642 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010678:	b988      	cbnz	r0, 801069e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 801067a:	4620      	mov	r0, r4
 801067c:	f7ff ffe1 	bl	8010642 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010680:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010684:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010688:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 801068c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8010690:	b138      	cbz	r0, 80106a2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8010692:	8022      	strh	r2, [r4, #0]
 8010694:	8063      	strh	r3, [r4, #2]
 8010696:	f8a4 e004 	strh.w	lr, [r4, #4]
 801069a:	f8a4 c006 	strh.w	ip, [r4, #6]
 801069e:	69ad      	ldr	r5, [r5, #24]
 80106a0:	e7e5      	b.n	801066e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 80106a2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80106a6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80106aa:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 80106ae:	4290      	cmp	r0, r2
 80106b0:	4607      	mov	r7, r0
 80106b2:	bfa8      	it	ge
 80106b4:	4617      	movge	r7, r2
 80106b6:	4472      	add	r2, lr
 80106b8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 80106bc:	8027      	strh	r7, [r4, #0]
 80106be:	4299      	cmp	r1, r3
 80106c0:	460e      	mov	r6, r1
 80106c2:	4440      	add	r0, r8
 80106c4:	bfa8      	it	ge
 80106c6:	461e      	movge	r6, r3
 80106c8:	4471      	add	r1, lr
 80106ca:	4463      	add	r3, ip
 80106cc:	b200      	sxth	r0, r0
 80106ce:	b212      	sxth	r2, r2
 80106d0:	b209      	sxth	r1, r1
 80106d2:	b21b      	sxth	r3, r3
 80106d4:	4290      	cmp	r0, r2
 80106d6:	bfac      	ite	ge
 80106d8:	ebc7 0200 	rsbge	r2, r7, r0
 80106dc:	ebc7 0202 	rsblt	r2, r7, r2
 80106e0:	4299      	cmp	r1, r3
 80106e2:	bfac      	ite	ge
 80106e4:	ebc6 0301 	rsbge	r3, r6, r1
 80106e8:	ebc6 0303 	rsblt	r3, r6, r3
 80106ec:	8066      	strh	r6, [r4, #2]
 80106ee:	80a2      	strh	r2, [r4, #4]
 80106f0:	80e3      	strh	r3, [r4, #6]
 80106f2:	e7d4      	b.n	801069e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80106f4:	4620      	mov	r0, r4
 80106f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080106fa <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 80106fa:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80106fe:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010702:	b383      	cbz	r3, 8010766 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010704:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010706:	b374      	cbz	r4, 8010766 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010708:	f9b1 5000 	ldrsh.w	r5, [r1]
 801070c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8010710:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8010714:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8010718:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801071c:	b303      	cbz	r3, 8010760 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801071e:	4668      	mov	r0, sp
 8010720:	1d21      	adds	r1, r4, #4
 8010722:	f8ad 5000 	strh.w	r5, [sp]
 8010726:	f8ad 6002 	strh.w	r6, [sp, #2]
 801072a:	f8ad 7004 	strh.w	r7, [sp, #4]
 801072e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8010732:	f7ff ff43 	bl	80105bc <_ZN8touchgfx4RectaNERKS0_>
 8010736:	4668      	mov	r0, sp
 8010738:	f7ff ff83 	bl	8010642 <_ZNK8touchgfx4Rect7isEmptyEv>
 801073c:	b980      	cbnz	r0, 8010760 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801073e:	f8bd 3000 	ldrh.w	r3, [sp]
 8010742:	88a2      	ldrh	r2, [r4, #4]
 8010744:	1a9b      	subs	r3, r3, r2
 8010746:	f8ad 3000 	strh.w	r3, [sp]
 801074a:	88e2      	ldrh	r2, [r4, #6]
 801074c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010750:	1a9b      	subs	r3, r3, r2
 8010752:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010756:	6823      	ldr	r3, [r4, #0]
 8010758:	4669      	mov	r1, sp
 801075a:	689b      	ldr	r3, [r3, #8]
 801075c:	4620      	mov	r0, r4
 801075e:	4798      	blx	r3
 8010760:	69a4      	ldr	r4, [r4, #24]
 8010762:	2c00      	cmp	r4, #0
 8010764:	d1d8      	bne.n	8010718 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8010766:	b002      	add	sp, #8
 8010768:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801076c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 801076c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801076e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010772:	460d      	mov	r5, r1
 8010774:	4616      	mov	r6, r2
 8010776:	b323      	cbz	r3, 80107c2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010778:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801077a:	b314      	cbz	r4, 80107c2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 801077c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010780:	b1eb      	cbz	r3, 80107be <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010782:	6828      	ldr	r0, [r5, #0]
 8010784:	6869      	ldr	r1, [r5, #4]
 8010786:	466b      	mov	r3, sp
 8010788:	c303      	stmia	r3!, {r0, r1}
 801078a:	4668      	mov	r0, sp
 801078c:	1d21      	adds	r1, r4, #4
 801078e:	f7ff ff15 	bl	80105bc <_ZN8touchgfx4RectaNERKS0_>
 8010792:	4668      	mov	r0, sp
 8010794:	f7ff ff55 	bl	8010642 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010798:	b988      	cbnz	r0, 80107be <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 801079a:	f8bd 3000 	ldrh.w	r3, [sp]
 801079e:	88a2      	ldrh	r2, [r4, #4]
 80107a0:	1a9b      	subs	r3, r3, r2
 80107a2:	f8ad 3000 	strh.w	r3, [sp]
 80107a6:	88e2      	ldrh	r2, [r4, #6]
 80107a8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80107ac:	1a9b      	subs	r3, r3, r2
 80107ae:	f8ad 3002 	strh.w	r3, [sp, #2]
 80107b2:	6823      	ldr	r3, [r4, #0]
 80107b4:	4632      	mov	r2, r6
 80107b6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80107b8:	4669      	mov	r1, sp
 80107ba:	4620      	mov	r0, r4
 80107bc:	4798      	blx	r3
 80107be:	69a4      	ldr	r4, [r4, #24]
 80107c0:	e7db      	b.n	801077a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 80107c2:	b002      	add	sp, #8
 80107c4:	bd70      	pop	{r4, r5, r6, pc}

080107c6 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>:
 80107c6:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80107c8:	4770      	bx	lr
	...

080107cc <_ZN8touchgfx14SwipeContainerD1Ev>:
 80107cc:	4b05      	ldr	r3, [pc, #20]	; (80107e4 <_ZN8touchgfx14SwipeContainerD1Ev+0x18>)
 80107ce:	b510      	push	{r4, lr}
 80107d0:	6003      	str	r3, [r0, #0]
 80107d2:	4604      	mov	r4, r0
 80107d4:	f005 fe44 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
 80107d8:	4621      	mov	r1, r4
 80107da:	3004      	adds	r0, #4
 80107dc:	f005 fe8d 	bl	80164fa <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 80107e0:	4620      	mov	r0, r4
 80107e2:	bd10      	pop	{r4, pc}
 80107e4:	0802ee7c 	.word	0x0802ee7c

080107e8 <_ZN8touchgfx14SwipeContainerD0Ev>:
 80107e8:	b510      	push	{r4, lr}
 80107ea:	4604      	mov	r4, r0
 80107ec:	f7ff ffee 	bl	80107cc <_ZN8touchgfx14SwipeContainerD1Ev>
 80107f0:	4620      	mov	r0, r4
 80107f2:	21f4      	movs	r1, #244	; 0xf4
 80107f4:	f019 fee9 	bl	802a5ca <_ZdlPvj>
 80107f8:	4620      	mov	r0, r4
 80107fa:	bd10      	pop	{r4, pc}

080107fc <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE>:
 80107fc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010800:	2b04      	cmp	r3, #4
 8010802:	d117      	bne.n	8010834 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8010804:	790b      	ldrb	r3, [r1, #4]
 8010806:	2b01      	cmp	r3, #1
 8010808:	d114      	bne.n	8010834 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 801080a:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 801080e:	8f82      	ldrh	r2, [r0, #60]	; 0x3c
 8010810:	8643      	strh	r3, [r0, #50]	; 0x32
 8010812:	2b00      	cmp	r3, #0
 8010814:	8682      	strh	r2, [r0, #52]	; 0x34
 8010816:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 801081a:	da0e      	bge.n	801083a <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3e>
 801081c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8010820:	3a01      	subs	r2, #1
 8010822:	4291      	cmp	r1, r2
 8010824:	d007      	beq.n	8010836 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8010826:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8010828:	4252      	negs	r2, r2
 801082a:	4293      	cmp	r3, r2
 801082c:	dc03      	bgt.n	8010836 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 801082e:	2302      	movs	r3, #2
 8010830:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8010834:	4770      	bx	lr
 8010836:	2300      	movs	r3, #0
 8010838:	e7fa      	b.n	8010830 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 801083a:	d0fb      	beq.n	8010834 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 801083c:	b111      	cbz	r1, 8010844 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x48>
 801083e:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8010840:	4293      	cmp	r3, r2
 8010842:	da01      	bge.n	8010848 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x4c>
 8010844:	2301      	movs	r3, #1
 8010846:	e7f3      	b.n	8010830 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 8010848:	2303      	movs	r3, #3
 801084a:	e7f1      	b.n	8010830 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>

0801084c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE>:
 801084c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010850:	2b04      	cmp	r3, #4
 8010852:	d113      	bne.n	801087c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8010854:	790b      	ldrb	r3, [r1, #4]
 8010856:	b98b      	cbnz	r3, 801087c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8010858:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 801085a:	8643      	strh	r3, [r0, #50]	; 0x32
 801085c:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 801085e:	8683      	strh	r3, [r0, #52]	; 0x34
 8010860:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8010864:	f890 20f1 	ldrb.w	r2, [r0, #241]	; 0xf1
 8010868:	2b00      	cmp	r3, #0
 801086a:	da08      	bge.n	801087e <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x32>
 801086c:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8010870:	3b01      	subs	r3, #1
 8010872:	429a      	cmp	r2, r3
 8010874:	da02      	bge.n	801087c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8010876:	2302      	movs	r3, #2
 8010878:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801087c:	4770      	bx	lr
 801087e:	d0fd      	beq.n	801087c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8010880:	2a00      	cmp	r2, #0
 8010882:	d0fb      	beq.n	801087c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8010884:	2303      	movs	r3, #3
 8010886:	e7f7      	b.n	8010878 <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x2c>

08010888 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 8010888:	b538      	push	{r3, r4, r5, lr}
 801088a:	2226      	movs	r2, #38	; 0x26
 801088c:	4604      	mov	r4, r0
 801088e:	460d      	mov	r5, r1
 8010890:	2100      	movs	r1, #0
 8010892:	f01a feb2 	bl	802b5fa <memset>
 8010896:	4620      	mov	r0, r4
 8010898:	f7ff fc58 	bl	801014c <_ZN8touchgfx8DrawableC1Ev>
 801089c:	4b06      	ldr	r3, [pc, #24]	; (80108b8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 801089e:	6023      	str	r3, [r4, #0]
 80108a0:	882b      	ldrh	r3, [r5, #0]
 80108a2:	84e3      	strh	r3, [r4, #38]	; 0x26
 80108a4:	23ff      	movs	r3, #255	; 0xff
 80108a6:	4620      	mov	r0, r4
 80108a8:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 80108ac:	4629      	mov	r1, r5
 80108ae:	f003 f8d8 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80108b2:	4620      	mov	r0, r4
 80108b4:	bd38      	pop	{r3, r4, r5, pc}
 80108b6:	bf00      	nop
 80108b8:	0802f520 	.word	0x0802f520

080108bc <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>:
 80108bc:	86c1      	strh	r1, [r0, #54]	; 0x36
 80108be:	4770      	bx	lr

080108c0 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>:
 80108c0:	b508      	push	{r3, lr}
 80108c2:	3068      	adds	r0, #104	; 0x68
 80108c4:	f7f2 f830 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80108c8:	bd08      	pop	{r3, pc}

080108ca <_ZN8touchgfx14SwipeContainer11adjustPagesEv>:
 80108ca:	b508      	push	{r3, lr}
 80108cc:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 80108ce:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 80108d2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80108d6:	fb03 2111 	mls	r1, r3, r1, r2
 80108da:	b209      	sxth	r1, r1
 80108dc:	2200      	movs	r2, #0
 80108de:	3038      	adds	r0, #56	; 0x38
 80108e0:	f7f1 fdad 	bl	800243e <_ZN8touchgfx8Drawable6moveToEss>
 80108e4:	bd08      	pop	{r3, pc}

080108e6 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE>:
 80108e6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80108ea:	2b04      	cmp	r3, #4
 80108ec:	d119      	bne.n	8010922 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x3c>
 80108ee:	88ca      	ldrh	r2, [r1, #6]
 80108f0:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80108f2:	1a9b      	subs	r3, r3, r2
 80108f4:	894a      	ldrh	r2, [r1, #10]
 80108f6:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 80108fa:	4413      	add	r3, r2
 80108fc:	b21b      	sxth	r3, r3
 80108fe:	8603      	strh	r3, [r0, #48]	; 0x30
 8010900:	b921      	cbnz	r1, 801090c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8010902:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8010904:	4293      	cmp	r3, r2
 8010906:	dd01      	ble.n	801090c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8010908:	8602      	strh	r2, [r0, #48]	; 0x30
 801090a:	e008      	b.n	801091e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 801090c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8010910:	3a01      	subs	r2, #1
 8010912:	4291      	cmp	r1, r2
 8010914:	d103      	bne.n	801091e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8010916:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8010918:	4252      	negs	r2, r2
 801091a:	4293      	cmp	r3, r2
 801091c:	dbf4      	blt.n	8010908 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x22>
 801091e:	f7ff bfd4 	b.w	80108ca <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8010922:	4770      	bx	lr

08010924 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>:
 8010924:	b538      	push	{r3, r4, r5, lr}
 8010926:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 801092a:	2d0e      	cmp	r5, #14
 801092c:	4604      	mov	r4, r0
 801092e:	d813      	bhi.n	8010958 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x34>
 8010930:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8010932:	4252      	negs	r2, r2
 8010934:	230e      	movs	r3, #14
 8010936:	b212      	sxth	r2, r2
 8010938:	2100      	movs	r1, #0
 801093a:	4628      	mov	r0, r5
 801093c:	f007 fbc2 	bl	80180c4 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8010940:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010942:	4418      	add	r0, r3
 8010944:	8620      	strh	r0, [r4, #48]	; 0x30
 8010946:	4620      	mov	r0, r4
 8010948:	f7ff ffbf 	bl	80108ca <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 801094c:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8010950:	3301      	adds	r3, #1
 8010952:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010956:	bd38      	pop	{r3, r4, r5, pc}
 8010958:	2304      	movs	r3, #4
 801095a:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801095e:	2300      	movs	r3, #0
 8010960:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8010964:	8603      	strh	r3, [r0, #48]	; 0x30
 8010966:	e7ef      	b.n	8010948 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x24>

08010968 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>:
 8010968:	b538      	push	{r3, r4, r5, lr}
 801096a:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 801096e:	2d0e      	cmp	r5, #14
 8010970:	4604      	mov	r4, r0
 8010972:	d812      	bhi.n	801099a <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x32>
 8010974:	230e      	movs	r3, #14
 8010976:	f9b0 2032 	ldrsh.w	r2, [r0, #50]	; 0x32
 801097a:	2100      	movs	r1, #0
 801097c:	4628      	mov	r0, r5
 801097e:	f007 fba1 	bl	80180c4 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8010982:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010984:	1a18      	subs	r0, r3, r0
 8010986:	8620      	strh	r0, [r4, #48]	; 0x30
 8010988:	4620      	mov	r0, r4
 801098a:	f7ff ff9e 	bl	80108ca <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 801098e:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8010992:	3301      	adds	r3, #1
 8010994:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010998:	bd38      	pop	{r3, r4, r5, pc}
 801099a:	2304      	movs	r3, #4
 801099c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 80109a0:	2300      	movs	r3, #0
 80109a2:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 80109a6:	8603      	strh	r3, [r0, #48]	; 0x30
 80109a8:	e7ef      	b.n	801098a <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x22>
	...

080109ac <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>:
 80109ac:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80109b0:	4604      	mov	r4, r0
 80109b2:	4626      	mov	r6, r4
 80109b4:	af02      	add	r7, sp, #8
 80109b6:	f7ff fbc9 	bl	801014c <_ZN8touchgfx8DrawableC1Ev>
 80109ba:	2500      	movs	r5, #0
 80109bc:	4b18      	ldr	r3, [pc, #96]	; (8010a20 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x74>)
 80109be:	62a5      	str	r5, [r4, #40]	; 0x28
 80109c0:	f64f 79ff 	movw	r9, #65535	; 0xffff
 80109c4:	f846 3b2c 	str.w	r3, [r6], #44
 80109c8:	f827 9d04 	strh.w	r9, [r7, #-4]!
 80109cc:	4630      	mov	r0, r6
 80109ce:	4639      	mov	r1, r7
 80109d0:	f7ff ff5a 	bl	8010888 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80109d4:	f104 085c 	add.w	r8, r4, #92	; 0x5c
 80109d8:	4b12      	ldr	r3, [pc, #72]	; (8010a24 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x78>)
 80109da:	62e3      	str	r3, [r4, #44]	; 0x2c
 80109dc:	4639      	mov	r1, r7
 80109de:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 80109e2:	f8a4 5058 	strh.w	r5, [r4, #88]	; 0x58
 80109e6:	4640      	mov	r0, r8
 80109e8:	f8ad 9004 	strh.w	r9, [sp, #4]
 80109ec:	f7ff ff4c 	bl	8010888 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80109f0:	462a      	mov	r2, r5
 80109f2:	4629      	mov	r1, r5
 80109f4:	4630      	mov	r0, r6
 80109f6:	f8a4 5088 	strh.w	r5, [r4, #136]	; 0x88
 80109fa:	f7f1 ff95 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80109fe:	462a      	mov	r2, r5
 8010a00:	4629      	mov	r1, r5
 8010a02:	4640      	mov	r0, r8
 8010a04:	f7f1 ff90 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8010a08:	4631      	mov	r1, r6
 8010a0a:	4620      	mov	r0, r4
 8010a0c:	f7ff fc50 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010a10:	4620      	mov	r0, r4
 8010a12:	4641      	mov	r1, r8
 8010a14:	f7ff fc4c 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010a18:	4620      	mov	r0, r4
 8010a1a:	b003      	add	sp, #12
 8010a1c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010a20:	0802cd90 	.word	0x0802cd90
 8010a24:	0802f33c 	.word	0x0802f33c

08010a28 <_ZN8touchgfx14SwipeContainerC1Ev>:
 8010a28:	b570      	push	{r4, r5, r6, lr}
 8010a2a:	4604      	mov	r4, r0
 8010a2c:	f7ff fb8e 	bl	801014c <_ZN8touchgfx8DrawableC1Ev>
 8010a30:	4b1a      	ldr	r3, [pc, #104]	; (8010a9c <_ZN8touchgfx14SwipeContainerC1Ev+0x74>)
 8010a32:	6023      	str	r3, [r4, #0]
 8010a34:	2304      	movs	r3, #4
 8010a36:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8010a3a:	2350      	movs	r3, #80	; 0x50
 8010a3c:	2500      	movs	r5, #0
 8010a3e:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8010a40:	f104 0638 	add.w	r6, r4, #56	; 0x38
 8010a44:	231e      	movs	r3, #30
 8010a46:	62a5      	str	r5, [r4, #40]	; 0x28
 8010a48:	f884 502d 	strb.w	r5, [r4, #45]	; 0x2d
 8010a4c:	8625      	strh	r5, [r4, #48]	; 0x30
 8010a4e:	8665      	strh	r5, [r4, #50]	; 0x32
 8010a50:	86a5      	strh	r5, [r4, #52]	; 0x34
 8010a52:	86e3      	strh	r3, [r4, #54]	; 0x36
 8010a54:	4630      	mov	r0, r6
 8010a56:	f7ff fb79 	bl	801014c <_ZN8touchgfx8DrawableC1Ev>
 8010a5a:	4b11      	ldr	r3, [pc, #68]	; (8010aa0 <_ZN8touchgfx14SwipeContainerC1Ev+0x78>)
 8010a5c:	6625      	str	r5, [r4, #96]	; 0x60
 8010a5e:	63a3      	str	r3, [r4, #56]	; 0x38
 8010a60:	f8a4 5066 	strh.w	r5, [r4, #102]	; 0x66
 8010a64:	2302      	movs	r3, #2
 8010a66:	f104 0568 	add.w	r5, r4, #104	; 0x68
 8010a6a:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8010a6e:	4628      	mov	r0, r5
 8010a70:	f7ff ff9c 	bl	80109ac <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>
 8010a74:	f005 fcf4 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
 8010a78:	4621      	mov	r1, r4
 8010a7a:	3004      	adds	r0, #4
 8010a7c:	f005 fde6 	bl	801664c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 8010a80:	2301      	movs	r3, #1
 8010a82:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8010a86:	4631      	mov	r1, r6
 8010a88:	4620      	mov	r0, r4
 8010a8a:	f7ff fc11 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010a8e:	4620      	mov	r0, r4
 8010a90:	4629      	mov	r1, r5
 8010a92:	f7ff fc0d 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010a96:	4620      	mov	r0, r4
 8010a98:	bd70      	pop	{r4, r5, r6, pc}
 8010a9a:	bf00      	nop
 8010a9c:	0802ee7c 	.word	0x0802ee7c
 8010aa0:	0802ef40 	.word	0x0802ef40

08010aa4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>:
 8010aa4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010aa6:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 8010aaa:	428b      	cmp	r3, r1
 8010aac:	4604      	mov	r4, r0
 8010aae:	460d      	mov	r5, r1
 8010ab0:	d915      	bls.n	8010ade <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 8010ab2:	f890 3089 	ldrb.w	r3, [r0, #137]	; 0x89
 8010ab6:	428b      	cmp	r3, r1
 8010ab8:	d011      	beq.n	8010ade <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 8010aba:	f884 1089 	strb.w	r1, [r4, #137]	; 0x89
 8010abe:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8010ac2:	a802      	add	r0, sp, #8
 8010ac4:	f820 3d04 	strh.w	r3, [r0, #-4]!
 8010ac8:	f009 f91a 	bl	8019d00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010acc:	fb15 f100 	smulbb	r1, r5, r0
 8010ad0:	f9b4 2062 	ldrsh.w	r2, [r4, #98]	; 0x62
 8010ad4:	b209      	sxth	r1, r1
 8010ad6:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8010ada:	f7f1 fcb0 	bl	800243e <_ZN8touchgfx8Drawable6moveToEss>
 8010ade:	b003      	add	sp, #12
 8010ae0:	bd30      	pop	{r4, r5, pc}

08010ae2 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>:
 8010ae2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010ae4:	4604      	mov	r4, r0
 8010ae6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8010aea:	f884 1088 	strb.w	r1, [r4, #136]	; 0x88
 8010aee:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8010af2:	4293      	cmp	r3, r2
 8010af4:	460d      	mov	r5, r1
 8010af6:	d01e      	beq.n	8010b36 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh+0x54>
 8010af8:	a802      	add	r0, sp, #8
 8010afa:	f820 3d04 	strh.w	r3, [r0, #-4]!
 8010afe:	f009 f8ff 	bl	8019d00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010b02:	6823      	ldr	r3, [r4, #0]
 8010b04:	fb15 f000 	smulbb	r0, r5, r0
 8010b08:	86a0      	strh	r0, [r4, #52]	; 0x34
 8010b0a:	695b      	ldr	r3, [r3, #20]
 8010b0c:	4620      	mov	r0, r4
 8010b0e:	4798      	blx	r3
 8010b10:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8010b14:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8010b18:	4620      	mov	r0, r4
 8010b1a:	f7ff fb2f 	bl	801017c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010b1e:	f894 1089 	ldrb.w	r1, [r4, #137]	; 0x89
 8010b22:	42a9      	cmp	r1, r5
 8010b24:	4620      	mov	r0, r4
 8010b26:	bf28      	it	cs
 8010b28:	4629      	movcs	r1, r5
 8010b2a:	f7ff ffbb 	bl	8010aa4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 8010b2e:	6823      	ldr	r3, [r4, #0]
 8010b30:	4620      	mov	r0, r4
 8010b32:	695b      	ldr	r3, [r3, #20]
 8010b34:	4798      	blx	r3
 8010b36:	b003      	add	sp, #12
 8010b38:	bd30      	pop	{r4, r5, pc}

08010b3a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>:
 8010b3a:	b538      	push	{r3, r4, r5, lr}
 8010b3c:	4604      	mov	r4, r0
 8010b3e:	460d      	mov	r5, r1
 8010b40:	305c      	adds	r0, #92	; 0x5c
 8010b42:	4611      	mov	r1, r2
 8010b44:	f002 ff8d 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010b48:	4629      	mov	r1, r5
 8010b4a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8010b4e:	f002 fa53 	bl	8012ff8 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>
 8010b52:	f894 1088 	ldrb.w	r1, [r4, #136]	; 0x88
 8010b56:	b121      	cbz	r1, 8010b62 <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_+0x28>
 8010b58:	4620      	mov	r0, r4
 8010b5a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010b5e:	f7ff bfc0 	b.w	8010ae2 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8010b62:	bd38      	pop	{r3, r4, r5, pc}

08010b64 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>:
 8010b64:	3068      	adds	r0, #104	; 0x68
 8010b66:	f7ff bfe8 	b.w	8010b3a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>

08010b6a <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>:
 8010b6a:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 8010b6e:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 8010b72:	3101      	adds	r1, #1
 8010b74:	fb91 f3f2 	sdiv	r3, r1, r2
 8010b78:	fb02 1113 	mls	r1, r2, r3, r1
 8010b7c:	b2c9      	uxtb	r1, r1
 8010b7e:	f7ff bf91 	b.w	8010aa4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

08010b82 <_ZN8touchgfx14SwipeContainer11animateLeftEv>:
 8010b82:	b510      	push	{r4, lr}
 8010b84:	4604      	mov	r4, r0
 8010b86:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 8010b8a:	280a      	cmp	r0, #10
 8010b8c:	d813      	bhi.n	8010bb6 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x34>
 8010b8e:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010b90:	8922      	ldrh	r2, [r4, #8]
 8010b92:	441a      	add	r2, r3
 8010b94:	b212      	sxth	r2, r2
 8010b96:	230a      	movs	r3, #10
 8010b98:	2100      	movs	r1, #0
 8010b9a:	f007 fad1 	bl	8018140 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 8010b9e:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010ba0:	1a18      	subs	r0, r3, r0
 8010ba2:	8620      	strh	r0, [r4, #48]	; 0x30
 8010ba4:	4620      	mov	r0, r4
 8010ba6:	f7ff fe90 	bl	80108ca <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8010baa:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8010bae:	3301      	adds	r3, #1
 8010bb0:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010bb4:	bd10      	pop	{r4, pc}
 8010bb6:	2304      	movs	r3, #4
 8010bb8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8010bbc:	2300      	movs	r3, #0
 8010bbe:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010bc2:	8623      	strh	r3, [r4, #48]	; 0x30
 8010bc4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8010bc8:	f7ff ffcf 	bl	8010b6a <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>
 8010bcc:	e7ea      	b.n	8010ba4 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x22>

08010bce <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>:
 8010bce:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 8010bd2:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 8010bd6:	4411      	add	r1, r2
 8010bd8:	3901      	subs	r1, #1
 8010bda:	fb91 f3f2 	sdiv	r3, r1, r2
 8010bde:	fb02 1113 	mls	r1, r2, r3, r1
 8010be2:	b2c9      	uxtb	r1, r1
 8010be4:	f7ff bf5e 	b.w	8010aa4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

08010be8 <_ZN8touchgfx14SwipeContainer12animateRightEv>:
 8010be8:	b510      	push	{r4, lr}
 8010bea:	4604      	mov	r4, r0
 8010bec:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 8010bf0:	280a      	cmp	r0, #10
 8010bf2:	d813      	bhi.n	8010c1c <_ZN8touchgfx14SwipeContainer12animateRightEv+0x34>
 8010bf4:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010bf6:	8922      	ldrh	r2, [r4, #8]
 8010bf8:	1ad2      	subs	r2, r2, r3
 8010bfa:	b212      	sxth	r2, r2
 8010bfc:	230a      	movs	r3, #10
 8010bfe:	2100      	movs	r1, #0
 8010c00:	f007 fa9e 	bl	8018140 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 8010c04:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010c06:	4418      	add	r0, r3
 8010c08:	8620      	strh	r0, [r4, #48]	; 0x30
 8010c0a:	4620      	mov	r0, r4
 8010c0c:	f7ff fe5d 	bl	80108ca <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8010c10:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8010c14:	3301      	adds	r3, #1
 8010c16:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010c1a:	bd10      	pop	{r4, pc}
 8010c1c:	2304      	movs	r3, #4
 8010c1e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8010c22:	2300      	movs	r3, #0
 8010c24:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010c28:	8623      	strh	r3, [r4, #48]	; 0x30
 8010c2a:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8010c2e:	f7ff ffce 	bl	8010bce <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>
 8010c32:	e7ea      	b.n	8010c0a <_ZN8touchgfx14SwipeContainer12animateRightEv+0x22>

08010c34 <_ZN8touchgfx14SwipeContainer15handleTickEventEv>:
 8010c34:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010c38:	b90b      	cbnz	r3, 8010c3e <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0xa>
 8010c3a:	f7ff be73 	b.w	8010924 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>
 8010c3e:	2b01      	cmp	r3, #1
 8010c40:	d101      	bne.n	8010c46 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x12>
 8010c42:	f7ff be91 	b.w	8010968 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>
 8010c46:	2b02      	cmp	r3, #2
 8010c48:	d101      	bne.n	8010c4e <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x1a>
 8010c4a:	f7ff bf9a 	b.w	8010b82 <_ZN8touchgfx14SwipeContainer11animateLeftEv>
 8010c4e:	2b03      	cmp	r3, #3
 8010c50:	d101      	bne.n	8010c56 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x22>
 8010c52:	f7ff bfc9 	b.w	8010be8 <_ZN8touchgfx14SwipeContainer12animateRightEv>
 8010c56:	4770      	bx	lr

08010c58 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>:
 8010c58:	b510      	push	{r4, lr}
 8010c5a:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8010c5e:	428b      	cmp	r3, r1
 8010c60:	4604      	mov	r4, r0
 8010c62:	d907      	bls.n	8010c74 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh+0x1c>
 8010c64:	3068      	adds	r0, #104	; 0x68
 8010c66:	f7ff ff1d 	bl	8010aa4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 8010c6a:	4620      	mov	r0, r4
 8010c6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010c70:	f7ff be2b 	b.w	80108ca <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8010c74:	bd10      	pop	{r4, pc}

08010c76 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>:
 8010c76:	b538      	push	{r3, r4, r5, lr}
 8010c78:	4604      	mov	r4, r0
 8010c7a:	3038      	adds	r0, #56	; 0x38
 8010c7c:	460d      	mov	r5, r1
 8010c7e:	f000 f963 	bl	8010f48 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8010c82:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 8010c86:	3101      	adds	r1, #1
 8010c88:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8010c8c:	b2c9      	uxtb	r1, r1
 8010c8e:	f7ff ff28 	bl	8010ae2 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8010c92:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 8010c96:	4620      	mov	r0, r4
 8010c98:	f7ff ffde 	bl	8010c58 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 8010c9c:	f9b5 200a 	ldrsh.w	r2, [r5, #10]
 8010ca0:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 8010ca4:	4620      	mov	r0, r4
 8010ca6:	f7ff fa69 	bl	801017c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010caa:	bd38      	pop	{r3, r4, r5, pc}

08010cac <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE>:
 8010cac:	b538      	push	{r3, r4, r5, lr}
 8010cae:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8010cb2:	4604      	mov	r4, r0
 8010cb4:	b1e3      	cbz	r3, 8010cf0 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 8010cb6:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8010cb8:	b1d3      	cbz	r3, 8010cf0 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 8010cba:	428b      	cmp	r3, r1
 8010cbc:	d125      	bne.n	8010d0a <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x5e>
 8010cbe:	4619      	mov	r1, r3
 8010cc0:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8010cc4:	f000 f9c0 	bl	8011048 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>
 8010cc8:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 8010ccc:	3901      	subs	r1, #1
 8010cce:	b2c9      	uxtb	r1, r1
 8010cd0:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8010cd4:	f7ff ff05 	bl	8010ae2 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8010cd8:	f894 50f0 	ldrb.w	r5, [r4, #240]	; 0xf0
 8010cdc:	b94d      	cbnz	r5, 8010cf2 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x46>
 8010cde:	6823      	ldr	r3, [r4, #0]
 8010ce0:	4620      	mov	r0, r4
 8010ce2:	695b      	ldr	r3, [r3, #20]
 8010ce4:	4798      	blx	r3
 8010ce6:	462a      	mov	r2, r5
 8010ce8:	4629      	mov	r1, r5
 8010cea:	4620      	mov	r0, r4
 8010cec:	f7ff fa46 	bl	801017c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010cf0:	bd38      	pop	{r3, r4, r5, pc}
 8010cf2:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 8010cf6:	3d01      	subs	r5, #1
 8010cf8:	42a9      	cmp	r1, r5
 8010cfa:	bfa8      	it	ge
 8010cfc:	4629      	movge	r1, r5
 8010cfe:	4620      	mov	r0, r4
 8010d00:	b2c9      	uxtb	r1, r1
 8010d02:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010d06:	f7ff bfa7 	b.w	8010c58 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 8010d0a:	699b      	ldr	r3, [r3, #24]
 8010d0c:	e7d4      	b.n	8010cb8 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0xc>

08010d0e <_ZNK8touchgfx10ListLayout12getDirectionEv>:
 8010d0e:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8010d12:	4770      	bx	lr

08010d14 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE>:
 8010d14:	b538      	push	{r3, r4, r5, lr}
 8010d16:	7882      	ldrb	r2, [r0, #2]
 8010d18:	6843      	ldr	r3, [r0, #4]
 8010d1a:	4604      	mov	r4, r0
 8010d1c:	460d      	mov	r5, r1
 8010d1e:	b98a      	cbnz	r2, 8010d44 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x30>
 8010d20:	4299      	cmp	r1, r3
 8010d22:	d101      	bne.n	8010d28 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8010d24:	2301      	movs	r3, #1
 8010d26:	7083      	strb	r3, [r0, #2]
 8010d28:	6863      	ldr	r3, [r4, #4]
 8010d2a:	42ab      	cmp	r3, r5
 8010d2c:	d009      	beq.n	8010d42 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 8010d2e:	7a23      	ldrb	r3, [r4, #8]
 8010d30:	2b01      	cmp	r3, #1
 8010d32:	d11b      	bne.n	8010d6c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x58>
 8010d34:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8010d38:	f9b4 2000 	ldrsh.w	r2, [r4]
 8010d3c:	429a      	cmp	r2, r3
 8010d3e:	bfb8      	it	lt
 8010d40:	8023      	strhlt	r3, [r4, #0]
 8010d42:	bd38      	pop	{r3, r4, r5, pc}
 8010d44:	7a02      	ldrb	r2, [r0, #8]
 8010d46:	2a01      	cmp	r2, #1
 8010d48:	d108      	bne.n	8010d5c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x48>
 8010d4a:	895b      	ldrh	r3, [r3, #10]
 8010d4c:	88c9      	ldrh	r1, [r1, #6]
 8010d4e:	1ac9      	subs	r1, r1, r3
 8010d50:	682b      	ldr	r3, [r5, #0]
 8010d52:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010d54:	b209      	sxth	r1, r1
 8010d56:	4628      	mov	r0, r5
 8010d58:	4798      	blx	r3
 8010d5a:	e7e5      	b.n	8010d28 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8010d5c:	2a02      	cmp	r2, #2
 8010d5e:	d1e3      	bne.n	8010d28 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8010d60:	891b      	ldrh	r3, [r3, #8]
 8010d62:	8889      	ldrh	r1, [r1, #4]
 8010d64:	1ac9      	subs	r1, r1, r3
 8010d66:	682b      	ldr	r3, [r5, #0]
 8010d68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010d6a:	e7f3      	b.n	8010d54 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x40>
 8010d6c:	2b02      	cmp	r3, #2
 8010d6e:	d1e8      	bne.n	8010d42 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 8010d70:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8010d74:	e7e0      	b.n	8010d38 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x24>

08010d76 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED1Ev>:
 8010d76:	4770      	bx	lr

08010d78 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED1Ev>:
 8010d78:	4770      	bx	lr

08010d7a <_ZN8touchgfx10ListLayoutD1Ev>:
 8010d7a:	4770      	bx	lr

08010d7c <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7executeES3_>:
 8010d7c:	b430      	push	{r4, r5}
 8010d7e:	68c5      	ldr	r5, [r0, #12]
 8010d80:	6844      	ldr	r4, [r0, #4]
 8010d82:	106a      	asrs	r2, r5, #1
 8010d84:	4603      	mov	r3, r0
 8010d86:	07ed      	lsls	r5, r5, #31
 8010d88:	eb04 0002 	add.w	r0, r4, r2
 8010d8c:	689b      	ldr	r3, [r3, #8]
 8010d8e:	bf48      	it	mi
 8010d90:	58a2      	ldrmi	r2, [r4, r2]
 8010d92:	bc30      	pop	{r4, r5}
 8010d94:	bf48      	it	mi
 8010d96:	58d3      	ldrmi	r3, [r2, r3]
 8010d98:	4718      	bx	r3

08010d9a <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv>:
 8010d9a:	6843      	ldr	r3, [r0, #4]
 8010d9c:	b12b      	cbz	r3, 8010daa <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x10>
 8010d9e:	6883      	ldr	r3, [r0, #8]
 8010da0:	b92b      	cbnz	r3, 8010dae <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x14>
 8010da2:	68c0      	ldr	r0, [r0, #12]
 8010da4:	f000 0001 	and.w	r0, r0, #1
 8010da8:	4770      	bx	lr
 8010daa:	4618      	mov	r0, r3
 8010dac:	4770      	bx	lr
 8010dae:	2001      	movs	r0, #1
 8010db0:	4770      	bx	lr

08010db2 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7executeES3_>:
 8010db2:	b430      	push	{r4, r5}
 8010db4:	68c5      	ldr	r5, [r0, #12]
 8010db6:	6844      	ldr	r4, [r0, #4]
 8010db8:	106a      	asrs	r2, r5, #1
 8010dba:	4603      	mov	r3, r0
 8010dbc:	07ed      	lsls	r5, r5, #31
 8010dbe:	eb04 0002 	add.w	r0, r4, r2
 8010dc2:	689b      	ldr	r3, [r3, #8]
 8010dc4:	bf48      	it	mi
 8010dc6:	58a2      	ldrmi	r2, [r4, r2]
 8010dc8:	bc30      	pop	{r4, r5}
 8010dca:	bf48      	it	mi
 8010dcc:	58d3      	ldrmi	r3, [r2, r3]
 8010dce:	4718      	bx	r3

08010dd0 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv>:
 8010dd0:	6843      	ldr	r3, [r0, #4]
 8010dd2:	b12b      	cbz	r3, 8010de0 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x10>
 8010dd4:	6883      	ldr	r3, [r0, #8]
 8010dd6:	b92b      	cbnz	r3, 8010de4 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x14>
 8010dd8:	68c0      	ldr	r0, [r0, #12]
 8010dda:	f000 0001 	and.w	r0, r0, #1
 8010dde:	4770      	bx	lr
 8010de0:	4618      	mov	r0, r3
 8010de2:	4770      	bx	lr
 8010de4:	2001      	movs	r0, #1
 8010de6:	4770      	bx	lr

08010de8 <_ZN8touchgfx10ListLayoutD0Ev>:
 8010de8:	b510      	push	{r4, lr}
 8010dea:	2130      	movs	r1, #48	; 0x30
 8010dec:	4604      	mov	r4, r0
 8010dee:	f019 fbec 	bl	802a5ca <_ZdlPvj>
 8010df2:	4620      	mov	r0, r4
 8010df4:	bd10      	pop	{r4, pc}

08010df6 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED0Ev>:
 8010df6:	b510      	push	{r4, lr}
 8010df8:	2110      	movs	r1, #16
 8010dfa:	4604      	mov	r4, r0
 8010dfc:	f019 fbe5 	bl	802a5ca <_ZdlPvj>
 8010e00:	4620      	mov	r0, r4
 8010e02:	bd10      	pop	{r4, pc}

08010e04 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED0Ev>:
 8010e04:	b510      	push	{r4, lr}
 8010e06:	2110      	movs	r1, #16
 8010e08:	4604      	mov	r4, r0
 8010e0a:	f019 fbde 	bl	802a5ca <_ZdlPvj>
 8010e0e:	4620      	mov	r0, r4
 8010e10:	bd10      	pop	{r4, pc}

08010e12 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE>:
 8010e12:	4603      	mov	r3, r0
 8010e14:	4608      	mov	r0, r1
 8010e16:	789a      	ldrb	r2, [r3, #2]
 8010e18:	b992      	cbnz	r2, 8010e40 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x2e>
 8010e1a:	685a      	ldr	r2, [r3, #4]
 8010e1c:	428a      	cmp	r2, r1
 8010e1e:	d102      	bne.n	8010e26 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x14>
 8010e20:	2201      	movs	r2, #1
 8010e22:	709a      	strb	r2, [r3, #2]
 8010e24:	4770      	bx	lr
 8010e26:	7a1a      	ldrb	r2, [r3, #8]
 8010e28:	2a01      	cmp	r2, #1
 8010e2a:	d104      	bne.n	8010e36 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x24>
 8010e2c:	88ca      	ldrh	r2, [r1, #6]
 8010e2e:	8949      	ldrh	r1, [r1, #10]
 8010e30:	440a      	add	r2, r1
 8010e32:	801a      	strh	r2, [r3, #0]
 8010e34:	4770      	bx	lr
 8010e36:	2a02      	cmp	r2, #2
 8010e38:	d116      	bne.n	8010e68 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 8010e3a:	888a      	ldrh	r2, [r1, #4]
 8010e3c:	8909      	ldrh	r1, [r1, #8]
 8010e3e:	e7f7      	b.n	8010e30 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x1e>
 8010e40:	7a1a      	ldrb	r2, [r3, #8]
 8010e42:	2a01      	cmp	r2, #1
 8010e44:	d107      	bne.n	8010e56 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x44>
 8010e46:	685b      	ldr	r3, [r3, #4]
 8010e48:	8959      	ldrh	r1, [r3, #10]
 8010e4a:	88c3      	ldrh	r3, [r0, #6]
 8010e4c:	4419      	add	r1, r3
 8010e4e:	6803      	ldr	r3, [r0, #0]
 8010e50:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010e52:	b209      	sxth	r1, r1
 8010e54:	4718      	bx	r3
 8010e56:	2a02      	cmp	r2, #2
 8010e58:	d106      	bne.n	8010e68 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 8010e5a:	685b      	ldr	r3, [r3, #4]
 8010e5c:	8919      	ldrh	r1, [r3, #8]
 8010e5e:	8883      	ldrh	r3, [r0, #4]
 8010e60:	4419      	add	r1, r3
 8010e62:	6803      	ldr	r3, [r0, #0]
 8010e64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010e66:	e7f4      	b.n	8010e52 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x40>
 8010e68:	4770      	bx	lr

08010e6a <_ZN8touchgfx10ListLayout9removeAllEv>:
 8010e6a:	2200      	movs	r2, #0
 8010e6c:	b510      	push	{r4, lr}
 8010e6e:	4611      	mov	r1, r2
 8010e70:	4604      	mov	r4, r0
 8010e72:	85c2      	strh	r2, [r0, #46]	; 0x2e
 8010e74:	f7ff f982 	bl	801017c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010e78:	4620      	mov	r0, r4
 8010e7a:	f7ff fa26 	bl	80102ca <_ZN8touchgfx9Container9removeAllEv>
 8010e7e:	6960      	ldr	r0, [r4, #20]
 8010e80:	b120      	cbz	r0, 8010e8c <_ZN8touchgfx10ListLayout9removeAllEv+0x22>
 8010e82:	6803      	ldr	r3, [r0, #0]
 8010e84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010e88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010e8a:	4718      	bx	r3
 8010e8c:	bd10      	pop	{r4, pc}
	...

08010e90 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>:
 8010e90:	b530      	push	{r4, r5, lr}
 8010e92:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010e96:	428b      	cmp	r3, r1
 8010e98:	b085      	sub	sp, #20
 8010e9a:	4604      	mov	r4, r0
 8010e9c:	d017      	beq.n	8010ece <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 8010e9e:	2500      	movs	r5, #0
 8010ea0:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 8010ea4:	85c5      	strh	r5, [r0, #46]	; 0x2e
 8010ea6:	462a      	mov	r2, r5
 8010ea8:	4629      	mov	r1, r5
 8010eaa:	f7ff f967 	bl	801017c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010eae:	4b09      	ldr	r3, [pc, #36]	; (8010ed4 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x44>)
 8010eb0:	e9cd 3400 	strd	r3, r4, [sp]
 8010eb4:	4b08      	ldr	r3, [pc, #32]	; (8010ed8 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x48>)
 8010eb6:	e9cd 3502 	strd	r3, r5, [sp, #8]
 8010eba:	6823      	ldr	r3, [r4, #0]
 8010ebc:	4620      	mov	r0, r4
 8010ebe:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010ec0:	4669      	mov	r1, sp
 8010ec2:	4798      	blx	r3
 8010ec4:	6960      	ldr	r0, [r4, #20]
 8010ec6:	b110      	cbz	r0, 8010ece <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 8010ec8:	6803      	ldr	r3, [r0, #0]
 8010eca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010ecc:	4798      	blx	r3
 8010ece:	b005      	add	sp, #20
 8010ed0:	bd30      	pop	{r4, r5, pc}
 8010ed2:	bf00      	nop
 8010ed4:	0802ef10 	.word	0x0802ef10
 8010ed8:	08010f41 	.word	0x08010f41

08010edc <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>:
 8010edc:	b538      	push	{r3, r4, r5, lr}
 8010ede:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010ee2:	2b01      	cmp	r3, #1
 8010ee4:	460d      	mov	r5, r1
 8010ee6:	4604      	mov	r4, r0
 8010ee8:	4611      	mov	r1, r2
 8010eea:	d002      	beq.n	8010ef2 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x16>
 8010eec:	2b02      	cmp	r3, #2
 8010eee:	d015      	beq.n	8010f1c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x40>
 8010ef0:	bd38      	pop	{r3, r4, r5, pc}
 8010ef2:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8010ef6:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 8010efa:	429a      	cmp	r2, r3
 8010efc:	bfb8      	it	lt
 8010efe:	8103      	strhlt	r3, [r0, #8]
 8010f00:	896a      	ldrh	r2, [r5, #10]
 8010f02:	8943      	ldrh	r3, [r0, #10]
 8010f04:	4413      	add	r3, r2
 8010f06:	8143      	strh	r3, [r0, #10]
 8010f08:	460a      	mov	r2, r1
 8010f0a:	4628      	mov	r0, r5
 8010f0c:	2100      	movs	r1, #0
 8010f0e:	f7f1 fd0b 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8010f12:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8010f14:	896a      	ldrh	r2, [r5, #10]
 8010f16:	4413      	add	r3, r2
 8010f18:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8010f1a:	e7e9      	b.n	8010ef0 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x14>
 8010f1c:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8010f20:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010f24:	429a      	cmp	r2, r3
 8010f26:	bfb8      	it	lt
 8010f28:	8143      	strhlt	r3, [r0, #10]
 8010f2a:	892a      	ldrh	r2, [r5, #8]
 8010f2c:	8903      	ldrh	r3, [r0, #8]
 8010f2e:	4413      	add	r3, r2
 8010f30:	8103      	strh	r3, [r0, #8]
 8010f32:	2200      	movs	r2, #0
 8010f34:	4628      	mov	r0, r5
 8010f36:	f7f1 fcf7 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8010f3a:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8010f3c:	892a      	ldrh	r2, [r5, #8]
 8010f3e:	e7ea      	b.n	8010f16 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x3a>

08010f40 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>:
 8010f40:	f9b0 202e 	ldrsh.w	r2, [r0, #46]	; 0x2e
 8010f44:	f7ff bfca 	b.w	8010edc <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>

08010f48 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>:
 8010f48:	b570      	push	{r4, r5, r6, lr}
 8010f4a:	4604      	mov	r4, r0
 8010f4c:	460d      	mov	r5, r1
 8010f4e:	f7ff fff7 	bl	8010f40 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>
 8010f52:	4620      	mov	r0, r4
 8010f54:	4629      	mov	r1, r5
 8010f56:	f7ff f9ab 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010f5a:	6960      	ldr	r0, [r4, #20]
 8010f5c:	b120      	cbz	r0, 8010f68 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE+0x20>
 8010f5e:	6803      	ldr	r3, [r0, #0]
 8010f60:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010f64:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010f66:	4718      	bx	r3
 8010f68:	bd70      	pop	{r4, r5, r6, pc}
	...

08010f6c <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_>:
 8010f6c:	b530      	push	{r4, r5, lr}
 8010f6e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010f70:	b089      	sub	sp, #36	; 0x24
 8010f72:	4604      	mov	r4, r0
 8010f74:	4615      	mov	r5, r2
 8010f76:	b92b      	cbnz	r3, 8010f84 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x18>
 8010f78:	6803      	ldr	r3, [r0, #0]
 8010f7a:	4611      	mov	r1, r2
 8010f7c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8010f7e:	4798      	blx	r3
 8010f80:	b009      	add	sp, #36	; 0x24
 8010f82:	bd30      	pop	{r4, r5, pc}
 8010f84:	f7ff f9ec 	bl	8010360 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>
 8010f88:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 8010f8c:	f88d 200c 	strb.w	r2, [sp, #12]
 8010f90:	4a0f      	ldr	r2, [pc, #60]	; (8010fd0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x64>)
 8010f92:	9204      	str	r2, [sp, #16]
 8010f94:	aa01      	add	r2, sp, #4
 8010f96:	9205      	str	r2, [sp, #20]
 8010f98:	4a0e      	ldr	r2, [pc, #56]	; (8010fd4 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x68>)
 8010f9a:	9502      	str	r5, [sp, #8]
 8010f9c:	2300      	movs	r3, #0
 8010f9e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8010fa2:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010fa6:	f88d 3006 	strb.w	r3, [sp, #6]
 8010faa:	6823      	ldr	r3, [r4, #0]
 8010fac:	a904      	add	r1, sp, #16
 8010fae:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010fb0:	4620      	mov	r0, r4
 8010fb2:	4798      	blx	r3
 8010fb4:	4620      	mov	r0, r4
 8010fb6:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8010fba:	4629      	mov	r1, r5
 8010fbc:	f7ff ff8e 	bl	8010edc <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>
 8010fc0:	6960      	ldr	r0, [r4, #20]
 8010fc2:	2800      	cmp	r0, #0
 8010fc4:	d0dc      	beq.n	8010f80 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 8010fc6:	6803      	ldr	r3, [r0, #0]
 8010fc8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010fca:	4798      	blx	r3
 8010fcc:	e7d8      	b.n	8010f80 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 8010fce:	bf00      	nop
 8010fd0:	0802ef28 	.word	0x0802ef28
 8010fd4:	08010e13 	.word	0x08010e13

08010fd8 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>:
 8010fd8:	b538      	push	{r3, r4, r5, lr}
 8010fda:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010fde:	2b01      	cmp	r3, #1
 8010fe0:	4604      	mov	r4, r0
 8010fe2:	460d      	mov	r5, r1
 8010fe4:	d002      	beq.n	8010fec <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x14>
 8010fe6:	2b02      	cmp	r3, #2
 8010fe8:	d018      	beq.n	801101c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x44>
 8010fea:	bd38      	pop	{r3, r4, r5, pc}
 8010fec:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8010ff0:	4293      	cmp	r3, r2
 8010ff2:	bfc8      	it	gt
 8010ff4:	8102      	strhgt	r2, [r0, #8]
 8010ff6:	894a      	ldrh	r2, [r1, #10]
 8010ff8:	8943      	ldrh	r3, [r0, #10]
 8010ffa:	1a9b      	subs	r3, r3, r2
 8010ffc:	8143      	strh	r3, [r0, #10]
 8010ffe:	680b      	ldr	r3, [r1, #0]
 8011000:	4628      	mov	r0, r5
 8011002:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011004:	2100      	movs	r1, #0
 8011006:	4798      	blx	r3
 8011008:	682b      	ldr	r3, [r5, #0]
 801100a:	2100      	movs	r1, #0
 801100c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801100e:	4628      	mov	r0, r5
 8011010:	4798      	blx	r3
 8011012:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8011014:	896a      	ldrh	r2, [r5, #10]
 8011016:	1a9b      	subs	r3, r3, r2
 8011018:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801101a:	e7e6      	b.n	8010fea <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x12>
 801101c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011020:	4293      	cmp	r3, r2
 8011022:	bfc8      	it	gt
 8011024:	8142      	strhgt	r2, [r0, #10]
 8011026:	890a      	ldrh	r2, [r1, #8]
 8011028:	8903      	ldrh	r3, [r0, #8]
 801102a:	1a9b      	subs	r3, r3, r2
 801102c:	8103      	strh	r3, [r0, #8]
 801102e:	680b      	ldr	r3, [r1, #0]
 8011030:	4628      	mov	r0, r5
 8011032:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011034:	2100      	movs	r1, #0
 8011036:	4798      	blx	r3
 8011038:	682b      	ldr	r3, [r5, #0]
 801103a:	2100      	movs	r1, #0
 801103c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801103e:	4628      	mov	r0, r5
 8011040:	4798      	blx	r3
 8011042:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8011044:	892a      	ldrh	r2, [r5, #8]
 8011046:	e7e6      	b.n	8011016 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x3e>

08011048 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>:
 8011048:	b530      	push	{r4, r5, lr}
 801104a:	b089      	sub	sp, #36	; 0x24
 801104c:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 8011050:	f88d 200c 	strb.w	r2, [sp, #12]
 8011054:	4a13      	ldr	r2, [pc, #76]	; (80110a4 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x5c>)
 8011056:	9204      	str	r2, [sp, #16]
 8011058:	aa01      	add	r2, sp, #4
 801105a:	9205      	str	r2, [sp, #20]
 801105c:	4a12      	ldr	r2, [pc, #72]	; (80110a8 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x60>)
 801105e:	9102      	str	r1, [sp, #8]
 8011060:	2300      	movs	r3, #0
 8011062:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011066:	f88d 3006 	strb.w	r3, [sp, #6]
 801106a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801106e:	6803      	ldr	r3, [r0, #0]
 8011070:	460d      	mov	r5, r1
 8011072:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011074:	a904      	add	r1, sp, #16
 8011076:	4604      	mov	r4, r0
 8011078:	4798      	blx	r3
 801107a:	f89d 3006 	ldrb.w	r3, [sp, #6]
 801107e:	b14b      	cbz	r3, 8011094 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x4c>
 8011080:	4629      	mov	r1, r5
 8011082:	4620      	mov	r0, r4
 8011084:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8011088:	f7ff ffa6 	bl	8010fd8 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>
 801108c:	4629      	mov	r1, r5
 801108e:	4620      	mov	r0, r4
 8011090:	f7ff f94f 	bl	8010332 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8011094:	6960      	ldr	r0, [r4, #20]
 8011096:	b110      	cbz	r0, 801109e <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x56>
 8011098:	6803      	ldr	r3, [r0, #0]
 801109a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801109c:	4798      	blx	r3
 801109e:	b009      	add	sp, #36	; 0x24
 80110a0:	bd30      	pop	{r4, r5, pc}
 80110a2:	bf00      	nop
 80110a4:	0802ef28 	.word	0x0802ef28
 80110a8:	08010d15 	.word	0x08010d15

080110ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80110ac:	b513      	push	{r0, r1, r4, lr}
 80110ae:	6803      	ldr	r3, [r0, #0]
 80110b0:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 80110b4:	2300      	movs	r3, #0
 80110b6:	e9cd 3300 	strd	r3, r3, [sp]
 80110ba:	466b      	mov	r3, sp
 80110bc:	47a0      	blx	r4
 80110be:	b002      	add	sp, #8
 80110c0:	bd10      	pop	{r4, pc}

080110c2 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 80110c2:	2301      	movs	r3, #1
 80110c4:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80110c8:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 80110cc:	4770      	bx	lr

080110ce <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 80110ce:	2301      	movs	r3, #1
 80110d0:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80110d4:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 80110d8:	4770      	bx	lr

080110da <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 80110da:	6843      	ldr	r3, [r0, #4]
 80110dc:	2201      	movs	r2, #1
 80110de:	725a      	strb	r2, [r3, #9]
 80110e0:	6840      	ldr	r0, [r0, #4]
 80110e2:	6803      	ldr	r3, [r0, #0]
 80110e4:	691b      	ldr	r3, [r3, #16]
 80110e6:	4718      	bx	r3

080110e8 <_ZN8touchgfx3HAL8flushDMAEv>:
 80110e8:	6840      	ldr	r0, [r0, #4]
 80110ea:	6803      	ldr	r3, [r0, #0]
 80110ec:	689b      	ldr	r3, [r3, #8]
 80110ee:	4718      	bx	r3

080110f0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 80110f0:	b530      	push	{r4, r5, lr}
 80110f2:	b08b      	sub	sp, #44	; 0x2c
 80110f4:	6804      	ldr	r4, [r0, #0]
 80110f6:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 80110fa:	9509      	str	r5, [sp, #36]	; 0x24
 80110fc:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8011100:	9508      	str	r5, [sp, #32]
 8011102:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8011106:	9507      	str	r5, [sp, #28]
 8011108:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 801110c:	9506      	str	r5, [sp, #24]
 801110e:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8011112:	9505      	str	r5, [sp, #20]
 8011114:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8011118:	9504      	str	r5, [sp, #16]
 801111a:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 801111e:	9503      	str	r5, [sp, #12]
 8011120:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8011124:	9502      	str	r5, [sp, #8]
 8011126:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 801112a:	e9cd 3500 	strd	r3, r5, [sp]
 801112e:	4613      	mov	r3, r2
 8011130:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8011132:	2200      	movs	r2, #0
 8011134:	47a0      	blx	r4
 8011136:	b00b      	add	sp, #44	; 0x2c
 8011138:	bd30      	pop	{r4, r5, pc}
	...

0801113c <_ZN8touchgfx3HAL10beginFrameEv>:
 801113c:	4b04      	ldr	r3, [pc, #16]	; (8011150 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 801113e:	781b      	ldrb	r3, [r3, #0]
 8011140:	b123      	cbz	r3, 801114c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8011142:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8011146:	f080 0001 	eor.w	r0, r0, #1
 801114a:	4770      	bx	lr
 801114c:	2001      	movs	r0, #1
 801114e:	4770      	bx	lr
 8011150:	2001381a 	.word	0x2001381a

08011154 <_ZN8touchgfx3HAL8endFrameEv>:
 8011154:	b510      	push	{r4, lr}
 8011156:	4604      	mov	r4, r0
 8011158:	6840      	ldr	r0, [r0, #4]
 801115a:	6803      	ldr	r3, [r0, #0]
 801115c:	689b      	ldr	r3, [r3, #8]
 801115e:	4798      	blx	r3
 8011160:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 8011164:	b113      	cbz	r3, 801116c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8011166:	2301      	movs	r3, #1
 8011168:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 801116c:	bd10      	pop	{r4, pc}

0801116e <_ZN8touchgfx3HAL10initializeEv>:
 801116e:	b510      	push	{r4, lr}
 8011170:	4604      	mov	r4, r0
 8011172:	f7f0 ff41 	bl	8001ff8 <_ZN8touchgfx10OSWrappers10initializeEv>
 8011176:	f7f0 fe4d 	bl	8001e14 <_ZN8touchgfx4GPIO4initEv>
 801117a:	6860      	ldr	r0, [r4, #4]
 801117c:	6803      	ldr	r3, [r0, #0]
 801117e:	68db      	ldr	r3, [r3, #12]
 8011180:	4798      	blx	r3
 8011182:	68e0      	ldr	r0, [r4, #12]
 8011184:	6803      	ldr	r3, [r0, #0]
 8011186:	689b      	ldr	r3, [r3, #8]
 8011188:	4798      	blx	r3
 801118a:	6823      	ldr	r3, [r4, #0]
 801118c:	4620      	mov	r0, r4
 801118e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8011190:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011194:	4718      	bx	r3
	...

08011198 <_ZN8touchgfx3HAL4tickEv>:
 8011198:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801119a:	6803      	ldr	r3, [r0, #0]
 801119c:	4d5b      	ldr	r5, [pc, #364]	; (801130c <_ZN8touchgfx3HAL4tickEv+0x174>)
 801119e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80111a2:	4604      	mov	r4, r0
 80111a4:	4798      	blx	r3
 80111a6:	2800      	cmp	r0, #0
 80111a8:	f000 8095 	beq.w	80112d6 <_ZN8touchgfx3HAL4tickEv+0x13e>
 80111ac:	2001      	movs	r0, #1
 80111ae:	f7f0 fde3 	bl	8001d78 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80111b2:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 80111b6:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80111ba:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 80111be:	2600      	movs	r6, #0
 80111c0:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 80111c4:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 80111c8:	b133      	cbz	r3, 80111d8 <_ZN8touchgfx3HAL4tickEv+0x40>
 80111ca:	6823      	ldr	r3, [r4, #0]
 80111cc:	4620      	mov	r0, r4
 80111ce:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 80111d2:	4798      	blx	r3
 80111d4:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 80111d8:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 80111dc:	6862      	ldr	r2, [r4, #4]
 80111de:	f083 0301 	eor.w	r3, r3, #1
 80111e2:	7253      	strb	r3, [r2, #9]
 80111e4:	2601      	movs	r6, #1
 80111e6:	702e      	strb	r6, [r5, #0]
 80111e8:	f005 f93a 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
 80111ec:	6803      	ldr	r3, [r0, #0]
 80111ee:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80111f0:	4798      	blx	r3
 80111f2:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 80111f6:	b90b      	cbnz	r3, 80111fc <_ZN8touchgfx3HAL4tickEv+0x64>
 80111f8:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 80111fc:	f005 f930 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
 8011200:	6803      	ldr	r3, [r0, #0]
 8011202:	695b      	ldr	r3, [r3, #20]
 8011204:	4798      	blx	r3
 8011206:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8011208:	6803      	ldr	r3, [r0, #0]
 801120a:	691b      	ldr	r3, [r3, #16]
 801120c:	4798      	blx	r3
 801120e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8011212:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8011216:	3b01      	subs	r3, #1
 8011218:	b2db      	uxtb	r3, r3
 801121a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 801121e:	b10a      	cbz	r2, 8011224 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8011220:	2b00      	cmp	r3, #0
 8011222:	d1eb      	bne.n	80111fc <_ZN8touchgfx3HAL4tickEv+0x64>
 8011224:	4a3a      	ldr	r2, [pc, #232]	; (8011310 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8011226:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 801122a:	7813      	ldrb	r3, [r2, #0]
 801122c:	3301      	adds	r3, #1
 801122e:	b25b      	sxtb	r3, r3
 8011230:	4299      	cmp	r1, r3
 8011232:	7013      	strb	r3, [r2, #0]
 8011234:	dc10      	bgt.n	8011258 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8011236:	68e0      	ldr	r0, [r4, #12]
 8011238:	2300      	movs	r3, #0
 801123a:	7013      	strb	r3, [r2, #0]
 801123c:	6803      	ldr	r3, [r0, #0]
 801123e:	aa03      	add	r2, sp, #12
 8011240:	68db      	ldr	r3, [r3, #12]
 8011242:	a902      	add	r1, sp, #8
 8011244:	4798      	blx	r3
 8011246:	6823      	ldr	r3, [r4, #0]
 8011248:	2800      	cmp	r0, #0
 801124a:	d050      	beq.n	80112ee <_ZN8touchgfx3HAL4tickEv+0x156>
 801124c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8011250:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8011254:	4620      	mov	r0, r4
 8011256:	4798      	blx	r3
 8011258:	6960      	ldr	r0, [r4, #20]
 801125a:	2300      	movs	r3, #0
 801125c:	f88d 3007 	strb.w	r3, [sp, #7]
 8011260:	b158      	cbz	r0, 801127a <_ZN8touchgfx3HAL4tickEv+0xe2>
 8011262:	6803      	ldr	r3, [r0, #0]
 8011264:	f10d 0107 	add.w	r1, sp, #7
 8011268:	68db      	ldr	r3, [r3, #12]
 801126a:	4798      	blx	r3
 801126c:	b128      	cbz	r0, 801127a <_ZN8touchgfx3HAL4tickEv+0xe2>
 801126e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8011270:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8011274:	6803      	ldr	r3, [r0, #0]
 8011276:	68db      	ldr	r3, [r3, #12]
 8011278:	4798      	blx	r3
 801127a:	f104 001c 	add.w	r0, r4, #28
 801127e:	f016 f8c3 	bl	8027408 <_ZN8touchgfx8Gestures4tickEv>
 8011282:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 8011286:	b30b      	cbz	r3, 80112cc <_ZN8touchgfx3HAL4tickEv+0x134>
 8011288:	6920      	ldr	r0, [r4, #16]
 801128a:	6803      	ldr	r3, [r0, #0]
 801128c:	691b      	ldr	r3, [r3, #16]
 801128e:	4798      	blx	r3
 8011290:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8011292:	4606      	mov	r6, r0
 8011294:	b903      	cbnz	r3, 8011298 <_ZN8touchgfx3HAL4tickEv+0x100>
 8011296:	6760      	str	r0, [r4, #116]	; 0x74
 8011298:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801129a:	4a1e      	ldr	r2, [pc, #120]	; (8011314 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 801129c:	1af3      	subs	r3, r6, r3
 801129e:	4293      	cmp	r3, r2
 80112a0:	d914      	bls.n	80112cc <_ZN8touchgfx3HAL4tickEv+0x134>
 80112a2:	6920      	ldr	r0, [r4, #16]
 80112a4:	6803      	ldr	r3, [r0, #0]
 80112a6:	699b      	ldr	r3, [r3, #24]
 80112a8:	4798      	blx	r3
 80112aa:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80112ac:	2264      	movs	r2, #100	; 0x64
 80112ae:	1af3      	subs	r3, r6, r3
 80112b0:	fbb3 f3f2 	udiv	r3, r3, r2
 80112b4:	fbb0 f0f3 	udiv	r0, r0, r3
 80112b8:	2800      	cmp	r0, #0
 80112ba:	dc1d      	bgt.n	80112f8 <_ZN8touchgfx3HAL4tickEv+0x160>
 80112bc:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 80112c0:	6920      	ldr	r0, [r4, #16]
 80112c2:	6803      	ldr	r3, [r0, #0]
 80112c4:	2100      	movs	r1, #0
 80112c6:	69db      	ldr	r3, [r3, #28]
 80112c8:	4798      	blx	r3
 80112ca:	6766      	str	r6, [r4, #116]	; 0x74
 80112cc:	f005 f8c8 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
 80112d0:	6803      	ldr	r3, [r0, #0]
 80112d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80112d4:	4798      	blx	r3
 80112d6:	6823      	ldr	r3, [r4, #0]
 80112d8:	4620      	mov	r0, r4
 80112da:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80112de:	4798      	blx	r3
 80112e0:	2001      	movs	r0, #1
 80112e2:	f7f0 fd61 	bl	8001da8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80112e6:	2300      	movs	r3, #0
 80112e8:	702b      	strb	r3, [r5, #0]
 80112ea:	b004      	add	sp, #16
 80112ec:	bd70      	pop	{r4, r5, r6, pc}
 80112ee:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 80112f2:	4620      	mov	r0, r4
 80112f4:	4798      	blx	r3
 80112f6:	e7af      	b.n	8011258 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80112f8:	2863      	cmp	r0, #99	; 0x63
 80112fa:	bfcb      	itete	gt
 80112fc:	2300      	movgt	r3, #0
 80112fe:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8011302:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8011306:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 801130a:	e7d9      	b.n	80112c0 <_ZN8touchgfx3HAL4tickEv+0x128>
 801130c:	20013820 	.word	0x20013820
 8011310:	20013821 	.word	0x20013821
 8011314:	05f5e100 	.word	0x05f5e100

08011318 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8011318:	b510      	push	{r4, lr}
 801131a:	4604      	mov	r4, r0
 801131c:	f7f0 fe9c 	bl	8002058 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8011320:	6863      	ldr	r3, [r4, #4]
 8011322:	2200      	movs	r2, #0
 8011324:	729a      	strb	r2, [r3, #10]
 8011326:	bd10      	pop	{r4, pc}

08011328 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8011328:	65c1      	str	r1, [r0, #92]	; 0x5c
 801132a:	301c      	adds	r0, #28
 801132c:	f016 b86a 	b.w	8027404 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08011330 <_ZN8touchgfx3HAL5touchEll>:
 8011330:	b530      	push	{r4, r5, lr}
 8011332:	b087      	sub	sp, #28
 8011334:	4604      	mov	r4, r0
 8011336:	a804      	add	r0, sp, #16
 8011338:	e9cd 1204 	strd	r1, r2, [sp, #16]
 801133c:	f004 fe5c 	bl	8015ff8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8011340:	9b04      	ldr	r3, [sp, #16]
 8011342:	f8ad 300c 	strh.w	r3, [sp, #12]
 8011346:	a906      	add	r1, sp, #24
 8011348:	9b05      	ldr	r3, [sp, #20]
 801134a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 801134e:	a803      	add	r0, sp, #12
 8011350:	f004 fea4 	bl	801609c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8011354:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8011358:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 801135c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8011360:	f104 001c 	add.w	r0, r4, #28
 8011364:	b189      	cbz	r1, 801138a <_ZN8touchgfx3HAL5touchEll+0x5a>
 8011366:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 801136a:	9300      	str	r3, [sp, #0]
 801136c:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8011370:	4613      	mov	r3, r2
 8011372:	462a      	mov	r2, r5
 8011374:	f016 f856 	bl	8027424 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8011378:	b128      	cbz	r0, 8011386 <_ZN8touchgfx3HAL5touchEll+0x56>
 801137a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801137e:	6623      	str	r3, [r4, #96]	; 0x60
 8011380:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8011384:	6663      	str	r3, [r4, #100]	; 0x64
 8011386:	b007      	add	sp, #28
 8011388:	bd30      	pop	{r4, r5, pc}
 801138a:	f016 f88b 	bl	80274a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 801138e:	2301      	movs	r3, #1
 8011390:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8011394:	e7f1      	b.n	801137a <_ZN8touchgfx3HAL5touchEll+0x4a>

08011396 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8011396:	b510      	push	{r4, lr}
 8011398:	2b00      	cmp	r3, #0
 801139a:	d046      	beq.n	801142a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 801139c:	ea81 0002 	eor.w	r0, r1, r2
 80113a0:	07c4      	lsls	r4, r0, #31
 80113a2:	d508      	bpl.n	80113b6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 80113a4:	440b      	add	r3, r1
 80113a6:	3a01      	subs	r2, #1
 80113a8:	428b      	cmp	r3, r1
 80113aa:	d93e      	bls.n	801142a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80113ac:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80113b0:	f801 0b01 	strb.w	r0, [r1], #1
 80113b4:	e7f8      	b.n	80113a8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 80113b6:	07d0      	lsls	r0, r2, #31
 80113b8:	bf42      	ittt	mi
 80113ba:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 80113be:	f801 0b01 	strbmi.w	r0, [r1], #1
 80113c2:	f103 33ff 	addmi.w	r3, r3, #4294967295
 80113c6:	2b01      	cmp	r3, #1
 80113c8:	d911      	bls.n	80113ee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80113ca:	ea81 0402 	eor.w	r4, r1, r2
 80113ce:	07a4      	lsls	r4, r4, #30
 80113d0:	4610      	mov	r0, r2
 80113d2:	d022      	beq.n	801141a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 80113d4:	f023 0401 	bic.w	r4, r3, #1
 80113d8:	440c      	add	r4, r1
 80113da:	428c      	cmp	r4, r1
 80113dc:	4602      	mov	r2, r0
 80113de:	d904      	bls.n	80113ea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 80113e0:	8812      	ldrh	r2, [r2, #0]
 80113e2:	f821 2b02 	strh.w	r2, [r1], #2
 80113e6:	3002      	adds	r0, #2
 80113e8:	e7f7      	b.n	80113da <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 80113ea:	f003 0301 	and.w	r3, r3, #1
 80113ee:	f023 0003 	bic.w	r0, r3, #3
 80113f2:	4408      	add	r0, r1
 80113f4:	4288      	cmp	r0, r1
 80113f6:	4614      	mov	r4, r2
 80113f8:	d904      	bls.n	8011404 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 80113fa:	6824      	ldr	r4, [r4, #0]
 80113fc:	f841 4b04 	str.w	r4, [r1], #4
 8011400:	3204      	adds	r2, #4
 8011402:	e7f7      	b.n	80113f4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8011404:	f003 0303 	and.w	r3, r3, #3
 8011408:	440b      	add	r3, r1
 801140a:	3a01      	subs	r2, #1
 801140c:	428b      	cmp	r3, r1
 801140e:	d90c      	bls.n	801142a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011410:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8011414:	f801 0b01 	strb.w	r0, [r1], #1
 8011418:	e7f8      	b.n	801140c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 801141a:	0790      	lsls	r0, r2, #30
 801141c:	d0e7      	beq.n	80113ee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801141e:	f832 0b02 	ldrh.w	r0, [r2], #2
 8011422:	f821 0b02 	strh.w	r0, [r1], #2
 8011426:	3b02      	subs	r3, #2
 8011428:	e7e1      	b.n	80113ee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801142a:	2001      	movs	r0, #1
 801142c:	bd10      	pop	{r4, pc}

0801142e <_ZN8touchgfx3HAL7noTouchEv>:
 801142e:	b510      	push	{r4, lr}
 8011430:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 8011434:	4604      	mov	r4, r0
 8011436:	b153      	cbz	r3, 801144e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8011438:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 801143c:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8011440:	2101      	movs	r1, #1
 8011442:	301c      	adds	r0, #28
 8011444:	f016 f82e 	bl	80274a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8011448:	2300      	movs	r3, #0
 801144a:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 801144e:	bd10      	pop	{r4, pc}

08011450 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8011450:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011454:	b085      	sub	sp, #20
 8011456:	ad04      	add	r5, sp, #16
 8011458:	4604      	mov	r4, r0
 801145a:	2000      	movs	r0, #0
 801145c:	f845 0d04 	str.w	r0, [r5, #-4]!
 8011460:	69a0      	ldr	r0, [r4, #24]
 8011462:	6806      	ldr	r6, [r0, #0]
 8011464:	9501      	str	r5, [sp, #4]
 8011466:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 801146a:	9500      	str	r5, [sp, #0]
 801146c:	6835      	ldr	r5, [r6, #0]
 801146e:	4699      	mov	r9, r3
 8011470:	460f      	mov	r7, r1
 8011472:	4690      	mov	r8, r2
 8011474:	47a8      	blx	r5
 8011476:	4d10      	ldr	r5, [pc, #64]	; (80114b8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8011478:	4606      	mov	r6, r0
 801147a:	f8a5 9000 	strh.w	r9, [r5]
 801147e:	f7f3 f829 	bl	80044d4 <_ZN8touchgfx3HAL3lcdEv>
 8011482:	6803      	ldr	r3, [r0, #0]
 8011484:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011486:	4798      	blx	r3
 8011488:	b128      	cbz	r0, 8011496 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 801148a:	2801      	cmp	r0, #1
 801148c:	d00b      	beq.n	80114a6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 801148e:	4630      	mov	r0, r6
 8011490:	b005      	add	sp, #20
 8011492:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011496:	882b      	ldrh	r3, [r5, #0]
 8011498:	fb08 7203 	mla	r2, r8, r3, r7
 801149c:	9b03      	ldr	r3, [sp, #12]
 801149e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 80114a2:	63e3      	str	r3, [r4, #60]	; 0x3c
 80114a4:	e7f3      	b.n	801148e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 80114a6:	882a      	ldrh	r2, [r5, #0]
 80114a8:	9b03      	ldr	r3, [sp, #12]
 80114aa:	fb08 7202 	mla	r2, r8, r2, r7
 80114ae:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80114b2:	1a9a      	subs	r2, r3, r2
 80114b4:	63e2      	str	r2, [r4, #60]	; 0x3c
 80114b6:	e7ea      	b.n	801148e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 80114b8:	20013816 	.word	0x20013816

080114bc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 80114bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80114be:	b08b      	sub	sp, #44	; 0x2c
 80114c0:	4617      	mov	r7, r2
 80114c2:	4604      	mov	r4, r0
 80114c4:	460e      	mov	r6, r1
 80114c6:	461d      	mov	r5, r3
 80114c8:	f7f3 f804 	bl	80044d4 <_ZN8touchgfx3HAL3lcdEv>
 80114cc:	6803      	ldr	r3, [r0, #0]
 80114ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80114d0:	4798      	blx	r3
 80114d2:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80114d6:	9007      	str	r0, [sp, #28]
 80114d8:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80114dc:	4b0d      	ldr	r3, [pc, #52]	; (8011514 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 80114de:	6822      	ldr	r2, [r4, #0]
 80114e0:	881b      	ldrh	r3, [r3, #0]
 80114e2:	9306      	str	r3, [sp, #24]
 80114e4:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80114e8:	9305      	str	r3, [sp, #20]
 80114ea:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 80114ee:	9304      	str	r3, [sp, #16]
 80114f0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80114f4:	9303      	str	r3, [sp, #12]
 80114f6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80114fa:	9302      	str	r3, [sp, #8]
 80114fc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011500:	e9cd 5300 	strd	r5, r3, [sp]
 8011504:	4631      	mov	r1, r6
 8011506:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8011508:	463b      	mov	r3, r7
 801150a:	2200      	movs	r2, #0
 801150c:	4620      	mov	r0, r4
 801150e:	47a8      	blx	r5
 8011510:	b00b      	add	sp, #44	; 0x2c
 8011512:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011514:	20013816 	.word	0x20013816

08011518 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8011518:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801151c:	4698      	mov	r8, r3
 801151e:	6803      	ldr	r3, [r0, #0]
 8011520:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8011522:	4b15      	ldr	r3, [pc, #84]	; (8011578 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8011524:	b08b      	sub	sp, #44	; 0x2c
 8011526:	4617      	mov	r7, r2
 8011528:	f8b3 9000 	ldrh.w	r9, [r3]
 801152c:	460e      	mov	r6, r1
 801152e:	4604      	mov	r4, r0
 8011530:	f7f2 ffd0 	bl	80044d4 <_ZN8touchgfx3HAL3lcdEv>
 8011534:	6803      	ldr	r3, [r0, #0]
 8011536:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011538:	4798      	blx	r3
 801153a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 801153e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8011542:	2302      	movs	r3, #2
 8011544:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8011548:	2301      	movs	r3, #1
 801154a:	9305      	str	r3, [sp, #20]
 801154c:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8011550:	9304      	str	r3, [sp, #16]
 8011552:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8011556:	9303      	str	r3, [sp, #12]
 8011558:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801155c:	9302      	str	r3, [sp, #8]
 801155e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011562:	2200      	movs	r2, #0
 8011564:	e9cd 8300 	strd	r8, r3, [sp]
 8011568:	4631      	mov	r1, r6
 801156a:	463b      	mov	r3, r7
 801156c:	4620      	mov	r0, r4
 801156e:	47a8      	blx	r5
 8011570:	b00b      	add	sp, #44	; 0x2c
 8011572:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011576:	bf00      	nop
 8011578:	20013816 	.word	0x20013816

0801157c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 801157c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011580:	4698      	mov	r8, r3
 8011582:	6803      	ldr	r3, [r0, #0]
 8011584:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8011586:	4b11      	ldr	r3, [pc, #68]	; (80115cc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8011588:	b087      	sub	sp, #28
 801158a:	f8b3 9000 	ldrh.w	r9, [r3]
 801158e:	460e      	mov	r6, r1
 8011590:	4617      	mov	r7, r2
 8011592:	4604      	mov	r4, r0
 8011594:	f7f2 ff9e 	bl	80044d4 <_ZN8touchgfx3HAL3lcdEv>
 8011598:	6803      	ldr	r3, [r0, #0]
 801159a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801159c:	4798      	blx	r3
 801159e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 80115a2:	f8cd 900c 	str.w	r9, [sp, #12]
 80115a6:	e9cd 0304 	strd	r0, r3, [sp, #16]
 80115aa:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 80115ae:	9302      	str	r3, [sp, #8]
 80115b0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80115b4:	9301      	str	r3, [sp, #4]
 80115b6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80115ba:	9300      	str	r3, [sp, #0]
 80115bc:	463a      	mov	r2, r7
 80115be:	4643      	mov	r3, r8
 80115c0:	4631      	mov	r1, r6
 80115c2:	4620      	mov	r0, r4
 80115c4:	47a8      	blx	r5
 80115c6:	b007      	add	sp, #28
 80115c8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80115cc:	20013816 	.word	0x20013816

080115d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 80115d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80115d4:	4604      	mov	r4, r0
 80115d6:	b08f      	sub	sp, #60	; 0x3c
 80115d8:	4610      	mov	r0, r2
 80115da:	460d      	mov	r5, r1
 80115dc:	4691      	mov	r9, r2
 80115de:	461e      	mov	r6, r3
 80115e0:	f008 fafa 	bl	8019bd8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80115e4:	2800      	cmp	r0, #0
 80115e6:	f000 809d 	beq.w	8011724 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 80115ea:	6823      	ldr	r3, [r4, #0]
 80115ec:	f8df b198 	ldr.w	fp, [pc, #408]	; 8011788 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 80115f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80115f2:	f8df a198 	ldr.w	sl, [pc, #408]	; 801178c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 80115f6:	4f61      	ldr	r7, [pc, #388]	; (801177c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80115f8:	4620      	mov	r0, r4
 80115fa:	4798      	blx	r3
 80115fc:	6823      	ldr	r3, [r4, #0]
 80115fe:	4620      	mov	r0, r4
 8011600:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011602:	4798      	blx	r3
 8011604:	f8bb 3000 	ldrh.w	r3, [fp]
 8011608:	9301      	str	r3, [sp, #4]
 801160a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 801160e:	f8ba 3000 	ldrh.w	r3, [sl]
 8011612:	9302      	str	r3, [sp, #8]
 8011614:	883b      	ldrh	r3, [r7, #0]
 8011616:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 801161a:	9303      	str	r3, [sp, #12]
 801161c:	4b58      	ldr	r3, [pc, #352]	; (8011780 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 801161e:	9305      	str	r3, [sp, #20]
 8011620:	881a      	ldrh	r2, [r3, #0]
 8011622:	9204      	str	r2, [sp, #16]
 8011624:	4640      	mov	r0, r8
 8011626:	f008 fb6b 	bl	8019d00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801162a:	8038      	strh	r0, [r7, #0]
 801162c:	4640      	mov	r0, r8
 801162e:	f008 fb9b 	bl	8019d68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011632:	9b05      	ldr	r3, [sp, #20]
 8011634:	b280      	uxth	r0, r0
 8011636:	8018      	strh	r0, [r3, #0]
 8011638:	4b52      	ldr	r3, [pc, #328]	; (8011784 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 801163a:	781b      	ldrb	r3, [r3, #0]
 801163c:	2b00      	cmp	r3, #0
 801163e:	d174      	bne.n	801172a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8011640:	883b      	ldrh	r3, [r7, #0]
 8011642:	f8ab 3000 	strh.w	r3, [fp]
 8011646:	f8aa 0000 	strh.w	r0, [sl]
 801164a:	4648      	mov	r0, r9
 801164c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8011650:	f008 fac2 	bl	8019bd8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011654:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8011658:	2200      	movs	r2, #0
 801165a:	4611      	mov	r1, r2
 801165c:	4628      	mov	r0, r5
 801165e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8011662:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8011666:	f7f1 f95f 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 801166a:	2301      	movs	r3, #1
 801166c:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8011670:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8011674:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8011678:	2b00      	cmp	r3, #0
 801167a:	dd5c      	ble.n	8011736 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 801167c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8011680:	2b00      	cmp	r3, #0
 8011682:	dd58      	ble.n	8011736 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8011684:	462a      	mov	r2, r5
 8011686:	ab0a      	add	r3, sp, #40	; 0x28
 8011688:	f852 0f04 	ldr.w	r0, [r2, #4]!
 801168c:	6851      	ldr	r1, [r2, #4]
 801168e:	c303      	stmia	r3!, {r0, r1}
 8011690:	4631      	mov	r1, r6
 8011692:	a80a      	add	r0, sp, #40	; 0x28
 8011694:	f7fe ff92 	bl	80105bc <_ZN8touchgfx4RectaNERKS0_>
 8011698:	4b38      	ldr	r3, [pc, #224]	; (801177c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801169a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801169e:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80116a2:	2100      	movs	r1, #0
 80116a4:	aa0a      	add	r2, sp, #40	; 0x28
 80116a6:	4b36      	ldr	r3, [pc, #216]	; (8011780 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80116a8:	910c      	str	r1, [sp, #48]	; 0x30
 80116aa:	e892 0003 	ldmia.w	r2, {r0, r1}
 80116ae:	f9b3 3000 	ldrsh.w	r3, [r3]
 80116b2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80116b6:	ab08      	add	r3, sp, #32
 80116b8:	e883 0003 	stmia.w	r3, {r0, r1}
 80116bc:	4618      	mov	r0, r3
 80116be:	a90c      	add	r1, sp, #48	; 0x30
 80116c0:	f7fe ff7c 	bl	80105bc <_ZN8touchgfx4RectaNERKS0_>
 80116c4:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 80116c6:	2b00      	cmp	r3, #0
 80116c8:	d13c      	bne.n	8011744 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 80116ca:	2000      	movs	r0, #0
 80116cc:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 80116d0:	2600      	movs	r6, #0
 80116d2:	682a      	ldr	r2, [r5, #0]
 80116d4:	696b      	ldr	r3, [r5, #20]
 80116d6:	616e      	str	r6, [r5, #20]
 80116d8:	9305      	str	r3, [sp, #20]
 80116da:	6892      	ldr	r2, [r2, #8]
 80116dc:	a908      	add	r1, sp, #32
 80116de:	4628      	mov	r0, r5
 80116e0:	4790      	blx	r2
 80116e2:	9b05      	ldr	r3, [sp, #20]
 80116e4:	616b      	str	r3, [r5, #20]
 80116e6:	4652      	mov	r2, sl
 80116e8:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 80116ec:	4649      	mov	r1, r9
 80116ee:	4628      	mov	r0, r5
 80116f0:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 80116f4:	f7f1 f918 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 80116f8:	4b23      	ldr	r3, [pc, #140]	; (8011788 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 80116fa:	9a01      	ldr	r2, [sp, #4]
 80116fc:	801a      	strh	r2, [r3, #0]
 80116fe:	4b23      	ldr	r3, [pc, #140]	; (801178c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8011700:	9a02      	ldr	r2, [sp, #8]
 8011702:	801a      	strh	r2, [r3, #0]
 8011704:	4b1d      	ldr	r3, [pc, #116]	; (801177c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011706:	9a03      	ldr	r2, [sp, #12]
 8011708:	801a      	strh	r2, [r3, #0]
 801170a:	4b1d      	ldr	r3, [pc, #116]	; (8011780 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 801170c:	9a04      	ldr	r2, [sp, #16]
 801170e:	801a      	strh	r2, [r3, #0]
 8011710:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8011714:	6823      	ldr	r3, [r4, #0]
 8011716:	4620      	mov	r0, r4
 8011718:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801171a:	4798      	blx	r3
 801171c:	6823      	ldr	r3, [r4, #0]
 801171e:	4620      	mov	r0, r4
 8011720:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011722:	4798      	blx	r3
 8011724:	b00f      	add	sp, #60	; 0x3c
 8011726:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801172a:	883b      	ldrh	r3, [r7, #0]
 801172c:	f8ab 0000 	strh.w	r0, [fp]
 8011730:	f8aa 3000 	strh.w	r3, [sl]
 8011734:	e789      	b.n	801164a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8011736:	462a      	mov	r2, r5
 8011738:	ab0a      	add	r3, sp, #40	; 0x28
 801173a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 801173e:	6851      	ldr	r1, [r2, #4]
 8011740:	c303      	stmia	r3!, {r0, r1}
 8011742:	e7a9      	b.n	8011698 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8011744:	a807      	add	r0, sp, #28
 8011746:	f008 fc4b 	bl	8019fe0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801174a:	4606      	mov	r6, r0
 801174c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 801174e:	6803      	ldr	r3, [r0, #0]
 8011750:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011752:	4798      	blx	r3
 8011754:	4286      	cmp	r6, r0
 8011756:	d1b8      	bne.n	80116ca <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8011758:	f7f2 febc 	bl	80044d4 <_ZN8touchgfx3HAL3lcdEv>
 801175c:	6803      	ldr	r3, [r0, #0]
 801175e:	4606      	mov	r6, r0
 8011760:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011762:	9305      	str	r3, [sp, #20]
 8011764:	a807      	add	r0, sp, #28
 8011766:	f008 fc3b 	bl	8019fe0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801176a:	9b05      	ldr	r3, [sp, #20]
 801176c:	4601      	mov	r1, r0
 801176e:	4630      	mov	r0, r6
 8011770:	4798      	blx	r3
 8011772:	f080 0001 	eor.w	r0, r0, #1
 8011776:	b2c0      	uxtb	r0, r0
 8011778:	e7a8      	b.n	80116cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 801177a:	bf00      	nop
 801177c:	20013810 	.word	0x20013810
 8011780:	20013812 	.word	0x20013812
 8011784:	20013814 	.word	0x20013814
 8011788:	20013816 	.word	0x20013816
 801178c:	20013818 	.word	0x20013818

08011790 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8011790:	b510      	push	{r4, lr}
 8011792:	4b07      	ldr	r3, [pc, #28]	; (80117b0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8011794:	781b      	ldrb	r3, [r3, #0]
 8011796:	4604      	mov	r4, r0
 8011798:	b13b      	cbz	r3, 80117aa <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801179a:	6803      	ldr	r3, [r0, #0]
 801179c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801179e:	4798      	blx	r3
 80117a0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80117a2:	4283      	cmp	r3, r0
 80117a4:	d101      	bne.n	80117aa <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80117a6:	6c20      	ldr	r0, [r4, #64]	; 0x40
 80117a8:	bd10      	pop	{r4, pc}
 80117aa:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80117ac:	e7fc      	b.n	80117a8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 80117ae:	bf00      	nop
 80117b0:	2001381a 	.word	0x2001381a

080117b4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 80117b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80117b8:	b08a      	sub	sp, #40	; 0x28
 80117ba:	461d      	mov	r5, r3
 80117bc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80117c0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80117c4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80117c8:	f8ad 3018 	strh.w	r3, [sp, #24]
 80117cc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80117d0:	f8ad 301a 	strh.w	r3, [sp, #26]
 80117d4:	2400      	movs	r4, #0
 80117d6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80117da:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 80117de:	f8ad 301c 	strh.w	r3, [sp, #28]
 80117e2:	4690      	mov	r8, r2
 80117e4:	4607      	mov	r7, r0
 80117e6:	9404      	str	r4, [sp, #16]
 80117e8:	f88d 4020 	strb.w	r4, [sp, #32]
 80117ec:	f7ff ffd0 	bl	8011790 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80117f0:	fb06 8505 	mla	r5, r6, r5, r8
 80117f4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80117f8:	6878      	ldr	r0, [r7, #4]
 80117fa:	9505      	str	r5, [sp, #20]
 80117fc:	f8ad 601e 	strh.w	r6, [sp, #30]
 8011800:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011804:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8011808:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 801180c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8011810:	6803      	ldr	r3, [r0, #0]
 8011812:	a901      	add	r1, sp, #4
 8011814:	685b      	ldr	r3, [r3, #4]
 8011816:	4798      	blx	r3
 8011818:	b00a      	add	sp, #40	; 0x28
 801181a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801181e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 801181e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011822:	b08b      	sub	sp, #44	; 0x2c
 8011824:	2400      	movs	r4, #0
 8011826:	461d      	mov	r5, r3
 8011828:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801182c:	4688      	mov	r8, r1
 801182e:	4691      	mov	r9, r2
 8011830:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8011834:	9404      	str	r4, [sp, #16]
 8011836:	4607      	mov	r7, r0
 8011838:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801183c:	f7ff ffa8 	bl	8011790 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011840:	fb06 9505 	mla	r5, r6, r5, r9
 8011844:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011848:	f8ad 3018 	strh.w	r3, [sp, #24]
 801184c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011850:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011854:	6878      	ldr	r0, [r7, #4]
 8011856:	9505      	str	r5, [sp, #20]
 8011858:	f8ad 301a 	strh.w	r3, [sp, #26]
 801185c:	f8ad 401c 	strh.w	r4, [sp, #28]
 8011860:	f8ad 601e 	strh.w	r6, [sp, #30]
 8011864:	f8cd 8010 	str.w	r8, [sp, #16]
 8011868:	f8ad 4020 	strh.w	r4, [sp, #32]
 801186c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011870:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8011874:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8011878:	6803      	ldr	r3, [r0, #0]
 801187a:	a901      	add	r1, sp, #4
 801187c:	685b      	ldr	r3, [r3, #4]
 801187e:	4798      	blx	r3
 8011880:	b00b      	add	sp, #44	; 0x2c
 8011882:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08011888 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8011888:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801188c:	b08a      	sub	sp, #40	; 0x28
 801188e:	4698      	mov	r8, r3
 8011890:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8011894:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8011898:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 801189c:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 80118a0:	2300      	movs	r3, #0
 80118a2:	2d0b      	cmp	r5, #11
 80118a4:	4606      	mov	r6, r0
 80118a6:	9304      	str	r3, [sp, #16]
 80118a8:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 80118ac:	d138      	bne.n	8011920 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 80118ae:	2380      	movs	r3, #128	; 0x80
 80118b0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80118b4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80118b8:	f8ad 3018 	strh.w	r3, [sp, #24]
 80118bc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80118c0:	f8ad 301a 	strh.w	r3, [sp, #26]
 80118c4:	f88d 0020 	strb.w	r0, [sp, #32]
 80118c8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80118cc:	f8ad 301c 	strh.w	r3, [sp, #28]
 80118d0:	4630      	mov	r0, r6
 80118d2:	9203      	str	r2, [sp, #12]
 80118d4:	f7ff ff5c 	bl	8011790 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80118d8:	2c0b      	cmp	r4, #11
 80118da:	bf98      	it	ls
 80118dc:	4b1b      	ldrls	r3, [pc, #108]	; (801194c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 80118de:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 80118e2:	bf98      	it	ls
 80118e4:	5d19      	ldrbls	r1, [r3, r4]
 80118e6:	f8ad 701e 	strh.w	r7, [sp, #30]
 80118ea:	bf88      	it	hi
 80118ec:	2100      	movhi	r1, #0
 80118ee:	fb02 8307 	mla	r3, r2, r7, r8
 80118f2:	10c9      	asrs	r1, r1, #3
 80118f4:	fb01 0003 	mla	r0, r1, r3, r0
 80118f8:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 80118fc:	9005      	str	r0, [sp, #20]
 80118fe:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8011902:	6870      	ldr	r0, [r6, #4]
 8011904:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8011908:	2300      	movs	r3, #0
 801190a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 801190e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8011912:	6803      	ldr	r3, [r0, #0]
 8011914:	a901      	add	r1, sp, #4
 8011916:	685b      	ldr	r3, [r3, #4]
 8011918:	4798      	blx	r3
 801191a:	b00a      	add	sp, #40	; 0x28
 801191c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011920:	2d02      	cmp	r5, #2
 8011922:	d109      	bne.n	8011938 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8011924:	28ff      	cmp	r0, #255	; 0xff
 8011926:	d105      	bne.n	8011934 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8011928:	f1bc 0f00 	cmp.w	ip, #0
 801192c:	bf14      	ite	ne
 801192e:	2340      	movne	r3, #64	; 0x40
 8011930:	2320      	moveq	r3, #32
 8011932:	e7bd      	b.n	80118b0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011934:	2340      	movs	r3, #64	; 0x40
 8011936:	e7bb      	b.n	80118b0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011938:	28ff      	cmp	r0, #255	; 0xff
 801193a:	d105      	bne.n	8011948 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 801193c:	f1bc 0f00 	cmp.w	ip, #0
 8011940:	bf14      	ite	ne
 8011942:	2304      	movne	r3, #4
 8011944:	2301      	moveq	r3, #1
 8011946:	e7b3      	b.n	80118b0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011948:	2304      	movs	r3, #4
 801194a:	e7b1      	b.n	80118b0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801194c:	0802efd0 	.word	0x0802efd0

08011950 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8011950:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011954:	b08b      	sub	sp, #44	; 0x2c
 8011956:	461d      	mov	r5, r3
 8011958:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 801195c:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8011960:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8011964:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8011968:	bf14      	ite	ne
 801196a:	2308      	movne	r3, #8
 801196c:	2302      	moveq	r3, #2
 801196e:	2400      	movs	r4, #0
 8011970:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8011974:	4688      	mov	r8, r1
 8011976:	4693      	mov	fp, r2
 8011978:	9404      	str	r4, [sp, #16]
 801197a:	4607      	mov	r7, r0
 801197c:	f7ff ff08 	bl	8011790 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011980:	2e0b      	cmp	r6, #11
 8011982:	bf98      	it	ls
 8011984:	4b15      	ldrls	r3, [pc, #84]	; (80119dc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8011986:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801198a:	bf98      	it	ls
 801198c:	5d9c      	ldrbls	r4, [r3, r6]
 801198e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8011992:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011996:	fb05 b50a 	mla	r5, r5, sl, fp
 801199a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801199e:	f8ad 301a 	strh.w	r3, [sp, #26]
 80119a2:	10e4      	asrs	r4, r4, #3
 80119a4:	fb04 0405 	mla	r4, r4, r5, r0
 80119a8:	2300      	movs	r3, #0
 80119aa:	6878      	ldr	r0, [r7, #4]
 80119ac:	9405      	str	r4, [sp, #20]
 80119ae:	f8ad 301c 	strh.w	r3, [sp, #28]
 80119b2:	f8ad a01e 	strh.w	sl, [sp, #30]
 80119b6:	f8cd 8010 	str.w	r8, [sp, #16]
 80119ba:	f88d 9020 	strb.w	r9, [sp, #32]
 80119be:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 80119c2:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80119c6:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 80119ca:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 80119ce:	6803      	ldr	r3, [r0, #0]
 80119d0:	a901      	add	r1, sp, #4
 80119d2:	685b      	ldr	r3, [r3, #4]
 80119d4:	4798      	blx	r3
 80119d6:	b00b      	add	sp, #44	; 0x2c
 80119d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80119dc:	0802efd0 	.word	0x0802efd0

080119e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 80119e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80119e4:	461e      	mov	r6, r3
 80119e6:	4b0a      	ldr	r3, [pc, #40]	; (8011a10 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 80119e8:	460f      	mov	r7, r1
 80119ea:	881d      	ldrh	r5, [r3, #0]
 80119ec:	4690      	mov	r8, r2
 80119ee:	f7f2 fd71 	bl	80044d4 <_ZN8touchgfx3HAL3lcdEv>
 80119f2:	6803      	ldr	r3, [r0, #0]
 80119f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80119f6:	4798      	blx	r3
 80119f8:	280b      	cmp	r0, #11
 80119fa:	bf9a      	itte	ls
 80119fc:	4b05      	ldrls	r3, [pc, #20]	; (8011a14 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 80119fe:	5c1c      	ldrbls	r4, [r3, r0]
 8011a00:	2400      	movhi	r4, #0
 8011a02:	fb08 7005 	mla	r0, r8, r5, r7
 8011a06:	10e4      	asrs	r4, r4, #3
 8011a08:	fb04 6000 	mla	r0, r4, r0, r6
 8011a0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011a10:	20013816 	.word	0x20013816
 8011a14:	0802efd0 	.word	0x0802efd0

08011a18 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8011a18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011a1a:	b08b      	sub	sp, #44	; 0x2c
 8011a1c:	461f      	mov	r7, r3
 8011a1e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8011a22:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011a26:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011a2a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011a2e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011a32:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011a36:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011a3a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011a3e:	2500      	movs	r5, #0
 8011a40:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8011a44:	f88d 3020 	strb.w	r3, [sp, #32]
 8011a48:	4604      	mov	r4, r0
 8011a4a:	4616      	mov	r6, r2
 8011a4c:	9504      	str	r5, [sp, #16]
 8011a4e:	f7ff fe9f 	bl	8011790 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011a52:	463a      	mov	r2, r7
 8011a54:	4631      	mov	r1, r6
 8011a56:	4603      	mov	r3, r0
 8011a58:	4620      	mov	r0, r4
 8011a5a:	f7ff ffc1 	bl	80119e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011a5e:	4b0e      	ldr	r3, [pc, #56]	; (8011a98 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8011a60:	9005      	str	r0, [sp, #20]
 8011a62:	881b      	ldrh	r3, [r3, #0]
 8011a64:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011a68:	f7f2 fd34 	bl	80044d4 <_ZN8touchgfx3HAL3lcdEv>
 8011a6c:	6803      	ldr	r3, [r0, #0]
 8011a6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011a70:	4798      	blx	r3
 8011a72:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8011a74:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8011a78:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8011a7c:	9304      	str	r3, [sp, #16]
 8011a7e:	6860      	ldr	r0, [r4, #4]
 8011a80:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8011a84:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8011a88:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8011a8c:	6803      	ldr	r3, [r0, #0]
 8011a8e:	a901      	add	r1, sp, #4
 8011a90:	685b      	ldr	r3, [r3, #4]
 8011a92:	4798      	blx	r3
 8011a94:	b00b      	add	sp, #44	; 0x2c
 8011a96:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011a98:	20013816 	.word	0x20013816

08011a9c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8011a9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011a9e:	b08d      	sub	sp, #52	; 0x34
 8011aa0:	466b      	mov	r3, sp
 8011aa2:	e883 0006 	stmia.w	r3, {r1, r2}
 8011aa6:	2300      	movs	r3, #0
 8011aa8:	9306      	str	r3, [sp, #24]
 8011aaa:	6803      	ldr	r3, [r0, #0]
 8011aac:	f8bd 6000 	ldrh.w	r6, [sp]
 8011ab0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011ab2:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8011ab6:	2501      	movs	r5, #1
 8011ab8:	9503      	str	r5, [sp, #12]
 8011aba:	4604      	mov	r4, r0
 8011abc:	4798      	blx	r3
 8011abe:	463a      	mov	r2, r7
 8011ac0:	4631      	mov	r1, r6
 8011ac2:	4603      	mov	r3, r0
 8011ac4:	4620      	mov	r0, r4
 8011ac6:	f7ff ff8b 	bl	80119e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011aca:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011acc:	9307      	str	r3, [sp, #28]
 8011ace:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011ad2:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011ad6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011ada:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011ade:	4b0f      	ldr	r3, [pc, #60]	; (8011b1c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8011ae0:	9004      	str	r0, [sp, #16]
 8011ae2:	881b      	ldrh	r3, [r3, #0]
 8011ae4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8011ae8:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8011aec:	f7f2 fcf2 	bl	80044d4 <_ZN8touchgfx3HAL3lcdEv>
 8011af0:	6803      	ldr	r3, [r0, #0]
 8011af2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011af4:	4798      	blx	r3
 8011af6:	23ff      	movs	r3, #255	; 0xff
 8011af8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8011afc:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8011b00:	6860      	ldr	r0, [r4, #4]
 8011b02:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8011b06:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8011b0a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8011b0e:	6803      	ldr	r3, [r0, #0]
 8011b10:	a903      	add	r1, sp, #12
 8011b12:	685b      	ldr	r3, [r3, #4]
 8011b14:	4798      	blx	r3
 8011b16:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8011b18:	b00d      	add	sp, #52	; 0x34
 8011b1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011b1c:	20013816 	.word	0x20013816

08011b20 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8011b20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011b24:	b08c      	sub	sp, #48	; 0x30
 8011b26:	461e      	mov	r6, r3
 8011b28:	466d      	mov	r5, sp
 8011b2a:	2300      	movs	r3, #0
 8011b2c:	e885 0006 	stmia.w	r5, {r1, r2}
 8011b30:	9306      	str	r3, [sp, #24]
 8011b32:	6803      	ldr	r3, [r0, #0]
 8011b34:	f8bd 7000 	ldrh.w	r7, [sp]
 8011b38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011b3a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8011b3e:	2501      	movs	r5, #1
 8011b40:	9503      	str	r5, [sp, #12]
 8011b42:	4604      	mov	r4, r0
 8011b44:	4798      	blx	r3
 8011b46:	4642      	mov	r2, r8
 8011b48:	4639      	mov	r1, r7
 8011b4a:	4603      	mov	r3, r0
 8011b4c:	4620      	mov	r0, r4
 8011b4e:	f7ff ff47 	bl	80119e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011b52:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011b56:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011b5a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011b5e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011b62:	4b11      	ldr	r3, [pc, #68]	; (8011ba8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8011b64:	9004      	str	r0, [sp, #16]
 8011b66:	881b      	ldrh	r3, [r3, #0]
 8011b68:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8011b6c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011b6e:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8011b72:	9607      	str	r6, [sp, #28]
 8011b74:	f7f2 fcae 	bl	80044d4 <_ZN8touchgfx3HAL3lcdEv>
 8011b78:	6803      	ldr	r3, [r0, #0]
 8011b7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011b7c:	4798      	blx	r3
 8011b7e:	23ff      	movs	r3, #255	; 0xff
 8011b80:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8011b84:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8011b88:	6860      	ldr	r0, [r4, #4]
 8011b8a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8011b8e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8011b92:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8011b96:	6803      	ldr	r3, [r0, #0]
 8011b98:	a903      	add	r1, sp, #12
 8011b9a:	685b      	ldr	r3, [r3, #4]
 8011b9c:	4798      	blx	r3
 8011b9e:	4630      	mov	r0, r6
 8011ba0:	b00c      	add	sp, #48	; 0x30
 8011ba2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011ba6:	bf00      	nop
 8011ba8:	20013816 	.word	0x20013816

08011bac <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8011bac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011bae:	b085      	sub	sp, #20
 8011bb0:	ac02      	add	r4, sp, #8
 8011bb2:	e884 0006 	stmia.w	r4, {r1, r2}
 8011bb6:	4605      	mov	r5, r0
 8011bb8:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8011bbc:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8011bc0:	f7ff fde6 	bl	8011790 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011bc4:	463a      	mov	r2, r7
 8011bc6:	4603      	mov	r3, r0
 8011bc8:	4631      	mov	r1, r6
 8011bca:	4628      	mov	r0, r5
 8011bcc:	f7ff ff08 	bl	80119e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011bd0:	4a05      	ldr	r2, [pc, #20]	; (8011be8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8011bd2:	682b      	ldr	r3, [r5, #0]
 8011bd4:	8812      	ldrh	r2, [r2, #0]
 8011bd6:	9200      	str	r2, [sp, #0]
 8011bd8:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8011bda:	e894 0006 	ldmia.w	r4, {r1, r2}
 8011bde:	4603      	mov	r3, r0
 8011be0:	4628      	mov	r0, r5
 8011be2:	47b0      	blx	r6
 8011be4:	b005      	add	sp, #20
 8011be6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011be8:	20013816 	.word	0x20013816

08011bec <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8011bec:	b570      	push	{r4, r5, r6, lr}
 8011bee:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8011bf2:	4604      	mov	r4, r0
 8011bf4:	b19b      	cbz	r3, 8011c1e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8011bf6:	2002      	movs	r0, #2
 8011bf8:	f7f0 f8ee 	bl	8001dd8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8011bfc:	2300      	movs	r3, #0
 8011bfe:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8011c02:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8011c06:	6823      	ldr	r3, [r4, #0]
 8011c08:	4620      	mov	r0, r4
 8011c0a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8011c0e:	f7ff fdbf 	bl	8011790 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011c12:	462b      	mov	r3, r5
 8011c14:	4601      	mov	r1, r0
 8011c16:	4620      	mov	r0, r4
 8011c18:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011c1c:	4718      	bx	r3
 8011c1e:	bd70      	pop	{r4, r5, r6, pc}

08011c20 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8011c20:	b538      	push	{r3, r4, r5, lr}
 8011c22:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8011c26:	428b      	cmp	r3, r1
 8011c28:	4604      	mov	r4, r0
 8011c2a:	460d      	mov	r5, r1
 8011c2c:	d006      	beq.n	8011c3c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8011c2e:	6803      	ldr	r3, [r0, #0]
 8011c30:	b929      	cbnz	r1, 8011c3e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8011c32:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8011c36:	4798      	blx	r3
 8011c38:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8011c3c:	bd38      	pop	{r3, r4, r5, pc}
 8011c3e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8011c42:	e7f8      	b.n	8011c36 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08011c44 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8011c44:	b510      	push	{r4, lr}
 8011c46:	4b0d      	ldr	r3, [pc, #52]	; (8011c7c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8011c48:	781b      	ldrb	r3, [r3, #0]
 8011c4a:	4604      	mov	r4, r0
 8011c4c:	b95b      	cbnz	r3, 8011c66 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011c4e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8011c52:	2b02      	cmp	r3, #2
 8011c54:	d007      	beq.n	8011c66 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011c56:	6840      	ldr	r0, [r0, #4]
 8011c58:	f000 f92c 	bl	8011eb4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8011c5c:	b118      	cbz	r0, 8011c66 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011c5e:	6862      	ldr	r2, [r4, #4]
 8011c60:	7a53      	ldrb	r3, [r2, #9]
 8011c62:	2b00      	cmp	r3, #0
 8011c64:	d0fc      	beq.n	8011c60 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8011c66:	f7f0 f9ef 	bl	8002048 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011c6a:	4620      	mov	r0, r4
 8011c6c:	2100      	movs	r1, #0
 8011c6e:	f7ff ffd7 	bl	8011c20 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011c72:	4620      	mov	r0, r4
 8011c74:	f7ff fd8c 	bl	8011790 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011c78:	bd10      	pop	{r4, pc}
 8011c7a:	bf00      	nop
 8011c7c:	2001381a 	.word	0x2001381a

08011c80 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8011c80:	b570      	push	{r4, r5, r6, lr}
 8011c82:	4604      	mov	r4, r0
 8011c84:	6803      	ldr	r3, [r0, #0]
 8011c86:	b919      	cbnz	r1, 8011c90 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8011c88:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011c8a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011c8e:	4718      	bx	r3
 8011c90:	2200      	movs	r2, #0
 8011c92:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 8011c96:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 8011c9a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011c9c:	4798      	blx	r3
 8011c9e:	6863      	ldr	r3, [r4, #4]
 8011ca0:	2101      	movs	r1, #1
 8011ca2:	4605      	mov	r5, r0
 8011ca4:	7299      	strb	r1, [r3, #10]
 8011ca6:	4620      	mov	r0, r4
 8011ca8:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 8011cac:	f7ff ffb8 	bl	8011c20 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011cb0:	4628      	mov	r0, r5
 8011cb2:	bd70      	pop	{r4, r5, r6, pc}

08011cb4 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8011cb4:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8011cb8:	1a13      	subs	r3, r2, r0
 8011cba:	4258      	negs	r0, r3
 8011cbc:	4158      	adcs	r0, r3
 8011cbe:	4770      	bx	lr

08011cc0 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8011cc0:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8011cc4:	1a9b      	subs	r3, r3, r2
 8011cc6:	2b00      	cmp	r3, #0
 8011cc8:	bfdc      	itt	le
 8011cca:	6882      	ldrle	r2, [r0, #8]
 8011ccc:	189b      	addle	r3, r3, r2
 8011cce:	2b01      	cmp	r3, #1
 8011cd0:	bfcc      	ite	gt
 8011cd2:	2000      	movgt	r0, #0
 8011cd4:	2001      	movle	r0, #1
 8011cd6:	4770      	bx	lr

08011cd8 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8011cd8:	6902      	ldr	r2, [r0, #16]
 8011cda:	6843      	ldr	r3, [r0, #4]
 8011cdc:	2024      	movs	r0, #36	; 0x24
 8011cde:	fb00 3002 	mla	r0, r0, r2, r3
 8011ce2:	4770      	bx	lr

08011ce4 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8011ce4:	6803      	ldr	r3, [r0, #0]
 8011ce6:	691b      	ldr	r3, [r3, #16]
 8011ce8:	4718      	bx	r3

08011cea <_ZN8touchgfx13DMA_Interface7executeEv>:
 8011cea:	b570      	push	{r4, r5, r6, lr}
 8011cec:	2301      	movs	r3, #1
 8011cee:	7203      	strb	r3, [r0, #8]
 8011cf0:	4604      	mov	r4, r0
 8011cf2:	6840      	ldr	r0, [r0, #4]
 8011cf4:	6803      	ldr	r3, [r0, #0]
 8011cf6:	699b      	ldr	r3, [r3, #24]
 8011cf8:	4798      	blx	r3
 8011cfa:	6803      	ldr	r3, [r0, #0]
 8011cfc:	2b40      	cmp	r3, #64	; 0x40
 8011cfe:	4605      	mov	r5, r0
 8011d00:	d00c      	beq.n	8011d1c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011d02:	d810      	bhi.n	8011d26 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8011d04:	2b04      	cmp	r3, #4
 8011d06:	d01d      	beq.n	8011d44 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8011d08:	d804      	bhi.n	8011d14 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8011d0a:	2b01      	cmp	r3, #1
 8011d0c:	d006      	beq.n	8011d1c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011d0e:	2b02      	cmp	r3, #2
 8011d10:	d02c      	beq.n	8011d6c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8011d12:	bd70      	pop	{r4, r5, r6, pc}
 8011d14:	2b08      	cmp	r3, #8
 8011d16:	d01d      	beq.n	8011d54 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8011d18:	2b20      	cmp	r3, #32
 8011d1a:	d1fa      	bne.n	8011d12 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8011d1c:	6823      	ldr	r3, [r4, #0]
 8011d1e:	4620      	mov	r0, r4
 8011d20:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011d22:	4798      	blx	r3
 8011d24:	e013      	b.n	8011d4e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8011d26:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8011d2a:	d0f7      	beq.n	8011d1c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011d2c:	d804      	bhi.n	8011d38 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8011d2e:	2b80      	cmp	r3, #128	; 0x80
 8011d30:	d0f4      	beq.n	8011d1c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011d32:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8011d36:	e7f0      	b.n	8011d1a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8011d38:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8011d3c:	d0ee      	beq.n	8011d1c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011d3e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8011d42:	e7e5      	b.n	8011d10 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8011d44:	6823      	ldr	r3, [r4, #0]
 8011d46:	7f01      	ldrb	r1, [r0, #28]
 8011d48:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011d4a:	4620      	mov	r0, r4
 8011d4c:	4798      	blx	r3
 8011d4e:	6823      	ldr	r3, [r4, #0]
 8011d50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011d52:	e006      	b.n	8011d62 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8011d54:	6823      	ldr	r3, [r4, #0]
 8011d56:	7f01      	ldrb	r1, [r0, #28]
 8011d58:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011d5a:	4620      	mov	r0, r4
 8011d5c:	4798      	blx	r3
 8011d5e:	6823      	ldr	r3, [r4, #0]
 8011d60:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011d62:	4629      	mov	r1, r5
 8011d64:	4620      	mov	r0, r4
 8011d66:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011d6a:	4718      	bx	r3
 8011d6c:	6823      	ldr	r3, [r4, #0]
 8011d6e:	4620      	mov	r0, r4
 8011d70:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011d72:	4798      	blx	r3
 8011d74:	e7f3      	b.n	8011d5e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08011d76 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8011d76:	4770      	bx	lr

08011d78 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8011d78:	4770      	bx	lr

08011d7a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8011d7a:	4770      	bx	lr

08011d7c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8011d7c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8011d80:	1ad2      	subs	r2, r2, r3
 8011d82:	2a00      	cmp	r2, #0
 8011d84:	b510      	push	{r4, lr}
 8011d86:	bfdc      	itt	le
 8011d88:	6884      	ldrle	r4, [r0, #8]
 8011d8a:	1912      	addle	r2, r2, r4
 8011d8c:	2a01      	cmp	r2, #1
 8011d8e:	dd16      	ble.n	8011dbe <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8011d90:	6842      	ldr	r2, [r0, #4]
 8011d92:	2424      	movs	r4, #36	; 0x24
 8011d94:	fb04 2303 	mla	r3, r4, r3, r2
 8011d98:	f101 0220 	add.w	r2, r1, #32
 8011d9c:	f851 4b04 	ldr.w	r4, [r1], #4
 8011da0:	f843 4b04 	str.w	r4, [r3], #4
 8011da4:	4291      	cmp	r1, r2
 8011da6:	d1f9      	bne.n	8011d9c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8011da8:	780a      	ldrb	r2, [r1, #0]
 8011daa:	701a      	strb	r2, [r3, #0]
 8011dac:	68c3      	ldr	r3, [r0, #12]
 8011dae:	6882      	ldr	r2, [r0, #8]
 8011db0:	f3bf 8f5b 	dmb	ish
 8011db4:	3301      	adds	r3, #1
 8011db6:	429a      	cmp	r2, r3
 8011db8:	bfd8      	it	le
 8011dba:	1a9b      	suble	r3, r3, r2
 8011dbc:	60c3      	str	r3, [r0, #12]
 8011dbe:	bd10      	pop	{r4, pc}

08011dc0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8011dc0:	6903      	ldr	r3, [r0, #16]
 8011dc2:	6882      	ldr	r2, [r0, #8]
 8011dc4:	f3bf 8f5b 	dmb	ish
 8011dc8:	3301      	adds	r3, #1
 8011dca:	429a      	cmp	r2, r3
 8011dcc:	bfd8      	it	le
 8011dce:	1a9b      	suble	r3, r3, r2
 8011dd0:	6103      	str	r3, [r0, #16]
 8011dd2:	4770      	bx	lr

08011dd4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8011dd4:	b570      	push	{r4, r5, r6, lr}
 8011dd6:	4604      	mov	r4, r0
 8011dd8:	460e      	mov	r6, r1
 8011dda:	6860      	ldr	r0, [r4, #4]
 8011ddc:	6803      	ldr	r3, [r0, #0]
 8011dde:	685b      	ldr	r3, [r3, #4]
 8011de0:	4798      	blx	r3
 8011de2:	2800      	cmp	r0, #0
 8011de4:	d1f9      	bne.n	8011dda <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8011de6:	4d0d      	ldr	r5, [pc, #52]	; (8011e1c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8011de8:	6828      	ldr	r0, [r5, #0]
 8011dea:	6803      	ldr	r3, [r0, #0]
 8011dec:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011dee:	4798      	blx	r3
 8011df0:	f7f0 f938 	bl	8002064 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8011df4:	6828      	ldr	r0, [r5, #0]
 8011df6:	2101      	movs	r1, #1
 8011df8:	f7ff ff12 	bl	8011c20 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011dfc:	6860      	ldr	r0, [r4, #4]
 8011dfe:	6803      	ldr	r3, [r0, #0]
 8011e00:	4631      	mov	r1, r6
 8011e02:	689b      	ldr	r3, [r3, #8]
 8011e04:	4798      	blx	r3
 8011e06:	6823      	ldr	r3, [r4, #0]
 8011e08:	4620      	mov	r0, r4
 8011e0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011e0c:	4798      	blx	r3
 8011e0e:	6828      	ldr	r0, [r5, #0]
 8011e10:	6803      	ldr	r3, [r0, #0]
 8011e12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011e16:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8011e18:	4718      	bx	r3
 8011e1a:	bf00      	nop
 8011e1c:	2001381c 	.word	0x2001381c

08011e20 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8011e20:	b508      	push	{r3, lr}
 8011e22:	f7f0 f911 	bl	8002048 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011e26:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011e2a:	f7f0 b915 	b.w	8002058 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08011e2e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8011e2e:	b510      	push	{r4, lr}
 8011e30:	2114      	movs	r1, #20
 8011e32:	4604      	mov	r4, r0
 8011e34:	f018 fbc9 	bl	802a5ca <_ZdlPvj>
 8011e38:	4620      	mov	r0, r4
 8011e3a:	bd10      	pop	{r4, pc}

08011e3c <_ZN8touchgfx13DMA_Interface5startEv>:
 8011e3c:	b510      	push	{r4, lr}
 8011e3e:	4604      	mov	r4, r0
 8011e40:	6840      	ldr	r0, [r0, #4]
 8011e42:	6803      	ldr	r3, [r0, #0]
 8011e44:	681b      	ldr	r3, [r3, #0]
 8011e46:	4798      	blx	r3
 8011e48:	b948      	cbnz	r0, 8011e5e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011e4a:	7a63      	ldrb	r3, [r4, #9]
 8011e4c:	b13b      	cbz	r3, 8011e5e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011e4e:	7a23      	ldrb	r3, [r4, #8]
 8011e50:	b92b      	cbnz	r3, 8011e5e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011e52:	6823      	ldr	r3, [r4, #0]
 8011e54:	4620      	mov	r0, r4
 8011e56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011e58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011e5c:	4718      	bx	r3
 8011e5e:	bd10      	pop	{r4, pc}

08011e60 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8011e60:	b570      	push	{r4, r5, r6, lr}
 8011e62:	4604      	mov	r4, r0
 8011e64:	6840      	ldr	r0, [r0, #4]
 8011e66:	6803      	ldr	r3, [r0, #0]
 8011e68:	681b      	ldr	r3, [r3, #0]
 8011e6a:	4798      	blx	r3
 8011e6c:	4605      	mov	r5, r0
 8011e6e:	b930      	cbnz	r0, 8011e7e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011e70:	7a23      	ldrb	r3, [r4, #8]
 8011e72:	b123      	cbz	r3, 8011e7e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011e74:	6860      	ldr	r0, [r4, #4]
 8011e76:	6803      	ldr	r3, [r0, #0]
 8011e78:	695b      	ldr	r3, [r3, #20]
 8011e7a:	4798      	blx	r3
 8011e7c:	7225      	strb	r5, [r4, #8]
 8011e7e:	6860      	ldr	r0, [r4, #4]
 8011e80:	6803      	ldr	r3, [r0, #0]
 8011e82:	681b      	ldr	r3, [r3, #0]
 8011e84:	4798      	blx	r3
 8011e86:	b928      	cbnz	r0, 8011e94 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8011e88:	6823      	ldr	r3, [r4, #0]
 8011e8a:	4620      	mov	r0, r4
 8011e8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011e8e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011e92:	4718      	bx	r3
 8011e94:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011e98:	f7f0 b8ec 	b.w	8002074 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08011e9c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8011e9c:	b510      	push	{r4, lr}
 8011e9e:	4c04      	ldr	r4, [pc, #16]	; (8011eb0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8011ea0:	6082      	str	r2, [r0, #8]
 8011ea2:	2200      	movs	r2, #0
 8011ea4:	e9c0 4100 	strd	r4, r1, [r0]
 8011ea8:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8011eac:	bd10      	pop	{r4, pc}
 8011eae:	bf00      	nop
 8011eb0:	0802efe4 	.word	0x0802efe4

08011eb4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8011eb4:	6840      	ldr	r0, [r0, #4]
 8011eb6:	6803      	ldr	r3, [r0, #0]
 8011eb8:	681b      	ldr	r3, [r3, #0]
 8011eba:	4718      	bx	r3

08011ebc <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8011ebc:	4b06      	ldr	r3, [pc, #24]	; (8011ed8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 8011ebe:	60c1      	str	r1, [r0, #12]
 8011ec0:	094a      	lsrs	r2, r1, #5
 8011ec2:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8011ec6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011eca:	4313      	orrs	r3, r2
 8011ecc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8011ed0:	4319      	orrs	r1, r3
 8011ed2:	8201      	strh	r1, [r0, #16]
 8011ed4:	4770      	bx	lr
 8011ed6:	bf00      	nop
 8011ed8:	fffff800 	.word	0xfffff800

08011edc <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8011edc:	f1a0 0008 	sub.w	r0, r0, #8
 8011ee0:	e7ec      	b.n	8011ebc <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8011ee2:	bf00      	nop

08011ee4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8011ee4:	b508      	push	{r3, lr}
 8011ee6:	4b05      	ldr	r3, [pc, #20]	; (8011efc <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8011ee8:	6818      	ldr	r0, [r3, #0]
 8011eea:	6803      	ldr	r3, [r0, #0]
 8011eec:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8011ef0:	4798      	blx	r3
 8011ef2:	1e43      	subs	r3, r0, #1
 8011ef4:	4258      	negs	r0, r3
 8011ef6:	4158      	adcs	r0, r3
 8011ef8:	bd08      	pop	{r3, pc}
 8011efa:	bf00      	nop
 8011efc:	2001381c 	.word	0x2001381c

08011f00 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8011f00:	4770      	bx	lr

08011f02 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8011f02:	3808      	subs	r0, #8
 8011f04:	4770      	bx	lr

08011f06 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8011f06:	b430      	push	{r4, r5}
 8011f08:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8011f0c:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8011f10:	8a02      	ldrh	r2, [r0, #16]
 8011f12:	9202      	str	r2, [sp, #8]
 8011f14:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8011f18:	68c2      	ldr	r2, [r0, #12]
 8011f1a:	4629      	mov	r1, r5
 8011f1c:	4620      	mov	r0, r4
 8011f1e:	bc30      	pop	{r4, r5}
 8011f20:	f7f0 bb6c 	b.w	80025fc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08011f24 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8011f24:	f7f0 bb68 	b.w	80025f8 <_ZN8touchgfx5paint8tearDownEv>

08011f28 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8011f28:	b510      	push	{r4, lr}
 8011f2a:	2114      	movs	r1, #20
 8011f2c:	4604      	mov	r4, r0
 8011f2e:	f018 fb4c 	bl	802a5ca <_ZdlPvj>
 8011f32:	4620      	mov	r0, r4
 8011f34:	bd10      	pop	{r4, pc}

08011f36 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8011f36:	f1a0 0008 	sub.w	r0, r0, #8
 8011f3a:	e7f5      	b.n	8011f28 <_ZN8touchgfx13PainterRGB565D0Ev>

08011f3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8011f3c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011f3e:	6803      	ldr	r3, [r0, #0]
 8011f40:	460d      	mov	r5, r1
 8011f42:	4604      	mov	r4, r0
 8011f44:	4601      	mov	r1, r0
 8011f46:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011f48:	a802      	add	r0, sp, #8
 8011f4a:	4798      	blx	r3
 8011f4c:	6828      	ldr	r0, [r5, #0]
 8011f4e:	6869      	ldr	r1, [r5, #4]
 8011f50:	466b      	mov	r3, sp
 8011f52:	c303      	stmia	r3!, {r0, r1}
 8011f54:	4668      	mov	r0, sp
 8011f56:	4619      	mov	r1, r3
 8011f58:	f7fe fb30 	bl	80105bc <_ZN8touchgfx4RectaNERKS0_>
 8011f5c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8011f5e:	b188      	cbz	r0, 8011f84 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011f60:	6803      	ldr	r3, [r0, #0]
 8011f62:	1d21      	adds	r1, r4, #4
 8011f64:	68db      	ldr	r3, [r3, #12]
 8011f66:	4798      	blx	r3
 8011f68:	b160      	cbz	r0, 8011f84 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011f6a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8011f6e:	2b00      	cmp	r3, #0
 8011f70:	dd08      	ble.n	8011f84 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011f72:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8011f76:	2d00      	cmp	r5, #0
 8011f78:	dd04      	ble.n	8011f84 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011f7a:	4a2b      	ldr	r2, [pc, #172]	; (8012028 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8011f7c:	7812      	ldrb	r2, [r2, #0]
 8011f7e:	b11a      	cbz	r2, 8011f88 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8011f80:	2a01      	cmp	r2, #1
 8011f82:	d029      	beq.n	8011fd8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8011f84:	b004      	add	sp, #16
 8011f86:	bd70      	pop	{r4, r5, r6, pc}
 8011f88:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011f8c:	441d      	add	r5, r3
 8011f8e:	b2ad      	uxth	r5, r5
 8011f90:	b22e      	sxth	r6, r5
 8011f92:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8011f96:	42b3      	cmp	r3, r6
 8011f98:	daf4      	bge.n	8011f84 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011f9a:	6823      	ldr	r3, [r4, #0]
 8011f9c:	4669      	mov	r1, sp
 8011f9e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011fa0:	4620      	mov	r0, r4
 8011fa2:	4798      	blx	r3
 8011fa4:	b940      	cbnz	r0, 8011fb8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8011fa6:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8011faa:	2b01      	cmp	r3, #1
 8011fac:	d004      	beq.n	8011fb8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8011fae:	3301      	adds	r3, #1
 8011fb0:	105b      	asrs	r3, r3, #1
 8011fb2:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011fb6:	e7f0      	b.n	8011f9a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8011fb8:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8011fbc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011fc0:	4413      	add	r3, r2
 8011fc2:	b29b      	uxth	r3, r3
 8011fc4:	441a      	add	r2, r3
 8011fc6:	b212      	sxth	r2, r2
 8011fc8:	4296      	cmp	r6, r2
 8011fca:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011fce:	dae0      	bge.n	8011f92 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011fd0:	1aeb      	subs	r3, r5, r3
 8011fd2:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011fd6:	e7dc      	b.n	8011f92 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011fd8:	f8bd 5000 	ldrh.w	r5, [sp]
 8011fdc:	441d      	add	r5, r3
 8011fde:	b2ad      	uxth	r5, r5
 8011fe0:	b22e      	sxth	r6, r5
 8011fe2:	f9bd 3000 	ldrsh.w	r3, [sp]
 8011fe6:	42b3      	cmp	r3, r6
 8011fe8:	dacc      	bge.n	8011f84 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011fea:	6823      	ldr	r3, [r4, #0]
 8011fec:	4669      	mov	r1, sp
 8011fee:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011ff0:	4620      	mov	r0, r4
 8011ff2:	4798      	blx	r3
 8011ff4:	b940      	cbnz	r0, 8012008 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8011ff6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8011ffa:	2b01      	cmp	r3, #1
 8011ffc:	d004      	beq.n	8012008 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8011ffe:	3301      	adds	r3, #1
 8012000:	105b      	asrs	r3, r3, #1
 8012002:	f8ad 3004 	strh.w	r3, [sp, #4]
 8012006:	e7f0      	b.n	8011fea <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8012008:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 801200c:	f8bd 3000 	ldrh.w	r3, [sp]
 8012010:	4413      	add	r3, r2
 8012012:	b29b      	uxth	r3, r3
 8012014:	441a      	add	r2, r3
 8012016:	b212      	sxth	r2, r2
 8012018:	4296      	cmp	r6, r2
 801201a:	f8ad 3000 	strh.w	r3, [sp]
 801201e:	dae0      	bge.n	8011fe2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8012020:	1aeb      	subs	r3, r5, r3
 8012022:	f8ad 3004 	strh.w	r3, [sp, #4]
 8012026:	e7dc      	b.n	8011fe2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8012028:	20013814 	.word	0x20013814

0801202c <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 801202c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801202e:	6803      	ldr	r3, [r0, #0]
 8012030:	4604      	mov	r4, r0
 8012032:	4601      	mov	r1, r0
 8012034:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8012036:	4668      	mov	r0, sp
 8012038:	4798      	blx	r3
 801203a:	2100      	movs	r1, #0
 801203c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8012040:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012044:	9102      	str	r1, [sp, #8]
 8012046:	4668      	mov	r0, sp
 8012048:	a902      	add	r1, sp, #8
 801204a:	f8ad 200c 	strh.w	r2, [sp, #12]
 801204e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8012052:	f7fe fab3 	bl	80105bc <_ZN8touchgfx4RectaNERKS0_>
 8012056:	6823      	ldr	r3, [r4, #0]
 8012058:	4669      	mov	r1, sp
 801205a:	691b      	ldr	r3, [r3, #16]
 801205c:	4620      	mov	r0, r4
 801205e:	4798      	blx	r3
 8012060:	b004      	add	sp, #16
 8012062:	bd10      	pop	{r4, pc}

08012064 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8012064:	2101      	movs	r1, #1
 8012066:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801206a:	490b      	ldr	r1, [pc, #44]	; (8012098 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 801206c:	6001      	str	r1, [r0, #0]
 801206e:	2200      	movs	r2, #0
 8012070:	21ff      	movs	r1, #255	; 0xff
 8012072:	8082      	strh	r2, [r0, #4]
 8012074:	80c2      	strh	r2, [r0, #6]
 8012076:	8102      	strh	r2, [r0, #8]
 8012078:	8142      	strh	r2, [r0, #10]
 801207a:	8182      	strh	r2, [r0, #12]
 801207c:	81c2      	strh	r2, [r0, #14]
 801207e:	8202      	strh	r2, [r0, #16]
 8012080:	8242      	strh	r2, [r0, #18]
 8012082:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012086:	61c2      	str	r2, [r0, #28]
 8012088:	8402      	strh	r2, [r0, #32]
 801208a:	8442      	strh	r2, [r0, #34]	; 0x22
 801208c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8012090:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8012094:	6282      	str	r2, [r0, #40]	; 0x28
 8012096:	4770      	bx	lr
 8012098:	0802f040 	.word	0x0802f040

0801209c <_ZNK8touchgfx4Line14getMinimalRectEv>:
 801209c:	f101 0364 	add.w	r3, r1, #100	; 0x64
 80120a0:	4602      	mov	r2, r0
 80120a2:	cb03      	ldmia	r3!, {r0, r1}
 80120a4:	6010      	str	r0, [r2, #0]
 80120a6:	6051      	str	r1, [r2, #4]
 80120a8:	4610      	mov	r0, r2
 80120aa:	4770      	bx	lr

080120ac <_ZN8touchgfx4LineD1Ev>:
 80120ac:	4770      	bx	lr

080120ae <_ZN8touchgfx4LineD0Ev>:
 80120ae:	b510      	push	{r4, lr}
 80120b0:	2170      	movs	r1, #112	; 0x70
 80120b2:	4604      	mov	r4, r0
 80120b4:	f018 fa89 	bl	802a5ca <_ZdlPvj>
 80120b8:	4620      	mov	r0, r4
 80120ba:	bd10      	pop	{r4, pc}

080120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 80120bc:	b507      	push	{r0, r1, r2, lr}
 80120be:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 80120c2:	ab01      	add	r3, sp, #4
 80120c4:	6809      	ldr	r1, [r1, #0]
 80120c6:	6800      	ldr	r0, [r0, #0]
 80120c8:	f005 fc80 	bl	80179cc <_ZN8touchgfx6muldivElllRl>
 80120cc:	b003      	add	sp, #12
 80120ce:	f85d fb04 	ldr.w	pc, [sp], #4

080120d2 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 80120d2:	6800      	ldr	r0, [r0, #0]
 80120d4:	2800      	cmp	r0, #0
 80120d6:	bfb9      	ittee	lt
 80120d8:	2320      	movlt	r3, #32
 80120da:	fb90 f0f3 	sdivlt	r0, r0, r3
 80120de:	301f      	addge	r0, #31
 80120e0:	1140      	asrge	r0, r0, #5
 80120e2:	4770      	bx	lr

080120e4 <_ZNK8touchgfx4Line17invalidateContentEv>:
 80120e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80120e8:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 80120ec:	b089      	sub	sp, #36	; 0x24
 80120ee:	4604      	mov	r4, r0
 80120f0:	b353      	cbz	r3, 8012148 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 80120f2:	6803      	ldr	r3, [r0, #0]
 80120f4:	4601      	mov	r1, r0
 80120f6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80120f8:	a802      	add	r0, sp, #8
 80120fa:	4798      	blx	r3
 80120fc:	2220      	movs	r2, #32
 80120fe:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8012102:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012104:	fb9a f0f2 	sdiv	r0, sl, r2
 8012108:	fb91 f5f2 	sdiv	r5, r1, r2
 801210c:	1b40      	subs	r0, r0, r5
 801210e:	2800      	cmp	r0, #0
 8012110:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8012112:	fb93 f6f2 	sdiv	r6, r3, r2
 8012116:	bfb8      	it	lt
 8012118:	4240      	neglt	r0, r0
 801211a:	0076      	lsls	r6, r6, #1
 801211c:	4286      	cmp	r6, r0
 801211e:	f8d4 b000 	ldr.w	fp, [r4]
 8012122:	dc0c      	bgt.n	801213e <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8012124:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8012126:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 801212a:	fb95 f0f2 	sdiv	r0, r5, r2
 801212e:	fb98 f7f2 	sdiv	r7, r8, r2
 8012132:	1bc0      	subs	r0, r0, r7
 8012134:	2800      	cmp	r0, #0
 8012136:	bfb8      	it	lt
 8012138:	4240      	neglt	r0, r0
 801213a:	4286      	cmp	r6, r0
 801213c:	dd07      	ble.n	801214e <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 801213e:	f8db 3010 	ldr.w	r3, [fp, #16]
 8012142:	a902      	add	r1, sp, #8
 8012144:	4620      	mov	r0, r4
 8012146:	4798      	blx	r3
 8012148:	b009      	add	sp, #36	; 0x24
 801214a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801214e:	3301      	adds	r3, #1
 8012150:	2002      	movs	r0, #2
 8012152:	f10d 0920 	add.w	r9, sp, #32
 8012156:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801215a:	4103      	asrs	r3, r0
 801215c:	f849 3d08 	str.w	r3, [r9, #-8]!
 8012160:	eb01 060a 	add.w	r6, r1, sl
 8012164:	eb08 0705 	add.w	r7, r8, r5
 8012168:	fb96 f6f0 	sdiv	r6, r6, r0
 801216c:	fb97 f7f0 	sdiv	r7, r7, r0
 8012170:	4648      	mov	r0, r9
 8012172:	9101      	str	r1, [sp, #4]
 8012174:	b236      	sxth	r6, r6
 8012176:	b23f      	sxth	r7, r7
 8012178:	fb96 f6f2 	sdiv	r6, r6, r2
 801217c:	fb97 f7f2 	sdiv	r7, r7, r2
 8012180:	f7ff ffa7 	bl	80120d2 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012184:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8012188:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 801218c:	9901      	ldr	r1, [sp, #4]
 801218e:	4293      	cmp	r3, r2
 8012190:	fa1f fe87 	uxth.w	lr, r7
 8012194:	fa1f fc86 	uxth.w	ip, r6
 8012198:	eba1 0a0a 	sub.w	sl, r1, sl
 801219c:	b280      	uxth	r0, r0
 801219e:	da54      	bge.n	801224a <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 80121a0:	ebac 0100 	sub.w	r1, ip, r0
 80121a4:	b289      	uxth	r1, r1
 80121a6:	4460      	add	r0, ip
 80121a8:	f1ba 0f00 	cmp.w	sl, #0
 80121ac:	b20e      	sxth	r6, r1
 80121ae:	b280      	uxth	r0, r0
 80121b0:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 80121b4:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 80121b8:	da29      	bge.n	801220e <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 80121ba:	eba8 0505 	sub.w	r5, r8, r5
 80121be:	2d00      	cmp	r5, #0
 80121c0:	da2a      	bge.n	8012218 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 80121c2:	fa1f f88a 	uxth.w	r8, sl
 80121c6:	eba0 0008 	sub.w	r0, r0, r8
 80121ca:	fa1f f58c 	uxth.w	r5, ip
 80121ce:	4443      	add	r3, r8
 80121d0:	f8ad 0014 	strh.w	r0, [sp, #20]
 80121d4:	1a59      	subs	r1, r3, r1
 80121d6:	ebae 0005 	sub.w	r0, lr, r5
 80121da:	f8ad a010 	strh.w	sl, [sp, #16]
 80121de:	f8ad c012 	strh.w	ip, [sp, #18]
 80121e2:	f8ad 0016 	strh.w	r0, [sp, #22]
 80121e6:	f8ad 6018 	strh.w	r6, [sp, #24]
 80121ea:	f8ad 701a 	strh.w	r7, [sp, #26]
 80121ee:	f8ad 101c 	strh.w	r1, [sp, #28]
 80121f2:	442a      	add	r2, r5
 80121f4:	eba2 0e0e 	sub.w	lr, r2, lr
 80121f8:	f8ad e01e 	strh.w	lr, [sp, #30]
 80121fc:	f8db 3010 	ldr.w	r3, [fp, #16]
 8012200:	a904      	add	r1, sp, #16
 8012202:	4620      	mov	r0, r4
 8012204:	4798      	blx	r3
 8012206:	6823      	ldr	r3, [r4, #0]
 8012208:	4649      	mov	r1, r9
 801220a:	691b      	ldr	r3, [r3, #16]
 801220c:	e79a      	b.n	8012144 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 801220e:	d003      	beq.n	8012218 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8012210:	eba8 0505 	sub.w	r5, r8, r5
 8012214:	2d00      	cmp	r5, #0
 8012216:	dcd4      	bgt.n	80121c2 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8012218:	fa1f f88a 	uxth.w	r8, sl
 801221c:	4443      	add	r3, r8
 801221e:	fa1f f58c 	uxth.w	r5, ip
 8012222:	1a59      	subs	r1, r3, r1
 8012224:	eba0 0008 	sub.w	r0, r0, r8
 8012228:	ebae 0305 	sub.w	r3, lr, r5
 801222c:	f8ad 6010 	strh.w	r6, [sp, #16]
 8012230:	f8ad c012 	strh.w	ip, [sp, #18]
 8012234:	f8ad 1014 	strh.w	r1, [sp, #20]
 8012238:	f8ad 3016 	strh.w	r3, [sp, #22]
 801223c:	f8ad a018 	strh.w	sl, [sp, #24]
 8012240:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012244:	f8ad 001c 	strh.w	r0, [sp, #28]
 8012248:	e7d3      	b.n	80121f2 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 801224a:	ebae 0100 	sub.w	r1, lr, r0
 801224e:	b289      	uxth	r1, r1
 8012250:	4470      	add	r0, lr
 8012252:	f1ba 0f00 	cmp.w	sl, #0
 8012256:	b20f      	sxth	r7, r1
 8012258:	b280      	uxth	r0, r0
 801225a:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 801225e:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8012262:	da20      	bge.n	80122a6 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8012264:	eba8 0505 	sub.w	r5, r8, r5
 8012268:	2d00      	cmp	r5, #0
 801226a:	da21      	bge.n	80122b0 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 801226c:	fa1f f88e 	uxth.w	r8, lr
 8012270:	fa1f f58a 	uxth.w	r5, sl
 8012274:	4443      	add	r3, r8
 8012276:	442a      	add	r2, r5
 8012278:	f8ad e010 	strh.w	lr, [sp, #16]
 801227c:	1b40      	subs	r0, r0, r5
 801227e:	ebac 0e08 	sub.w	lr, ip, r8
 8012282:	1a51      	subs	r1, r2, r1
 8012284:	eba3 0c0c 	sub.w	ip, r3, ip
 8012288:	f8ad a012 	strh.w	sl, [sp, #18]
 801228c:	f8ad e014 	strh.w	lr, [sp, #20]
 8012290:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012294:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012298:	f8ad 701a 	strh.w	r7, [sp, #26]
 801229c:	f8ad c01c 	strh.w	ip, [sp, #28]
 80122a0:	f8ad 101e 	strh.w	r1, [sp, #30]
 80122a4:	e7aa      	b.n	80121fc <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 80122a6:	d003      	beq.n	80122b0 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 80122a8:	eba8 0505 	sub.w	r5, r8, r5
 80122ac:	2d00      	cmp	r5, #0
 80122ae:	dcdd      	bgt.n	801226c <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 80122b0:	fa1f f58e 	uxth.w	r5, lr
 80122b4:	fa1f f88a 	uxth.w	r8, sl
 80122b8:	4442      	add	r2, r8
 80122ba:	442b      	add	r3, r5
 80122bc:	f8ad 7012 	strh.w	r7, [sp, #18]
 80122c0:	1a51      	subs	r1, r2, r1
 80122c2:	ebac 0705 	sub.w	r7, ip, r5
 80122c6:	eba0 0008 	sub.w	r0, r0, r8
 80122ca:	eba3 0c0c 	sub.w	ip, r3, ip
 80122ce:	f8ad e010 	strh.w	lr, [sp, #16]
 80122d2:	f8ad 7014 	strh.w	r7, [sp, #20]
 80122d6:	f8ad 1016 	strh.w	r1, [sp, #22]
 80122da:	f8ad 6018 	strh.w	r6, [sp, #24]
 80122de:	f8ad a01a 	strh.w	sl, [sp, #26]
 80122e2:	f8ad c01c 	strh.w	ip, [sp, #28]
 80122e6:	f8ad 001e 	strh.w	r0, [sp, #30]
 80122ea:	e787      	b.n	80121fc <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

080122ec <_ZN8touchgfx7CWRUtil4sineEi>:
 80122ec:	f44f 73b4 	mov.w	r3, #360	; 0x168
 80122f0:	fb90 f2f3 	sdiv	r2, r0, r3
 80122f4:	fb02 0013 	mls	r0, r2, r3, r0
 80122f8:	2800      	cmp	r0, #0
 80122fa:	bfb8      	it	lt
 80122fc:	18c0      	addlt	r0, r0, r3
 80122fe:	285a      	cmp	r0, #90	; 0x5a
 8012300:	4b09      	ldr	r3, [pc, #36]	; (8012328 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8012302:	dc02      	bgt.n	801230a <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8012304:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8012308:	4770      	bx	lr
 801230a:	28b4      	cmp	r0, #180	; 0xb4
 801230c:	dc02      	bgt.n	8012314 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 801230e:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8012312:	e7f7      	b.n	8012304 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8012314:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8012318:	bfd4      	ite	le
 801231a:	38b4      	suble	r0, #180	; 0xb4
 801231c:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8012320:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8012324:	4240      	negs	r0, r0
 8012326:	4770      	bx	lr
 8012328:	0802f10c 	.word	0x0802f10c

0801232c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 801232c:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8012330:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012332:	fb90 f2f3 	sdiv	r2, r0, r3
 8012336:	fb02 0013 	mls	r0, r2, r3, r0
 801233a:	2800      	cmp	r0, #0
 801233c:	bfb8      	it	lt
 801233e:	18c0      	addlt	r0, r0, r3
 8012340:	1144      	asrs	r4, r0, #5
 8012342:	f000 061f 	and.w	r6, r0, #31
 8012346:	4620      	mov	r0, r4
 8012348:	f7ff ffd0 	bl	80122ec <_ZN8touchgfx7CWRUtil4sineEi>
 801234c:	4605      	mov	r5, r0
 801234e:	b90e      	cbnz	r6, 8012354 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8012350:	b002      	add	sp, #8
 8012352:	bd70      	pop	{r4, r5, r6, pc}
 8012354:	1c60      	adds	r0, r4, #1
 8012356:	f7ff ffc9 	bl	80122ec <_ZN8touchgfx7CWRUtil4sineEi>
 801235a:	ab01      	add	r3, sp, #4
 801235c:	2220      	movs	r2, #32
 801235e:	4631      	mov	r1, r6
 8012360:	1b40      	subs	r0, r0, r5
 8012362:	f005 fb33 	bl	80179cc <_ZN8touchgfx6muldivElllRl>
 8012366:	4428      	add	r0, r5
 8012368:	e7f2      	b.n	8012350 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

0801236a <_ZN8touchgfx7CWRUtil5isqrtEm>:
 801236a:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 801236e:	bf2c      	ite	cs
 8012370:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8012374:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8012378:	2300      	movs	r3, #0
 801237a:	1899      	adds	r1, r3, r2
 801237c:	4288      	cmp	r0, r1
 801237e:	bf24      	itt	cs
 8012380:	1853      	addcs	r3, r2, r1
 8012382:	1a40      	subcs	r0, r0, r1
 8012384:	0892      	lsrs	r2, r2, #2
 8012386:	ea4f 0353 	mov.w	r3, r3, lsr #1
 801238a:	d1f6      	bne.n	801237a <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 801238c:	4618      	mov	r0, r3
 801238e:	4770      	bx	lr

08012390 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8012390:	b510      	push	{r4, lr}
 8012392:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8012396:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 801239a:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 801239e:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 80123a2:	13a4      	asrs	r4, r4, #14
 80123a4:	139b      	asrs	r3, r3, #14
 80123a6:	429c      	cmp	r4, r3
 80123a8:	bfb8      	it	lt
 80123aa:	461c      	movlt	r4, r3
 80123ac:	2c01      	cmp	r4, #1
 80123ae:	dd07      	ble.n	80123c0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 80123b0:	fb91 f1f4 	sdiv	r1, r1, r4
 80123b4:	fb90 f0f4 	sdiv	r0, r0, r4
 80123b8:	f7ff ffea 	bl	8012390 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80123bc:	4360      	muls	r0, r4
 80123be:	bd10      	pop	{r4, pc}
 80123c0:	4340      	muls	r0, r0
 80123c2:	fb01 0001 	mla	r0, r1, r1, r0
 80123c6:	f7ff ffd0 	bl	801236a <_ZN8touchgfx7CWRUtil5isqrtEm>
 80123ca:	e7f8      	b.n	80123be <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

080123cc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 80123cc:	2800      	cmp	r0, #0
 80123ce:	b508      	push	{r3, lr}
 80123d0:	da05      	bge.n	80123de <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 80123d2:	4240      	negs	r0, r0
 80123d4:	f7ff fffa 	bl	80123cc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80123d8:	4240      	negs	r0, r0
 80123da:	b240      	sxtb	r0, r0
 80123dc:	bd08      	pop	{r3, pc}
 80123de:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 80123e2:	dc11      	bgt.n	8012408 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 80123e4:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 80123e8:	dd09      	ble.n	80123fe <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 80123ea:	4340      	muls	r0, r0
 80123ec:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 80123f0:	f7ff ffbb 	bl	801236a <_ZN8touchgfx7CWRUtil5isqrtEm>
 80123f4:	f7ff ffea 	bl	80123cc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80123f8:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80123fc:	e7ed      	b.n	80123da <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 80123fe:	3003      	adds	r0, #3
 8012400:	10c0      	asrs	r0, r0, #3
 8012402:	4b02      	ldr	r3, [pc, #8]	; (801240c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8012404:	5618      	ldrsb	r0, [r3, r0]
 8012406:	e7e9      	b.n	80123dc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8012408:	2000      	movs	r0, #0
 801240a:	e7e7      	b.n	80123dc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 801240c:	0802f0b0 	.word	0x0802f0b0

08012410 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8012410:	4281      	cmp	r1, r0
 8012412:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012414:	460c      	mov	r4, r1
 8012416:	4615      	mov	r5, r2
 8012418:	dd07      	ble.n	801242a <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 801241a:	4601      	mov	r1, r0
 801241c:	4620      	mov	r0, r4
 801241e:	f7ff fff7 	bl	8012410 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012422:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8012426:	b003      	add	sp, #12
 8012428:	bd30      	pop	{r4, r5, pc}
 801242a:	f7ff ffb1 	bl	8012390 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801242e:	6028      	str	r0, [r5, #0]
 8012430:	2800      	cmp	r0, #0
 8012432:	d0f8      	beq.n	8012426 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8012434:	4602      	mov	r2, r0
 8012436:	ab01      	add	r3, sp, #4
 8012438:	f44f 6180 	mov.w	r1, #1024	; 0x400
 801243c:	4620      	mov	r0, r4
 801243e:	f005 fac5 	bl	80179cc <_ZN8touchgfx6muldivElllRl>
 8012442:	f7ff ffc3 	bl	80123cc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012446:	e7ee      	b.n	8012426 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08012448 <_ZN8touchgfx4LineC1Ev>:
 8012448:	b510      	push	{r4, lr}
 801244a:	4604      	mov	r4, r0
 801244c:	f7ff fe0a 	bl	8012064 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8012450:	4b0c      	ldr	r3, [pc, #48]	; (8012484 <_ZN8touchgfx4LineC1Ev+0x3c>)
 8012452:	6023      	str	r3, [r4, #0]
 8012454:	2220      	movs	r2, #32
 8012456:	2300      	movs	r3, #0
 8012458:	63e2      	str	r2, [r4, #60]	; 0x3c
 801245a:	2212      	movs	r2, #18
 801245c:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8012460:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8012464:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8012468:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 801246c:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8012470:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8012474:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8012478:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 801247c:	66e2      	str	r2, [r4, #108]	; 0x6c
 801247e:	60a3      	str	r3, [r4, #8]
 8012480:	4620      	mov	r0, r4
 8012482:	bd10      	pop	{r4, pc}
 8012484:	0802f1cc 	.word	0x0802f1cc

08012488 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8012488:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 801248c:	6b47      	ldr	r7, [r0, #52]	; 0x34
 801248e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012490:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8012492:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8012494:	1aff      	subs	r7, r7, r3
 8012496:	4604      	mov	r4, r0
 8012498:	eba5 0502 	sub.w	r5, r5, r2
 801249c:	d142      	bne.n	8012524 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 801249e:	b955      	cbnz	r5, 80124b6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 80124a0:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 80124a4:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 80124a8:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 80124ac:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 80124b0:	b002      	add	sp, #8
 80124b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80124b6:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 80124ba:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 80124be:	4629      	mov	r1, r5
 80124c0:	4642      	mov	r2, r8
 80124c2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80124c4:	f005 faa1 	bl	8017a0a <_ZN8touchgfx6muldivElll>
 80124c8:	2502      	movs	r5, #2
 80124ca:	4642      	mov	r2, r8
 80124cc:	fb90 f6f5 	sdiv	r6, r0, r5
 80124d0:	4639      	mov	r1, r7
 80124d2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80124d4:	f005 fa99 	bl	8017a0a <_ZN8touchgfx6muldivElll>
 80124d8:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 80124dc:	fb90 f5f5 	sdiv	r5, r0, r5
 80124e0:	f1b9 0f00 	cmp.w	r9, #0
 80124e4:	d067      	beq.n	80125b6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 80124e6:	f1b9 0f02 	cmp.w	r9, #2
 80124ea:	d878      	bhi.n	80125de <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 80124ec:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80124ee:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80124f0:	1b93      	subs	r3, r2, r6
 80124f2:	1b5b      	subs	r3, r3, r5
 80124f4:	6463      	str	r3, [r4, #68]	; 0x44
 80124f6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80124f8:	18e9      	adds	r1, r5, r3
 80124fa:	1b89      	subs	r1, r1, r6
 80124fc:	6561      	str	r1, [r4, #84]	; 0x54
 80124fe:	1b81      	subs	r1, r0, r6
 8012500:	4429      	add	r1, r5
 8012502:	64a1      	str	r1, [r4, #72]	; 0x48
 8012504:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8012506:	4430      	add	r0, r6
 8012508:	186f      	adds	r7, r5, r1
 801250a:	4432      	add	r2, r6
 801250c:	1b49      	subs	r1, r1, r5
 801250e:	4437      	add	r7, r6
 8012510:	4428      	add	r0, r5
 8012512:	4431      	add	r1, r6
 8012514:	1b52      	subs	r2, r2, r5
 8012516:	1b5b      	subs	r3, r3, r5
 8012518:	65a7      	str	r7, [r4, #88]	; 0x58
 801251a:	64e0      	str	r0, [r4, #76]	; 0x4c
 801251c:	65e1      	str	r1, [r4, #92]	; 0x5c
 801251e:	6522      	str	r2, [r4, #80]	; 0x50
 8012520:	1b9b      	subs	r3, r3, r6
 8012522:	e05b      	b.n	80125dc <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8012524:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8012528:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 801252c:	2d00      	cmp	r5, #0
 801252e:	d0c6      	beq.n	80124be <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8012530:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8012534:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8012538:	fb93 f2f8 	sdiv	r2, r3, r8
 801253c:	fb08 3312 	mls	r3, r8, r2, r3
 8012540:	b353      	cbz	r3, 8012598 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 8012542:	fb98 f2f3 	sdiv	r2, r8, r3
 8012546:	fb03 8812 	mls	r8, r3, r2, r8
 801254a:	f1b8 0f00 	cmp.w	r8, #0
 801254e:	d1f3      	bne.n	8012538 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8012550:	2b01      	cmp	r3, #1
 8012552:	bf1c      	itt	ne
 8012554:	fb95 f5f3 	sdivne	r5, r5, r3
 8012558:	fb97 f7f3 	sdivne	r7, r7, r3
 801255c:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8012560:	f24b 5104 	movw	r1, #46340	; 0xb504
 8012564:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8012568:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 801256c:	428b      	cmp	r3, r1
 801256e:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 8012572:	4608      	mov	r0, r1
 8012574:	dd01      	ble.n	801257a <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8012576:	428a      	cmp	r2, r1
 8012578:	dc10      	bgt.n	801259c <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 801257a:	fb90 f3f3 	sdiv	r3, r0, r3
 801257e:	fb90 f2f2 	sdiv	r2, r0, r2
 8012582:	4293      	cmp	r3, r2
 8012584:	bfa8      	it	ge
 8012586:	4613      	movge	r3, r2
 8012588:	435f      	muls	r7, r3
 801258a:	435d      	muls	r5, r3
 801258c:	4629      	mov	r1, r5
 801258e:	4638      	mov	r0, r7
 8012590:	f7ff fefe 	bl	8012390 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8012594:	4680      	mov	r8, r0
 8012596:	e792      	b.n	80124be <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8012598:	4643      	mov	r3, r8
 801259a:	e7d9      	b.n	8012550 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 801259c:	fb93 f3f1 	sdiv	r3, r3, r1
 80125a0:	fb92 f2f1 	sdiv	r2, r2, r1
 80125a4:	4293      	cmp	r3, r2
 80125a6:	bfcc      	ite	gt
 80125a8:	3301      	addgt	r3, #1
 80125aa:	1c53      	addle	r3, r2, #1
 80125ac:	fb97 f7f3 	sdiv	r7, r7, r3
 80125b0:	fb95 f5f3 	sdiv	r5, r5, r3
 80125b4:	e7ea      	b.n	801258c <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 80125b6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80125b8:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80125ba:	1b93      	subs	r3, r2, r6
 80125bc:	6463      	str	r3, [r4, #68]	; 0x44
 80125be:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80125c0:	18e9      	adds	r1, r5, r3
 80125c2:	6561      	str	r1, [r4, #84]	; 0x54
 80125c4:	1b81      	subs	r1, r0, r6
 80125c6:	64a1      	str	r1, [r4, #72]	; 0x48
 80125c8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80125ca:	4430      	add	r0, r6
 80125cc:	186f      	adds	r7, r5, r1
 80125ce:	4432      	add	r2, r6
 80125d0:	1b49      	subs	r1, r1, r5
 80125d2:	65a7      	str	r7, [r4, #88]	; 0x58
 80125d4:	64e0      	str	r0, [r4, #76]	; 0x4c
 80125d6:	65e1      	str	r1, [r4, #92]	; 0x5c
 80125d8:	6522      	str	r2, [r4, #80]	; 0x50
 80125da:	1b5b      	subs	r3, r3, r5
 80125dc:	6623      	str	r3, [r4, #96]	; 0x60
 80125de:	6c62      	ldr	r2, [r4, #68]	; 0x44
 80125e0:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80125e2:	9200      	str	r2, [sp, #0]
 80125e4:	9301      	str	r3, [sp, #4]
 80125e6:	f104 0148 	add.w	r1, r4, #72	; 0x48
 80125ea:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 80125ee:	680f      	ldr	r7, [r1, #0]
 80125f0:	9800      	ldr	r0, [sp, #0]
 80125f2:	42ba      	cmp	r2, r7
 80125f4:	bfa8      	it	ge
 80125f6:	463a      	movge	r2, r7
 80125f8:	4287      	cmp	r7, r0
 80125fa:	bfc8      	it	gt
 80125fc:	9700      	strgt	r7, [sp, #0]
 80125fe:	690f      	ldr	r7, [r1, #16]
 8012600:	9801      	ldr	r0, [sp, #4]
 8012602:	42bb      	cmp	r3, r7
 8012604:	bfa8      	it	ge
 8012606:	463b      	movge	r3, r7
 8012608:	3104      	adds	r1, #4
 801260a:	4287      	cmp	r7, r0
 801260c:	bfc8      	it	gt
 801260e:	9701      	strgt	r7, [sp, #4]
 8012610:	458c      	cmp	ip, r1
 8012612:	d1ec      	bne.n	80125ee <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 8012614:	4668      	mov	r0, sp
 8012616:	2720      	movs	r7, #32
 8012618:	fb92 f8f7 	sdiv	r8, r2, r7
 801261c:	fb93 f7f7 	sdiv	r7, r3, r7
 8012620:	f7ff fd57 	bl	80120d2 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012624:	4682      	mov	sl, r0
 8012626:	a801      	add	r0, sp, #4
 8012628:	f7ff fd53 	bl	80120d2 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801262c:	ebaa 0208 	sub.w	r2, sl, r8
 8012630:	1bc0      	subs	r0, r0, r7
 8012632:	f1b9 0f01 	cmp.w	r9, #1
 8012636:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 801263a:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 801263e:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 8012642:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 8012646:	f47f af33 	bne.w	80124b0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 801264a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 801264c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801264e:	1b83      	subs	r3, r0, r6
 8012650:	6463      	str	r3, [r4, #68]	; 0x44
 8012652:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012654:	18ea      	adds	r2, r5, r3
 8012656:	6562      	str	r2, [r4, #84]	; 0x54
 8012658:	1b8a      	subs	r2, r1, r6
 801265a:	64a2      	str	r2, [r4, #72]	; 0x48
 801265c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 801265e:	4431      	add	r1, r6
 8012660:	18af      	adds	r7, r5, r2
 8012662:	4406      	add	r6, r0
 8012664:	1b52      	subs	r2, r2, r5
 8012666:	1b5d      	subs	r5, r3, r5
 8012668:	65a7      	str	r7, [r4, #88]	; 0x58
 801266a:	64e1      	str	r1, [r4, #76]	; 0x4c
 801266c:	65e2      	str	r2, [r4, #92]	; 0x5c
 801266e:	6526      	str	r6, [r4, #80]	; 0x50
 8012670:	6625      	str	r5, [r4, #96]	; 0x60
 8012672:	e71d      	b.n	80124b0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08012674 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8012674:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012676:	428b      	cmp	r3, r1
 8012678:	d102      	bne.n	8012680 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 801267a:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801267c:	4293      	cmp	r3, r2
 801267e:	d003      	beq.n	8012688 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8012680:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 8012684:	f7ff bf00 	b.w	8012488 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8012688:	4770      	bx	lr

0801268a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 801268a:	6b43      	ldr	r3, [r0, #52]	; 0x34
 801268c:	428b      	cmp	r3, r1
 801268e:	d102      	bne.n	8012696 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8012690:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8012692:	4293      	cmp	r3, r2
 8012694:	d003      	beq.n	801269e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8012696:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 801269a:	f7ff bef5 	b.w	8012488 <_ZN8touchgfx4Line17updateCachedShapeEv>
 801269e:	4770      	bx	lr

080126a0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 80126a0:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 80126a4:	f7ff bef0 	b.w	8012488 <_ZN8touchgfx4Line17updateCachedShapeEv>

080126a8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 80126a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80126ac:	b0a0      	sub	sp, #128	; 0x80
 80126ae:	4604      	mov	r4, r0
 80126b0:	460a      	mov	r2, r1
 80126b2:	4601      	mov	r1, r0
 80126b4:	a804      	add	r0, sp, #16
 80126b6:	f015 f845 	bl	8027744 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 80126ba:	2300      	movs	r3, #0
 80126bc:	9301      	str	r3, [sp, #4]
 80126be:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80126c2:	2b01      	cmp	r3, #1
 80126c4:	d17c      	bne.n	80127c0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 80126c6:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80126c8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80126ca:	6d61      	ldr	r1, [r4, #84]	; 0x54
 80126cc:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80126ce:	1ac0      	subs	r0, r0, r3
 80126d0:	eba1 0102 	sub.w	r1, r1, r2
 80126d4:	d437      	bmi.n	8012746 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 80126d6:	2900      	cmp	r1, #0
 80126d8:	aa01      	add	r2, sp, #4
 80126da:	db2e      	blt.n	801273a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 80126dc:	f7ff fe98 	bl	8012410 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80126e0:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 80126e4:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80126e6:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80126e8:	a804      	add	r0, sp, #16
 80126ea:	f015 f9ab 	bl	8027a44 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80126ee:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80126f0:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80126f2:	a804      	add	r0, sp, #16
 80126f4:	f015 f9f3 	bl	8027ade <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80126f8:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80126fa:	2db3      	cmp	r5, #179	; 0xb3
 80126fc:	dc33      	bgt.n	8012766 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 80126fe:	eba6 0805 	sub.w	r8, r6, r5
 8012702:	4640      	mov	r0, r8
 8012704:	f7ff fdf2 	bl	80122ec <_ZN8touchgfx7CWRUtil4sineEi>
 8012708:	a902      	add	r1, sp, #8
 801270a:	9002      	str	r0, [sp, #8]
 801270c:	a801      	add	r0, sp, #4
 801270e:	f7ff fcd5 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012712:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012714:	1847      	adds	r7, r0, r1
 8012716:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 801271a:	f7ff fde7 	bl	80122ec <_ZN8touchgfx7CWRUtil4sineEi>
 801271e:	a903      	add	r1, sp, #12
 8012720:	9003      	str	r0, [sp, #12]
 8012722:	a801      	add	r0, sp, #4
 8012724:	f7ff fcca 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012728:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 801272a:	4639      	mov	r1, r7
 801272c:	1a12      	subs	r2, r2, r0
 801272e:	a804      	add	r0, sp, #16
 8012730:	f015 f9d5 	bl	8027ade <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012734:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8012736:	441d      	add	r5, r3
 8012738:	e7df      	b.n	80126fa <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 801273a:	4249      	negs	r1, r1
 801273c:	f7ff fe68 	bl	8012410 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012740:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8012744:	e7ce      	b.n	80126e4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012746:	2900      	cmp	r1, #0
 8012748:	f1c0 0000 	rsb	r0, r0, #0
 801274c:	aa01      	add	r2, sp, #4
 801274e:	db04      	blt.n	801275a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8012750:	f7ff fe5e 	bl	8012410 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012754:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8012758:	e7c4      	b.n	80126e4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801275a:	4249      	negs	r1, r1
 801275c:	f7ff fe58 	bl	8012410 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012760:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8012764:	e7be      	b.n	80126e4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012766:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8012768:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 801276a:	a804      	add	r0, sp, #16
 801276c:	f015 f9b7 	bl	8027ade <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012770:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8012772:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8012774:	a804      	add	r0, sp, #16
 8012776:	f015 f9b2 	bl	8027ade <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801277a:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 801277c:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8012780:	2d00      	cmp	r5, #0
 8012782:	dd31      	ble.n	80127e8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8012784:	eb05 0806 	add.w	r8, r5, r6
 8012788:	4640      	mov	r0, r8
 801278a:	f7ff fdaf 	bl	80122ec <_ZN8touchgfx7CWRUtil4sineEi>
 801278e:	a902      	add	r1, sp, #8
 8012790:	9002      	str	r0, [sp, #8]
 8012792:	a801      	add	r0, sp, #4
 8012794:	f7ff fc92 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012798:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 801279a:	1847      	adds	r7, r0, r1
 801279c:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 80127a0:	f7ff fda4 	bl	80122ec <_ZN8touchgfx7CWRUtil4sineEi>
 80127a4:	a903      	add	r1, sp, #12
 80127a6:	9003      	str	r0, [sp, #12]
 80127a8:	a801      	add	r0, sp, #4
 80127aa:	f7ff fc87 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80127ae:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80127b0:	4639      	mov	r1, r7
 80127b2:	1a12      	subs	r2, r2, r0
 80127b4:	a804      	add	r0, sp, #16
 80127b6:	f015 f992 	bl	8027ade <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80127ba:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 80127bc:	1aed      	subs	r5, r5, r3
 80127be:	e7df      	b.n	8012780 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 80127c0:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80127c2:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80127c4:	a804      	add	r0, sp, #16
 80127c6:	f015 f93d 	bl	8027a44 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80127ca:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80127cc:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80127ce:	a804      	add	r0, sp, #16
 80127d0:	f015 f985 	bl	8027ade <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80127d4:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80127d6:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80127d8:	a804      	add	r0, sp, #16
 80127da:	f015 f980 	bl	8027ade <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80127de:	6e22      	ldr	r2, [r4, #96]	; 0x60
 80127e0:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80127e2:	a804      	add	r0, sp, #16
 80127e4:	f015 f97b 	bl	8027ade <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80127e8:	21ff      	movs	r1, #255	; 0xff
 80127ea:	a804      	add	r0, sp, #16
 80127ec:	f015 f866 	bl	80278bc <_ZN8touchgfx6Canvas6renderEh>
 80127f0:	4b04      	ldr	r3, [pc, #16]	; (8012804 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 80127f2:	9304      	str	r3, [sp, #16]
 80127f4:	4604      	mov	r4, r0
 80127f6:	a80c      	add	r0, sp, #48	; 0x30
 80127f8:	f001 fa98 	bl	8013d2c <_ZN8touchgfx7OutlineD1Ev>
 80127fc:	4620      	mov	r0, r4
 80127fe:	b020      	add	sp, #128	; 0x80
 8012800:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012804:	0802fa78 	.word	0x0802fa78

08012808 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8012808:	2000      	movs	r0, #0
 801280a:	4770      	bx	lr

0801280c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 801280c:	4b07      	ldr	r3, [pc, #28]	; (801282c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 801280e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012810:	881b      	ldrh	r3, [r3, #0]
 8012812:	4293      	cmp	r3, r2
 8012814:	bf81      	itttt	hi
 8012816:	4b06      	ldrhi	r3, [pc, #24]	; (8012830 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8012818:	681b      	ldrhi	r3, [r3, #0]
 801281a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 801281e:	7858      	ldrbhi	r0, [r3, #1]
 8012820:	bf8c      	ite	hi
 8012822:	f000 0003 	andhi.w	r0, r0, #3
 8012826:	2000      	movls	r0, #0
 8012828:	4770      	bx	lr
 801282a:	bf00      	nop
 801282c:	20013878 	.word	0x20013878
 8012830:	20013874 	.word	0x20013874

08012834 <_ZN8touchgfx8TextAreaD1Ev>:
 8012834:	4770      	bx	lr
	...

08012838 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8012838:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801283c:	4b10      	ldr	r3, [pc, #64]	; (8012880 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 801283e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012840:	881b      	ldrh	r3, [r3, #0]
 8012842:	428b      	cmp	r3, r1
 8012844:	4604      	mov	r4, r0
 8012846:	d918      	bls.n	801287a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8012848:	6803      	ldr	r3, [r0, #0]
 801284a:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 801284c:	4b0d      	ldr	r3, [pc, #52]	; (8012884 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 801284e:	6818      	ldr	r0, [r3, #0]
 8012850:	f7f5 febe 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 8012854:	6823      	ldr	r3, [r4, #0]
 8012856:	4606      	mov	r6, r0
 8012858:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801285a:	4620      	mov	r0, r4
 801285c:	4798      	blx	r3
 801285e:	6823      	ldr	r3, [r4, #0]
 8012860:	4607      	mov	r7, r0
 8012862:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012866:	4620      	mov	r0, r4
 8012868:	4798      	blx	r3
 801286a:	463a      	mov	r2, r7
 801286c:	4603      	mov	r3, r0
 801286e:	4631      	mov	r1, r6
 8012870:	4620      	mov	r0, r4
 8012872:	46ac      	mov	ip, r5
 8012874:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012878:	4760      	bx	ip
 801287a:	2000      	movs	r0, #0
 801287c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012880:	20013878 	.word	0x20013878
 8012884:	20013880 	.word	0x20013880

08012888 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8012888:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 801288c:	4b17      	ldr	r3, [pc, #92]	; (80128ec <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 801288e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012890:	881b      	ldrh	r3, [r3, #0]
 8012892:	428b      	cmp	r3, r1
 8012894:	4604      	mov	r4, r0
 8012896:	d926      	bls.n	80128e6 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8012898:	4b15      	ldr	r3, [pc, #84]	; (80128f0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 801289a:	681b      	ldr	r3, [r3, #0]
 801289c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 80128a0:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 80128a4:	4b13      	ldr	r3, [pc, #76]	; (80128f4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 80128a6:	7855      	ldrb	r5, [r2, #1]
 80128a8:	681b      	ldr	r3, [r3, #0]
 80128aa:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 80128ae:	6833      	ldr	r3, [r6, #0]
 80128b0:	69df      	ldr	r7, [r3, #28]
 80128b2:	4b11      	ldr	r3, [pc, #68]	; (80128f8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 80128b4:	6818      	ldr	r0, [r3, #0]
 80128b6:	f7f5 fe8b 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 80128ba:	6823      	ldr	r3, [r4, #0]
 80128bc:	4680      	mov	r8, r0
 80128be:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80128c0:	4620      	mov	r0, r4
 80128c2:	4798      	blx	r3
 80128c4:	6823      	ldr	r3, [r4, #0]
 80128c6:	4681      	mov	r9, r0
 80128c8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80128cc:	4620      	mov	r0, r4
 80128ce:	4798      	blx	r3
 80128d0:	f3c5 0581 	ubfx	r5, r5, #2, #2
 80128d4:	9000      	str	r0, [sp, #0]
 80128d6:	464b      	mov	r3, r9
 80128d8:	4642      	mov	r2, r8
 80128da:	4629      	mov	r1, r5
 80128dc:	4630      	mov	r0, r6
 80128de:	47b8      	blx	r7
 80128e0:	b003      	add	sp, #12
 80128e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80128e6:	2000      	movs	r0, #0
 80128e8:	e7fa      	b.n	80128e0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 80128ea:	bf00      	nop
 80128ec:	20013878 	.word	0x20013878
 80128f0:	20013874 	.word	0x20013874
 80128f4:	2001387c 	.word	0x2001387c
 80128f8:	20013880 	.word	0x20013880

080128fc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 80128fc:	b40e      	push	{r1, r2, r3}
 80128fe:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012902:	4b2f      	ldr	r3, [pc, #188]	; (80129c0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8012904:	881a      	ldrh	r2, [r3, #0]
 8012906:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8012908:	429a      	cmp	r2, r3
 801290a:	b09d      	sub	sp, #116	; 0x74
 801290c:	4604      	mov	r4, r0
 801290e:	d954      	bls.n	80129ba <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8012910:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 80129c4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8012914:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80129c8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8012918:	aa26      	add	r2, sp, #152	; 0x98
 801291a:	9202      	str	r2, [sp, #8]
 801291c:	f8d9 2000 	ldr.w	r2, [r9]
 8012920:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8012924:	f8d8 3000 	ldr.w	r3, [r8]
 8012928:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801292c:	682b      	ldr	r3, [r5, #0]
 801292e:	4628      	mov	r0, r5
 8012930:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012932:	4798      	blx	r3
 8012934:	b207      	sxth	r7, r0
 8012936:	4606      	mov	r6, r0
 8012938:	a803      	add	r0, sp, #12
 801293a:	f005 fc61 	bl	8018200 <_ZN8touchgfx12TextProviderC1Ev>
 801293e:	682b      	ldr	r3, [r5, #0]
 8012940:	4628      	mov	r0, r5
 8012942:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012944:	4798      	blx	r3
 8012946:	682b      	ldr	r3, [r5, #0]
 8012948:	4682      	mov	sl, r0
 801294a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801294c:	4628      	mov	r0, r5
 801294e:	4798      	blx	r3
 8012950:	4653      	mov	r3, sl
 8012952:	9000      	str	r0, [sp, #0]
 8012954:	9a02      	ldr	r2, [sp, #8]
 8012956:	9925      	ldr	r1, [sp, #148]	; 0x94
 8012958:	a803      	add	r0, sp, #12
 801295a:	f005 fcac 	bl	80182b6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801295e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012960:	f8d9 3000 	ldr.w	r3, [r9]
 8012964:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8012968:	8925      	ldrh	r5, [r4, #8]
 801296a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 801296e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8012972:	eba5 050c 	sub.w	r5, r5, ip
 8012976:	784a      	ldrb	r2, [r1, #1]
 8012978:	f8d8 3000 	ldr.w	r3, [r8]
 801297c:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8012980:	b22d      	sxth	r5, r5
 8012982:	9500      	str	r5, [sp, #0]
 8012984:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8012988:	f3c2 0281 	ubfx	r2, r2, #2, #2
 801298c:	a803      	add	r0, sp, #12
 801298e:	f003 f8b9 	bl	8015b04 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8012992:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8012996:	18b9      	adds	r1, r7, r2
 8012998:	2900      	cmp	r1, #0
 801299a:	b203      	sxth	r3, r0
 801299c:	dd0b      	ble.n	80129b6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 801299e:	3b01      	subs	r3, #1
 80129a0:	fb13 f302 	smulbb	r3, r3, r2
 80129a4:	fb16 3300 	smlabb	r3, r6, r0, r3
 80129a8:	b21f      	sxth	r7, r3
 80129aa:	4638      	mov	r0, r7
 80129ac:	b01d      	add	sp, #116	; 0x74
 80129ae:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80129b2:	b003      	add	sp, #12
 80129b4:	4770      	bx	lr
 80129b6:	2b00      	cmp	r3, #0
 80129b8:	dcf7      	bgt.n	80129aa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80129ba:	2700      	movs	r7, #0
 80129bc:	e7f5      	b.n	80129aa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80129be:	bf00      	nop
 80129c0:	20013878 	.word	0x20013878
 80129c4:	20013874 	.word	0x20013874
 80129c8:	2001387c 	.word	0x2001387c

080129cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 80129cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80129d0:	4bbc      	ldr	r3, [pc, #752]	; (8012cc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 80129d2:	460c      	mov	r4, r1
 80129d4:	881b      	ldrh	r3, [r3, #0]
 80129d6:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 80129d8:	428b      	cmp	r3, r1
 80129da:	b0a9      	sub	sp, #164	; 0xa4
 80129dc:	4680      	mov	r8, r0
 80129de:	d809      	bhi.n	80129f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 80129e0:	2300      	movs	r3, #0
 80129e2:	f04f 32ff 	mov.w	r2, #4294967295
 80129e6:	e9c0 3200 	strd	r3, r2, [r0]
 80129ea:	6083      	str	r3, [r0, #8]
 80129ec:	4640      	mov	r0, r8
 80129ee:	b029      	add	sp, #164	; 0xa4
 80129f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80129f4:	4eb4      	ldr	r6, [pc, #720]	; (8012cc8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 80129f6:	6833      	ldr	r3, [r6, #0]
 80129f8:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80129fc:	4bb3      	ldr	r3, [pc, #716]	; (8012ccc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 80129fe:	681b      	ldr	r3, [r3, #0]
 8012a00:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8012a04:	4bb2      	ldr	r3, [pc, #712]	; (8012cd0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8012a06:	6818      	ldr	r0, [r3, #0]
 8012a08:	f7f5 fde2 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 8012a0c:	682b      	ldr	r3, [r5, #0]
 8012a0e:	4681      	mov	r9, r0
 8012a10:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012a12:	4628      	mov	r0, r5
 8012a14:	4798      	blx	r3
 8012a16:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8012a18:	b203      	sxth	r3, r0
 8012a1a:	4407      	add	r7, r0
 8012a1c:	9304      	str	r3, [sp, #16]
 8012a1e:	b2bb      	uxth	r3, r7
 8012a20:	9303      	str	r3, [sp, #12]
 8012a22:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8012a26:	4682      	mov	sl, r0
 8012a28:	a80f      	add	r0, sp, #60	; 0x3c
 8012a2a:	2b00      	cmp	r3, #0
 8012a2c:	f040 80a6 	bne.w	8012b7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8012a30:	f005 fbe6 	bl	8018200 <_ZN8touchgfx12TextProviderC1Ev>
 8012a34:	682b      	ldr	r3, [r5, #0]
 8012a36:	4628      	mov	r0, r5
 8012a38:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012a3a:	4798      	blx	r3
 8012a3c:	682b      	ldr	r3, [r5, #0]
 8012a3e:	4606      	mov	r6, r0
 8012a40:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012a42:	4628      	mov	r0, r5
 8012a44:	4798      	blx	r3
 8012a46:	6823      	ldr	r3, [r4, #0]
 8012a48:	4607      	mov	r7, r0
 8012a4a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012a4c:	4620      	mov	r0, r4
 8012a4e:	4798      	blx	r3
 8012a50:	6823      	ldr	r3, [r4, #0]
 8012a52:	4683      	mov	fp, r0
 8012a54:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012a58:	4620      	mov	r0, r4
 8012a5a:	4798      	blx	r3
 8012a5c:	463b      	mov	r3, r7
 8012a5e:	e9cd b000 	strd	fp, r0, [sp]
 8012a62:	4649      	mov	r1, r9
 8012a64:	4632      	mov	r2, r6
 8012a66:	a80f      	add	r0, sp, #60	; 0x3c
 8012a68:	f005 fc3a 	bl	80182e0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8012a6c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012a70:	f8df b254 	ldr.w	fp, [pc, #596]	; 8012cc8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8012a74:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012a78:	f04f 0600 	mov.w	r6, #0
 8012a7c:	bf0c      	ite	eq
 8012a7e:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8012a82:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8012a86:	4637      	mov	r7, r6
 8012a88:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012a8a:	f8db 3000 	ldr.w	r3, [fp]
 8012a8e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8012a92:	4629      	mov	r1, r5
 8012a94:	785b      	ldrb	r3, [r3, #1]
 8012a96:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8012a9a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012a9e:	a80f      	add	r0, sp, #60	; 0x3c
 8012aa0:	f002 fd4b 	bl	801553a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8012aa4:	9b03      	ldr	r3, [sp, #12]
 8012aa6:	4286      	cmp	r6, r0
 8012aa8:	bfb8      	it	lt
 8012aaa:	4606      	movlt	r6, r0
 8012aac:	3701      	adds	r7, #1
 8012aae:	eba9 0903 	sub.w	r9, r9, r3
 8012ab2:	a80f      	add	r0, sp, #60	; 0x3c
 8012ab4:	b236      	sxth	r6, r6
 8012ab6:	b2bf      	uxth	r7, r7
 8012ab8:	fa0f f989 	sxth.w	r9, r9
 8012abc:	f005 fbc7 	bl	801824e <_ZN8touchgfx12TextProvider11endOfStringEv>
 8012ac0:	b918      	cbnz	r0, 8012aca <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012ac2:	7a2b      	ldrb	r3, [r5, #8]
 8012ac4:	444b      	add	r3, r9
 8012ac6:	2b00      	cmp	r3, #0
 8012ac8:	dcde      	bgt.n	8012a88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8012aca:	9b03      	ldr	r3, [sp, #12]
 8012acc:	9a04      	ldr	r2, [sp, #16]
 8012ace:	f895 9009 	ldrb.w	r9, [r5, #9]
 8012ad2:	fb13 f707 	smulbb	r7, r3, r7
 8012ad6:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012ad8:	1aff      	subs	r7, r7, r3
 8012ada:	b2bf      	uxth	r7, r7
 8012adc:	b23b      	sxth	r3, r7
 8012ade:	429a      	cmp	r2, r3
 8012ae0:	bfa8      	it	ge
 8012ae2:	4657      	movge	r7, sl
 8012ae4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012ae8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012aec:	6823      	ldr	r3, [r4, #0]
 8012aee:	bf08      	it	eq
 8012af0:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8012af4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012af6:	bf18      	it	ne
 8012af8:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8012afc:	4620      	mov	r0, r4
 8012afe:	4798      	blx	r3
 8012b00:	444f      	add	r7, r9
 8012b02:	fa1f f987 	uxth.w	r9, r7
 8012b06:	2801      	cmp	r0, #1
 8012b08:	fa0f f789 	sxth.w	r7, r9
 8012b0c:	b2b3      	uxth	r3, r6
 8012b0e:	f000 80e1 	beq.w	8012cd4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8012b12:	2802      	cmp	r0, #2
 8012b14:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8012b18:	f000 80e2 	beq.w	8012ce0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8012b1c:	7aea      	ldrb	r2, [r5, #11]
 8012b1e:	7b2d      	ldrb	r5, [r5, #12]
 8012b20:	b236      	sxth	r6, r6
 8012b22:	1ab6      	subs	r6, r6, r2
 8012b24:	442a      	add	r2, r5
 8012b26:	4413      	add	r3, r2
 8012b28:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8012b2c:	fa1f fa86 	uxth.w	sl, r6
 8012b30:	b29b      	uxth	r3, r3
 8012b32:	2a02      	cmp	r2, #2
 8012b34:	fa0f fb8a 	sxth.w	fp, sl
 8012b38:	b21e      	sxth	r6, r3
 8012b3a:	f000 80d5 	beq.w	8012ce8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8012b3e:	2a03      	cmp	r2, #3
 8012b40:	f000 80dd 	beq.w	8012cfe <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8012b44:	2a01      	cmp	r2, #1
 8012b46:	f040 80e5 	bne.w	8012d14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8012b4a:	8925      	ldrh	r5, [r4, #8]
 8012b4c:	4633      	mov	r3, r6
 8012b4e:	eba5 0909 	sub.w	r9, r5, r9
 8012b52:	463e      	mov	r6, r7
 8012b54:	465d      	mov	r5, fp
 8012b56:	461f      	mov	r7, r3
 8012b58:	fa0f fb89 	sxth.w	fp, r9
 8012b5c:	4b5c      	ldr	r3, [pc, #368]	; (8012cd0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8012b5e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012b60:	6818      	ldr	r0, [r3, #0]
 8012b62:	f7f5 fd35 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 8012b66:	f8a8 b000 	strh.w	fp, [r8]
 8012b6a:	f8a8 5002 	strh.w	r5, [r8, #2]
 8012b6e:	f8a8 6004 	strh.w	r6, [r8, #4]
 8012b72:	f8a8 7006 	strh.w	r7, [r8, #6]
 8012b76:	f8c8 0008 	str.w	r0, [r8, #8]
 8012b7a:	e737      	b.n	80129ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8012b7c:	f005 fb40 	bl	8018200 <_ZN8touchgfx12TextProviderC1Ev>
 8012b80:	682b      	ldr	r3, [r5, #0]
 8012b82:	4628      	mov	r0, r5
 8012b84:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012b86:	4798      	blx	r3
 8012b88:	682b      	ldr	r3, [r5, #0]
 8012b8a:	4607      	mov	r7, r0
 8012b8c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012b8e:	4628      	mov	r0, r5
 8012b90:	4798      	blx	r3
 8012b92:	6823      	ldr	r3, [r4, #0]
 8012b94:	4683      	mov	fp, r0
 8012b96:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012b98:	4620      	mov	r0, r4
 8012b9a:	4798      	blx	r3
 8012b9c:	6822      	ldr	r2, [r4, #0]
 8012b9e:	9005      	str	r0, [sp, #20]
 8012ba0:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8012ba4:	4620      	mov	r0, r4
 8012ba6:	4790      	blx	r2
 8012ba8:	9b05      	ldr	r3, [sp, #20]
 8012baa:	9001      	str	r0, [sp, #4]
 8012bac:	463a      	mov	r2, r7
 8012bae:	4649      	mov	r1, r9
 8012bb0:	9300      	str	r3, [sp, #0]
 8012bb2:	a80f      	add	r0, sp, #60	; 0x3c
 8012bb4:	465b      	mov	r3, fp
 8012bb6:	f005 fb93 	bl	80182e0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8012bba:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012bbe:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8012bc2:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012bc4:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8012bc8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012bcc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012bd0:	bf0a      	itet	eq
 8012bd2:	464a      	moveq	r2, r9
 8012bd4:	461a      	movne	r2, r3
 8012bd6:	4699      	moveq	r9, r3
 8012bd8:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8012bdc:	1ad2      	subs	r2, r2, r3
 8012bde:	6833      	ldr	r3, [r6, #0]
 8012be0:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8012be4:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012be8:	af0f      	add	r7, sp, #60	; 0x3c
 8012bea:	7859      	ldrb	r1, [r3, #1]
 8012bec:	9707      	str	r7, [sp, #28]
 8012bee:	2300      	movs	r3, #0
 8012bf0:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8012bf4:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012bf8:	f88d 1020 	strb.w	r1, [sp, #32]
 8012bfc:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8012c00:	9509      	str	r5, [sp, #36]	; 0x24
 8012c02:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8012c06:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8012c0a:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8012c0e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8012c12:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8012c16:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8012c1a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8012c1e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8012c22:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8012c26:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8012c2a:	b350      	cbz	r0, 8012c82 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012c2c:	682b      	ldr	r3, [r5, #0]
 8012c2e:	4628      	mov	r0, r5
 8012c30:	695b      	ldr	r3, [r3, #20]
 8012c32:	4798      	blx	r3
 8012c34:	4607      	mov	r7, r0
 8012c36:	b320      	cbz	r0, 8012c82 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012c38:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012c3a:	6803      	ldr	r3, [r0, #0]
 8012c3c:	4639      	mov	r1, r7
 8012c3e:	68db      	ldr	r3, [r3, #12]
 8012c40:	4798      	blx	r3
 8012c42:	4606      	mov	r6, r0
 8012c44:	b1e8      	cbz	r0, 8012c82 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012c46:	7b43      	ldrb	r3, [r0, #13]
 8012c48:	7a82      	ldrb	r2, [r0, #10]
 8012c4a:	005b      	lsls	r3, r3, #1
 8012c4c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012c50:	4313      	orrs	r3, r2
 8012c52:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8012c56:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8012c5a:	2b06      	cmp	r3, #6
 8012c5c:	d111      	bne.n	8012c82 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012c5e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012c60:	6803      	ldr	r3, [r0, #0]
 8012c62:	4632      	mov	r2, r6
 8012c64:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012c66:	4639      	mov	r1, r7
 8012c68:	4798      	blx	r3
 8012c6a:	7b73      	ldrb	r3, [r6, #13]
 8012c6c:	005b      	lsls	r3, r3, #1
 8012c6e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012c72:	7ab3      	ldrb	r3, [r6, #10]
 8012c74:	4313      	orrs	r3, r2
 8012c76:	4418      	add	r0, r3
 8012c78:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8012c7c:	4418      	add	r0, r3
 8012c7e:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8012c82:	2600      	movs	r6, #0
 8012c84:	4637      	mov	r7, r6
 8012c86:	a806      	add	r0, sp, #24
 8012c88:	f002 fe38 	bl	80158fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8012c8c:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8012c90:	9b03      	ldr	r3, [sp, #12]
 8012c92:	4286      	cmp	r6, r0
 8012c94:	eba9 0903 	sub.w	r9, r9, r3
 8012c98:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8012c9c:	bfb8      	it	lt
 8012c9e:	4606      	movlt	r6, r0
 8012ca0:	3701      	adds	r7, #1
 8012ca2:	b236      	sxth	r6, r6
 8012ca4:	b2bf      	uxth	r7, r7
 8012ca6:	fa0f f989 	sxth.w	r9, r9
 8012caa:	2b00      	cmp	r3, #0
 8012cac:	f43f af0d 	beq.w	8012aca <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012cb0:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8012cb4:	2b00      	cmp	r3, #0
 8012cb6:	f47f af08 	bne.w	8012aca <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012cba:	7a2b      	ldrb	r3, [r5, #8]
 8012cbc:	444b      	add	r3, r9
 8012cbe:	2b00      	cmp	r3, #0
 8012cc0:	dce1      	bgt.n	8012c86 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8012cc2:	e702      	b.n	8012aca <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012cc4:	20013878 	.word	0x20013878
 8012cc8:	20013874 	.word	0x20013874
 8012ccc:	2001387c 	.word	0x2001387c
 8012cd0:	20013880 	.word	0x20013880
 8012cd4:	ebaa 0606 	sub.w	r6, sl, r6
 8012cd8:	2002      	movs	r0, #2
 8012cda:	fb96 f6f0 	sdiv	r6, r6, r0
 8012cde:	e71d      	b.n	8012b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8012ce0:	441e      	add	r6, r3
 8012ce2:	ebaa 0606 	sub.w	r6, sl, r6
 8012ce6:	e719      	b.n	8012b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8012ce8:	8925      	ldrh	r5, [r4, #8]
 8012cea:	1aed      	subs	r5, r5, r3
 8012cec:	eba5 050a 	sub.w	r5, r5, sl
 8012cf0:	fa0f fb85 	sxth.w	fp, r5
 8012cf4:	8965      	ldrh	r5, [r4, #10]
 8012cf6:	eba5 0509 	sub.w	r5, r5, r9
 8012cfa:	b22d      	sxth	r5, r5
 8012cfc:	e72e      	b.n	8012b5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8012cfe:	8965      	ldrh	r5, [r4, #10]
 8012d00:	1aed      	subs	r5, r5, r3
 8012d02:	eba5 050a 	sub.w	r5, r5, sl
 8012d06:	4633      	mov	r3, r6
 8012d08:	b22d      	sxth	r5, r5
 8012d0a:	463e      	mov	r6, r7
 8012d0c:	f04f 0b00 	mov.w	fp, #0
 8012d10:	461f      	mov	r7, r3
 8012d12:	e723      	b.n	8012b5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8012d14:	2500      	movs	r5, #0
 8012d16:	e721      	b.n	8012b5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08012d18 <_ZN8touchgfx8TextAreaD0Ev>:
 8012d18:	b510      	push	{r4, lr}
 8012d1a:	2148      	movs	r1, #72	; 0x48
 8012d1c:	4604      	mov	r4, r0
 8012d1e:	f017 fc54 	bl	802a5ca <_ZdlPvj>
 8012d22:	4620      	mov	r0, r4
 8012d24:	bd10      	pop	{r4, pc}
	...

08012d28 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8012d28:	b513      	push	{r0, r1, r4, lr}
 8012d2a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8012d2e:	4604      	mov	r4, r0
 8012d30:	b1fb      	cbz	r3, 8012d72 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012d32:	4b16      	ldr	r3, [pc, #88]	; (8012d8c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8012d34:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012d36:	881b      	ldrh	r3, [r3, #0]
 8012d38:	428b      	cmp	r3, r1
 8012d3a:	d91a      	bls.n	8012d72 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012d3c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012d40:	2b00      	cmp	r3, #0
 8012d42:	dd16      	ble.n	8012d72 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012d44:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012d48:	2b00      	cmp	r3, #0
 8012d4a:	dd12      	ble.n	8012d72 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012d4c:	4b10      	ldr	r3, [pc, #64]	; (8012d90 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8012d4e:	6818      	ldr	r0, [r3, #0]
 8012d50:	f7f5 fc3e 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 8012d54:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8012d58:	6822      	ldr	r2, [r4, #0]
 8012d5a:	2b00      	cmp	r3, #0
 8012d5c:	db06      	blt.n	8012d6c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8012d5e:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8012d62:	2b00      	cmp	r3, #0
 8012d64:	db02      	blt.n	8012d6c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8012d66:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012d68:	4298      	cmp	r0, r3
 8012d6a:	d004      	beq.n	8012d76 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8012d6c:	6953      	ldr	r3, [r2, #20]
 8012d6e:	4620      	mov	r0, r4
 8012d70:	4798      	blx	r3
 8012d72:	b002      	add	sp, #8
 8012d74:	bd10      	pop	{r4, pc}
 8012d76:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8012d7a:	c903      	ldmia	r1, {r0, r1}
 8012d7c:	466b      	mov	r3, sp
 8012d7e:	e883 0003 	stmia.w	r3, {r0, r1}
 8012d82:	6912      	ldr	r2, [r2, #16]
 8012d84:	4619      	mov	r1, r3
 8012d86:	4620      	mov	r0, r4
 8012d88:	4790      	blx	r2
 8012d8a:	e7f2      	b.n	8012d72 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012d8c:	20013878 	.word	0x20013878
 8012d90:	20013880 	.word	0x20013880

08012d94 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8012d94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012d98:	4b44      	ldr	r3, [pc, #272]	; (8012eac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8012d9a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012d9c:	881b      	ldrh	r3, [r3, #0]
 8012d9e:	4293      	cmp	r3, r2
 8012da0:	b08e      	sub	sp, #56	; 0x38
 8012da2:	4604      	mov	r4, r0
 8012da4:	d97e      	bls.n	8012ea4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012da6:	6808      	ldr	r0, [r1, #0]
 8012da8:	4d41      	ldr	r5, [pc, #260]	; (8012eb0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8012daa:	6849      	ldr	r1, [r1, #4]
 8012dac:	ab05      	add	r3, sp, #20
 8012dae:	c303      	stmia	r3!, {r0, r1}
 8012db0:	4611      	mov	r1, r2
 8012db2:	6828      	ldr	r0, [r5, #0]
 8012db4:	f7f5 fc0c 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 8012db8:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8012dbc:	2b00      	cmp	r3, #0
 8012dbe:	db11      	blt.n	8012de4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012dc0:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8012dc4:	2b00      	cmp	r3, #0
 8012dc6:	db0d      	blt.n	8012de4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012dc8:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012dca:	4298      	cmp	r0, r3
 8012dcc:	d10a      	bne.n	8012de4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012dce:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8012dd2:	e892 0003 	ldmia.w	r2, {r0, r1}
 8012dd6:	ab09      	add	r3, sp, #36	; 0x24
 8012dd8:	e883 0003 	stmia.w	r3, {r0, r1}
 8012ddc:	4619      	mov	r1, r3
 8012dde:	a805      	add	r0, sp, #20
 8012de0:	f7fd fbec 	bl	80105bc <_ZN8touchgfx4RectaNERKS0_>
 8012de4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012de8:	2b00      	cmp	r3, #0
 8012dea:	dd5b      	ble.n	8012ea4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012dec:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8012df0:	2b00      	cmp	r3, #0
 8012df2:	dd57      	ble.n	8012ea4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012df4:	4f2f      	ldr	r7, [pc, #188]	; (8012eb4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8012df6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012df8:	683b      	ldr	r3, [r7, #0]
 8012dfa:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8012dfe:	4b2e      	ldr	r3, [pc, #184]	; (8012eb8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8012e00:	681b      	ldr	r3, [r3, #0]
 8012e02:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8012e06:	2e00      	cmp	r6, #0
 8012e08:	d04c      	beq.n	8012ea4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012e0a:	6823      	ldr	r3, [r4, #0]
 8012e0c:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8012e10:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012e12:	4620      	mov	r0, r4
 8012e14:	4798      	blx	r3
 8012e16:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012e18:	683b      	ldr	r3, [r7, #0]
 8012e1a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8012e1e:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8012e22:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8012e26:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8012e28:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8012e2c:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8012e30:	785b      	ldrb	r3, [r3, #1]
 8012e32:	9609      	str	r6, [sp, #36]	; 0x24
 8012e34:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012e38:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8012e3c:	4b1f      	ldr	r3, [pc, #124]	; (8012ebc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8012e3e:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8012e42:	681b      	ldr	r3, [r3, #0]
 8012e44:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8012e48:	910b      	str	r1, [sp, #44]	; 0x2c
 8012e4a:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8012e4e:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8012e52:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8012e56:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8012e5a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012e5e:	b10a      	cbz	r2, 8012e64 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8012e60:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8012e62:	b906      	cbnz	r6, 8012e66 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8012e64:	689e      	ldr	r6, [r3, #8]
 8012e66:	af07      	add	r7, sp, #28
 8012e68:	4621      	mov	r1, r4
 8012e6a:	4638      	mov	r0, r7
 8012e6c:	f004 fc7c 	bl	8017768 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012e70:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012e72:	6828      	ldr	r0, [r5, #0]
 8012e74:	f7f5 fbac 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 8012e78:	6823      	ldr	r3, [r4, #0]
 8012e7a:	4605      	mov	r5, r0
 8012e7c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012e7e:	4620      	mov	r0, r4
 8012e80:	4798      	blx	r3
 8012e82:	6823      	ldr	r3, [r4, #0]
 8012e84:	4680      	mov	r8, r0
 8012e86:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012e8a:	4620      	mov	r0, r4
 8012e8c:	4798      	blx	r3
 8012e8e:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8012e92:	ab09      	add	r3, sp, #36	; 0x24
 8012e94:	9300      	str	r3, [sp, #0]
 8012e96:	9501      	str	r5, [sp, #4]
 8012e98:	ab05      	add	r3, sp, #20
 8012e9a:	e897 0006 	ldmia.w	r7, {r1, r2}
 8012e9e:	4630      	mov	r0, r6
 8012ea0:	f7f5 fb48 	bl	8008534 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8012ea4:	b00e      	add	sp, #56	; 0x38
 8012ea6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012eaa:	bf00      	nop
 8012eac:	20013878 	.word	0x20013878
 8012eb0:	20013880 	.word	0x20013880
 8012eb4:	20013874 	.word	0x20013874
 8012eb8:	2001387c 	.word	0x2001387c
 8012ebc:	2001381c 	.word	0x2001381c

08012ec0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8012ec0:	b538      	push	{r3, r4, r5, lr}
 8012ec2:	4b0e      	ldr	r3, [pc, #56]	; (8012efc <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8012ec4:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012ec6:	881b      	ldrh	r3, [r3, #0]
 8012ec8:	429a      	cmp	r2, r3
 8012eca:	4604      	mov	r4, r0
 8012ecc:	d214      	bcs.n	8012ef8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8012ece:	6803      	ldr	r3, [r0, #0]
 8012ed0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8012ed2:	4798      	blx	r3
 8012ed4:	6823      	ldr	r3, [r4, #0]
 8012ed6:	4605      	mov	r5, r0
 8012ed8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8012eda:	4620      	mov	r0, r4
 8012edc:	4798      	blx	r3
 8012ede:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012ee2:	b22d      	sxth	r5, r5
 8012ee4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012ee8:	4601      	mov	r1, r0
 8012eea:	bf06      	itte	eq
 8012eec:	4602      	moveq	r2, r0
 8012eee:	4629      	moveq	r1, r5
 8012ef0:	462a      	movne	r2, r5
 8012ef2:	4620      	mov	r0, r4
 8012ef4:	f7fd f942 	bl	801017c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012ef8:	bd38      	pop	{r3, r4, r5, pc}
 8012efa:	bf00      	nop
 8012efc:	20013878 	.word	0x20013878

08012f00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8012f00:	b530      	push	{r4, r5, lr}
 8012f02:	888b      	ldrh	r3, [r1, #4]
 8012f04:	8583      	strh	r3, [r0, #44]	; 0x2c
 8012f06:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012f0a:	b085      	sub	sp, #20
 8012f0c:	4604      	mov	r4, r0
 8012f0e:	b923      	cbnz	r3, 8012f1a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8012f10:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012f14:	b90b      	cbnz	r3, 8012f1a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8012f16:	f7ff ffd3 	bl	8012ec0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8012f1a:	6823      	ldr	r3, [r4, #0]
 8012f1c:	466d      	mov	r5, sp
 8012f1e:	4621      	mov	r1, r4
 8012f20:	4628      	mov	r0, r5
 8012f22:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012f26:	4798      	blx	r3
 8012f28:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8012f2c:	343c      	adds	r4, #60	; 0x3c
 8012f2e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8012f32:	b005      	add	sp, #20
 8012f34:	bd30      	pop	{r4, r5, pc}

08012f36 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8012f36:	2300      	movs	r3, #0
 8012f38:	8083      	strh	r3, [r0, #4]
 8012f3a:	80c3      	strh	r3, [r0, #6]
 8012f3c:	8003      	strh	r3, [r0, #0]
 8012f3e:	8043      	strh	r3, [r0, #2]
 8012f40:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8012f44:	2bff      	cmp	r3, #255	; 0xff
 8012f46:	bf01      	itttt	eq
 8012f48:	890b      	ldrheq	r3, [r1, #8]
 8012f4a:	8083      	strheq	r3, [r0, #4]
 8012f4c:	894b      	ldrheq	r3, [r1, #10]
 8012f4e:	80c3      	strheq	r3, [r0, #6]
 8012f50:	4770      	bx	lr
	...

08012f54 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8012f54:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012f56:	4604      	mov	r4, r0
 8012f58:	6808      	ldr	r0, [r1, #0]
 8012f5a:	6849      	ldr	r1, [r1, #4]
 8012f5c:	466b      	mov	r3, sp
 8012f5e:	c303      	stmia	r3!, {r0, r1}
 8012f60:	6823      	ldr	r3, [r4, #0]
 8012f62:	4669      	mov	r1, sp
 8012f64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012f66:	4620      	mov	r0, r4
 8012f68:	4798      	blx	r3
 8012f6a:	4b08      	ldr	r3, [pc, #32]	; (8012f8c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8012f6c:	681b      	ldr	r3, [r3, #0]
 8012f6e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012f72:	b10a      	cbz	r2, 8012f78 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8012f74:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012f76:	b900      	cbnz	r0, 8012f7a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8012f78:	6898      	ldr	r0, [r3, #8]
 8012f7a:	6803      	ldr	r3, [r0, #0]
 8012f7c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8012f7e:	6a1d      	ldr	r5, [r3, #32]
 8012f80:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8012f84:	4669      	mov	r1, sp
 8012f86:	47a8      	blx	r5
 8012f88:	b003      	add	sp, #12
 8012f8a:	bd30      	pop	{r4, r5, pc}
 8012f8c:	2001381c 	.word	0x2001381c

08012f90 <_ZN8touchgfx3BoxD1Ev>:
 8012f90:	4770      	bx	lr

08012f92 <_ZN8touchgfx3BoxD0Ev>:
 8012f92:	b510      	push	{r4, lr}
 8012f94:	212c      	movs	r1, #44	; 0x2c
 8012f96:	4604      	mov	r4, r0
 8012f98:	f017 fb17 	bl	802a5ca <_ZdlPvj>
 8012f9c:	4620      	mov	r0, r4
 8012f9e:	bd10      	pop	{r4, pc}

08012fa0 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8012fa0:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8012fa4:	b12a      	cbz	r2, 8012fb2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012fa6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8012faa:	b112      	cbz	r2, 8012fb2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012fac:	6803      	ldr	r3, [r0, #0]
 8012fae:	695b      	ldr	r3, [r3, #20]
 8012fb0:	4718      	bx	r3
 8012fb2:	4770      	bx	lr

08012fb4 <_ZN8touchgfx10TiledImage9setOffsetEss>:
 8012fb4:	b570      	push	{r4, r5, r6, lr}
 8012fb6:	6803      	ldr	r3, [r0, #0]
 8012fb8:	4604      	mov	r4, r0
 8012fba:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8012fbc:	4615      	mov	r5, r2
 8012fbe:	4798      	blx	r3
 8012fc0:	6823      	ldr	r3, [r4, #0]
 8012fc2:	4629      	mov	r1, r5
 8012fc4:	4620      	mov	r0, r4
 8012fc6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012fc8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012fcc:	4718      	bx	r3

08012fce <_ZN8touchgfx10TiledImage9getOffsetERsS1_>:
 8012fce:	b570      	push	{r4, r5, r6, lr}
 8012fd0:	6803      	ldr	r3, [r0, #0]
 8012fd2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8012fd4:	4604      	mov	r4, r0
 8012fd6:	460e      	mov	r6, r1
 8012fd8:	4615      	mov	r5, r2
 8012fda:	4798      	blx	r3
 8012fdc:	8030      	strh	r0, [r6, #0]
 8012fde:	6823      	ldr	r3, [r4, #0]
 8012fe0:	4620      	mov	r0, r4
 8012fe2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8012fe4:	4798      	blx	r3
 8012fe6:	8028      	strh	r0, [r5, #0]
 8012fe8:	bd70      	pop	{r4, r5, r6, pc}

08012fea <_ZN8touchgfx10TiledImage10getXOffsetEv>:
 8012fea:	f9b0 002a 	ldrsh.w	r0, [r0, #42]	; 0x2a
 8012fee:	4770      	bx	lr

08012ff0 <_ZN8touchgfx10TiledImage10getYOffsetEv>:
 8012ff0:	f9b0 002c 	ldrsh.w	r0, [r0, #44]	; 0x2c
 8012ff4:	4770      	bx	lr

08012ff6 <_ZN8touchgfx10TiledImageD1Ev>:
 8012ff6:	4770      	bx	lr

08012ff8 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>:
 8012ff8:	b510      	push	{r4, lr}
 8012ffa:	4604      	mov	r4, r0
 8012ffc:	f000 fd31 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8013000:	6823      	ldr	r3, [r4, #0]
 8013002:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 8013006:	f9b4 102a 	ldrsh.w	r1, [r4, #42]	; 0x2a
 801300a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801300c:	4620      	mov	r0, r4
 801300e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013012:	4718      	bx	r3

08013014 <_ZN8touchgfx10TiledImage10setXOffsetEs>:
 8013014:	b538      	push	{r3, r4, r5, lr}
 8013016:	f100 0526 	add.w	r5, r0, #38	; 0x26
 801301a:	4604      	mov	r4, r0
 801301c:	8541      	strh	r1, [r0, #42]	; 0x2a
 801301e:	4628      	mov	r0, r5
 8013020:	f006 fe6e 	bl	8019d00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013024:	b188      	cbz	r0, 801304a <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 8013026:	4628      	mov	r0, r5
 8013028:	f006 fe6a 	bl	8019d00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801302c:	f9b4 202a 	ldrsh.w	r2, [r4, #42]	; 0x2a
 8013030:	fb92 f3f0 	sdiv	r3, r2, r0
 8013034:	fb03 2010 	mls	r0, r3, r0, r2
 8013038:	2800      	cmp	r0, #0
 801303a:	8560      	strh	r0, [r4, #42]	; 0x2a
 801303c:	da05      	bge.n	801304a <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 801303e:	4628      	mov	r0, r5
 8013040:	f006 fe5e 	bl	8019d00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013044:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8013046:	4418      	add	r0, r3
 8013048:	8560      	strh	r0, [r4, #42]	; 0x2a
 801304a:	bd38      	pop	{r3, r4, r5, pc}

0801304c <_ZN8touchgfx10TiledImage10setYOffsetEs>:
 801304c:	b538      	push	{r3, r4, r5, lr}
 801304e:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8013052:	4604      	mov	r4, r0
 8013054:	8581      	strh	r1, [r0, #44]	; 0x2c
 8013056:	4628      	mov	r0, r5
 8013058:	f006 fe86 	bl	8019d68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801305c:	b188      	cbz	r0, 8013082 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 801305e:	4628      	mov	r0, r5
 8013060:	f006 fe82 	bl	8019d68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013064:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 8013068:	fb92 f3f0 	sdiv	r3, r2, r0
 801306c:	fb03 2010 	mls	r0, r3, r0, r2
 8013070:	2800      	cmp	r0, #0
 8013072:	85a0      	strh	r0, [r4, #44]	; 0x2c
 8013074:	da05      	bge.n	8013082 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 8013076:	4628      	mov	r0, r5
 8013078:	f006 fe76 	bl	8019d68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801307c:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
 801307e:	4418      	add	r0, r3
 8013080:	85a0      	strh	r0, [r4, #44]	; 0x2c
 8013082:	bd38      	pop	{r3, r4, r5, pc}

08013084 <_ZN8touchgfx10TiledImageD0Ev>:
 8013084:	b510      	push	{r4, lr}
 8013086:	2130      	movs	r1, #48	; 0x30
 8013088:	4604      	mov	r4, r0
 801308a:	f017 fa9e 	bl	802a5ca <_ZdlPvj>
 801308e:	4620      	mov	r0, r4
 8013090:	bd10      	pop	{r4, pc}
	...

08013094 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE>:
 8013094:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013098:	f100 0b26 	add.w	fp, r0, #38	; 0x26
 801309c:	b093      	sub	sp, #76	; 0x4c
 801309e:	4607      	mov	r7, r0
 80130a0:	4658      	mov	r0, fp
 80130a2:	460e      	mov	r6, r1
 80130a4:	f006 fe2c 	bl	8019d00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80130a8:	4681      	mov	r9, r0
 80130aa:	4658      	mov	r0, fp
 80130ac:	f006 fe5c 	bl	8019d68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80130b0:	4605      	mov	r5, r0
 80130b2:	f1b9 0f00 	cmp.w	r9, #0
 80130b6:	f000 80c4 	beq.w	8013242 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 80130ba:	2800      	cmp	r0, #0
 80130bc:	f000 80c1 	beq.w	8013242 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 80130c0:	2300      	movs	r3, #0
 80130c2:	e9cd 330e 	strd	r3, r3, [sp, #56]	; 0x38
 80130c6:	683b      	ldr	r3, [r7, #0]
 80130c8:	a90e      	add	r1, sp, #56	; 0x38
 80130ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80130cc:	4638      	mov	r0, r7
 80130ce:	4798      	blx	r3
 80130d0:	f9b7 202a 	ldrsh.w	r2, [r7, #42]	; 0x2a
 80130d4:	f9b6 3000 	ldrsh.w	r3, [r6]
 80130d8:	88b1      	ldrh	r1, [r6, #4]
 80130da:	fa1f f889 	uxth.w	r8, r9
 80130de:	189c      	adds	r4, r3, r2
 80130e0:	440b      	add	r3, r1
 80130e2:	fa02 f383 	sxtah	r3, r2, r3
 80130e6:	fb94 f4f9 	sdiv	r4, r4, r9
 80130ea:	fb14 f408 	smulbb	r4, r4, r8
 80130ee:	1aa4      	subs	r4, r4, r2
 80130f0:	3b01      	subs	r3, #1
 80130f2:	b2aa      	uxth	r2, r5
 80130f4:	fb93 f3f9 	sdiv	r3, r3, r9
 80130f8:	fb13 f308 	smulbb	r3, r3, r8
 80130fc:	b21b      	sxth	r3, r3
 80130fe:	9205      	str	r2, [sp, #20]
 8013100:	f9b7 102c 	ldrsh.w	r1, [r7, #44]	; 0x2c
 8013104:	9805      	ldr	r0, [sp, #20]
 8013106:	930b      	str	r3, [sp, #44]	; 0x2c
 8013108:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801310c:	185a      	adds	r2, r3, r1
 801310e:	fb92 f2f5 	sdiv	r2, r2, r5
 8013112:	fb12 f200 	smulbb	r2, r2, r0
 8013116:	1a52      	subs	r2, r2, r1
 8013118:	b212      	sxth	r2, r2
 801311a:	920c      	str	r2, [sp, #48]	; 0x30
 801311c:	88f2      	ldrh	r2, [r6, #6]
 801311e:	4413      	add	r3, r2
 8013120:	fa01 f383 	sxtah	r3, r1, r3
 8013124:	3b01      	subs	r3, #1
 8013126:	fb93 f3f5 	sdiv	r3, r3, r5
 801312a:	fb13 f300 	smulbb	r3, r3, r0
 801312e:	b2a4      	uxth	r4, r4
 8013130:	b21b      	sxth	r3, r3
 8013132:	930d      	str	r3, [sp, #52]	; 0x34
 8013134:	eb08 0504 	add.w	r5, r8, r4
 8013138:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801313a:	b223      	sxth	r3, r4
 801313c:	4293      	cmp	r3, r2
 801313e:	b2ad      	uxth	r5, r5
 8013140:	9306      	str	r3, [sp, #24]
 8013142:	dc7e      	bgt.n	8013242 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8013144:	b22b      	sxth	r3, r5
 8013146:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801314a:	930a      	str	r3, [sp, #40]	; 0x28
 801314c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801314e:	4599      	cmp	r9, r3
 8013150:	dd03      	ble.n	801315a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xc6>
 8013152:	4444      	add	r4, r8
 8013154:	b2a4      	uxth	r4, r4
 8013156:	4445      	add	r5, r8
 8013158:	e7ee      	b.n	8013138 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xa4>
 801315a:	f9b6 c000 	ldrsh.w	ip, [r6]
 801315e:	88b2      	ldrh	r2, [r6, #4]
 8013160:	9806      	ldr	r0, [sp, #24]
 8013162:	9905      	ldr	r1, [sp, #20]
 8013164:	4462      	add	r2, ip
 8013166:	b292      	uxth	r2, r2
 8013168:	b213      	sxth	r3, r2
 801316a:	9308      	str	r3, [sp, #32]
 801316c:	fa1f f389 	uxth.w	r3, r9
 8013170:	4419      	add	r1, r3
 8013172:	9307      	str	r3, [sp, #28]
 8013174:	4603      	mov	r3, r0
 8013176:	9808      	ldr	r0, [sp, #32]
 8013178:	b289      	uxth	r1, r1
 801317a:	4283      	cmp	r3, r0
 801317c:	fa0f fa81 	sxth.w	sl, r1
 8013180:	da5b      	bge.n	801323a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8013182:	980a      	ldr	r0, [sp, #40]	; 0x28
 8013184:	4584      	cmp	ip, r0
 8013186:	da58      	bge.n	801323a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8013188:	f9b6 0002 	ldrsh.w	r0, [r6, #2]
 801318c:	f8b6 e006 	ldrh.w	lr, [r6, #6]
 8013190:	4486      	add	lr, r0
 8013192:	fa1f fe8e 	uxth.w	lr, lr
 8013196:	fa0f f38e 	sxth.w	r3, lr
 801319a:	4599      	cmp	r9, r3
 801319c:	9309      	str	r3, [sp, #36]	; 0x24
 801319e:	da4c      	bge.n	801323a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80131a0:	4550      	cmp	r0, sl
 80131a2:	da4a      	bge.n	801323a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80131a4:	9b06      	ldr	r3, [sp, #24]
 80131a6:	459c      	cmp	ip, r3
 80131a8:	bfb8      	it	lt
 80131aa:	469c      	movlt	ip, r3
 80131ac:	9b08      	ldr	r3, [sp, #32]
 80131ae:	f8ad c040 	strh.w	ip, [sp, #64]	; 0x40
 80131b2:	4548      	cmp	r0, r9
 80131b4:	bfb8      	it	lt
 80131b6:	4648      	movlt	r0, r9
 80131b8:	4699      	mov	r9, r3
 80131ba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80131bc:	f8ad 0042 	strh.w	r0, [sp, #66]	; 0x42
 80131c0:	4599      	cmp	r9, r3
 80131c2:	bfc8      	it	gt
 80131c4:	462a      	movgt	r2, r5
 80131c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80131c8:	4553      	cmp	r3, sl
 80131ca:	bfd8      	it	le
 80131cc:	4671      	movle	r1, lr
 80131ce:	eba2 020c 	sub.w	r2, r2, ip
 80131d2:	1a09      	subs	r1, r1, r0
 80131d4:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
 80131d8:	f8ad 1046 	strh.w	r1, [sp, #70]	; 0x46
 80131dc:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 80131e0:	9b07      	ldr	r3, [sp, #28]
 80131e2:	1b12      	subs	r2, r2, r4
 80131e4:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80131e8:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 80131ec:	1ad2      	subs	r2, r2, r3
 80131ee:	4b16      	ldr	r3, [pc, #88]	; (8013248 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1b4>)
 80131f0:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 80131f4:	681a      	ldr	r2, [r3, #0]
 80131f6:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
 80131fa:	b109      	cbz	r1, 8013200 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16c>
 80131fc:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
 80131fe:	b900      	cbnz	r0, 8013202 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16e>
 8013200:	6890      	ldr	r0, [r2, #8]
 8013202:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8013206:	9b07      	ldr	r3, [sp, #28]
 8013208:	6801      	ldr	r1, [r0, #0]
 801320a:	f04f 0c01 	mov.w	ip, #1
 801320e:	f8cd c008 	str.w	ip, [sp, #8]
 8013212:	f897 c028 	ldrb.w	ip, [r7, #40]	; 0x28
 8013216:	f8cd c004 	str.w	ip, [sp, #4]
 801321a:	4413      	add	r3, r2
 801321c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8013220:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
 8013224:	f8cd c000 	str.w	ip, [sp]
 8013228:	4422      	add	r2, r4
 801322a:	f8d1 9008 	ldr.w	r9, [r1, #8]
 801322e:	b21b      	sxth	r3, r3
 8013230:	b212      	sxth	r2, r2
 8013232:	4659      	mov	r1, fp
 8013234:	47c8      	blx	r9
 8013236:	46d1      	mov	r9, sl
 8013238:	e788      	b.n	801314c <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xb8>
 801323a:	2300      	movs	r3, #0
 801323c:	e9cd 3310 	strd	r3, r3, [sp, #64]	; 0x40
 8013240:	e7cc      	b.n	80131dc <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x148>
 8013242:	b013      	add	sp, #76	; 0x4c
 8013244:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013248:	2001381c 	.word	0x2001381c

0801324c <_ZNK8touchgfx10TiledImage12getSolidRectEv>:
 801324c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013250:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8013254:	2bff      	cmp	r3, #255	; 0xff
 8013256:	4606      	mov	r6, r0
 8013258:	4689      	mov	r9, r1
 801325a:	d008      	beq.n	801326e <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x22>
 801325c:	2300      	movs	r3, #0
 801325e:	8003      	strh	r3, [r0, #0]
 8013260:	8043      	strh	r3, [r0, #2]
 8013262:	8083      	strh	r3, [r0, #4]
 8013264:	4630      	mov	r0, r6
 8013266:	80f3      	strh	r3, [r6, #6]
 8013268:	b003      	add	sp, #12
 801326a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801326e:	f101 0b26 	add.w	fp, r1, #38	; 0x26
 8013272:	4659      	mov	r1, fp
 8013274:	4668      	mov	r0, sp
 8013276:	f006 fdab 	bl	8019dd0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801327a:	4658      	mov	r0, fp
 801327c:	f9bd 4004 	ldrsh.w	r4, [sp, #4]
 8013280:	f9bd 7000 	ldrsh.w	r7, [sp]
 8013284:	f9bd a002 	ldrsh.w	sl, [sp, #2]
 8013288:	f9bd 8006 	ldrsh.w	r8, [sp, #6]
 801328c:	f006 fd38 	bl	8019d00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013290:	4284      	cmp	r4, r0
 8013292:	d10d      	bne.n	80132b0 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x64>
 8013294:	f9b9 5008 	ldrsh.w	r5, [r9, #8]
 8013298:	4658      	mov	r0, fp
 801329a:	f006 fd65 	bl	8019d68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801329e:	4580      	cmp	r8, r0
 80132a0:	d129      	bne.n	80132f6 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0xaa>
 80132a2:	f9b9 300a 	ldrsh.w	r3, [r9, #10]
 80132a6:	8037      	strh	r7, [r6, #0]
 80132a8:	f8a6 a002 	strh.w	sl, [r6, #2]
 80132ac:	80b5      	strh	r5, [r6, #4]
 80132ae:	e7d9      	b.n	8013264 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x18>
 80132b0:	f8b9 502a 	ldrh.w	r5, [r9, #42]	; 0x2a
 80132b4:	4658      	mov	r0, fp
 80132b6:	f006 fd23 	bl	8019d00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80132ba:	1b7f      	subs	r7, r7, r5
 80132bc:	b2bd      	uxth	r5, r7
 80132be:	b22f      	sxth	r7, r5
 80132c0:	4428      	add	r0, r5
 80132c2:	2f00      	cmp	r7, #0
 80132c4:	b2a3      	uxth	r3, r4
 80132c6:	b280      	uxth	r0, r0
 80132c8:	bfb8      	it	lt
 80132ca:	18ed      	addlt	r5, r5, r3
 80132cc:	4403      	add	r3, r0
 80132ce:	b29b      	uxth	r3, r3
 80132d0:	f9b9 2008 	ldrsh.w	r2, [r9, #8]
 80132d4:	bfb8      	it	lt
 80132d6:	b22d      	sxthlt	r5, r5
 80132d8:	b219      	sxth	r1, r3
 80132da:	bfae      	itee	ge
 80132dc:	4625      	movge	r5, r4
 80132de:	ea25 75e5 	biclt.w	r5, r5, r5, asr #31
 80132e2:	2700      	movlt	r7, #0
 80132e4:	4291      	cmp	r1, r2
 80132e6:	bfc4      	itt	gt
 80132e8:	1a9c      	subgt	r4, r3, r2
 80132ea:	b224      	sxthgt	r4, r4
 80132ec:	42ac      	cmp	r4, r5
 80132ee:	bfc4      	itt	gt
 80132f0:	b207      	sxthgt	r7, r0
 80132f2:	4625      	movgt	r5, r4
 80132f4:	e7d0      	b.n	8013298 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x4c>
 80132f6:	f8b9 402c 	ldrh.w	r4, [r9, #44]	; 0x2c
 80132fa:	4658      	mov	r0, fp
 80132fc:	f006 fd34 	bl	8019d68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013300:	ebaa 0404 	sub.w	r4, sl, r4
 8013304:	b2a4      	uxth	r4, r4
 8013306:	fa0f fa84 	sxth.w	sl, r4
 801330a:	4420      	add	r0, r4
 801330c:	f1ba 0f00 	cmp.w	sl, #0
 8013310:	fa1f f288 	uxth.w	r2, r8
 8013314:	b280      	uxth	r0, r0
 8013316:	bfb8      	it	lt
 8013318:	18a3      	addlt	r3, r4, r2
 801331a:	4402      	add	r2, r0
 801331c:	b292      	uxth	r2, r2
 801331e:	f9b9 100a 	ldrsh.w	r1, [r9, #10]
 8013322:	bfb8      	it	lt
 8013324:	b21b      	sxthlt	r3, r3
 8013326:	b214      	sxth	r4, r2
 8013328:	bfae      	itee	ge
 801332a:	4643      	movge	r3, r8
 801332c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013330:	f04f 0a00 	movlt.w	sl, #0
 8013334:	428c      	cmp	r4, r1
 8013336:	bfc4      	itt	gt
 8013338:	eba2 0801 	subgt.w	r8, r2, r1
 801333c:	fa0f f888 	sxthgt.w	r8, r8
 8013340:	4598      	cmp	r8, r3
 8013342:	bfc4      	itt	gt
 8013344:	fa0f fa80 	sxthgt.w	sl, r0
 8013348:	4643      	movgt	r3, r8
 801334a:	e7ac      	b.n	80132a6 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x5a>

0801334c <_ZNK8touchgfx5Image17invalidateContentEv>:
 801334c:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8013350:	b12a      	cbz	r2, 801335e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8013352:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8013356:	b112      	cbz	r2, 801335e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8013358:	6803      	ldr	r3, [r0, #0]
 801335a:	695b      	ldr	r3, [r3, #20]
 801335c:	4718      	bx	r3
 801335e:	4770      	bx	lr

08013360 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8013360:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8013364:	600b      	str	r3, [r1, #0]
 8013366:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 801336a:	6013      	str	r3, [r2, #0]
 801336c:	4770      	bx	lr

0801336e <_ZN8touchgfx5Gauge8setWidthEs>:
 801336e:	8101      	strh	r1, [r0, #8]
 8013370:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8013374:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8013378:	4770      	bx	lr

0801337a <_ZN8touchgfx5Gauge9setHeightEs>:
 801337a:	8141      	strh	r1, [r0, #10]
 801337c:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8013380:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8013384:	4770      	bx	lr

08013386 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8013386:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 801338a:	4770      	bx	lr

0801338c <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 801338c:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8013390:	4770      	bx	lr

08013392 <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8013392:	4770      	bx	lr

08013394 <_ZN8touchgfx5GaugeD1Ev>:
 8013394:	4770      	bx	lr

08013396 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8013396:	b538      	push	{r3, r4, r5, lr}
 8013398:	4604      	mov	r4, r0
 801339a:	460d      	mov	r5, r1
 801339c:	f7fc fe07 	bl	800ffae <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 80133a0:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 80133a4:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 80133a8:	bd38      	pop	{r3, r4, r5, pc}

080133aa <_ZN8touchgfx5GaugeD0Ev>:
 80133aa:	b510      	push	{r4, lr}
 80133ac:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 80133b0:	4604      	mov	r4, r0
 80133b2:	f017 f90a 	bl	802a5ca <_ZdlPvj>
 80133b6:	4620      	mov	r0, r4
 80133b8:	bd10      	pop	{r4, pc}

080133ba <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 80133ba:	b510      	push	{r4, lr}
 80133bc:	6803      	ldr	r3, [r0, #0]
 80133be:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80133c2:	4604      	mov	r4, r0
 80133c4:	4798      	blx	r3
 80133c6:	b170      	cbz	r0, 80133e6 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80133c8:	6823      	ldr	r3, [r4, #0]
 80133ca:	4620      	mov	r0, r4
 80133cc:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80133d0:	4798      	blx	r3
 80133d2:	b140      	cbz	r0, 80133e6 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80133d4:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80133d8:	b12b      	cbz	r3, 80133e6 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80133da:	6823      	ldr	r3, [r4, #0]
 80133dc:	4620      	mov	r0, r4
 80133de:	695b      	ldr	r3, [r3, #20]
 80133e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80133e4:	4718      	bx	r3
 80133e6:	bd10      	pop	{r4, pc}

080133e8 <_ZN8touchgfx5GaugeC1Ev>:
 80133e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80133ea:	4604      	mov	r4, r0
 80133ec:	4626      	mov	r6, r4
 80133ee:	f7fc feff 	bl	80101f0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 80133f2:	4b18      	ldr	r3, [pc, #96]	; (8013454 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 80133f4:	f846 3bb4 	str.w	r3, [r6], #180
 80133f8:	a902      	add	r1, sp, #8
 80133fa:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80133fe:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8013402:	4630      	mov	r0, r6
 8013404:	f015 f9a4 	bl	8028750 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8013408:	2500      	movs	r5, #0
 801340a:	2301      	movs	r3, #1
 801340c:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8013410:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8013414:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8013418:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 801341c:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8013420:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8013424:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8013428:	4638      	mov	r0, r7
 801342a:	f014 fbd5 	bl	8027bd8 <_ZN8touchgfx6CircleC1Ev>
 801342e:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8013432:	4620      	mov	r0, r4
 8013434:	f7fc ff7d 	bl	8010332 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8013438:	4639      	mov	r1, r7
 801343a:	4620      	mov	r0, r4
 801343c:	f7fc ff38 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8013440:	4620      	mov	r0, r4
 8013442:	4631      	mov	r1, r6
 8013444:	f7fc ff34 	bl	80102b0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8013448:	4620      	mov	r0, r4
 801344a:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 801344e:	b003      	add	sp, #12
 8013450:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013452:	bf00      	nop
 8013454:	0802f3c0 	.word	0x0802f3c0

08013458 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8013458:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 801345c:	4770      	bx	lr

0801345e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 801345e:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8013462:	4770      	bx	lr

08013464 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8013464:	b538      	push	{r3, r4, r5, lr}
 8013466:	8902      	ldrh	r2, [r0, #8]
 8013468:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801346c:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8013470:	4604      	mov	r4, r0
 8013472:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8013476:	2200      	movs	r2, #0
 8013478:	4611      	mov	r1, r2
 801347a:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 801347e:	4628      	mov	r0, r5
 8013480:	f7ef fa52 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 8013484:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8013488:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 801348c:	1a9b      	subs	r3, r3, r2
 801348e:	ee07 3a90 	vmov	s15, r3
 8013492:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8013496:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 801349a:	1a9b      	subs	r3, r3, r2
 801349c:	ee07 3a10 	vmov	s14, r3
 80134a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80134a4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80134a8:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 80134ac:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 80134b0:	4628      	mov	r0, r5
 80134b2:	f015 f999 	bl	80287e8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 80134b6:	4b16      	ldr	r3, [pc, #88]	; (8013510 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 80134b8:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 80134bc:	4628      	mov	r0, r5
 80134be:	f015 f993 	bl	80287e8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 80134c2:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 80134c6:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 80134ca:	ee07 3a90 	vmov	s15, r3
 80134ce:	ee07 2a10 	vmov	s14, r2
 80134d2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80134d6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80134da:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 80134de:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 80134e2:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 80134e6:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80134ea:	4628      	mov	r0, r5
 80134ec:	f015 f97c 	bl	80287e8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 80134f0:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 80134f4:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 80134f8:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 80134fc:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8013500:	4628      	mov	r0, r5
 8013502:	f015 f971 	bl	80287e8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013506:	2301      	movs	r3, #1
 8013508:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 801350c:	bd38      	pop	{r3, r4, r5, pc}
 801350e:	bf00      	nop
 8013510:	43960000 	.word	0x43960000

08013514 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8013514:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013516:	4604      	mov	r4, r0
 8013518:	a802      	add	r0, sp, #8
 801351a:	4616      	mov	r6, r2
 801351c:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8013520:	461d      	mov	r5, r3
 8013522:	4601      	mov	r1, r0
 8013524:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8013528:	f015 fab4 	bl	8028a94 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 801352c:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8013530:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8013534:	4620      	mov	r0, r4
 8013536:	f7ff ff95 	bl	8013464 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 801353a:	b002      	add	sp, #8
 801353c:	bd70      	pop	{r4, r5, r6, pc}

0801353e <_ZN8touchgfx5Gauge9setCenterEii>:
 801353e:	b570      	push	{r4, r5, r6, lr}
 8013540:	4606      	mov	r6, r0
 8013542:	460d      	mov	r5, r1
 8013544:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8013548:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 801354c:	4614      	mov	r4, r2
 801354e:	f7ff ff89 	bl	8013464 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8013552:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8013556:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 801355a:	1aa4      	subs	r4, r4, r2
 801355c:	1a6d      	subs	r5, r5, r1
 801355e:	0164      	lsls	r4, r4, #5
 8013560:	016d      	lsls	r5, r5, #5
 8013562:	3410      	adds	r4, #16
 8013564:	3510      	adds	r5, #16
 8013566:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 801356a:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 801356e:	bd70      	pop	{r4, r5, r6, pc}

08013570 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8013570:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013572:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8013574:	0149      	lsls	r1, r1, #5
 8013576:	4299      	cmp	r1, r3
 8013578:	4604      	mov	r4, r0
 801357a:	9101      	str	r1, [sp, #4]
 801357c:	d00b      	beq.n	8013596 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 801357e:	4601      	mov	r1, r0
 8013580:	aa01      	add	r2, sp, #4
 8013582:	a802      	add	r0, sp, #8
 8013584:	f014 fd26 	bl	8027fd4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8013588:	9b01      	ldr	r3, [sp, #4]
 801358a:	63e3      	str	r3, [r4, #60]	; 0x3c
 801358c:	6823      	ldr	r3, [r4, #0]
 801358e:	a902      	add	r1, sp, #8
 8013590:	691b      	ldr	r3, [r3, #16]
 8013592:	4620      	mov	r0, r4
 8013594:	4798      	blx	r3
 8013596:	b004      	add	sp, #16
 8013598:	bd10      	pop	{r4, pc}
	...

0801359c <_ZN8touchgfx5Gauge8setValueEi>:
 801359c:	b570      	push	{r4, r5, r6, lr}
 801359e:	4604      	mov	r4, r0
 80135a0:	f7fc fd58 	bl	8010054 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 80135a4:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 80135a8:	429a      	cmp	r2, r3
 80135aa:	bfac      	ite	ge
 80135ac:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 80135b0:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 80135b4:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 80135b8:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 80135bc:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 80135c0:	1ac9      	subs	r1, r1, r3
 80135c2:	2900      	cmp	r1, #0
 80135c4:	bfb8      	it	lt
 80135c6:	4249      	neglt	r1, r1
 80135c8:	b289      	uxth	r1, r1
 80135ca:	4620      	mov	r0, r4
 80135cc:	f7fc fd64 	bl	8010098 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 80135d0:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 80135d4:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 80135d8:	eddf 6a19 	vldr	s13, [pc, #100]	; 8013640 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 80135dc:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8013644 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 80135e0:	429a      	cmp	r2, r3
 80135e2:	4605      	mov	r5, r0
 80135e4:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 80135e8:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 80135ec:	da15      	bge.n	801361a <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 80135ee:	1b5b      	subs	r3, r3, r5
 80135f0:	ee07 3a90 	vmov	s15, r3
 80135f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80135f8:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 80135fc:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8013600:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8013604:	ee21 1a07 	vmul.f32	s2, s2, s14
 8013608:	f015 f85d 	bl	80286c6 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 801360c:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8013610:	1b49      	subs	r1, r1, r5
 8013612:	4630      	mov	r0, r6
 8013614:	f7ff ffac 	bl	8013570 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8013618:	bd70      	pop	{r4, r5, r6, pc}
 801361a:	442b      	add	r3, r5
 801361c:	ee07 3a90 	vmov	s15, r3
 8013620:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013624:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8013628:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 801362c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8013630:	ee21 1a07 	vmul.f32	s2, s2, s14
 8013634:	f015 f847 	bl	80286c6 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8013638:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 801363c:	4429      	add	r1, r5
 801363e:	e7e8      	b.n	8013612 <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8013640:	43340000 	.word	0x43340000
 8013644:	40490fdb 	.word	0x40490fdb

08013648 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8013648:	b510      	push	{r4, lr}
 801364a:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 801364e:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8013652:	0149      	lsls	r1, r1, #5
 8013654:	0152      	lsls	r2, r2, #5
 8013656:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 801365a:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 801365e:	4604      	mov	r4, r0
 8013660:	f7fc fca2 	bl	800ffa8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8013664:	4601      	mov	r1, r0
 8013666:	4620      	mov	r0, r4
 8013668:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801366c:	f7ff bf96 	b.w	801359c <_ZN8touchgfx5Gauge8setValueEi>

08013670 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8013670:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8013674:	4770      	bx	lr

08013676 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8013676:	b570      	push	{r4, r5, r6, lr}
 8013678:	880b      	ldrh	r3, [r1, #0]
 801367a:	85c3      	strh	r3, [r0, #46]	; 0x2e
 801367c:	4605      	mov	r5, r0
 801367e:	8813      	ldrh	r3, [r2, #0]
 8013680:	f825 3f30 	strh.w	r3, [r5, #48]!
 8013684:	4604      	mov	r4, r0
 8013686:	4628      	mov	r0, r5
 8013688:	f006 fb3a 	bl	8019d00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801368c:	4606      	mov	r6, r0
 801368e:	4628      	mov	r0, r5
 8013690:	f006 fb6a 	bl	8019d68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013694:	6823      	ldr	r3, [r4, #0]
 8013696:	4605      	mov	r5, r0
 8013698:	4631      	mov	r1, r6
 801369a:	4620      	mov	r0, r4
 801369c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801369e:	4798      	blx	r3
 80136a0:	6823      	ldr	r3, [r4, #0]
 80136a2:	4629      	mov	r1, r5
 80136a4:	4620      	mov	r0, r4
 80136a6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80136a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80136ac:	4718      	bx	r3

080136ae <_ZN8touchgfx14AbstractButton13executeActionEv>:
 80136ae:	b510      	push	{r4, lr}
 80136b0:	4604      	mov	r4, r0
 80136b2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80136b4:	b150      	cbz	r0, 80136cc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 80136b6:	6803      	ldr	r3, [r0, #0]
 80136b8:	68db      	ldr	r3, [r3, #12]
 80136ba:	4798      	blx	r3
 80136bc:	b130      	cbz	r0, 80136cc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 80136be:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80136c0:	6803      	ldr	r3, [r0, #0]
 80136c2:	4621      	mov	r1, r4
 80136c4:	689b      	ldr	r3, [r3, #8]
 80136c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80136ca:	4718      	bx	r3
 80136cc:	bd10      	pop	{r4, pc}

080136ce <_ZNK8touchgfx6Button12getSolidRectEv>:
 80136ce:	b510      	push	{r4, lr}
 80136d0:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 80136d4:	2bff      	cmp	r3, #255	; 0xff
 80136d6:	4604      	mov	r4, r0
 80136d8:	d006      	beq.n	80136e8 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 80136da:	2300      	movs	r3, #0
 80136dc:	8003      	strh	r3, [r0, #0]
 80136de:	8043      	strh	r3, [r0, #2]
 80136e0:	8083      	strh	r3, [r0, #4]
 80136e2:	80c3      	strh	r3, [r0, #6]
 80136e4:	4620      	mov	r0, r4
 80136e6:	bd10      	pop	{r4, pc}
 80136e8:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 80136ec:	b11b      	cbz	r3, 80136f6 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 80136ee:	3130      	adds	r1, #48	; 0x30
 80136f0:	f006 fb6e 	bl	8019dd0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80136f4:	e7f6      	b.n	80136e4 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 80136f6:	312e      	adds	r1, #46	; 0x2e
 80136f8:	e7fa      	b.n	80136f0 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

080136fc <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 80136fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013700:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013704:	b08a      	sub	sp, #40	; 0x28
 8013706:	4604      	mov	r4, r0
 8013708:	4688      	mov	r8, r1
 801370a:	2b00      	cmp	r3, #0
 801370c:	d066      	beq.n	80137dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 801370e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8013710:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013714:	a805      	add	r0, sp, #20
 8013716:	f006 faf3 	bl	8019d00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801371a:	4607      	mov	r7, r0
 801371c:	a805      	add	r0, sp, #20
 801371e:	f006 fb23 	bl	8019d68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013722:	f9b8 6000 	ldrsh.w	r6, [r8]
 8013726:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 801372a:	4432      	add	r2, r6
 801372c:	b292      	uxth	r2, r2
 801372e:	2300      	movs	r3, #0
 8013730:	fa0f fc82 	sxth.w	ip, r2
 8013734:	459c      	cmp	ip, r3
 8013736:	9306      	str	r3, [sp, #24]
 8013738:	dd52      	ble.n	80137e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801373a:	42b7      	cmp	r7, r6
 801373c:	dd50      	ble.n	80137e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801373e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8013742:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8013746:	442b      	add	r3, r5
 8013748:	b29b      	uxth	r3, r3
 801374a:	b219      	sxth	r1, r3
 801374c:	2900      	cmp	r1, #0
 801374e:	dd47      	ble.n	80137e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013750:	42a8      	cmp	r0, r5
 8013752:	dd45      	ble.n	80137e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013754:	4567      	cmp	r7, ip
 8013756:	bfb8      	it	lt
 8013758:	b2ba      	uxthlt	r2, r7
 801375a:	4288      	cmp	r0, r1
 801375c:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8013760:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8013764:	bfb8      	it	lt
 8013766:	b283      	uxthlt	r3, r0
 8013768:	1b92      	subs	r2, r2, r6
 801376a:	1b5b      	subs	r3, r3, r5
 801376c:	f8ad 201c 	strh.w	r2, [sp, #28]
 8013770:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013774:	f8ad 6018 	strh.w	r6, [sp, #24]
 8013778:	f8ad 501a 	strh.w	r5, [sp, #26]
 801377c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013780:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013784:	429a      	cmp	r2, r3
 8013786:	d026      	beq.n	80137d6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013788:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801378c:	2b00      	cmp	r3, #0
 801378e:	dd22      	ble.n	80137d6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013790:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013794:	2b00      	cmp	r3, #0
 8013796:	dd1e      	ble.n	80137d6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013798:	2300      	movs	r3, #0
 801379a:	e9cd 3308 	strd	r3, r3, [sp, #32]
 801379e:	6823      	ldr	r3, [r4, #0]
 80137a0:	a908      	add	r1, sp, #32
 80137a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80137a4:	4620      	mov	r0, r4
 80137a6:	4798      	blx	r3
 80137a8:	4b0f      	ldr	r3, [pc, #60]	; (80137e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 80137aa:	681b      	ldr	r3, [r3, #0]
 80137ac:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80137b0:	b10a      	cbz	r2, 80137b6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 80137b2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80137b4:	b900      	cbnz	r0, 80137b8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 80137b6:	6898      	ldr	r0, [r3, #8]
 80137b8:	6801      	ldr	r1, [r0, #0]
 80137ba:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80137be:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80137c2:	2501      	movs	r5, #1
 80137c4:	9502      	str	r5, [sp, #8]
 80137c6:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80137ca:	9401      	str	r4, [sp, #4]
 80137cc:	ac06      	add	r4, sp, #24
 80137ce:	9400      	str	r4, [sp, #0]
 80137d0:	688c      	ldr	r4, [r1, #8]
 80137d2:	a905      	add	r1, sp, #20
 80137d4:	47a0      	blx	r4
 80137d6:	b00a      	add	sp, #40	; 0x28
 80137d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80137dc:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80137de:	e797      	b.n	8013710 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 80137e0:	2300      	movs	r3, #0
 80137e2:	9307      	str	r3, [sp, #28]
 80137e4:	e7ca      	b.n	801377c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 80137e6:	bf00      	nop
 80137e8:	2001381c 	.word	0x2001381c

080137ec <_ZNK8touchgfx6Button17invalidateContentEv>:
 80137ec:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 80137f0:	b12a      	cbz	r2, 80137fe <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80137f2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80137f6:	b112      	cbz	r2, 80137fe <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80137f8:	6803      	ldr	r3, [r0, #0]
 80137fa:	695b      	ldr	r3, [r3, #20]
 80137fc:	4718      	bx	r3
 80137fe:	4770      	bx	lr

08013800 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8013800:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013804:	4b2f      	ldr	r3, [pc, #188]	; (80138c4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8013806:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013808:	881b      	ldrh	r3, [r3, #0]
 801380a:	4293      	cmp	r3, r2
 801380c:	b08d      	sub	sp, #52	; 0x34
 801380e:	4604      	mov	r4, r0
 8013810:	460f      	mov	r7, r1
 8013812:	d954      	bls.n	80138be <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8013814:	4b2c      	ldr	r3, [pc, #176]	; (80138c8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8013816:	6819      	ldr	r1, [r3, #0]
 8013818:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 801381c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8013820:	4a2a      	ldr	r2, [pc, #168]	; (80138cc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8013822:	6812      	ldr	r2, [r2, #0]
 8013824:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8013828:	2900      	cmp	r1, #0
 801382a:	d048      	beq.n	80138be <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 801382c:	785a      	ldrb	r2, [r3, #1]
 801382e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8013832:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8013836:	4b26      	ldr	r3, [pc, #152]	; (80138d0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8013838:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 801383c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8013840:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8013844:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8013846:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 801384a:	9107      	str	r1, [sp, #28]
 801384c:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8013850:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8013854:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8013858:	681a      	ldr	r2, [r3, #0]
 801385a:	f88d 8020 	strb.w	r8, [sp, #32]
 801385e:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8013862:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8013866:	9609      	str	r6, [sp, #36]	; 0x24
 8013868:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 801386c:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8013870:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8013874:	b10b      	cbz	r3, 801387a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8013876:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8013878:	b905      	cbnz	r5, 801387c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 801387a:	6895      	ldr	r5, [r2, #8]
 801387c:	ae05      	add	r6, sp, #20
 801387e:	4621      	mov	r1, r4
 8013880:	4630      	mov	r0, r6
 8013882:	f003 ff71 	bl	8017768 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013886:	4b13      	ldr	r3, [pc, #76]	; (80138d4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8013888:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801388a:	6818      	ldr	r0, [r3, #0]
 801388c:	f7f4 fea0 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 8013890:	6823      	ldr	r3, [r4, #0]
 8013892:	4680      	mov	r8, r0
 8013894:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013896:	4620      	mov	r0, r4
 8013898:	4798      	blx	r3
 801389a:	6823      	ldr	r3, [r4, #0]
 801389c:	4681      	mov	r9, r0
 801389e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80138a2:	4620      	mov	r0, r4
 80138a4:	4798      	blx	r3
 80138a6:	e9cd 9002 	strd	r9, r0, [sp, #8]
 80138aa:	ab07      	add	r3, sp, #28
 80138ac:	9300      	str	r3, [sp, #0]
 80138ae:	f8cd 8004 	str.w	r8, [sp, #4]
 80138b2:	463b      	mov	r3, r7
 80138b4:	e896 0006 	ldmia.w	r6, {r1, r2}
 80138b8:	4628      	mov	r0, r5
 80138ba:	f7f4 fe3b 	bl	8008534 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80138be:	b00d      	add	sp, #52	; 0x34
 80138c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80138c4:	20013878 	.word	0x20013878
 80138c8:	20013874 	.word	0x20013874
 80138cc:	2001387c 	.word	0x2001387c
 80138d0:	2001381c 	.word	0x2001381c
 80138d4:	20013880 	.word	0x20013880

080138d8 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 80138d8:	4770      	bx	lr

080138da <_ZN8touchgfx14ButtonWithIconD1Ev>:
 80138da:	4770      	bx	lr

080138dc <_ZN8touchgfx14ButtonWithIconD0Ev>:
 80138dc:	b510      	push	{r4, lr}
 80138de:	213c      	movs	r1, #60	; 0x3c
 80138e0:	4604      	mov	r4, r0
 80138e2:	f016 fe72 	bl	802a5ca <_ZdlPvj>
 80138e6:	4620      	mov	r0, r4
 80138e8:	bd10      	pop	{r4, pc}

080138ea <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 80138ea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80138ee:	461c      	mov	r4, r3
 80138f0:	4606      	mov	r6, r0
 80138f2:	9f06      	ldr	r7, [sp, #24]
 80138f4:	f7ff febf 	bl	8013676 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80138f8:	8823      	ldrh	r3, [r4, #0]
 80138fa:	86b3      	strh	r3, [r6, #52]	; 0x34
 80138fc:	883b      	ldrh	r3, [r7, #0]
 80138fe:	86f3      	strh	r3, [r6, #54]	; 0x36
 8013900:	4638      	mov	r0, r7
 8013902:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8013906:	f006 f9fb 	bl	8019d00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801390a:	f04f 0802 	mov.w	r8, #2
 801390e:	fb95 f5f8 	sdiv	r5, r5, r8
 8013912:	b2ad      	uxth	r5, r5
 8013914:	fb90 f0f8 	sdiv	r0, r0, r8
 8013918:	1a2d      	subs	r5, r5, r0
 801391a:	8735      	strh	r5, [r6, #56]	; 0x38
 801391c:	4638      	mov	r0, r7
 801391e:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8013922:	fb94 f4f8 	sdiv	r4, r4, r8
 8013926:	f006 fa1f 	bl	8019d68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801392a:	b2a4      	uxth	r4, r4
 801392c:	fb90 f0f8 	sdiv	r0, r0, r8
 8013930:	1a24      	subs	r4, r4, r0
 8013932:	8774      	strh	r4, [r6, #58]	; 0x3a
 8013934:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013938 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8013938:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801393c:	4604      	mov	r4, r0
 801393e:	b08c      	sub	sp, #48	; 0x30
 8013940:	460d      	mov	r5, r1
 8013942:	f7ff fedb 	bl	80136fc <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8013946:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801394a:	2b00      	cmp	r3, #0
 801394c:	d05d      	beq.n	8013a0a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 801394e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8013950:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013954:	a805      	add	r0, sp, #20
 8013956:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 801395a:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 801395e:	f006 f9cf 	bl	8019d00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013962:	4606      	mov	r6, r0
 8013964:	a805      	add	r0, sp, #20
 8013966:	f006 f9ff 	bl	8019d68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801396a:	6869      	ldr	r1, [r5, #4]
 801396c:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013970:	6828      	ldr	r0, [r5, #0]
 8013972:	f8ad 8018 	strh.w	r8, [sp, #24]
 8013976:	ab08      	add	r3, sp, #32
 8013978:	ad08      	add	r5, sp, #32
 801397a:	c303      	stmia	r3!, {r0, r1}
 801397c:	a906      	add	r1, sp, #24
 801397e:	4628      	mov	r0, r5
 8013980:	f8ad 701a 	strh.w	r7, [sp, #26]
 8013984:	f8ad 601c 	strh.w	r6, [sp, #28]
 8013988:	f7fc fe18 	bl	80105bc <_ZN8touchgfx4RectaNERKS0_>
 801398c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013990:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013994:	429a      	cmp	r2, r3
 8013996:	d035      	beq.n	8013a04 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8013998:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 801399c:	2b00      	cmp	r3, #0
 801399e:	dd31      	ble.n	8013a04 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80139a0:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 80139a4:	2b00      	cmp	r3, #0
 80139a6:	dd2d      	ble.n	8013a04 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80139a8:	2300      	movs	r3, #0
 80139aa:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 80139ae:	6823      	ldr	r3, [r4, #0]
 80139b0:	a90a      	add	r1, sp, #40	; 0x28
 80139b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80139b4:	4620      	mov	r0, r4
 80139b6:	4798      	blx	r3
 80139b8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80139bc:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80139be:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80139c2:	1a9b      	subs	r3, r3, r2
 80139c4:	f8ad 3020 	strh.w	r3, [sp, #32]
 80139c8:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 80139ca:	1ac9      	subs	r1, r1, r3
 80139cc:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 80139d0:	490f      	ldr	r1, [pc, #60]	; (8013a10 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 80139d2:	6809      	ldr	r1, [r1, #0]
 80139d4:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 80139d8:	b108      	cbz	r0, 80139de <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 80139da:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 80139dc:	b900      	cbnz	r0, 80139e0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 80139de:	6888      	ldr	r0, [r1, #8]
 80139e0:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 80139e4:	440b      	add	r3, r1
 80139e6:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80139ea:	2601      	movs	r6, #1
 80139ec:	440a      	add	r2, r1
 80139ee:	6801      	ldr	r1, [r0, #0]
 80139f0:	9602      	str	r6, [sp, #8]
 80139f2:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80139f6:	e9cd 5400 	strd	r5, r4, [sp]
 80139fa:	b21b      	sxth	r3, r3
 80139fc:	688c      	ldr	r4, [r1, #8]
 80139fe:	b212      	sxth	r2, r2
 8013a00:	a905      	add	r1, sp, #20
 8013a02:	47a0      	blx	r4
 8013a04:	b00c      	add	sp, #48	; 0x30
 8013a06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013a0a:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8013a0c:	e7a0      	b.n	8013950 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 8013a0e:	bf00      	nop
 8013a10:	2001381c 	.word	0x2001381c

08013a14 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8013a14:	b510      	push	{r4, lr}
 8013a16:	2101      	movs	r1, #1
 8013a18:	2200      	movs	r2, #0
 8013a1a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8013a1e:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8013a22:	4c0e      	ldr	r4, [pc, #56]	; (8013a5c <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8013a24:	8082      	strh	r2, [r0, #4]
 8013a26:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013a2a:	80c2      	strh	r2, [r0, #6]
 8013a2c:	8102      	strh	r2, [r0, #8]
 8013a2e:	8142      	strh	r2, [r0, #10]
 8013a30:	8182      	strh	r2, [r0, #12]
 8013a32:	81c2      	strh	r2, [r0, #14]
 8013a34:	8202      	strh	r2, [r0, #16]
 8013a36:	8242      	strh	r2, [r0, #18]
 8013a38:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8013a3c:	61c2      	str	r2, [r0, #28]
 8013a3e:	8402      	strh	r2, [r0, #32]
 8013a40:	8442      	strh	r2, [r0, #34]	; 0x22
 8013a42:	6282      	str	r2, [r0, #40]	; 0x28
 8013a44:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8013a48:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8013a4a:	8601      	strh	r1, [r0, #48]	; 0x30
 8013a4c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8013a50:	6004      	str	r4, [r0, #0]
 8013a52:	8681      	strh	r1, [r0, #52]	; 0x34
 8013a54:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013a56:	8702      	strh	r2, [r0, #56]	; 0x38
 8013a58:	8742      	strh	r2, [r0, #58]	; 0x3a
 8013a5a:	bd10      	pop	{r4, pc}
 8013a5c:	0802f4a8 	.word	0x0802f4a8

08013a60 <_ZN8touchgfx5ImageD1Ev>:
 8013a60:	4770      	bx	lr

08013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8013a62:	b570      	push	{r4, r5, r6, lr}
 8013a64:	880b      	ldrh	r3, [r1, #0]
 8013a66:	84c3      	strh	r3, [r0, #38]	; 0x26
 8013a68:	4604      	mov	r4, r0
 8013a6a:	4608      	mov	r0, r1
 8013a6c:	460d      	mov	r5, r1
 8013a6e:	f006 f947 	bl	8019d00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013a72:	4606      	mov	r6, r0
 8013a74:	4628      	mov	r0, r5
 8013a76:	f006 f977 	bl	8019d68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013a7a:	6823      	ldr	r3, [r4, #0]
 8013a7c:	4605      	mov	r5, r0
 8013a7e:	4631      	mov	r1, r6
 8013a80:	4620      	mov	r0, r4
 8013a82:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013a84:	4798      	blx	r3
 8013a86:	6823      	ldr	r3, [r4, #0]
 8013a88:	4629      	mov	r1, r5
 8013a8a:	4620      	mov	r0, r4
 8013a8c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013a8e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013a92:	4718      	bx	r3

08013a94 <_ZN8touchgfx5ImageD0Ev>:
 8013a94:	b510      	push	{r4, lr}
 8013a96:	212c      	movs	r1, #44	; 0x2c
 8013a98:	4604      	mov	r4, r0
 8013a9a:	f016 fd96 	bl	802a5ca <_ZdlPvj>
 8013a9e:	4620      	mov	r0, r4
 8013aa0:	bd10      	pop	{r4, pc}

08013aa2 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8013aa2:	b510      	push	{r4, lr}
 8013aa4:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8013aa8:	2bff      	cmp	r3, #255	; 0xff
 8013aaa:	4604      	mov	r4, r0
 8013aac:	d006      	beq.n	8013abc <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8013aae:	2300      	movs	r3, #0
 8013ab0:	8003      	strh	r3, [r0, #0]
 8013ab2:	8043      	strh	r3, [r0, #2]
 8013ab4:	8083      	strh	r3, [r0, #4]
 8013ab6:	80c3      	strh	r3, [r0, #6]
 8013ab8:	4620      	mov	r0, r4
 8013aba:	bd10      	pop	{r4, pc}
 8013abc:	3126      	adds	r1, #38	; 0x26
 8013abe:	f006 f987 	bl	8019dd0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013ac2:	e7f9      	b.n	8013ab8 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08013ac4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8013ac4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013ac8:	4604      	mov	r4, r0
 8013aca:	b088      	sub	sp, #32
 8013acc:	f854 3b26 	ldr.w	r3, [r4], #38
 8013ad0:	2500      	movs	r5, #0
 8013ad2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013ad4:	460f      	mov	r7, r1
 8013ad6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8013ada:	a904      	add	r1, sp, #16
 8013adc:	4606      	mov	r6, r0
 8013ade:	4798      	blx	r3
 8013ae0:	4620      	mov	r0, r4
 8013ae2:	f006 f90d 	bl	8019d00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013ae6:	4680      	mov	r8, r0
 8013ae8:	4620      	mov	r0, r4
 8013aea:	f006 f93d 	bl	8019d68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013aee:	9506      	str	r5, [sp, #24]
 8013af0:	ad06      	add	r5, sp, #24
 8013af2:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013af6:	4639      	mov	r1, r7
 8013af8:	4628      	mov	r0, r5
 8013afa:	f8ad 801c 	strh.w	r8, [sp, #28]
 8013afe:	f7fc fd5d 	bl	80105bc <_ZN8touchgfx4RectaNERKS0_>
 8013b02:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013b06:	2b00      	cmp	r3, #0
 8013b08:	dd19      	ble.n	8013b3e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8013b0a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013b0e:	2b00      	cmp	r3, #0
 8013b10:	dd15      	ble.n	8013b3e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8013b12:	4b0c      	ldr	r3, [pc, #48]	; (8013b44 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8013b14:	681b      	ldr	r3, [r3, #0]
 8013b16:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013b1a:	b10a      	cbz	r2, 8013b20 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8013b1c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013b1e:	b900      	cbnz	r0, 8013b22 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8013b20:	6898      	ldr	r0, [r3, #8]
 8013b22:	6801      	ldr	r1, [r0, #0]
 8013b24:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013b28:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8013b2c:	2701      	movs	r7, #1
 8013b2e:	9702      	str	r7, [sp, #8]
 8013b30:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8013b34:	e9cd 5600 	strd	r5, r6, [sp]
 8013b38:	688d      	ldr	r5, [r1, #8]
 8013b3a:	4621      	mov	r1, r4
 8013b3c:	47a8      	blx	r5
 8013b3e:	b008      	add	sp, #32
 8013b40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013b44:	2001381c 	.word	0x2001381c

08013b48 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8013b48:	4770      	bx	lr

08013b4a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 8013b4a:	b510      	push	{r4, lr}
 8013b4c:	2148      	movs	r1, #72	; 0x48
 8013b4e:	4604      	mov	r4, r0
 8013b50:	f016 fd3b 	bl	802a5ca <_ZdlPvj>
 8013b54:	4620      	mov	r0, r4
 8013b56:	bd10      	pop	{r4, pc}

08013b58 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8013b58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013b5c:	b08d      	sub	sp, #52	; 0x34
 8013b5e:	4604      	mov	r4, r0
 8013b60:	460f      	mov	r7, r1
 8013b62:	f7ff fdcb 	bl	80136fc <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8013b66:	4a55      	ldr	r2, [pc, #340]	; (8013cbc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8013b68:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013b6a:	8812      	ldrh	r2, [r2, #0]
 8013b6c:	429a      	cmp	r2, r3
 8013b6e:	f240 8082 	bls.w	8013c76 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013b72:	4d53      	ldr	r5, [pc, #332]	; (8013cc0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8013b74:	682a      	ldr	r2, [r5, #0]
 8013b76:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8013b7a:	4b52      	ldr	r3, [pc, #328]	; (8013cc4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 8013b7c:	681b      	ldr	r3, [r3, #0]
 8013b7e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8013b82:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 8013b86:	2200      	movs	r2, #0
 8013b88:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8013b8c:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8013b90:	2a03      	cmp	r2, #3
 8013b92:	d811      	bhi.n	8013bb8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8013b94:	e8df f002 	tbb	[pc, r2]
 8013b98:	89727902 	.word	0x89727902
 8013b9c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013ba0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8013ba4:	1ad2      	subs	r2, r2, r3
 8013ba6:	2002      	movs	r0, #2
 8013ba8:	f8ad 1010 	strh.w	r1, [sp, #16]
 8013bac:	fb92 f2f0 	sdiv	r2, r2, r0
 8013bb0:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013bb4:	f8ad 200e 	strh.w	r2, [sp, #14]
 8013bb8:	f10d 080c 	add.w	r8, sp, #12
 8013bbc:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013bc0:	f10d 0914 	add.w	r9, sp, #20
 8013bc4:	e889 0003 	stmia.w	r9, {r0, r1}
 8013bc8:	4639      	mov	r1, r7
 8013bca:	4648      	mov	r0, r9
 8013bcc:	f7fc fcf6 	bl	80105bc <_ZN8touchgfx4RectaNERKS0_>
 8013bd0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013bd4:	2b00      	cmp	r3, #0
 8013bd6:	dd4e      	ble.n	8013c76 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013bd8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8013bdc:	2b00      	cmp	r3, #0
 8013bde:	dd4a      	ble.n	8013c76 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013be0:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8013be4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8013be8:	1a9b      	subs	r3, r3, r2
 8013bea:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013bee:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8013bf2:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8013bf6:	1a9b      	subs	r3, r3, r2
 8013bf8:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013bfc:	6823      	ldr	r3, [r4, #0]
 8013bfe:	4641      	mov	r1, r8
 8013c00:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013c02:	4620      	mov	r0, r4
 8013c04:	4798      	blx	r3
 8013c06:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8013c0a:	2b00      	cmp	r3, #0
 8013c0c:	d053      	beq.n	8013cb6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 8013c0e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8013c10:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8013c12:	682b      	ldr	r3, [r5, #0]
 8013c14:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8013c18:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 8013c1c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8013c20:	785b      	ldrb	r3, [r3, #1]
 8013c22:	9209      	str	r2, [sp, #36]	; 0x24
 8013c24:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8013c28:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8013c2c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8013c30:	2300      	movs	r3, #0
 8013c32:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8013c36:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8013c3a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8013c3e:	4b22      	ldr	r3, [pc, #136]	; (8013cc8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8013c40:	9607      	str	r6, [sp, #28]
 8013c42:	681b      	ldr	r3, [r3, #0]
 8013c44:	f88d 5020 	strb.w	r5, [sp, #32]
 8013c48:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013c4c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013c50:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8013c54:	b10a      	cbz	r2, 8013c5a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8013c56:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8013c58:	b904      	cbnz	r4, 8013c5c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 8013c5a:	689c      	ldr	r4, [r3, #8]
 8013c5c:	4b1b      	ldr	r3, [pc, #108]	; (8013ccc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 8013c5e:	6818      	ldr	r0, [r3, #0]
 8013c60:	f7f4 fcb6 	bl	80085d0 <_ZNK8touchgfx5Texts7getTextEt>
 8013c64:	ab07      	add	r3, sp, #28
 8013c66:	9001      	str	r0, [sp, #4]
 8013c68:	9300      	str	r3, [sp, #0]
 8013c6a:	e898 0006 	ldmia.w	r8, {r1, r2}
 8013c6e:	464b      	mov	r3, r9
 8013c70:	4620      	mov	r0, r4
 8013c72:	f7f4 fc5f 	bl	8008534 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013c76:	b00d      	add	sp, #52	; 0x34
 8013c78:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013c7c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013c80:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8013c84:	1ad2      	subs	r2, r2, r3
 8013c86:	3201      	adds	r2, #1
 8013c88:	e78d      	b.n	8013ba6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 8013c8a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8013c8e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8013c92:	1ad2      	subs	r2, r2, r3
 8013c94:	3201      	adds	r2, #1
 8013c96:	2002      	movs	r0, #2
 8013c98:	f8ad 3010 	strh.w	r3, [sp, #16]
 8013c9c:	fb92 f2f0 	sdiv	r2, r2, r0
 8013ca0:	f8ad 1012 	strh.w	r1, [sp, #18]
 8013ca4:	f8ad 200c 	strh.w	r2, [sp, #12]
 8013ca8:	e786      	b.n	8013bb8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8013caa:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8013cae:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8013cb2:	1ad2      	subs	r2, r2, r3
 8013cb4:	e7ef      	b.n	8013c96 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8013cb6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8013cb8:	e7aa      	b.n	8013c10 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 8013cba:	bf00      	nop
 8013cbc:	20013878 	.word	0x20013878
 8013cc0:	20013874 	.word	0x20013874
 8013cc4:	2001387c 	.word	0x2001387c
 8013cc8:	2001381c 	.word	0x2001381c
 8013ccc:	20013880 	.word	0x20013880

08013cd0 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8013cd0:	b510      	push	{r4, lr}
 8013cd2:	2101      	movs	r1, #1
 8013cd4:	4c13      	ldr	r4, [pc, #76]	; (8013d24 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8013cd6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8013cda:	2200      	movs	r2, #0
 8013cdc:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8013ce0:	6004      	str	r4, [r0, #0]
 8013ce2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013ce6:	4c10      	ldr	r4, [pc, #64]	; (8013d28 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8013ce8:	8082      	strh	r2, [r0, #4]
 8013cea:	80c2      	strh	r2, [r0, #6]
 8013cec:	8102      	strh	r2, [r0, #8]
 8013cee:	8142      	strh	r2, [r0, #10]
 8013cf0:	8182      	strh	r2, [r0, #12]
 8013cf2:	81c2      	strh	r2, [r0, #14]
 8013cf4:	8202      	strh	r2, [r0, #16]
 8013cf6:	8242      	strh	r2, [r0, #18]
 8013cf8:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8013cfc:	61c2      	str	r2, [r0, #28]
 8013cfe:	8402      	strh	r2, [r0, #32]
 8013d00:	8442      	strh	r2, [r0, #34]	; 0x22
 8013d02:	6282      	str	r2, [r0, #40]	; 0x28
 8013d04:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8013d08:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8013d0a:	8601      	strh	r1, [r0, #48]	; 0x30
 8013d0c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8013d10:	6344      	str	r4, [r0, #52]	; 0x34
 8013d12:	8701      	strh	r1, [r0, #56]	; 0x38
 8013d14:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8013d18:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 8013d1c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8013d20:	bd10      	pop	{r4, pc}
 8013d22:	bf00      	nop
 8013d24:	0802f58c 	.word	0x0802f58c
 8013d28:	0802cd80 	.word	0x0802cd80

08013d2c <_ZN8touchgfx7OutlineD1Ev>:
 8013d2c:	4770      	bx	lr

08013d2e <_ZN8touchgfx7OutlineD0Ev>:
 8013d2e:	b510      	push	{r4, lr}
 8013d30:	2130      	movs	r1, #48	; 0x30
 8013d32:	4604      	mov	r4, r0
 8013d34:	f016 fc49 	bl	802a5ca <_ZdlPvj>
 8013d38:	4620      	mov	r0, r4
 8013d3a:	bd10      	pop	{r4, pc}

08013d3c <_ZN8touchgfx7Outline5resetEv>:
 8013d3c:	b510      	push	{r4, lr}
 8013d3e:	4604      	mov	r4, r0
 8013d40:	f000 fe96 	bl	8014a70 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8013d44:	60e0      	str	r0, [r4, #12]
 8013d46:	f000 fe99 	bl	8014a7c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8013d4a:	68e3      	ldr	r3, [r4, #12]
 8013d4c:	6123      	str	r3, [r4, #16]
 8013d4e:	08c0      	lsrs	r0, r0, #3
 8013d50:	2200      	movs	r2, #0
 8013d52:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8013d56:	3801      	subs	r0, #1
 8013d58:	6060      	str	r0, [r4, #4]
 8013d5a:	60a2      	str	r2, [r4, #8]
 8013d5c:	8019      	strh	r1, [r3, #0]
 8013d5e:	8059      	strh	r1, [r3, #2]
 8013d60:	809a      	strh	r2, [r3, #4]
 8013d62:	80da      	strh	r2, [r3, #6]
 8013d64:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8013d66:	f023 0301 	bic.w	r3, r3, #1
 8013d6a:	f043 0302 	orr.w	r3, r3, #2
 8013d6e:	6263      	str	r3, [r4, #36]	; 0x24
 8013d70:	bd10      	pop	{r4, pc}
	...

08013d74 <_ZN8touchgfx7OutlineC1Ev>:
 8013d74:	b510      	push	{r4, lr}
 8013d76:	4b0a      	ldr	r3, [pc, #40]	; (8013da0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8013d78:	6003      	str	r3, [r0, #0]
 8013d7a:	2300      	movs	r3, #0
 8013d7c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8013d80:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8013d84:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8013d88:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8013d8c:	6243      	str	r3, [r0, #36]	; 0x24
 8013d8e:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8013d92:	4604      	mov	r4, r0
 8013d94:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8013d98:	f7ff ffd0 	bl	8013d3c <_ZN8touchgfx7Outline5resetEv>
 8013d9c:	4620      	mov	r0, r4
 8013d9e:	bd10      	pop	{r4, pc}
 8013da0:	0802f600 	.word	0x0802f600

08013da4 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8013da4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013da8:	b093      	sub	sp, #76	; 0x4c
 8013daa:	1156      	asrs	r6, r2, #5
 8013dac:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8013dae:	9305      	str	r3, [sp, #20]
 8013db0:	f004 051f 	and.w	r5, r4, #31
 8013db4:	1153      	asrs	r3, r2, #5
 8013db6:	9504      	str	r5, [sp, #16]
 8013db8:	1165      	asrs	r5, r4, #5
 8013dba:	9303      	str	r3, [sp, #12]
 8013dbc:	42ae      	cmp	r6, r5
 8013dbe:	ea4f 1364 	mov.w	r3, r4, asr #5
 8013dc2:	9306      	str	r3, [sp, #24]
 8013dc4:	f002 031f 	and.w	r3, r2, #31
 8013dc8:	f040 80f8 	bne.w	8013fbc <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8013dcc:	9c04      	ldr	r4, [sp, #16]
 8013dce:	9a05      	ldr	r2, [sp, #20]
 8013dd0:	42a3      	cmp	r3, r4
 8013dd2:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8013dd6:	6902      	ldr	r2, [r0, #16]
 8013dd8:	d125      	bne.n	8013e26 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 8013dda:	f9b2 3000 	ldrsh.w	r3, [r2]
 8013dde:	459e      	cmp	lr, r3
 8013de0:	d103      	bne.n	8013dea <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8013de2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8013de6:	429e      	cmp	r6, r3
 8013de8:	d035      	beq.n	8013e56 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013dea:	88d1      	ldrh	r1, [r2, #6]
 8013dec:	8893      	ldrh	r3, [r2, #4]
 8013dee:	430b      	orrs	r3, r1
 8013df0:	d010      	beq.n	8013e14 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8013df2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8013df6:	2b00      	cmp	r3, #0
 8013df8:	db0c      	blt.n	8013e14 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8013dfa:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8013dfc:	428b      	cmp	r3, r1
 8013dfe:	da09      	bge.n	8013e14 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8013e00:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8013e04:	428b      	cmp	r3, r1
 8013e06:	bf38      	it	cc
 8013e08:	3208      	addcc	r2, #8
 8013e0a:	f103 0301 	add.w	r3, r3, #1
 8013e0e:	bf38      	it	cc
 8013e10:	6102      	strcc	r2, [r0, #16]
 8013e12:	6083      	str	r3, [r0, #8]
 8013e14:	6903      	ldr	r3, [r0, #16]
 8013e16:	9a03      	ldr	r2, [sp, #12]
 8013e18:	f8a3 e000 	strh.w	lr, [r3]
 8013e1c:	805a      	strh	r2, [r3, #2]
 8013e1e:	2200      	movs	r2, #0
 8013e20:	809a      	strh	r2, [r3, #4]
 8013e22:	80da      	strh	r2, [r3, #6]
 8013e24:	e017      	b.n	8013e56 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013e26:	9c05      	ldr	r4, [sp, #20]
 8013e28:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 8013e2c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8013e30:	f004 041f 	and.w	r4, r4, #31
 8013e34:	114e      	asrs	r6, r1, #5
 8013e36:	9402      	str	r4, [sp, #8]
 8013e38:	9c04      	ldr	r4, [sp, #16]
 8013e3a:	4576      	cmp	r6, lr
 8013e3c:	f001 0c1f 	and.w	ip, r1, #31
 8013e40:	eba4 0403 	sub.w	r4, r4, r3
 8013e44:	d10a      	bne.n	8013e5c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8013e46:	9b02      	ldr	r3, [sp, #8]
 8013e48:	449c      	add	ip, r3
 8013e4a:	44a0      	add	r8, r4
 8013e4c:	fb04 a40c 	mla	r4, r4, ip, sl
 8013e50:	f8a2 8004 	strh.w	r8, [r2, #4]
 8013e54:	80d4      	strh	r4, [r2, #6]
 8013e56:	b013      	add	sp, #76	; 0x4c
 8013e58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013e5c:	9d05      	ldr	r5, [sp, #20]
 8013e5e:	1a69      	subs	r1, r5, r1
 8013e60:	bf5b      	ittet	pl
 8013e62:	f1cc 0520 	rsbpl	r5, ip, #32
 8013e66:	436c      	mulpl	r4, r5
 8013e68:	2500      	movmi	r5, #0
 8013e6a:	2520      	movpl	r5, #32
 8013e6c:	bf44      	itt	mi
 8013e6e:	fb04 f40c 	mulmi.w	r4, r4, ip
 8013e72:	4249      	negmi	r1, r1
 8013e74:	9501      	str	r5, [sp, #4]
 8013e76:	9f01      	ldr	r7, [sp, #4]
 8013e78:	fb94 f5f1 	sdiv	r5, r4, r1
 8013e7c:	fb01 4415 	mls	r4, r1, r5, r4
 8013e80:	bf54      	ite	pl
 8013e82:	f04f 0901 	movpl.w	r9, #1
 8013e86:	f04f 39ff 	movmi.w	r9, #4294967295
 8013e8a:	2c00      	cmp	r4, #0
 8013e8c:	bfb8      	it	lt
 8013e8e:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8013e92:	44bc      	add	ip, r7
 8013e94:	44a8      	add	r8, r5
 8013e96:	fb05 ac0c 	mla	ip, r5, ip, sl
 8013e9a:	f8a2 8004 	strh.w	r8, [r2, #4]
 8013e9e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8013ea2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013ea6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8013eaa:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 8013eae:	bfb8      	it	lt
 8013eb0:	1864      	addlt	r4, r4, r1
 8013eb2:	ea58 0202 	orrs.w	r2, r8, r2
 8013eb6:	444e      	add	r6, r9
 8013eb8:	d011      	beq.n	8013ede <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8013eba:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8013ebe:	f1b8 0f00 	cmp.w	r8, #0
 8013ec2:	db0c      	blt.n	8013ede <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8013ec4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8013ec6:	4590      	cmp	r8, r2
 8013ec8:	da09      	bge.n	8013ede <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8013eca:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 8013ece:	4590      	cmp	r8, r2
 8013ed0:	bf3c      	itt	cc
 8013ed2:	f10c 0208 	addcc.w	r2, ip, #8
 8013ed6:	6102      	strcc	r2, [r0, #16]
 8013ed8:	f108 0201 	add.w	r2, r8, #1
 8013edc:	6082      	str	r2, [r0, #8]
 8013ede:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013ee2:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8013ee6:	f8ac 6000 	strh.w	r6, [ip]
 8013eea:	2700      	movs	r7, #0
 8013eec:	45b6      	cmp	lr, r6
 8013eee:	f8ac 2002 	strh.w	r2, [ip, #2]
 8013ef2:	f8ac 7004 	strh.w	r7, [ip, #4]
 8013ef6:	f8ac 7006 	strh.w	r7, [ip, #6]
 8013efa:	442b      	add	r3, r5
 8013efc:	d04d      	beq.n	8013f9a <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 8013efe:	9f04      	ldr	r7, [sp, #16]
 8013f00:	1aff      	subs	r7, r7, r3
 8013f02:	443d      	add	r5, r7
 8013f04:	016d      	lsls	r5, r5, #5
 8013f06:	fb95 f8f1 	sdiv	r8, r5, r1
 8013f0a:	fb01 5518 	mls	r5, r1, r8, r5
 8013f0e:	2d00      	cmp	r5, #0
 8013f10:	bfb8      	it	lt
 8013f12:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013f16:	f108 0701 	add.w	r7, r8, #1
 8013f1a:	bfb8      	it	lt
 8013f1c:	186d      	addlt	r5, r5, r1
 8013f1e:	1a64      	subs	r4, r4, r1
 8013f20:	9703      	str	r7, [sp, #12]
 8013f22:	f04f 0a00 	mov.w	sl, #0
 8013f26:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013f2a:	1964      	adds	r4, r4, r5
 8013f2c:	bf58      	it	pl
 8013f2e:	9f03      	ldrpl	r7, [sp, #12]
 8013f30:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8013f34:	bf48      	it	mi
 8013f36:	4647      	movmi	r7, r8
 8013f38:	44bb      	add	fp, r7
 8013f3a:	f8ac b004 	strh.w	fp, [ip, #4]
 8013f3e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013f42:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013f46:	f8ac b006 	strh.w	fp, [ip, #6]
 8013f4a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013f4e:	443b      	add	r3, r7
 8013f50:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013f54:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013f58:	bf58      	it	pl
 8013f5a:	1a64      	subpl	r4, r4, r1
 8013f5c:	ea5b 0707 	orrs.w	r7, fp, r7
 8013f60:	444e      	add	r6, r9
 8013f62:	d011      	beq.n	8013f88 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8013f64:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8013f68:	f1bb 0f00 	cmp.w	fp, #0
 8013f6c:	db0c      	blt.n	8013f88 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8013f6e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013f70:	45bb      	cmp	fp, r7
 8013f72:	da09      	bge.n	8013f88 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8013f74:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013f78:	45bb      	cmp	fp, r7
 8013f7a:	bf3c      	itt	cc
 8013f7c:	f10c 0708 	addcc.w	r7, ip, #8
 8013f80:	6107      	strcc	r7, [r0, #16]
 8013f82:	f10b 0701 	add.w	r7, fp, #1
 8013f86:	6087      	str	r7, [r0, #8]
 8013f88:	6907      	ldr	r7, [r0, #16]
 8013f8a:	45b6      	cmp	lr, r6
 8013f8c:	803e      	strh	r6, [r7, #0]
 8013f8e:	807a      	strh	r2, [r7, #2]
 8013f90:	f8a7 a004 	strh.w	sl, [r7, #4]
 8013f94:	f8a7 a006 	strh.w	sl, [r7, #6]
 8013f98:	d1c5      	bne.n	8013f26 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 8013f9a:	9a04      	ldr	r2, [sp, #16]
 8013f9c:	1ad3      	subs	r3, r2, r3
 8013f9e:	6902      	ldr	r2, [r0, #16]
 8013fa0:	8891      	ldrh	r1, [r2, #4]
 8013fa2:	88d6      	ldrh	r6, [r2, #6]
 8013fa4:	4419      	add	r1, r3
 8013fa6:	8091      	strh	r1, [r2, #4]
 8013fa8:	9902      	ldr	r1, [sp, #8]
 8013faa:	f101 0c20 	add.w	ip, r1, #32
 8013fae:	9901      	ldr	r1, [sp, #4]
 8013fb0:	ebac 0c01 	sub.w	ip, ip, r1
 8013fb4:	fb03 630c 	mla	r3, r3, ip, r6
 8013fb8:	80d3      	strh	r3, [r2, #6]
 8013fba:	e74c      	b.n	8013e56 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013fbc:	9d05      	ldr	r5, [sp, #20]
 8013fbe:	1aa2      	subs	r2, r4, r2
 8013fc0:	eba5 0501 	sub.w	r5, r5, r1
 8013fc4:	9508      	str	r5, [sp, #32]
 8013fc6:	9202      	str	r2, [sp, #8]
 8013fc8:	f140 8128 	bpl.w	801421c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8013fcc:	9a03      	ldr	r2, [sp, #12]
 8013fce:	2a00      	cmp	r2, #0
 8013fd0:	f6ff af41 	blt.w	8013e56 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013fd4:	9a02      	ldr	r2, [sp, #8]
 8013fd6:	4252      	negs	r2, r2
 8013fd8:	9202      	str	r2, [sp, #8]
 8013fda:	9a06      	ldr	r2, [sp, #24]
 8013fdc:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8013fe0:	f04f 34ff 	mov.w	r4, #4294967295
 8013fe4:	9206      	str	r2, [sp, #24]
 8013fe6:	462a      	mov	r2, r5
 8013fe8:	940b      	str	r4, [sp, #44]	; 0x2c
 8013fea:	435a      	muls	r2, r3
 8013fec:	2400      	movs	r4, #0
 8013fee:	9d02      	ldr	r5, [sp, #8]
 8013ff0:	9401      	str	r4, [sp, #4]
 8013ff2:	9c02      	ldr	r4, [sp, #8]
 8013ff4:	fb92 f4f4 	sdiv	r4, r2, r4
 8013ff8:	fb05 2214 	mls	r2, r5, r4, r2
 8013ffc:	2a00      	cmp	r2, #0
 8013ffe:	9207      	str	r2, [sp, #28]
 8014000:	bfbc      	itt	lt
 8014002:	1952      	addlt	r2, r2, r5
 8014004:	9207      	strlt	r2, [sp, #28]
 8014006:	9a01      	ldr	r2, [sp, #4]
 8014008:	6905      	ldr	r5, [r0, #16]
 801400a:	bfb8      	it	lt
 801400c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8014010:	eb04 0901 	add.w	r9, r4, r1
 8014014:	429a      	cmp	r2, r3
 8014016:	ea4f 1669 	mov.w	r6, r9, asr #5
 801401a:	f040 8112 	bne.w	8014242 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801401e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8014022:	429e      	cmp	r6, r3
 8014024:	d104      	bne.n	8014030 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8014026:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801402a:	9a03      	ldr	r2, [sp, #12]
 801402c:	429a      	cmp	r2, r3
 801402e:	d01b      	beq.n	8014068 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8014030:	88ea      	ldrh	r2, [r5, #6]
 8014032:	88ab      	ldrh	r3, [r5, #4]
 8014034:	4313      	orrs	r3, r2
 8014036:	d010      	beq.n	801405a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8014038:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801403c:	2a00      	cmp	r2, #0
 801403e:	db0c      	blt.n	801405a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8014040:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014042:	429a      	cmp	r2, r3
 8014044:	da09      	bge.n	801405a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8014046:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801404a:	429a      	cmp	r2, r3
 801404c:	bf38      	it	cc
 801404e:	3508      	addcc	r5, #8
 8014050:	f102 0201 	add.w	r2, r2, #1
 8014054:	bf38      	it	cc
 8014056:	6105      	strcc	r5, [r0, #16]
 8014058:	6082      	str	r2, [r0, #8]
 801405a:	6903      	ldr	r3, [r0, #16]
 801405c:	9a03      	ldr	r2, [sp, #12]
 801405e:	805a      	strh	r2, [r3, #2]
 8014060:	2200      	movs	r2, #0
 8014062:	801e      	strh	r6, [r3, #0]
 8014064:	809a      	strh	r2, [r3, #4]
 8014066:	80da      	strh	r2, [r3, #6]
 8014068:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801406a:	9a03      	ldr	r2, [sp, #12]
 801406c:	6901      	ldr	r1, [r0, #16]
 801406e:	441a      	add	r2, r3
 8014070:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014074:	42b3      	cmp	r3, r6
 8014076:	d103      	bne.n	8014080 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8014078:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801407c:	429a      	cmp	r2, r3
 801407e:	d01a      	beq.n	80140b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8014080:	88cc      	ldrh	r4, [r1, #6]
 8014082:	888b      	ldrh	r3, [r1, #4]
 8014084:	4323      	orrs	r3, r4
 8014086:	d010      	beq.n	80140aa <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8014088:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 801408c:	2c00      	cmp	r4, #0
 801408e:	db0c      	blt.n	80140aa <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8014090:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014092:	429c      	cmp	r4, r3
 8014094:	da09      	bge.n	80140aa <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8014096:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801409a:	429c      	cmp	r4, r3
 801409c:	bf38      	it	cc
 801409e:	3108      	addcc	r1, #8
 80140a0:	f104 0401 	add.w	r4, r4, #1
 80140a4:	bf38      	it	cc
 80140a6:	6101      	strcc	r1, [r0, #16]
 80140a8:	6084      	str	r4, [r0, #8]
 80140aa:	6903      	ldr	r3, [r0, #16]
 80140ac:	2100      	movs	r1, #0
 80140ae:	801e      	strh	r6, [r3, #0]
 80140b0:	805a      	strh	r2, [r3, #2]
 80140b2:	8099      	strh	r1, [r3, #4]
 80140b4:	80d9      	strh	r1, [r3, #6]
 80140b6:	9b06      	ldr	r3, [sp, #24]
 80140b8:	4293      	cmp	r3, r2
 80140ba:	f000 8082 	beq.w	80141c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 80140be:	9b08      	ldr	r3, [sp, #32]
 80140c0:	9c02      	ldr	r4, [sp, #8]
 80140c2:	9902      	ldr	r1, [sp, #8]
 80140c4:	015b      	lsls	r3, r3, #5
 80140c6:	fb93 f1f1 	sdiv	r1, r3, r1
 80140ca:	fb04 3311 	mls	r3, r4, r1, r3
 80140ce:	2b00      	cmp	r3, #0
 80140d0:	9103      	str	r1, [sp, #12]
 80140d2:	9308      	str	r3, [sp, #32]
 80140d4:	da04      	bge.n	80140e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 80140d6:	1e4b      	subs	r3, r1, #1
 80140d8:	9303      	str	r3, [sp, #12]
 80140da:	9b08      	ldr	r3, [sp, #32]
 80140dc:	4423      	add	r3, r4
 80140de:	9308      	str	r3, [sp, #32]
 80140e0:	9b07      	ldr	r3, [sp, #28]
 80140e2:	9902      	ldr	r1, [sp, #8]
 80140e4:	1a5b      	subs	r3, r3, r1
 80140e6:	9307      	str	r3, [sp, #28]
 80140e8:	9b01      	ldr	r3, [sp, #4]
 80140ea:	f1c3 0320 	rsb	r3, r3, #32
 80140ee:	930e      	str	r3, [sp, #56]	; 0x38
 80140f0:	990e      	ldr	r1, [sp, #56]	; 0x38
 80140f2:	9b01      	ldr	r3, [sp, #4]
 80140f4:	1a5b      	subs	r3, r3, r1
 80140f6:	464f      	mov	r7, r9
 80140f8:	930a      	str	r3, [sp, #40]	; 0x28
 80140fa:	2600      	movs	r6, #0
 80140fc:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8014100:	185b      	adds	r3, r3, r1
 8014102:	bf58      	it	pl
 8014104:	9902      	ldrpl	r1, [sp, #8]
 8014106:	9307      	str	r3, [sp, #28]
 8014108:	bf5d      	ittte	pl
 801410a:	1a5b      	subpl	r3, r3, r1
 801410c:	9307      	strpl	r3, [sp, #28]
 801410e:	9b03      	ldrpl	r3, [sp, #12]
 8014110:	9903      	ldrmi	r1, [sp, #12]
 8014112:	bf58      	it	pl
 8014114:	1c59      	addpl	r1, r3, #1
 8014116:	4489      	add	r9, r1
 8014118:	2a00      	cmp	r2, #0
 801411a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801411e:	db2e      	blt.n	801417e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014120:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014122:	4293      	cmp	r3, r2
 8014124:	dd2b      	ble.n	801417e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014126:	9c01      	ldr	r4, [sp, #4]
 8014128:	6905      	ldr	r5, [r0, #16]
 801412a:	46a0      	mov	r8, r4
 801412c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801412e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8014132:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8014136:	45a0      	cmp	r8, r4
 8014138:	f040 814f 	bne.w	80143da <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 801413c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8014140:	4551      	cmp	r1, sl
 8014142:	d103      	bne.n	801414c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8014144:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8014148:	4291      	cmp	r1, r2
 801414a:	d018      	beq.n	801417e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801414c:	ea5c 010e 	orrs.w	r1, ip, lr
 8014150:	d00f      	beq.n	8014172 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8014152:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8014156:	2900      	cmp	r1, #0
 8014158:	db0b      	blt.n	8014172 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801415a:	428b      	cmp	r3, r1
 801415c:	dd09      	ble.n	8014172 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801415e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8014162:	4299      	cmp	r1, r3
 8014164:	bf38      	it	cc
 8014166:	3508      	addcc	r5, #8
 8014168:	f101 0101 	add.w	r1, r1, #1
 801416c:	bf38      	it	cc
 801416e:	6105      	strcc	r5, [r0, #16]
 8014170:	6081      	str	r1, [r0, #8]
 8014172:	6903      	ldr	r3, [r0, #16]
 8014174:	f8a3 a000 	strh.w	sl, [r3]
 8014178:	805a      	strh	r2, [r3, #2]
 801417a:	809e      	strh	r6, [r3, #4]
 801417c:	80de      	strh	r6, [r3, #6]
 801417e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014180:	6901      	ldr	r1, [r0, #16]
 8014182:	441a      	add	r2, r3
 8014184:	88cc      	ldrh	r4, [r1, #6]
 8014186:	888b      	ldrh	r3, [r1, #4]
 8014188:	4323      	orrs	r3, r4
 801418a:	d010      	beq.n	80141ae <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801418c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8014190:	2c00      	cmp	r4, #0
 8014192:	db0c      	blt.n	80141ae <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8014194:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014196:	429c      	cmp	r4, r3
 8014198:	da09      	bge.n	80141ae <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801419a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801419e:	429c      	cmp	r4, r3
 80141a0:	bf38      	it	cc
 80141a2:	3108      	addcc	r1, #8
 80141a4:	f104 0401 	add.w	r4, r4, #1
 80141a8:	bf38      	it	cc
 80141aa:	6101      	strcc	r1, [r0, #16]
 80141ac:	6084      	str	r4, [r0, #8]
 80141ae:	6903      	ldr	r3, [r0, #16]
 80141b0:	f8a3 a000 	strh.w	sl, [r3]
 80141b4:	805a      	strh	r2, [r3, #2]
 80141b6:	809e      	strh	r6, [r3, #4]
 80141b8:	80de      	strh	r6, [r3, #6]
 80141ba:	9b06      	ldr	r3, [sp, #24]
 80141bc:	4293      	cmp	r3, r2
 80141be:	464f      	mov	r7, r9
 80141c0:	d19c      	bne.n	80140fc <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 80141c2:	9b01      	ldr	r3, [sp, #4]
 80141c4:	6907      	ldr	r7, [r0, #16]
 80141c6:	f1c3 0620 	rsb	r6, r3, #32
 80141ca:	9b05      	ldr	r3, [sp, #20]
 80141cc:	ea4f 1e63 	mov.w	lr, r3, asr #5
 80141d0:	9b04      	ldr	r3, [sp, #16]
 80141d2:	429e      	cmp	r6, r3
 80141d4:	f040 81cc 	bne.w	8014570 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 80141d8:	f9b7 3000 	ldrsh.w	r3, [r7]
 80141dc:	459e      	cmp	lr, r3
 80141de:	d104      	bne.n	80141ea <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 80141e0:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80141e4:	429a      	cmp	r2, r3
 80141e6:	f43f ae36 	beq.w	8013e56 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80141ea:	88f9      	ldrh	r1, [r7, #6]
 80141ec:	88bb      	ldrh	r3, [r7, #4]
 80141ee:	430b      	orrs	r3, r1
 80141f0:	d010      	beq.n	8014214 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80141f2:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80141f6:	2b00      	cmp	r3, #0
 80141f8:	db0c      	blt.n	8014214 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80141fa:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80141fc:	428b      	cmp	r3, r1
 80141fe:	da09      	bge.n	8014214 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8014200:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8014204:	428b      	cmp	r3, r1
 8014206:	bf38      	it	cc
 8014208:	3708      	addcc	r7, #8
 801420a:	f103 0301 	add.w	r3, r3, #1
 801420e:	bf38      	it	cc
 8014210:	6107      	strcc	r7, [r0, #16]
 8014212:	6083      	str	r3, [r0, #8]
 8014214:	6903      	ldr	r3, [r0, #16]
 8014216:	f8a3 e000 	strh.w	lr, [r3]
 801421a:	e5ff      	b.n	8013e1c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 801421c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801421e:	9c03      	ldr	r4, [sp, #12]
 8014220:	42a2      	cmp	r2, r4
 8014222:	f6ff ae18 	blt.w	8013e56 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014226:	9c06      	ldr	r4, [sp, #24]
 8014228:	42a2      	cmp	r2, r4
 801422a:	bfb8      	it	lt
 801422c:	3201      	addlt	r2, #1
 801422e:	9c08      	ldr	r4, [sp, #32]
 8014230:	bfb8      	it	lt
 8014232:	9206      	strlt	r2, [sp, #24]
 8014234:	f1c3 0220 	rsb	r2, r3, #32
 8014238:	4362      	muls	r2, r4
 801423a:	2401      	movs	r4, #1
 801423c:	940b      	str	r4, [sp, #44]	; 0x2c
 801423e:	2420      	movs	r4, #32
 8014240:	e6d5      	b.n	8013fee <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8014242:	f009 021f 	and.w	r2, r9, #31
 8014246:	ea4f 1861 	mov.w	r8, r1, asr #5
 801424a:	920c      	str	r2, [sp, #48]	; 0x30
 801424c:	9a01      	ldr	r2, [sp, #4]
 801424e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8014252:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8014256:	45b0      	cmp	r8, r6
 8014258:	f001 011f 	and.w	r1, r1, #31
 801425c:	eba2 0203 	sub.w	r2, r2, r3
 8014260:	d108      	bne.n	8014274 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8014262:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014264:	4419      	add	r1, r3
 8014266:	4496      	add	lr, r2
 8014268:	fb02 a101 	mla	r1, r2, r1, sl
 801426c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8014270:	80e9      	strh	r1, [r5, #6]
 8014272:	e6f9      	b.n	8014068 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8014274:	2c00      	cmp	r4, #0
 8014276:	f2c0 80a9 	blt.w	80143cc <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 801427a:	2701      	movs	r7, #1
 801427c:	f1c1 0c20 	rsb	ip, r1, #32
 8014280:	970a      	str	r7, [sp, #40]	; 0x28
 8014282:	fb02 f20c 	mul.w	r2, r2, ip
 8014286:	2720      	movs	r7, #32
 8014288:	9709      	str	r7, [sp, #36]	; 0x24
 801428a:	fb92 fcf4 	sdiv	ip, r2, r4
 801428e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8014290:	fb04 221c 	mls	r2, r4, ip, r2
 8014294:	2a00      	cmp	r2, #0
 8014296:	bfb8      	it	lt
 8014298:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 801429c:	4439      	add	r1, r7
 801429e:	fb0c a101 	mla	r1, ip, r1, sl
 80142a2:	80e9      	strh	r1, [r5, #6]
 80142a4:	44e6      	add	lr, ip
 80142a6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80142a8:	f8a5 e004 	strh.w	lr, [r5, #4]
 80142ac:	eb08 0501 	add.w	r5, r8, r1
 80142b0:	6901      	ldr	r1, [r0, #16]
 80142b2:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 80142b6:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 80142ba:	bfb8      	it	lt
 80142bc:	1912      	addlt	r2, r2, r4
 80142be:	ea58 070e 	orrs.w	r7, r8, lr
 80142c2:	d010      	beq.n	80142e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80142c4:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 80142c8:	f1be 0f00 	cmp.w	lr, #0
 80142cc:	db0b      	blt.n	80142e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80142ce:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80142d0:	45be      	cmp	lr, r7
 80142d2:	da08      	bge.n	80142e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80142d4:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80142d8:	45be      	cmp	lr, r7
 80142da:	bf3c      	itt	cc
 80142dc:	3108      	addcc	r1, #8
 80142de:	6101      	strcc	r1, [r0, #16]
 80142e0:	f10e 0101 	add.w	r1, lr, #1
 80142e4:	6081      	str	r1, [r0, #8]
 80142e6:	6901      	ldr	r1, [r0, #16]
 80142e8:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80142ec:	800d      	strh	r5, [r1, #0]
 80142ee:	f04f 0e00 	mov.w	lr, #0
 80142f2:	42ae      	cmp	r6, r5
 80142f4:	f8a1 8002 	strh.w	r8, [r1, #2]
 80142f8:	f8a1 e004 	strh.w	lr, [r1, #4]
 80142fc:	f8a1 e006 	strh.w	lr, [r1, #6]
 8014300:	4463      	add	r3, ip
 8014302:	d054      	beq.n	80143ae <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8014304:	9901      	ldr	r1, [sp, #4]
 8014306:	1ac9      	subs	r1, r1, r3
 8014308:	4461      	add	r1, ip
 801430a:	0149      	lsls	r1, r1, #5
 801430c:	fb91 fef4 	sdiv	lr, r1, r4
 8014310:	fb04 111e 	mls	r1, r4, lr, r1
 8014314:	2900      	cmp	r1, #0
 8014316:	bfb8      	it	lt
 8014318:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801431c:	f10e 0701 	add.w	r7, lr, #1
 8014320:	bfb8      	it	lt
 8014322:	1909      	addlt	r1, r1, r4
 8014324:	1b12      	subs	r2, r2, r4
 8014326:	970d      	str	r7, [sp, #52]	; 0x34
 8014328:	f8d0 a010 	ldr.w	sl, [r0, #16]
 801432c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801432e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8014332:	1852      	adds	r2, r2, r1
 8014334:	bf54      	ite	pl
 8014336:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 801433a:	46f4      	movmi	ip, lr
 801433c:	44e3      	add	fp, ip
 801433e:	f8aa b004 	strh.w	fp, [sl, #4]
 8014342:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8014346:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 801434a:	f8aa b006 	strh.w	fp, [sl, #6]
 801434e:	4463      	add	r3, ip
 8014350:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014354:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014358:	f8bc a004 	ldrh.w	sl, [ip, #4]
 801435c:	bf58      	it	pl
 801435e:	1b12      	subpl	r2, r2, r4
 8014360:	443d      	add	r5, r7
 8014362:	ea5b 070a 	orrs.w	r7, fp, sl
 8014366:	d014      	beq.n	8014392 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8014368:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 801436c:	f1ba 0f00 	cmp.w	sl, #0
 8014370:	db0f      	blt.n	8014392 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8014372:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014374:	45ba      	cmp	sl, r7
 8014376:	da0c      	bge.n	8014392 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8014378:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 801437c:	45ba      	cmp	sl, r7
 801437e:	bf38      	it	cc
 8014380:	f10c 0c08 	addcc.w	ip, ip, #8
 8014384:	f10a 0a01 	add.w	sl, sl, #1
 8014388:	bf38      	it	cc
 801438a:	f8c0 c010 	strcc.w	ip, [r0, #16]
 801438e:	f8c0 a008 	str.w	sl, [r0, #8]
 8014392:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014396:	f04f 0700 	mov.w	r7, #0
 801439a:	42ae      	cmp	r6, r5
 801439c:	f8ac 5000 	strh.w	r5, [ip]
 80143a0:	f8ac 8002 	strh.w	r8, [ip, #2]
 80143a4:	f8ac 7004 	strh.w	r7, [ip, #4]
 80143a8:	f8ac 7006 	strh.w	r7, [ip, #6]
 80143ac:	d1bc      	bne.n	8014328 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 80143ae:	6904      	ldr	r4, [r0, #16]
 80143b0:	9a01      	ldr	r2, [sp, #4]
 80143b2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80143b4:	1ad3      	subs	r3, r2, r3
 80143b6:	88a2      	ldrh	r2, [r4, #4]
 80143b8:	441a      	add	r2, r3
 80143ba:	80a2      	strh	r2, [r4, #4]
 80143bc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80143be:	3120      	adds	r1, #32
 80143c0:	1a89      	subs	r1, r1, r2
 80143c2:	88e2      	ldrh	r2, [r4, #6]
 80143c4:	fb03 2301 	mla	r3, r3, r1, r2
 80143c8:	80e3      	strh	r3, [r4, #6]
 80143ca:	e64d      	b.n	8014068 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80143cc:	f04f 37ff 	mov.w	r7, #4294967295
 80143d0:	970a      	str	r7, [sp, #40]	; 0x28
 80143d2:	434a      	muls	r2, r1
 80143d4:	4264      	negs	r4, r4
 80143d6:	2700      	movs	r7, #0
 80143d8:	e756      	b.n	8014288 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 80143da:	ea4f 1867 	mov.w	r8, r7, asr #5
 80143de:	f009 031f 	and.w	r3, r9, #31
 80143e2:	45d0      	cmp	r8, sl
 80143e4:	f007 071f 	and.w	r7, r7, #31
 80143e8:	930f      	str	r3, [sp, #60]	; 0x3c
 80143ea:	fa1f fc8c 	uxth.w	ip, ip
 80143ee:	fa1f fe8e 	uxth.w	lr, lr
 80143f2:	d10a      	bne.n	801440a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 80143f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80143f6:	449c      	add	ip, r3
 80143f8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80143fa:	f8a5 c004 	strh.w	ip, [r5, #4]
 80143fe:	441f      	add	r7, r3
 8014400:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014402:	fb03 e707 	mla	r7, r3, r7, lr
 8014406:	80ef      	strh	r7, [r5, #6]
 8014408:	e6b9      	b.n	801417e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801440a:	2900      	cmp	r1, #0
 801440c:	f2c0 80a8 	blt.w	8014560 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8014410:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014412:	f1c7 0320 	rsb	r3, r7, #32
 8014416:	4363      	muls	r3, r4
 8014418:	2401      	movs	r4, #1
 801441a:	940d      	str	r4, [sp, #52]	; 0x34
 801441c:	2420      	movs	r4, #32
 801441e:	940c      	str	r4, [sp, #48]	; 0x30
 8014420:	fb93 f4f1 	sdiv	r4, r3, r1
 8014424:	fb01 3b14 	mls	fp, r1, r4, r3
 8014428:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801442a:	f1bb 0f00 	cmp.w	fp, #0
 801442e:	bfb8      	it	lt
 8014430:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8014434:	441f      	add	r7, r3
 8014436:	fb04 e707 	mla	r7, r4, r7, lr
 801443a:	44a4      	add	ip, r4
 801443c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8014440:	80ef      	strh	r7, [r5, #6]
 8014442:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014446:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014448:	f8bc e006 	ldrh.w	lr, [ip, #6]
 801444c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014450:	bfb8      	it	lt
 8014452:	448b      	addlt	fp, r1
 8014454:	eb08 0503 	add.w	r5, r8, r3
 8014458:	ea5e 0307 	orrs.w	r3, lr, r7
 801445c:	d011      	beq.n	8014482 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801445e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8014462:	f1be 0f00 	cmp.w	lr, #0
 8014466:	db0c      	blt.n	8014482 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8014468:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801446a:	45be      	cmp	lr, r7
 801446c:	da09      	bge.n	8014482 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801446e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8014472:	45be      	cmp	lr, r7
 8014474:	bf3c      	itt	cc
 8014476:	f10c 0708 	addcc.w	r7, ip, #8
 801447a:	6107      	strcc	r7, [r0, #16]
 801447c:	f10e 0701 	add.w	r7, lr, #1
 8014480:	6087      	str	r7, [r0, #8]
 8014482:	6907      	ldr	r7, [r0, #16]
 8014484:	b213      	sxth	r3, r2
 8014486:	9310      	str	r3, [sp, #64]	; 0x40
 8014488:	807b      	strh	r3, [r7, #2]
 801448a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801448c:	803d      	strh	r5, [r7, #0]
 801448e:	4555      	cmp	r5, sl
 8014490:	80be      	strh	r6, [r7, #4]
 8014492:	80fe      	strh	r6, [r7, #6]
 8014494:	eb04 0c03 	add.w	ip, r4, r3
 8014498:	d051      	beq.n	801453e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 801449a:	9b01      	ldr	r3, [sp, #4]
 801449c:	eba3 070c 	sub.w	r7, r3, ip
 80144a0:	443c      	add	r4, r7
 80144a2:	0164      	lsls	r4, r4, #5
 80144a4:	fb94 f8f1 	sdiv	r8, r4, r1
 80144a8:	fb01 4418 	mls	r4, r1, r8, r4
 80144ac:	2c00      	cmp	r4, #0
 80144ae:	bfb8      	it	lt
 80144b0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80144b4:	ebab 0301 	sub.w	r3, fp, r1
 80144b8:	f108 0701 	add.w	r7, r8, #1
 80144bc:	bfb8      	it	lt
 80144be:	1864      	addlt	r4, r4, r1
 80144c0:	9309      	str	r3, [sp, #36]	; 0x24
 80144c2:	9711      	str	r7, [sp, #68]	; 0x44
 80144c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80144c6:	f8d0 e010 	ldr.w	lr, [r0, #16]
 80144ca:	191b      	adds	r3, r3, r4
 80144cc:	bf58      	it	pl
 80144ce:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 80144d0:	f8be b004 	ldrh.w	fp, [lr, #4]
 80144d4:	9309      	str	r3, [sp, #36]	; 0x24
 80144d6:	bf48      	it	mi
 80144d8:	4647      	movmi	r7, r8
 80144da:	44bb      	add	fp, r7
 80144dc:	f8ae b004 	strh.w	fp, [lr, #4]
 80144e0:	f8be b006 	ldrh.w	fp, [lr, #6]
 80144e4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80144e8:	f8ae b006 	strh.w	fp, [lr, #6]
 80144ec:	f8d0 e010 	ldr.w	lr, [r0, #16]
 80144f0:	44bc      	add	ip, r7
 80144f2:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 80144f4:	f8be b006 	ldrh.w	fp, [lr, #6]
 80144f8:	443d      	add	r5, r7
 80144fa:	f8be 7004 	ldrh.w	r7, [lr, #4]
 80144fe:	bf5c      	itt	pl
 8014500:	1a5b      	subpl	r3, r3, r1
 8014502:	9309      	strpl	r3, [sp, #36]	; 0x24
 8014504:	ea5b 0307 	orrs.w	r3, fp, r7
 8014508:	d011      	beq.n	801452e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801450a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 801450e:	f1bb 0f00 	cmp.w	fp, #0
 8014512:	db0c      	blt.n	801452e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8014514:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014516:	45bb      	cmp	fp, r7
 8014518:	da09      	bge.n	801452e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801451a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 801451e:	45bb      	cmp	fp, r7
 8014520:	bf3c      	itt	cc
 8014522:	f10e 0708 	addcc.w	r7, lr, #8
 8014526:	6107      	strcc	r7, [r0, #16]
 8014528:	f10b 0701 	add.w	r7, fp, #1
 801452c:	6087      	str	r7, [r0, #8]
 801452e:	6907      	ldr	r7, [r0, #16]
 8014530:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014532:	803d      	strh	r5, [r7, #0]
 8014534:	4555      	cmp	r5, sl
 8014536:	807b      	strh	r3, [r7, #2]
 8014538:	80be      	strh	r6, [r7, #4]
 801453a:	80fe      	strh	r6, [r7, #6]
 801453c:	d1c2      	bne.n	80144c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 801453e:	9b01      	ldr	r3, [sp, #4]
 8014540:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8014542:	eba3 0c0c 	sub.w	ip, r3, ip
 8014546:	6903      	ldr	r3, [r0, #16]
 8014548:	8899      	ldrh	r1, [r3, #4]
 801454a:	4461      	add	r1, ip
 801454c:	8099      	strh	r1, [r3, #4]
 801454e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014550:	3720      	adds	r7, #32
 8014552:	1a7f      	subs	r7, r7, r1
 8014554:	88d9      	ldrh	r1, [r3, #6]
 8014556:	fb0c 1c07 	mla	ip, ip, r7, r1
 801455a:	f8a3 c006 	strh.w	ip, [r3, #6]
 801455e:	e60e      	b.n	801417e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014560:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014562:	f04f 34ff 	mov.w	r4, #4294967295
 8014566:	940d      	str	r4, [sp, #52]	; 0x34
 8014568:	437b      	muls	r3, r7
 801456a:	4249      	negs	r1, r1
 801456c:	2400      	movs	r4, #0
 801456e:	e756      	b.n	801441e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8014570:	9905      	ldr	r1, [sp, #20]
 8014572:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8014576:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 801457a:	f001 011f 	and.w	r1, r1, #31
 801457e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8014582:	9102      	str	r1, [sp, #8]
 8014584:	9904      	ldr	r1, [sp, #16]
 8014586:	45f3      	cmp	fp, lr
 8014588:	f009 0c1f 	and.w	ip, r9, #31
 801458c:	eba1 0406 	sub.w	r4, r1, r6
 8014590:	d108      	bne.n	80145a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8014592:	9b02      	ldr	r3, [sp, #8]
 8014594:	449c      	add	ip, r3
 8014596:	44a0      	add	r8, r4
 8014598:	fb04 a40c 	mla	r4, r4, ip, sl
 801459c:	f8a7 8004 	strh.w	r8, [r7, #4]
 80145a0:	80fc      	strh	r4, [r7, #6]
 80145a2:	e458      	b.n	8013e56 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80145a4:	9905      	ldr	r1, [sp, #20]
 80145a6:	ebb1 0109 	subs.w	r1, r1, r9
 80145aa:	bf5b      	ittet	pl
 80145ac:	f1cc 0520 	rsbpl	r5, ip, #32
 80145b0:	436c      	mulpl	r4, r5
 80145b2:	2500      	movmi	r5, #0
 80145b4:	2520      	movpl	r5, #32
 80145b6:	bf44      	itt	mi
 80145b8:	fb04 f40c 	mulmi.w	r4, r4, ip
 80145bc:	4249      	negmi	r1, r1
 80145be:	9501      	str	r5, [sp, #4]
 80145c0:	9b01      	ldr	r3, [sp, #4]
 80145c2:	fb94 f5f1 	sdiv	r5, r4, r1
 80145c6:	fb01 4415 	mls	r4, r1, r5, r4
 80145ca:	bf54      	ite	pl
 80145cc:	f04f 0901 	movpl.w	r9, #1
 80145d0:	f04f 39ff 	movmi.w	r9, #4294967295
 80145d4:	2c00      	cmp	r4, #0
 80145d6:	bfb8      	it	lt
 80145d8:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80145dc:	449c      	add	ip, r3
 80145de:	44a8      	add	r8, r5
 80145e0:	fb05 ac0c 	mla	ip, r5, ip, sl
 80145e4:	f8a7 8004 	strh.w	r8, [r7, #4]
 80145e8:	f8a7 c006 	strh.w	ip, [r7, #6]
 80145ec:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80145f0:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80145f4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80145f8:	bfb8      	it	lt
 80145fa:	1864      	addlt	r4, r4, r1
 80145fc:	ea58 0707 	orrs.w	r7, r8, r7
 8014600:	eb0b 0309 	add.w	r3, fp, r9
 8014604:	d011      	beq.n	801462a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014606:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801460a:	f1b8 0f00 	cmp.w	r8, #0
 801460e:	db0c      	blt.n	801462a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014610:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014612:	45b8      	cmp	r8, r7
 8014614:	da09      	bge.n	801462a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014616:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 801461a:	45b8      	cmp	r8, r7
 801461c:	bf3c      	itt	cc
 801461e:	f10c 0708 	addcc.w	r7, ip, #8
 8014622:	6107      	strcc	r7, [r0, #16]
 8014624:	f108 0701 	add.w	r7, r8, #1
 8014628:	6087      	str	r7, [r0, #8]
 801462a:	6907      	ldr	r7, [r0, #16]
 801462c:	f04f 0c00 	mov.w	ip, #0
 8014630:	b212      	sxth	r2, r2
 8014632:	459e      	cmp	lr, r3
 8014634:	803b      	strh	r3, [r7, #0]
 8014636:	807a      	strh	r2, [r7, #2]
 8014638:	f8a7 c004 	strh.w	ip, [r7, #4]
 801463c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8014640:	442e      	add	r6, r5
 8014642:	d04d      	beq.n	80146e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8014644:	9f04      	ldr	r7, [sp, #16]
 8014646:	1bbf      	subs	r7, r7, r6
 8014648:	443d      	add	r5, r7
 801464a:	016d      	lsls	r5, r5, #5
 801464c:	fb95 f8f1 	sdiv	r8, r5, r1
 8014650:	fb01 5518 	mls	r5, r1, r8, r5
 8014654:	4565      	cmp	r5, ip
 8014656:	bfb8      	it	lt
 8014658:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801465c:	f108 0701 	add.w	r7, r8, #1
 8014660:	bfb8      	it	lt
 8014662:	186d      	addlt	r5, r5, r1
 8014664:	1a64      	subs	r4, r4, r1
 8014666:	9703      	str	r7, [sp, #12]
 8014668:	f04f 0a00 	mov.w	sl, #0
 801466c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014670:	1964      	adds	r4, r4, r5
 8014672:	bf58      	it	pl
 8014674:	9f03      	ldrpl	r7, [sp, #12]
 8014676:	f8bc b004 	ldrh.w	fp, [ip, #4]
 801467a:	bf48      	it	mi
 801467c:	4647      	movmi	r7, r8
 801467e:	44bb      	add	fp, r7
 8014680:	f8ac b004 	strh.w	fp, [ip, #4]
 8014684:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014688:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 801468c:	f8ac b006 	strh.w	fp, [ip, #6]
 8014690:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014694:	443e      	add	r6, r7
 8014696:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801469a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 801469e:	bf58      	it	pl
 80146a0:	1a64      	subpl	r4, r4, r1
 80146a2:	ea5b 0707 	orrs.w	r7, fp, r7
 80146a6:	444b      	add	r3, r9
 80146a8:	d011      	beq.n	80146ce <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80146aa:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80146ae:	f1bb 0f00 	cmp.w	fp, #0
 80146b2:	db0c      	blt.n	80146ce <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80146b4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80146b6:	45bb      	cmp	fp, r7
 80146b8:	da09      	bge.n	80146ce <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80146ba:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80146be:	45bb      	cmp	fp, r7
 80146c0:	bf3c      	itt	cc
 80146c2:	f10c 0708 	addcc.w	r7, ip, #8
 80146c6:	6107      	strcc	r7, [r0, #16]
 80146c8:	f10b 0701 	add.w	r7, fp, #1
 80146cc:	6087      	str	r7, [r0, #8]
 80146ce:	6907      	ldr	r7, [r0, #16]
 80146d0:	459e      	cmp	lr, r3
 80146d2:	803b      	strh	r3, [r7, #0]
 80146d4:	807a      	strh	r2, [r7, #2]
 80146d6:	f8a7 a004 	strh.w	sl, [r7, #4]
 80146da:	f8a7 a006 	strh.w	sl, [r7, #6]
 80146de:	d1c5      	bne.n	801466c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 80146e0:	9b04      	ldr	r3, [sp, #16]
 80146e2:	1b9e      	subs	r6, r3, r6
 80146e4:	6903      	ldr	r3, [r0, #16]
 80146e6:	889a      	ldrh	r2, [r3, #4]
 80146e8:	4432      	add	r2, r6
 80146ea:	809a      	strh	r2, [r3, #4]
 80146ec:	9a02      	ldr	r2, [sp, #8]
 80146ee:	f102 0c20 	add.w	ip, r2, #32
 80146f2:	9a01      	ldr	r2, [sp, #4]
 80146f4:	ebac 0c02 	sub.w	ip, ip, r2
 80146f8:	88da      	ldrh	r2, [r3, #6]
 80146fa:	fb06 260c 	mla	r6, r6, ip, r2
 80146fe:	80de      	strh	r6, [r3, #6]
 8014700:	f7ff bba9 	b.w	8013e56 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08014704 <_ZN8touchgfx7Outline6lineToEii>:
 8014704:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014706:	079b      	lsls	r3, r3, #30
 8014708:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801470a:	460e      	mov	r6, r1
 801470c:	4615      	mov	r5, r2
 801470e:	d511      	bpl.n	8014734 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8014710:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8014714:	ea86 0701 	eor.w	r7, r6, r1
 8014718:	ea85 0302 	eor.w	r3, r5, r2
 801471c:	433b      	orrs	r3, r7
 801471e:	d009      	beq.n	8014734 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8014720:	4633      	mov	r3, r6
 8014722:	9500      	str	r5, [sp, #0]
 8014724:	f7ff fb3e 	bl	8013da4 <_ZN8touchgfx7Outline10renderLineEiiii>
 8014728:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801472a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 801472e:	f043 0301 	orr.w	r3, r3, #1
 8014732:	6243      	str	r3, [r0, #36]	; 0x24
 8014734:	b003      	add	sp, #12
 8014736:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014738 <_ZN8touchgfx7Outline6moveToEii>:
 8014738:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801473a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801473c:	4615      	mov	r5, r2
 801473e:	079a      	lsls	r2, r3, #30
 8014740:	4604      	mov	r4, r0
 8014742:	460e      	mov	r6, r1
 8014744:	d401      	bmi.n	801474a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8014746:	f7ff faf9 	bl	8013d3c <_ZN8touchgfx7Outline5resetEv>
 801474a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801474c:	07db      	lsls	r3, r3, #31
 801474e:	d504      	bpl.n	801475a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8014750:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8014754:	4620      	mov	r0, r4
 8014756:	f7ff ffd5 	bl	8014704 <_ZN8touchgfx7Outline6lineToEii>
 801475a:	6923      	ldr	r3, [r4, #16]
 801475c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014760:	1170      	asrs	r0, r6, #5
 8014762:	4290      	cmp	r0, r2
 8014764:	ea4f 1165 	mov.w	r1, r5, asr #5
 8014768:	d103      	bne.n	8014772 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 801476a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801476e:	4291      	cmp	r1, r2
 8014770:	d01a      	beq.n	80147a8 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8014772:	88df      	ldrh	r7, [r3, #6]
 8014774:	889a      	ldrh	r2, [r3, #4]
 8014776:	433a      	orrs	r2, r7
 8014778:	d010      	beq.n	801479c <_ZN8touchgfx7Outline6moveToEii+0x64>
 801477a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801477e:	2a00      	cmp	r2, #0
 8014780:	db0c      	blt.n	801479c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014782:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8014784:	42ba      	cmp	r2, r7
 8014786:	da09      	bge.n	801479c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014788:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 801478c:	42ba      	cmp	r2, r7
 801478e:	bf38      	it	cc
 8014790:	3308      	addcc	r3, #8
 8014792:	f102 0201 	add.w	r2, r2, #1
 8014796:	bf38      	it	cc
 8014798:	6123      	strcc	r3, [r4, #16]
 801479a:	60a2      	str	r2, [r4, #8]
 801479c:	6923      	ldr	r3, [r4, #16]
 801479e:	2200      	movs	r2, #0
 80147a0:	8018      	strh	r0, [r3, #0]
 80147a2:	8059      	strh	r1, [r3, #2]
 80147a4:	809a      	strh	r2, [r3, #4]
 80147a6:	80da      	strh	r2, [r3, #6]
 80147a8:	6166      	str	r6, [r4, #20]
 80147aa:	e9c4 5606 	strd	r5, r6, [r4, #24]
 80147ae:	6225      	str	r5, [r4, #32]
 80147b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080147b2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 80147b2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80147b6:	b0d0      	sub	sp, #320	; 0x140
 80147b8:	466c      	mov	r4, sp
 80147ba:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 80147be:	4627      	mov	r7, r4
 80147c0:	1a0d      	subs	r5, r1, r0
 80147c2:	2d48      	cmp	r5, #72	; 0x48
 80147c4:	f100 0308 	add.w	r3, r0, #8
 80147c8:	f340 80d5 	ble.w	8014976 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80147cc:	112d      	asrs	r5, r5, #4
 80147ce:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 80147d2:	f9b0 9000 	ldrsh.w	r9, [r0]
 80147d6:	6816      	ldr	r6, [r2, #0]
 80147d8:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 80147dc:	6006      	str	r6, [r0, #0]
 80147de:	6856      	ldr	r6, [r2, #4]
 80147e0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80147e4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80147e8:	6046      	str	r6, [r0, #4]
 80147ea:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80147ee:	f8a2 8002 	strh.w	r8, [r2, #2]
 80147f2:	f8a2 e004 	strh.w	lr, [r2, #4]
 80147f6:	f8a2 c006 	strh.w	ip, [r2, #6]
 80147fa:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80147fe:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8014802:	4565      	cmp	r5, ip
 8014804:	f1a1 0208 	sub.w	r2, r1, #8
 8014808:	db06      	blt.n	8014818 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 801480a:	d119      	bne.n	8014840 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 801480c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8014810:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8014814:	42ae      	cmp	r6, r5
 8014816:	dd13      	ble.n	8014840 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8014818:	460e      	mov	r6, r1
 801481a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 801481e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8014822:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8014826:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 801482a:	601d      	str	r5, [r3, #0]
 801482c:	6875      	ldr	r5, [r6, #4]
 801482e:	605d      	str	r5, [r3, #4]
 8014830:	f821 9c08 	strh.w	r9, [r1, #-8]
 8014834:	f821 cc06 	strh.w	ip, [r1, #-6]
 8014838:	f821 8c04 	strh.w	r8, [r1, #-4]
 801483c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8014840:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8014844:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8014848:	42ae      	cmp	r6, r5
 801484a:	db06      	blt.n	801485a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 801484c:	d116      	bne.n	801487c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801484e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8014852:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8014856:	45ac      	cmp	ip, r5
 8014858:	da10      	bge.n	801487c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801485a:	681d      	ldr	r5, [r3, #0]
 801485c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8014860:	6005      	str	r5, [r0, #0]
 8014862:	685d      	ldr	r5, [r3, #4]
 8014864:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8014868:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801486c:	f8a0 8008 	strh.w	r8, [r0, #8]
 8014870:	6045      	str	r5, [r0, #4]
 8014872:	8146      	strh	r6, [r0, #10]
 8014874:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8014878:	f8a0 c00e 	strh.w	ip, [r0, #14]
 801487c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8014880:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8014884:	4565      	cmp	r5, ip
 8014886:	db06      	blt.n	8014896 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8014888:	d119      	bne.n	80148be <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801488a:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 801488e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014892:	42ae      	cmp	r6, r5
 8014894:	da13      	bge.n	80148be <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014896:	460e      	mov	r6, r1
 8014898:	f9b0 9000 	ldrsh.w	r9, [r0]
 801489c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80148a0:	6005      	str	r5, [r0, #0]
 80148a2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 80148a6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 80148aa:	6875      	ldr	r5, [r6, #4]
 80148ac:	6045      	str	r5, [r0, #4]
 80148ae:	f821 9c08 	strh.w	r9, [r1, #-8]
 80148b2:	f821 cc06 	strh.w	ip, [r1, #-6]
 80148b6:	f821 8c04 	strh.w	r8, [r1, #-4]
 80148ba:	f821 ec02 	strh.w	lr, [r1, #-2]
 80148be:	3308      	adds	r3, #8
 80148c0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80148c4:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 80148c8:	45e6      	cmp	lr, ip
 80148ca:	dbf8      	blt.n	80148be <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80148cc:	d105      	bne.n	80148da <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80148ce:	f9b3 6000 	ldrsh.w	r6, [r3]
 80148d2:	f9b0 5000 	ldrsh.w	r5, [r0]
 80148d6:	42ae      	cmp	r6, r5
 80148d8:	dbf1      	blt.n	80148be <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80148da:	4615      	mov	r5, r2
 80148dc:	3a08      	subs	r2, #8
 80148de:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 80148e2:	45b4      	cmp	ip, r6
 80148e4:	dbf9      	blt.n	80148da <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80148e6:	d105      	bne.n	80148f4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 80148e8:	f9b0 8000 	ldrsh.w	r8, [r0]
 80148ec:	f9b2 6000 	ldrsh.w	r6, [r2]
 80148f0:	45b0      	cmp	r8, r6
 80148f2:	dbf2      	blt.n	80148da <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80148f4:	4293      	cmp	r3, r2
 80148f6:	f1a5 0608 	sub.w	r6, r5, #8
 80148fa:	d816      	bhi.n	801492a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 80148fc:	f8d6 c000 	ldr.w	ip, [r6]
 8014900:	f9b3 a000 	ldrsh.w	sl, [r3]
 8014904:	f8c3 c000 	str.w	ip, [r3]
 8014908:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 801490c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8014910:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8014914:	f8c3 c004 	str.w	ip, [r3, #4]
 8014918:	f825 ac08 	strh.w	sl, [r5, #-8]
 801491c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8014920:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014924:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014928:	e7c9      	b.n	80148be <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801492a:	f8d6 e000 	ldr.w	lr, [r6]
 801492e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8014932:	f8c0 e000 	str.w	lr, [r0]
 8014936:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 801493a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 801493e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8014942:	f8c0 e004 	str.w	lr, [r0, #4]
 8014946:	f825 ac08 	strh.w	sl, [r5, #-8]
 801494a:	f825 cc06 	strh.w	ip, [r5, #-6]
 801494e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014952:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014956:	1acd      	subs	r5, r1, r3
 8014958:	1a16      	subs	r6, r2, r0
 801495a:	10ed      	asrs	r5, r5, #3
 801495c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8014960:	bfb5      	itete	lt
 8014962:	e9c4 0200 	strdlt	r0, r2, [r4]
 8014966:	e9c4 3100 	strdge	r3, r1, [r4]
 801496a:	460a      	movlt	r2, r1
 801496c:	4603      	movge	r3, r0
 801496e:	3408      	adds	r4, #8
 8014970:	4618      	mov	r0, r3
 8014972:	4611      	mov	r1, r2
 8014974:	e724      	b.n	80147c0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8014976:	4299      	cmp	r1, r3
 8014978:	d928      	bls.n	80149cc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 801497a:	f1a3 0210 	sub.w	r2, r3, #16
 801497e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8014982:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8014986:	45ac      	cmp	ip, r5
 8014988:	db06      	blt.n	8014998 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 801498a:	d11d      	bne.n	80149c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 801498c:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8014990:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8014994:	42ae      	cmp	r6, r5
 8014996:	da17      	bge.n	80149c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8014998:	4615      	mov	r5, r2
 801499a:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 801499e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 80149a2:	6116      	str	r6, [r2, #16]
 80149a4:	686e      	ldr	r6, [r5, #4]
 80149a6:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 80149aa:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 80149ae:	f8a2 9008 	strh.w	r9, [r2, #8]
 80149b2:	42a8      	cmp	r0, r5
 80149b4:	6156      	str	r6, [r2, #20]
 80149b6:	f8a2 c00a 	strh.w	ip, [r2, #10]
 80149ba:	f8a2 800c 	strh.w	r8, [r2, #12]
 80149be:	f8a2 e00e 	strh.w	lr, [r2, #14]
 80149c2:	f1a2 0208 	sub.w	r2, r2, #8
 80149c6:	d1da      	bne.n	801497e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 80149c8:	3308      	adds	r3, #8
 80149ca:	e7d4      	b.n	8014976 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80149cc:	42bc      	cmp	r4, r7
 80149ce:	d903      	bls.n	80149d8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 80149d0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 80149d4:	3c08      	subs	r4, #8
 80149d6:	e6f3      	b.n	80147c0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80149d8:	b050      	add	sp, #320	; 0x140
 80149da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080149de <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 80149de:	b510      	push	{r4, lr}
 80149e0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80149e2:	07da      	lsls	r2, r3, #31
 80149e4:	4604      	mov	r4, r0
 80149e6:	d507      	bpl.n	80149f8 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 80149e8:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 80149ec:	f7ff fe8a 	bl	8014704 <_ZN8touchgfx7Outline6lineToEii>
 80149f0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80149f2:	f023 0301 	bic.w	r3, r3, #1
 80149f6:	6243      	str	r3, [r0, #36]	; 0x24
 80149f8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80149fa:	079b      	lsls	r3, r3, #30
 80149fc:	d521      	bpl.n	8014a42 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 80149fe:	6923      	ldr	r3, [r4, #16]
 8014a00:	88d9      	ldrh	r1, [r3, #6]
 8014a02:	889a      	ldrh	r2, [r3, #4]
 8014a04:	430a      	orrs	r2, r1
 8014a06:	d010      	beq.n	8014a2a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014a08:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014a0c:	2a00      	cmp	r2, #0
 8014a0e:	db0c      	blt.n	8014a2a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014a10:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8014a12:	428a      	cmp	r2, r1
 8014a14:	da09      	bge.n	8014a2a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014a16:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8014a1a:	4291      	cmp	r1, r2
 8014a1c:	bf88      	it	hi
 8014a1e:	3308      	addhi	r3, #8
 8014a20:	f102 0201 	add.w	r2, r2, #1
 8014a24:	bf88      	it	hi
 8014a26:	6123      	strhi	r3, [r4, #16]
 8014a28:	60a2      	str	r2, [r4, #8]
 8014a2a:	68a1      	ldr	r1, [r4, #8]
 8014a2c:	b129      	cbz	r1, 8014a3a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8014a2e:	6863      	ldr	r3, [r4, #4]
 8014a30:	4299      	cmp	r1, r3
 8014a32:	d802      	bhi.n	8014a3a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8014a34:	68e0      	ldr	r0, [r4, #12]
 8014a36:	f7ff febc 	bl	80147b2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8014a3a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8014a3c:	f023 0302 	bic.w	r3, r3, #2
 8014a40:	6263      	str	r3, [r4, #36]	; 0x24
 8014a42:	68e0      	ldr	r0, [r4, #12]
 8014a44:	bd10      	pop	{r4, pc}
	...

08014a48 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8014a48:	4b02      	ldr	r3, [pc, #8]	; (8014a54 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 8014a4a:	6018      	str	r0, [r3, #0]
 8014a4c:	4b02      	ldr	r3, [pc, #8]	; (8014a58 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8014a4e:	6019      	str	r1, [r3, #0]
 8014a50:	4770      	bx	lr
 8014a52:	bf00      	nop
 8014a54:	20013824 	.word	0x20013824
 8014a58:	20013828 	.word	0x20013828

08014a5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 8014a5c:	4a02      	ldr	r2, [pc, #8]	; (8014a68 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 8014a5e:	2300      	movs	r3, #0
 8014a60:	6013      	str	r3, [r2, #0]
 8014a62:	4a02      	ldr	r2, [pc, #8]	; (8014a6c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8014a64:	6013      	str	r3, [r2, #0]
 8014a66:	4770      	bx	lr
 8014a68:	20013824 	.word	0x20013824
 8014a6c:	20013828 	.word	0x20013828

08014a70 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8014a70:	4b01      	ldr	r3, [pc, #4]	; (8014a78 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8014a72:	6818      	ldr	r0, [r3, #0]
 8014a74:	4770      	bx	lr
 8014a76:	bf00      	nop
 8014a78:	20013824 	.word	0x20013824

08014a7c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8014a7c:	4b01      	ldr	r3, [pc, #4]	; (8014a84 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8014a7e:	6818      	ldr	r0, [r3, #0]
 8014a80:	4770      	bx	lr
 8014a82:	bf00      	nop
 8014a84:	20013828 	.word	0x20013828

08014a88 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8014a88:	b510      	push	{r4, lr}
 8014a8a:	6803      	ldr	r3, [r0, #0]
 8014a8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014a8e:	460c      	mov	r4, r1
 8014a90:	4798      	blx	r3
 8014a92:	1b03      	subs	r3, r0, r4
 8014a94:	4258      	negs	r0, r3
 8014a96:	4158      	adcs	r0, r3
 8014a98:	bd10      	pop	{r4, pc}
	...

08014a9c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8014a9c:	4b01      	ldr	r3, [pc, #4]	; (8014aa4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8014a9e:	6019      	str	r1, [r3, #0]
 8014aa0:	4770      	bx	lr
 8014aa2:	bf00      	nop
 8014aa4:	2001382c 	.word	0x2001382c

08014aa8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8014aa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014aac:	4696      	mov	lr, r2
 8014aae:	4605      	mov	r5, r0
 8014ab0:	4614      	mov	r4, r2
 8014ab2:	460e      	mov	r6, r1
 8014ab4:	461f      	mov	r7, r3
 8014ab6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014aba:	b097      	sub	sp, #92	; 0x5c
 8014abc:	f10d 0c1c 	add.w	ip, sp, #28
 8014ac0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014ac4:	f8de 3000 	ldr.w	r3, [lr]
 8014ac8:	f8cc 3000 	str.w	r3, [ip]
 8014acc:	f104 0e14 	add.w	lr, r4, #20
 8014ad0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014ad4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014ad8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014adc:	f8de 3000 	ldr.w	r3, [lr]
 8014ae0:	f8cc 3000 	str.w	r3, [ip]
 8014ae4:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014ae8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014aec:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8014af0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014af4:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8014af8:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8014afc:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8014b00:	f8de 3000 	ldr.w	r3, [lr]
 8014b04:	f8cc 3000 	str.w	r3, [ip]
 8014b08:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014b0a:	682b      	ldr	r3, [r5, #0]
 8014b0c:	9201      	str	r2, [sp, #4]
 8014b0e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8014b12:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014b14:	9200      	str	r2, [sp, #0]
 8014b16:	f8cd 8008 	str.w	r8, [sp, #8]
 8014b1a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8014b1e:	aa07      	add	r2, sp, #28
 8014b20:	463b      	mov	r3, r7
 8014b22:	4631      	mov	r1, r6
 8014b24:	4628      	mov	r0, r5
 8014b26:	47d8      	blx	fp
 8014b28:	46a6      	mov	lr, r4
 8014b2a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014b2e:	f10d 0c1c 	add.w	ip, sp, #28
 8014b32:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014b36:	f8de 3000 	ldr.w	r3, [lr]
 8014b3a:	f8cc 3000 	str.w	r3, [ip]
 8014b3e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014b42:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014b46:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014b4a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014b4e:	343c      	adds	r4, #60	; 0x3c
 8014b50:	f8de 3000 	ldr.w	r3, [lr]
 8014b54:	f8cc 3000 	str.w	r3, [ip]
 8014b58:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014b5a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8014b5e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014b62:	6823      	ldr	r3, [r4, #0]
 8014b64:	f8cc 3000 	str.w	r3, [ip]
 8014b68:	682b      	ldr	r3, [r5, #0]
 8014b6a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8014b6e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014b70:	9201      	str	r2, [sp, #4]
 8014b72:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014b74:	9200      	str	r2, [sp, #0]
 8014b76:	f8cd 8008 	str.w	r8, [sp, #8]
 8014b7a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8014b7c:	aa07      	add	r2, sp, #28
 8014b7e:	463b      	mov	r3, r7
 8014b80:	4631      	mov	r1, r6
 8014b82:	4628      	mov	r0, r5
 8014b84:	47a0      	blx	r4
 8014b86:	b017      	add	sp, #92	; 0x5c
 8014b88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014b8c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8014b8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b90:	b08d      	sub	sp, #52	; 0x34
 8014b92:	4688      	mov	r8, r1
 8014b94:	9916      	ldr	r1, [sp, #88]	; 0x58
 8014b96:	f8d3 c000 	ldr.w	ip, [r3]
 8014b9a:	680f      	ldr	r7, [r1, #0]
 8014b9c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8014ba0:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8014ba4:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8014ba8:	edd3 6a07 	vldr	s13, [r3, #28]
 8014bac:	9918      	ldr	r1, [sp, #96]	; 0x60
 8014bae:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8014bb2:	f9b1 9000 	ldrsh.w	r9, [r1]
 8014bb6:	f9ba 1000 	ldrsh.w	r1, [sl]
 8014bba:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8014bbe:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8014bc2:	eba7 070c 	sub.w	r7, r7, ip
 8014bc6:	42bc      	cmp	r4, r7
 8014bc8:	bfa8      	it	ge
 8014bca:	463c      	movge	r4, r7
 8014bcc:	ee07 4a90 	vmov	s15, r4
 8014bd0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8014bd4:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8014bd8:	ee25 4a04 	vmul.f32	s8, s10, s8
 8014bdc:	ee65 4a24 	vmul.f32	s9, s10, s9
 8014be0:	ee25 5a27 	vmul.f32	s10, s10, s15
 8014be4:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8014be8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8014bec:	eb09 0e0c 	add.w	lr, r9, ip
 8014bf0:	4571      	cmp	r1, lr
 8014bf2:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8014bf6:	ee32 1a05 	vadd.f32	s2, s4, s10
 8014bfa:	ee36 0a84 	vadd.f32	s0, s13, s8
 8014bfe:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014c02:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014c06:	f340 808d 	ble.w	8014d24 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8014c0a:	eba1 060e 	sub.w	r6, r1, lr
 8014c0e:	fb96 f5f4 	sdiv	r5, r6, r4
 8014c12:	ee07 5a10 	vmov	s14, r5
 8014c16:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014c1a:	2d00      	cmp	r5, #0
 8014c1c:	fb04 6615 	mls	r6, r4, r5, r6
 8014c20:	eea7 0a04 	vfma.f32	s0, s14, s8
 8014c24:	eee7 0a24 	vfma.f32	s1, s14, s9
 8014c28:	eea7 1a05 	vfma.f32	s2, s14, s10
 8014c2c:	dd13      	ble.n	8014c56 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8014c2e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8014c32:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8014c36:	eef5 6a40 	vcmp.f32	s13, #0.0
 8014c3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014c3e:	bf18      	it	ne
 8014c40:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8014c44:	ee31 2a45 	vsub.f32	s4, s2, s10
 8014c48:	bf08      	it	eq
 8014c4a:	eeb0 7a67 	vmoveq.f32	s14, s15
 8014c4e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014c52:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014c56:	fb05 f204 	mul.w	r2, r5, r4
 8014c5a:	1abf      	subs	r7, r7, r2
 8014c5c:	4494      	add	ip, r2
 8014c5e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8014c62:	4411      	add	r1, r2
 8014c64:	eb09 020c 	add.w	r2, r9, ip
 8014c68:	443a      	add	r2, r7
 8014c6a:	b209      	sxth	r1, r1
 8014c6c:	428a      	cmp	r2, r1
 8014c6e:	bfc4      	itt	gt
 8014c70:	eba1 0209 	subgt.w	r2, r1, r9
 8014c74:	eba2 070c 	subgt.w	r7, r2, ip
 8014c78:	2f00      	cmp	r7, #0
 8014c7a:	dd50      	ble.n	8014d1e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8014c7c:	fb97 f1f4 	sdiv	r1, r7, r4
 8014c80:	fb04 7211 	mls	r2, r4, r1, r7
 8014c84:	b90a      	cbnz	r2, 8014c8a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8014c86:	3901      	subs	r1, #1
 8014c88:	4622      	mov	r2, r4
 8014c8a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8014c8e:	6840      	ldr	r0, [r0, #4]
 8014c90:	900b      	str	r0, [sp, #44]	; 0x2c
 8014c92:	f8d0 a000 	ldr.w	sl, [r0]
 8014c96:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8014c98:	9008      	str	r0, [sp, #32]
 8014c9a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8014c9e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8014ca0:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8014ca4:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8014ca8:	695b      	ldr	r3, [r3, #20]
 8014caa:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8014cac:	445b      	add	r3, fp
 8014cae:	eef0 6a42 	vmov.f32	s13, s4
 8014cb2:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8014cb6:	ee21 3a23 	vmul.f32	s6, s2, s7
 8014cba:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8014cbe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014cc2:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8014cc6:	9307      	str	r3, [sp, #28]
 8014cc8:	ee17 7a90 	vmov	r7, s15
 8014ccc:	ee73 7a42 	vsub.f32	s15, s6, s4
 8014cd0:	eeb0 7a61 	vmov.f32	s14, s3
 8014cd4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8014cd8:	ee16 3a90 	vmov	r3, s13
 8014cdc:	fb97 f7f4 	sdiv	r7, r7, r4
 8014ce0:	ee17 ca90 	vmov	ip, s15
 8014ce4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8014ce8:	fb9c fcf4 	sdiv	ip, ip, r4
 8014cec:	fb0c 3306 	mla	r3, ip, r6, r3
 8014cf0:	9302      	str	r3, [sp, #8]
 8014cf2:	ee17 3a10 	vmov	r3, s14
 8014cf6:	44b6      	add	lr, r6
 8014cf8:	fb04 e505 	mla	r5, r4, r5, lr
 8014cfc:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8014d00:	fb07 3706 	mla	r7, r7, r6, r3
 8014d04:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8014d08:	e9cd 4700 	strd	r4, r7, [sp]
 8014d0c:	2900      	cmp	r1, #0
 8014d0e:	bfcc      	ite	gt
 8014d10:	46a1      	movgt	r9, r4
 8014d12:	4691      	movle	r9, r2
 8014d14:	eba9 0306 	sub.w	r3, r9, r6
 8014d18:	f8da 4008 	ldr.w	r4, [sl, #8]
 8014d1c:	47a0      	blx	r4
 8014d1e:	b00d      	add	sp, #52	; 0x34
 8014d20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014d24:	2500      	movs	r5, #0
 8014d26:	462e      	mov	r6, r5
 8014d28:	e799      	b.n	8014c5e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08014d2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8014d2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d30:	b0db      	sub	sp, #364	; 0x16c
 8014d32:	461d      	mov	r5, r3
 8014d34:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8014d38:	930a      	str	r3, [sp, #40]	; 0x28
 8014d3a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8014d3e:	930b      	str	r3, [sp, #44]	; 0x2c
 8014d40:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8014d44:	9310      	str	r3, [sp, #64]	; 0x40
 8014d46:	6803      	ldr	r3, [r0, #0]
 8014d48:	910f      	str	r1, [sp, #60]	; 0x3c
 8014d4a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8014d4c:	9009      	str	r0, [sp, #36]	; 0x24
 8014d4e:	4614      	mov	r4, r2
 8014d50:	4629      	mov	r1, r5
 8014d52:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8014d56:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8014d5a:	47b8      	blx	r7
 8014d5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014d5e:	6058      	str	r0, [r3, #4]
 8014d60:	2800      	cmp	r0, #0
 8014d62:	f000 83a1 	beq.w	80154a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014d66:	682b      	ldr	r3, [r5, #0]
 8014d68:	9314      	str	r3, [sp, #80]	; 0x50
 8014d6a:	686b      	ldr	r3, [r5, #4]
 8014d6c:	9315      	str	r3, [sp, #84]	; 0x54
 8014d6e:	4bc4      	ldr	r3, [pc, #784]	; (8015080 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8014d70:	ed94 7a02 	vldr	s14, [r4, #8]
 8014d74:	7819      	ldrb	r1, [r3, #0]
 8014d76:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8014d7a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8014d7e:	2900      	cmp	r1, #0
 8014d80:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014d84:	bf16      	itet	ne
 8014d86:	4619      	movne	r1, r3
 8014d88:	4611      	moveq	r1, r2
 8014d8a:	4613      	movne	r3, r2
 8014d8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014d90:	9116      	str	r1, [sp, #88]	; 0x58
 8014d92:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8014d96:	f240 8387 	bls.w	80154a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014d9a:	ed94 7a07 	vldr	s14, [r4, #28]
 8014d9e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014da2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014da6:	f240 837f 	bls.w	80154a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014daa:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8014dae:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014db2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014db6:	f240 8377 	bls.w	80154a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014dba:	6822      	ldr	r2, [r4, #0]
 8014dbc:	4bb1      	ldr	r3, [pc, #708]	; (8015084 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8014dbe:	429a      	cmp	r2, r3
 8014dc0:	f2c0 8372 	blt.w	80154a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014dc4:	49b0      	ldr	r1, [pc, #704]	; (8015088 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8014dc6:	6963      	ldr	r3, [r4, #20]
 8014dc8:	428a      	cmp	r2, r1
 8014dca:	f300 836d 	bgt.w	80154a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014dce:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8014dd2:	48ae      	ldr	r0, [pc, #696]	; (801508c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8014dd4:	33ff      	adds	r3, #255	; 0xff
 8014dd6:	4283      	cmp	r3, r0
 8014dd8:	f200 8366 	bhi.w	80154a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014ddc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8014dde:	4dac      	ldr	r5, [pc, #688]	; (8015090 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8014de0:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8014de4:	33ff      	adds	r3, #255	; 0xff
 8014de6:	42ab      	cmp	r3, r5
 8014de8:	f200 835e 	bhi.w	80154a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014dec:	6862      	ldr	r2, [r4, #4]
 8014dee:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8014df2:	33ff      	adds	r3, #255	; 0xff
 8014df4:	4283      	cmp	r3, r0
 8014df6:	f200 8357 	bhi.w	80154a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014dfa:	69a1      	ldr	r1, [r4, #24]
 8014dfc:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8014e00:	33ff      	adds	r3, #255	; 0xff
 8014e02:	4283      	cmp	r3, r0
 8014e04:	f200 8350 	bhi.w	80154a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014e08:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014e0a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8014e0e:	30ff      	adds	r0, #255	; 0xff
 8014e10:	42a8      	cmp	r0, r5
 8014e12:	f200 8349 	bhi.w	80154a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014e16:	428a      	cmp	r2, r1
 8014e18:	f280 8110 	bge.w	801503c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8014e1c:	429a      	cmp	r2, r3
 8014e1e:	f300 8119 	bgt.w	8015054 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8014e22:	4299      	cmp	r1, r3
 8014e24:	f280 811d 	bge.w	8015062 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8014e28:	2502      	movs	r5, #2
 8014e2a:	2701      	movs	r7, #1
 8014e2c:	46a9      	mov	r9, r5
 8014e2e:	46b8      	mov	r8, r7
 8014e30:	f04f 0a00 	mov.w	sl, #0
 8014e34:	4621      	mov	r1, r4
 8014e36:	a849      	add	r0, sp, #292	; 0x124
 8014e38:	f003 ff2a 	bl	8018c90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8014e3c:	4622      	mov	r2, r4
 8014e3e:	4653      	mov	r3, sl
 8014e40:	a949      	add	r1, sp, #292	; 0x124
 8014e42:	f8cd 9000 	str.w	r9, [sp]
 8014e46:	a819      	add	r0, sp, #100	; 0x64
 8014e48:	f004 f852 	bl	8018ef0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8014e4c:	4622      	mov	r2, r4
 8014e4e:	4653      	mov	r3, sl
 8014e50:	a949      	add	r1, sp, #292	; 0x124
 8014e52:	f8cd 8000 	str.w	r8, [sp]
 8014e56:	a829      	add	r0, sp, #164	; 0xa4
 8014e58:	f004 f84a 	bl	8018ef0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8014e5c:	4643      	mov	r3, r8
 8014e5e:	4622      	mov	r2, r4
 8014e60:	a949      	add	r1, sp, #292	; 0x124
 8014e62:	f8cd 9000 	str.w	r9, [sp]
 8014e66:	a839      	add	r0, sp, #228	; 0xe4
 8014e68:	f004 f842 	bl	8018ef0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8014e6c:	42af      	cmp	r7, r5
 8014e6e:	bfb5      	itete	lt
 8014e70:	2300      	movlt	r3, #0
 8014e72:	2301      	movge	r3, #1
 8014e74:	930e      	strlt	r3, [sp, #56]	; 0x38
 8014e76:	930e      	strge	r3, [sp, #56]	; 0x38
 8014e78:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014e7a:	e893 0003 	ldmia.w	r3, {r0, r1}
 8014e7e:	af12      	add	r7, sp, #72	; 0x48
 8014e80:	bfb9      	ittee	lt
 8014e82:	ad29      	addlt	r5, sp, #164	; 0xa4
 8014e84:	ac19      	addlt	r4, sp, #100	; 0x64
 8014e86:	ad19      	addge	r5, sp, #100	; 0x64
 8014e88:	ac29      	addge	r4, sp, #164	; 0xa4
 8014e8a:	e887 0003 	stmia.w	r7, {r0, r1}
 8014e8e:	b928      	cbnz	r0, 8014e9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8014e90:	4b80      	ldr	r3, [pc, #512]	; (8015094 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8014e92:	6818      	ldr	r0, [r3, #0]
 8014e94:	6803      	ldr	r3, [r0, #0]
 8014e96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014e98:	4798      	blx	r3
 8014e9a:	6038      	str	r0, [r7, #0]
 8014e9c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014e9e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8014ea2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8014ea6:	930c      	str	r3, [sp, #48]	; 0x30
 8014ea8:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014eaa:	6963      	ldr	r3, [r4, #20]
 8014eac:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8014eae:	440b      	add	r3, r1
 8014eb0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8014eb4:	4408      	add	r0, r1
 8014eb6:	b200      	sxth	r0, r0
 8014eb8:	4283      	cmp	r3, r0
 8014eba:	900d      	str	r0, [sp, #52]	; 0x34
 8014ebc:	f280 80dd 	bge.w	801507a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8014ec0:	428b      	cmp	r3, r1
 8014ec2:	da08      	bge.n	8014ed6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8014ec4:	2a00      	cmp	r2, #0
 8014ec6:	dd06      	ble.n	8014ed6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8014ec8:	1acb      	subs	r3, r1, r3
 8014eca:	429a      	cmp	r2, r3
 8014ecc:	f2c0 80e4 	blt.w	8015098 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8014ed0:	2b00      	cmp	r3, #0
 8014ed2:	f300 80e2 	bgt.w	801509a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8014ed6:	6967      	ldr	r7, [r4, #20]
 8014ed8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014eda:	443b      	add	r3, r7
 8014edc:	461f      	mov	r7, r3
 8014ede:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014ee0:	1bdf      	subs	r7, r3, r7
 8014ee2:	4297      	cmp	r7, r2
 8014ee4:	bfa8      	it	ge
 8014ee6:	4617      	movge	r7, r2
 8014ee8:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8014eec:	2f00      	cmp	r7, #0
 8014eee:	f340 8166 	ble.w	80151be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8014ef2:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014ef4:	6829      	ldr	r1, [r5, #0]
 8014ef6:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014efa:	f9bb 3000 	ldrsh.w	r3, [fp]
 8014efe:	6820      	ldr	r0, [r4, #0]
 8014f00:	4411      	add	r1, r2
 8014f02:	4299      	cmp	r1, r3
 8014f04:	dd1a      	ble.n	8014f3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8014f06:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8014f0a:	440b      	add	r3, r1
 8014f0c:	4402      	add	r2, r0
 8014f0e:	b21b      	sxth	r3, r3
 8014f10:	429a      	cmp	r2, r3
 8014f12:	dc13      	bgt.n	8014f3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8014f14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014f16:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014f18:	681b      	ldr	r3, [r3, #0]
 8014f1a:	9206      	str	r2, [sp, #24]
 8014f1c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014f1e:	9205      	str	r2, [sp, #20]
 8014f20:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014f22:	9500      	str	r5, [sp, #0]
 8014f24:	e9cd b203 	strd	fp, r2, [sp, #12]
 8014f28:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8014f2a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8014f2c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8014f30:	a912      	add	r1, sp, #72	; 0x48
 8014f32:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8014f36:	aa49      	add	r2, sp, #292	; 0x124
 8014f38:	4623      	mov	r3, r4
 8014f3a:	47c8      	blx	r9
 8014f3c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8014f40:	441a      	add	r2, r3
 8014f42:	6963      	ldr	r3, [r4, #20]
 8014f44:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8014f48:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8014f4c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8014f50:	68a1      	ldr	r1, [r4, #8]
 8014f52:	ed94 6a08 	vldr	s12, [r4, #32]
 8014f56:	6022      	str	r2, [r4, #0]
 8014f58:	3301      	adds	r3, #1
 8014f5a:	6163      	str	r3, [r4, #20]
 8014f5c:	69a3      	ldr	r3, [r4, #24]
 8014f5e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014f62:	3b01      	subs	r3, #1
 8014f64:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8014f68:	61a3      	str	r3, [r4, #24]
 8014f6a:	6923      	ldr	r3, [r4, #16]
 8014f6c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014f70:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014f74:	edd4 6a07 	vldr	s13, [r4, #28]
 8014f78:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014f7c:	440b      	add	r3, r1
 8014f7e:	68e1      	ldr	r1, [r4, #12]
 8014f80:	6123      	str	r3, [r4, #16]
 8014f82:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014f86:	428b      	cmp	r3, r1
 8014f88:	edc4 6a07 	vstr	s13, [r4, #28]
 8014f8c:	db15      	blt.n	8014fba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8014f8e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8014f92:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014f96:	3201      	adds	r2, #1
 8014f98:	edc4 6a07 	vstr	s13, [r4, #28]
 8014f9c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8014fa0:	6022      	str	r2, [r4, #0]
 8014fa2:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014fa6:	1a5b      	subs	r3, r3, r1
 8014fa8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014fac:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8014fb0:	6123      	str	r3, [r4, #16]
 8014fb2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014fb6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014fba:	e9d5 2300 	ldrd	r2, r3, [r5]
 8014fbe:	441a      	add	r2, r3
 8014fc0:	696b      	ldr	r3, [r5, #20]
 8014fc2:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8014fc6:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8014fca:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8014fce:	68a9      	ldr	r1, [r5, #8]
 8014fd0:	ed95 6a08 	vldr	s12, [r5, #32]
 8014fd4:	602a      	str	r2, [r5, #0]
 8014fd6:	3301      	adds	r3, #1
 8014fd8:	616b      	str	r3, [r5, #20]
 8014fda:	69ab      	ldr	r3, [r5, #24]
 8014fdc:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014fe0:	3b01      	subs	r3, #1
 8014fe2:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014fe6:	61ab      	str	r3, [r5, #24]
 8014fe8:	692b      	ldr	r3, [r5, #16]
 8014fea:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014fee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014ff2:	edd5 6a07 	vldr	s13, [r5, #28]
 8014ff6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014ffa:	440b      	add	r3, r1
 8014ffc:	68e9      	ldr	r1, [r5, #12]
 8014ffe:	612b      	str	r3, [r5, #16]
 8015000:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015004:	428b      	cmp	r3, r1
 8015006:	edc5 6a07 	vstr	s13, [r5, #28]
 801500a:	db15      	blt.n	8015038 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 801500c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8015010:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015014:	3201      	adds	r2, #1
 8015016:	edc5 6a07 	vstr	s13, [r5, #28]
 801501a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801501e:	602a      	str	r2, [r5, #0]
 8015020:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015024:	1a5b      	subs	r3, r3, r1
 8015026:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801502a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801502e:	612b      	str	r3, [r5, #16]
 8015030:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015034:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8015038:	3f01      	subs	r7, #1
 801503a:	e757      	b.n	8014eec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 801503c:	4299      	cmp	r1, r3
 801503e:	dc13      	bgt.n	8015068 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8015040:	429a      	cmp	r2, r3
 8015042:	da14      	bge.n	801506e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8015044:	2502      	movs	r5, #2
 8015046:	2703      	movs	r7, #3
 8015048:	46a9      	mov	r9, r5
 801504a:	f04f 0800 	mov.w	r8, #0
 801504e:	f04f 0a01 	mov.w	sl, #1
 8015052:	e6ef      	b.n	8014e34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8015054:	2501      	movs	r5, #1
 8015056:	2700      	movs	r7, #0
 8015058:	46a9      	mov	r9, r5
 801505a:	46b8      	mov	r8, r7
 801505c:	f04f 0a02 	mov.w	sl, #2
 8015060:	e6e8      	b.n	8014e34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8015062:	2501      	movs	r5, #1
 8015064:	2702      	movs	r7, #2
 8015066:	e6e1      	b.n	8014e2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8015068:	2500      	movs	r5, #0
 801506a:	2701      	movs	r7, #1
 801506c:	e7f4      	b.n	8015058 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 801506e:	2702      	movs	r7, #2
 8015070:	2503      	movs	r5, #3
 8015072:	f04f 0900 	mov.w	r9, #0
 8015076:	46b8      	mov	r8, r7
 8015078:	e7e9      	b.n	801504e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 801507a:	4613      	mov	r3, r2
 801507c:	e728      	b.n	8014ed0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 801507e:	bf00      	nop
 8015080:	20013814 	.word	0x20013814
 8015084:	fffd8f01 	.word	0xfffd8f01
 8015088:	00027100 	.word	0x00027100
 801508c:	0004e1ff 	.word	0x0004e1ff
 8015090:	0004e1fe 	.word	0x0004e1fe
 8015094:	2001381c 	.word	0x2001381c
 8015098:	4613      	mov	r3, r2
 801509a:	992b      	ldr	r1, [sp, #172]	; 0xac
 801509c:	9111      	str	r1, [sp, #68]	; 0x44
 801509e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 80150a2:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 80150a6:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 80150a8:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 80150ac:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 80150b0:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 80150b4:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 80150b8:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 80150bc:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80150c0:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 80150c4:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 80150c8:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 80150cc:	469e      	mov	lr, r3
 80150ce:	469c      	mov	ip, r3
 80150d0:	f04f 0900 	mov.w	r9, #0
 80150d4:	f1bc 0f00 	cmp.w	ip, #0
 80150d8:	d147      	bne.n	801516a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 80150da:	eb03 0c07 	add.w	ip, r3, r7
 80150de:	1ad7      	subs	r7, r2, r3
 80150e0:	f1b9 0f00 	cmp.w	r9, #0
 80150e4:	d009      	beq.n	80150fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 80150e6:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 80150ea:	9029      	str	r0, [sp, #164]	; 0xa4
 80150ec:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 80150f0:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 80150f4:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 80150f8:	912d      	str	r1, [sp, #180]	; 0xb4
 80150fa:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80150fc:	9111      	str	r1, [sp, #68]	; 0x44
 80150fe:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8015102:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8015106:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801510a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801510e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8015112:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8015116:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801511a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801511e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8015122:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8015126:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801512a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801512e:	f04f 0800 	mov.w	r8, #0
 8015132:	f1be 0f00 	cmp.w	lr, #0
 8015136:	d031      	beq.n	801519c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8015138:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801513a:	4431      	add	r1, r6
 801513c:	4549      	cmp	r1, r9
 801513e:	4450      	add	r0, sl
 8015140:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8015144:	ee37 7a04 	vadd.f32	s14, s14, s8
 8015148:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801514c:	db08      	blt.n	8015160 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801514e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8015152:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8015156:	ee37 7a06 	vadd.f32	s14, s14, s12
 801515a:	3001      	adds	r0, #1
 801515c:	eba1 0109 	sub.w	r1, r1, r9
 8015160:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015164:	f04f 0801 	mov.w	r8, #1
 8015168:	e7e3      	b.n	8015132 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801516a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801516c:	4431      	add	r1, r6
 801516e:	4541      	cmp	r1, r8
 8015170:	4450      	add	r0, sl
 8015172:	ee37 7a24 	vadd.f32	s14, s14, s9
 8015176:	ee77 7a84 	vadd.f32	s15, s15, s8
 801517a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801517e:	db08      	blt.n	8015192 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8015180:	ee76 6a85 	vadd.f32	s13, s13, s10
 8015184:	ee37 7a25 	vadd.f32	s14, s14, s11
 8015188:	ee77 7a86 	vadd.f32	s15, s15, s12
 801518c:	3001      	adds	r0, #1
 801518e:	eba1 0108 	sub.w	r1, r1, r8
 8015192:	f10c 3cff 	add.w	ip, ip, #4294967295
 8015196:	f04f 0901 	mov.w	r9, #1
 801519a:	e79b      	b.n	80150d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 801519c:	449c      	add	ip, r3
 801519e:	1aff      	subs	r7, r7, r3
 80151a0:	f1b8 0f00 	cmp.w	r8, #0
 80151a4:	d009      	beq.n	80151ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 80151a6:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80151aa:	9019      	str	r0, [sp, #100]	; 0x64
 80151ac:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80151b0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80151b4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80151b8:	911d      	str	r1, [sp, #116]	; 0x74
 80151ba:	1ad2      	subs	r2, r2, r3
 80151bc:	e68b      	b.n	8014ed6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80151be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80151c0:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 80151c2:	2b00      	cmp	r3, #0
 80151c4:	f000 80d1 	beq.w	801536a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 80151c8:	ad19      	add	r5, sp, #100	; 0x64
 80151ca:	ac39      	add	r4, sp, #228	; 0xe4
 80151cc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80151ce:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80151d2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80151d6:	930c      	str	r3, [sp, #48]	; 0x30
 80151d8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80151da:	6963      	ldr	r3, [r4, #20]
 80151dc:	440b      	add	r3, r1
 80151de:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80151e2:	4408      	add	r0, r1
 80151e4:	b200      	sxth	r0, r0
 80151e6:	4283      	cmp	r3, r0
 80151e8:	900d      	str	r0, [sp, #52]	; 0x34
 80151ea:	f280 80c1 	bge.w	8015370 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 80151ee:	428b      	cmp	r3, r1
 80151f0:	da08      	bge.n	8015204 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80151f2:	2a00      	cmp	r2, #0
 80151f4:	dd06      	ble.n	8015204 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80151f6:	1acb      	subs	r3, r1, r3
 80151f8:	429a      	cmp	r2, r3
 80151fa:	f2c0 80bb 	blt.w	8015374 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 80151fe:	2b00      	cmp	r3, #0
 8015200:	f300 80b9 	bgt.w	8015376 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8015204:	6967      	ldr	r7, [r4, #20]
 8015206:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015208:	443b      	add	r3, r7
 801520a:	461f      	mov	r7, r3
 801520c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801520e:	1bdf      	subs	r7, r3, r7
 8015210:	4297      	cmp	r7, r2
 8015212:	bfa8      	it	ge
 8015214:	4617      	movge	r7, r2
 8015216:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801521a:	2f00      	cmp	r7, #0
 801521c:	f340 813c 	ble.w	8015498 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8015220:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015222:	6829      	ldr	r1, [r5, #0]
 8015224:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015228:	f9bb 3000 	ldrsh.w	r3, [fp]
 801522c:	6820      	ldr	r0, [r4, #0]
 801522e:	4411      	add	r1, r2
 8015230:	4299      	cmp	r1, r3
 8015232:	dd1a      	ble.n	801526a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8015234:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8015238:	440b      	add	r3, r1
 801523a:	4402      	add	r2, r0
 801523c:	b21b      	sxth	r3, r3
 801523e:	429a      	cmp	r2, r3
 8015240:	dc13      	bgt.n	801526a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8015242:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015244:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015246:	681b      	ldr	r3, [r3, #0]
 8015248:	9206      	str	r2, [sp, #24]
 801524a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801524c:	9205      	str	r2, [sp, #20]
 801524e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015250:	9500      	str	r5, [sp, #0]
 8015252:	e9cd b203 	strd	fp, r2, [sp, #12]
 8015256:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8015258:	9809      	ldr	r0, [sp, #36]	; 0x24
 801525a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801525e:	a912      	add	r1, sp, #72	; 0x48
 8015260:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8015264:	aa49      	add	r2, sp, #292	; 0x124
 8015266:	4623      	mov	r3, r4
 8015268:	47c8      	blx	r9
 801526a:	e9d4 2300 	ldrd	r2, r3, [r4]
 801526e:	441a      	add	r2, r3
 8015270:	6963      	ldr	r3, [r4, #20]
 8015272:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8015276:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801527a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801527e:	68a1      	ldr	r1, [r4, #8]
 8015280:	ed94 6a08 	vldr	s12, [r4, #32]
 8015284:	6022      	str	r2, [r4, #0]
 8015286:	3301      	adds	r3, #1
 8015288:	6163      	str	r3, [r4, #20]
 801528a:	69a3      	ldr	r3, [r4, #24]
 801528c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015290:	3b01      	subs	r3, #1
 8015292:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8015296:	61a3      	str	r3, [r4, #24]
 8015298:	6923      	ldr	r3, [r4, #16]
 801529a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801529e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80152a2:	edd4 6a07 	vldr	s13, [r4, #28]
 80152a6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80152aa:	440b      	add	r3, r1
 80152ac:	68e1      	ldr	r1, [r4, #12]
 80152ae:	6123      	str	r3, [r4, #16]
 80152b0:	ee76 6a86 	vadd.f32	s13, s13, s12
 80152b4:	428b      	cmp	r3, r1
 80152b6:	edc4 6a07 	vstr	s13, [r4, #28]
 80152ba:	db15      	blt.n	80152e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 80152bc:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80152c0:	ee76 6a26 	vadd.f32	s13, s12, s13
 80152c4:	3201      	adds	r2, #1
 80152c6:	edc4 6a07 	vstr	s13, [r4, #28]
 80152ca:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80152ce:	6022      	str	r2, [r4, #0]
 80152d0:	ee36 7a87 	vadd.f32	s14, s13, s14
 80152d4:	1a5b      	subs	r3, r3, r1
 80152d6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80152da:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80152de:	6123      	str	r3, [r4, #16]
 80152e0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80152e4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80152e8:	e9d5 2300 	ldrd	r2, r3, [r5]
 80152ec:	441a      	add	r2, r3
 80152ee:	696b      	ldr	r3, [r5, #20]
 80152f0:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80152f4:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80152f8:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80152fc:	68a9      	ldr	r1, [r5, #8]
 80152fe:	ed95 6a08 	vldr	s12, [r5, #32]
 8015302:	602a      	str	r2, [r5, #0]
 8015304:	3301      	adds	r3, #1
 8015306:	616b      	str	r3, [r5, #20]
 8015308:	69ab      	ldr	r3, [r5, #24]
 801530a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801530e:	3b01      	subs	r3, #1
 8015310:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8015314:	61ab      	str	r3, [r5, #24]
 8015316:	692b      	ldr	r3, [r5, #16]
 8015318:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801531c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015320:	edd5 6a07 	vldr	s13, [r5, #28]
 8015324:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8015328:	440b      	add	r3, r1
 801532a:	68e9      	ldr	r1, [r5, #12]
 801532c:	612b      	str	r3, [r5, #16]
 801532e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015332:	428b      	cmp	r3, r1
 8015334:	edc5 6a07 	vstr	s13, [r5, #28]
 8015338:	db15      	blt.n	8015366 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801533a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801533e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015342:	3201      	adds	r2, #1
 8015344:	edc5 6a07 	vstr	s13, [r5, #28]
 8015348:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801534c:	602a      	str	r2, [r5, #0]
 801534e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015352:	1a5b      	subs	r3, r3, r1
 8015354:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8015358:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801535c:	612b      	str	r3, [r5, #16]
 801535e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015362:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8015366:	3f01      	subs	r7, #1
 8015368:	e757      	b.n	801521a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801536a:	ad39      	add	r5, sp, #228	; 0xe4
 801536c:	ac19      	add	r4, sp, #100	; 0x64
 801536e:	e72d      	b.n	80151cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8015370:	4613      	mov	r3, r2
 8015372:	e744      	b.n	80151fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8015374:	4613      	mov	r3, r2
 8015376:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 801537a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 801537c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8015380:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8015384:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8015388:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 801538c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8015390:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8015394:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8015398:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801539a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 801539e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 80153a2:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 80153a6:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 80153aa:	960e      	str	r6, [sp, #56]	; 0x38
 80153ac:	469e      	mov	lr, r3
 80153ae:	461f      	mov	r7, r3
 80153b0:	f04f 0900 	mov.w	r9, #0
 80153b4:	2f00      	cmp	r7, #0
 80153b6:	d146      	bne.n	8015446 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 80153b8:	449c      	add	ip, r3
 80153ba:	1ad7      	subs	r7, r2, r3
 80153bc:	f1b9 0f00 	cmp.w	r9, #0
 80153c0:	d009      	beq.n	80153d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 80153c2:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 80153c6:	9039      	str	r0, [sp, #228]	; 0xe4
 80153c8:	913d      	str	r1, [sp, #244]	; 0xf4
 80153ca:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 80153ce:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 80153d2:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 80153d6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80153d8:	910e      	str	r1, [sp, #56]	; 0x38
 80153da:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80153de:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80153e2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80153e6:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80153ea:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80153ee:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80153f2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80153f6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80153fa:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80153fe:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8015402:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8015406:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801540a:	f04f 0800 	mov.w	r8, #0
 801540e:	f1be 0f00 	cmp.w	lr, #0
 8015412:	d030      	beq.n	8015476 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8015414:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8015416:	4431      	add	r1, r6
 8015418:	4549      	cmp	r1, r9
 801541a:	4450      	add	r0, sl
 801541c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8015420:	ee37 7a04 	vadd.f32	s14, s14, s8
 8015424:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8015428:	db08      	blt.n	801543c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801542a:	ee77 7a85 	vadd.f32	s15, s15, s10
 801542e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8015432:	ee37 7a06 	vadd.f32	s14, s14, s12
 8015436:	3001      	adds	r0, #1
 8015438:	eba1 0109 	sub.w	r1, r1, r9
 801543c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015440:	f04f 0801 	mov.w	r8, #1
 8015444:	e7e3      	b.n	801540e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8015446:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8015448:	4431      	add	r1, r6
 801544a:	4541      	cmp	r1, r8
 801544c:	4450      	add	r0, sl
 801544e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8015452:	ee77 7a84 	vadd.f32	s15, s15, s8
 8015456:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801545a:	db08      	blt.n	801546e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 801545c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8015460:	ee37 7a25 	vadd.f32	s14, s14, s11
 8015464:	ee77 7a86 	vadd.f32	s15, s15, s12
 8015468:	3001      	adds	r0, #1
 801546a:	eba1 0108 	sub.w	r1, r1, r8
 801546e:	3f01      	subs	r7, #1
 8015470:	f04f 0901 	mov.w	r9, #1
 8015474:	e79e      	b.n	80153b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8015476:	449c      	add	ip, r3
 8015478:	1aff      	subs	r7, r7, r3
 801547a:	f1b8 0f00 	cmp.w	r8, #0
 801547e:	d009      	beq.n	8015494 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8015480:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8015484:	9019      	str	r0, [sp, #100]	; 0x64
 8015486:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801548a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 801548e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8015492:	911d      	str	r1, [sp, #116]	; 0x74
 8015494:	1ad2      	subs	r2, r2, r3
 8015496:	e6b5      	b.n	8015204 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015498:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801549a:	681b      	ldr	r3, [r3, #0]
 801549c:	b923      	cbnz	r3, 80154a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801549e:	4b04      	ldr	r3, [pc, #16]	; (80154b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 80154a0:	6818      	ldr	r0, [r3, #0]
 80154a2:	6803      	ldr	r3, [r0, #0]
 80154a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80154a6:	4798      	blx	r3
 80154a8:	b05b      	add	sp, #364	; 0x16c
 80154aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80154ae:	bf00      	nop
 80154b0:	2001381c 	.word	0x2001381c

080154b4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 80154b4:	b570      	push	{r4, r5, r6, lr}
 80154b6:	4604      	mov	r4, r0
 80154b8:	f89d 601c 	ldrb.w	r6, [sp, #28]
 80154bc:	9805      	ldr	r0, [sp, #20]
 80154be:	6061      	str	r1, [r4, #4]
 80154c0:	2500      	movs	r5, #0
 80154c2:	f89d 1010 	ldrb.w	r1, [sp, #16]
 80154c6:	8263      	strh	r3, [r4, #18]
 80154c8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80154cc:	8025      	strh	r5, [r4, #0]
 80154ce:	7221      	strb	r1, [r4, #8]
 80154d0:	7266      	strb	r6, [r4, #9]
 80154d2:	60e0      	str	r0, [r4, #12]
 80154d4:	8222      	strh	r2, [r4, #16]
 80154d6:	82a3      	strh	r3, [r4, #20]
 80154d8:	82e5      	strh	r5, [r4, #22]
 80154da:	8325      	strh	r5, [r4, #24]
 80154dc:	8365      	strh	r5, [r4, #26]
 80154de:	83a5      	strh	r5, [r4, #28]
 80154e0:	83e5      	strh	r5, [r4, #30]
 80154e2:	8425      	strh	r5, [r4, #32]
 80154e4:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 80154e8:	b32e      	cbz	r6, 8015536 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80154ea:	6803      	ldr	r3, [r0, #0]
 80154ec:	695b      	ldr	r3, [r3, #20]
 80154ee:	4798      	blx	r3
 80154f0:	4606      	mov	r6, r0
 80154f2:	b300      	cbz	r0, 8015536 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80154f4:	68e0      	ldr	r0, [r4, #12]
 80154f6:	6803      	ldr	r3, [r0, #0]
 80154f8:	4631      	mov	r1, r6
 80154fa:	68db      	ldr	r3, [r3, #12]
 80154fc:	4798      	blx	r3
 80154fe:	4605      	mov	r5, r0
 8015500:	b1c8      	cbz	r0, 8015536 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015502:	7b43      	ldrb	r3, [r0, #13]
 8015504:	7a82      	ldrb	r2, [r0, #10]
 8015506:	005b      	lsls	r3, r3, #1
 8015508:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801550c:	4313      	orrs	r3, r2
 801550e:	8423      	strh	r3, [r4, #32]
 8015510:	7a63      	ldrb	r3, [r4, #9]
 8015512:	2b06      	cmp	r3, #6
 8015514:	d10f      	bne.n	8015536 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015516:	68e0      	ldr	r0, [r4, #12]
 8015518:	6803      	ldr	r3, [r0, #0]
 801551a:	462a      	mov	r2, r5
 801551c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801551e:	4631      	mov	r1, r6
 8015520:	4798      	blx	r3
 8015522:	7b6b      	ldrb	r3, [r5, #13]
 8015524:	005b      	lsls	r3, r3, #1
 8015526:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801552a:	7aab      	ldrb	r3, [r5, #10]
 801552c:	4313      	orrs	r3, r2
 801552e:	4418      	add	r0, r3
 8015530:	8c23      	ldrh	r3, [r4, #32]
 8015532:	4418      	add	r0, r3
 8015534:	8420      	strh	r0, [r4, #32]
 8015536:	4620      	mov	r0, r4
 8015538:	bd70      	pop	{r4, r5, r6, pc}

0801553a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 801553a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801553e:	2400      	movs	r4, #0
 8015540:	b085      	sub	sp, #20
 8015542:	4681      	mov	r9, r0
 8015544:	4688      	mov	r8, r1
 8015546:	4692      	mov	sl, r2
 8015548:	469b      	mov	fp, r3
 801554a:	4627      	mov	r7, r4
 801554c:	4625      	mov	r5, r4
 801554e:	4626      	mov	r6, r4
 8015550:	4554      	cmp	r4, sl
 8015552:	da2a      	bge.n	80155aa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8015554:	2300      	movs	r3, #0
 8015556:	9303      	str	r3, [sp, #12]
 8015558:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801555c:	429d      	cmp	r5, r3
 801555e:	d004      	beq.n	801556a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8015560:	f242 030b 	movw	r3, #8203	; 0x200b
 8015564:	429d      	cmp	r5, r3
 8015566:	bf18      	it	ne
 8015568:	462f      	movne	r7, r5
 801556a:	ab03      	add	r3, sp, #12
 801556c:	4642      	mov	r2, r8
 801556e:	4659      	mov	r1, fp
 8015570:	4648      	mov	r0, r9
 8015572:	f003 f9a3 	bl	80188bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015576:	4605      	mov	r5, r0
 8015578:	b1b8      	cbz	r0, 80155aa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801557a:	280a      	cmp	r0, #10
 801557c:	d015      	beq.n	80155aa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801557e:	9a03      	ldr	r2, [sp, #12]
 8015580:	b18a      	cbz	r2, 80155a6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8015582:	7b50      	ldrb	r0, [r2, #13]
 8015584:	7a93      	ldrb	r3, [r2, #10]
 8015586:	8895      	ldrh	r5, [r2, #4]
 8015588:	0040      	lsls	r0, r0, #1
 801558a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801558e:	4303      	orrs	r3, r0
 8015590:	9301      	str	r3, [sp, #4]
 8015592:	f8d8 3000 	ldr.w	r3, [r8]
 8015596:	4639      	mov	r1, r7
 8015598:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801559a:	4640      	mov	r0, r8
 801559c:	4798      	blx	r3
 801559e:	9b01      	ldr	r3, [sp, #4]
 80155a0:	4418      	add	r0, r3
 80155a2:	4406      	add	r6, r0
 80155a4:	b2b6      	uxth	r6, r6
 80155a6:	3401      	adds	r4, #1
 80155a8:	e7d2      	b.n	8015550 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 80155aa:	4630      	mov	r0, r6
 80155ac:	b005      	add	sp, #20
 80155ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080155b2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 80155b2:	2a02      	cmp	r2, #2
 80155b4:	b530      	push	{r4, r5, lr}
 80155b6:	d011      	beq.n	80155dc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 80155b8:	2a03      	cmp	r2, #3
 80155ba:	d01c      	beq.n	80155f6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 80155bc:	2a01      	cmp	r2, #1
 80155be:	d10c      	bne.n	80155da <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80155c0:	888b      	ldrh	r3, [r1, #4]
 80155c2:	8801      	ldrh	r1, [r0, #0]
 80155c4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 80155c8:	8844      	ldrh	r4, [r0, #2]
 80155ca:	8004      	strh	r4, [r0, #0]
 80155cc:	1a5b      	subs	r3, r3, r1
 80155ce:	1a9b      	subs	r3, r3, r2
 80155d0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80155d4:	8043      	strh	r3, [r0, #2]
 80155d6:	8081      	strh	r1, [r0, #4]
 80155d8:	80c2      	strh	r2, [r0, #6]
 80155da:	bd30      	pop	{r4, r5, pc}
 80155dc:	88cb      	ldrh	r3, [r1, #6]
 80155de:	8842      	ldrh	r2, [r0, #2]
 80155e0:	1a9b      	subs	r3, r3, r2
 80155e2:	88c2      	ldrh	r2, [r0, #6]
 80155e4:	1a9b      	subs	r3, r3, r2
 80155e6:	888a      	ldrh	r2, [r1, #4]
 80155e8:	8801      	ldrh	r1, [r0, #0]
 80155ea:	8043      	strh	r3, [r0, #2]
 80155ec:	1a52      	subs	r2, r2, r1
 80155ee:	8881      	ldrh	r1, [r0, #4]
 80155f0:	1a52      	subs	r2, r2, r1
 80155f2:	8002      	strh	r2, [r0, #0]
 80155f4:	e7f1      	b.n	80155da <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80155f6:	88cb      	ldrh	r3, [r1, #6]
 80155f8:	8841      	ldrh	r1, [r0, #2]
 80155fa:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80155fe:	f9b0 5000 	ldrsh.w	r5, [r0]
 8015602:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8015606:	8045      	strh	r5, [r0, #2]
 8015608:	1a5b      	subs	r3, r3, r1
 801560a:	1a9b      	subs	r3, r3, r2
 801560c:	8003      	strh	r3, [r0, #0]
 801560e:	8082      	strh	r2, [r0, #4]
 8015610:	80c4      	strh	r4, [r0, #6]
 8015612:	e7e2      	b.n	80155da <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08015614 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8015614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015618:	b09f      	sub	sp, #124	; 0x7c
 801561a:	9116      	str	r1, [sp, #88]	; 0x58
 801561c:	9317      	str	r3, [sp, #92]	; 0x5c
 801561e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015620:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015622:	8809      	ldrh	r1, [r1, #0]
 8015624:	889b      	ldrh	r3, [r3, #4]
 8015626:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 801562a:	9212      	str	r2, [sp, #72]	; 0x48
 801562c:	440b      	add	r3, r1
 801562e:	b21b      	sxth	r3, r3
 8015630:	9310      	str	r3, [sp, #64]	; 0x40
 8015632:	f8d8 3000 	ldr.w	r3, [r8]
 8015636:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 801563a:	7b19      	ldrb	r1, [r3, #12]
 801563c:	7adb      	ldrb	r3, [r3, #11]
 801563e:	9011      	str	r0, [sp, #68]	; 0x44
 8015640:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8015644:	9114      	str	r1, [sp, #80]	; 0x50
 8015646:	9315      	str	r3, [sp, #84]	; 0x54
 8015648:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 801564c:	2a00      	cmp	r2, #0
 801564e:	d06a      	beq.n	8015726 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8015650:	f898 3010 	ldrb.w	r3, [r8, #16]
 8015654:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015656:	2b06      	cmp	r3, #6
 8015658:	bf14      	ite	ne
 801565a:	2301      	movne	r3, #1
 801565c:	2302      	moveq	r3, #2
 801565e:	4413      	add	r3, r2
 8015660:	f04f 0900 	mov.w	r9, #0
 8015664:	930f      	str	r3, [sp, #60]	; 0x3c
 8015666:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 801566a:	464c      	mov	r4, r9
 801566c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8015670:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8015674:	4293      	cmp	r3, r2
 8015676:	f280 808f 	bge.w	8015798 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801567a:	2300      	movs	r3, #0
 801567c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8015680:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8015684:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015688:	429c      	cmp	r4, r3
 801568a:	d006      	beq.n	801569a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 801568c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801568e:	f242 020b 	movw	r2, #8203	; 0x200b
 8015692:	4294      	cmp	r4, r2
 8015694:	bf18      	it	ne
 8015696:	4623      	movne	r3, r4
 8015698:	930d      	str	r3, [sp, #52]	; 0x34
 801569a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801569c:	992d      	ldr	r1, [sp, #180]	; 0xb4
 801569e:	f8d8 2000 	ldr.w	r2, [r8]
 80156a2:	428b      	cmp	r3, r1
 80156a4:	db41      	blt.n	801572a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 80156a6:	6813      	ldr	r3, [r2, #0]
 80156a8:	4610      	mov	r0, r2
 80156aa:	695b      	ldr	r3, [r3, #20]
 80156ac:	4798      	blx	r3
 80156ae:	4604      	mov	r4, r0
 80156b0:	f8d8 0000 	ldr.w	r0, [r8]
 80156b4:	6803      	ldr	r3, [r0, #0]
 80156b6:	aa1d      	add	r2, sp, #116	; 0x74
 80156b8:	689d      	ldr	r5, [r3, #8]
 80156ba:	4621      	mov	r1, r4
 80156bc:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80156c0:	47a8      	blx	r5
 80156c2:	901c      	str	r0, [sp, #112]	; 0x70
 80156c4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80156c8:	429c      	cmp	r4, r3
 80156ca:	f000 80eb 	beq.w	80158a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80156ce:	f242 030b 	movw	r3, #8203	; 0x200b
 80156d2:	429c      	cmp	r4, r3
 80156d4:	f000 80e6 	beq.w	80158a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80156d8:	2c00      	cmp	r4, #0
 80156da:	f000 80f8 	beq.w	80158ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80156de:	2c0a      	cmp	r4, #10
 80156e0:	d060      	beq.n	80157a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80156e2:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80156e4:	b36a      	cbz	r2, 8015742 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 80156e6:	8894      	ldrh	r4, [r2, #4]
 80156e8:	f1bb 0f00 	cmp.w	fp, #0
 80156ec:	d03b      	beq.n	8015766 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 80156ee:	f892 900d 	ldrb.w	r9, [r2, #13]
 80156f2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80156f6:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80156fa:	f892 900a 	ldrb.w	r9, [r2, #10]
 80156fe:	f1bb 0f01 	cmp.w	fp, #1
 8015702:	ea49 0903 	orr.w	r9, r9, r3
 8015706:	d134      	bne.n	8015772 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8015708:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801570a:	eba6 0609 	sub.w	r6, r6, r9
 801570e:	2b00      	cmp	r3, #0
 8015710:	d14f      	bne.n	80157b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8015712:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015714:	eb09 0306 	add.w	r3, r9, r6
 8015718:	4413      	add	r3, r2
 801571a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801571c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8015720:	4293      	cmp	r3, r2
 8015722:	da51      	bge.n	80157c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8015724:	e038      	b.n	8015798 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8015726:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015728:	e79a      	b.n	8015660 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 801572a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801572e:	9301      	str	r3, [sp, #4]
 8015730:	ab1d      	add	r3, sp, #116	; 0x74
 8015732:	9300      	str	r3, [sp, #0]
 8015734:	4659      	mov	r1, fp
 8015736:	ab1c      	add	r3, sp, #112	; 0x70
 8015738:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801573a:	f003 f908 	bl	801894e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 801573e:	4604      	mov	r4, r0
 8015740:	e7c0      	b.n	80156c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8015742:	f8d8 0000 	ldr.w	r0, [r8]
 8015746:	6803      	ldr	r3, [r0, #0]
 8015748:	691b      	ldr	r3, [r3, #16]
 801574a:	4798      	blx	r3
 801574c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015750:	4298      	cmp	r0, r3
 8015752:	f000 80a7 	beq.w	80158a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015756:	f242 030b 	movw	r3, #8203	; 0x200b
 801575a:	4298      	cmp	r0, r3
 801575c:	f000 80a2 	beq.w	80158a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015760:	f1bb 0f00 	cmp.w	fp, #0
 8015764:	d100      	bne.n	8015768 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8015766:	444e      	add	r6, r9
 8015768:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801576a:	2a00      	cmp	r2, #0
 801576c:	d1bf      	bne.n	80156ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 801576e:	4691      	mov	r9, r2
 8015770:	e098      	b.n	80158a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015772:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015774:	2b00      	cmp	r3, #0
 8015776:	f000 80ac 	beq.w	80158d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 801577a:	f1bb 0f00 	cmp.w	fp, #0
 801577e:	d118      	bne.n	80157b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8015780:	f8d8 0000 	ldr.w	r0, [r8]
 8015784:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015786:	6803      	ldr	r3, [r0, #0]
 8015788:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801578a:	4798      	blx	r3
 801578c:	4406      	add	r6, r0
 801578e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015790:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015792:	1af3      	subs	r3, r6, r3
 8015794:	4293      	cmp	r3, r2
 8015796:	dd17      	ble.n	80157c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8015798:	2c00      	cmp	r4, #0
 801579a:	f000 8098 	beq.w	80158ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 801579e:	2c0a      	cmp	r4, #10
 80157a0:	f040 8086 	bne.w	80158b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 80157a4:	240a      	movs	r4, #10
 80157a6:	fab4 f084 	clz	r0, r4
 80157aa:	0940      	lsrs	r0, r0, #5
 80157ac:	b01f      	add	sp, #124	; 0x7c
 80157ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80157b2:	f8d8 0000 	ldr.w	r0, [r8]
 80157b6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80157b8:	6803      	ldr	r3, [r0, #0]
 80157ba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80157bc:	4798      	blx	r3
 80157be:	f1bb 0f01 	cmp.w	fp, #1
 80157c2:	eba6 0600 	sub.w	r6, r6, r0
 80157c6:	d0a4      	beq.n	8015712 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 80157c8:	981c      	ldr	r0, [sp, #112]	; 0x70
 80157ca:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80157cc:	f990 1009 	ldrsb.w	r1, [r0, #9]
 80157d0:	f9b3 7000 	ldrsh.w	r7, [r3]
 80157d4:	7b43      	ldrb	r3, [r0, #13]
 80157d6:	015b      	lsls	r3, r3, #5
 80157d8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80157dc:	7983      	ldrb	r3, [r0, #6]
 80157de:	4431      	add	r1, r6
 80157e0:	4313      	orrs	r3, r2
 80157e2:	440b      	add	r3, r1
 80157e4:	42bb      	cmp	r3, r7
 80157e6:	db5d      	blt.n	80158a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80157e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80157ea:	4299      	cmp	r1, r3
 80157ec:	da5a      	bge.n	80158a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80157ee:	f8d8 0000 	ldr.w	r0, [r8]
 80157f2:	6803      	ldr	r3, [r0, #0]
 80157f4:	42b7      	cmp	r7, r6
 80157f6:	bfc8      	it	gt
 80157f8:	1bbf      	subgt	r7, r7, r6
 80157fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80157fc:	bfcc      	ite	gt
 80157fe:	b2bf      	uxthgt	r7, r7
 8015800:	2700      	movle	r7, #0
 8015802:	4798      	blx	r3
 8015804:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8015806:	7b5a      	ldrb	r2, [r3, #13]
 8015808:	00d1      	lsls	r1, r2, #3
 801580a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 801580e:	7a19      	ldrb	r1, [r3, #8]
 8015810:	4329      	orrs	r1, r5
 8015812:	0655      	lsls	r5, r2, #25
 8015814:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8015816:	bf44      	itt	mi
 8015818:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 801581c:	b209      	sxthmi	r1, r1
 801581e:	1945      	adds	r5, r0, r5
 8015820:	1a6d      	subs	r5, r5, r1
 8015822:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015824:	b2ad      	uxth	r5, r5
 8015826:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801582a:	fa0f fa85 	sxth.w	sl, r5
 801582e:	4551      	cmp	r1, sl
 8015830:	dd3c      	ble.n	80158ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8015832:	0112      	lsls	r2, r2, #4
 8015834:	79d8      	ldrb	r0, [r3, #7]
 8015836:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801583a:	4302      	orrs	r2, r0
 801583c:	4492      	add	sl, r2
 801583e:	4551      	cmp	r1, sl
 8015840:	dc30      	bgt.n	80158a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015842:	1b4d      	subs	r5, r1, r5
 8015844:	b22d      	sxth	r5, r5
 8015846:	468a      	mov	sl, r1
 8015848:	9319      	str	r3, [sp, #100]	; 0x64
 801584a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801584c:	f8d8 0000 	ldr.w	r0, [r8]
 8015850:	681a      	ldr	r2, [r3, #0]
 8015852:	6801      	ldr	r1, [r0, #0]
 8015854:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8015856:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8015858:	9313      	str	r3, [sp, #76]	; 0x4c
 801585a:	9218      	str	r2, [sp, #96]	; 0x60
 801585c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 801585e:	4788      	blx	r1
 8015860:	f898 1006 	ldrb.w	r1, [r8, #6]
 8015864:	910b      	str	r1, [sp, #44]	; 0x2c
 8015866:	f898 100e 	ldrb.w	r1, [r8, #14]
 801586a:	910a      	str	r1, [sp, #40]	; 0x28
 801586c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8015870:	9109      	str	r1, [sp, #36]	; 0x24
 8015872:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8015876:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015878:	9305      	str	r3, [sp, #20]
 801587a:	b2ad      	uxth	r5, r5
 801587c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8015880:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8015884:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015886:	9304      	str	r3, [sp, #16]
 8015888:	4437      	add	r7, r6
 801588a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801588c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801588e:	9206      	str	r2, [sp, #24]
 8015890:	b23f      	sxth	r7, r7
 8015892:	f8cd a004 	str.w	sl, [sp, #4]
 8015896:	9700      	str	r7, [sp, #0]
 8015898:	681a      	ldr	r2, [r3, #0]
 801589a:	9916      	ldr	r1, [sp, #88]	; 0x58
 801589c:	685b      	ldr	r3, [r3, #4]
 801589e:	9811      	ldr	r0, [sp, #68]	; 0x44
 80158a0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80158a2:	47a8      	blx	r5
 80158a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80158a6:	3301      	adds	r3, #1
 80158a8:	930e      	str	r3, [sp, #56]	; 0x38
 80158aa:	e6e1      	b.n	8015670 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 80158ac:	2500      	movs	r5, #0
 80158ae:	e7cb      	b.n	8015848 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 80158b0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80158b2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80158b4:	3501      	adds	r5, #1
 80158b6:	429d      	cmp	r5, r3
 80158b8:	f6bf af75 	bge.w	80157a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80158bc:	4659      	mov	r1, fp
 80158be:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80158c0:	f7f2 fdf4 	bl	80084ac <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80158c4:	4604      	mov	r4, r0
 80158c6:	b110      	cbz	r0, 80158ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80158c8:	280a      	cmp	r0, #10
 80158ca:	d1f2      	bne.n	80158b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 80158cc:	e76a      	b.n	80157a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80158ce:	2400      	movs	r4, #0
 80158d0:	e769      	b.n	80157a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80158d2:	f1bb 0f00 	cmp.w	fp, #0
 80158d6:	f43f af5a 	beq.w	801578e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 80158da:	e775      	b.n	80157c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

080158dc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 80158dc:	b530      	push	{r4, r5, lr}
 80158de:	8ac4      	ldrh	r4, [r0, #22]
 80158e0:	8b45      	ldrh	r5, [r0, #26]
 80158e2:	8343      	strh	r3, [r0, #26]
 80158e4:	442c      	add	r4, r5
 80158e6:	1ae4      	subs	r4, r4, r3
 80158e8:	82c4      	strh	r4, [r0, #22]
 80158ea:	8b83      	ldrh	r3, [r0, #28]
 80158ec:	8b04      	ldrh	r4, [r0, #24]
 80158ee:	4422      	add	r2, r4
 80158f0:	440c      	add	r4, r1
 80158f2:	1a59      	subs	r1, r3, r1
 80158f4:	83c2      	strh	r2, [r0, #30]
 80158f6:	8304      	strh	r4, [r0, #24]
 80158f8:	8381      	strh	r1, [r0, #28]
 80158fa:	bd30      	pop	{r4, r5, pc}

080158fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 80158fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015900:	4604      	mov	r4, r0
 8015902:	8a47      	ldrh	r7, [r0, #18]
 8015904:	68c0      	ldr	r0, [r0, #12]
 8015906:	6803      	ldr	r3, [r0, #0]
 8015908:	b085      	sub	sp, #20
 801590a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801590c:	4798      	blx	r3
 801590e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8015912:	7a63      	ldrb	r3, [r4, #9]
 8015914:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8015918:	42b7      	cmp	r7, r6
 801591a:	f103 33ff 	add.w	r3, r3, #4294967295
 801591e:	bfac      	ite	ge
 8015920:	f04f 0900 	movge.w	r9, #0
 8015924:	f04f 0901 	movlt.w	r9, #1
 8015928:	2b05      	cmp	r3, #5
 801592a:	d804      	bhi.n	8015936 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 801592c:	e8df f003 	tbb	[pc, r3]
 8015930:	470e0854 	.word	0x470e0854
 8015934:	4c4c      	.short	0x4c4c
 8015936:	2500      	movs	r5, #0
 8015938:	46a9      	mov	r9, r5
 801593a:	462e      	mov	r6, r5
 801593c:	462f      	mov	r7, r5
 801593e:	e00d      	b.n	801595c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015940:	42b7      	cmp	r7, r6
 8015942:	bfb4      	ite	lt
 8015944:	2600      	movlt	r6, #0
 8015946:	2601      	movge	r6, #1
 8015948:	2500      	movs	r5, #0
 801594a:	e7f7      	b.n	801593c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801594c:	42b7      	cmp	r7, r6
 801594e:	464d      	mov	r5, r9
 8015950:	f04f 0900 	mov.w	r9, #0
 8015954:	bfb4      	ite	lt
 8015956:	2600      	movlt	r6, #0
 8015958:	2601      	movge	r6, #1
 801595a:	464f      	mov	r7, r9
 801595c:	f04f 0800 	mov.w	r8, #0
 8015960:	f8a4 8016 	strh.w	r8, [r4, #22]
 8015964:	f8a4 8018 	strh.w	r8, [r4, #24]
 8015968:	f8cd 8004 	str.w	r8, [sp, #4]
 801596c:	2300      	movs	r3, #0
 801596e:	9303      	str	r3, [sp, #12]
 8015970:	8823      	ldrh	r3, [r4, #0]
 8015972:	2b20      	cmp	r3, #32
 8015974:	d034      	beq.n	80159e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8015976:	f242 010b 	movw	r1, #8203	; 0x200b
 801597a:	1a5a      	subs	r2, r3, r1
 801597c:	f1d2 0a00 	rsbs	sl, r2, #0
 8015980:	eb4a 0a02 	adc.w	sl, sl, r2
 8015984:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8015988:	4293      	cmp	r3, r2
 801598a:	d009      	beq.n	80159a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 801598c:	428b      	cmp	r3, r1
 801598e:	9a01      	ldr	r2, [sp, #4]
 8015990:	bf18      	it	ne
 8015992:	461a      	movne	r2, r3
 8015994:	9201      	str	r2, [sp, #4]
 8015996:	bf0c      	ite	eq
 8015998:	f04f 0a01 	moveq.w	sl, #1
 801599c:	f04f 0a00 	movne.w	sl, #0
 80159a0:	ab03      	add	r3, sp, #12
 80159a2:	68e2      	ldr	r2, [r4, #12]
 80159a4:	7a21      	ldrb	r1, [r4, #8]
 80159a6:	6860      	ldr	r0, [r4, #4]
 80159a8:	f002 ff88 	bl	80188bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80159ac:	8020      	strh	r0, [r4, #0]
 80159ae:	b9d8      	cbnz	r0, 80159e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 80159b0:	8ba2      	ldrh	r2, [r4, #28]
 80159b2:	2300      	movs	r3, #0
 80159b4:	4611      	mov	r1, r2
 80159b6:	4620      	mov	r0, r4
 80159b8:	f7ff ff90 	bl	80158dc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80159bc:	e06e      	b.n	8015a9c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80159be:	2500      	movs	r5, #0
 80159c0:	46a9      	mov	r9, r5
 80159c2:	462e      	mov	r6, r5
 80159c4:	2701      	movs	r7, #1
 80159c6:	e7c9      	b.n	801595c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80159c8:	42b7      	cmp	r7, r6
 80159ca:	f04f 0500 	mov.w	r5, #0
 80159ce:	bfb4      	ite	lt
 80159d0:	2700      	movlt	r7, #0
 80159d2:	2701      	movge	r7, #1
 80159d4:	462e      	mov	r6, r5
 80159d6:	e7c1      	b.n	801595c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80159d8:	2500      	movs	r5, #0
 80159da:	46a9      	mov	r9, r5
 80159dc:	2601      	movs	r6, #1
 80159de:	e7ad      	b.n	801593c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80159e0:	9301      	str	r3, [sp, #4]
 80159e2:	f04f 0a01 	mov.w	sl, #1
 80159e6:	e7db      	b.n	80159a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80159e8:	8b63      	ldrh	r3, [r4, #26]
 80159ea:	280a      	cmp	r0, #10
 80159ec:	f103 0301 	add.w	r3, r3, #1
 80159f0:	8363      	strh	r3, [r4, #26]
 80159f2:	d0dd      	beq.n	80159b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 80159f4:	9a03      	ldr	r2, [sp, #12]
 80159f6:	bb62      	cbnz	r2, 8015a52 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 80159f8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80159fc:	4298      	cmp	r0, r3
 80159fe:	d003      	beq.n	8015a08 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8015a00:	f242 030b 	movw	r3, #8203	; 0x200b
 8015a04:	4298      	cmp	r0, r3
 8015a06:	d1b1      	bne.n	801596c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015a08:	8823      	ldrh	r3, [r4, #0]
 8015a0a:	8ba1      	ldrh	r1, [r4, #28]
 8015a0c:	2b20      	cmp	r3, #32
 8015a0e:	d003      	beq.n	8015a18 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8015a10:	f242 000b 	movw	r0, #8203	; 0x200b
 8015a14:	4283      	cmp	r3, r0
 8015a16:	d131      	bne.n	8015a7c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8015a18:	f1ba 0f00 	cmp.w	sl, #0
 8015a1c:	bf0a      	itet	eq
 8015a1e:	4688      	moveq	r8, r1
 8015a20:	4650      	movne	r0, sl
 8015a22:	2001      	moveq	r0, #1
 8015a24:	440a      	add	r2, r1
 8015a26:	8b23      	ldrh	r3, [r4, #24]
 8015a28:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8015a2c:	b292      	uxth	r2, r2
 8015a2e:	83a2      	strh	r2, [r4, #28]
 8015a30:	4413      	add	r3, r2
 8015a32:	f1b9 0f00 	cmp.w	r9, #0
 8015a36:	d102      	bne.n	8015a3e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8015a38:	2d00      	cmp	r5, #0
 8015a3a:	d042      	beq.n	8015ac2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8015a3c:	b300      	cbz	r0, 8015a80 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8015a3e:	8c21      	ldrh	r1, [r4, #32]
 8015a40:	4419      	add	r1, r3
 8015a42:	458c      	cmp	ip, r1
 8015a44:	da37      	bge.n	8015ab6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8015a46:	8ae1      	ldrh	r1, [r4, #22]
 8015a48:	2900      	cmp	r1, #0
 8015a4a:	d034      	beq.n	8015ab6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8015a4c:	4563      	cmp	r3, ip
 8015a4e:	dd8d      	ble.n	801596c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015a50:	e01d      	b.n	8015a8e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8015a52:	8893      	ldrh	r3, [r2, #4]
 8015a54:	8023      	strh	r3, [r4, #0]
 8015a56:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8015a5a:	9901      	ldr	r1, [sp, #4]
 8015a5c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8015a60:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8015a64:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8015a68:	ea4b 0b00 	orr.w	fp, fp, r0
 8015a6c:	68e0      	ldr	r0, [r4, #12]
 8015a6e:	6803      	ldr	r3, [r0, #0]
 8015a70:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015a72:	4798      	blx	r3
 8015a74:	eb0b 0200 	add.w	r2, fp, r0
 8015a78:	b292      	uxth	r2, r2
 8015a7a:	e7c5      	b.n	8015a08 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8015a7c:	2000      	movs	r0, #0
 8015a7e:	e7d1      	b.n	8015a24 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8015a80:	4563      	cmp	r3, ip
 8015a82:	f77f af73 	ble.w	801596c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015a86:	8ae3      	ldrh	r3, [r4, #22]
 8015a88:	2b00      	cmp	r3, #0
 8015a8a:	f43f af6f 	beq.w	801596c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015a8e:	2301      	movs	r3, #1
 8015a90:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8015a94:	8c22      	ldrh	r2, [r4, #32]
 8015a96:	8be3      	ldrh	r3, [r4, #30]
 8015a98:	4413      	add	r3, r2
 8015a9a:	83e3      	strh	r3, [r4, #30]
 8015a9c:	68e0      	ldr	r0, [r4, #12]
 8015a9e:	6803      	ldr	r3, [r0, #0]
 8015aa0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015aa2:	4798      	blx	r3
 8015aa4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8015aa8:	4418      	add	r0, r3
 8015aaa:	8a63      	ldrh	r3, [r4, #18]
 8015aac:	1a18      	subs	r0, r3, r0
 8015aae:	8260      	strh	r0, [r4, #18]
 8015ab0:	b005      	add	sp, #20
 8015ab2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ab6:	2300      	movs	r3, #0
 8015ab8:	4611      	mov	r1, r2
 8015aba:	4620      	mov	r0, r4
 8015abc:	f7ff ff0e 	bl	80158dc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8015ac0:	e754      	b.n	801596c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015ac2:	4563      	cmp	r3, ip
 8015ac4:	dd14      	ble.n	8015af0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8015ac6:	b117      	cbz	r7, 8015ace <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8015ac8:	2301      	movs	r3, #1
 8015aca:	460a      	mov	r2, r1
 8015acc:	e772      	b.n	80159b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8015ace:	2e00      	cmp	r6, #0
 8015ad0:	f43f af4c 	beq.w	801596c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015ad4:	2800      	cmp	r0, #0
 8015ad6:	f47f af49 	bne.w	801596c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015ada:	f1ba 0f00 	cmp.w	sl, #0
 8015ade:	d002      	beq.n	8015ae6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8015ae0:	2301      	movs	r3, #1
 8015ae2:	4642      	mov	r2, r8
 8015ae4:	e767      	b.n	80159b6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8015ae6:	8ae3      	ldrh	r3, [r4, #22]
 8015ae8:	2b00      	cmp	r3, #0
 8015aea:	f43f af3f 	beq.w	801596c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015aee:	e7d5      	b.n	8015a9c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8015af0:	2800      	cmp	r0, #0
 8015af2:	f47f af3b 	bne.w	801596c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015af6:	f1ba 0f00 	cmp.w	sl, #0
 8015afa:	f43f af37 	beq.w	801596c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015afe:	2301      	movs	r3, #1
 8015b00:	4642      	mov	r2, r8
 8015b02:	e7da      	b.n	8015aba <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08015b04 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8015b04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015b06:	4605      	mov	r5, r0
 8015b08:	b08f      	sub	sp, #60	; 0x3c
 8015b0a:	4617      	mov	r7, r2
 8015b0c:	461c      	mov	r4, r3
 8015b0e:	460e      	mov	r6, r1
 8015b10:	b1d1      	cbz	r1, 8015b48 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8015b12:	681b      	ldr	r3, [r3, #0]
 8015b14:	4620      	mov	r0, r4
 8015b16:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015b18:	4798      	blx	r3
 8015b1a:	4240      	negs	r0, r0
 8015b1c:	b200      	sxth	r0, r0
 8015b1e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8015b22:	9603      	str	r6, [sp, #12]
 8015b24:	9700      	str	r7, [sp, #0]
 8015b26:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015b2a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8015b2e:	4629      	mov	r1, r5
 8015b30:	a805      	add	r0, sp, #20
 8015b32:	f7ff fcbf 	bl	80154b4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8015b36:	2401      	movs	r4, #1
 8015b38:	a805      	add	r0, sp, #20
 8015b3a:	f7ff fedf 	bl	80158fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015b3e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8015b42:	b163      	cbz	r3, 8015b5e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8015b44:	3401      	adds	r4, #1
 8015b46:	e7f7      	b.n	8015b38 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8015b48:	f002 ff86 	bl	8018a58 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015b4c:	2401      	movs	r4, #1
 8015b4e:	280a      	cmp	r0, #10
 8015b50:	4628      	mov	r0, r5
 8015b52:	bf08      	it	eq
 8015b54:	3401      	addeq	r4, #1
 8015b56:	f002 ff7f 	bl	8018a58 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015b5a:	2800      	cmp	r0, #0
 8015b5c:	d1f7      	bne.n	8015b4e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8015b5e:	b2a0      	uxth	r0, r4
 8015b60:	b00f      	add	sp, #60	; 0x3c
 8015b62:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015b64 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8015b64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b68:	b0e3      	sub	sp, #396	; 0x18c
 8015b6a:	461c      	mov	r4, r3
 8015b6c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8015b6e:	4683      	mov	fp, r0
 8015b70:	4688      	mov	r8, r1
 8015b72:	2b00      	cmp	r3, #0
 8015b74:	f000 8112 	beq.w	8015d9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015b78:	6823      	ldr	r3, [r4, #0]
 8015b7a:	2b00      	cmp	r3, #0
 8015b7c:	f000 810e 	beq.w	8015d9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015b80:	7ba3      	ldrb	r3, [r4, #14]
 8015b82:	2b00      	cmp	r3, #0
 8015b84:	f000 810a 	beq.w	8015d9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015b88:	6810      	ldr	r0, [r2, #0]
 8015b8a:	6851      	ldr	r1, [r2, #4]
 8015b8c:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8015b90:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8015b94:	ad0a      	add	r5, sp, #40	; 0x28
 8015b96:	462b      	mov	r3, r5
 8015b98:	c303      	stmia	r3!, {r0, r1}
 8015b9a:	2100      	movs	r1, #0
 8015b9c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8015ba0:	910c      	str	r1, [sp, #48]	; 0x30
 8015ba2:	79a2      	ldrb	r2, [r4, #6]
 8015ba4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015ba8:	a90c      	add	r1, sp, #48	; 0x30
 8015baa:	4628      	mov	r0, r5
 8015bac:	f7ff fd01 	bl	80155b2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8015bb0:	a90c      	add	r1, sp, #48	; 0x30
 8015bb2:	4608      	mov	r0, r1
 8015bb4:	79a2      	ldrb	r2, [r4, #6]
 8015bb6:	f7ff fcfc 	bl	80155b2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8015bba:	a817      	add	r0, sp, #92	; 0x5c
 8015bbc:	f002 fb20 	bl	8018200 <_ZN8touchgfx12TextProviderC1Ev>
 8015bc0:	6820      	ldr	r0, [r4, #0]
 8015bc2:	6803      	ldr	r3, [r0, #0]
 8015bc4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015bc6:	4798      	blx	r3
 8015bc8:	4606      	mov	r6, r0
 8015bca:	6820      	ldr	r0, [r4, #0]
 8015bcc:	6803      	ldr	r3, [r0, #0]
 8015bce:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015bd0:	4798      	blx	r3
 8015bd2:	4633      	mov	r3, r6
 8015bd4:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8015bd6:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8015bd8:	9000      	str	r0, [sp, #0]
 8015bda:	a817      	add	r0, sp, #92	; 0x5c
 8015bdc:	f002 fb6b 	bl	80182b6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015be0:	6820      	ldr	r0, [r4, #0]
 8015be2:	f894 a004 	ldrb.w	sl, [r4, #4]
 8015be6:	6803      	ldr	r3, [r0, #0]
 8015be8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015bea:	4798      	blx	r3
 8015bec:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8015bf0:	6823      	ldr	r3, [r4, #0]
 8015bf2:	4607      	mov	r7, r0
 8015bf4:	4406      	add	r6, r0
 8015bf6:	a830      	add	r0, sp, #192	; 0xc0
 8015bf8:	f893 9009 	ldrb.w	r9, [r3, #9]
 8015bfc:	f002 fb00 	bl	8018200 <_ZN8touchgfx12TextProviderC1Ev>
 8015c00:	7c23      	ldrb	r3, [r4, #16]
 8015c02:	b17b      	cbz	r3, 8015c24 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8015c04:	6820      	ldr	r0, [r4, #0]
 8015c06:	6803      	ldr	r3, [r0, #0]
 8015c08:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015c0a:	4798      	blx	r3
 8015c0c:	9009      	str	r0, [sp, #36]	; 0x24
 8015c0e:	6820      	ldr	r0, [r4, #0]
 8015c10:	6802      	ldr	r2, [r0, #0]
 8015c12:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8015c14:	4790      	blx	r2
 8015c16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015c18:	9000      	str	r0, [sp, #0]
 8015c1a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8015c1c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8015c1e:	a830      	add	r0, sp, #192	; 0xc0
 8015c20:	f002 fb49 	bl	80182b6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015c24:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8015c28:	7be2      	ldrb	r2, [r4, #15]
 8015c2a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8015c2e:	1a8a      	subs	r2, r1, r2
 8015c30:	7c21      	ldrb	r1, [r4, #16]
 8015c32:	9103      	str	r1, [sp, #12]
 8015c34:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8015c38:	9102      	str	r1, [sp, #8]
 8015c3a:	6821      	ldr	r1, [r4, #0]
 8015c3c:	9101      	str	r1, [sp, #4]
 8015c3e:	7961      	ldrb	r1, [r4, #5]
 8015c40:	9100      	str	r1, [sp, #0]
 8015c42:	b292      	uxth	r2, r2
 8015c44:	a930      	add	r1, sp, #192	; 0xc0
 8015c46:	a80e      	add	r0, sp, #56	; 0x38
 8015c48:	f7ff fc34 	bl	80154b4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8015c4c:	2e00      	cmp	r6, #0
 8015c4e:	dc5b      	bgt.n	8015d08 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8015c50:	af17      	add	r7, sp, #92	; 0x5c
 8015c52:	f04f 0900 	mov.w	r9, #0
 8015c56:	7c23      	ldrb	r3, [r4, #16]
 8015c58:	2b00      	cmp	r3, #0
 8015c5a:	f000 80b1 	beq.w	8015dc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8015c5e:	a80e      	add	r0, sp, #56	; 0x38
 8015c60:	f7ff fe4c 	bl	80158fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015c64:	f1ba 0f00 	cmp.w	sl, #0
 8015c68:	f000 80a5 	beq.w	8015db6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8015c6c:	7c23      	ldrb	r3, [r4, #16]
 8015c6e:	9309      	str	r3, [sp, #36]	; 0x24
 8015c70:	2264      	movs	r2, #100	; 0x64
 8015c72:	4639      	mov	r1, r7
 8015c74:	a849      	add	r0, sp, #292	; 0x124
 8015c76:	f015 fde6 	bl	802b846 <memcpy>
 8015c7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015c7c:	2b00      	cmp	r3, #0
 8015c7e:	f000 80a7 	beq.w	8015dd0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8015c82:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8015c86:	7922      	ldrb	r2, [r4, #4]
 8015c88:	2a01      	cmp	r2, #1
 8015c8a:	f040 808a 	bne.w	8015da2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8015c8e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8015c92:	1ac0      	subs	r0, r0, r3
 8015c94:	2302      	movs	r3, #2
 8015c96:	fb90 f0f3 	sdiv	r0, r0, r3
 8015c9a:	b200      	sxth	r0, r0
 8015c9c:	7c23      	ldrb	r3, [r4, #16]
 8015c9e:	2b00      	cmp	r3, #0
 8015ca0:	f000 808b 	beq.w	8015dba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8015ca4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8015ca8:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 8015cac:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015cb0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8015cb4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8015cb8:	4410      	add	r0, r2
 8015cba:	b200      	sxth	r0, r0
 8015cbc:	9000      	str	r0, [sp, #0]
 8015cbe:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8015cc2:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8015cc6:	4642      	mov	r2, r8
 8015cc8:	2100      	movs	r1, #0
 8015cca:	4658      	mov	r0, fp
 8015ccc:	f7ff fca2 	bl	8015614 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8015cd0:	2800      	cmp	r0, #0
 8015cd2:	d163      	bne.n	8015d9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015cd4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8015cd8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8015cdc:	b2b2      	uxth	r2, r6
 8015cde:	4413      	add	r3, r2
 8015ce0:	1a8a      	subs	r2, r1, r2
 8015ce2:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8015ce6:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 8015cea:	b21b      	sxth	r3, r3
 8015cec:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8015cf0:	2a00      	cmp	r2, #0
 8015cf2:	d153      	bne.n	8015d9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015cf4:	6822      	ldr	r2, [r4, #0]
 8015cf6:	8869      	ldrh	r1, [r5, #2]
 8015cf8:	7a12      	ldrb	r2, [r2, #8]
 8015cfa:	1a9b      	subs	r3, r3, r2
 8015cfc:	88ea      	ldrh	r2, [r5, #6]
 8015cfe:	440a      	add	r2, r1
 8015d00:	b212      	sxth	r2, r2
 8015d02:	4293      	cmp	r3, r2
 8015d04:	dda7      	ble.n	8015c56 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8015d06:	e049      	b.n	8015d9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015d08:	7c23      	ldrb	r3, [r4, #16]
 8015d0a:	444f      	add	r7, r9
 8015d0c:	b1c3      	cbz	r3, 8015d40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8015d0e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8015d12:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015d16:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015d1a:	443b      	add	r3, r7
 8015d1c:	4293      	cmp	r3, r2
 8015d1e:	da97      	bge.n	8015c50 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8015d20:	a80e      	add	r0, sp, #56	; 0x38
 8015d22:	f7ff fdeb 	bl	80158fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015d26:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 8015d2a:	3b01      	subs	r3, #1
 8015d2c:	b29b      	uxth	r3, r3
 8015d2e:	454b      	cmp	r3, r9
 8015d30:	9309      	str	r3, [sp, #36]	; 0x24
 8015d32:	d021      	beq.n	8015d78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8015d34:	7961      	ldrb	r1, [r4, #5]
 8015d36:	a817      	add	r0, sp, #92	; 0x5c
 8015d38:	f7f2 fbb8 	bl	80084ac <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8015d3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015d3e:	e7f4      	b.n	8015d2a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8015d40:	fa1f f986 	uxth.w	r9, r6
 8015d44:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015d48:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015d4c:	443b      	add	r3, r7
 8015d4e:	4293      	cmp	r3, r2
 8015d50:	f6bf af7e 	bge.w	8015c50 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8015d54:	a817      	add	r0, sp, #92	; 0x5c
 8015d56:	f002 fe7f 	bl	8018a58 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015d5a:	b1f8      	cbz	r0, 8015d9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015d5c:	280a      	cmp	r0, #10
 8015d5e:	d1f1      	bne.n	8015d44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8015d60:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8015d64:	444b      	add	r3, r9
 8015d66:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8015d6a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8015d6e:	eba3 0309 	sub.w	r3, r3, r9
 8015d72:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015d76:	e7e5      	b.n	8015d44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8015d78:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8015d7c:	b2b3      	uxth	r3, r6
 8015d7e:	441a      	add	r2, r3
 8015d80:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8015d84:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8015d88:	1ad3      	subs	r3, r2, r3
 8015d8a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015d8e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8015d92:	b11b      	cbz	r3, 8015d9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015d94:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8015d98:	2b00      	cmp	r3, #0
 8015d9a:	d0ba      	beq.n	8015d12 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8015d9c:	b063      	add	sp, #396	; 0x18c
 8015d9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015da2:	2a02      	cmp	r2, #2
 8015da4:	d105      	bne.n	8015db2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8015da6:	7be2      	ldrb	r2, [r4, #15]
 8015da8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8015dac:	1a80      	subs	r0, r0, r2
 8015dae:	1ac0      	subs	r0, r0, r3
 8015db0:	e773      	b.n	8015c9a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8015db2:	2000      	movs	r0, #0
 8015db4:	e772      	b.n	8015c9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8015db6:	7be0      	ldrb	r0, [r4, #15]
 8015db8:	e770      	b.n	8015c9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8015dba:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8015dbe:	e773      	b.n	8015ca8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8015dc0:	f1ba 0f00 	cmp.w	sl, #0
 8015dc4:	d0f7      	beq.n	8015db6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8015dc6:	2264      	movs	r2, #100	; 0x64
 8015dc8:	4639      	mov	r1, r7
 8015dca:	a849      	add	r0, sp, #292	; 0x124
 8015dcc:	f015 fd3b 	bl	802b846 <memcpy>
 8015dd0:	2300      	movs	r3, #0
 8015dd2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8015dd6:	6821      	ldr	r1, [r4, #0]
 8015dd8:	a849      	add	r0, sp, #292	; 0x124
 8015dda:	f7ff fbae 	bl	801553a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8015dde:	b203      	sxth	r3, r0
 8015de0:	e751      	b.n	8015c86 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08015de2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8015de2:	2b03      	cmp	r3, #3
 8015de4:	d818      	bhi.n	8015e18 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8015de6:	e8df f003 	tbb	[pc, r3]
 8015dea:	0602      	.short	0x0602
 8015dec:	130d      	.short	0x130d
 8015dee:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015df2:	1850      	adds	r0, r2, r1
 8015df4:	4770      	bx	lr
 8015df6:	8803      	ldrh	r3, [r0, #0]
 8015df8:	8880      	ldrh	r0, [r0, #4]
 8015dfa:	4418      	add	r0, r3
 8015dfc:	b200      	sxth	r0, r0
 8015dfe:	1a80      	subs	r0, r0, r2
 8015e00:	3801      	subs	r0, #1
 8015e02:	4770      	bx	lr
 8015e04:	8803      	ldrh	r3, [r0, #0]
 8015e06:	8880      	ldrh	r0, [r0, #4]
 8015e08:	4418      	add	r0, r3
 8015e0a:	b200      	sxth	r0, r0
 8015e0c:	1a40      	subs	r0, r0, r1
 8015e0e:	e7f7      	b.n	8015e00 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8015e10:	f9b0 0000 	ldrsh.w	r0, [r0]
 8015e14:	4410      	add	r0, r2
 8015e16:	4770      	bx	lr
 8015e18:	2000      	movs	r0, #0
 8015e1a:	4770      	bx	lr

08015e1c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8015e1c:	2b03      	cmp	r3, #3
 8015e1e:	d817      	bhi.n	8015e50 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8015e20:	e8df f003 	tbb	[pc, r3]
 8015e24:	10090602 	.word	0x10090602
 8015e28:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8015e2c:	1850      	adds	r0, r2, r1
 8015e2e:	4770      	bx	lr
 8015e30:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8015e34:	e7fa      	b.n	8015e2c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8015e36:	8843      	ldrh	r3, [r0, #2]
 8015e38:	88c0      	ldrh	r0, [r0, #6]
 8015e3a:	4418      	add	r0, r3
 8015e3c:	b200      	sxth	r0, r0
 8015e3e:	1a80      	subs	r0, r0, r2
 8015e40:	3801      	subs	r0, #1
 8015e42:	4770      	bx	lr
 8015e44:	8843      	ldrh	r3, [r0, #2]
 8015e46:	88c0      	ldrh	r0, [r0, #6]
 8015e48:	4418      	add	r0, r3
 8015e4a:	b200      	sxth	r0, r0
 8015e4c:	1a40      	subs	r0, r0, r1
 8015e4e:	e7f7      	b.n	8015e40 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8015e50:	2000      	movs	r0, #0
 8015e52:	4770      	bx	lr

08015e54 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8015e54:	4b01      	ldr	r3, [pc, #4]	; (8015e5c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8015e56:	2200      	movs	r2, #0
 8015e58:	601a      	str	r2, [r3, #0]
 8015e5a:	4770      	bx	lr
 8015e5c:	2001382c 	.word	0x2001382c

08015e60 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8015e60:	4603      	mov	r3, r0
 8015e62:	b1c8      	cbz	r0, 8015e98 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8015e64:	0c02      	lsrs	r2, r0, #16
 8015e66:	0412      	lsls	r2, r2, #16
 8015e68:	b9a2      	cbnz	r2, 8015e94 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8015e6a:	0403      	lsls	r3, r0, #16
 8015e6c:	2010      	movs	r0, #16
 8015e6e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8015e72:	bf04      	itt	eq
 8015e74:	021b      	lsleq	r3, r3, #8
 8015e76:	3008      	addeq	r0, #8
 8015e78:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8015e7c:	bf04      	itt	eq
 8015e7e:	011b      	lsleq	r3, r3, #4
 8015e80:	3004      	addeq	r0, #4
 8015e82:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8015e86:	bf04      	itt	eq
 8015e88:	009b      	lsleq	r3, r3, #2
 8015e8a:	3002      	addeq	r0, #2
 8015e8c:	2b00      	cmp	r3, #0
 8015e8e:	db04      	blt.n	8015e9a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8015e90:	3001      	adds	r0, #1
 8015e92:	4770      	bx	lr
 8015e94:	2000      	movs	r0, #0
 8015e96:	e7ea      	b.n	8015e6e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8015e98:	2020      	movs	r0, #32
 8015e9a:	4770      	bx	lr

08015e9c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8015e9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ea0:	b087      	sub	sp, #28
 8015ea2:	460d      	mov	r5, r1
 8015ea4:	4616      	mov	r6, r2
 8015ea6:	4698      	mov	r8, r3
 8015ea8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8015eac:	4601      	mov	r1, r0
 8015eae:	b120      	cbz	r0, 8015eba <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8015eb0:	b11a      	cbz	r2, 8015eba <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8015eb2:	2d1f      	cmp	r5, #31
 8015eb4:	d801      	bhi.n	8015eba <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8015eb6:	2b1f      	cmp	r3, #31
 8015eb8:	d904      	bls.n	8015ec4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8015eba:	2000      	movs	r0, #0
 8015ebc:	6038      	str	r0, [r7, #0]
 8015ebe:	b007      	add	sp, #28
 8015ec0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ec4:	b97d      	cbnz	r5, 8015ee6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8015ec6:	b143      	cbz	r3, 8015eda <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8015ec8:	4602      	mov	r2, r0
 8015eca:	e9cd 4700 	strd	r4, r7, [sp]
 8015ece:	462b      	mov	r3, r5
 8015ed0:	4641      	mov	r1, r8
 8015ed2:	4630      	mov	r0, r6
 8015ed4:	f7ff ffe2 	bl	8015e9c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015ed8:	e7f1      	b.n	8015ebe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8015eda:	f04f 33ff 	mov.w	r3, #4294967295
 8015ede:	603b      	str	r3, [r7, #0]
 8015ee0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8015ee4:	e7eb      	b.n	8015ebe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8015ee6:	fa32 fa05 	lsrs.w	sl, r2, r5
 8015eea:	d106      	bne.n	8015efa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8015eec:	4346      	muls	r6, r0
 8015eee:	fbb6 f0f4 	udiv	r0, r6, r4
 8015ef2:	fb04 6610 	mls	r6, r4, r0, r6
 8015ef6:	603e      	str	r6, [r7, #0]
 8015ef8:	e7e1      	b.n	8015ebe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8015efa:	2201      	movs	r2, #1
 8015efc:	40aa      	lsls	r2, r5
 8015efe:	3a01      	subs	r2, #1
 8015f00:	4016      	ands	r6, r2
 8015f02:	fa00 fb05 	lsl.w	fp, r0, r5
 8015f06:	4630      	mov	r0, r6
 8015f08:	fbbb f9f4 	udiv	r9, fp, r4
 8015f0c:	fb0a f309 	mul.w	r3, sl, r9
 8015f10:	9303      	str	r3, [sp, #12]
 8015f12:	f7ff ffa5 	bl	8015e60 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015f16:	462b      	mov	r3, r5
 8015f18:	460a      	mov	r2, r1
 8015f1a:	e9cd 4700 	strd	r4, r7, [sp]
 8015f1e:	4601      	mov	r1, r0
 8015f20:	4630      	mov	r0, r6
 8015f22:	f7ff ffbb 	bl	8015e9c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015f26:	fb04 b919 	mls	r9, r4, r9, fp
 8015f2a:	4606      	mov	r6, r0
 8015f2c:	4648      	mov	r0, r9
 8015f2e:	eb05 0108 	add.w	r1, r5, r8
 8015f32:	f7ff ff95 	bl	8015e60 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015f36:	ab05      	add	r3, sp, #20
 8015f38:	e9cd 4300 	strd	r4, r3, [sp]
 8015f3c:	464a      	mov	r2, r9
 8015f3e:	4603      	mov	r3, r0
 8015f40:	4650      	mov	r0, sl
 8015f42:	f7ff ffab 	bl	8015e9c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015f46:	6839      	ldr	r1, [r7, #0]
 8015f48:	9a05      	ldr	r2, [sp, #20]
 8015f4a:	9b03      	ldr	r3, [sp, #12]
 8015f4c:	4411      	add	r1, r2
 8015f4e:	fbb1 f2f4 	udiv	r2, r1, r4
 8015f52:	18d3      	adds	r3, r2, r3
 8015f54:	441e      	add	r6, r3
 8015f56:	fb04 1412 	mls	r4, r4, r2, r1
 8015f5a:	4430      	add	r0, r6
 8015f5c:	603c      	str	r4, [r7, #0]
 8015f5e:	e7ae      	b.n	8015ebe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08015f60 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8015f60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015f64:	b085      	sub	sp, #20
 8015f66:	f1b0 0900 	subs.w	r9, r0, #0
 8015f6a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8015f6c:	461d      	mov	r5, r3
 8015f6e:	bfbf      	itttt	lt
 8015f70:	6823      	ldrlt	r3, [r4, #0]
 8015f72:	425b      	neglt	r3, r3
 8015f74:	f1c9 0900 	rsblt	r9, r9, #0
 8015f78:	6023      	strlt	r3, [r4, #0]
 8015f7a:	bfb4      	ite	lt
 8015f7c:	f04f 36ff 	movlt.w	r6, #4294967295
 8015f80:	2601      	movge	r6, #1
 8015f82:	2a00      	cmp	r2, #0
 8015f84:	4617      	mov	r7, r2
 8015f86:	da04      	bge.n	8015f92 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8015f88:	6823      	ldr	r3, [r4, #0]
 8015f8a:	425b      	negs	r3, r3
 8015f8c:	4257      	negs	r7, r2
 8015f8e:	4276      	negs	r6, r6
 8015f90:	6023      	str	r3, [r4, #0]
 8015f92:	2d00      	cmp	r5, #0
 8015f94:	4638      	mov	r0, r7
 8015f96:	bfba      	itte	lt
 8015f98:	426d      	neglt	r5, r5
 8015f9a:	f04f 38ff 	movlt.w	r8, #4294967295
 8015f9e:	f04f 0801 	movge.w	r8, #1
 8015fa2:	f7ff ff5d 	bl	8015e60 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015fa6:	ab03      	add	r3, sp, #12
 8015fa8:	e9cd 5300 	strd	r5, r3, [sp]
 8015fac:	463a      	mov	r2, r7
 8015fae:	4603      	mov	r3, r0
 8015fb0:	4648      	mov	r0, r9
 8015fb2:	f7ff ff73 	bl	8015e9c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015fb6:	6823      	ldr	r3, [r4, #0]
 8015fb8:	9a03      	ldr	r2, [sp, #12]
 8015fba:	4546      	cmp	r6, r8
 8015fbc:	441a      	add	r2, r3
 8015fbe:	fb92 f3f5 	sdiv	r3, r2, r5
 8015fc2:	4418      	add	r0, r3
 8015fc4:	bf18      	it	ne
 8015fc6:	4240      	negne	r0, r0
 8015fc8:	fb05 2313 	mls	r3, r5, r3, r2
 8015fcc:	1c72      	adds	r2, r6, #1
 8015fce:	6023      	str	r3, [r4, #0]
 8015fd0:	d105      	bne.n	8015fde <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8015fd2:	2b00      	cmp	r3, #0
 8015fd4:	f1c3 0200 	rsb	r2, r3, #0
 8015fd8:	db0b      	blt.n	8015ff2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8015fda:	6022      	str	r2, [r4, #0]
 8015fdc:	e006      	b.n	8015fec <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015fde:	2e01      	cmp	r6, #1
 8015fe0:	d104      	bne.n	8015fec <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015fe2:	2b00      	cmp	r3, #0
 8015fe4:	da02      	bge.n	8015fec <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015fe6:	442b      	add	r3, r5
 8015fe8:	3801      	subs	r0, #1
 8015fea:	6023      	str	r3, [r4, #0]
 8015fec:	b005      	add	sp, #20
 8015fee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015ff2:	3801      	subs	r0, #1
 8015ff4:	1b52      	subs	r2, r2, r5
 8015ff6:	e7f0      	b.n	8015fda <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08015ff8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8015ff8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8015ffc:	4c1c      	ldr	r4, [pc, #112]	; (8016070 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8015ffe:	6807      	ldr	r7, [r0, #0]
 8016000:	69a3      	ldr	r3, [r4, #24]
 8016002:	4605      	mov	r5, r0
 8016004:	b92b      	cbnz	r3, 8016012 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8016006:	6840      	ldr	r0, [r0, #4]
 8016008:	e9c5 7000 	strd	r7, r0, [r5]
 801600c:	b004      	add	sp, #16
 801600e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016012:	68a2      	ldr	r2, [r4, #8]
 8016014:	6820      	ldr	r0, [r4, #0]
 8016016:	ae04      	add	r6, sp, #16
 8016018:	f04f 0802 	mov.w	r8, #2
 801601c:	fb93 f1f8 	sdiv	r1, r3, r8
 8016020:	440a      	add	r2, r1
 8016022:	f846 2d04 	str.w	r2, [r6, #-4]!
 8016026:	69e1      	ldr	r1, [r4, #28]
 8016028:	9600      	str	r6, [sp, #0]
 801602a:	463a      	mov	r2, r7
 801602c:	f7ff ff98 	bl	8015f60 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8016030:	69a3      	ldr	r3, [r4, #24]
 8016032:	686a      	ldr	r2, [r5, #4]
 8016034:	6a21      	ldr	r1, [r4, #32]
 8016036:	9600      	str	r6, [sp, #0]
 8016038:	4607      	mov	r7, r0
 801603a:	6860      	ldr	r0, [r4, #4]
 801603c:	f7ff ff90 	bl	8015f60 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8016040:	6962      	ldr	r2, [r4, #20]
 8016042:	69a3      	ldr	r3, [r4, #24]
 8016044:	fb93 f8f8 	sdiv	r8, r3, r8
 8016048:	4442      	add	r2, r8
 801604a:	9203      	str	r2, [sp, #12]
 801604c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801604e:	682a      	ldr	r2, [r5, #0]
 8016050:	9600      	str	r6, [sp, #0]
 8016052:	4407      	add	r7, r0
 8016054:	68e0      	ldr	r0, [r4, #12]
 8016056:	f7ff ff83 	bl	8015f60 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801605a:	9600      	str	r6, [sp, #0]
 801605c:	4680      	mov	r8, r0
 801605e:	69a3      	ldr	r3, [r4, #24]
 8016060:	686a      	ldr	r2, [r5, #4]
 8016062:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8016064:	6920      	ldr	r0, [r4, #16]
 8016066:	f7ff ff7b 	bl	8015f60 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801606a:	4440      	add	r0, r8
 801606c:	e7cc      	b.n	8016008 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801606e:	bf00      	nop
 8016070:	20013830 	.word	0x20013830

08016074 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8016074:	4b07      	ldr	r3, [pc, #28]	; (8016094 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8016076:	781b      	ldrb	r3, [r3, #0]
 8016078:	2b01      	cmp	r3, #1
 801607a:	d109      	bne.n	8016090 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 801607c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8016080:	f9b0 2000 	ldrsh.w	r2, [r0]
 8016084:	8003      	strh	r3, [r0, #0]
 8016086:	4b04      	ldr	r3, [pc, #16]	; (8016098 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8016088:	881b      	ldrh	r3, [r3, #0]
 801608a:	3b01      	subs	r3, #1
 801608c:	1a9b      	subs	r3, r3, r2
 801608e:	800b      	strh	r3, [r1, #0]
 8016090:	4770      	bx	lr
 8016092:	bf00      	nop
 8016094:	20013814 	.word	0x20013814
 8016098:	20013810 	.word	0x20013810

0801609c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 801609c:	b510      	push	{r4, lr}
 801609e:	4b07      	ldr	r3, [pc, #28]	; (80160bc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80160a0:	781b      	ldrb	r3, [r3, #0]
 80160a2:	2b01      	cmp	r3, #1
 80160a4:	d108      	bne.n	80160b8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80160a6:	4b06      	ldr	r3, [pc, #24]	; (80160c0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80160a8:	880c      	ldrh	r4, [r1, #0]
 80160aa:	881b      	ldrh	r3, [r3, #0]
 80160ac:	f9b0 2000 	ldrsh.w	r2, [r0]
 80160b0:	3b01      	subs	r3, #1
 80160b2:	1b1b      	subs	r3, r3, r4
 80160b4:	8003      	strh	r3, [r0, #0]
 80160b6:	800a      	strh	r2, [r1, #0]
 80160b8:	bd10      	pop	{r4, pc}
 80160ba:	bf00      	nop
 80160bc:	20013814 	.word	0x20013814
 80160c0:	20013810 	.word	0x20013810

080160c4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 80160c4:	b510      	push	{r4, lr}
 80160c6:	4b0a      	ldr	r3, [pc, #40]	; (80160f0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80160c8:	781b      	ldrb	r3, [r3, #0]
 80160ca:	2b01      	cmp	r3, #1
 80160cc:	d10e      	bne.n	80160ec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 80160ce:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80160d2:	8843      	ldrh	r3, [r0, #2]
 80160d4:	f9b0 4000 	ldrsh.w	r4, [r0]
 80160d8:	8044      	strh	r4, [r0, #2]
 80160da:	18ca      	adds	r2, r1, r3
 80160dc:	4b05      	ldr	r3, [pc, #20]	; (80160f4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 80160de:	881b      	ldrh	r3, [r3, #0]
 80160e0:	1a9b      	subs	r3, r3, r2
 80160e2:	8003      	strh	r3, [r0, #0]
 80160e4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80160e8:	80c3      	strh	r3, [r0, #6]
 80160ea:	8081      	strh	r1, [r0, #4]
 80160ec:	bd10      	pop	{r4, pc}
 80160ee:	bf00      	nop
 80160f0:	20013814 	.word	0x20013814
 80160f4:	20013810 	.word	0x20013810

080160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 80160f8:	4b08      	ldr	r3, [pc, #32]	; (801611c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 80160fa:	781b      	ldrb	r3, [r3, #0]
 80160fc:	2b01      	cmp	r3, #1
 80160fe:	d10c      	bne.n	801611a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8016100:	8803      	ldrh	r3, [r0, #0]
 8016102:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8016106:	8842      	ldrh	r2, [r0, #2]
 8016108:	8002      	strh	r2, [r0, #0]
 801610a:	185a      	adds	r2, r3, r1
 801610c:	4b04      	ldr	r3, [pc, #16]	; (8016120 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801610e:	881b      	ldrh	r3, [r3, #0]
 8016110:	1a9b      	subs	r3, r3, r2
 8016112:	8043      	strh	r3, [r0, #2]
 8016114:	88c3      	ldrh	r3, [r0, #6]
 8016116:	8083      	strh	r3, [r0, #4]
 8016118:	80c1      	strh	r1, [r0, #6]
 801611a:	4770      	bx	lr
 801611c:	20013814 	.word	0x20013814
 8016120:	20013810 	.word	0x20013810

08016124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8016124:	b510      	push	{r4, lr}
 8016126:	4b07      	ldr	r3, [pc, #28]	; (8016144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8016128:	781b      	ldrb	r3, [r3, #0]
 801612a:	2b01      	cmp	r3, #1
 801612c:	d108      	bne.n	8016140 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801612e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8016132:	f9b0 4000 	ldrsh.w	r4, [r0]
 8016136:	8003      	strh	r3, [r0, #0]
 8016138:	8893      	ldrh	r3, [r2, #4]
 801613a:	3b01      	subs	r3, #1
 801613c:	1b1b      	subs	r3, r3, r4
 801613e:	800b      	strh	r3, [r1, #0]
 8016140:	bd10      	pop	{r4, pc}
 8016142:	bf00      	nop
 8016144:	20013814 	.word	0x20013814

08016148 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8016148:	4b0b      	ldr	r3, [pc, #44]	; (8016178 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 801614a:	781b      	ldrb	r3, [r3, #0]
 801614c:	2b01      	cmp	r3, #1
 801614e:	d111      	bne.n	8016174 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8016150:	680b      	ldr	r3, [r1, #0]
 8016152:	ed90 7a00 	vldr	s14, [r0]
 8016156:	6003      	str	r3, [r0, #0]
 8016158:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 801615c:	eddf 6a07 	vldr	s13, [pc, #28]	; 801617c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8016160:	ee07 3a90 	vmov	s15, r3
 8016164:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016168:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801616c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8016170:	edc1 7a00 	vstr	s15, [r1]
 8016174:	4770      	bx	lr
 8016176:	bf00      	nop
 8016178:	20013814 	.word	0x20013814
 801617c:	38d1b717 	.word	0x38d1b717

08016180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8016180:	b510      	push	{r4, lr}
 8016182:	4b0a      	ldr	r3, [pc, #40]	; (80161ac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8016184:	781b      	ldrb	r3, [r3, #0]
 8016186:	2b01      	cmp	r3, #1
 8016188:	460a      	mov	r2, r1
 801618a:	d10d      	bne.n	80161a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 801618c:	8881      	ldrh	r1, [r0, #4]
 801618e:	8803      	ldrh	r3, [r0, #0]
 8016190:	440b      	add	r3, r1
 8016192:	4601      	mov	r1, r0
 8016194:	3b01      	subs	r3, #1
 8016196:	f821 3b02 	strh.w	r3, [r1], #2
 801619a:	f7ff ffc3 	bl	8016124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801619e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80161a2:	88c2      	ldrh	r2, [r0, #6]
 80161a4:	8082      	strh	r2, [r0, #4]
 80161a6:	80c3      	strh	r3, [r0, #6]
 80161a8:	bd10      	pop	{r4, pc}
 80161aa:	bf00      	nop
 80161ac:	20013814 	.word	0x20013814

080161b0 <_ZN8touchgfx11Application13requestRedrawEv>:
 80161b0:	4b06      	ldr	r3, [pc, #24]	; (80161cc <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80161b2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80161b6:	4b06      	ldr	r3, [pc, #24]	; (80161d0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80161b8:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 80161bc:	f9b3 3000 	ldrsh.w	r3, [r3]
 80161c0:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 80161c4:	2100      	movs	r1, #0
 80161c6:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 80161ca:	4770      	bx	lr
 80161cc:	20013810 	.word	0x20013810
 80161d0:	20013812 	.word	0x20013812

080161d4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80161d4:	4b03      	ldr	r3, [pc, #12]	; (80161e4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80161d6:	6818      	ldr	r0, [r3, #0]
 80161d8:	b110      	cbz	r0, 80161e0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80161da:	6803      	ldr	r3, [r0, #0]
 80161dc:	699b      	ldr	r3, [r3, #24]
 80161de:	4718      	bx	r3
 80161e0:	4770      	bx	lr
 80161e2:	bf00      	nop
 80161e4:	20013860 	.word	0x20013860

080161e8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80161e8:	4770      	bx	lr
	...

080161ec <_ZN8touchgfx11Application4drawEv>:
 80161ec:	b507      	push	{r0, r1, r2, lr}
 80161ee:	4b09      	ldr	r3, [pc, #36]	; (8016214 <_ZN8touchgfx11Application4drawEv+0x28>)
 80161f0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80161f4:	4b08      	ldr	r3, [pc, #32]	; (8016218 <_ZN8touchgfx11Application4drawEv+0x2c>)
 80161f6:	f8ad 2004 	strh.w	r2, [sp, #4]
 80161fa:	f9b3 3000 	ldrsh.w	r3, [r3]
 80161fe:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016202:	6803      	ldr	r3, [r0, #0]
 8016204:	2100      	movs	r1, #0
 8016206:	9100      	str	r1, [sp, #0]
 8016208:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801620a:	4669      	mov	r1, sp
 801620c:	4798      	blx	r3
 801620e:	b003      	add	sp, #12
 8016210:	f85d fb04 	ldr.w	pc, [sp], #4
 8016214:	20013810 	.word	0x20013810
 8016218:	20013812 	.word	0x20013812

0801621c <_ZN8touchgfx11Application10invalidateEv>:
 801621c:	4b09      	ldr	r3, [pc, #36]	; (8016244 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801621e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016222:	4b09      	ldr	r3, [pc, #36]	; (8016248 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8016224:	b082      	sub	sp, #8
 8016226:	f9b3 3000 	ldrsh.w	r3, [r3]
 801622a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801622e:	2100      	movs	r1, #0
 8016230:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016234:	9100      	str	r1, [sp, #0]
 8016236:	6803      	ldr	r3, [r0, #0]
 8016238:	aa02      	add	r2, sp, #8
 801623a:	e912 0006 	ldmdb	r2, {r1, r2}
 801623e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016240:	b002      	add	sp, #8
 8016242:	4718      	bx	r3
 8016244:	20013810 	.word	0x20013810
 8016248:	20013812 	.word	0x20013812

0801624c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801624c:	4b03      	ldr	r3, [pc, #12]	; (801625c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801624e:	6818      	ldr	r0, [r3, #0]
 8016250:	b110      	cbz	r0, 8016258 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8016252:	6803      	ldr	r3, [r0, #0]
 8016254:	69db      	ldr	r3, [r3, #28]
 8016256:	4718      	bx	r3
 8016258:	4770      	bx	lr
 801625a:	bf00      	nop
 801625c:	20013860 	.word	0x20013860

08016260 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8016260:	4b03      	ldr	r3, [pc, #12]	; (8016270 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8016262:	6818      	ldr	r0, [r3, #0]
 8016264:	b110      	cbz	r0, 801626c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8016266:	6803      	ldr	r3, [r0, #0]
 8016268:	6a1b      	ldr	r3, [r3, #32]
 801626a:	4718      	bx	r3
 801626c:	4770      	bx	lr
 801626e:	bf00      	nop
 8016270:	20013860 	.word	0x20013860

08016274 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8016274:	2300      	movs	r3, #0
 8016276:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 801627a:	4770      	bx	lr

0801627c <_ZN8touchgfx11Application14handleKeyEventEh>:
 801627c:	4b03      	ldr	r3, [pc, #12]	; (801628c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801627e:	6818      	ldr	r0, [r3, #0]
 8016280:	b110      	cbz	r0, 8016288 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8016282:	6803      	ldr	r3, [r0, #0]
 8016284:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016286:	4718      	bx	r3
 8016288:	4770      	bx	lr
 801628a:	bf00      	nop
 801628c:	20013860 	.word	0x20013860

08016290 <_ZN8touchgfx11ApplicationD1Ev>:
 8016290:	4770      	bx	lr

08016292 <_ZN8touchgfx11ApplicationD0Ev>:
 8016292:	b510      	push	{r4, lr}
 8016294:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8016298:	4604      	mov	r4, r0
 801629a:	f014 f996 	bl	802a5ca <_ZdlPvj>
 801629e:	4620      	mov	r0, r4
 80162a0:	bd10      	pop	{r4, pc}

080162a2 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80162a2:	b510      	push	{r4, lr}
 80162a4:	f9b1 4000 	ldrsh.w	r4, [r1]
 80162a8:	888a      	ldrh	r2, [r1, #4]
 80162aa:	f9b0 3000 	ldrsh.w	r3, [r0]
 80162ae:	4422      	add	r2, r4
 80162b0:	b212      	sxth	r2, r2
 80162b2:	4293      	cmp	r3, r2
 80162b4:	da15      	bge.n	80162e2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80162b6:	8882      	ldrh	r2, [r0, #4]
 80162b8:	4413      	add	r3, r2
 80162ba:	b21b      	sxth	r3, r3
 80162bc:	429c      	cmp	r4, r3
 80162be:	da10      	bge.n	80162e2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80162c0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80162c4:	88c9      	ldrh	r1, [r1, #6]
 80162c6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80162ca:	4419      	add	r1, r3
 80162cc:	b209      	sxth	r1, r1
 80162ce:	428a      	cmp	r2, r1
 80162d0:	da07      	bge.n	80162e2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80162d2:	88c0      	ldrh	r0, [r0, #6]
 80162d4:	4410      	add	r0, r2
 80162d6:	b200      	sxth	r0, r0
 80162d8:	4283      	cmp	r3, r0
 80162da:	bfac      	ite	ge
 80162dc:	2000      	movge	r0, #0
 80162de:	2001      	movlt	r0, #1
 80162e0:	bd10      	pop	{r4, pc}
 80162e2:	2000      	movs	r0, #0
 80162e4:	e7fc      	b.n	80162e0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

080162e6 <_ZN8touchgfx4Rect10restrictToEss>:
 80162e6:	f9b0 3000 	ldrsh.w	r3, [r0]
 80162ea:	2b00      	cmp	r3, #0
 80162ec:	b510      	push	{r4, lr}
 80162ee:	da04      	bge.n	80162fa <_ZN8touchgfx4Rect10restrictToEss+0x14>
 80162f0:	8884      	ldrh	r4, [r0, #4]
 80162f2:	4423      	add	r3, r4
 80162f4:	8083      	strh	r3, [r0, #4]
 80162f6:	2300      	movs	r3, #0
 80162f8:	8003      	strh	r3, [r0, #0]
 80162fa:	f9b0 4000 	ldrsh.w	r4, [r0]
 80162fe:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016302:	1b09      	subs	r1, r1, r4
 8016304:	428b      	cmp	r3, r1
 8016306:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801630a:	bfc8      	it	gt
 801630c:	8081      	strhgt	r1, [r0, #4]
 801630e:	2b00      	cmp	r3, #0
 8016310:	da04      	bge.n	801631c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8016312:	88c1      	ldrh	r1, [r0, #6]
 8016314:	440b      	add	r3, r1
 8016316:	80c3      	strh	r3, [r0, #6]
 8016318:	2300      	movs	r3, #0
 801631a:	8043      	strh	r3, [r0, #2]
 801631c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8016320:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8016324:	1a52      	subs	r2, r2, r1
 8016326:	4293      	cmp	r3, r2
 8016328:	bfc8      	it	gt
 801632a:	80c2      	strhgt	r2, [r0, #6]
 801632c:	bd10      	pop	{r4, pc}
	...

08016330 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8016330:	b510      	push	{r4, lr}
 8016332:	4b10      	ldr	r3, [pc, #64]	; (8016374 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8016334:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016338:	4b0f      	ldr	r3, [pc, #60]	; (8016378 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801633a:	460c      	mov	r4, r1
 801633c:	4620      	mov	r0, r4
 801633e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8016342:	f7ff ffd0 	bl	80162e6 <_ZN8touchgfx4Rect10restrictToEss>
 8016346:	4b0d      	ldr	r3, [pc, #52]	; (801637c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8016348:	6818      	ldr	r0, [r3, #0]
 801634a:	b190      	cbz	r0, 8016372 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 801634c:	6803      	ldr	r3, [r0, #0]
 801634e:	4621      	mov	r1, r4
 8016350:	689b      	ldr	r3, [r3, #8]
 8016352:	4798      	blx	r3
 8016354:	4b0a      	ldr	r3, [pc, #40]	; (8016380 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8016356:	6818      	ldr	r0, [r3, #0]
 8016358:	b118      	cbz	r0, 8016362 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801635a:	6803      	ldr	r3, [r0, #0]
 801635c:	4621      	mov	r1, r4
 801635e:	689b      	ldr	r3, [r3, #8]
 8016360:	4798      	blx	r3
 8016362:	4b08      	ldr	r3, [pc, #32]	; (8016384 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8016364:	6818      	ldr	r0, [r3, #0]
 8016366:	6803      	ldr	r3, [r0, #0]
 8016368:	4621      	mov	r1, r4
 801636a:	69db      	ldr	r3, [r3, #28]
 801636c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016370:	4718      	bx	r3
 8016372:	bd10      	pop	{r4, pc}
 8016374:	20013812 	.word	0x20013812
 8016378:	20013810 	.word	0x20013810
 801637c:	20013860 	.word	0x20013860
 8016380:	2001385c 	.word	0x2001385c
 8016384:	2001381c 	.word	0x2001381c

08016388 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8016388:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801638a:	4606      	mov	r6, r0
 801638c:	4608      	mov	r0, r1
 801638e:	460f      	mov	r7, r1
 8016390:	f7fa f957 	bl	8010642 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016394:	b9e8      	cbnz	r0, 80163d2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016396:	f9b7 5000 	ldrsh.w	r5, [r7]
 801639a:	f9b6 4000 	ldrsh.w	r4, [r6]
 801639e:	42a5      	cmp	r5, r4
 80163a0:	db17      	blt.n	80163d2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80163a2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80163a6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80163aa:	429a      	cmp	r2, r3
 80163ac:	db11      	blt.n	80163d2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80163ae:	88b9      	ldrh	r1, [r7, #4]
 80163b0:	440d      	add	r5, r1
 80163b2:	88b1      	ldrh	r1, [r6, #4]
 80163b4:	440c      	add	r4, r1
 80163b6:	b22d      	sxth	r5, r5
 80163b8:	b224      	sxth	r4, r4
 80163ba:	42a5      	cmp	r5, r4
 80163bc:	dc09      	bgt.n	80163d2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80163be:	88f8      	ldrh	r0, [r7, #6]
 80163c0:	4410      	add	r0, r2
 80163c2:	88f2      	ldrh	r2, [r6, #6]
 80163c4:	4413      	add	r3, r2
 80163c6:	b200      	sxth	r0, r0
 80163c8:	b21b      	sxth	r3, r3
 80163ca:	4298      	cmp	r0, r3
 80163cc:	bfcc      	ite	gt
 80163ce:	2000      	movgt	r0, #0
 80163d0:	2001      	movle	r0, #1
 80163d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080163d4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 80163d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80163d6:	4604      	mov	r4, r0
 80163d8:	4608      	mov	r0, r1
 80163da:	460d      	mov	r5, r1
 80163dc:	f7fa f931 	bl	8010642 <_ZNK8touchgfx4Rect7isEmptyEv>
 80163e0:	b978      	cbnz	r0, 8016402 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 80163e2:	4620      	mov	r0, r4
 80163e4:	f7fa f92d 	bl	8010642 <_ZNK8touchgfx4Rect7isEmptyEv>
 80163e8:	f9b5 6000 	ldrsh.w	r6, [r5]
 80163ec:	b150      	cbz	r0, 8016404 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 80163ee:	8026      	strh	r6, [r4, #0]
 80163f0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80163f4:	8063      	strh	r3, [r4, #2]
 80163f6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 80163fa:	80a3      	strh	r3, [r4, #4]
 80163fc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8016400:	80e3      	strh	r3, [r4, #6]
 8016402:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016404:	f9b4 1000 	ldrsh.w	r1, [r4]
 8016408:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801640c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8016410:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8016414:	88ed      	ldrh	r5, [r5, #6]
 8016416:	42b1      	cmp	r1, r6
 8016418:	460f      	mov	r7, r1
 801641a:	bfa8      	it	ge
 801641c:	4637      	movge	r7, r6
 801641e:	4293      	cmp	r3, r2
 8016420:	4618      	mov	r0, r3
 8016422:	4466      	add	r6, ip
 8016424:	bfa8      	it	ge
 8016426:	4610      	movge	r0, r2
 8016428:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801642c:	8027      	strh	r7, [r4, #0]
 801642e:	442a      	add	r2, r5
 8016430:	88e5      	ldrh	r5, [r4, #6]
 8016432:	8060      	strh	r0, [r4, #2]
 8016434:	4461      	add	r1, ip
 8016436:	442b      	add	r3, r5
 8016438:	b236      	sxth	r6, r6
 801643a:	b209      	sxth	r1, r1
 801643c:	b212      	sxth	r2, r2
 801643e:	b21b      	sxth	r3, r3
 8016440:	428e      	cmp	r6, r1
 8016442:	bfac      	ite	ge
 8016444:	ebc7 0106 	rsbge	r1, r7, r6
 8016448:	ebc7 0101 	rsblt	r1, r7, r1
 801644c:	429a      	cmp	r2, r3
 801644e:	bfac      	ite	ge
 8016450:	ebc0 0202 	rsbge	r2, r0, r2
 8016454:	ebc0 0203 	rsblt	r2, r0, r3
 8016458:	80a1      	strh	r1, [r4, #4]
 801645a:	80e2      	strh	r2, [r4, #6]
 801645c:	e7d1      	b.n	8016402 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08016460 <_ZN8touchgfx11Application11getInstanceEv>:
 8016460:	4b01      	ldr	r3, [pc, #4]	; (8016468 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8016462:	6818      	ldr	r0, [r3, #0]
 8016464:	4770      	bx	lr
 8016466:	bf00      	nop
 8016468:	20013870 	.word	0x20013870

0801646c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 801646c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801646e:	4b10      	ldr	r3, [pc, #64]	; (80164b0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8016470:	781b      	ldrb	r3, [r3, #0]
 8016472:	4605      	mov	r5, r0
 8016474:	b1d3      	cbz	r3, 80164ac <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8016476:	4b0f      	ldr	r3, [pc, #60]	; (80164b4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8016478:	4f0f      	ldr	r7, [pc, #60]	; (80164b8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 801647a:	881c      	ldrh	r4, [r3, #0]
 801647c:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8016480:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8016484:	42a3      	cmp	r3, r4
 8016486:	d90e      	bls.n	80164a6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8016488:	683b      	ldr	r3, [r7, #0]
 801648a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801648e:	b10a      	cbz	r2, 8016494 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8016490:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8016492:	b900      	cbnz	r0, 8016496 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8016494:	6898      	ldr	r0, [r3, #8]
 8016496:	6803      	ldr	r3, [r0, #0]
 8016498:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 801649c:	69db      	ldr	r3, [r3, #28]
 801649e:	3401      	adds	r4, #1
 80164a0:	4798      	blx	r3
 80164a2:	b2a4      	uxth	r4, r4
 80164a4:	e7ec      	b.n	8016480 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 80164a6:	2300      	movs	r3, #0
 80164a8:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 80164ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80164ae:	bf00      	nop
 80164b0:	2001381a 	.word	0x2001381a
 80164b4:	20000088 	.word	0x20000088
 80164b8:	2001381c 	.word	0x2001381c

080164bc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 80164bc:	b510      	push	{r4, lr}
 80164be:	2300      	movs	r3, #0
 80164c0:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 80164c4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80164c8:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80164cc:	4604      	mov	r4, r0
 80164ce:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80164d2:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 80164d6:	429a      	cmp	r2, r3
 80164d8:	d90e      	bls.n	80164f8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 80164da:	18e2      	adds	r2, r4, r3
 80164dc:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 80164e0:	b122      	cbz	r2, 80164ec <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 80164e2:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80164e6:	6803      	ldr	r3, [r0, #0]
 80164e8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80164ea:	4798      	blx	r3
 80164ec:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80164f0:	3301      	adds	r3, #1
 80164f2:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80164f6:	e7ea      	b.n	80164ce <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 80164f8:	bd10      	pop	{r4, pc}

080164fa <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 80164fa:	b530      	push	{r4, r5, lr}
 80164fc:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8016500:	2200      	movs	r2, #0
 8016502:	b293      	uxth	r3, r2
 8016504:	429d      	cmp	r5, r3
 8016506:	d90e      	bls.n	8016526 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8016508:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 801650c:	428b      	cmp	r3, r1
 801650e:	d10b      	bne.n	8016528 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8016510:	1884      	adds	r4, r0, r2
 8016512:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8016516:	b13b      	cbz	r3, 8016528 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8016518:	3b01      	subs	r3, #1
 801651a:	b2db      	uxtb	r3, r3
 801651c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8016520:	b90b      	cbnz	r3, 8016526 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8016522:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8016526:	bd30      	pop	{r4, r5, pc}
 8016528:	3201      	adds	r2, #1
 801652a:	e7ea      	b.n	8016502 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

0801652c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 801652c:	2300      	movs	r3, #0
 801652e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8016532:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8016536:	30a4      	adds	r0, #164	; 0xa4
 8016538:	f802 3b01 	strb.w	r3, [r2], #1
 801653c:	4282      	cmp	r2, r0
 801653e:	d1fb      	bne.n	8016538 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8016540:	4770      	bx	lr
	...

08016544 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8016544:	b570      	push	{r4, r5, r6, lr}
 8016546:	4c0b      	ldr	r4, [pc, #44]	; (8016574 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8016548:	4605      	mov	r5, r0
 801654a:	6820      	ldr	r0, [r4, #0]
 801654c:	460e      	mov	r6, r1
 801654e:	b110      	cbz	r0, 8016556 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8016550:	6803      	ldr	r3, [r0, #0]
 8016552:	695b      	ldr	r3, [r3, #20]
 8016554:	4798      	blx	r3
 8016556:	1d28      	adds	r0, r5, #4
 8016558:	f7ff ffe8 	bl	801652c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801655c:	6026      	str	r6, [r4, #0]
 801655e:	6833      	ldr	r3, [r6, #0]
 8016560:	4630      	mov	r0, r6
 8016562:	68db      	ldr	r3, [r3, #12]
 8016564:	4798      	blx	r3
 8016566:	682b      	ldr	r3, [r5, #0]
 8016568:	4628      	mov	r0, r5
 801656a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801656c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016570:	4718      	bx	r3
 8016572:	bf00      	nop
 8016574:	20013860 	.word	0x20013860

08016578 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8016578:	2300      	movs	r3, #0
 801657a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 801657e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8016582:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016584:	461a      	mov	r2, r3
 8016586:	461c      	mov	r4, r3
 8016588:	461d      	mov	r5, r3
 801658a:	459c      	cmp	ip, r3
 801658c:	dd1a      	ble.n	80165c4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 801658e:	18c6      	adds	r6, r0, r3
 8016590:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8016594:	b16e      	cbz	r6, 80165b2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8016596:	429a      	cmp	r2, r3
 8016598:	d008      	beq.n	80165ac <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 801659a:	fa1f fe82 	uxth.w	lr, r2
 801659e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 80165a2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 80165a6:	1887      	adds	r7, r0, r2
 80165a8:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 80165ac:	3201      	adds	r2, #1
 80165ae:	3301      	adds	r3, #1
 80165b0:	e7eb      	b.n	801658a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 80165b2:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 80165b6:	4299      	cmp	r1, r3
 80165b8:	bfa8      	it	ge
 80165ba:	3501      	addge	r5, #1
 80165bc:	429e      	cmp	r6, r3
 80165be:	bfc8      	it	gt
 80165c0:	3401      	addgt	r4, #1
 80165c2:	e7f4      	b.n	80165ae <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 80165c4:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 80165c8:	1b49      	subs	r1, r1, r5
 80165ca:	1b1b      	subs	r3, r3, r4
 80165cc:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 80165d0:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80165d4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80165d8:	4293      	cmp	r3, r2
 80165da:	dd03      	ble.n	80165e4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 80165dc:	3b01      	subs	r3, #1
 80165de:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 80165e2:	e7f7      	b.n	80165d4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 80165e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080165e8 <_ZN8touchgfx11Application15handleTickEventEv>:
 80165e8:	b570      	push	{r4, r5, r6, lr}
 80165ea:	4d16      	ldr	r5, [pc, #88]	; (8016644 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 80165ec:	4604      	mov	r4, r0
 80165ee:	6828      	ldr	r0, [r5, #0]
 80165f0:	b140      	cbz	r0, 8016604 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80165f2:	7a03      	ldrb	r3, [r0, #8]
 80165f4:	b933      	cbnz	r3, 8016604 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80165f6:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 80165fa:	6803      	ldr	r3, [r0, #0]
 80165fc:	689b      	ldr	r3, [r3, #8]
 80165fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016602:	4718      	bx	r3
 8016604:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8016608:	4e0f      	ldr	r6, [pc, #60]	; (8016648 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 801660a:	b973      	cbnz	r3, 801662a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801660c:	b168      	cbz	r0, 801662a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801660e:	7a03      	ldrb	r3, [r0, #8]
 8016610:	b15b      	cbz	r3, 801662a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016612:	6830      	ldr	r0, [r6, #0]
 8016614:	b110      	cbz	r0, 801661c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8016616:	6803      	ldr	r3, [r0, #0]
 8016618:	691b      	ldr	r3, [r3, #16]
 801661a:	4798      	blx	r3
 801661c:	6828      	ldr	r0, [r5, #0]
 801661e:	6803      	ldr	r3, [r0, #0]
 8016620:	68db      	ldr	r3, [r3, #12]
 8016622:	4798      	blx	r3
 8016624:	2301      	movs	r3, #1
 8016626:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801662a:	3404      	adds	r4, #4
 801662c:	4620      	mov	r0, r4
 801662e:	f7ff ff45 	bl	80164bc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8016632:	4620      	mov	r0, r4
 8016634:	f7ff ffa0 	bl	8016578 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8016638:	6830      	ldr	r0, [r6, #0]
 801663a:	b110      	cbz	r0, 8016642 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 801663c:	6803      	ldr	r3, [r0, #0]
 801663e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016640:	e7dd      	b.n	80165fe <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8016642:	bd70      	pop	{r4, r5, r6, pc}
 8016644:	20013864 	.word	0x20013864
 8016648:	20013860 	.word	0x20013860

0801664c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 801664c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801664e:	2300      	movs	r3, #0
 8016650:	4604      	mov	r4, r0
 8016652:	460d      	mov	r5, r1
 8016654:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8016658:	4618      	mov	r0, r3
 801665a:	b29a      	uxth	r2, r3
 801665c:	4291      	cmp	r1, r2
 801665e:	d911      	bls.n	8016684 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8016660:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8016664:	18e6      	adds	r6, r4, r3
 8016666:	42af      	cmp	r7, r5
 8016668:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 801666c:	d105      	bne.n	801667a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 801666e:	2aff      	cmp	r2, #255	; 0xff
 8016670:	d002      	beq.n	8016678 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8016672:	3201      	adds	r2, #1
 8016674:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8016678:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801667a:	2a00      	cmp	r2, #0
 801667c:	bf08      	it	eq
 801667e:	2001      	moveq	r0, #1
 8016680:	3301      	adds	r3, #1
 8016682:	e7ea      	b.n	801665a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8016684:	b120      	cbz	r0, 8016690 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8016686:	2920      	cmp	r1, #32
 8016688:	d102      	bne.n	8016690 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 801668a:	4620      	mov	r0, r4
 801668c:	f7ff ff74 	bl	8016578 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8016690:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8016694:	2b1f      	cmp	r3, #31
 8016696:	d8ef      	bhi.n	8016678 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8016698:	18e2      	adds	r2, r4, r3
 801669a:	2101      	movs	r1, #1
 801669c:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 80166a0:	185a      	adds	r2, r3, r1
 80166a2:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 80166a6:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80166aa:	e7e5      	b.n	8016678 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

080166ac <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80166ac:	4603      	mov	r3, r0
 80166ae:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80166b2:	2200      	movs	r2, #0
 80166b4:	801a      	strh	r2, [r3, #0]
 80166b6:	805a      	strh	r2, [r3, #2]
 80166b8:	809a      	strh	r2, [r3, #4]
 80166ba:	80da      	strh	r2, [r3, #6]
 80166bc:	3308      	adds	r3, #8
 80166be:	428b      	cmp	r3, r1
 80166c0:	d1f8      	bne.n	80166b4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80166c2:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80166c6:	4770      	bx	lr

080166c8 <_ZN8touchgfx11ApplicationC1Ev>:
 80166c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80166ca:	4606      	mov	r6, r0
 80166cc:	4b1c      	ldr	r3, [pc, #112]	; (8016740 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80166ce:	f846 3b04 	str.w	r3, [r6], #4
 80166d2:	4604      	mov	r4, r0
 80166d4:	2500      	movs	r5, #0
 80166d6:	22a8      	movs	r2, #168	; 0xa8
 80166d8:	2100      	movs	r1, #0
 80166da:	4630      	mov	r0, r6
 80166dc:	f014 ff8d 	bl	802b5fa <memset>
 80166e0:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 80166e4:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80166e8:	f7ff ffe0 	bl	80166ac <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80166ec:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80166f0:	f7ff ffdc 	bl	80166ac <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80166f4:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80166f8:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80166fc:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8016700:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8016704:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8016708:	490e      	ldr	r1, [pc, #56]	; (8016744 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801670a:	480f      	ldr	r0, [pc, #60]	; (8016748 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 801670c:	4f0f      	ldr	r7, [pc, #60]	; (801674c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 801670e:	f010 fe27 	bl	8027360 <CRC_Lock>
 8016712:	4b0f      	ldr	r3, [pc, #60]	; (8016750 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8016714:	b158      	cbz	r0, 801672e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8016716:	801d      	strh	r5, [r3, #0]
 8016718:	4a0e      	ldr	r2, [pc, #56]	; (8016754 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 801671a:	2300      	movs	r3, #0
 801671c:	6013      	str	r3, [r2, #0]
 801671e:	4a0e      	ldr	r2, [pc, #56]	; (8016758 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8016720:	603b      	str	r3, [r7, #0]
 8016722:	4630      	mov	r0, r6
 8016724:	6013      	str	r3, [r2, #0]
 8016726:	f7ff ff01 	bl	801652c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801672a:	4620      	mov	r0, r4
 801672c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801672e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8016732:	2002      	movs	r0, #2
 8016734:	801a      	strh	r2, [r3, #0]
 8016736:	6038      	str	r0, [r7, #0]
 8016738:	f001 fb4a 	bl	8017dd0 <_ZN8touchgfx6Screen4drawEv>
 801673c:	e7ec      	b.n	8016718 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801673e:	bf00      	nop
 8016740:	0802f610 	.word	0x0802f610
 8016744:	b5e8b5cd 	.word	0xb5e8b5cd
 8016748:	f407a5c2 	.word	0xf407a5c2
 801674c:	20013860 	.word	0x20013860
 8016750:	20000088 	.word	0x20000088
 8016754:	20013870 	.word	0x20013870
 8016758:	20013864 	.word	0x20013864

0801675c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801675c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8016760:	3b01      	subs	r3, #1
 8016762:	b29b      	uxth	r3, r3
 8016764:	428b      	cmp	r3, r1
 8016766:	b510      	push	{r4, lr}
 8016768:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 801676c:	d908      	bls.n	8016780 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801676e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8016772:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8016776:	681a      	ldr	r2, [r3, #0]
 8016778:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801677c:	685a      	ldr	r2, [r3, #4]
 801677e:	6062      	str	r2, [r4, #4]
 8016780:	bd10      	pop	{r4, pc}
	...

08016784 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8016784:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016788:	4b8f      	ldr	r3, [pc, #572]	; (80169c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 801678a:	b08f      	sub	sp, #60	; 0x3c
 801678c:	ac0a      	add	r4, sp, #40	; 0x28
 801678e:	e884 0006 	stmia.w	r4, {r1, r2}
 8016792:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016796:	4b8d      	ldr	r3, [pc, #564]	; (80169cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8016798:	4683      	mov	fp, r0
 801679a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801679e:	4620      	mov	r0, r4
 80167a0:	f7ff fda1 	bl	80162e6 <_ZN8touchgfx4Rect10restrictToEss>
 80167a4:	4620      	mov	r0, r4
 80167a6:	f7f9 ff4c 	bl	8010642 <_ZNK8touchgfx4Rect7isEmptyEv>
 80167aa:	2800      	cmp	r0, #0
 80167ac:	d16a      	bne.n	8016884 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80167ae:	9403      	str	r4, [sp, #12]
 80167b0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80167b4:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80167b8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 80167bc:	35a4      	adds	r5, #164	; 0xa4
 80167be:	9301      	str	r3, [sp, #4]
 80167c0:	b15c      	cbz	r4, 80167da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 80167c2:	4629      	mov	r1, r5
 80167c4:	9803      	ldr	r0, [sp, #12]
 80167c6:	f7ff fddf 	bl	8016388 <_ZNK8touchgfx4Rect8includesERKS0_>
 80167ca:	3c01      	subs	r4, #1
 80167cc:	b118      	cbz	r0, 80167d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 80167ce:	b2a1      	uxth	r1, r4
 80167d0:	9801      	ldr	r0, [sp, #4]
 80167d2:	f7ff ffc3 	bl	801675c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80167d6:	3d08      	subs	r5, #8
 80167d8:	e7f2      	b.n	80167c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 80167da:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 80167de:	f8cd a010 	str.w	sl, [sp, #16]
 80167e2:	f10a 33ff 	add.w	r3, sl, #4294967295
 80167e6:	9302      	str	r3, [sp, #8]
 80167e8:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80167ec:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 80167f0:	9306      	str	r3, [sp, #24]
 80167f2:	445c      	add	r4, fp
 80167f4:	2500      	movs	r5, #0
 80167f6:	4626      	mov	r6, r4
 80167f8:	f8cd a014 	str.w	sl, [sp, #20]
 80167fc:	462f      	mov	r7, r5
 80167fe:	9b05      	ldr	r3, [sp, #20]
 8016800:	2b00      	cmp	r3, #0
 8016802:	d073      	beq.n	80168ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8016804:	9903      	ldr	r1, [sp, #12]
 8016806:	4630      	mov	r0, r6
 8016808:	f7ff fd4b 	bl	80162a2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801680c:	b350      	cbz	r0, 8016864 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801680e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8016812:	f9b6 c000 	ldrsh.w	ip, [r6]
 8016816:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 801681a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801681e:	45e6      	cmp	lr, ip
 8016820:	db33      	blt.n	801688a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8016822:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8016826:	88b3      	ldrh	r3, [r6, #4]
 8016828:	4472      	add	r2, lr
 801682a:	4463      	add	r3, ip
 801682c:	b212      	sxth	r2, r2
 801682e:	b21b      	sxth	r3, r3
 8016830:	429a      	cmp	r2, r3
 8016832:	dc2a      	bgt.n	801688a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8016834:	88f3      	ldrh	r3, [r6, #6]
 8016836:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801683a:	fa1f f289 	uxth.w	r2, r9
 801683e:	4413      	add	r3, r2
 8016840:	b29b      	uxth	r3, r3
 8016842:	45c8      	cmp	r8, r9
 8016844:	fa1f fc88 	uxth.w	ip, r8
 8016848:	fa0f fe83 	sxth.w	lr, r3
 801684c:	db0f      	blt.n	801686e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801684e:	eba3 030c 	sub.w	r3, r3, ip
 8016852:	1ac9      	subs	r1, r1, r3
 8016854:	b209      	sxth	r1, r1
 8016856:	2900      	cmp	r1, #0
 8016858:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801685c:	dd12      	ble.n	8016884 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801685e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8016862:	4605      	mov	r5, r0
 8016864:	9b05      	ldr	r3, [sp, #20]
 8016866:	3b01      	subs	r3, #1
 8016868:	9305      	str	r3, [sp, #20]
 801686a:	3e08      	subs	r6, #8
 801686c:	e7c7      	b.n	80167fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 801686e:	4461      	add	r1, ip
 8016870:	b209      	sxth	r1, r1
 8016872:	4571      	cmp	r1, lr
 8016874:	dc38      	bgt.n	80168e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016876:	eba2 020c 	sub.w	r2, r2, ip
 801687a:	b212      	sxth	r2, r2
 801687c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8016880:	2a00      	cmp	r2, #0
 8016882:	dcee      	bgt.n	8016862 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8016884:	b00f      	add	sp, #60	; 0x3c
 8016886:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801688a:	45c8      	cmp	r8, r9
 801688c:	db2c      	blt.n	80168e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801688e:	88f3      	ldrh	r3, [r6, #6]
 8016890:	4499      	add	r9, r3
 8016892:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8016896:	4498      	add	r8, r3
 8016898:	fa0f f989 	sxth.w	r9, r9
 801689c:	fa0f f888 	sxth.w	r8, r8
 80168a0:	45c1      	cmp	r9, r8
 80168a2:	db21      	blt.n	80168e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80168a4:	88b3      	ldrh	r3, [r6, #4]
 80168a6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80168aa:	fa1f f28c 	uxth.w	r2, ip
 80168ae:	4413      	add	r3, r2
 80168b0:	b29b      	uxth	r3, r3
 80168b2:	45e6      	cmp	lr, ip
 80168b4:	fa1f f88e 	uxth.w	r8, lr
 80168b8:	fa0f f983 	sxth.w	r9, r3
 80168bc:	db0a      	blt.n	80168d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 80168be:	eba3 0308 	sub.w	r3, r3, r8
 80168c2:	1ac9      	subs	r1, r1, r3
 80168c4:	b209      	sxth	r1, r1
 80168c6:	2900      	cmp	r1, #0
 80168c8:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80168cc:	ddda      	ble.n	8016884 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80168ce:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80168d2:	e7c6      	b.n	8016862 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80168d4:	4441      	add	r1, r8
 80168d6:	b209      	sxth	r1, r1
 80168d8:	4549      	cmp	r1, r9
 80168da:	dc05      	bgt.n	80168e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80168dc:	eba2 0208 	sub.w	r2, r2, r8
 80168e0:	b212      	sxth	r2, r2
 80168e2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80168e6:	e7cb      	b.n	8016880 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80168e8:	4607      	mov	r7, r0
 80168ea:	e7bb      	b.n	8016864 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80168ec:	2d00      	cmp	r5, #0
 80168ee:	d181      	bne.n	80167f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 80168f0:	2f00      	cmp	r7, #0
 80168f2:	f000 81dd 	beq.w	8016cb0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80168f6:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80168fa:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80168fe:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8016902:	b2b3      	uxth	r3, r6
 8016904:	9305      	str	r3, [sp, #20]
 8016906:	9a05      	ldr	r2, [sp, #20]
 8016908:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 801690c:	4413      	add	r3, r2
 801690e:	b2ba      	uxth	r2, r7
 8016910:	4492      	add	sl, r2
 8016912:	b29b      	uxth	r3, r3
 8016914:	fa1f fa8a 	uxth.w	sl, sl
 8016918:	fa0f f883 	sxth.w	r8, r3
 801691c:	fa0f f98a 	sxth.w	r9, sl
 8016920:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8016924:	9b04      	ldr	r3, [sp, #16]
 8016926:	2b00      	cmp	r3, #0
 8016928:	d052      	beq.n	80169d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 801692a:	9903      	ldr	r1, [sp, #12]
 801692c:	4620      	mov	r0, r4
 801692e:	f7ff fcb8 	bl	80162a2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016932:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8016936:	b1c0      	cbz	r0, 801696a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016938:	f9b4 e000 	ldrsh.w	lr, [r4]
 801693c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8016940:	4576      	cmp	r6, lr
 8016942:	dc22      	bgt.n	801698a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016944:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8016948:	44f4      	add	ip, lr
 801694a:	fa0f fc8c 	sxth.w	ip, ip
 801694e:	45e0      	cmp	r8, ip
 8016950:	db1b      	blt.n	801698a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016952:	428f      	cmp	r7, r1
 8016954:	fa1f fc81 	uxth.w	ip, r1
 8016958:	88e1      	ldrh	r1, [r4, #6]
 801695a:	dc0d      	bgt.n	8016978 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801695c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8016960:	eba1 010c 	sub.w	r1, r1, ip
 8016964:	f8a4 9002 	strh.w	r9, [r4, #2]
 8016968:	80e1      	strh	r1, [r4, #6]
 801696a:	4628      	mov	r0, r5
 801696c:	9904      	ldr	r1, [sp, #16]
 801696e:	3901      	subs	r1, #1
 8016970:	9104      	str	r1, [sp, #16]
 8016972:	3c08      	subs	r4, #8
 8016974:	4605      	mov	r5, r0
 8016976:	e7d3      	b.n	8016920 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8016978:	4461      	add	r1, ip
 801697a:	b209      	sxth	r1, r1
 801697c:	4549      	cmp	r1, r9
 801697e:	dcf5      	bgt.n	801696c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016980:	eba2 0c0c 	sub.w	ip, r2, ip
 8016984:	f8a4 c006 	strh.w	ip, [r4, #6]
 8016988:	e7ef      	b.n	801696a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801698a:	428f      	cmp	r7, r1
 801698c:	dcee      	bgt.n	801696c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801698e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8016992:	4461      	add	r1, ip
 8016994:	b209      	sxth	r1, r1
 8016996:	4589      	cmp	r9, r1
 8016998:	dbe8      	blt.n	801696c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801699a:	4576      	cmp	r6, lr
 801699c:	fa1f fc8e 	uxth.w	ip, lr
 80169a0:	88a1      	ldrh	r1, [r4, #4]
 80169a2:	dc07      	bgt.n	80169b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 80169a4:	eba3 0c0c 	sub.w	ip, r3, ip
 80169a8:	eba1 010c 	sub.w	r1, r1, ip
 80169ac:	f8a4 8000 	strh.w	r8, [r4]
 80169b0:	80a1      	strh	r1, [r4, #4]
 80169b2:	e7da      	b.n	801696a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80169b4:	4461      	add	r1, ip
 80169b6:	b209      	sxth	r1, r1
 80169b8:	4588      	cmp	r8, r1
 80169ba:	dbd7      	blt.n	801696c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80169bc:	9905      	ldr	r1, [sp, #20]
 80169be:	eba1 0c0c 	sub.w	ip, r1, ip
 80169c2:	f8a4 c004 	strh.w	ip, [r4, #4]
 80169c6:	e7d0      	b.n	801696a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80169c8:	20013812 	.word	0x20013812
 80169cc:	20013810 	.word	0x20013810
 80169d0:	2d00      	cmp	r5, #0
 80169d2:	f000 816d 	beq.w	8016cb0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80169d6:	9b06      	ldr	r3, [sp, #24]
 80169d8:	445b      	add	r3, fp
 80169da:	461c      	mov	r4, r3
 80169dc:	9b02      	ldr	r3, [sp, #8]
 80169de:	3301      	adds	r3, #1
 80169e0:	f000 8166 	beq.w	8016cb0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80169e4:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 80169e8:	4629      	mov	r1, r5
 80169ea:	9803      	ldr	r0, [sp, #12]
 80169ec:	f7ff fccc 	bl	8016388 <_ZNK8touchgfx4Rect8includesERKS0_>
 80169f0:	b120      	cbz	r0, 80169fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 80169f2:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80169f6:	9801      	ldr	r0, [sp, #4]
 80169f8:	f7ff feb0 	bl	801675c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80169fc:	9903      	ldr	r1, [sp, #12]
 80169fe:	4628      	mov	r0, r5
 8016a00:	f7ff fc4f 	bl	80162a2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016a04:	2800      	cmp	r0, #0
 8016a06:	f000 809c 	beq.w	8016b42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8016a0a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8016a0e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016a12:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8016a16:	9309      	str	r3, [sp, #36]	; 0x24
 8016a18:	fa1f f189 	uxth.w	r1, r9
 8016a1c:	eb01 0c03 	add.w	ip, r1, r3
 8016a20:	fa1f fa8c 	uxth.w	sl, ip
 8016a24:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8016a28:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8016a2c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8016a30:	b283      	uxth	r3, r0
 8016a32:	eb03 050c 	add.w	r5, r3, ip
 8016a36:	b2ad      	uxth	r5, r5
 8016a38:	9505      	str	r5, [sp, #20]
 8016a3a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8016a3e:	9504      	str	r5, [sp, #16]
 8016a40:	4548      	cmp	r0, r9
 8016a42:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8016a46:	f340 8099 	ble.w	8016b7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8016a4a:	1a5b      	subs	r3, r3, r1
 8016a4c:	b29b      	uxth	r3, r3
 8016a4e:	4596      	cmp	lr, r2
 8016a50:	fa0f f08a 	sxth.w	r0, sl
 8016a54:	b21e      	sxth	r6, r3
 8016a56:	dd2e      	ble.n	8016ab6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8016a58:	9f02      	ldr	r7, [sp, #8]
 8016a5a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8016a5e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8016a62:	9f04      	ldr	r7, [sp, #16]
 8016a64:	1a3f      	subs	r7, r7, r0
 8016a66:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8016a6a:	fa1f fe8e 	uxth.w	lr, lr
 8016a6e:	b292      	uxth	r2, r2
 8016a70:	ebae 0102 	sub.w	r1, lr, r2
 8016a74:	44a6      	add	lr, r4
 8016a76:	4402      	add	r2, r0
 8016a78:	b289      	uxth	r1, r1
 8016a7a:	fa0f fe8e 	sxth.w	lr, lr
 8016a7e:	b212      	sxth	r2, r2
 8016a80:	b20d      	sxth	r5, r1
 8016a82:	ebae 0202 	sub.w	r2, lr, r2
 8016a86:	436f      	muls	r7, r5
 8016a88:	4372      	muls	r2, r6
 8016a8a:	4297      	cmp	r7, r2
 8016a8c:	db09      	blt.n	8016aa2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8016a8e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8016a92:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8016a96:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8016a9a:	449c      	add	ip, r3
 8016a9c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8016aa0:	e686      	b.n	80167b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016aa2:	4421      	add	r1, r4
 8016aa4:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8016aa8:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8016aac:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016ab0:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016ab4:	e67c      	b.n	80167b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016ab6:	9f04      	ldr	r7, [sp, #16]
 8016ab8:	42b8      	cmp	r0, r7
 8016aba:	da27      	bge.n	8016b0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8016abc:	9902      	ldr	r1, [sp, #8]
 8016abe:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8016ac2:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8016ac6:	eb05 010e 	add.w	r1, r5, lr
 8016aca:	fa1f f881 	uxth.w	r8, r1
 8016ace:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8016ad2:	4411      	add	r1, r2
 8016ad4:	eba1 0108 	sub.w	r1, r1, r8
 8016ad8:	b289      	uxth	r1, r1
 8016ada:	fa0f f988 	sxth.w	r9, r8
 8016ade:	eba2 020e 	sub.w	r2, r2, lr
 8016ae2:	fa0f f881 	sxth.w	r8, r1
 8016ae6:	1a3f      	subs	r7, r7, r0
 8016ae8:	4372      	muls	r2, r6
 8016aea:	fb08 f707 	mul.w	r7, r8, r7
 8016aee:	42ba      	cmp	r2, r7
 8016af0:	dc06      	bgt.n	8016b00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8016af2:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8016af6:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 8016afa:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 8016afe:	e7ca      	b.n	8016a96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8016b00:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8016b04:	4429      	add	r1, r5
 8016b06:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016b0a:	e651      	b.n	80167b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016b0c:	9805      	ldr	r0, [sp, #20]
 8016b0e:	ebaa 0000 	sub.w	r0, sl, r0
 8016b12:	b280      	uxth	r0, r0
 8016b14:	2d06      	cmp	r5, #6
 8016b16:	fa0f fe80 	sxth.w	lr, r0
 8016b1a:	d817      	bhi.n	8016b4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8016b1c:	9b04      	ldr	r3, [sp, #16]
 8016b1e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8016b22:	1c6b      	adds	r3, r5, #1
 8016b24:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8016b28:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8016b2c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8016b30:	9b01      	ldr	r3, [sp, #4]
 8016b32:	9801      	ldr	r0, [sp, #4]
 8016b34:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016b38:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8016b3c:	805a      	strh	r2, [r3, #2]
 8016b3e:	809e      	strh	r6, [r3, #4]
 8016b40:	80d9      	strh	r1, [r3, #6]
 8016b42:	9b02      	ldr	r3, [sp, #8]
 8016b44:	3b01      	subs	r3, #1
 8016b46:	9302      	str	r3, [sp, #8]
 8016b48:	3c08      	subs	r4, #8
 8016b4a:	e747      	b.n	80169dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8016b4c:	9a02      	ldr	r2, [sp, #8]
 8016b4e:	45b6      	cmp	lr, r6
 8016b50:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8016b54:	db0d      	blt.n	8016b72 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8016b56:	449c      	add	ip, r3
 8016b58:	fa1f fc8c 	uxth.w	ip, ip
 8016b5c:	445a      	add	r2, fp
 8016b5e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8016b62:	448c      	add	ip, r1
 8016b64:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8016b68:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8016b6c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8016b70:	e61e      	b.n	80167b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016b72:	445a      	add	r2, fp
 8016b74:	4484      	add	ip, r0
 8016b76:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8016b7a:	e78f      	b.n	8016a9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016b7c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8016b80:	fa1f f18e 	uxth.w	r1, lr
 8016b84:	eb01 0806 	add.w	r8, r1, r6
 8016b88:	b293      	uxth	r3, r2
 8016b8a:	fa1f f888 	uxth.w	r8, r8
 8016b8e:	9306      	str	r3, [sp, #24]
 8016b90:	fa0f f388 	sxth.w	r3, r8
 8016b94:	9307      	str	r3, [sp, #28]
 8016b96:	9f06      	ldr	r7, [sp, #24]
 8016b98:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8016b9c:	443b      	add	r3, r7
 8016b9e:	b29b      	uxth	r3, r3
 8016ba0:	4596      	cmp	lr, r2
 8016ba2:	9308      	str	r3, [sp, #32]
 8016ba4:	da24      	bge.n	8016bf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8016ba6:	9905      	ldr	r1, [sp, #20]
 8016ba8:	eba3 0308 	sub.w	r3, r3, r8
 8016bac:	ebaa 0401 	sub.w	r4, sl, r1
 8016bb0:	b2a4      	uxth	r4, r4
 8016bb2:	b29b      	uxth	r3, r3
 8016bb4:	b225      	sxth	r5, r4
 8016bb6:	b219      	sxth	r1, r3
 8016bb8:	eba2 020e 	sub.w	r2, r2, lr
 8016bbc:	eba9 0000 	sub.w	r0, r9, r0
 8016bc0:	436a      	muls	r2, r5
 8016bc2:	4348      	muls	r0, r1
 8016bc4:	4282      	cmp	r2, r0
 8016bc6:	9a02      	ldr	r2, [sp, #8]
 8016bc8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8016bcc:	445a      	add	r2, fp
 8016bce:	dc06      	bgt.n	8016bde <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8016bd0:	9b07      	ldr	r3, [sp, #28]
 8016bd2:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8016bd6:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8016bda:	44a4      	add	ip, r4
 8016bdc:	e75e      	b.n	8016a9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016bde:	9904      	ldr	r1, [sp, #16]
 8016be0:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8016be4:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8016be8:	4433      	add	r3, r6
 8016bea:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8016bee:	e5df      	b.n	80167b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016bf0:	9f06      	ldr	r7, [sp, #24]
 8016bf2:	9b04      	ldr	r3, [sp, #16]
 8016bf4:	1bc9      	subs	r1, r1, r7
 8016bf6:	fa0f f78a 	sxth.w	r7, sl
 8016bfa:	b289      	uxth	r1, r1
 8016bfc:	429f      	cmp	r7, r3
 8016bfe:	fa0f fe81 	sxth.w	lr, r1
 8016c02:	dd23      	ble.n	8016c4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8016c04:	9a05      	ldr	r2, [sp, #20]
 8016c06:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8016c0a:	9d07      	ldr	r5, [sp, #28]
 8016c0c:	ebaa 0202 	sub.w	r2, sl, r2
 8016c10:	b292      	uxth	r2, r2
 8016c12:	eba5 0a03 	sub.w	sl, r5, r3
 8016c16:	b214      	sxth	r4, r2
 8016c18:	eba9 0000 	sub.w	r0, r9, r0
 8016c1c:	9b02      	ldr	r3, [sp, #8]
 8016c1e:	fb0e f000 	mul.w	r0, lr, r0
 8016c22:	fb04 fa0a 	mul.w	sl, r4, sl
 8016c26:	00db      	lsls	r3, r3, #3
 8016c28:	4550      	cmp	r0, sl
 8016c2a:	445b      	add	r3, fp
 8016c2c:	db03      	blt.n	8016c36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8016c2e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8016c32:	4494      	add	ip, r2
 8016c34:	e732      	b.n	8016a9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016c36:	9a04      	ldr	r2, [sp, #16]
 8016c38:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8016c3c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8016c40:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8016c44:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016c48:	4431      	add	r1, r6
 8016c4a:	e75c      	b.n	8016b06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8016c4c:	9b08      	ldr	r3, [sp, #32]
 8016c4e:	eba3 0308 	sub.w	r3, r3, r8
 8016c52:	b29b      	uxth	r3, r3
 8016c54:	2d06      	cmp	r5, #6
 8016c56:	b218      	sxth	r0, r3
 8016c58:	d813      	bhi.n	8016c82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8016c5a:	9b07      	ldr	r3, [sp, #28]
 8016c5c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8016c60:	1c6b      	adds	r3, r5, #1
 8016c62:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8016c66:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8016c6a:	9b01      	ldr	r3, [sp, #4]
 8016c6c:	9901      	ldr	r1, [sp, #4]
 8016c6e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016c72:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8016c76:	805a      	strh	r2, [r3, #2]
 8016c78:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016c7a:	809a      	strh	r2, [r3, #4]
 8016c7c:	f8a3 e006 	strh.w	lr, [r3, #6]
 8016c80:	e75f      	b.n	8016b42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8016c82:	9c02      	ldr	r4, [sp, #8]
 8016c84:	4570      	cmp	r0, lr
 8016c86:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8016c8a:	db0d      	blt.n	8016ca8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8016c8c:	4431      	add	r1, r6
 8016c8e:	9b06      	ldr	r3, [sp, #24]
 8016c90:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8016c94:	b289      	uxth	r1, r1
 8016c96:	445c      	add	r4, fp
 8016c98:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016c9c:	4419      	add	r1, r3
 8016c9e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8016ca2:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8016ca6:	e583      	b.n	80167b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016ca8:	445c      	add	r4, fp
 8016caa:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8016cae:	e79b      	b.n	8016be8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8016cb0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8016cb4:	1e65      	subs	r5, r4, #1
 8016cb6:	b2ad      	uxth	r5, r5
 8016cb8:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8016cbc:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8016cc0:	42b5      	cmp	r5, r6
 8016cc2:	d044      	beq.n	8016d4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8016cc4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8016cc8:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8016ccc:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8016cd0:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8016cd4:	4282      	cmp	r2, r0
 8016cd6:	d11f      	bne.n	8016d18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8016cd8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8016cdc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8016ce0:	459c      	cmp	ip, r3
 8016ce2:	d119      	bne.n	8016d18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8016ce4:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8016ce8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8016cec:	19d8      	adds	r0, r3, r7
 8016cee:	b200      	sxth	r0, r0
 8016cf0:	4288      	cmp	r0, r1
 8016cf2:	d109      	bne.n	8016d08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8016cf4:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8016cf8:	4413      	add	r3, r2
 8016cfa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8016cfe:	4629      	mov	r1, r5
 8016d00:	9801      	ldr	r0, [sp, #4]
 8016d02:	f7ff fd2b 	bl	801675c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016d06:	e003      	b.n	8016d10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016d08:	4411      	add	r1, r2
 8016d0a:	b209      	sxth	r1, r1
 8016d0c:	42b9      	cmp	r1, r7
 8016d0e:	d0f3      	beq.n	8016cf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8016d10:	3d01      	subs	r5, #1
 8016d12:	b2ad      	uxth	r5, r5
 8016d14:	3c08      	subs	r4, #8
 8016d16:	e7d3      	b.n	8016cc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8016d18:	42b9      	cmp	r1, r7
 8016d1a:	d1f9      	bne.n	8016d10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016d1c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8016d20:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016d24:	4299      	cmp	r1, r3
 8016d26:	d1f3      	bne.n	8016d10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016d28:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8016d2c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8016d30:	181f      	adds	r7, r3, r0
 8016d32:	b23f      	sxth	r7, r7
 8016d34:	42ba      	cmp	r2, r7
 8016d36:	d105      	bne.n	8016d44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8016d38:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8016d3c:	440b      	add	r3, r1
 8016d3e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8016d42:	e7dc      	b.n	8016cfe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8016d44:	440a      	add	r2, r1
 8016d46:	b212      	sxth	r2, r2
 8016d48:	4290      	cmp	r0, r2
 8016d4a:	d1e1      	bne.n	8016d10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016d4c:	e7f6      	b.n	8016d3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8016d4e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8016d52:	2e07      	cmp	r6, #7
 8016d54:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8016d58:	d812      	bhi.n	8016d80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8016d5a:	1c75      	adds	r5, r6, #1
 8016d5c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8016d60:	9d01      	ldr	r5, [sp, #4]
 8016d62:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8016d66:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8016d6a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8016d6e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8016d72:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8016d76:	442c      	add	r4, r5
 8016d78:	8061      	strh	r1, [r4, #2]
 8016d7a:	80a2      	strh	r2, [r4, #4]
 8016d7c:	80e3      	strh	r3, [r4, #6]
 8016d7e:	e581      	b.n	8016884 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016d80:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8016d84:	3e01      	subs	r6, #1
 8016d86:	445c      	add	r4, fp
 8016d88:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8016d8c:	f04f 37ff 	mov.w	r7, #4294967295
 8016d90:	2500      	movs	r5, #0
 8016d92:	9305      	str	r3, [sp, #20]
 8016d94:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016d98:	9302      	str	r3, [sp, #8]
 8016d9a:	1e72      	subs	r2, r6, #1
 8016d9c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8016da0:	9304      	str	r3, [sp, #16]
 8016da2:	4691      	mov	r9, r2
 8016da4:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8016da8:	f1b9 3fff 	cmp.w	r9, #4294967295
 8016dac:	bf14      	ite	ne
 8016dae:	9905      	ldrne	r1, [sp, #20]
 8016db0:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8016db4:	6818      	ldr	r0, [r3, #0]
 8016db6:	9207      	str	r2, [sp, #28]
 8016db8:	bf18      	it	ne
 8016dba:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8016dbe:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8016dc2:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8016dc6:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8016dca:	9306      	str	r3, [sp, #24]
 8016dcc:	fb18 f801 	smulbb	r8, r8, r1
 8016dd0:	6859      	ldr	r1, [r3, #4]
 8016dd2:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8016dd6:	4671      	mov	r1, lr
 8016dd8:	a80c      	add	r0, sp, #48	; 0x30
 8016dda:	f7ff fafb 	bl	80163d4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016dde:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8016de2:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8016de6:	9b04      	ldr	r3, [sp, #16]
 8016de8:	9a02      	ldr	r2, [sp, #8]
 8016dea:	fb10 f001 	smulbb	r0, r0, r1
 8016dee:	fb02 8803 	mla	r8, r2, r3, r8
 8016df2:	eba0 0108 	sub.w	r1, r0, r8
 8016df6:	f04f 0c08 	mov.w	ip, #8
 8016dfa:	fb90 f0fc 	sdiv	r0, r0, ip
 8016dfe:	4288      	cmp	r0, r1
 8016e00:	dc20      	bgt.n	8016e44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8016e02:	4551      	cmp	r1, sl
 8016e04:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8016e08:	da03      	bge.n	8016e12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 8016e0a:	b1d9      	cbz	r1, 8016e44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8016e0c:	468a      	mov	sl, r1
 8016e0e:	464f      	mov	r7, r9
 8016e10:	4635      	mov	r5, r6
 8016e12:	f109 39ff 	add.w	r9, r9, #4294967295
 8016e16:	f119 0f02 	cmn.w	r9, #2
 8016e1a:	d1c5      	bne.n	8016da8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8016e1c:	4616      	mov	r6, r2
 8016e1e:	3201      	adds	r2, #1
 8016e20:	f1a4 0408 	sub.w	r4, r4, #8
 8016e24:	d1b6      	bne.n	8016d94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8016e26:	9b01      	ldr	r3, [sp, #4]
 8016e28:	b2ac      	uxth	r4, r5
 8016e2a:	00ed      	lsls	r5, r5, #3
 8016e2c:	1958      	adds	r0, r3, r5
 8016e2e:	1c7b      	adds	r3, r7, #1
 8016e30:	d10b      	bne.n	8016e4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8016e32:	4601      	mov	r1, r0
 8016e34:	9803      	ldr	r0, [sp, #12]
 8016e36:	f7ff facd 	bl	80163d4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016e3a:	4621      	mov	r1, r4
 8016e3c:	9801      	ldr	r0, [sp, #4]
 8016e3e:	f7ff fc8d 	bl	801675c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016e42:	e4b5      	b.n	80167b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016e44:	464f      	mov	r7, r9
 8016e46:	4635      	mov	r5, r6
 8016e48:	e7ed      	b.n	8016e26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8016e4a:	9b01      	ldr	r3, [sp, #4]
 8016e4c:	00ff      	lsls	r7, r7, #3
 8016e4e:	19d9      	adds	r1, r3, r7
 8016e50:	f7ff fac0 	bl	80163d4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016e54:	9b03      	ldr	r3, [sp, #12]
 8016e56:	cb03      	ldmia	r3!, {r0, r1}
 8016e58:	445f      	add	r7, fp
 8016e5a:	445d      	add	r5, fp
 8016e5c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8016e60:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8016e64:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8016e68:	9b03      	ldr	r3, [sp, #12]
 8016e6a:	6869      	ldr	r1, [r5, #4]
 8016e6c:	c303      	stmia	r3!, {r0, r1}
 8016e6e:	e7e4      	b.n	8016e3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08016e70 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8016e70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016e74:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8016e78:	b09b      	sub	sp, #108	; 0x6c
 8016e7a:	4604      	mov	r4, r0
 8016e7c:	4630      	mov	r0, r6
 8016e7e:	f7f9 fbe0 	bl	8010642 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016e82:	4605      	mov	r5, r0
 8016e84:	b948      	cbnz	r0, 8016e9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8016e86:	6823      	ldr	r3, [r4, #0]
 8016e88:	e896 0006 	ldmia.w	r6, {r1, r2}
 8016e8c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016e8e:	4620      	mov	r0, r4
 8016e90:	4798      	blx	r3
 8016e92:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8016e96:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8016e9a:	4bc6      	ldr	r3, [pc, #792]	; (80171b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8016e9c:	681b      	ldr	r3, [r3, #0]
 8016e9e:	2b00      	cmp	r3, #0
 8016ea0:	d03f      	beq.n	8016f22 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8016ea2:	4dc5      	ldr	r5, [pc, #788]	; (80171b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8016ea4:	4628      	mov	r0, r5
 8016ea6:	f7f9 fbcc 	bl	8010642 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016eaa:	4606      	mov	r6, r0
 8016eac:	2800      	cmp	r0, #0
 8016eae:	d138      	bne.n	8016f22 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8016eb0:	4628      	mov	r0, r5
 8016eb2:	f7ff f907 	bl	80160c4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016eb6:	6823      	ldr	r3, [r4, #0]
 8016eb8:	6829      	ldr	r1, [r5, #0]
 8016eba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016ebc:	686a      	ldr	r2, [r5, #4]
 8016ebe:	4620      	mov	r0, r4
 8016ec0:	4798      	blx	r3
 8016ec2:	802e      	strh	r6, [r5, #0]
 8016ec4:	806e      	strh	r6, [r5, #2]
 8016ec6:	80ae      	strh	r6, [r5, #4]
 8016ec8:	80ee      	strh	r6, [r5, #6]
 8016eca:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 8016ece:	4dbb      	ldr	r5, [pc, #748]	; (80171bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8016ed0:	4640      	mov	r0, r8
 8016ed2:	f7ff fbeb 	bl	80166ac <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016ed6:	882e      	ldrh	r6, [r5, #0]
 8016ed8:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8016edc:	4633      	mov	r3, r6
 8016ede:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8016ee2:	42bb      	cmp	r3, r7
 8016ee4:	d224      	bcs.n	8016f30 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8016ee6:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8016eea:	2907      	cmp	r1, #7
 8016eec:	d816      	bhi.n	8016f1c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8016eee:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8016ef2:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8016ef6:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8016efa:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8016efe:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8016f02:	1c4a      	adds	r2, r1, #1
 8016f04:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8016f08:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8016f0c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8016f10:	f8a2 a002 	strh.w	sl, [r2, #2]
 8016f14:	f8a2 e004 	strh.w	lr, [r2, #4]
 8016f18:	f8a2 c006 	strh.w	ip, [r2, #6]
 8016f1c:	3301      	adds	r3, #1
 8016f1e:	b29b      	uxth	r3, r3
 8016f20:	e7df      	b.n	8016ee2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8016f22:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8016f26:	2b00      	cmp	r3, #0
 8016f28:	d1cf      	bne.n	8016eca <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8016f2a:	b01b      	add	sp, #108	; 0x6c
 8016f2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016f30:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8016f34:	42b3      	cmp	r3, r6
 8016f36:	d90c      	bls.n	8016f52 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8016f38:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8016f3c:	6822      	ldr	r2, [r4, #0]
 8016f3e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8016f42:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8016f44:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8016f48:	4620      	mov	r0, r4
 8016f4a:	3601      	adds	r6, #1
 8016f4c:	47b8      	blx	r7
 8016f4e:	b2b6      	uxth	r6, r6
 8016f50:	e7ee      	b.n	8016f30 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8016f52:	4a9b      	ldr	r2, [pc, #620]	; (80171c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8016f54:	6813      	ldr	r3, [r2, #0]
 8016f56:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8016f5a:	2b01      	cmp	r3, #1
 8016f5c:	4691      	mov	r9, r2
 8016f5e:	f040 80e2 	bne.w	8017126 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8016f62:	8829      	ldrh	r1, [r5, #0]
 8016f64:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8016f68:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8016f6c:	33ae      	adds	r3, #174	; 0xae
 8016f6e:	2600      	movs	r6, #0
 8016f70:	428f      	cmp	r7, r1
 8016f72:	f103 0308 	add.w	r3, r3, #8
 8016f76:	dd0a      	ble.n	8016f8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8016f78:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8016f7c:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8016f80:	4402      	add	r2, r0
 8016f82:	b212      	sxth	r2, r2
 8016f84:	4296      	cmp	r6, r2
 8016f86:	bfb8      	it	lt
 8016f88:	4616      	movlt	r6, r2
 8016f8a:	3101      	adds	r1, #1
 8016f8c:	e7f0      	b.n	8016f70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8016f8e:	4b8d      	ldr	r3, [pc, #564]	; (80171c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8016f90:	f8df 922c 	ldr.w	r9, [pc, #556]	; 80171c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8016f94:	881b      	ldrh	r3, [r3, #0]
 8016f96:	2b0f      	cmp	r3, #15
 8016f98:	bf88      	it	hi
 8016f9a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8016f9e:	f04f 0300 	mov.w	r3, #0
 8016fa2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8016fa6:	bf98      	it	ls
 8016fa8:	f04f 0b01 	movls.w	fp, #1
 8016fac:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8016fb0:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8016fb4:	4b82      	ldr	r3, [pc, #520]	; (80171c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8016fb6:	4438      	add	r0, r7
 8016fb8:	b207      	sxth	r7, r0
 8016fba:	6818      	ldr	r0, [r3, #0]
 8016fbc:	42b7      	cmp	r7, r6
 8016fbe:	6803      	ldr	r3, [r0, #0]
 8016fc0:	f280 8083 	bge.w	80170ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8016fc4:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8016fc8:	4798      	blx	r3
 8016fca:	eb07 030b 	add.w	r3, r7, fp
 8016fce:	4298      	cmp	r0, r3
 8016fd0:	da07      	bge.n	8016fe2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8016fd2:	42b0      	cmp	r0, r6
 8016fd4:	da05      	bge.n	8016fe2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8016fd6:	4287      	cmp	r7, r0
 8016fd8:	dd6c      	ble.n	80170b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8016fda:	2f00      	cmp	r7, #0
 8016fdc:	dd6a      	ble.n	80170b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8016fde:	4630      	mov	r0, r6
 8016fe0:	e004      	b.n	8016fec <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8016fe2:	4287      	cmp	r7, r0
 8016fe4:	dcfb      	bgt.n	8016fde <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8016fe6:	42b0      	cmp	r0, r6
 8016fe8:	bfa8      	it	ge
 8016fea:	4630      	movge	r0, r6
 8016fec:	4b76      	ldr	r3, [pc, #472]	; (80171c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8016fee:	f8ad 7016 	strh.w	r7, [sp, #22]
 8016ff2:	1bc0      	subs	r0, r0, r7
 8016ff4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016ff8:	882f      	ldrh	r7, [r5, #0]
 8016ffa:	f8ad 3018 	strh.w	r3, [sp, #24]
 8016ffe:	2200      	movs	r2, #0
 8017000:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017004:	f8ad 001a 	strh.w	r0, [sp, #26]
 8017008:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801700c:	42bb      	cmp	r3, r7
 801700e:	d9cd      	bls.n	8016fac <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8017010:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8017014:	ab07      	add	r3, sp, #28
 8017016:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801701a:	6851      	ldr	r1, [r2, #4]
 801701c:	c303      	stmia	r3!, {r0, r1}
 801701e:	a905      	add	r1, sp, #20
 8017020:	a807      	add	r0, sp, #28
 8017022:	f7ff f93e 	bl	80162a2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017026:	2800      	cmp	r0, #0
 8017028:	d04c      	beq.n	80170c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801702a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801702e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8017032:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8017036:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801703a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801703e:	9302      	str	r3, [sp, #8]
 8017040:	4686      	mov	lr, r0
 8017042:	4290      	cmp	r0, r2
 8017044:	4450      	add	r0, sl
 8017046:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801704a:	bfb8      	it	lt
 801704c:	4696      	movlt	lr, r2
 801704e:	4452      	add	r2, sl
 8017050:	4299      	cmp	r1, r3
 8017052:	b280      	uxth	r0, r0
 8017054:	b292      	uxth	r2, r2
 8017056:	468c      	mov	ip, r1
 8017058:	fa0f fa82 	sxth.w	sl, r2
 801705c:	bfb8      	it	lt
 801705e:	469c      	movlt	ip, r3
 8017060:	b203      	sxth	r3, r0
 8017062:	4553      	cmp	r3, sl
 8017064:	bfb8      	it	lt
 8017066:	4602      	movlt	r2, r0
 8017068:	eba2 020e 	sub.w	r2, r2, lr
 801706c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8017070:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8017074:	9b02      	ldr	r3, [sp, #8]
 8017076:	f8ad e01c 	strh.w	lr, [sp, #28]
 801707a:	4411      	add	r1, r2
 801707c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8017080:	f8ad c01e 	strh.w	ip, [sp, #30]
 8017084:	4413      	add	r3, r2
 8017086:	b289      	uxth	r1, r1
 8017088:	b29b      	uxth	r3, r3
 801708a:	b208      	sxth	r0, r1
 801708c:	b21a      	sxth	r2, r3
 801708e:	4290      	cmp	r0, r2
 8017090:	bfb8      	it	lt
 8017092:	460b      	movlt	r3, r1
 8017094:	eba3 030c 	sub.w	r3, r3, ip
 8017098:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801709c:	a807      	add	r0, sp, #28
 801709e:	f7f9 fad0 	bl	8010642 <_ZNK8touchgfx4Rect7isEmptyEv>
 80170a2:	b920      	cbnz	r0, 80170ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 80170a4:	6823      	ldr	r3, [r4, #0]
 80170a6:	a907      	add	r1, sp, #28
 80170a8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80170aa:	4620      	mov	r0, r4
 80170ac:	4798      	blx	r3
 80170ae:	3701      	adds	r7, #1
 80170b0:	b2bf      	uxth	r7, r7
 80170b2:	e7a9      	b.n	8017008 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 80170b4:	f8d9 0000 	ldr.w	r0, [r9]
 80170b8:	6803      	ldr	r3, [r0, #0]
 80170ba:	2101      	movs	r1, #1
 80170bc:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80170c0:	4798      	blx	r3
 80170c2:	e773      	b.n	8016fac <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80170c4:	e9cd 0007 	strd	r0, r0, [sp, #28]
 80170c8:	e7e8      	b.n	801709c <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 80170ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80170cc:	4798      	blx	r3
 80170ce:	4b3f      	ldr	r3, [pc, #252]	; (80171cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80170d0:	781b      	ldrb	r3, [r3, #0]
 80170d2:	2b00      	cmp	r3, #0
 80170d4:	f43f af29 	beq.w	8016f2a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80170d8:	2300      	movs	r3, #0
 80170da:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 80170de:	882b      	ldrh	r3, [r5, #0]
 80170e0:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 80170e4:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80170e8:	42ab      	cmp	r3, r5
 80170ea:	f4bf af1e 	bcs.w	8016f2a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80170ee:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 80170f2:	2907      	cmp	r1, #7
 80170f4:	d814      	bhi.n	8017120 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 80170f6:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 80170fa:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 80170fe:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8017102:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8017106:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801710a:	1c4a      	adds	r2, r1, #1
 801710c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8017110:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8017114:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8017118:	f8a2 c002 	strh.w	ip, [r2, #2]
 801711c:	8097      	strh	r7, [r2, #4]
 801711e:	80d6      	strh	r6, [r2, #6]
 8017120:	3301      	adds	r3, #1
 8017122:	b29b      	uxth	r3, r3
 8017124:	e7e0      	b.n	80170e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8017126:	2b02      	cmp	r3, #2
 8017128:	f040 8133 	bne.w	8017392 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801712c:	4b28      	ldr	r3, [pc, #160]	; (80171d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801712e:	781b      	ldrb	r3, [r3, #0]
 8017130:	2b01      	cmp	r3, #1
 8017132:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8017136:	f000 8098 	beq.w	801726a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801713a:	882a      	ldrh	r2, [r5, #0]
 801713c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8017140:	3201      	adds	r2, #1
 8017142:	b292      	uxth	r2, r2
 8017144:	2900      	cmp	r1, #0
 8017146:	d0c2      	beq.n	80170ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8017148:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 801714c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8017150:	441e      	add	r6, r3
 8017152:	b236      	sxth	r6, r6
 8017154:	4694      	mov	ip, r2
 8017156:	f04f 0900 	mov.w	r9, #0
 801715a:	fa1f f38c 	uxth.w	r3, ip
 801715e:	4299      	cmp	r1, r3
 8017160:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8017164:	f240 80bf 	bls.w	80172e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8017168:	4427      	add	r7, r4
 801716a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 801716e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8017172:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8017176:	4283      	cmp	r3, r0
 8017178:	f340 80a1 	ble.w	80172be <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 801717c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8017180:	4406      	add	r6, r0
 8017182:	b236      	sxth	r6, r6
 8017184:	429e      	cmp	r6, r3
 8017186:	bfa8      	it	ge
 8017188:	461e      	movge	r6, r3
 801718a:	46e1      	mov	r9, ip
 801718c:	f10c 0c01 	add.w	ip, ip, #1
 8017190:	e7e3      	b.n	801715a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8017192:	d10a      	bne.n	80171aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8017194:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8017198:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 801719c:	4562      	cmp	r2, ip
 801719e:	bfb8      	it	lt
 80171a0:	4662      	movlt	r2, ip
 80171a2:	4288      	cmp	r0, r1
 80171a4:	bfb8      	it	lt
 80171a6:	461f      	movlt	r7, r3
 80171a8:	e087      	b.n	80172ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80171aa:	428a      	cmp	r2, r1
 80171ac:	bfb8      	it	lt
 80171ae:	460a      	movlt	r2, r1
 80171b0:	e083      	b.n	80172ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80171b2:	bf00      	nop
 80171b4:	2001385c 	.word	0x2001385c
 80171b8:	20013868 	.word	0x20013868
 80171bc:	20000088 	.word	0x20000088
 80171c0:	2001381c 	.word	0x2001381c
 80171c4:	20013812 	.word	0x20013812
 80171c8:	20013810 	.word	0x20013810
 80171cc:	2001381a 	.word	0x2001381a
 80171d0:	20013814 	.word	0x20013814
 80171d4:	19a1      	adds	r1, r4, r6
 80171d6:	ab07      	add	r3, sp, #28
 80171d8:	f851 0fac 	ldr.w	r0, [r1, #172]!
 80171dc:	6849      	ldr	r1, [r1, #4]
 80171de:	c303      	stmia	r3!, {r0, r1}
 80171e0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80171e4:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80171e8:	2b13      	cmp	r3, #19
 80171ea:	bfd8      	it	le
 80171ec:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 80171f0:	f8ad 201c 	strh.w	r2, [sp, #28]
 80171f4:	440b      	add	r3, r1
 80171f6:	1a9b      	subs	r3, r3, r2
 80171f8:	a807      	add	r0, sp, #28
 80171fa:	f8ad 3020 	strh.w	r3, [sp, #32]
 80171fe:	f7fe ff7b 	bl	80160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017202:	a807      	add	r0, sp, #28
 8017204:	f7f9 fa1d 	bl	8010642 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017208:	bb78      	cbnz	r0, 801726a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801720a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801720e:	f8d9 0000 	ldr.w	r0, [r9]
 8017212:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8017216:	f8d0 e000 	ldr.w	lr, [r0]
 801721a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801721e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8017222:	f1bc 0f14 	cmp.w	ip, #20
 8017226:	bfa8      	it	ge
 8017228:	f04f 0c14 	movge.w	ip, #20
 801722c:	fa1f fc8c 	uxth.w	ip, ip
 8017230:	f8cd c000 	str.w	ip, [sp]
 8017234:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8017238:	47d8      	blx	fp
 801723a:	4683      	mov	fp, r0
 801723c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8017240:	a807      	add	r0, sp, #28
 8017242:	f7fe ff3f 	bl	80160c4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8017246:	6823      	ldr	r3, [r4, #0]
 8017248:	4426      	add	r6, r4
 801724a:	4620      	mov	r0, r4
 801724c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801724e:	a907      	add	r1, sp, #28
 8017250:	4798      	blx	r3
 8017252:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8017256:	eba0 000b 	sub.w	r0, r0, fp
 801725a:	b200      	sxth	r0, r0
 801725c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8017260:	b918      	cbnz	r0, 801726a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8017262:	b2b9      	uxth	r1, r7
 8017264:	4650      	mov	r0, sl
 8017266:	f7ff fa79 	bl	801675c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801726a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 801726e:	f1bb 0f00 	cmp.w	fp, #0
 8017272:	f43f af2c 	beq.w	80170ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8017276:	882b      	ldrh	r3, [r5, #0]
 8017278:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 801727c:	3301      	adds	r3, #1
 801727e:	b29b      	uxth	r3, r3
 8017280:	2700      	movs	r7, #0
 8017282:	b299      	uxth	r1, r3
 8017284:	458b      	cmp	fp, r1
 8017286:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 801728a:	d9a3      	bls.n	80171d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 801728c:	4426      	add	r6, r4
 801728e:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8017292:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8017296:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801729a:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 801729e:	4408      	add	r0, r1
 80172a0:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 80172a4:	4461      	add	r1, ip
 80172a6:	b200      	sxth	r0, r0
 80172a8:	b209      	sxth	r1, r1
 80172aa:	4288      	cmp	r0, r1
 80172ac:	f6bf af71 	bge.w	8017192 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 80172b0:	4584      	cmp	ip, r0
 80172b2:	4662      	mov	r2, ip
 80172b4:	461f      	mov	r7, r3
 80172b6:	bfb8      	it	lt
 80172b8:	4602      	movlt	r2, r0
 80172ba:	3301      	adds	r3, #1
 80172bc:	e7e1      	b.n	8017282 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 80172be:	d10e      	bne.n	80172de <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 80172c0:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 80172c4:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 80172c8:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 80172cc:	4473      	add	r3, lr
 80172ce:	b21b      	sxth	r3, r3
 80172d0:	429e      	cmp	r6, r3
 80172d2:	bfa8      	it	ge
 80172d4:	461e      	movge	r6, r3
 80172d6:	4287      	cmp	r7, r0
 80172d8:	bfb8      	it	lt
 80172da:	46e1      	movlt	r9, ip
 80172dc:	e756      	b.n	801718c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80172de:	4286      	cmp	r6, r0
 80172e0:	bfa8      	it	ge
 80172e2:	4606      	movge	r6, r0
 80172e4:	e752      	b.n	801718c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80172e6:	eb0a 0007 	add.w	r0, sl, r7
 80172ea:	4427      	add	r7, r4
 80172ec:	e9cd 2102 	strd	r2, r1, [sp, #8]
 80172f0:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 80172f4:	f1bb 0f13 	cmp.w	fp, #19
 80172f8:	bfde      	ittt	le
 80172fa:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 80172fe:	445e      	addle	r6, fp
 8017300:	b236      	sxthle	r6, r6
 8017302:	f7f9 f99e 	bl	8010642 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017306:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801730a:	2800      	cmp	r0, #0
 801730c:	f47f af1a 	bne.w	8017144 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8017310:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8017314:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8017318:	482a      	ldr	r0, [pc, #168]	; (80173c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 801731a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 801731e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8017322:	6800      	ldr	r0, [r0, #0]
 8017324:	f8ad 101c 	strh.w	r1, [sp, #28]
 8017328:	1ab6      	subs	r6, r6, r2
 801732a:	2e14      	cmp	r6, #20
 801732c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8017330:	f8ad 3020 	strh.w	r3, [sp, #32]
 8017334:	bfa8      	it	ge
 8017336:	2614      	movge	r6, #20
 8017338:	f8d0 c000 	ldr.w	ip, [r0]
 801733c:	b2b6      	uxth	r6, r6
 801733e:	fa1f fb8b 	uxth.w	fp, fp
 8017342:	455e      	cmp	r6, fp
 8017344:	bf94      	ite	ls
 8017346:	9600      	strls	r6, [sp, #0]
 8017348:	f8cd b000 	strhi.w	fp, [sp]
 801734c:	b292      	uxth	r2, r2
 801734e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8017352:	b29b      	uxth	r3, r3
 8017354:	b289      	uxth	r1, r1
 8017356:	47b0      	blx	r6
 8017358:	6823      	ldr	r3, [r4, #0]
 801735a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801735e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017360:	a907      	add	r1, sp, #28
 8017362:	4620      	mov	r0, r4
 8017364:	4798      	blx	r3
 8017366:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801736a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 801736e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8017372:	1a5b      	subs	r3, r3, r1
 8017374:	440a      	add	r2, r1
 8017376:	b21b      	sxth	r3, r3
 8017378:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 801737c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8017380:	2b00      	cmp	r3, #0
 8017382:	f47f aeda 	bne.w	801713a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8017386:	fa1f f189 	uxth.w	r1, r9
 801738a:	4650      	mov	r0, sl
 801738c:	f7ff f9e6 	bl	801675c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017390:	e6d3      	b.n	801713a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8017392:	882e      	ldrh	r6, [r5, #0]
 8017394:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8017398:	42b3      	cmp	r3, r6
 801739a:	f67f ae98 	bls.w	80170ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801739e:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 80173a2:	ab07      	add	r3, sp, #28
 80173a4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80173a8:	6851      	ldr	r1, [r2, #4]
 80173aa:	c303      	stmia	r3!, {r0, r1}
 80173ac:	a807      	add	r0, sp, #28
 80173ae:	f7f9 f948 	bl	8010642 <_ZNK8touchgfx4Rect7isEmptyEv>
 80173b2:	b920      	cbnz	r0, 80173be <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 80173b4:	6823      	ldr	r3, [r4, #0]
 80173b6:	a907      	add	r1, sp, #28
 80173b8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80173ba:	4620      	mov	r0, r4
 80173bc:	4798      	blx	r3
 80173be:	3601      	adds	r6, #1
 80173c0:	b2b6      	uxth	r6, r6
 80173c2:	e7e7      	b.n	8017394 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 80173c4:	2001381c 	.word	0x2001381c

080173c8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80173c8:	4b03      	ldr	r3, [pc, #12]	; (80173d8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 80173ca:	2200      	movs	r2, #0
 80173cc:	801a      	strh	r2, [r3, #0]
 80173ce:	805a      	strh	r2, [r3, #2]
 80173d0:	809a      	strh	r2, [r3, #4]
 80173d2:	80da      	strh	r2, [r3, #6]
 80173d4:	4770      	bx	lr
 80173d6:	bf00      	nop
 80173d8:	20013868 	.word	0x20013868

080173dc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80173dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80173e0:	4606      	mov	r6, r0
 80173e2:	b09d      	sub	sp, #116	; 0x74
 80173e4:	a803      	add	r0, sp, #12
 80173e6:	4614      	mov	r4, r2
 80173e8:	468a      	mov	sl, r1
 80173ea:	461d      	mov	r5, r3
 80173ec:	f000 ff08 	bl	8018200 <_ZN8touchgfx12TextProviderC1Ev>
 80173f0:	6833      	ldr	r3, [r6, #0]
 80173f2:	4630      	mov	r0, r6
 80173f4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80173f6:	4798      	blx	r3
 80173f8:	6833      	ldr	r3, [r6, #0]
 80173fa:	4607      	mov	r7, r0
 80173fc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80173fe:	4630      	mov	r0, r6
 8017400:	4798      	blx	r3
 8017402:	462a      	mov	r2, r5
 8017404:	9000      	str	r0, [sp, #0]
 8017406:	4621      	mov	r1, r4
 8017408:	463b      	mov	r3, r7
 801740a:	a803      	add	r0, sp, #12
 801740c:	f000 ff53 	bl	80182b6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017410:	2500      	movs	r5, #0
 8017412:	462c      	mov	r4, r5
 8017414:	46a9      	mov	r9, r5
 8017416:	46a8      	mov	r8, r5
 8017418:	f242 0b0b 	movw	fp, #8203	; 0x200b
 801741c:	2300      	movs	r3, #0
 801741e:	9302      	str	r3, [sp, #8]
 8017420:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017424:	429c      	cmp	r4, r3
 8017426:	d002      	beq.n	801742e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8017428:	455c      	cmp	r4, fp
 801742a:	bf18      	it	ne
 801742c:	4625      	movne	r5, r4
 801742e:	ab02      	add	r3, sp, #8
 8017430:	4632      	mov	r2, r6
 8017432:	4651      	mov	r1, sl
 8017434:	a803      	add	r0, sp, #12
 8017436:	f001 fa41 	bl	80188bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801743a:	4604      	mov	r4, r0
 801743c:	b108      	cbz	r0, 8017442 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801743e:	280a      	cmp	r0, #10
 8017440:	d10a      	bne.n	8017458 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8017442:	45c1      	cmp	r9, r8
 8017444:	bf38      	it	cc
 8017446:	46c1      	movcc	r9, r8
 8017448:	f04f 0800 	mov.w	r8, #0
 801744c:	2c00      	cmp	r4, #0
 801744e:	d1e5      	bne.n	801741c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8017450:	4648      	mov	r0, r9
 8017452:	b01d      	add	sp, #116	; 0x74
 8017454:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017458:	9a02      	ldr	r2, [sp, #8]
 801745a:	2a00      	cmp	r2, #0
 801745c:	d0de      	beq.n	801741c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801745e:	7b57      	ldrb	r7, [r2, #13]
 8017460:	6833      	ldr	r3, [r6, #0]
 8017462:	8894      	ldrh	r4, [r2, #4]
 8017464:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017466:	007f      	lsls	r7, r7, #1
 8017468:	f407 7080 	and.w	r0, r7, #256	; 0x100
 801746c:	7a97      	ldrb	r7, [r2, #10]
 801746e:	4629      	mov	r1, r5
 8017470:	4307      	orrs	r7, r0
 8017472:	4630      	mov	r0, r6
 8017474:	4798      	blx	r3
 8017476:	4438      	add	r0, r7
 8017478:	4480      	add	r8, r0
 801747a:	fa1f f888 	uxth.w	r8, r8
 801747e:	e7e5      	b.n	801744c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08017480 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8017480:	b508      	push	{r3, lr}
 8017482:	6803      	ldr	r3, [r0, #0]
 8017484:	68db      	ldr	r3, [r3, #12]
 8017486:	4798      	blx	r3
 8017488:	b128      	cbz	r0, 8017496 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801748a:	7b43      	ldrb	r3, [r0, #13]
 801748c:	7a80      	ldrb	r0, [r0, #10]
 801748e:	005b      	lsls	r3, r3, #1
 8017490:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017494:	4318      	orrs	r0, r3
 8017496:	bd08      	pop	{r3, pc}

08017498 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8017498:	b40e      	push	{r1, r2, r3}
 801749a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801749c:	b09e      	sub	sp, #120	; 0x78
 801749e:	ab23      	add	r3, sp, #140	; 0x8c
 80174a0:	4605      	mov	r5, r0
 80174a2:	f853 4b04 	ldr.w	r4, [r3], #4
 80174a6:	9303      	str	r3, [sp, #12]
 80174a8:	a805      	add	r0, sp, #20
 80174aa:	f000 fea9 	bl	8018200 <_ZN8touchgfx12TextProviderC1Ev>
 80174ae:	682b      	ldr	r3, [r5, #0]
 80174b0:	4628      	mov	r0, r5
 80174b2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80174b4:	4798      	blx	r3
 80174b6:	682b      	ldr	r3, [r5, #0]
 80174b8:	4606      	mov	r6, r0
 80174ba:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80174bc:	4628      	mov	r0, r5
 80174be:	4798      	blx	r3
 80174c0:	4633      	mov	r3, r6
 80174c2:	ae1e      	add	r6, sp, #120	; 0x78
 80174c4:	4621      	mov	r1, r4
 80174c6:	9000      	str	r0, [sp, #0]
 80174c8:	9a03      	ldr	r2, [sp, #12]
 80174ca:	2400      	movs	r4, #0
 80174cc:	a805      	add	r0, sp, #20
 80174ce:	f000 fef2 	bl	80182b6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80174d2:	f846 4d68 	str.w	r4, [r6, #-104]!
 80174d6:	462a      	mov	r2, r5
 80174d8:	4633      	mov	r3, r6
 80174da:	4621      	mov	r1, r4
 80174dc:	a805      	add	r0, sp, #20
 80174de:	f001 f9ed 	bl	80188bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80174e2:	b1f0      	cbz	r0, 8017522 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 80174e4:	280a      	cmp	r0, #10
 80174e6:	d018      	beq.n	801751a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80174e8:	9f04      	ldr	r7, [sp, #16]
 80174ea:	b1b7      	cbz	r7, 801751a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80174ec:	7b78      	ldrb	r0, [r7, #13]
 80174ee:	7a3b      	ldrb	r3, [r7, #8]
 80174f0:	88ea      	ldrh	r2, [r5, #6]
 80174f2:	00c1      	lsls	r1, r0, #3
 80174f4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80174f8:	4319      	orrs	r1, r3
 80174fa:	0643      	lsls	r3, r0, #25
 80174fc:	bf44      	itt	mi
 80174fe:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8017502:	b219      	sxthmi	r1, r3
 8017504:	0100      	lsls	r0, r0, #4
 8017506:	79fb      	ldrb	r3, [r7, #7]
 8017508:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801750c:	4303      	orrs	r3, r0
 801750e:	4413      	add	r3, r2
 8017510:	1a5b      	subs	r3, r3, r1
 8017512:	b21b      	sxth	r3, r3
 8017514:	429c      	cmp	r4, r3
 8017516:	bfb8      	it	lt
 8017518:	461c      	movlt	r4, r3
 801751a:	4633      	mov	r3, r6
 801751c:	462a      	mov	r2, r5
 801751e:	2100      	movs	r1, #0
 8017520:	e7dc      	b.n	80174dc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8017522:	b2a0      	uxth	r0, r4
 8017524:	b01e      	add	sp, #120	; 0x78
 8017526:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801752a:	b003      	add	sp, #12
 801752c:	4770      	bx	lr

0801752e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801752e:	7a43      	ldrb	r3, [r0, #9]
 8017530:	8880      	ldrh	r0, [r0, #4]
 8017532:	4418      	add	r0, r3
 8017534:	b280      	uxth	r0, r0
 8017536:	4770      	bx	lr

08017538 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8017538:	6803      	ldr	r3, [r0, #0]
 801753a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801753c:	4718      	bx	r3

0801753e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801753e:	b40e      	push	{r1, r2, r3}
 8017540:	b570      	push	{r4, r5, r6, lr}
 8017542:	b09d      	sub	sp, #116	; 0x74
 8017544:	ab21      	add	r3, sp, #132	; 0x84
 8017546:	4604      	mov	r4, r0
 8017548:	f853 5b04 	ldr.w	r5, [r3], #4
 801754c:	9302      	str	r3, [sp, #8]
 801754e:	a803      	add	r0, sp, #12
 8017550:	f000 fe56 	bl	8018200 <_ZN8touchgfx12TextProviderC1Ev>
 8017554:	6823      	ldr	r3, [r4, #0]
 8017556:	4620      	mov	r0, r4
 8017558:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801755a:	4798      	blx	r3
 801755c:	6823      	ldr	r3, [r4, #0]
 801755e:	4606      	mov	r6, r0
 8017560:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017562:	4620      	mov	r0, r4
 8017564:	4798      	blx	r3
 8017566:	4633      	mov	r3, r6
 8017568:	9000      	str	r0, [sp, #0]
 801756a:	9a02      	ldr	r2, [sp, #8]
 801756c:	4629      	mov	r1, r5
 801756e:	a803      	add	r0, sp, #12
 8017570:	f000 fea1 	bl	80182b6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017574:	a803      	add	r0, sp, #12
 8017576:	f001 fa6f 	bl	8018a58 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801757a:	2401      	movs	r4, #1
 801757c:	b2a3      	uxth	r3, r4
 801757e:	b140      	cbz	r0, 8017592 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8017580:	280a      	cmp	r0, #10
 8017582:	bf08      	it	eq
 8017584:	3301      	addeq	r3, #1
 8017586:	a803      	add	r0, sp, #12
 8017588:	bf08      	it	eq
 801758a:	b21c      	sxtheq	r4, r3
 801758c:	f001 fa64 	bl	8018a58 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8017590:	e7f4      	b.n	801757c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8017592:	4618      	mov	r0, r3
 8017594:	b01d      	add	sp, #116	; 0x74
 8017596:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801759a:	b003      	add	sp, #12
 801759c:	4770      	bx	lr

0801759e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801759e:	b40e      	push	{r1, r2, r3}
 80175a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80175a2:	b09e      	sub	sp, #120	; 0x78
 80175a4:	ab23      	add	r3, sp, #140	; 0x8c
 80175a6:	4604      	mov	r4, r0
 80175a8:	f853 5b04 	ldr.w	r5, [r3], #4
 80175ac:	9303      	str	r3, [sp, #12]
 80175ae:	a805      	add	r0, sp, #20
 80175b0:	f000 fe26 	bl	8018200 <_ZN8touchgfx12TextProviderC1Ev>
 80175b4:	6823      	ldr	r3, [r4, #0]
 80175b6:	4620      	mov	r0, r4
 80175b8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80175ba:	4798      	blx	r3
 80175bc:	6823      	ldr	r3, [r4, #0]
 80175be:	4606      	mov	r6, r0
 80175c0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80175c2:	4620      	mov	r0, r4
 80175c4:	4798      	blx	r3
 80175c6:	4633      	mov	r3, r6
 80175c8:	4629      	mov	r1, r5
 80175ca:	9000      	str	r0, [sp, #0]
 80175cc:	9a03      	ldr	r2, [sp, #12]
 80175ce:	a805      	add	r0, sp, #20
 80175d0:	ad1e      	add	r5, sp, #120	; 0x78
 80175d2:	f000 fe70 	bl	80182b6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80175d6:	2100      	movs	r1, #0
 80175d8:	f845 1d68 	str.w	r1, [r5, #-104]!
 80175dc:	4622      	mov	r2, r4
 80175de:	462b      	mov	r3, r5
 80175e0:	a805      	add	r0, sp, #20
 80175e2:	f001 f96b 	bl	80188bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80175e6:	f647 76ff 	movw	r6, #32767	; 0x7fff
 80175ea:	b1d8      	cbz	r0, 8017624 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 80175ec:	280a      	cmp	r0, #10
 80175ee:	d012      	beq.n	8017616 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80175f0:	9804      	ldr	r0, [sp, #16]
 80175f2:	b180      	cbz	r0, 8017616 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80175f4:	7b47      	ldrb	r7, [r0, #13]
 80175f6:	88e2      	ldrh	r2, [r4, #6]
 80175f8:	00fb      	lsls	r3, r7, #3
 80175fa:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80175fe:	7a03      	ldrb	r3, [r0, #8]
 8017600:	430b      	orrs	r3, r1
 8017602:	0679      	lsls	r1, r7, #25
 8017604:	bf44      	itt	mi
 8017606:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801760a:	b21b      	sxthmi	r3, r3
 801760c:	1ad3      	subs	r3, r2, r3
 801760e:	b21b      	sxth	r3, r3
 8017610:	429e      	cmp	r6, r3
 8017612:	bfa8      	it	ge
 8017614:	461e      	movge	r6, r3
 8017616:	462b      	mov	r3, r5
 8017618:	4622      	mov	r2, r4
 801761a:	2100      	movs	r1, #0
 801761c:	a805      	add	r0, sp, #20
 801761e:	f001 f94d 	bl	80188bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017622:	e7e2      	b.n	80175ea <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8017624:	4630      	mov	r0, r6
 8017626:	b01e      	add	sp, #120	; 0x78
 8017628:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801762c:	b003      	add	sp, #12
 801762e:	4770      	bx	lr

08017630 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8017630:	b513      	push	{r0, r1, r4, lr}
 8017632:	6803      	ldr	r3, [r0, #0]
 8017634:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8017638:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801763c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017640:	2400      	movs	r4, #0
 8017642:	9400      	str	r4, [sp, #0]
 8017644:	f8ad 2006 	strh.w	r2, [sp, #6]
 8017648:	691b      	ldr	r3, [r3, #16]
 801764a:	4669      	mov	r1, sp
 801764c:	4798      	blx	r3
 801764e:	b002      	add	sp, #8
 8017650:	bd10      	pop	{r4, pc}

08017652 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8017652:	b538      	push	{r3, r4, r5, lr}
 8017654:	680b      	ldr	r3, [r1, #0]
 8017656:	460c      	mov	r4, r1
 8017658:	68db      	ldr	r3, [r3, #12]
 801765a:	4605      	mov	r5, r0
 801765c:	4798      	blx	r3
 801765e:	6823      	ldr	r3, [r4, #0]
 8017660:	4620      	mov	r0, r4
 8017662:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017664:	4629      	mov	r1, r5
 8017666:	4798      	blx	r3
 8017668:	4628      	mov	r0, r5
 801766a:	bd38      	pop	{r3, r4, r5, pc}

0801766c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801766c:	b410      	push	{r4}
 801766e:	880a      	ldrh	r2, [r1, #0]
 8017670:	8884      	ldrh	r4, [r0, #4]
 8017672:	4422      	add	r2, r4
 8017674:	800a      	strh	r2, [r1, #0]
 8017676:	88c4      	ldrh	r4, [r0, #6]
 8017678:	884a      	ldrh	r2, [r1, #2]
 801767a:	4422      	add	r2, r4
 801767c:	804a      	strh	r2, [r1, #2]
 801767e:	6940      	ldr	r0, [r0, #20]
 8017680:	b120      	cbz	r0, 801768c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8017682:	6803      	ldr	r3, [r0, #0]
 8017684:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017688:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801768a:	4718      	bx	r3
 801768c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017690:	4770      	bx	lr

08017692 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8017692:	b570      	push	{r4, r5, r6, lr}
 8017694:	8882      	ldrh	r2, [r0, #4]
 8017696:	880b      	ldrh	r3, [r1, #0]
 8017698:	4413      	add	r3, r2
 801769a:	800b      	strh	r3, [r1, #0]
 801769c:	88c2      	ldrh	r2, [r0, #6]
 801769e:	884b      	ldrh	r3, [r1, #2]
 80176a0:	460c      	mov	r4, r1
 80176a2:	4413      	add	r3, r2
 80176a4:	804b      	strh	r3, [r1, #2]
 80176a6:	4605      	mov	r5, r0
 80176a8:	1d01      	adds	r1, r0, #4
 80176aa:	4620      	mov	r0, r4
 80176ac:	f7f8 ff86 	bl	80105bc <_ZN8touchgfx4RectaNERKS0_>
 80176b0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80176b4:	2b00      	cmp	r3, #0
 80176b6:	dd0b      	ble.n	80176d0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80176b8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80176bc:	2b00      	cmp	r3, #0
 80176be:	dd07      	ble.n	80176d0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80176c0:	6968      	ldr	r0, [r5, #20]
 80176c2:	b128      	cbz	r0, 80176d0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80176c4:	6803      	ldr	r3, [r0, #0]
 80176c6:	4621      	mov	r1, r4
 80176c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80176ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80176ce:	4718      	bx	r3
 80176d0:	bd70      	pop	{r4, r5, r6, pc}
	...

080176d4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 80176d4:	b570      	push	{r4, r5, r6, lr}
 80176d6:	8882      	ldrh	r2, [r0, #4]
 80176d8:	880b      	ldrh	r3, [r1, #0]
 80176da:	4413      	add	r3, r2
 80176dc:	800b      	strh	r3, [r1, #0]
 80176de:	88c2      	ldrh	r2, [r0, #6]
 80176e0:	884b      	ldrh	r3, [r1, #2]
 80176e2:	460c      	mov	r4, r1
 80176e4:	4413      	add	r3, r2
 80176e6:	804b      	strh	r3, [r1, #2]
 80176e8:	4605      	mov	r5, r0
 80176ea:	1d01      	adds	r1, r0, #4
 80176ec:	4620      	mov	r0, r4
 80176ee:	f7f8 ff65 	bl	80105bc <_ZN8touchgfx4RectaNERKS0_>
 80176f2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80176f6:	2b00      	cmp	r3, #0
 80176f8:	dd19      	ble.n	801772e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80176fa:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80176fe:	2b00      	cmp	r3, #0
 8017700:	dd15      	ble.n	801772e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017702:	6968      	ldr	r0, [r5, #20]
 8017704:	b128      	cbz	r0, 8017712 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8017706:	6803      	ldr	r3, [r0, #0]
 8017708:	4621      	mov	r1, r4
 801770a:	691b      	ldr	r3, [r3, #16]
 801770c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017710:	4718      	bx	r3
 8017712:	4b07      	ldr	r3, [pc, #28]	; (8017730 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8017714:	681b      	ldr	r3, [r3, #0]
 8017716:	3304      	adds	r3, #4
 8017718:	429d      	cmp	r5, r3
 801771a:	d108      	bne.n	801772e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801771c:	f7fe fea0 	bl	8016460 <_ZN8touchgfx11Application11getInstanceEv>
 8017720:	6803      	ldr	r3, [r0, #0]
 8017722:	6821      	ldr	r1, [r4, #0]
 8017724:	6862      	ldr	r2, [r4, #4]
 8017726:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8017728:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801772c:	4718      	bx	r3
 801772e:	bd70      	pop	{r4, r5, r6, pc}
 8017730:	20013860 	.word	0x20013860

08017734 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8017734:	b570      	push	{r4, r5, r6, lr}
 8017736:	4604      	mov	r4, r0
 8017738:	4616      	mov	r6, r2
 801773a:	460d      	mov	r5, r1
 801773c:	b901      	cbnz	r1, 8017740 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801773e:	b192      	cbz	r2, 8017766 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8017740:	6823      	ldr	r3, [r4, #0]
 8017742:	4620      	mov	r0, r4
 8017744:	699b      	ldr	r3, [r3, #24]
 8017746:	4798      	blx	r3
 8017748:	88e2      	ldrh	r2, [r4, #6]
 801774a:	88a1      	ldrh	r1, [r4, #4]
 801774c:	4432      	add	r2, r6
 801774e:	4429      	add	r1, r5
 8017750:	4620      	mov	r0, r4
 8017752:	b212      	sxth	r2, r2
 8017754:	b209      	sxth	r1, r1
 8017756:	f7eb f8e7 	bl	8002928 <_ZN8touchgfx8Drawable5setXYEss>
 801775a:	6823      	ldr	r3, [r4, #0]
 801775c:	4620      	mov	r0, r4
 801775e:	699b      	ldr	r3, [r3, #24]
 8017760:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017764:	4718      	bx	r3
 8017766:	bd70      	pop	{r4, r5, r6, pc}

08017768 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8017768:	b510      	push	{r4, lr}
 801776a:	4604      	mov	r4, r0
 801776c:	4608      	mov	r0, r1
 801776e:	2300      	movs	r3, #0
 8017770:	8023      	strh	r3, [r4, #0]
 8017772:	8063      	strh	r3, [r4, #2]
 8017774:	6803      	ldr	r3, [r0, #0]
 8017776:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801777a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801777e:	80a1      	strh	r1, [r4, #4]
 8017780:	80e2      	strh	r2, [r4, #6]
 8017782:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017784:	4621      	mov	r1, r4
 8017786:	4798      	blx	r3
 8017788:	4620      	mov	r0, r4
 801778a:	bd10      	pop	{r4, pc}

0801778c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 801778c:	b530      	push	{r4, r5, lr}
 801778e:	8083      	strh	r3, [r0, #4]
 8017790:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8017794:	80c3      	strh	r3, [r0, #6]
 8017796:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801779a:	7203      	strb	r3, [r0, #8]
 801779c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80177a0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80177a4:	7243      	strb	r3, [r0, #9]
 80177a6:	7a83      	ldrb	r3, [r0, #10]
 80177a8:	6141      	str	r1, [r0, #20]
 80177aa:	f365 0306 	bfi	r3, r5, #0, #7
 80177ae:	f89d 501c 	ldrb.w	r5, [sp, #28]
 80177b2:	8302      	strh	r2, [r0, #24]
 80177b4:	f365 13c7 	bfi	r3, r5, #7, #1
 80177b8:	7283      	strb	r3, [r0, #10]
 80177ba:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80177be:	72c3      	strb	r3, [r0, #11]
 80177c0:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 80177c4:	7303      	strb	r3, [r0, #12]
 80177c6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80177ca:	81c3      	strh	r3, [r0, #14]
 80177cc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80177d0:	8203      	strh	r3, [r0, #16]
 80177d2:	4b01      	ldr	r3, [pc, #4]	; (80177d8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 80177d4:	6003      	str	r3, [r0, #0]
 80177d6:	bd30      	pop	{r4, r5, pc}
 80177d8:	0802f6cc 	.word	0x0802f6cc

080177dc <_ZNK8touchgfx9ConstFont4findEt>:
 80177dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80177de:	6944      	ldr	r4, [r0, #20]
 80177e0:	b3bc      	cbz	r4, 8017852 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80177e2:	88a3      	ldrh	r3, [r4, #4]
 80177e4:	8b02      	ldrh	r2, [r0, #24]
 80177e6:	1acb      	subs	r3, r1, r3
 80177e8:	f102 32ff 	add.w	r2, r2, #4294967295
 80177ec:	d431      	bmi.n	8017852 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80177ee:	4293      	cmp	r3, r2
 80177f0:	dd0c      	ble.n	801780c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 80177f2:	230e      	movs	r3, #14
 80177f4:	fb03 4302 	mla	r3, r3, r2, r4
 80177f8:	889b      	ldrh	r3, [r3, #4]
 80177fa:	1a5b      	subs	r3, r3, r1
 80177fc:	1ad3      	subs	r3, r2, r3
 80177fe:	429a      	cmp	r2, r3
 8017800:	db27      	blt.n	8017852 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017802:	2b00      	cmp	r3, #0
 8017804:	bfbc      	itt	lt
 8017806:	2302      	movlt	r3, #2
 8017808:	fb92 f3f3 	sdivlt	r3, r2, r3
 801780c:	2500      	movs	r5, #0
 801780e:	260e      	movs	r6, #14
 8017810:	4295      	cmp	r5, r2
 8017812:	dc1e      	bgt.n	8017852 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017814:	fb06 4003 	mla	r0, r6, r3, r4
 8017818:	8887      	ldrh	r7, [r0, #4]
 801781a:	42b9      	cmp	r1, r7
 801781c:	d01a      	beq.n	8017854 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801781e:	d20d      	bcs.n	801783c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8017820:	1e5a      	subs	r2, r3, #1
 8017822:	4295      	cmp	r5, r2
 8017824:	dc15      	bgt.n	8017852 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017826:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801782a:	1a5b      	subs	r3, r3, r1
 801782c:	1ad3      	subs	r3, r2, r3
 801782e:	429a      	cmp	r2, r3
 8017830:	db0f      	blt.n	8017852 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017832:	429d      	cmp	r5, r3
 8017834:	ddec      	ble.n	8017810 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017836:	1953      	adds	r3, r2, r5
 8017838:	105b      	asrs	r3, r3, #1
 801783a:	e7e9      	b.n	8017810 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801783c:	1c5d      	adds	r5, r3, #1
 801783e:	42aa      	cmp	r2, r5
 8017840:	db07      	blt.n	8017852 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017842:	8a43      	ldrh	r3, [r0, #18]
 8017844:	1acb      	subs	r3, r1, r3
 8017846:	442b      	add	r3, r5
 8017848:	429d      	cmp	r5, r3
 801784a:	dc02      	bgt.n	8017852 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801784c:	429a      	cmp	r2, r3
 801784e:	dadf      	bge.n	8017810 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017850:	e7f1      	b.n	8017836 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8017852:	2000      	movs	r0, #0
 8017854:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017856 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8017856:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017858:	4604      	mov	r4, r0
 801785a:	4617      	mov	r7, r2
 801785c:	461e      	mov	r6, r3
 801785e:	b911      	cbnz	r1, 8017866 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8017860:	2500      	movs	r5, #0
 8017862:	4628      	mov	r0, r5
 8017864:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017866:	290a      	cmp	r1, #10
 8017868:	d0fa      	beq.n	8017860 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801786a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801786e:	4291      	cmp	r1, r2
 8017870:	d0f6      	beq.n	8017860 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017872:	f242 020b 	movw	r2, #8203	; 0x200b
 8017876:	4291      	cmp	r1, r2
 8017878:	d0f2      	beq.n	8017860 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801787a:	f7ff ffaf 	bl	80177dc <_ZNK8touchgfx9ConstFont4findEt>
 801787e:	4605      	mov	r5, r0
 8017880:	b950      	cbnz	r0, 8017898 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8017882:	6823      	ldr	r3, [r4, #0]
 8017884:	4620      	mov	r0, r4
 8017886:	691b      	ldr	r3, [r3, #16]
 8017888:	4798      	blx	r3
 801788a:	4601      	mov	r1, r0
 801788c:	4620      	mov	r0, r4
 801788e:	f7ff ffa5 	bl	80177dc <_ZNK8touchgfx9ConstFont4findEt>
 8017892:	4605      	mov	r5, r0
 8017894:	2800      	cmp	r0, #0
 8017896:	d0e3      	beq.n	8017860 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017898:	6823      	ldr	r3, [r4, #0]
 801789a:	4629      	mov	r1, r5
 801789c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801789e:	4620      	mov	r0, r4
 80178a0:	4798      	blx	r3
 80178a2:	6038      	str	r0, [r7, #0]
 80178a4:	6823      	ldr	r3, [r4, #0]
 80178a6:	4620      	mov	r0, r4
 80178a8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80178aa:	4798      	blx	r3
 80178ac:	7030      	strb	r0, [r6, #0]
 80178ae:	e7d8      	b.n	8017862 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080178b0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 80178b0:	b538      	push	{r3, r4, r5, lr}
 80178b2:	4605      	mov	r5, r0
 80178b4:	f002 fb94 	bl	8019fe0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80178b8:	4604      	mov	r4, r0
 80178ba:	4628      	mov	r0, r5
 80178bc:	f002 fad4 	bl	8019e68 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80178c0:	2800      	cmp	r0, #0
 80178c2:	bf14      	ite	ne
 80178c4:	2002      	movne	r0, #2
 80178c6:	2000      	moveq	r0, #0
 80178c8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80178cc:	b280      	uxth	r0, r0
 80178ce:	bd38      	pop	{r3, r4, r5, pc}

080178d0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 80178d0:	b538      	push	{r3, r4, r5, lr}
 80178d2:	4605      	mov	r5, r0
 80178d4:	f002 fb84 	bl	8019fe0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80178d8:	4604      	mov	r4, r0
 80178da:	4628      	mov	r0, r5
 80178dc:	f002 fac4 	bl	8019e68 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80178e0:	2800      	cmp	r0, #0
 80178e2:	bf14      	ite	ne
 80178e4:	2002      	movne	r0, #2
 80178e6:	2000      	moveq	r0, #0
 80178e8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80178ec:	f040 0001 	orr.w	r0, r0, #1
 80178f0:	b280      	uxth	r0, r0
 80178f2:	bd38      	pop	{r3, r4, r5, pc}

080178f4 <_ZN8touchgfx4clzuEm>:
 80178f4:	4603      	mov	r3, r0
 80178f6:	b1c8      	cbz	r0, 801792c <_ZN8touchgfx4clzuEm+0x38>
 80178f8:	0c02      	lsrs	r2, r0, #16
 80178fa:	0412      	lsls	r2, r2, #16
 80178fc:	b9a2      	cbnz	r2, 8017928 <_ZN8touchgfx4clzuEm+0x34>
 80178fe:	0403      	lsls	r3, r0, #16
 8017900:	2010      	movs	r0, #16
 8017902:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8017906:	bf04      	itt	eq
 8017908:	021b      	lsleq	r3, r3, #8
 801790a:	3008      	addeq	r0, #8
 801790c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8017910:	bf04      	itt	eq
 8017912:	011b      	lsleq	r3, r3, #4
 8017914:	3004      	addeq	r0, #4
 8017916:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801791a:	bf04      	itt	eq
 801791c:	009b      	lsleq	r3, r3, #2
 801791e:	3002      	addeq	r0, #2
 8017920:	2b00      	cmp	r3, #0
 8017922:	db04      	blt.n	801792e <_ZN8touchgfx4clzuEm+0x3a>
 8017924:	3001      	adds	r0, #1
 8017926:	4770      	bx	lr
 8017928:	2000      	movs	r0, #0
 801792a:	e7ea      	b.n	8017902 <_ZN8touchgfx4clzuEm+0xe>
 801792c:	2020      	movs	r0, #32
 801792e:	4770      	bx	lr

08017930 <_ZN8touchgfx7muldivuEmmmRm>:
 8017930:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8017934:	460f      	mov	r7, r1
 8017936:	4615      	mov	r5, r2
 8017938:	461e      	mov	r6, r3
 801793a:	4601      	mov	r1, r0
 801793c:	b100      	cbz	r0, 8017940 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801793e:	b927      	cbnz	r7, 801794a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8017940:	2000      	movs	r0, #0
 8017942:	6030      	str	r0, [r6, #0]
 8017944:	b002      	add	sp, #8
 8017946:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801794a:	f7ff ffd3 	bl	80178f4 <_ZN8touchgfx4clzuEm>
 801794e:	b980      	cbnz	r0, 8017972 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8017950:	4638      	mov	r0, r7
 8017952:	f7ff ffcf 	bl	80178f4 <_ZN8touchgfx4clzuEm>
 8017956:	2800      	cmp	r0, #0
 8017958:	dd05      	ble.n	8017966 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801795a:	4633      	mov	r3, r6
 801795c:	462a      	mov	r2, r5
 801795e:	4638      	mov	r0, r7
 8017960:	f7ff ffe6 	bl	8017930 <_ZN8touchgfx7muldivuEmmmRm>
 8017964:	e7ee      	b.n	8017944 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017966:	f04f 33ff 	mov.w	r3, #4294967295
 801796a:	6033      	str	r3, [r6, #0]
 801796c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8017970:	e7e8      	b.n	8017944 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017972:	fa37 f800 	lsrs.w	r8, r7, r0
 8017976:	fb07 f301 	mul.w	r3, r7, r1
 801797a:	d105      	bne.n	8017988 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 801797c:	fbb3 f0f5 	udiv	r0, r3, r5
 8017980:	fb05 3510 	mls	r5, r5, r0, r3
 8017984:	6035      	str	r5, [r6, #0]
 8017986:	e7dd      	b.n	8017944 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017988:	2301      	movs	r3, #1
 801798a:	fa01 fa00 	lsl.w	sl, r1, r0
 801798e:	fa03 f000 	lsl.w	r0, r3, r0
 8017992:	3801      	subs	r0, #1
 8017994:	462a      	mov	r2, r5
 8017996:	4633      	mov	r3, r6
 8017998:	4038      	ands	r0, r7
 801799a:	f7ff ffc9 	bl	8017930 <_ZN8touchgfx7muldivuEmmmRm>
 801799e:	fbba f9f5 	udiv	r9, sl, r5
 80179a2:	462a      	mov	r2, r5
 80179a4:	4607      	mov	r7, r0
 80179a6:	ab01      	add	r3, sp, #4
 80179a8:	fb05 a119 	mls	r1, r5, r9, sl
 80179ac:	4640      	mov	r0, r8
 80179ae:	f7ff ffbf 	bl	8017930 <_ZN8touchgfx7muldivuEmmmRm>
 80179b2:	9b01      	ldr	r3, [sp, #4]
 80179b4:	6832      	ldr	r2, [r6, #0]
 80179b6:	fb08 f409 	mul.w	r4, r8, r9
 80179ba:	441a      	add	r2, r3
 80179bc:	fbb2 f3f5 	udiv	r3, r2, r5
 80179c0:	441c      	add	r4, r3
 80179c2:	443c      	add	r4, r7
 80179c4:	4420      	add	r0, r4
 80179c6:	fb05 2513 	mls	r5, r5, r3, r2
 80179ca:	e7db      	b.n	8017984 <_ZN8touchgfx7muldivuEmmmRm+0x54>

080179cc <_ZN8touchgfx6muldivElllRl>:
 80179cc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80179ce:	2800      	cmp	r0, #0
 80179d0:	bfba      	itte	lt
 80179d2:	4240      	neglt	r0, r0
 80179d4:	f04f 34ff 	movlt.w	r4, #4294967295
 80179d8:	2401      	movge	r4, #1
 80179da:	2900      	cmp	r1, #0
 80179dc:	bfbc      	itt	lt
 80179de:	4249      	neglt	r1, r1
 80179e0:	4264      	neglt	r4, r4
 80179e2:	2a00      	cmp	r2, #0
 80179e4:	bfb6      	itet	lt
 80179e6:	4265      	neglt	r5, r4
 80179e8:	4625      	movge	r5, r4
 80179ea:	4252      	neglt	r2, r2
 80179ec:	4288      	cmp	r0, r1
 80179ee:	461e      	mov	r6, r3
 80179f0:	bfc2      	ittt	gt
 80179f2:	4603      	movgt	r3, r0
 80179f4:	4608      	movgt	r0, r1
 80179f6:	4619      	movgt	r1, r3
 80179f8:	ab01      	add	r3, sp, #4
 80179fa:	f7ff ff99 	bl	8017930 <_ZN8touchgfx7muldivuEmmmRm>
 80179fe:	9b01      	ldr	r3, [sp, #4]
 8017a00:	4368      	muls	r0, r5
 8017a02:	435c      	muls	r4, r3
 8017a04:	6034      	str	r4, [r6, #0]
 8017a06:	b002      	add	sp, #8
 8017a08:	bd70      	pop	{r4, r5, r6, pc}

08017a0a <_ZN8touchgfx6muldivElll>:
 8017a0a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8017a0c:	4606      	mov	r6, r0
 8017a0e:	ab01      	add	r3, sp, #4
 8017a10:	460d      	mov	r5, r1
 8017a12:	4614      	mov	r4, r2
 8017a14:	f7ff ffda 	bl	80179cc <_ZN8touchgfx6muldivElllRl>
 8017a18:	2e00      	cmp	r6, #0
 8017a1a:	db20      	blt.n	8017a5e <_ZN8touchgfx6muldivElll+0x54>
 8017a1c:	bf14      	ite	ne
 8017a1e:	2301      	movne	r3, #1
 8017a20:	2300      	moveq	r3, #0
 8017a22:	2d00      	cmp	r5, #0
 8017a24:	db1e      	blt.n	8017a64 <_ZN8touchgfx6muldivElll+0x5a>
 8017a26:	bf14      	ite	ne
 8017a28:	2201      	movne	r2, #1
 8017a2a:	2200      	moveq	r2, #0
 8017a2c:	2c00      	cmp	r4, #0
 8017a2e:	fb03 f202 	mul.w	r2, r3, r2
 8017a32:	db1a      	blt.n	8017a6a <_ZN8touchgfx6muldivElll+0x60>
 8017a34:	bf14      	ite	ne
 8017a36:	2301      	movne	r3, #1
 8017a38:	2300      	moveq	r3, #0
 8017a3a:	4353      	muls	r3, r2
 8017a3c:	2b01      	cmp	r3, #1
 8017a3e:	d117      	bne.n	8017a70 <_ZN8touchgfx6muldivElll+0x66>
 8017a40:	9b01      	ldr	r3, [sp, #4]
 8017a42:	2c00      	cmp	r4, #0
 8017a44:	bfb8      	it	lt
 8017a46:	4264      	neglt	r4, r4
 8017a48:	2b00      	cmp	r3, #0
 8017a4a:	f104 0401 	add.w	r4, r4, #1
 8017a4e:	bfb8      	it	lt
 8017a50:	425b      	neglt	r3, r3
 8017a52:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017a56:	db00      	blt.n	8017a5a <_ZN8touchgfx6muldivElll+0x50>
 8017a58:	3001      	adds	r0, #1
 8017a5a:	b002      	add	sp, #8
 8017a5c:	bd70      	pop	{r4, r5, r6, pc}
 8017a5e:	f04f 33ff 	mov.w	r3, #4294967295
 8017a62:	e7de      	b.n	8017a22 <_ZN8touchgfx6muldivElll+0x18>
 8017a64:	f04f 32ff 	mov.w	r2, #4294967295
 8017a68:	e7e0      	b.n	8017a2c <_ZN8touchgfx6muldivElll+0x22>
 8017a6a:	f04f 33ff 	mov.w	r3, #4294967295
 8017a6e:	e7e4      	b.n	8017a3a <_ZN8touchgfx6muldivElll+0x30>
 8017a70:	3301      	adds	r3, #1
 8017a72:	d1f2      	bne.n	8017a5a <_ZN8touchgfx6muldivElll+0x50>
 8017a74:	9b01      	ldr	r3, [sp, #4]
 8017a76:	2c00      	cmp	r4, #0
 8017a78:	bfb8      	it	lt
 8017a7a:	4264      	neglt	r4, r4
 8017a7c:	2b00      	cmp	r3, #0
 8017a7e:	bfb8      	it	lt
 8017a80:	425b      	neglt	r3, r3
 8017a82:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017a86:	bfc8      	it	gt
 8017a88:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8017a8c:	e7e5      	b.n	8017a5a <_ZN8touchgfx6muldivElll+0x50>

08017a8e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8017a8e:	2000      	movs	r0, #0
 8017a90:	4770      	bx	lr

08017a92 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8017a92:	2001      	movs	r0, #1
 8017a94:	4770      	bx	lr

08017a96 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8017a96:	2002      	movs	r0, #2
 8017a98:	4770      	bx	lr

08017a9a <_ZN8touchgfx6ScreenD1Ev>:
 8017a9a:	4770      	bx	lr

08017a9c <_ZN8touchgfx12GestureEventD1Ev>:
 8017a9c:	4770      	bx	lr

08017a9e <_ZN8touchgfx9DragEventD1Ev>:
 8017a9e:	4770      	bx	lr

08017aa0 <_ZN8touchgfx10ClickEventD1Ev>:
 8017aa0:	4770      	bx	lr

08017aa2 <_ZN8touchgfx10ClickEventD0Ev>:
 8017aa2:	b510      	push	{r4, lr}
 8017aa4:	210c      	movs	r1, #12
 8017aa6:	4604      	mov	r4, r0
 8017aa8:	f012 fd8f 	bl	802a5ca <_ZdlPvj>
 8017aac:	4620      	mov	r0, r4
 8017aae:	bd10      	pop	{r4, pc}

08017ab0 <_ZN8touchgfx9DragEventD0Ev>:
 8017ab0:	b510      	push	{r4, lr}
 8017ab2:	2110      	movs	r1, #16
 8017ab4:	4604      	mov	r4, r0
 8017ab6:	f012 fd88 	bl	802a5ca <_ZdlPvj>
 8017aba:	4620      	mov	r0, r4
 8017abc:	bd10      	pop	{r4, pc}

08017abe <_ZN8touchgfx12GestureEventD0Ev>:
 8017abe:	b510      	push	{r4, lr}
 8017ac0:	210c      	movs	r1, #12
 8017ac2:	4604      	mov	r4, r0
 8017ac4:	f012 fd81 	bl	802a5ca <_ZdlPvj>
 8017ac8:	4620      	mov	r0, r4
 8017aca:	bd10      	pop	{r4, pc}

08017acc <_ZN8touchgfx6ScreenD0Ev>:
 8017acc:	b510      	push	{r4, lr}
 8017ace:	213c      	movs	r1, #60	; 0x3c
 8017ad0:	4604      	mov	r4, r0
 8017ad2:	f012 fd7a 	bl	802a5ca <_ZdlPvj>
 8017ad6:	4620      	mov	r0, r4
 8017ad8:	bd10      	pop	{r4, pc}
	...

08017adc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8017adc:	b530      	push	{r4, r5, lr}
 8017ade:	460d      	mov	r5, r1
 8017ae0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017ae2:	b087      	sub	sp, #28
 8017ae4:	4604      	mov	r4, r0
 8017ae6:	b301      	cbz	r1, 8017b2a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8017ae8:	a801      	add	r0, sp, #4
 8017aea:	f7ff fe3d 	bl	8017768 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017aee:	892a      	ldrh	r2, [r5, #8]
 8017af0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8017af4:	7928      	ldrb	r0, [r5, #4]
 8017af6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8017afa:	f88d 0010 	strb.w	r0, [sp, #16]
 8017afe:	1ad2      	subs	r2, r2, r3
 8017b00:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8017b02:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8017b04:	f8ad 1012 	strh.w	r1, [sp, #18]
 8017b08:	441a      	add	r2, r3
 8017b0a:	896b      	ldrh	r3, [r5, #10]
 8017b0c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8017b10:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017b14:	1b5b      	subs	r3, r3, r5
 8017b16:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8017b18:	442b      	add	r3, r5
 8017b1a:	4d05      	ldr	r5, [pc, #20]	; (8017b30 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8017b1c:	9503      	str	r5, [sp, #12]
 8017b1e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017b22:	6803      	ldr	r3, [r0, #0]
 8017b24:	a903      	add	r1, sp, #12
 8017b26:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017b28:	4798      	blx	r3
 8017b2a:	b007      	add	sp, #28
 8017b2c:	bd30      	pop	{r4, r5, pc}
 8017b2e:	bf00      	nop
 8017b30:	0802f754 	.word	0x0802f754

08017b34 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8017b34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017b38:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8017b3a:	b08a      	sub	sp, #40	; 0x28
 8017b3c:	4604      	mov	r4, r0
 8017b3e:	460d      	mov	r5, r1
 8017b40:	b113      	cbz	r3, 8017b48 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8017b42:	790b      	ldrb	r3, [r1, #4]
 8017b44:	2b00      	cmp	r3, #0
 8017b46:	d044      	beq.n	8017bd2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017b48:	f104 0804 	add.w	r8, r4, #4
 8017b4c:	4641      	mov	r1, r8
 8017b4e:	a803      	add	r0, sp, #12
 8017b50:	f7ff fe0a 	bl	8017768 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017b54:	792b      	ldrb	r3, [r5, #4]
 8017b56:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017b5a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8017b5e:	b983      	cbnz	r3, 8017b82 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8017b60:	892a      	ldrh	r2, [r5, #8]
 8017b62:	88e9      	ldrh	r1, [r5, #6]
 8017b64:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8017b68:	1b92      	subs	r2, r2, r6
 8017b6a:	1bc9      	subs	r1, r1, r7
 8017b6c:	9301      	str	r3, [sp, #4]
 8017b6e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8017b72:	9300      	str	r3, [sp, #0]
 8017b74:	b212      	sxth	r2, r2
 8017b76:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8017b7a:	b209      	sxth	r1, r1
 8017b7c:	4640      	mov	r0, r8
 8017b7e:	f7f8 fc39 	bl	80103f4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8017b82:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8017b84:	b329      	cbz	r1, 8017bd2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017b86:	a805      	add	r0, sp, #20
 8017b88:	f7ff fdee 	bl	8017768 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017b8c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8017b90:	792b      	ldrb	r3, [r5, #4]
 8017b92:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8017b94:	f88d 3020 	strb.w	r3, [sp, #32]
 8017b98:	1abf      	subs	r7, r7, r2
 8017b9a:	88ea      	ldrh	r2, [r5, #6]
 8017b9c:	4417      	add	r7, r2
 8017b9e:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8017ba0:	4417      	add	r7, r2
 8017ba2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8017ba6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8017baa:	1ab6      	subs	r6, r6, r2
 8017bac:	892a      	ldrh	r2, [r5, #8]
 8017bae:	4416      	add	r6, r2
 8017bb0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8017bb2:	4416      	add	r6, r2
 8017bb4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8017bb8:	4a07      	ldr	r2, [pc, #28]	; (8017bd8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8017bba:	9207      	str	r2, [sp, #28]
 8017bbc:	2600      	movs	r6, #0
 8017bbe:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8017bc2:	6803      	ldr	r3, [r0, #0]
 8017bc4:	a907      	add	r1, sp, #28
 8017bc6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017bc8:	4798      	blx	r3
 8017bca:	792b      	ldrb	r3, [r5, #4]
 8017bcc:	b10b      	cbz	r3, 8017bd2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017bce:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8017bd2:	b00a      	add	sp, #40	; 0x28
 8017bd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017bd8:	0802f72c 	.word	0x0802f72c

08017bdc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8017bdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017be0:	460c      	mov	r4, r1
 8017be2:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017be4:	b088      	sub	sp, #32
 8017be6:	4605      	mov	r5, r0
 8017be8:	2900      	cmp	r1, #0
 8017bea:	d06d      	beq.n	8017cc8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8017bec:	4668      	mov	r0, sp
 8017bee:	f7ff fdbb 	bl	8017768 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017bf2:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8017bf4:	88e3      	ldrh	r3, [r4, #6]
 8017bf6:	f9bd 8000 	ldrsh.w	r8, [sp]
 8017bfa:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8017bfe:	440b      	add	r3, r1
 8017c00:	b21b      	sxth	r3, r3
 8017c02:	4543      	cmp	r3, r8
 8017c04:	db31      	blt.n	8017c6a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017c06:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8017c0a:	44c4      	add	ip, r8
 8017c0c:	fa0f fc8c 	sxth.w	ip, ip
 8017c10:	4563      	cmp	r3, ip
 8017c12:	da2a      	bge.n	8017c6a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017c14:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8017c16:	8926      	ldrh	r6, [r4, #8]
 8017c18:	4416      	add	r6, r2
 8017c1a:	b236      	sxth	r6, r6
 8017c1c:	42be      	cmp	r6, r7
 8017c1e:	db24      	blt.n	8017c6a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017c20:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8017c24:	4438      	add	r0, r7
 8017c26:	b200      	sxth	r0, r0
 8017c28:	4286      	cmp	r6, r0
 8017c2a:	da1e      	bge.n	8017c6a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017c2c:	8963      	ldrh	r3, [r4, #10]
 8017c2e:	4419      	add	r1, r3
 8017c30:	b209      	sxth	r1, r1
 8017c32:	4541      	cmp	r1, r8
 8017c34:	db08      	blt.n	8017c48 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017c36:	4561      	cmp	r1, ip
 8017c38:	da06      	bge.n	8017c48 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017c3a:	89a3      	ldrh	r3, [r4, #12]
 8017c3c:	441a      	add	r2, r3
 8017c3e:	b212      	sxth	r2, r2
 8017c40:	42ba      	cmp	r2, r7
 8017c42:	db01      	blt.n	8017c48 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017c44:	4282      	cmp	r2, r0
 8017c46:	db10      	blt.n	8017c6a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017c48:	4b21      	ldr	r3, [pc, #132]	; (8017cd0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8017c4a:	9304      	str	r3, [sp, #16]
 8017c4c:	2302      	movs	r3, #2
 8017c4e:	f88d 3014 	strb.w	r3, [sp, #20]
 8017c52:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8017c54:	2300      	movs	r3, #0
 8017c56:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017c5a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8017c5e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8017c62:	6803      	ldr	r3, [r0, #0]
 8017c64:	a904      	add	r1, sp, #16
 8017c66:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017c68:	4798      	blx	r3
 8017c6a:	1d29      	adds	r1, r5, #4
 8017c6c:	a802      	add	r0, sp, #8
 8017c6e:	f7ff fd7b 	bl	8017768 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017c72:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017c76:	88e0      	ldrh	r0, [r4, #6]
 8017c78:	7921      	ldrb	r1, [r4, #4]
 8017c7a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8017c7e:	8922      	ldrh	r2, [r4, #8]
 8017c80:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8017c82:	f88d 1014 	strb.w	r1, [sp, #20]
 8017c86:	eba3 0808 	sub.w	r8, r3, r8
 8017c8a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017c8e:	1bdf      	subs	r7, r3, r7
 8017c90:	b2bb      	uxth	r3, r7
 8017c92:	fa1f f888 	uxth.w	r8, r8
 8017c96:	8967      	ldrh	r7, [r4, #10]
 8017c98:	89a4      	ldrh	r4, [r4, #12]
 8017c9a:	4440      	add	r0, r8
 8017c9c:	4460      	add	r0, ip
 8017c9e:	441a      	add	r2, r3
 8017ca0:	44b8      	add	r8, r7
 8017ca2:	4423      	add	r3, r4
 8017ca4:	f8ad 0016 	strh.w	r0, [sp, #22]
 8017ca8:	4433      	add	r3, r6
 8017caa:	4432      	add	r2, r6
 8017cac:	44e0      	add	r8, ip
 8017cae:	4c09      	ldr	r4, [pc, #36]	; (8017cd4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8017cb0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8017cb2:	9404      	str	r4, [sp, #16]
 8017cb4:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017cb8:	f8ad 801a 	strh.w	r8, [sp, #26]
 8017cbc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017cc0:	6803      	ldr	r3, [r0, #0]
 8017cc2:	a904      	add	r1, sp, #16
 8017cc4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017cc6:	4798      	blx	r3
 8017cc8:	b008      	add	sp, #32
 8017cca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017cce:	bf00      	nop
 8017cd0:	0802f72c 	.word	0x0802f72c
 8017cd4:	0802f740 	.word	0x0802f740

08017cd8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8017cd8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8017cda:	4604      	mov	r4, r0
 8017cdc:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8017ce0:	3201      	adds	r2, #1
 8017ce2:	d112      	bne.n	8017d0a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8017ce4:	6803      	ldr	r3, [r0, #0]
 8017ce6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8017cea:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017cee:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017cf2:	2500      	movs	r5, #0
 8017cf4:	9500      	str	r5, [sp, #0]
 8017cf6:	466d      	mov	r5, sp
 8017cf8:	4629      	mov	r1, r5
 8017cfa:	f8ad 2006 	strh.w	r2, [sp, #6]
 8017cfe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017d00:	4798      	blx	r3
 8017d02:	e895 0003 	ldmia.w	r5, {r0, r1}
 8017d06:	e884 0003 	stmia.w	r4, {r0, r1}
 8017d0a:	4620      	mov	r0, r4
 8017d0c:	b003      	add	sp, #12
 8017d0e:	bd30      	pop	{r4, r5, pc}

08017d10 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8017d10:	b513      	push	{r0, r1, r4, lr}
 8017d12:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8017d16:	3301      	adds	r3, #1
 8017d18:	4604      	mov	r4, r0
 8017d1a:	d109      	bne.n	8017d30 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8017d1c:	4601      	mov	r1, r0
 8017d1e:	4668      	mov	r0, sp
 8017d20:	f7ff fd22 	bl	8017768 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017d24:	f8bd 3000 	ldrh.w	r3, [sp]
 8017d28:	8423      	strh	r3, [r4, #32]
 8017d2a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017d2e:	8463      	strh	r3, [r4, #34]	; 0x22
 8017d30:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8017d34:	b002      	add	sp, #8
 8017d36:	bd10      	pop	{r4, pc}

08017d38 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8017d38:	b513      	push	{r0, r1, r4, lr}
 8017d3a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8017d3e:	3301      	adds	r3, #1
 8017d40:	4604      	mov	r4, r0
 8017d42:	d109      	bne.n	8017d58 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8017d44:	4601      	mov	r1, r0
 8017d46:	4668      	mov	r0, sp
 8017d48:	f7ff fd0e 	bl	8017768 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017d4c:	f8bd 3000 	ldrh.w	r3, [sp]
 8017d50:	8423      	strh	r3, [r4, #32]
 8017d52:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017d56:	8463      	strh	r3, [r4, #34]	; 0x22
 8017d58:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8017d5c:	b002      	add	sp, #8
 8017d5e:	bd10      	pop	{r4, pc}

08017d60 <_ZN8touchgfx6ScreenC1Ev>:
 8017d60:	b570      	push	{r4, r5, r6, lr}
 8017d62:	4605      	mov	r5, r0
 8017d64:	4b16      	ldr	r3, [pc, #88]	; (8017dc0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8017d66:	f845 3b04 	str.w	r3, [r5], #4
 8017d6a:	2300      	movs	r3, #0
 8017d6c:	8103      	strh	r3, [r0, #8]
 8017d6e:	8143      	strh	r3, [r0, #10]
 8017d70:	8183      	strh	r3, [r0, #12]
 8017d72:	81c3      	strh	r3, [r0, #14]
 8017d74:	8203      	strh	r3, [r0, #16]
 8017d76:	8243      	strh	r3, [r0, #18]
 8017d78:	8283      	strh	r3, [r0, #20]
 8017d7a:	82c3      	strh	r3, [r0, #22]
 8017d7c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8017d80:	6203      	str	r3, [r0, #32]
 8017d82:	8483      	strh	r3, [r0, #36]	; 0x24
 8017d84:	84c3      	strh	r3, [r0, #38]	; 0x26
 8017d86:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8017d8a:	4a0e      	ldr	r2, [pc, #56]	; (8017dc4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8017d8c:	6343      	str	r3, [r0, #52]	; 0x34
 8017d8e:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8017d92:	4b0d      	ldr	r3, [pc, #52]	; (8017dc8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8017d94:	6042      	str	r2, [r0, #4]
 8017d96:	f9b3 6000 	ldrsh.w	r6, [r3]
 8017d9a:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8017d9c:	4a0b      	ldr	r2, [pc, #44]	; (8017dcc <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8017d9e:	4604      	mov	r4, r0
 8017da0:	2101      	movs	r1, #1
 8017da2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8017da6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8017daa:	f9b2 1000 	ldrsh.w	r1, [r2]
 8017dae:	4628      	mov	r0, r5
 8017db0:	4798      	blx	r3
 8017db2:	6863      	ldr	r3, [r4, #4]
 8017db4:	4628      	mov	r0, r5
 8017db6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8017db8:	4631      	mov	r1, r6
 8017dba:	4798      	blx	r3
 8017dbc:	4620      	mov	r0, r4
 8017dbe:	bd70      	pop	{r4, r5, r6, pc}
 8017dc0:	0802f768 	.word	0x0802f768
 8017dc4:	0802edec 	.word	0x0802edec
 8017dc8:	20013812 	.word	0x20013812
 8017dcc:	20013810 	.word	0x20013810

08017dd0 <_ZN8touchgfx6Screen4drawEv>:
 8017dd0:	b507      	push	{r0, r1, r2, lr}
 8017dd2:	4b09      	ldr	r3, [pc, #36]	; (8017df8 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8017dd4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017dd8:	4b08      	ldr	r3, [pc, #32]	; (8017dfc <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8017dda:	f8ad 2004 	strh.w	r2, [sp, #4]
 8017dde:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017de2:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017de6:	6803      	ldr	r3, [r0, #0]
 8017de8:	2100      	movs	r1, #0
 8017dea:	9100      	str	r1, [sp, #0]
 8017dec:	689b      	ldr	r3, [r3, #8]
 8017dee:	4669      	mov	r1, sp
 8017df0:	4798      	blx	r3
 8017df2:	b003      	add	sp, #12
 8017df4:	f85d fb04 	ldr.w	pc, [sp], #4
 8017df8:	20013810 	.word	0x20013810
 8017dfc:	20013812 	.word	0x20013812

08017e00 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8017e00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e04:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8017e08:	2b00      	cmp	r3, #0
 8017e0a:	b089      	sub	sp, #36	; 0x24
 8017e0c:	4680      	mov	r8, r0
 8017e0e:	460c      	mov	r4, r1
 8017e10:	4615      	mov	r5, r2
 8017e12:	dd0e      	ble.n	8017e32 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017e14:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8017e18:	2b00      	cmp	r3, #0
 8017e1a:	dd0a      	ble.n	8017e32 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017e1c:	4628      	mov	r0, r5
 8017e1e:	f7ff ff5b 	bl	8017cd8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017e22:	4621      	mov	r1, r4
 8017e24:	f7fe fa3d 	bl	80162a2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017e28:	69eb      	ldr	r3, [r5, #28]
 8017e2a:	b928      	cbnz	r0, 8017e38 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8017e2c:	461d      	mov	r5, r3
 8017e2e:	2b00      	cmp	r3, #0
 8017e30:	d1f4      	bne.n	8017e1c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8017e32:	b009      	add	sp, #36	; 0x24
 8017e34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017e38:	ae04      	add	r6, sp, #16
 8017e3a:	2b00      	cmp	r3, #0
 8017e3c:	f000 80b5 	beq.w	8017faa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017e40:	682b      	ldr	r3, [r5, #0]
 8017e42:	4629      	mov	r1, r5
 8017e44:	68db      	ldr	r3, [r3, #12]
 8017e46:	a802      	add	r0, sp, #8
 8017e48:	4798      	blx	r3
 8017e4a:	4628      	mov	r0, r5
 8017e4c:	f7ff ff60 	bl	8017d10 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8017e50:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8017e54:	4407      	add	r7, r0
 8017e56:	4628      	mov	r0, r5
 8017e58:	f7ff ff6e 	bl	8017d38 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8017e5c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017e60:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8017e64:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017e68:	4418      	add	r0, r3
 8017e6a:	4621      	mov	r1, r4
 8017e6c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8017e70:	f8ad 0012 	strh.w	r0, [sp, #18]
 8017e74:	b23f      	sxth	r7, r7
 8017e76:	4630      	mov	r0, r6
 8017e78:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017e7c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8017e80:	f7f8 fb9c 	bl	80105bc <_ZN8touchgfx4RectaNERKS0_>
 8017e84:	4628      	mov	r0, r5
 8017e86:	f7ff ff27 	bl	8017cd8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017e8a:	4602      	mov	r2, r0
 8017e8c:	e896 0003 	ldmia.w	r6, {r0, r1}
 8017e90:	ab06      	add	r3, sp, #24
 8017e92:	e883 0003 	stmia.w	r3, {r0, r1}
 8017e96:	4611      	mov	r1, r2
 8017e98:	4618      	mov	r0, r3
 8017e9a:	f7f8 fb8f 	bl	80105bc <_ZN8touchgfx4RectaNERKS0_>
 8017e9e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8017ea2:	f9b4 1000 	ldrsh.w	r1, [r4]
 8017ea6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8017eaa:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8017eae:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8017eb2:	4299      	cmp	r1, r3
 8017eb4:	d10b      	bne.n	8017ece <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017eb6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8017eba:	4552      	cmp	r2, sl
 8017ebc:	d107      	bne.n	8017ece <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017ebe:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8017ec2:	455a      	cmp	r2, fp
 8017ec4:	d103      	bne.n	8017ece <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017ec6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8017eca:	454a      	cmp	r2, r9
 8017ecc:	d06d      	beq.n	8017faa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017ece:	f1bb 0f00 	cmp.w	fp, #0
 8017ed2:	dd65      	ble.n	8017fa0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8017ed4:	f1b9 0f00 	cmp.w	r9, #0
 8017ed8:	dd62      	ble.n	8017fa0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8017eda:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8017ede:	fa1f f08a 	uxth.w	r0, sl
 8017ee2:	4552      	cmp	r2, sl
 8017ee4:	9000      	str	r0, [sp, #0]
 8017ee6:	da12      	bge.n	8017f0e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8017ee8:	9301      	str	r3, [sp, #4]
 8017eea:	9b00      	ldr	r3, [sp, #0]
 8017eec:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017ef0:	f8ad 2012 	strh.w	r2, [sp, #18]
 8017ef4:	1a9a      	subs	r2, r3, r2
 8017ef6:	f8ad 1010 	strh.w	r1, [sp, #16]
 8017efa:	f8ad 0014 	strh.w	r0, [sp, #20]
 8017efe:	f8ad 2016 	strh.w	r2, [sp, #22]
 8017f02:	69ea      	ldr	r2, [r5, #28]
 8017f04:	4631      	mov	r1, r6
 8017f06:	4640      	mov	r0, r8
 8017f08:	f7ff ff7a 	bl	8017e00 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017f0c:	9b01      	ldr	r3, [sp, #4]
 8017f0e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8017f12:	429a      	cmp	r2, r3
 8017f14:	b29f      	uxth	r7, r3
 8017f16:	da0d      	bge.n	8017f34 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8017f18:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017f1c:	1aba      	subs	r2, r7, r2
 8017f1e:	f8ad a012 	strh.w	sl, [sp, #18]
 8017f22:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017f26:	f8ad 9016 	strh.w	r9, [sp, #22]
 8017f2a:	69ea      	ldr	r2, [r5, #28]
 8017f2c:	4631      	mov	r1, r6
 8017f2e:	4640      	mov	r0, r8
 8017f30:	f7ff ff66 	bl	8017e00 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017f34:	8822      	ldrh	r2, [r4, #0]
 8017f36:	88a3      	ldrh	r3, [r4, #4]
 8017f38:	445f      	add	r7, fp
 8017f3a:	4413      	add	r3, r2
 8017f3c:	b29b      	uxth	r3, r3
 8017f3e:	b2bf      	uxth	r7, r7
 8017f40:	b23a      	sxth	r2, r7
 8017f42:	b219      	sxth	r1, r3
 8017f44:	4291      	cmp	r1, r2
 8017f46:	dd0d      	ble.n	8017f64 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8017f48:	1bdb      	subs	r3, r3, r7
 8017f4a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017f4e:	f8ad a012 	strh.w	sl, [sp, #18]
 8017f52:	f8ad 3014 	strh.w	r3, [sp, #20]
 8017f56:	f8ad 9016 	strh.w	r9, [sp, #22]
 8017f5a:	69ea      	ldr	r2, [r5, #28]
 8017f5c:	4631      	mov	r1, r6
 8017f5e:	4640      	mov	r0, r8
 8017f60:	f7ff ff4e 	bl	8017e00 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017f64:	88e2      	ldrh	r2, [r4, #6]
 8017f66:	8863      	ldrh	r3, [r4, #2]
 8017f68:	4413      	add	r3, r2
 8017f6a:	9a00      	ldr	r2, [sp, #0]
 8017f6c:	444a      	add	r2, r9
 8017f6e:	b29b      	uxth	r3, r3
 8017f70:	fa1f f982 	uxth.w	r9, r2
 8017f74:	fa0f f289 	sxth.w	r2, r9
 8017f78:	b219      	sxth	r1, r3
 8017f7a:	428a      	cmp	r2, r1
 8017f7c:	da15      	bge.n	8017faa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017f7e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8017f82:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017f86:	f8ad 1014 	strh.w	r1, [sp, #20]
 8017f8a:	eba3 0309 	sub.w	r3, r3, r9
 8017f8e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8017f92:	f8ad 2012 	strh.w	r2, [sp, #18]
 8017f96:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017f9a:	69ea      	ldr	r2, [r5, #28]
 8017f9c:	4631      	mov	r1, r6
 8017f9e:	e001      	b.n	8017fa4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8017fa0:	69ea      	ldr	r2, [r5, #28]
 8017fa2:	4621      	mov	r1, r4
 8017fa4:	4640      	mov	r0, r8
 8017fa6:	f7ff ff2b 	bl	8017e00 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017faa:	4628      	mov	r0, r5
 8017fac:	f7ff fe94 	bl	8017cd8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017fb0:	6861      	ldr	r1, [r4, #4]
 8017fb2:	4602      	mov	r2, r0
 8017fb4:	6820      	ldr	r0, [r4, #0]
 8017fb6:	4633      	mov	r3, r6
 8017fb8:	c303      	stmia	r3!, {r0, r1}
 8017fba:	4611      	mov	r1, r2
 8017fbc:	4630      	mov	r0, r6
 8017fbe:	f7f8 fafd 	bl	80105bc <_ZN8touchgfx4RectaNERKS0_>
 8017fc2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8017fc6:	2b00      	cmp	r3, #0
 8017fc8:	f77f af33 	ble.w	8017e32 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017fcc:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8017fd0:	2b00      	cmp	r3, #0
 8017fd2:	f77f af2e 	ble.w	8017e32 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017fd6:	4628      	mov	r0, r5
 8017fd8:	f7ff fe9a 	bl	8017d10 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8017fdc:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8017fe0:	1a18      	subs	r0, r3, r0
 8017fe2:	f8ad 0010 	strh.w	r0, [sp, #16]
 8017fe6:	4628      	mov	r0, r5
 8017fe8:	f7ff fea6 	bl	8017d38 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8017fec:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8017ff0:	1a18      	subs	r0, r3, r0
 8017ff2:	f8ad 0012 	strh.w	r0, [sp, #18]
 8017ff6:	682b      	ldr	r3, [r5, #0]
 8017ff8:	4631      	mov	r1, r6
 8017ffa:	689b      	ldr	r3, [r3, #8]
 8017ffc:	4628      	mov	r0, r5
 8017ffe:	4798      	blx	r3
 8018000:	e717      	b.n	8017e32 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08018002 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8018002:	b570      	push	{r4, r5, r6, lr}
 8018004:	460c      	mov	r4, r1
 8018006:	b086      	sub	sp, #24
 8018008:	1d06      	adds	r6, r0, #4
 801800a:	2300      	movs	r3, #0
 801800c:	4631      	mov	r1, r6
 801800e:	4605      	mov	r5, r0
 8018010:	a802      	add	r0, sp, #8
 8018012:	9301      	str	r3, [sp, #4]
 8018014:	f7ff fba8 	bl	8017768 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018018:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801801c:	8822      	ldrh	r2, [r4, #0]
 801801e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8018022:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018026:	f8ad 0014 	strh.w	r0, [sp, #20]
 801802a:	1ad2      	subs	r2, r2, r3
 801802c:	8863      	ldrh	r3, [r4, #2]
 801802e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018032:	1a5b      	subs	r3, r3, r1
 8018034:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8018038:	f8ad 1016 	strh.w	r1, [sp, #22]
 801803c:	aa01      	add	r2, sp, #4
 801803e:	a904      	add	r1, sp, #16
 8018040:	4630      	mov	r0, r6
 8018042:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018046:	f7f8 fb91 	bl	801076c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801804a:	9a01      	ldr	r2, [sp, #4]
 801804c:	b11a      	cbz	r2, 8018056 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801804e:	4621      	mov	r1, r4
 8018050:	4628      	mov	r0, r5
 8018052:	f7ff fed5 	bl	8017e00 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018056:	b006      	add	sp, #24
 8018058:	bd70      	pop	{r4, r5, r6, pc}

0801805a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801805a:	b530      	push	{r4, r5, lr}
 801805c:	4602      	mov	r2, r0
 801805e:	4604      	mov	r4, r0
 8018060:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8018064:	b085      	sub	sp, #20
 8018066:	460d      	mov	r5, r1
 8018068:	6851      	ldr	r1, [r2, #4]
 801806a:	466b      	mov	r3, sp
 801806c:	c303      	stmia	r3!, {r0, r1}
 801806e:	4629      	mov	r1, r5
 8018070:	4668      	mov	r0, sp
 8018072:	f7f8 faa3 	bl	80105bc <_ZN8touchgfx4RectaNERKS0_>
 8018076:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801807a:	b12b      	cbz	r3, 8018088 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801807c:	4669      	mov	r1, sp
 801807e:	4620      	mov	r0, r4
 8018080:	f7ff ffbf 	bl	8018002 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8018084:	b005      	add	sp, #20
 8018086:	bd30      	pop	{r4, r5, pc}
 8018088:	3404      	adds	r4, #4
 801808a:	4621      	mov	r1, r4
 801808c:	a802      	add	r0, sp, #8
 801808e:	f7ff fb6b 	bl	8017768 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018092:	f8bd 3000 	ldrh.w	r3, [sp]
 8018096:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801809a:	1a9b      	subs	r3, r3, r2
 801809c:	f8ad 3000 	strh.w	r3, [sp]
 80180a0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80180a4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80180a8:	4669      	mov	r1, sp
 80180aa:	1a9b      	subs	r3, r3, r2
 80180ac:	4620      	mov	r0, r4
 80180ae:	f8ad 3002 	strh.w	r3, [sp, #2]
 80180b2:	f7f8 fb22 	bl	80106fa <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80180b6:	e7e5      	b.n	8018084 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080180b8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80180b8:	680a      	ldr	r2, [r1, #0]
 80180ba:	460b      	mov	r3, r1
 80180bc:	6992      	ldr	r2, [r2, #24]
 80180be:	1d01      	adds	r1, r0, #4
 80180c0:	4618      	mov	r0, r3
 80180c2:	4710      	bx	r2

080180c4 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 80180c4:	4298      	cmp	r0, r3
 80180c6:	d200      	bcs.n	80180ca <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 80180c8:	b913      	cbnz	r3, 80180d0 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 80180ca:	440a      	add	r2, r1
 80180cc:	b210      	sxth	r0, r2
 80180ce:	4770      	bx	lr
 80180d0:	ee07 0a90 	vmov	s15, r0
 80180d4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80180d8:	ee07 3a90 	vmov	s15, r3
 80180dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80180e0:	eddf 4a15 	vldr	s9, [pc, #84]	; 8018138 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 80180e4:	eddf 5a15 	vldr	s11, [pc, #84]	; 801813c <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 80180e8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80180ec:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80180f0:	ee37 7a66 	vsub.f32	s14, s14, s13
 80180f4:	ee07 2a90 	vmov	s15, r2
 80180f8:	eee7 5a24 	vfma.f32	s11, s14, s9
 80180fc:	ee27 5a07 	vmul.f32	s10, s14, s14
 8018100:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8018104:	eee5 6a25 	vfma.f32	s13, s10, s11
 8018108:	ee07 1a90 	vmov	s15, r1
 801810c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018110:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8018114:	eee6 7a26 	vfma.f32	s15, s12, s13
 8018118:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801811c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018120:	bfcc      	ite	gt
 8018122:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8018126:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801812a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801812e:	ee17 3a90 	vmov	r3, s15
 8018132:	b218      	sxth	r0, r3
 8018134:	4770      	bx	lr
 8018136:	bf00      	nop
 8018138:	402ce6b0 	.word	0x402ce6b0
 801813c:	3fd9cd60 	.word	0x3fd9cd60

08018140 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8018140:	4298      	cmp	r0, r3
 8018142:	d200      	bcs.n	8018146 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8018144:	b913      	cbnz	r3, 801814c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8018146:	440a      	add	r2, r1
 8018148:	b210      	sxth	r0, r2
 801814a:	4770      	bx	lr
 801814c:	ee07 0a90 	vmov	s15, r0
 8018150:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8018154:	ee07 3a90 	vmov	s15, r3
 8018158:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801815c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8018160:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018164:	ee37 7a66 	vsub.f32	s14, s14, s13
 8018168:	ee07 2a90 	vmov	s15, r2
 801816c:	ee67 5a07 	vmul.f32	s11, s14, s14
 8018170:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8018174:	eee5 6a87 	vfma.f32	s13, s11, s14
 8018178:	ee07 1a90 	vmov	s15, r1
 801817c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018180:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8018184:	eee6 7a26 	vfma.f32	s15, s12, s13
 8018188:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801818c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018190:	bfcc      	ite	gt
 8018192:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8018196:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801819a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801819e:	ee17 3a90 	vmov	r3, s15
 80181a2:	b218      	sxth	r0, r3
 80181a4:	4770      	bx	lr

080181a6 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 80181a6:	4298      	cmp	r0, r3
 80181a8:	d200      	bcs.n	80181ac <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 80181aa:	b913      	cbnz	r3, 80181b2 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 80181ac:	440a      	add	r2, r1
 80181ae:	b210      	sxth	r0, r2
 80181b0:	4770      	bx	lr
 80181b2:	ee07 2a90 	vmov	s15, r2
 80181b6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80181ba:	ee07 0a90 	vmov	s15, r0
 80181be:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80181c2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80181c6:	ee07 3a10 	vmov	s14, r3
 80181ca:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80181ce:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80181d2:	ee07 1a90 	vmov	s15, r1
 80181d6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80181da:	ee77 7a27 	vadd.f32	s15, s14, s15
 80181de:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80181e2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80181e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80181ea:	bfcc      	ite	gt
 80181ec:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80181f0:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80181f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80181f8:	ee17 3a90 	vmov	r3, s15
 80181fc:	b218      	sxth	r0, r3
 80181fe:	4770      	bx	lr

08018200 <_ZN8touchgfx12TextProviderC1Ev>:
 8018200:	b538      	push	{r3, r4, r5, lr}
 8018202:	2500      	movs	r5, #0
 8018204:	2302      	movs	r3, #2
 8018206:	4604      	mov	r4, r0
 8018208:	e9c0 5500 	strd	r5, r5, [r0]
 801820c:	7403      	strb	r3, [r0, #16]
 801820e:	6145      	str	r5, [r0, #20]
 8018210:	7605      	strb	r5, [r0, #24]
 8018212:	83c5      	strh	r5, [r0, #30]
 8018214:	8405      	strh	r5, [r0, #32]
 8018216:	86c5      	strh	r5, [r0, #54]	; 0x36
 8018218:	8705      	strh	r5, [r0, #56]	; 0x38
 801821a:	87c5      	strh	r5, [r0, #62]	; 0x3e
 801821c:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8018220:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8018224:	220e      	movs	r2, #14
 8018226:	4629      	mov	r1, r5
 8018228:	304c      	adds	r0, #76	; 0x4c
 801822a:	f013 f9e6 	bl	802b5fa <memset>
 801822e:	2301      	movs	r3, #1
 8018230:	4620      	mov	r0, r4
 8018232:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8018236:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801823a:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801823e:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8018242:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8018246:	f7f0 f973 	bl	8008530 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801824a:	4620      	mov	r0, r4
 801824c:	bd38      	pop	{r3, r4, r5, pc}

0801824e <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801824e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018250:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018254:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8018256:	fab0 f080 	clz	r0, r0
 801825a:	0940      	lsrs	r0, r0, #5
 801825c:	4770      	bx	lr

0801825e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801825e:	b530      	push	{r4, r5, lr}
 8018260:	2500      	movs	r5, #0
 8018262:	2401      	movs	r4, #1
 8018264:	6843      	ldr	r3, [r0, #4]
 8018266:	b913      	cbnz	r3, 801826e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8018268:	6803      	ldr	r3, [r0, #0]
 801826a:	b313      	cbz	r3, 80182b2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801826c:	6043      	str	r3, [r0, #4]
 801826e:	7e03      	ldrb	r3, [r0, #24]
 8018270:	b143      	cbz	r3, 8018284 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8018272:	6943      	ldr	r3, [r0, #20]
 8018274:	b12b      	cbz	r3, 8018282 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8018276:	881a      	ldrh	r2, [r3, #0]
 8018278:	b11a      	cbz	r2, 8018282 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801827a:	1c9a      	adds	r2, r3, #2
 801827c:	6142      	str	r2, [r0, #20]
 801827e:	8818      	ldrh	r0, [r3, #0]
 8018280:	bd30      	pop	{r4, r5, pc}
 8018282:	7605      	strb	r5, [r0, #24]
 8018284:	6843      	ldr	r3, [r0, #4]
 8018286:	8819      	ldrh	r1, [r3, #0]
 8018288:	b199      	cbz	r1, 80182b2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801828a:	1c9a      	adds	r2, r3, #2
 801828c:	2902      	cmp	r1, #2
 801828e:	6042      	str	r2, [r0, #4]
 8018290:	d1f5      	bne.n	801827e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8018292:	7c03      	ldrb	r3, [r0, #16]
 8018294:	2b01      	cmp	r3, #1
 8018296:	d8e5      	bhi.n	8018264 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018298:	1c5a      	adds	r2, r3, #1
 801829a:	3302      	adds	r3, #2
 801829c:	7402      	strb	r2, [r0, #16]
 801829e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80182a2:	6143      	str	r3, [r0, #20]
 80182a4:	2b00      	cmp	r3, #0
 80182a6:	d0dd      	beq.n	8018264 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80182a8:	881b      	ldrh	r3, [r3, #0]
 80182aa:	2b00      	cmp	r3, #0
 80182ac:	d0da      	beq.n	8018264 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80182ae:	7604      	strb	r4, [r0, #24]
 80182b0:	e7d8      	b.n	8018264 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80182b2:	2000      	movs	r0, #0
 80182b4:	e7e4      	b.n	8018280 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080182b6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80182b6:	b430      	push	{r4, r5}
 80182b8:	6001      	str	r1, [r0, #0]
 80182ba:	2100      	movs	r1, #0
 80182bc:	6041      	str	r1, [r0, #4]
 80182be:	6815      	ldr	r5, [r2, #0]
 80182c0:	6085      	str	r5, [r0, #8]
 80182c2:	6852      	ldr	r2, [r2, #4]
 80182c4:	6443      	str	r3, [r0, #68]	; 0x44
 80182c6:	9b02      	ldr	r3, [sp, #8]
 80182c8:	60c2      	str	r2, [r0, #12]
 80182ca:	7401      	strb	r1, [r0, #16]
 80182cc:	6141      	str	r1, [r0, #20]
 80182ce:	7601      	strb	r1, [r0, #24]
 80182d0:	8701      	strh	r1, [r0, #56]	; 0x38
 80182d2:	8401      	strh	r1, [r0, #32]
 80182d4:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 80182d8:	6483      	str	r3, [r0, #72]	; 0x48
 80182da:	bc30      	pop	{r4, r5}
 80182dc:	f7f0 b928 	b.w	8008530 <_ZN8touchgfx12TextProvider18initializeInternalEv>

080182e0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80182e0:	b408      	push	{r3}
 80182e2:	b510      	push	{r4, lr}
 80182e4:	b085      	sub	sp, #20
 80182e6:	ac07      	add	r4, sp, #28
 80182e8:	f854 3b04 	ldr.w	r3, [r4], #4
 80182ec:	9300      	str	r3, [sp, #0]
 80182ee:	4613      	mov	r3, r2
 80182f0:	4622      	mov	r2, r4
 80182f2:	9403      	str	r4, [sp, #12]
 80182f4:	f7ff ffdf 	bl	80182b6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80182f8:	b005      	add	sp, #20
 80182fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80182fe:	b001      	add	sp, #4
 8018300:	4770      	bx	lr

08018302 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8018302:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018304:	4605      	mov	r5, r0
 8018306:	4608      	mov	r0, r1
 8018308:	b1e9      	cbz	r1, 8018346 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801830a:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 801830e:	460b      	mov	r3, r1
 8018310:	f101 0708 	add.w	r7, r1, #8
 8018314:	4622      	mov	r2, r4
 8018316:	6818      	ldr	r0, [r3, #0]
 8018318:	6859      	ldr	r1, [r3, #4]
 801831a:	4626      	mov	r6, r4
 801831c:	c603      	stmia	r6!, {r0, r1}
 801831e:	3308      	adds	r3, #8
 8018320:	42bb      	cmp	r3, r7
 8018322:	4634      	mov	r4, r6
 8018324:	d1f7      	bne.n	8018316 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8018326:	6818      	ldr	r0, [r3, #0]
 8018328:	6030      	str	r0, [r6, #0]
 801832a:	889b      	ldrh	r3, [r3, #4]
 801832c:	80b3      	strh	r3, [r6, #4]
 801832e:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8018332:	015b      	lsls	r3, r3, #5
 8018334:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8018338:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 801833c:	430b      	orrs	r3, r1
 801833e:	425b      	negs	r3, r3
 8018340:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8018344:	4610      	mov	r0, r2
 8018346:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018348 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8018348:	b538      	push	{r3, r4, r5, lr}
 801834a:	460c      	mov	r4, r1
 801834c:	6811      	ldr	r1, [r2, #0]
 801834e:	4610      	mov	r0, r2
 8018350:	68cd      	ldr	r5, [r1, #12]
 8018352:	4619      	mov	r1, r3
 8018354:	47a8      	blx	r5
 8018356:	2800      	cmp	r0, #0
 8018358:	bf08      	it	eq
 801835a:	4620      	moveq	r0, r4
 801835c:	bd38      	pop	{r3, r4, r5, pc}
	...

08018360 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8018360:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018362:	4604      	mov	r4, r0
 8018364:	4615      	mov	r5, r2
 8018366:	4608      	mov	r0, r1
 8018368:	b93a      	cbnz	r2, 801837a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801836a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801836e:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8018372:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8018376:	4628      	mov	r0, r5
 8018378:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801837a:	f892 c00d 	ldrb.w	ip, [r2, #13]
 801837e:	8893      	ldrh	r3, [r2, #4]
 8018380:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8018384:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8018388:	79ee      	ldrb	r6, [r5, #7]
 801838a:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 801838e:	4316      	orrs	r6, r2
 8018390:	19da      	adds	r2, r3, r7
 8018392:	b291      	uxth	r1, r2
 8018394:	291d      	cmp	r1, #29
 8018396:	b2b7      	uxth	r7, r6
 8018398:	d87a      	bhi.n	8018490 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801839a:	2201      	movs	r2, #1
 801839c:	408a      	lsls	r2, r1
 801839e:	4975      	ldr	r1, [pc, #468]	; (8018574 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 80183a0:	420a      	tst	r2, r1
 80183a2:	ea4f 06e6 	mov.w	r6, r6, asr #3
 80183a6:	d12d      	bne.n	8018404 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 80183a8:	f412 7f60 	tst.w	r2, #896	; 0x380
 80183ac:	d070      	beq.n	8018490 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 80183ae:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 80183b2:	462b      	mov	r3, r5
 80183b4:	f105 0e08 	add.w	lr, r5, #8
 80183b8:	4615      	mov	r5, r2
 80183ba:	6818      	ldr	r0, [r3, #0]
 80183bc:	6859      	ldr	r1, [r3, #4]
 80183be:	4694      	mov	ip, r2
 80183c0:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80183c4:	3308      	adds	r3, #8
 80183c6:	4573      	cmp	r3, lr
 80183c8:	4662      	mov	r2, ip
 80183ca:	d1f6      	bne.n	80183ba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 80183cc:	6818      	ldr	r0, [r3, #0]
 80183ce:	f8cc 0000 	str.w	r0, [ip]
 80183d2:	889b      	ldrh	r3, [r3, #4]
 80183d4:	f8ac 3004 	strh.w	r3, [ip, #4]
 80183d8:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 80183dc:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 80183e0:	b2b3      	uxth	r3, r6
 80183e2:	1aca      	subs	r2, r1, r3
 80183e4:	b292      	uxth	r2, r2
 80183e6:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 80183ea:	10d2      	asrs	r2, r2, #3
 80183ec:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 80183f0:	f002 0260 	and.w	r2, r2, #96	; 0x60
 80183f4:	4302      	orrs	r2, r0
 80183f6:	1bcf      	subs	r7, r1, r7
 80183f8:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 80183fc:	1afb      	subs	r3, r7, r3
 80183fe:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8018402:	e7b8      	b.n	8018376 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8018404:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8018406:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801840a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801840c:	f640 6333 	movw	r3, #3635	; 0xe33
 8018410:	4299      	cmp	r1, r3
 8018412:	d110      	bne.n	8018436 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8018414:	6803      	ldr	r3, [r0, #0]
 8018416:	68db      	ldr	r3, [r3, #12]
 8018418:	4798      	blx	r3
 801841a:	7b41      	ldrb	r1, [r0, #13]
 801841c:	00cb      	lsls	r3, r1, #3
 801841e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018422:	7a03      	ldrb	r3, [r0, #8]
 8018424:	0648      	lsls	r0, r1, #25
 8018426:	ea43 0302 	orr.w	r3, r3, r2
 801842a:	bf44      	itt	mi
 801842c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018430:	b21b      	sxthmi	r3, r3
 8018432:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018436:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801843a:	443b      	add	r3, r7
 801843c:	4433      	add	r3, r6
 801843e:	b29b      	uxth	r3, r3
 8018440:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8018444:	462a      	mov	r2, r5
 8018446:	f105 0c08 	add.w	ip, r5, #8
 801844a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801844e:	4635      	mov	r5, r6
 8018450:	6810      	ldr	r0, [r2, #0]
 8018452:	6851      	ldr	r1, [r2, #4]
 8018454:	4637      	mov	r7, r6
 8018456:	c703      	stmia	r7!, {r0, r1}
 8018458:	3208      	adds	r2, #8
 801845a:	4562      	cmp	r2, ip
 801845c:	463e      	mov	r6, r7
 801845e:	d1f7      	bne.n	8018450 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8018460:	6810      	ldr	r0, [r2, #0]
 8018462:	6038      	str	r0, [r7, #0]
 8018464:	8892      	ldrh	r2, [r2, #4]
 8018466:	80ba      	strh	r2, [r7, #4]
 8018468:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801846c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8018470:	10db      	asrs	r3, r3, #3
 8018472:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8018476:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801847a:	4313      	orrs	r3, r2
 801847c:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018480:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8018484:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8018488:	1a9b      	subs	r3, r3, r2
 801848a:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 801848e:	e772      	b.n	8018376 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8018490:	f023 0204 	bic.w	r2, r3, #4
 8018494:	f640 611b 	movw	r1, #3611	; 0xe1b
 8018498:	428a      	cmp	r2, r1
 801849a:	d003      	beq.n	80184a4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 801849c:	f640 621d 	movw	r2, #3613	; 0xe1d
 80184a0:	4293      	cmp	r3, r2
 80184a2:	d120      	bne.n	80184e6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 80184a4:	3b01      	subs	r3, #1
 80184a6:	4602      	mov	r2, r0
 80184a8:	b29b      	uxth	r3, r3
 80184aa:	4629      	mov	r1, r5
 80184ac:	4620      	mov	r0, r4
 80184ae:	f7ff ff4b 	bl	8018348 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80184b2:	7b41      	ldrb	r1, [r0, #13]
 80184b4:	00cb      	lsls	r3, r1, #3
 80184b6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80184ba:	7a03      	ldrb	r3, [r0, #8]
 80184bc:	0649      	lsls	r1, r1, #25
 80184be:	ea43 0302 	orr.w	r3, r3, r2
 80184c2:	bf44      	itt	mi
 80184c4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80184c8:	b21b      	sxthmi	r3, r3
 80184ca:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80184ce:	7b6b      	ldrb	r3, [r5, #13]
 80184d0:	7aaa      	ldrb	r2, [r5, #10]
 80184d2:	005b      	lsls	r3, r3, #1
 80184d4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80184d8:	4313      	orrs	r3, r2
 80184da:	115a      	asrs	r2, r3, #5
 80184dc:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 80184e0:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 80184e4:	e036      	b.n	8018554 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 80184e6:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 80184ea:	f402 7180 	and.w	r1, r2, #256	; 0x100
 80184ee:	7a2a      	ldrb	r2, [r5, #8]
 80184f0:	f01c 0f40 	tst.w	ip, #64	; 0x40
 80184f4:	ea42 0201 	orr.w	r2, r2, r1
 80184f8:	bf1c      	itt	ne
 80184fa:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 80184fe:	b212      	sxthne	r2, r2
 8018500:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8018504:	f640 6109 	movw	r1, #3593	; 0xe09
 8018508:	f023 0210 	bic.w	r2, r3, #16
 801850c:	428a      	cmp	r2, r1
 801850e:	d003      	beq.n	8018518 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8018510:	f640 6213 	movw	r2, #3603	; 0xe13
 8018514:	4293      	cmp	r3, r2
 8018516:	d12a      	bne.n	801856e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8018518:	7b6e      	ldrb	r6, [r5, #13]
 801851a:	0076      	lsls	r6, r6, #1
 801851c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8018520:	7aae      	ldrb	r6, [r5, #10]
 8018522:	4316      	orrs	r6, r2
 8018524:	f640 6213 	movw	r2, #3603	; 0xe13
 8018528:	4293      	cmp	r3, r2
 801852a:	bf18      	it	ne
 801852c:	f103 33ff 	addne.w	r3, r3, #4294967295
 8018530:	4602      	mov	r2, r0
 8018532:	bf14      	ite	ne
 8018534:	b29b      	uxthne	r3, r3
 8018536:	f640 630c 	movweq	r3, #3596	; 0xe0c
 801853a:	4629      	mov	r1, r5
 801853c:	4620      	mov	r0, r4
 801853e:	f7ff ff03 	bl	8018348 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8018542:	7b43      	ldrb	r3, [r0, #13]
 8018544:	7a82      	ldrb	r2, [r0, #10]
 8018546:	005b      	lsls	r3, r3, #1
 8018548:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801854c:	4313      	orrs	r3, r2
 801854e:	1af6      	subs	r6, r6, r3
 8018550:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8018554:	7b69      	ldrb	r1, [r5, #13]
 8018556:	00cb      	lsls	r3, r1, #3
 8018558:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801855c:	7a2b      	ldrb	r3, [r5, #8]
 801855e:	4313      	orrs	r3, r2
 8018560:	064a      	lsls	r2, r1, #25
 8018562:	bf44      	itt	mi
 8018564:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018568:	b21b      	sxthmi	r3, r3
 801856a:	1bdb      	subs	r3, r3, r7
 801856c:	e747      	b.n	80183fe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 801856e:	2300      	movs	r3, #0
 8018570:	e7b6      	b.n	80184e0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8018572:	bf00      	nop
 8018574:	3fc00079 	.word	0x3fc00079

08018578 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8018578:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801857c:	4604      	mov	r4, r0
 801857e:	b942      	cbnz	r2, 8018592 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8018580:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8018584:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8018588:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 801858c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8018590:	e047      	b.n	8018622 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8018592:	7b51      	ldrb	r1, [r2, #13]
 8018594:	8893      	ldrh	r3, [r2, #4]
 8018596:	010d      	lsls	r5, r1, #4
 8018598:	f405 7080 	and.w	r0, r5, #256	; 0x100
 801859c:	79d5      	ldrb	r5, [r2, #7]
 801859e:	4305      	orrs	r5, r0
 80185a0:	2d04      	cmp	r5, #4
 80185a2:	bfcc      	ite	gt
 80185a4:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 80185a8:	f04f 0e01 	movle.w	lr, #1
 80185ac:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 80185b0:	f200 80ab 	bhi.w	801870a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 80185b4:	f240 60e7 	movw	r0, #1767	; 0x6e7
 80185b8:	4283      	cmp	r3, r0
 80185ba:	d216      	bcs.n	80185ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80185bc:	f240 605b 	movw	r0, #1627	; 0x65b
 80185c0:	4283      	cmp	r3, r0
 80185c2:	d859      	bhi.n	8018678 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 80185c4:	f240 6057 	movw	r0, #1623	; 0x657
 80185c8:	4283      	cmp	r3, r0
 80185ca:	d20e      	bcs.n	80185ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80185cc:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80185d0:	d24a      	bcs.n	8018668 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 80185d2:	f240 604e 	movw	r0, #1614	; 0x64e
 80185d6:	4283      	cmp	r3, r0
 80185d8:	d207      	bcs.n	80185ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80185da:	f240 601a 	movw	r0, #1562	; 0x61a
 80185de:	4283      	cmp	r3, r0
 80185e0:	d02a      	beq.n	8018638 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80185e2:	d821      	bhi.n	8018628 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 80185e4:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 80185e8:	d35b      	bcc.n	80186a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80185ea:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 80185ee:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80185f2:	f040 80d0 	bne.w	8018796 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80185f6:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 80185fa:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80185fe:	f040 80ca 	bne.w	8018796 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8018602:	00cb      	lsls	r3, r1, #3
 8018604:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8018608:	7a13      	ldrb	r3, [r2, #8]
 801860a:	0649      	lsls	r1, r1, #25
 801860c:	ea43 0300 	orr.w	r3, r3, r0
 8018610:	bf44      	itt	mi
 8018612:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018616:	b21b      	sxthmi	r3, r3
 8018618:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801861c:	1b5d      	subs	r5, r3, r5
 801861e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018622:	4610      	mov	r0, r2
 8018624:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018628:	f240 604b 	movw	r0, #1611	; 0x64b
 801862c:	4283      	cmp	r3, r0
 801862e:	d338      	bcc.n	80186a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018630:	f240 604c 	movw	r0, #1612	; 0x64c
 8018634:	4283      	cmp	r3, r0
 8018636:	d9d8      	bls.n	80185ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018638:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 801863c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8018640:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018644:	f040 80f2 	bne.w	801882c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8018648:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801864c:	f040 80ee 	bne.w	801882c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8018650:	00cb      	lsls	r3, r1, #3
 8018652:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8018656:	7a13      	ldrb	r3, [r2, #8]
 8018658:	064e      	lsls	r6, r1, #25
 801865a:	ea43 0300 	orr.w	r3, r3, r0
 801865e:	bf44      	itt	mi
 8018660:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018664:	b21b      	sxthmi	r3, r3
 8018666:	e7d9      	b.n	801861c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8018668:	f240 6054 	movw	r0, #1620	; 0x654
 801866c:	4283      	cmp	r3, r0
 801866e:	d8e3      	bhi.n	8018638 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018670:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8018674:	d9e0      	bls.n	8018638 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018676:	e7b8      	b.n	80185ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018678:	f240 6074 	movw	r0, #1652	; 0x674
 801867c:	4283      	cmp	r3, r0
 801867e:	d0b4      	beq.n	80185ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018680:	d82d      	bhi.n	80186de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8018682:	f240 605e 	movw	r0, #1630	; 0x65e
 8018686:	4283      	cmp	r3, r0
 8018688:	d804      	bhi.n	8018694 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801868a:	f240 605d 	movw	r0, #1629	; 0x65d
 801868e:	4283      	cmp	r3, r0
 8018690:	d3d2      	bcc.n	8018638 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018692:	e7aa      	b.n	80185ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018694:	f240 605f 	movw	r0, #1631	; 0x65f
 8018698:	4283      	cmp	r3, r0
 801869a:	d0cd      	beq.n	8018638 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801869c:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 80186a0:	d0a3      	beq.n	80185ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80186a2:	00cb      	lsls	r3, r1, #3
 80186a4:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80186a8:	7a13      	ldrb	r3, [r2, #8]
 80186aa:	0649      	lsls	r1, r1, #25
 80186ac:	ea43 0300 	orr.w	r3, r3, r0
 80186b0:	bf44      	itt	mi
 80186b2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80186b6:	b21b      	sxthmi	r3, r3
 80186b8:	1b5d      	subs	r5, r3, r5
 80186ba:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80186be:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80186c2:	7b53      	ldrb	r3, [r2, #13]
 80186c4:	015b      	lsls	r3, r3, #5
 80186c6:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80186ca:	7993      	ldrb	r3, [r2, #6]
 80186cc:	430b      	orrs	r3, r1
 80186ce:	005b      	lsls	r3, r3, #1
 80186d0:	2105      	movs	r1, #5
 80186d2:	fb93 f3f1 	sdiv	r3, r3, r1
 80186d6:	f992 1009 	ldrsb.w	r1, [r2, #9]
 80186da:	440b      	add	r3, r1
 80186dc:	e756      	b.n	801858c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 80186de:	f240 60e2 	movw	r0, #1762	; 0x6e2
 80186e2:	4283      	cmp	r3, r0
 80186e4:	d809      	bhi.n	80186fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 80186e6:	f240 60df 	movw	r0, #1759	; 0x6df
 80186ea:	4283      	cmp	r3, r0
 80186ec:	f4bf af7d 	bcs.w	80185ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80186f0:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 80186f4:	2b05      	cmp	r3, #5
 80186f6:	d8d4      	bhi.n	80186a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80186f8:	e777      	b.n	80185ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80186fa:	f240 60e3 	movw	r0, #1763	; 0x6e3
 80186fe:	4283      	cmp	r3, r0
 8018700:	d09a      	beq.n	8018638 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018702:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8018706:	4283      	cmp	r3, r0
 8018708:	e7ca      	b.n	80186a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801870a:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 801870e:	d22b      	bcs.n	8018768 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8018710:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8018714:	4283      	cmp	r3, r0
 8018716:	d28f      	bcs.n	8018638 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018718:	f640 00e5 	movw	r0, #2277	; 0x8e5
 801871c:	4283      	cmp	r3, r0
 801871e:	d816      	bhi.n	801874e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8018720:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8018724:	4283      	cmp	r3, r0
 8018726:	f4bf af60 	bcs.w	80185ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801872a:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801872e:	4283      	cmp	r3, r0
 8018730:	d80a      	bhi.n	8018748 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8018732:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8018736:	4283      	cmp	r3, r0
 8018738:	f4bf af57 	bcs.w	80185ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801873c:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8018740:	4283      	cmp	r3, r0
 8018742:	f43f af79 	beq.w	8018638 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018746:	e7ac      	b.n	80186a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018748:	f240 60ed 	movw	r0, #1773	; 0x6ed
 801874c:	e7f8      	b.n	8018740 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801874e:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8018752:	4283      	cmp	r3, r0
 8018754:	d802      	bhi.n	801875c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8018756:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801875a:	e798      	b.n	801868e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 801875c:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8018760:	4283      	cmp	r3, r0
 8018762:	f47f af42 	bne.w	80185ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018766:	e767      	b.n	8018638 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018768:	f640 00f6 	movw	r0, #2294	; 0x8f6
 801876c:	4283      	cmp	r3, r0
 801876e:	f43f af63 	beq.w	8018638 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018772:	d802      	bhi.n	801877a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8018774:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8018778:	e7f2      	b.n	8018760 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801877a:	f640 00fa 	movw	r0, #2298	; 0x8fa
 801877e:	4283      	cmp	r3, r0
 8018780:	d805      	bhi.n	801878e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8018782:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8018786:	4283      	cmp	r3, r0
 8018788:	f4ff af2f 	bcc.w	80185ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801878c:	e754      	b.n	8018638 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801878e:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8018792:	4283      	cmp	r3, r0
 8018794:	e7af      	b.n	80186f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8018796:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801879a:	4617      	mov	r7, r2
 801879c:	f102 0808 	add.w	r8, r2, #8
 80187a0:	4666      	mov	r6, ip
 80187a2:	6838      	ldr	r0, [r7, #0]
 80187a4:	6879      	ldr	r1, [r7, #4]
 80187a6:	46e6      	mov	lr, ip
 80187a8:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80187ac:	3708      	adds	r7, #8
 80187ae:	4547      	cmp	r7, r8
 80187b0:	46f4      	mov	ip, lr
 80187b2:	d1f6      	bne.n	80187a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 80187b4:	6838      	ldr	r0, [r7, #0]
 80187b6:	f8ce 0000 	str.w	r0, [lr]
 80187ba:	88b9      	ldrh	r1, [r7, #4]
 80187bc:	f8ae 1004 	strh.w	r1, [lr, #4]
 80187c0:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80187c4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80187c8:	d009      	beq.n	80187de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 80187ca:	7b51      	ldrb	r1, [r2, #13]
 80187cc:	7992      	ldrb	r2, [r2, #6]
 80187ce:	0149      	lsls	r1, r1, #5
 80187d0:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80187d4:	4311      	orrs	r1, r2
 80187d6:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80187da:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80187de:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80187e2:	b2ad      	uxth	r5, r5
 80187e4:	d00d      	beq.n	8018802 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 80187e6:	442b      	add	r3, r5
 80187e8:	b29b      	uxth	r3, r3
 80187ea:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80187ee:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80187f2:	10db      	asrs	r3, r3, #3
 80187f4:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80187f8:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80187fc:	4313      	orrs	r3, r2
 80187fe:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018802:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8018806:	00cb      	lsls	r3, r1, #3
 8018808:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801880c:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8018810:	064f      	lsls	r7, r1, #25
 8018812:	ea43 0302 	orr.w	r3, r3, r2
 8018816:	bf44      	itt	mi
 8018818:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801881c:	b21b      	sxthmi	r3, r3
 801881e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018822:	1b5b      	subs	r3, r3, r5
 8018824:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8018828:	4632      	mov	r2, r6
 801882a:	e6fa      	b.n	8018622 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801882c:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8018830:	4617      	mov	r7, r2
 8018832:	f102 0908 	add.w	r9, r2, #8
 8018836:	4666      	mov	r6, ip
 8018838:	6838      	ldr	r0, [r7, #0]
 801883a:	6879      	ldr	r1, [r7, #4]
 801883c:	46e0      	mov	r8, ip
 801883e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8018842:	3708      	adds	r7, #8
 8018844:	454f      	cmp	r7, r9
 8018846:	46c4      	mov	ip, r8
 8018848:	d1f6      	bne.n	8018838 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801884a:	6838      	ldr	r0, [r7, #0]
 801884c:	f8c8 0000 	str.w	r0, [r8]
 8018850:	88b9      	ldrh	r1, [r7, #4]
 8018852:	f8a8 1004 	strh.w	r1, [r8, #4]
 8018856:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801885a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801885e:	d009      	beq.n	8018874 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8018860:	7b51      	ldrb	r1, [r2, #13]
 8018862:	7992      	ldrb	r2, [r2, #6]
 8018864:	0149      	lsls	r1, r1, #5
 8018866:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801886a:	4311      	orrs	r1, r2
 801886c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8018870:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8018874:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018878:	d00e      	beq.n	8018898 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801887a:	eba3 030e 	sub.w	r3, r3, lr
 801887e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8018882:	b29b      	uxth	r3, r3
 8018884:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8018888:	10db      	asrs	r3, r3, #3
 801888a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801888e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8018892:	4313      	orrs	r3, r2
 8018894:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018898:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801889c:	00cb      	lsls	r3, r1, #3
 801889e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80188a2:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80188a6:	0648      	lsls	r0, r1, #25
 80188a8:	ea43 0302 	orr.w	r3, r3, r2
 80188ac:	bf44      	itt	mi
 80188ae:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80188b2:	b21b      	sxthmi	r3, r3
 80188b4:	1b5d      	subs	r5, r3, r5
 80188b6:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80188ba:	e7b5      	b.n	8018828 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

080188bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80188bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80188c0:	461e      	mov	r6, r3
 80188c2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80188c4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80188c8:	4604      	mov	r4, r0
 80188ca:	4617      	mov	r7, r2
 80188cc:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80188d0:	f7ef fdec 	bl	80084ac <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80188d4:	4605      	mov	r5, r0
 80188d6:	b918      	cbnz	r0, 80188e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80188d8:	6030      	str	r0, [r6, #0]
 80188da:	4628      	mov	r0, r5
 80188dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80188e0:	683b      	ldr	r3, [r7, #0]
 80188e2:	4601      	mov	r1, r0
 80188e4:	68db      	ldr	r3, [r3, #12]
 80188e6:	4638      	mov	r0, r7
 80188e8:	4798      	blx	r3
 80188ea:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80188ee:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80188f2:	4602      	mov	r2, r0
 80188f4:	6030      	str	r0, [r6, #0]
 80188f6:	d213      	bcs.n	8018920 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 80188f8:	4643      	mov	r3, r8
 80188fa:	4639      	mov	r1, r7
 80188fc:	4620      	mov	r0, r4
 80188fe:	f7ff fe3b 	bl	8018578 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8018902:	6030      	str	r0, [r6, #0]
 8018904:	6833      	ldr	r3, [r6, #0]
 8018906:	b143      	cbz	r3, 801891a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8018908:	7b5a      	ldrb	r2, [r3, #13]
 801890a:	7a9b      	ldrb	r3, [r3, #10]
 801890c:	0052      	lsls	r2, r2, #1
 801890e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8018912:	4313      	orrs	r3, r2
 8018914:	bf0c      	ite	eq
 8018916:	2301      	moveq	r3, #1
 8018918:	2300      	movne	r3, #0
 801891a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801891e:	e7dc      	b.n	80188da <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8018920:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8018924:	b29b      	uxth	r3, r3
 8018926:	2b7f      	cmp	r3, #127	; 0x7f
 8018928:	d804      	bhi.n	8018934 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801892a:	4639      	mov	r1, r7
 801892c:	4620      	mov	r0, r4
 801892e:	f7ff fd17 	bl	8018360 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8018932:	e7e6      	b.n	8018902 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8018934:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8018938:	2b00      	cmp	r3, #0
 801893a:	d0e3      	beq.n	8018904 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801893c:	f640 1302 	movw	r3, #2306	; 0x902
 8018940:	429d      	cmp	r5, r3
 8018942:	d1df      	bne.n	8018904 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8018944:	4601      	mov	r1, r0
 8018946:	4620      	mov	r0, r4
 8018948:	f7ff fcdb 	bl	8018302 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801894c:	e7d9      	b.n	8018902 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801894e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801894e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018952:	461e      	mov	r6, r3
 8018954:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018956:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801895a:	4604      	mov	r4, r0
 801895c:	4617      	mov	r7, r2
 801895e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018962:	f7ef fda3 	bl	80084ac <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8018966:	4605      	mov	r5, r0
 8018968:	b918      	cbnz	r0, 8018972 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801896a:	6030      	str	r0, [r6, #0]
 801896c:	4628      	mov	r0, r5
 801896e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018972:	683b      	ldr	r3, [r7, #0]
 8018974:	4601      	mov	r1, r0
 8018976:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801897a:	4638      	mov	r0, r7
 801897c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8018980:	47c8      	blx	r9
 8018982:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8018986:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801898a:	4602      	mov	r2, r0
 801898c:	6030      	str	r0, [r6, #0]
 801898e:	d213      	bcs.n	80189b8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8018990:	4643      	mov	r3, r8
 8018992:	4639      	mov	r1, r7
 8018994:	4620      	mov	r0, r4
 8018996:	f7ff fdef 	bl	8018578 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801899a:	6030      	str	r0, [r6, #0]
 801899c:	6833      	ldr	r3, [r6, #0]
 801899e:	b143      	cbz	r3, 80189b2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80189a0:	7b5a      	ldrb	r2, [r3, #13]
 80189a2:	7a9b      	ldrb	r3, [r3, #10]
 80189a4:	0052      	lsls	r2, r2, #1
 80189a6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80189aa:	4313      	orrs	r3, r2
 80189ac:	bf0c      	ite	eq
 80189ae:	2301      	moveq	r3, #1
 80189b0:	2300      	movne	r3, #0
 80189b2:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80189b6:	e7d9      	b.n	801896c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80189b8:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80189bc:	b29b      	uxth	r3, r3
 80189be:	2b7f      	cmp	r3, #127	; 0x7f
 80189c0:	d804      	bhi.n	80189cc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80189c2:	4639      	mov	r1, r7
 80189c4:	4620      	mov	r0, r4
 80189c6:	f7ff fccb 	bl	8018360 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80189ca:	e7e6      	b.n	801899a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80189cc:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80189d0:	2b00      	cmp	r3, #0
 80189d2:	d0e3      	beq.n	801899c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80189d4:	f640 1302 	movw	r3, #2306	; 0x902
 80189d8:	429d      	cmp	r5, r3
 80189da:	d1df      	bne.n	801899c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80189dc:	4601      	mov	r1, r0
 80189de:	4620      	mov	r0, r4
 80189e0:	f7ff fc8f 	bl	8018302 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80189e4:	e7d9      	b.n	801899a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

080189e6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80189e6:	b510      	push	{r4, lr}
 80189e8:	4604      	mov	r4, r0
 80189ea:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80189ee:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80189f0:	b1f1      	cbz	r1, 8018a30 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80189f2:	2b0a      	cmp	r3, #10
 80189f4:	d02f      	beq.n	8018a56 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80189f6:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 80189f8:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80189fc:	3901      	subs	r1, #1
 80189fe:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8018a00:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8018a04:	1c51      	adds	r1, r2, #1
 8018a06:	b289      	uxth	r1, r1
 8018a08:	2901      	cmp	r1, #1
 8018a0a:	bf84      	itt	hi
 8018a0c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8018a10:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8018a12:	f103 0201 	add.w	r2, r3, #1
 8018a16:	8722      	strh	r2, [r4, #56]	; 0x38
 8018a18:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8018a1a:	bf98      	it	ls
 8018a1c:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8018a1e:	4413      	add	r3, r2
 8018a20:	b29b      	uxth	r3, r3
 8018a22:	2b09      	cmp	r3, #9
 8018a24:	bf88      	it	hi
 8018a26:	3b0a      	subhi	r3, #10
 8018a28:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018a2c:	8458      	strh	r0, [r3, #34]	; 0x22
 8018a2e:	e7dc      	b.n	80189ea <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8018a30:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018a32:	2b0a      	cmp	r3, #10
 8018a34:	d00f      	beq.n	8018a56 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8018a36:	4620      	mov	r0, r4
 8018a38:	f7ff fc11 	bl	801825e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8018a3c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018a3e:	1c5a      	adds	r2, r3, #1
 8018a40:	8722      	strh	r2, [r4, #56]	; 0x38
 8018a42:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8018a44:	4413      	add	r3, r2
 8018a46:	b29b      	uxth	r3, r3
 8018a48:	2b09      	cmp	r3, #9
 8018a4a:	bf88      	it	hi
 8018a4c:	3b0a      	subhi	r3, #10
 8018a4e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018a52:	8458      	strh	r0, [r3, #34]	; 0x22
 8018a54:	e7ec      	b.n	8018a30 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8018a56:	bd10      	pop	{r4, pc}

08018a58 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8018a58:	b538      	push	{r3, r4, r5, lr}
 8018a5a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018a5c:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8018a60:	4604      	mov	r4, r0
 8018a62:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8018a64:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8018a66:	3a01      	subs	r2, #1
 8018a68:	8702      	strh	r2, [r0, #56]	; 0x38
 8018a6a:	1c5a      	adds	r2, r3, #1
 8018a6c:	b292      	uxth	r2, r2
 8018a6e:	2a09      	cmp	r2, #9
 8018a70:	bf86      	itte	hi
 8018a72:	3b09      	subhi	r3, #9
 8018a74:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8018a76:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8018a78:	f7ff ffb5 	bl	80189e6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8018a7c:	8c23      	ldrh	r3, [r4, #32]
 8018a7e:	2b01      	cmp	r3, #1
 8018a80:	bf9c      	itt	ls
 8018a82:	3301      	addls	r3, #1
 8018a84:	8423      	strhls	r3, [r4, #32]
 8018a86:	8be3      	ldrh	r3, [r4, #30]
 8018a88:	b90b      	cbnz	r3, 8018a8e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8018a8a:	2302      	movs	r3, #2
 8018a8c:	83e3      	strh	r3, [r4, #30]
 8018a8e:	8be3      	ldrh	r3, [r4, #30]
 8018a90:	3b01      	subs	r3, #1
 8018a92:	b29b      	uxth	r3, r3
 8018a94:	83e3      	strh	r3, [r4, #30]
 8018a96:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018a9a:	4628      	mov	r0, r5
 8018a9c:	8365      	strh	r5, [r4, #26]
 8018a9e:	bd38      	pop	{r3, r4, r5, pc}

08018aa0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8018aa0:	428a      	cmp	r2, r1
 8018aa2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018aa6:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8018aa8:	d931      	bls.n	8018b0e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8018aaa:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8018aac:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8018ab0:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8018ab4:	19ee      	adds	r6, r5, r7
 8018ab6:	1a54      	subs	r4, r2, r1
 8018ab8:	3e01      	subs	r6, #1
 8018aba:	fa1f fe84 	uxth.w	lr, r4
 8018abe:	b2b4      	uxth	r4, r6
 8018ac0:	eba4 090e 	sub.w	r9, r4, lr
 8018ac4:	fa1f f989 	uxth.w	r9, r9
 8018ac8:	2c09      	cmp	r4, #9
 8018aca:	4626      	mov	r6, r4
 8018acc:	bf88      	it	hi
 8018ace:	f1a4 060a 	subhi.w	r6, r4, #10
 8018ad2:	f1bc 0f00 	cmp.w	ip, #0
 8018ad6:	bf08      	it	eq
 8018ad8:	f04f 0c02 	moveq.w	ip, #2
 8018adc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8018ae0:	f10c 3cff 	add.w	ip, ip, #4294967295
 8018ae4:	fa1f fc8c 	uxth.w	ip, ip
 8018ae8:	3c01      	subs	r4, #1
 8018aea:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8018aee:	b2a4      	uxth	r4, r4
 8018af0:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8018af4:	454c      	cmp	r4, r9
 8018af6:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8018afa:	d1e5      	bne.n	8018ac8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8018afc:	eba5 050e 	sub.w	r5, r5, lr
 8018b00:	eb0e 0408 	add.w	r4, lr, r8
 8018b04:	8705      	strh	r5, [r0, #56]	; 0x38
 8018b06:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8018b0a:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8018b0e:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8018b10:	1a64      	subs	r4, r4, r1
 8018b12:	4439      	add	r1, r7
 8018b14:	b289      	uxth	r1, r1
 8018b16:	2909      	cmp	r1, #9
 8018b18:	bf88      	it	hi
 8018b1a:	390a      	subhi	r1, #10
 8018b1c:	8704      	strh	r4, [r0, #56]	; 0x38
 8018b1e:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018b20:	250a      	movs	r5, #10
 8018b22:	b18a      	cbz	r2, 8018b48 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8018b24:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8018b26:	3a01      	subs	r2, #1
 8018b28:	b292      	uxth	r2, r2
 8018b2a:	3101      	adds	r1, #1
 8018b2c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8018b30:	8701      	strh	r1, [r0, #56]	; 0x38
 8018b32:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8018b34:	b901      	cbnz	r1, 8018b38 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8018b36:	86c5      	strh	r5, [r0, #54]	; 0x36
 8018b38:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8018b3a:	3901      	subs	r1, #1
 8018b3c:	b289      	uxth	r1, r1
 8018b3e:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018b40:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8018b44:	844c      	strh	r4, [r1, #34]	; 0x22
 8018b46:	e7ec      	b.n	8018b22 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8018b48:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018b4c:	f7ff bf4b 	b.w	80189e6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08018b50 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8018b50:	b570      	push	{r4, r5, r6, lr}
 8018b52:	2500      	movs	r5, #0
 8018b54:	4295      	cmp	r5, r2
 8018b56:	d011      	beq.n	8018b7c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8018b58:	8bc4      	ldrh	r4, [r0, #30]
 8018b5a:	f831 6b02 	ldrh.w	r6, [r1], #2
 8018b5e:	4414      	add	r4, r2
 8018b60:	3c01      	subs	r4, #1
 8018b62:	1b64      	subs	r4, r4, r5
 8018b64:	b2a4      	uxth	r4, r4
 8018b66:	2c01      	cmp	r4, #1
 8018b68:	bf88      	it	hi
 8018b6a:	3c02      	subhi	r4, #2
 8018b6c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8018b70:	8b64      	ldrh	r4, [r4, #26]
 8018b72:	42b4      	cmp	r4, r6
 8018b74:	d117      	bne.n	8018ba6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8018b76:	3501      	adds	r5, #1
 8018b78:	b2ad      	uxth	r5, r5
 8018b7a:	e7eb      	b.n	8018b54 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8018b7c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018b80:	2400      	movs	r4, #0
 8018b82:	4413      	add	r3, r2
 8018b84:	b2a2      	uxth	r2, r4
 8018b86:	429a      	cmp	r2, r3
 8018b88:	da0f      	bge.n	8018baa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8018b8a:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8018b8c:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8018b90:	4432      	add	r2, r6
 8018b92:	b292      	uxth	r2, r2
 8018b94:	2a09      	cmp	r2, #9
 8018b96:	bf88      	it	hi
 8018b98:	3a0a      	subhi	r2, #10
 8018b9a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018b9e:	3401      	adds	r4, #1
 8018ba0:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8018ba2:	42aa      	cmp	r2, r5
 8018ba4:	d0ee      	beq.n	8018b84 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8018ba6:	2000      	movs	r0, #0
 8018ba8:	bd70      	pop	{r4, r5, r6, pc}
 8018baa:	2001      	movs	r0, #1
 8018bac:	e7fc      	b.n	8018ba8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08018bae <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8018bae:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018bb2:	4605      	mov	r5, r0
 8018bb4:	4616      	mov	r6, r2
 8018bb6:	1c8c      	adds	r4, r1, #2
 8018bb8:	8809      	ldrh	r1, [r1, #0]
 8018bba:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8018bbe:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8018bc2:	42b3      	cmp	r3, r6
 8018bc4:	d124      	bne.n	8018c10 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8018bc6:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8018bca:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8018bce:	f001 070f 	and.w	r7, r1, #15
 8018bd2:	f8cd 8000 	str.w	r8, [sp]
 8018bd6:	464b      	mov	r3, r9
 8018bd8:	4652      	mov	r2, sl
 8018bda:	4621      	mov	r1, r4
 8018bdc:	4628      	mov	r0, r5
 8018bde:	f7ff ffb7 	bl	8018b50 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8018be2:	4683      	mov	fp, r0
 8018be4:	b168      	cbz	r0, 8018c02 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8018be6:	eb0a 0109 	add.w	r1, sl, r9
 8018bea:	4441      	add	r1, r8
 8018bec:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8018bf0:	463a      	mov	r2, r7
 8018bf2:	4649      	mov	r1, r9
 8018bf4:	4628      	mov	r0, r5
 8018bf6:	f7ff ff53 	bl	8018aa0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8018bfa:	4658      	mov	r0, fp
 8018bfc:	b003      	add	sp, #12
 8018bfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c02:	eb07 010a 	add.w	r1, r7, sl
 8018c06:	4449      	add	r1, r9
 8018c08:	4441      	add	r1, r8
 8018c0a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8018c0e:	e7d2      	b.n	8018bb6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8018c10:	f04f 0b00 	mov.w	fp, #0
 8018c14:	e7f1      	b.n	8018bfa <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08018c16 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8018c16:	b570      	push	{r4, r5, r6, lr}
 8018c18:	8810      	ldrh	r0, [r2, #0]
 8018c1a:	4298      	cmp	r0, r3
 8018c1c:	d817      	bhi.n	8018c4e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018c1e:	1e48      	subs	r0, r1, #1
 8018c20:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8018c24:	4298      	cmp	r0, r3
 8018c26:	d312      	bcc.n	8018c4e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018c28:	2400      	movs	r4, #0
 8018c2a:	428c      	cmp	r4, r1
 8018c2c:	d20f      	bcs.n	8018c4e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018c2e:	1860      	adds	r0, r4, r1
 8018c30:	1040      	asrs	r0, r0, #1
 8018c32:	0085      	lsls	r5, r0, #2
 8018c34:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8018c38:	42b3      	cmp	r3, r6
 8018c3a:	d902      	bls.n	8018c42 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8018c3c:	3001      	adds	r0, #1
 8018c3e:	b284      	uxth	r4, r0
 8018c40:	e7f3      	b.n	8018c2a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018c42:	d201      	bcs.n	8018c48 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8018c44:	b281      	uxth	r1, r0
 8018c46:	e7f0      	b.n	8018c2a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018c48:	442a      	add	r2, r5
 8018c4a:	8850      	ldrh	r0, [r2, #2]
 8018c4c:	bd70      	pop	{r4, r5, r6, pc}
 8018c4e:	2000      	movs	r0, #0
 8018c50:	e7fc      	b.n	8018c4c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08018c52 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8018c52:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018c56:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8018c58:	886f      	ldrh	r7, [r5, #2]
 8018c5a:	4604      	mov	r4, r0
 8018c5c:	087f      	lsrs	r7, r7, #1
 8018c5e:	260b      	movs	r6, #11
 8018c60:	3e01      	subs	r6, #1
 8018c62:	d013      	beq.n	8018c8c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018c64:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8018c66:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018c6a:	462a      	mov	r2, r5
 8018c6c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018c70:	4639      	mov	r1, r7
 8018c72:	4643      	mov	r3, r8
 8018c74:	4620      	mov	r0, r4
 8018c76:	f7ff ffce 	bl	8018c16 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8018c7a:	b138      	cbz	r0, 8018c8c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018c7c:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8018c80:	4642      	mov	r2, r8
 8018c82:	4620      	mov	r0, r4
 8018c84:	f7ff ff93 	bl	8018bae <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8018c88:	2800      	cmp	r0, #0
 8018c8a:	d1e9      	bne.n	8018c60 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8018c8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08018c90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8018c90:	b570      	push	{r4, r5, r6, lr}
 8018c92:	694a      	ldr	r2, [r1, #20]
 8018c94:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8018c96:	684b      	ldr	r3, [r1, #4]
 8018c98:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8018c9a:	1b54      	subs	r4, r2, r5
 8018c9c:	f000 8106 	beq.w	8018eac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8018ca0:	1b9b      	subs	r3, r3, r6
 8018ca2:	d003      	beq.n	8018cac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8018ca4:	4363      	muls	r3, r4
 8018ca6:	2210      	movs	r2, #16
 8018ca8:	fb93 f3f2 	sdiv	r3, r3, r2
 8018cac:	680c      	ldr	r4, [r1, #0]
 8018cae:	698a      	ldr	r2, [r1, #24]
 8018cb0:	1b65      	subs	r5, r4, r5
 8018cb2:	f000 80fd 	beq.w	8018eb0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8018cb6:	1b92      	subs	r2, r2, r6
 8018cb8:	d003      	beq.n	8018cc2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8018cba:	436a      	muls	r2, r5
 8018cbc:	2410      	movs	r4, #16
 8018cbe:	fb92 f2f4 	sdiv	r2, r2, r4
 8018cc2:	1a9b      	subs	r3, r3, r2
 8018cc4:	ee07 3a90 	vmov	s15, r3
 8018cc8:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8018eec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8018ccc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018cd0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018cd4:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018cd8:	460a      	mov	r2, r1
 8018cda:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8018cde:	4603      	mov	r3, r0
 8018ce0:	f100 040c 	add.w	r4, r0, #12
 8018ce4:	eeb1 6a43 	vneg.f32	s12, s6
 8018ce8:	edd2 7a02 	vldr	s15, [r2, #8]
 8018cec:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8018cf0:	3214      	adds	r2, #20
 8018cf2:	ece3 6a01 	vstmia	r3!, {s13}
 8018cf6:	ed52 7a02 	vldr	s15, [r2, #-8]
 8018cfa:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018cfe:	429c      	cmp	r4, r3
 8018d00:	edc3 7a02 	vstr	s15, [r3, #8]
 8018d04:	ed52 7a01 	vldr	s15, [r2, #-4]
 8018d08:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018d0c:	edc3 7a05 	vstr	s15, [r3, #20]
 8018d10:	d1ea      	bne.n	8018ce8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8018d12:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018d14:	698b      	ldr	r3, [r1, #24]
 8018d16:	edd0 4a02 	vldr	s9, [r0, #8]
 8018d1a:	edd0 3a00 	vldr	s7, [r0]
 8018d1e:	edd0 6a01 	vldr	s13, [r0, #4]
 8018d22:	ed90 5a05 	vldr	s10, [r0, #20]
 8018d26:	ed90 2a03 	vldr	s4, [r0, #12]
 8018d2a:	edd0 5a04 	vldr	s11, [r0, #16]
 8018d2e:	ed90 1a07 	vldr	s2, [r0, #28]
 8018d32:	edd0 2a06 	vldr	s5, [r0, #24]
 8018d36:	1a9b      	subs	r3, r3, r2
 8018d38:	ee07 3a90 	vmov	s15, r3
 8018d3c:	684b      	ldr	r3, [r1, #4]
 8018d3e:	1a9b      	subs	r3, r3, r2
 8018d40:	ee07 3a10 	vmov	s14, r3
 8018d44:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018d48:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8018d4c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018d50:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8018d54:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018d58:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8018d5c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018d60:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8018d64:	eee6 7a87 	vfma.f32	s15, s13, s14
 8018d68:	ee32 5a45 	vsub.f32	s10, s4, s10
 8018d6c:	ee67 7a83 	vmul.f32	s15, s15, s6
 8018d70:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8018d74:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8018d76:	694a      	ldr	r2, [r1, #20]
 8018d78:	1b13      	subs	r3, r2, r4
 8018d7a:	ee07 3a10 	vmov	s14, r3
 8018d7e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018d82:	680b      	ldr	r3, [r1, #0]
 8018d84:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018d88:	1b1b      	subs	r3, r3, r4
 8018d8a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8018d8e:	ee07 3a10 	vmov	s14, r3
 8018d92:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018d96:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018d9a:	eee6 4a87 	vfma.f32	s9, s13, s14
 8018d9e:	ee64 4a86 	vmul.f32	s9, s9, s12
 8018da2:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8018da6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018da8:	698b      	ldr	r3, [r1, #24]
 8018daa:	1a9b      	subs	r3, r3, r2
 8018dac:	ee06 3a90 	vmov	s13, r3
 8018db0:	684b      	ldr	r3, [r1, #4]
 8018db2:	1a9b      	subs	r3, r3, r2
 8018db4:	ee07 3a10 	vmov	s14, r3
 8018db8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018dbc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018dc0:	ee66 6a84 	vmul.f32	s13, s13, s8
 8018dc4:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018dc8:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8018dcc:	eee5 6a87 	vfma.f32	s13, s11, s14
 8018dd0:	ee66 6a83 	vmul.f32	s13, s13, s6
 8018dd4:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8018dd8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8018dda:	694a      	ldr	r2, [r1, #20]
 8018ddc:	1b13      	subs	r3, r2, r4
 8018dde:	ee07 3a10 	vmov	s14, r3
 8018de2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018de6:	680b      	ldr	r3, [r1, #0]
 8018de8:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018dec:	1b1b      	subs	r3, r3, r4
 8018dee:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8018df2:	ee07 3a10 	vmov	s14, r3
 8018df6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018dfa:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018dfe:	eea5 5a87 	vfma.f32	s10, s11, s14
 8018e02:	edd0 5a08 	vldr	s11, [r0, #32]
 8018e06:	ee25 5a06 	vmul.f32	s10, s10, s12
 8018e0a:	ee31 1a65 	vsub.f32	s2, s2, s11
 8018e0e:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8018e12:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018e14:	698b      	ldr	r3, [r1, #24]
 8018e16:	1a9b      	subs	r3, r3, r2
 8018e18:	ee07 3a10 	vmov	s14, r3
 8018e1c:	684b      	ldr	r3, [r1, #4]
 8018e1e:	1a9b      	subs	r3, r3, r2
 8018e20:	ee01 3a90 	vmov	s3, r3
 8018e24:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018e28:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8018e2c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018e30:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8018e34:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8018e38:	ee61 1a84 	vmul.f32	s3, s3, s8
 8018e3c:	eea1 7a21 	vfma.f32	s14, s2, s3
 8018e40:	ee27 7a03 	vmul.f32	s14, s14, s6
 8018e44:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8018e48:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8018e4a:	694a      	ldr	r2, [r1, #20]
 8018e4c:	1b13      	subs	r3, r2, r4
 8018e4e:	ee03 3a10 	vmov	s6, r3
 8018e52:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8018e56:	680b      	ldr	r3, [r1, #0]
 8018e58:	ee23 3a04 	vmul.f32	s6, s6, s8
 8018e5c:	1b1b      	subs	r3, r3, r4
 8018e5e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8018e62:	ee03 3a10 	vmov	s6, r3
 8018e66:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8018e6a:	ee23 4a04 	vmul.f32	s8, s6, s8
 8018e6e:	eee1 5a04 	vfma.f32	s11, s2, s8
 8018e72:	ee25 6a86 	vmul.f32	s12, s11, s12
 8018e76:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8018e7a:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8018e7e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8018e82:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8018e86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018e8a:	dd13      	ble.n	8018eb4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8018e8c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8018e90:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8018e94:	63c3      	str	r3, [r0, #60]	; 0x3c
 8018e96:	eee3 7a87 	vfma.f32	s15, s7, s14
 8018e9a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018e9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ea2:	dd15      	ble.n	8018ed0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8018ea4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8018ea8:	6403      	str	r3, [r0, #64]	; 0x40
 8018eaa:	bd70      	pop	{r4, r5, r6, pc}
 8018eac:	4623      	mov	r3, r4
 8018eae:	e6fd      	b.n	8018cac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8018eb0:	462a      	mov	r2, r5
 8018eb2:	e706      	b.n	8018cc2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8018eb4:	d502      	bpl.n	8018ebc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8018eb6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8018eba:	e7e9      	b.n	8018e90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8018ebc:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8018ec0:	eea3 2a85 	vfma.f32	s4, s7, s10
 8018ec4:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8018ec8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ecc:	dade      	bge.n	8018e8c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8018ece:	e7f2      	b.n	8018eb6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8018ed0:	d502      	bpl.n	8018ed8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8018ed2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8018ed6:	e7e7      	b.n	8018ea8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8018ed8:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8018edc:	eee3 4a86 	vfma.f32	s9, s7, s12
 8018ee0:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8018ee4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ee8:	dadc      	bge.n	8018ea4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8018eea:	e7f2      	b.n	8018ed2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8018eec:	3d800000 	.word	0x3d800000

08018ef0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8018ef0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018ef4:	2714      	movs	r7, #20
 8018ef6:	435f      	muls	r7, r3
 8018ef8:	eb02 0c07 	add.w	ip, r2, r7
 8018efc:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8018f00:	f115 0e0f 	adds.w	lr, r5, #15
 8018f04:	f100 80a2 	bmi.w	801904c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8018f08:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8018f0c:	9c08      	ldr	r4, [sp, #32]
 8018f0e:	f8c0 e014 	str.w	lr, [r0, #20]
 8018f12:	2614      	movs	r6, #20
 8018f14:	4366      	muls	r6, r4
 8018f16:	eb02 0806 	add.w	r8, r2, r6
 8018f1a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8018f1e:	f115 040f 	adds.w	r4, r5, #15
 8018f22:	f100 809f 	bmi.w	8019064 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8018f26:	1124      	asrs	r4, r4, #4
 8018f28:	eba4 040e 	sub.w	r4, r4, lr
 8018f2c:	6184      	str	r4, [r0, #24]
 8018f2e:	2c00      	cmp	r4, #0
 8018f30:	f000 808a 	beq.w	8019048 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8018f34:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8018f38:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8018f3c:	5995      	ldr	r5, [r2, r6]
 8018f3e:	eba4 0809 	sub.w	r8, r4, r9
 8018f42:	59d4      	ldr	r4, [r2, r7]
 8018f44:	eba5 0a04 	sub.w	sl, r5, r4
 8018f48:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8018f4c:	fb0e fe05 	mul.w	lr, lr, r5
 8018f50:	fb0a ee19 	mls	lr, sl, r9, lr
 8018f54:	fb08 e404 	mla	r4, r8, r4, lr
 8018f58:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8018f5c:	3c01      	subs	r4, #1
 8018f5e:	19a4      	adds	r4, r4, r6
 8018f60:	f100 808c 	bmi.w	801907c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8018f64:	fb94 fef6 	sdiv	lr, r4, r6
 8018f68:	f8c0 e000 	str.w	lr, [r0]
 8018f6c:	fb06 441e 	mls	r4, r6, lr, r4
 8018f70:	6104      	str	r4, [r0, #16]
 8018f72:	2d00      	cmp	r5, #0
 8018f74:	f2c0 8095 	blt.w	80190a2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8018f78:	fb95 f4f6 	sdiv	r4, r5, r6
 8018f7c:	6044      	str	r4, [r0, #4]
 8018f7e:	fb06 5514 	mls	r5, r6, r4, r5
 8018f82:	6085      	str	r5, [r0, #8]
 8018f84:	60c6      	str	r6, [r0, #12]
 8018f86:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8018f8a:	6945      	ldr	r5, [r0, #20]
 8018f8c:	59d2      	ldr	r2, [r2, r7]
 8018f8e:	eddf 6a4d 	vldr	s13, [pc, #308]	; 80190c4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8018f92:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8018f96:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8018f9a:	ee07 4a10 	vmov	s14, r4
 8018f9e:	6804      	ldr	r4, [r0, #0]
 8018fa0:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8018fa4:	ee07 2a90 	vmov	s15, r2
 8018fa8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018fac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018fb0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8018fb4:	ee27 7a26 	vmul.f32	s14, s14, s13
 8018fb8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018fbc:	edd3 6a00 	vldr	s13, [r3]
 8018fc0:	eee6 6a07 	vfma.f32	s13, s12, s14
 8018fc4:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8018fc8:	eee6 6a27 	vfma.f32	s13, s12, s15
 8018fcc:	edc0 6a07 	vstr	s13, [r0, #28]
 8018fd0:	edd0 6a01 	vldr	s13, [r0, #4]
 8018fd4:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8018fd8:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8018fdc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018fe0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8018fe4:	ed80 6a08 	vstr	s12, [r0, #32]
 8018fe8:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8018fea:	6242      	str	r2, [r0, #36]	; 0x24
 8018fec:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8018ff0:	ed93 6a03 	vldr	s12, [r3, #12]
 8018ff4:	eea5 6a87 	vfma.f32	s12, s11, s14
 8018ff8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8018ffc:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8019000:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8019004:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8019008:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 801900c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8019010:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8019014:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019016:	6302      	str	r2, [r0, #48]	; 0x30
 8019018:	ed93 6a06 	vldr	s12, [r3, #24]
 801901c:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8019020:	eea5 6a87 	vfma.f32	s12, s11, s14
 8019024:	eeb0 7a46 	vmov.f32	s14, s12
 8019028:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 801902c:	eea6 7a27 	vfma.f32	s14, s12, s15
 8019030:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8019034:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8019038:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 801903c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8019040:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8019044:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8019046:	63c3      	str	r3, [r0, #60]	; 0x3c
 8019048:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801904c:	f1c5 0501 	rsb	r5, r5, #1
 8019050:	f015 050f 	ands.w	r5, r5, #15
 8019054:	bf18      	it	ne
 8019056:	2501      	movne	r5, #1
 8019058:	2410      	movs	r4, #16
 801905a:	fb9e fef4 	sdiv	lr, lr, r4
 801905e:	ebae 0e05 	sub.w	lr, lr, r5
 8019062:	e753      	b.n	8018f0c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8019064:	f1c5 0501 	rsb	r5, r5, #1
 8019068:	f015 050f 	ands.w	r5, r5, #15
 801906c:	bf18      	it	ne
 801906e:	2501      	movne	r5, #1
 8019070:	f04f 0910 	mov.w	r9, #16
 8019074:	fb94 f4f9 	sdiv	r4, r4, r9
 8019078:	1b64      	subs	r4, r4, r5
 801907a:	e755      	b.n	8018f28 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 801907c:	4264      	negs	r4, r4
 801907e:	fb94 fef6 	sdiv	lr, r4, r6
 8019082:	f1ce 0800 	rsb	r8, lr, #0
 8019086:	fb06 441e 	mls	r4, r6, lr, r4
 801908a:	f8c0 8000 	str.w	r8, [r0]
 801908e:	6104      	str	r4, [r0, #16]
 8019090:	2c00      	cmp	r4, #0
 8019092:	f43f af6e 	beq.w	8018f72 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8019096:	ea6f 0e0e 	mvn.w	lr, lr
 801909a:	f8c0 e000 	str.w	lr, [r0]
 801909e:	1b34      	subs	r4, r6, r4
 80190a0:	e766      	b.n	8018f70 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80190a2:	426d      	negs	r5, r5
 80190a4:	fb95 f4f6 	sdiv	r4, r5, r6
 80190a8:	f1c4 0e00 	rsb	lr, r4, #0
 80190ac:	fb06 5514 	mls	r5, r6, r4, r5
 80190b0:	f8c0 e004 	str.w	lr, [r0, #4]
 80190b4:	6085      	str	r5, [r0, #8]
 80190b6:	2d00      	cmp	r5, #0
 80190b8:	f43f af64 	beq.w	8018f84 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80190bc:	43e4      	mvns	r4, r4
 80190be:	6044      	str	r4, [r0, #4]
 80190c0:	1b75      	subs	r5, r6, r5
 80190c2:	e75e      	b.n	8018f82 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80190c4:	3d800000 	.word	0x3d800000

080190c8 <_ZN8touchgfx7Unicode6strlenEPKt>:
 80190c8:	4602      	mov	r2, r0
 80190ca:	b148      	cbz	r0, 80190e0 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 80190cc:	2300      	movs	r3, #0
 80190ce:	b298      	uxth	r0, r3
 80190d0:	3301      	adds	r3, #1
 80190d2:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 80190d6:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 80190da:	2900      	cmp	r1, #0
 80190dc:	d1f7      	bne.n	80190ce <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 80190de:	4770      	bx	lr
 80190e0:	4770      	bx	lr

080190e2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 80190e2:	b530      	push	{r4, r5, lr}
 80190e4:	4604      	mov	r4, r0
 80190e6:	b159      	cbz	r1, 8019100 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 80190e8:	b148      	cbz	r0, 80190fe <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80190ea:	2300      	movs	r3, #0
 80190ec:	b298      	uxth	r0, r3
 80190ee:	4282      	cmp	r2, r0
 80190f0:	d905      	bls.n	80190fe <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80190f2:	5ccd      	ldrb	r5, [r1, r3]
 80190f4:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 80190f8:	3301      	adds	r3, #1
 80190fa:	2d00      	cmp	r5, #0
 80190fc:	d1f6      	bne.n	80190ec <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 80190fe:	bd30      	pop	{r4, r5, pc}
 8019100:	4608      	mov	r0, r1
 8019102:	e7fc      	b.n	80190fe <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08019104 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8019104:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019106:	b08b      	sub	sp, #44	; 0x2c
 8019108:	468c      	mov	ip, r1
 801910a:	2100      	movs	r1, #0
 801910c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8019110:	4604      	mov	r4, r0
 8019112:	261f      	movs	r6, #31
 8019114:	af01      	add	r7, sp, #4
 8019116:	fb94 fef3 	sdiv	lr, r4, r3
 801911a:	fb03 441e 	mls	r4, r3, lr, r4
 801911e:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8019122:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8019126:	b2ec      	uxtb	r4, r5
 8019128:	2d09      	cmp	r5, #9
 801912a:	bfd4      	ite	le
 801912c:	3430      	addle	r4, #48	; 0x30
 801912e:	3457      	addgt	r4, #87	; 0x57
 8019130:	b2e4      	uxtb	r4, r4
 8019132:	55bc      	strb	r4, [r7, r6]
 8019134:	4674      	mov	r4, lr
 8019136:	1e71      	subs	r1, r6, #1
 8019138:	b974      	cbnz	r4, 8019158 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801913a:	2800      	cmp	r0, #0
 801913c:	da05      	bge.n	801914a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801913e:	ab0a      	add	r3, sp, #40	; 0x28
 8019140:	4419      	add	r1, r3
 8019142:	232d      	movs	r3, #45	; 0x2d
 8019144:	f801 3c24 	strb.w	r3, [r1, #-36]
 8019148:	1eb1      	subs	r1, r6, #2
 801914a:	3101      	adds	r1, #1
 801914c:	4439      	add	r1, r7
 801914e:	4660      	mov	r0, ip
 8019150:	f7ff ffc7 	bl	80190e2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8019154:	b00b      	add	sp, #44	; 0x2c
 8019156:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019158:	460e      	mov	r6, r1
 801915a:	e7dc      	b.n	8019116 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

0801915c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 801915c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801915e:	b08b      	sub	sp, #44	; 0x2c
 8019160:	468c      	mov	ip, r1
 8019162:	2100      	movs	r1, #0
 8019164:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8019168:	ae01      	add	r6, sp, #4
 801916a:	211f      	movs	r1, #31
 801916c:	fbb0 f7f3 	udiv	r7, r0, r3
 8019170:	fb03 0517 	mls	r5, r3, r7, r0
 8019174:	b2ec      	uxtb	r4, r5
 8019176:	2d09      	cmp	r5, #9
 8019178:	bfd4      	ite	le
 801917a:	3430      	addle	r4, #48	; 0x30
 801917c:	3457      	addgt	r4, #87	; 0x57
 801917e:	b2e4      	uxtb	r4, r4
 8019180:	558c      	strb	r4, [r1, r6]
 8019182:	4638      	mov	r0, r7
 8019184:	1e4c      	subs	r4, r1, #1
 8019186:	b92f      	cbnz	r7, 8019194 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8019188:	4431      	add	r1, r6
 801918a:	4660      	mov	r0, ip
 801918c:	f7ff ffa9 	bl	80190e2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8019190:	b00b      	add	sp, #44	; 0x2c
 8019192:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019194:	4621      	mov	r1, r4
 8019196:	e7e9      	b.n	801916c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08019198 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8019198:	b410      	push	{r4}
 801919a:	b131      	cbz	r1, 80191aa <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 801919c:	1e9c      	subs	r4, r3, #2
 801919e:	2c22      	cmp	r4, #34	; 0x22
 80191a0:	d803      	bhi.n	80191aa <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 80191a2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80191a6:	f7ff bfad 	b.w	8019104 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 80191aa:	f85d 4b04 	ldr.w	r4, [sp], #4
 80191ae:	4770      	bx	lr

080191b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80191b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80191b4:	4691      	mov	r9, r2
 80191b6:	b085      	sub	sp, #20
 80191b8:	6802      	ldr	r2, [r0, #0]
 80191ba:	9201      	str	r2, [sp, #4]
 80191bc:	4688      	mov	r8, r1
 80191be:	4683      	mov	fp, r0
 80191c0:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 80191c4:	9103      	str	r1, [sp, #12]
 80191c6:	4610      	mov	r0, r2
 80191c8:	461c      	mov	r4, r3
 80191ca:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 80191ce:	9302      	str	r3, [sp, #8]
 80191d0:	f7ff ff7a 	bl	80190c8 <_ZN8touchgfx7Unicode6strlenEPKt>
 80191d4:	f1b8 0f00 	cmp.w	r8, #0
 80191d8:	bf0c      	ite	eq
 80191da:	4684      	moveq	ip, r0
 80191dc:	f100 0c01 	addne.w	ip, r0, #1
 80191e0:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 80191e4:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80191e8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80191ea:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80191ec:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 80191f0:	9903      	ldr	r1, [sp, #12]
 80191f2:	fa1f fc8c 	uxth.w	ip, ip
 80191f6:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 80191fa:	d041      	beq.n	8019280 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80191fc:	d834      	bhi.n	8019268 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 80191fe:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8019202:	d059      	beq.n	80192b8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8019204:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8019208:	d03a      	beq.n	8019280 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801920a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801920e:	d034      	beq.n	801927a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8019210:	2400      	movs	r4, #0
 8019212:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8019216:	3a01      	subs	r2, #1
 8019218:	b169      	cbz	r1, 8019236 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801921a:	9911      	ldr	r1, [sp, #68]	; 0x44
 801921c:	458c      	cmp	ip, r1
 801921e:	da09      	bge.n	8019234 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8019220:	eba1 010c 	sub.w	r1, r1, ip
 8019224:	b289      	uxth	r1, r1
 8019226:	b933      	cbnz	r3, 8019236 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019228:	2e00      	cmp	r6, #0
 801922a:	d051      	beq.n	80192d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801922c:	2800      	cmp	r0, #0
 801922e:	d04f      	beq.n	80192d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8019230:	440c      	add	r4, r1
 8019232:	b2a4      	uxth	r4, r4
 8019234:	2100      	movs	r1, #0
 8019236:	682b      	ldr	r3, [r5, #0]
 8019238:	4293      	cmp	r3, r2
 801923a:	da07      	bge.n	801924c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801923c:	f1b8 0f00 	cmp.w	r8, #0
 8019240:	d004      	beq.n	801924c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8019242:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8019246:	682b      	ldr	r3, [r5, #0]
 8019248:	3301      	adds	r3, #1
 801924a:	602b      	str	r3, [r5, #0]
 801924c:	2730      	movs	r7, #48	; 0x30
 801924e:	2c00      	cmp	r4, #0
 8019250:	d04e      	beq.n	80192f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8019252:	682e      	ldr	r6, [r5, #0]
 8019254:	3c01      	subs	r4, #1
 8019256:	42b2      	cmp	r2, r6
 8019258:	b2a4      	uxth	r4, r4
 801925a:	dd49      	ble.n	80192f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801925c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8019260:	682b      	ldr	r3, [r5, #0]
 8019262:	3301      	adds	r3, #1
 8019264:	602b      	str	r3, [r5, #0]
 8019266:	e7f2      	b.n	801924e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8019268:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 801926c:	d01d      	beq.n	80192aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801926e:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8019272:	d002      	beq.n	801927a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8019274:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8019278:	e7c9      	b.n	801920e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801927a:	4684      	mov	ip, r0
 801927c:	f04f 0800 	mov.w	r8, #0
 8019280:	2c00      	cmp	r4, #0
 8019282:	d0c6      	beq.n	8019212 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019284:	b947      	cbnz	r7, 8019298 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8019286:	2801      	cmp	r0, #1
 8019288:	d106      	bne.n	8019298 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801928a:	8814      	ldrh	r4, [r2, #0]
 801928c:	2c30      	cmp	r4, #48	; 0x30
 801928e:	bf02      	ittt	eq
 8019290:	3202      	addeq	r2, #2
 8019292:	f8cb 2000 	streq.w	r2, [fp]
 8019296:	4638      	moveq	r0, r7
 8019298:	45bc      	cmp	ip, r7
 801929a:	da14      	bge.n	80192c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801929c:	b2bf      	uxth	r7, r7
 801929e:	eba7 040c 	sub.w	r4, r7, ip
 80192a2:	b2a4      	uxth	r4, r4
 80192a4:	46bc      	mov	ip, r7
 80192a6:	2600      	movs	r6, #0
 80192a8:	e7b3      	b.n	8019212 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80192aa:	4684      	mov	ip, r0
 80192ac:	b16c      	cbz	r4, 80192ca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 80192ae:	42b8      	cmp	r0, r7
 80192b0:	dd00      	ble.n	80192b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 80192b2:	b2b8      	uxth	r0, r7
 80192b4:	2400      	movs	r4, #0
 80192b6:	e003      	b.n	80192c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 80192b8:	f04f 0c01 	mov.w	ip, #1
 80192bc:	2400      	movs	r4, #0
 80192be:	4660      	mov	r0, ip
 80192c0:	4626      	mov	r6, r4
 80192c2:	46a0      	mov	r8, r4
 80192c4:	e7a5      	b.n	8019212 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80192c6:	2400      	movs	r4, #0
 80192c8:	e7ed      	b.n	80192a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 80192ca:	4626      	mov	r6, r4
 80192cc:	46a0      	mov	r8, r4
 80192ce:	e7a0      	b.n	8019212 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80192d0:	2900      	cmp	r1, #0
 80192d2:	d0b0      	beq.n	8019236 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80192d4:	2720      	movs	r7, #32
 80192d6:	682e      	ldr	r6, [r5, #0]
 80192d8:	2900      	cmp	r1, #0
 80192da:	d0ac      	beq.n	8019236 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80192dc:	3901      	subs	r1, #1
 80192de:	4296      	cmp	r6, r2
 80192e0:	b289      	uxth	r1, r1
 80192e2:	daa7      	bge.n	8019234 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80192e4:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80192e8:	682b      	ldr	r3, [r5, #0]
 80192ea:	3301      	adds	r3, #1
 80192ec:	602b      	str	r3, [r5, #0]
 80192ee:	e7f2      	b.n	80192d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 80192f0:	b188      	cbz	r0, 8019316 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80192f2:	682b      	ldr	r3, [r5, #0]
 80192f4:	3801      	subs	r0, #1
 80192f6:	429a      	cmp	r2, r3
 80192f8:	b280      	uxth	r0, r0
 80192fa:	dd0c      	ble.n	8019316 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80192fc:	f8db 3000 	ldr.w	r3, [fp]
 8019300:	1c9c      	adds	r4, r3, #2
 8019302:	f8cb 4000 	str.w	r4, [fp]
 8019306:	881c      	ldrh	r4, [r3, #0]
 8019308:	682b      	ldr	r3, [r5, #0]
 801930a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801930e:	682b      	ldr	r3, [r5, #0]
 8019310:	3301      	adds	r3, #1
 8019312:	602b      	str	r3, [r5, #0]
 8019314:	e7ec      	b.n	80192f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8019316:	2620      	movs	r6, #32
 8019318:	b151      	cbz	r1, 8019330 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801931a:	6828      	ldr	r0, [r5, #0]
 801931c:	3901      	subs	r1, #1
 801931e:	4282      	cmp	r2, r0
 8019320:	b289      	uxth	r1, r1
 8019322:	dd05      	ble.n	8019330 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8019324:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8019328:	682b      	ldr	r3, [r5, #0]
 801932a:	3301      	adds	r3, #1
 801932c:	602b      	str	r3, [r5, #0]
 801932e:	e7f3      	b.n	8019318 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8019330:	b005      	add	sp, #20
 8019332:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019336 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8019336:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801933a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801933e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8019342:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8019346:	2400      	movs	r4, #0
 8019348:	8014      	strh	r4, [r2, #0]
 801934a:	701c      	strb	r4, [r3, #0]
 801934c:	f888 4000 	strb.w	r4, [r8]
 8019350:	f88c 4000 	strb.w	r4, [ip]
 8019354:	f88e 4000 	strb.w	r4, [lr]
 8019358:	703c      	strb	r4, [r7, #0]
 801935a:	6804      	ldr	r4, [r0, #0]
 801935c:	b1a4      	cbz	r4, 8019388 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801935e:	8824      	ldrh	r4, [r4, #0]
 8019360:	f04f 0901 	mov.w	r9, #1
 8019364:	b314      	cbz	r4, 80193ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8019366:	2c2b      	cmp	r4, #43	; 0x2b
 8019368:	d001      	beq.n	801936e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801936a:	2c20      	cmp	r4, #32
 801936c:	d110      	bne.n	8019390 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801936e:	8014      	strh	r4, [r2, #0]
 8019370:	6804      	ldr	r4, [r0, #0]
 8019372:	b10c      	cbz	r4, 8019378 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8019374:	3402      	adds	r4, #2
 8019376:	6004      	str	r4, [r0, #0]
 8019378:	680c      	ldr	r4, [r1, #0]
 801937a:	b10c      	cbz	r4, 8019380 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801937c:	3401      	adds	r4, #1
 801937e:	600c      	str	r4, [r1, #0]
 8019380:	6804      	ldr	r4, [r0, #0]
 8019382:	b17c      	cbz	r4, 80193a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8019384:	8824      	ldrh	r4, [r4, #0]
 8019386:	e7ed      	b.n	8019364 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8019388:	680c      	ldr	r4, [r1, #0]
 801938a:	b17c      	cbz	r4, 80193ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801938c:	7824      	ldrb	r4, [r4, #0]
 801938e:	e7e7      	b.n	8019360 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8019390:	2c2d      	cmp	r4, #45	; 0x2d
 8019392:	d102      	bne.n	801939a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8019394:	f883 9000 	strb.w	r9, [r3]
 8019398:	e7ea      	b.n	8019370 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801939a:	2c23      	cmp	r4, #35	; 0x23
 801939c:	d107      	bne.n	80193ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801939e:	f888 9000 	strb.w	r9, [r8]
 80193a2:	e7e5      	b.n	8019370 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80193a4:	680c      	ldr	r4, [r1, #0]
 80193a6:	b10c      	cbz	r4, 80193ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80193a8:	7824      	ldrb	r4, [r4, #0]
 80193aa:	e7db      	b.n	8019364 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80193ac:	2400      	movs	r4, #0
 80193ae:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80193b2:	2b09      	cmp	r3, #9
 80193b4:	d901      	bls.n	80193ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 80193b6:	2c2a      	cmp	r4, #42	; 0x2a
 80193b8:	d122      	bne.n	8019400 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80193ba:	2301      	movs	r3, #1
 80193bc:	2c30      	cmp	r4, #48	; 0x30
 80193be:	f88e 3000 	strb.w	r3, [lr]
 80193c2:	d10d      	bne.n	80193e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80193c4:	f88c 3000 	strb.w	r3, [ip]
 80193c8:	6803      	ldr	r3, [r0, #0]
 80193ca:	b10b      	cbz	r3, 80193d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 80193cc:	3302      	adds	r3, #2
 80193ce:	6003      	str	r3, [r0, #0]
 80193d0:	680b      	ldr	r3, [r1, #0]
 80193d2:	b10b      	cbz	r3, 80193d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 80193d4:	3301      	adds	r3, #1
 80193d6:	600b      	str	r3, [r1, #0]
 80193d8:	6803      	ldr	r3, [r0, #0]
 80193da:	2b00      	cmp	r3, #0
 80193dc:	d02f      	beq.n	801943e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 80193de:	881c      	ldrh	r4, [r3, #0]
 80193e0:	2c2a      	cmp	r4, #42	; 0x2a
 80193e2:	d135      	bne.n	8019450 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80193e4:	f04f 33ff 	mov.w	r3, #4294967295
 80193e8:	6033      	str	r3, [r6, #0]
 80193ea:	6803      	ldr	r3, [r0, #0]
 80193ec:	b10b      	cbz	r3, 80193f2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 80193ee:	3302      	adds	r3, #2
 80193f0:	6003      	str	r3, [r0, #0]
 80193f2:	680b      	ldr	r3, [r1, #0]
 80193f4:	b10b      	cbz	r3, 80193fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 80193f6:	3301      	adds	r3, #1
 80193f8:	600b      	str	r3, [r1, #0]
 80193fa:	6803      	ldr	r3, [r0, #0]
 80193fc:	b31b      	cbz	r3, 8019446 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 80193fe:	881c      	ldrh	r4, [r3, #0]
 8019400:	2c2e      	cmp	r4, #46	; 0x2e
 8019402:	d11a      	bne.n	801943a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8019404:	2301      	movs	r3, #1
 8019406:	703b      	strb	r3, [r7, #0]
 8019408:	6803      	ldr	r3, [r0, #0]
 801940a:	b10b      	cbz	r3, 8019410 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801940c:	3302      	adds	r3, #2
 801940e:	6003      	str	r3, [r0, #0]
 8019410:	680b      	ldr	r3, [r1, #0]
 8019412:	b10b      	cbz	r3, 8019418 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8019414:	3301      	adds	r3, #1
 8019416:	600b      	str	r3, [r1, #0]
 8019418:	6803      	ldr	r3, [r0, #0]
 801941a:	2b00      	cmp	r3, #0
 801941c:	d036      	beq.n	801948c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801941e:	881b      	ldrh	r3, [r3, #0]
 8019420:	2b2a      	cmp	r3, #42	; 0x2a
 8019422:	d137      	bne.n	8019494 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8019424:	f04f 33ff 	mov.w	r3, #4294967295
 8019428:	602b      	str	r3, [r5, #0]
 801942a:	6803      	ldr	r3, [r0, #0]
 801942c:	b10b      	cbz	r3, 8019432 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801942e:	3302      	adds	r3, #2
 8019430:	6003      	str	r3, [r0, #0]
 8019432:	680b      	ldr	r3, [r1, #0]
 8019434:	b10b      	cbz	r3, 801943a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8019436:	3301      	adds	r3, #1
 8019438:	600b      	str	r3, [r1, #0]
 801943a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801943e:	680c      	ldr	r4, [r1, #0]
 8019440:	b134      	cbz	r4, 8019450 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8019442:	7824      	ldrb	r4, [r4, #0]
 8019444:	e7cc      	b.n	80193e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8019446:	680b      	ldr	r3, [r1, #0]
 8019448:	2b00      	cmp	r3, #0
 801944a:	d0f6      	beq.n	801943a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801944c:	781c      	ldrb	r4, [r3, #0]
 801944e:	e7d7      	b.n	8019400 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8019450:	2300      	movs	r3, #0
 8019452:	6033      	str	r3, [r6, #0]
 8019454:	220a      	movs	r2, #10
 8019456:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 801945a:	fa1f f38c 	uxth.w	r3, ip
 801945e:	2b09      	cmp	r3, #9
 8019460:	d8ce      	bhi.n	8019400 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8019462:	6833      	ldr	r3, [r6, #0]
 8019464:	fb02 c303 	mla	r3, r2, r3, ip
 8019468:	6033      	str	r3, [r6, #0]
 801946a:	6803      	ldr	r3, [r0, #0]
 801946c:	b10b      	cbz	r3, 8019472 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801946e:	3302      	adds	r3, #2
 8019470:	6003      	str	r3, [r0, #0]
 8019472:	680b      	ldr	r3, [r1, #0]
 8019474:	b10b      	cbz	r3, 801947a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8019476:	3301      	adds	r3, #1
 8019478:	600b      	str	r3, [r1, #0]
 801947a:	6803      	ldr	r3, [r0, #0]
 801947c:	b10b      	cbz	r3, 8019482 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801947e:	881c      	ldrh	r4, [r3, #0]
 8019480:	e7e9      	b.n	8019456 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8019482:	680c      	ldr	r4, [r1, #0]
 8019484:	2c00      	cmp	r4, #0
 8019486:	d0e6      	beq.n	8019456 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8019488:	7824      	ldrb	r4, [r4, #0]
 801948a:	e7e4      	b.n	8019456 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801948c:	680b      	ldr	r3, [r1, #0]
 801948e:	b10b      	cbz	r3, 8019494 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8019490:	781b      	ldrb	r3, [r3, #0]
 8019492:	e7c5      	b.n	8019420 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8019494:	2200      	movs	r2, #0
 8019496:	602a      	str	r2, [r5, #0]
 8019498:	240a      	movs	r4, #10
 801949a:	3b30      	subs	r3, #48	; 0x30
 801949c:	b29e      	uxth	r6, r3
 801949e:	2e09      	cmp	r6, #9
 80194a0:	682a      	ldr	r2, [r5, #0]
 80194a2:	d813      	bhi.n	80194cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 80194a4:	fb04 3302 	mla	r3, r4, r2, r3
 80194a8:	602b      	str	r3, [r5, #0]
 80194aa:	6803      	ldr	r3, [r0, #0]
 80194ac:	b10b      	cbz	r3, 80194b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 80194ae:	3302      	adds	r3, #2
 80194b0:	6003      	str	r3, [r0, #0]
 80194b2:	680b      	ldr	r3, [r1, #0]
 80194b4:	b10b      	cbz	r3, 80194ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 80194b6:	3301      	adds	r3, #1
 80194b8:	600b      	str	r3, [r1, #0]
 80194ba:	6803      	ldr	r3, [r0, #0]
 80194bc:	b10b      	cbz	r3, 80194c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 80194be:	881b      	ldrh	r3, [r3, #0]
 80194c0:	e7eb      	b.n	801949a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80194c2:	680b      	ldr	r3, [r1, #0]
 80194c4:	2b00      	cmp	r3, #0
 80194c6:	d0e8      	beq.n	801949a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80194c8:	781b      	ldrb	r3, [r3, #0]
 80194ca:	e7e6      	b.n	801949a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80194cc:	2a06      	cmp	r2, #6
 80194ce:	bfa8      	it	ge
 80194d0:	2206      	movge	r2, #6
 80194d2:	602a      	str	r2, [r5, #0]
 80194d4:	e7b1      	b.n	801943a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

080194d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 80194d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80194da:	b0a3      	sub	sp, #140	; 0x8c
 80194dc:	2600      	movs	r6, #0
 80194de:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 80194e2:	4607      	mov	r7, r0
 80194e4:	4688      	mov	r8, r1
 80194e6:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80194ea:	4631      	mov	r1, r6
 80194ec:	2242      	movs	r2, #66	; 0x42
 80194ee:	4648      	mov	r0, r9
 80194f0:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 80194f2:	960d      	str	r6, [sp, #52]	; 0x34
 80194f4:	f012 f881 	bl	802b5fa <memset>
 80194f8:	b15f      	cbz	r7, 8019512 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 80194fa:	f108 3aff 	add.w	sl, r8, #4294967295
 80194fe:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019500:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019502:	b152      	cbz	r2, 801951a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8019504:	8812      	ldrh	r2, [r2, #0]
 8019506:	b10a      	cbz	r2, 801950c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8019508:	459a      	cmp	sl, r3
 801950a:	dc2e      	bgt.n	801956a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801950c:	2200      	movs	r2, #0
 801950e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8019512:	4638      	mov	r0, r7
 8019514:	b023      	add	sp, #140	; 0x8c
 8019516:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801951a:	9a08      	ldr	r2, [sp, #32]
 801951c:	2a00      	cmp	r2, #0
 801951e:	d0f5      	beq.n	801950c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8019520:	7812      	ldrb	r2, [r2, #0]
 8019522:	e7f0      	b.n	8019506 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8019524:	2d00      	cmp	r5, #0
 8019526:	d0ea      	beq.n	80194fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019528:	782a      	ldrb	r2, [r5, #0]
 801952a:	b142      	cbz	r2, 801953e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801952c:	2a25      	cmp	r2, #37	; 0x25
 801952e:	d001      	beq.n	8019534 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8019530:	459a      	cmp	sl, r3
 8019532:	dc08      	bgt.n	8019546 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8019534:	f1bb 0f00 	cmp.w	fp, #0
 8019538:	d121      	bne.n	801957e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801953a:	2d00      	cmp	r5, #0
 801953c:	d0df      	beq.n	80194fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801953e:	782a      	ldrb	r2, [r5, #0]
 8019540:	f04f 0b00 	mov.w	fp, #0
 8019544:	e01d      	b.n	8019582 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8019546:	f1bb 0f00 	cmp.w	fp, #0
 801954a:	d078      	beq.n	801963e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801954c:	f8bb 2000 	ldrh.w	r2, [fp]
 8019550:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8019554:	f1bb 0f00 	cmp.w	fp, #0
 8019558:	d002      	beq.n	8019560 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801955a:	f10b 0202 	add.w	r2, fp, #2
 801955e:	9209      	str	r2, [sp, #36]	; 0x24
 8019560:	b10d      	cbz	r5, 8019566 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8019562:	3501      	adds	r5, #1
 8019564:	9508      	str	r5, [sp, #32]
 8019566:	3301      	adds	r3, #1
 8019568:	930d      	str	r3, [sp, #52]	; 0x34
 801956a:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801956e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019570:	f1bb 0f00 	cmp.w	fp, #0
 8019574:	d0d6      	beq.n	8019524 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8019576:	f8bb 2000 	ldrh.w	r2, [fp]
 801957a:	2a00      	cmp	r2, #0
 801957c:	d1d6      	bne.n	801952c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801957e:	f8bb 2000 	ldrh.w	r2, [fp]
 8019582:	2a00      	cmp	r2, #0
 8019584:	d0bb      	beq.n	80194fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019586:	459a      	cmp	sl, r3
 8019588:	ddb9      	ble.n	80194fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801958a:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 801958e:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8019592:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8019596:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801959a:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 801959e:	960e      	str	r6, [sp, #56]	; 0x38
 80195a0:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 80195a4:	960f      	str	r6, [sp, #60]	; 0x3c
 80195a6:	f1bb 0f00 	cmp.w	fp, #0
 80195aa:	d002      	beq.n	80195b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 80195ac:	f10b 0302 	add.w	r3, fp, #2
 80195b0:	9309      	str	r3, [sp, #36]	; 0x24
 80195b2:	b10d      	cbz	r5, 80195b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 80195b4:	1c6b      	adds	r3, r5, #1
 80195b6:	9308      	str	r3, [sp, #32]
 80195b8:	ab0f      	add	r3, sp, #60	; 0x3c
 80195ba:	9305      	str	r3, [sp, #20]
 80195bc:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 80195c0:	9304      	str	r3, [sp, #16]
 80195c2:	ab0e      	add	r3, sp, #56	; 0x38
 80195c4:	9303      	str	r3, [sp, #12]
 80195c6:	ab0c      	add	r3, sp, #48	; 0x30
 80195c8:	9302      	str	r3, [sp, #8]
 80195ca:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 80195ce:	9301      	str	r3, [sp, #4]
 80195d0:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 80195d4:	9300      	str	r3, [sp, #0]
 80195d6:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 80195da:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 80195de:	a908      	add	r1, sp, #32
 80195e0:	a809      	add	r0, sp, #36	; 0x24
 80195e2:	f7ff fea8 	bl	8019336 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80195e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80195e8:	2b00      	cmp	r3, #0
 80195ea:	bfbe      	ittt	lt
 80195ec:	6823      	ldrlt	r3, [r4, #0]
 80195ee:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 80195f2:	930e      	strlt	r3, [sp, #56]	; 0x38
 80195f4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80195f6:	bfb8      	it	lt
 80195f8:	3404      	addlt	r4, #4
 80195fa:	2b00      	cmp	r3, #0
 80195fc:	bfb8      	it	lt
 80195fe:	6823      	ldrlt	r3, [r4, #0]
 8019600:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8019604:	bfbe      	ittt	lt
 8019606:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801960a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 801960c:	3404      	addlt	r4, #4
 801960e:	b1d9      	cbz	r1, 8019648 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8019610:	880b      	ldrh	r3, [r1, #0]
 8019612:	2b69      	cmp	r3, #105	; 0x69
 8019614:	d01f      	beq.n	8019656 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019616:	d82f      	bhi.n	8019678 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8019618:	2b58      	cmp	r3, #88	; 0x58
 801961a:	d01c      	beq.n	8019656 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801961c:	d818      	bhi.n	8019650 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801961e:	2b25      	cmp	r3, #37	; 0x25
 8019620:	d034      	beq.n	801968c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8019622:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8019626:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019628:	f1bb 0f00 	cmp.w	fp, #0
 801962c:	f000 80b8 	beq.w	80197a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8019630:	f8bb 5000 	ldrh.w	r5, [fp]
 8019634:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8019638:	3301      	adds	r3, #1
 801963a:	930d      	str	r3, [sp, #52]	; 0x34
 801963c:	e029      	b.n	8019692 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801963e:	b10d      	cbz	r5, 8019644 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8019640:	782a      	ldrb	r2, [r5, #0]
 8019642:	e785      	b.n	8019550 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8019644:	462a      	mov	r2, r5
 8019646:	e783      	b.n	8019550 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8019648:	2a00      	cmp	r2, #0
 801964a:	d0ea      	beq.n	8019622 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801964c:	7813      	ldrb	r3, [r2, #0]
 801964e:	e7e0      	b.n	8019612 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8019650:	3b63      	subs	r3, #99	; 0x63
 8019652:	2b01      	cmp	r3, #1
 8019654:	d8e5      	bhi.n	8019622 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8019656:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801965a:	b329      	cbz	r1, 80196a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801965c:	880b      	ldrh	r3, [r1, #0]
 801965e:	2b69      	cmp	r3, #105	; 0x69
 8019660:	d063      	beq.n	801972a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8019662:	d825      	bhi.n	80196b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8019664:	2b63      	cmp	r3, #99	; 0x63
 8019666:	d038      	beq.n	80196da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8019668:	2b64      	cmp	r3, #100	; 0x64
 801966a:	d05e      	beq.n	801972a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801966c:	2b58      	cmp	r3, #88	; 0x58
 801966e:	d07b      	beq.n	8019768 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8019670:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8019674:	4625      	mov	r5, r4
 8019676:	e036      	b.n	80196e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019678:	2b73      	cmp	r3, #115	; 0x73
 801967a:	d0ec      	beq.n	8019656 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801967c:	d802      	bhi.n	8019684 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801967e:	2b6f      	cmp	r3, #111	; 0x6f
 8019680:	d1cf      	bne.n	8019622 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8019682:	e7e8      	b.n	8019656 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019684:	2b75      	cmp	r3, #117	; 0x75
 8019686:	d0e6      	beq.n	8019656 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019688:	2b78      	cmp	r3, #120	; 0x78
 801968a:	e7f9      	b.n	8019680 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801968c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801968e:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8019692:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019694:	b10b      	cbz	r3, 801969a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8019696:	3302      	adds	r3, #2
 8019698:	9309      	str	r3, [sp, #36]	; 0x24
 801969a:	9b08      	ldr	r3, [sp, #32]
 801969c:	2b00      	cmp	r3, #0
 801969e:	f43f af2e 	beq.w	80194fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80196a2:	3301      	adds	r3, #1
 80196a4:	9308      	str	r3, [sp, #32]
 80196a6:	e72a      	b.n	80194fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80196a8:	2a00      	cmp	r2, #0
 80196aa:	d0e1      	beq.n	8019670 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80196ac:	7813      	ldrb	r3, [r2, #0]
 80196ae:	e7d6      	b.n	801965e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 80196b0:	2b73      	cmp	r3, #115	; 0x73
 80196b2:	d036      	beq.n	8019722 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 80196b4:	d807      	bhi.n	80196c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 80196b6:	2b6f      	cmp	r3, #111	; 0x6f
 80196b8:	d1da      	bne.n	8019670 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80196ba:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80196bc:	1d25      	adds	r5, r4, #4
 80196be:	eba8 0202 	sub.w	r2, r8, r2
 80196c2:	2308      	movs	r3, #8
 80196c4:	e04a      	b.n	801975c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80196c6:	2b75      	cmp	r3, #117	; 0x75
 80196c8:	d043      	beq.n	8019752 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 80196ca:	2b78      	cmp	r3, #120	; 0x78
 80196cc:	d1d0      	bne.n	8019670 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80196ce:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80196d0:	1d25      	adds	r5, r4, #4
 80196d2:	eba8 0202 	sub.w	r2, r8, r2
 80196d6:	2310      	movs	r3, #16
 80196d8:	e040      	b.n	801975c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80196da:	6823      	ldr	r3, [r4, #0]
 80196dc:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 80196e0:	1d25      	adds	r5, r4, #4
 80196e2:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 80196e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80196e8:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 80196ec:	2b00      	cmp	r3, #0
 80196ee:	d052      	beq.n	8019796 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 80196f0:	881a      	ldrh	r2, [r3, #0]
 80196f2:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 80196f6:	a80d      	add	r0, sp, #52	; 0x34
 80196f8:	9005      	str	r0, [sp, #20]
 80196fa:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 80196fe:	9004      	str	r0, [sp, #16]
 8019700:	980e      	ldr	r0, [sp, #56]	; 0x38
 8019702:	9003      	str	r0, [sp, #12]
 8019704:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8019708:	9002      	str	r0, [sp, #8]
 801970a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801970c:	9001      	str	r0, [sp, #4]
 801970e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8019712:	9000      	str	r0, [sp, #0]
 8019714:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8019718:	a810      	add	r0, sp, #64	; 0x40
 801971a:	f7ff fd49 	bl	80191b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801971e:	462c      	mov	r4, r5
 8019720:	e7b7      	b.n	8019692 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8019722:	6823      	ldr	r3, [r4, #0]
 8019724:	1d25      	adds	r5, r4, #4
 8019726:	9310      	str	r3, [sp, #64]	; 0x40
 8019728:	e7dd      	b.n	80196e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801972a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801972c:	6820      	ldr	r0, [r4, #0]
 801972e:	eba8 0202 	sub.w	r2, r8, r2
 8019732:	230a      	movs	r3, #10
 8019734:	b292      	uxth	r2, r2
 8019736:	4649      	mov	r1, r9
 8019738:	f7ff fce4 	bl	8019104 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801973c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8019740:	2b2d      	cmp	r3, #45	; 0x2d
 8019742:	f104 0504 	add.w	r5, r4, #4
 8019746:	d1ce      	bne.n	80196e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019748:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801974c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801974e:	3302      	adds	r3, #2
 8019750:	e7e9      	b.n	8019726 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8019752:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019754:	1d25      	adds	r5, r4, #4
 8019756:	eba8 0202 	sub.w	r2, r8, r2
 801975a:	230a      	movs	r3, #10
 801975c:	b292      	uxth	r2, r2
 801975e:	4649      	mov	r1, r9
 8019760:	6820      	ldr	r0, [r4, #0]
 8019762:	f7ff fcfb 	bl	801915c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8019766:	e7be      	b.n	80196e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019768:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801976a:	6820      	ldr	r0, [r4, #0]
 801976c:	eba8 0202 	sub.w	r2, r8, r2
 8019770:	b292      	uxth	r2, r2
 8019772:	2310      	movs	r3, #16
 8019774:	4649      	mov	r1, r9
 8019776:	f7ff fcf1 	bl	801915c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801977a:	1d25      	adds	r5, r4, #4
 801977c:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8019780:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8019784:	2b00      	cmp	r3, #0
 8019786:	d0ae      	beq.n	80196e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019788:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 801978c:	2919      	cmp	r1, #25
 801978e:	d8f7      	bhi.n	8019780 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8019790:	3b20      	subs	r3, #32
 8019792:	8013      	strh	r3, [r2, #0]
 8019794:	e7f4      	b.n	8019780 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8019796:	9a08      	ldr	r2, [sp, #32]
 8019798:	2a00      	cmp	r2, #0
 801979a:	d0aa      	beq.n	80196f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801979c:	7812      	ldrb	r2, [r2, #0]
 801979e:	e7a8      	b.n	80196f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80197a0:	2d00      	cmp	r5, #0
 80197a2:	f43f af47 	beq.w	8019634 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 80197a6:	782d      	ldrb	r5, [r5, #0]
 80197a8:	e744      	b.n	8019634 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

080197aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 80197aa:	b507      	push	{r0, r1, r2, lr}
 80197ac:	9300      	str	r3, [sp, #0]
 80197ae:	4613      	mov	r3, r2
 80197b0:	2200      	movs	r2, #0
 80197b2:	f7ff fe90 	bl	80194d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 80197b6:	b003      	add	sp, #12
 80197b8:	f85d fb04 	ldr.w	pc, [sp], #4

080197bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 80197bc:	b40c      	push	{r2, r3}
 80197be:	b507      	push	{r0, r1, r2, lr}
 80197c0:	ab04      	add	r3, sp, #16
 80197c2:	f853 2b04 	ldr.w	r2, [r3], #4
 80197c6:	9301      	str	r3, [sp, #4]
 80197c8:	f7ff ffef 	bl	80197aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 80197cc:	b003      	add	sp, #12
 80197ce:	f85d eb04 	ldr.w	lr, [sp], #4
 80197d2:	b002      	add	sp, #8
 80197d4:	4770      	bx	lr
	...

080197d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 80197d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80197dc:	b0c5      	sub	sp, #276	; 0x114
 80197de:	2400      	movs	r4, #0
 80197e0:	af11      	add	r7, sp, #68	; 0x44
 80197e2:	4606      	mov	r6, r0
 80197e4:	468a      	mov	sl, r1
 80197e6:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80197ea:	4621      	mov	r1, r4
 80197ec:	22c8      	movs	r2, #200	; 0xc8
 80197ee:	4638      	mov	r0, r7
 80197f0:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 80197f4:	940d      	str	r4, [sp, #52]	; 0x34
 80197f6:	f011 ff00 	bl	802b5fa <memset>
 80197fa:	b16e      	cbz	r6, 8019818 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 80197fc:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 8019aa0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8019800:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019802:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019804:	b162      	cbz	r2, 8019820 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 8019806:	8812      	ldrh	r2, [r2, #0]
 8019808:	b11a      	cbz	r2, 8019812 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801980a:	f10a 31ff 	add.w	r1, sl, #4294967295
 801980e:	4299      	cmp	r1, r3
 8019810:	dc2e      	bgt.n	8019870 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 8019812:	2200      	movs	r2, #0
 8019814:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8019818:	4630      	mov	r0, r6
 801981a:	b045      	add	sp, #276	; 0x114
 801981c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019820:	9a08      	ldr	r2, [sp, #32]
 8019822:	2a00      	cmp	r2, #0
 8019824:	d0f5      	beq.n	8019812 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8019826:	7812      	ldrb	r2, [r2, #0]
 8019828:	e7ee      	b.n	8019808 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 801982a:	2d00      	cmp	r5, #0
 801982c:	d0e8      	beq.n	8019800 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801982e:	782a      	ldrb	r2, [r5, #0]
 8019830:	b142      	cbz	r2, 8019844 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 8019832:	2a25      	cmp	r2, #37	; 0x25
 8019834:	d001      	beq.n	801983a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 8019836:	4299      	cmp	r1, r3
 8019838:	dc08      	bgt.n	801984c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 801983a:	f1b8 0f00 	cmp.w	r8, #0
 801983e:	d121      	bne.n	8019884 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 8019840:	2d00      	cmp	r5, #0
 8019842:	d0dd      	beq.n	8019800 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019844:	782a      	ldrb	r2, [r5, #0]
 8019846:	f04f 0800 	mov.w	r8, #0
 801984a:	e01d      	b.n	8019888 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 801984c:	f1b8 0f00 	cmp.w	r8, #0
 8019850:	d07f      	beq.n	8019952 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 8019852:	f8b8 2000 	ldrh.w	r2, [r8]
 8019856:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801985a:	f1b8 0f00 	cmp.w	r8, #0
 801985e:	d002      	beq.n	8019866 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8019860:	f108 0202 	add.w	r2, r8, #2
 8019864:	9209      	str	r2, [sp, #36]	; 0x24
 8019866:	b10d      	cbz	r5, 801986c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 8019868:	3501      	adds	r5, #1
 801986a:	9508      	str	r5, [sp, #32]
 801986c:	3301      	adds	r3, #1
 801986e:	930d      	str	r3, [sp, #52]	; 0x34
 8019870:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 8019874:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019876:	f1b8 0f00 	cmp.w	r8, #0
 801987a:	d0d6      	beq.n	801982a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 801987c:	f8b8 2000 	ldrh.w	r2, [r8]
 8019880:	2a00      	cmp	r2, #0
 8019882:	d1d6      	bne.n	8019832 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 8019884:	f8b8 2000 	ldrh.w	r2, [r8]
 8019888:	2a00      	cmp	r2, #0
 801988a:	d0b9      	beq.n	8019800 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801988c:	4299      	cmp	r1, r3
 801988e:	ddb7      	ble.n	8019800 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019890:	2300      	movs	r3, #0
 8019892:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8019896:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 801989a:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 801989e:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 80198a2:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 80198a6:	930e      	str	r3, [sp, #56]	; 0x38
 80198a8:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 80198ac:	930f      	str	r3, [sp, #60]	; 0x3c
 80198ae:	f1b8 0f00 	cmp.w	r8, #0
 80198b2:	d002      	beq.n	80198ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 80198b4:	f108 0302 	add.w	r3, r8, #2
 80198b8:	9309      	str	r3, [sp, #36]	; 0x24
 80198ba:	b10d      	cbz	r5, 80198c0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 80198bc:	1c6b      	adds	r3, r5, #1
 80198be:	9308      	str	r3, [sp, #32]
 80198c0:	ab0f      	add	r3, sp, #60	; 0x3c
 80198c2:	9305      	str	r3, [sp, #20]
 80198c4:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 80198c8:	9304      	str	r3, [sp, #16]
 80198ca:	ab0e      	add	r3, sp, #56	; 0x38
 80198cc:	9303      	str	r3, [sp, #12]
 80198ce:	ab0c      	add	r3, sp, #48	; 0x30
 80198d0:	9302      	str	r3, [sp, #8]
 80198d2:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 80198d6:	9301      	str	r3, [sp, #4]
 80198d8:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 80198dc:	9300      	str	r3, [sp, #0]
 80198de:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 80198e2:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 80198e6:	a908      	add	r1, sp, #32
 80198e8:	a809      	add	r0, sp, #36	; 0x24
 80198ea:	f7ff fd24 	bl	8019336 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80198ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80198f0:	2b00      	cmp	r3, #0
 80198f2:	da0b      	bge.n	801990c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 80198f4:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80198f8:	edd3 7a00 	vldr	s15, [r3]
 80198fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8019900:	3401      	adds	r4, #1
 8019902:	ee17 3a90 	vmov	r3, s15
 8019906:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801990a:	930e      	str	r3, [sp, #56]	; 0x38
 801990c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801990e:	2b00      	cmp	r3, #0
 8019910:	da0b      	bge.n	801992a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 8019912:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8019916:	edd3 7a00 	vldr	s15, [r3]
 801991a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801991e:	3401      	adds	r4, #1
 8019920:	ee17 3a90 	vmov	r3, s15
 8019924:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019928:	930f      	str	r3, [sp, #60]	; 0x3c
 801992a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801992c:	b1b3      	cbz	r3, 801995c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 801992e:	881a      	ldrh	r2, [r3, #0]
 8019930:	2a25      	cmp	r2, #37	; 0x25
 8019932:	d018      	beq.n	8019966 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 8019934:	2a66      	cmp	r2, #102	; 0x66
 8019936:	d01c      	beq.n	8019972 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 8019938:	e9cd 5808 	strd	r5, r8, [sp, #32]
 801993c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801993e:	f1b8 0f00 	cmp.w	r8, #0
 8019942:	f000 8121 	beq.w	8019b88 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 8019946:	f8b8 5000 	ldrh.w	r5, [r8]
 801994a:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 801994e:	3301      	adds	r3, #1
 8019950:	e00d      	b.n	801996e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 8019952:	b10d      	cbz	r5, 8019958 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8019954:	782a      	ldrb	r2, [r5, #0]
 8019956:	e77e      	b.n	8019856 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8019958:	462a      	mov	r2, r5
 801995a:	e77c      	b.n	8019856 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801995c:	9b08      	ldr	r3, [sp, #32]
 801995e:	2b00      	cmp	r3, #0
 8019960:	d0ea      	beq.n	8019938 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8019962:	781a      	ldrb	r2, [r3, #0]
 8019964:	e7e4      	b.n	8019930 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 8019966:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019968:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801996c:	3302      	adds	r3, #2
 801996e:	930d      	str	r3, [sp, #52]	; 0x34
 8019970:	e041      	b.n	80199f6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 8019972:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8019976:	edd3 7a00 	vldr	s15, [r3]
 801997a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801997e:	9710      	str	r7, [sp, #64]	; 0x40
 8019980:	3401      	adds	r4, #1
 8019982:	b923      	cbnz	r3, 801998e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 8019984:	2301      	movs	r3, #1
 8019986:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801998a:	2306      	movs	r3, #6
 801998c:	930f      	str	r3, [sp, #60]	; 0x3c
 801998e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019992:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019996:	bf48      	it	mi
 8019998:	eef1 7a67 	vnegmi.f32	s15, s15
 801999c:	eeb0 7ae7 	vabs.f32	s14, s15
 80199a0:	bf48      	it	mi
 80199a2:	232d      	movmi	r3, #45	; 0x2d
 80199a4:	eeb4 7a45 	vcmp.f32	s14, s10
 80199a8:	bf48      	it	mi
 80199aa:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 80199ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80199b2:	dd2b      	ble.n	8019a0c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 80199b4:	4b3b      	ldr	r3, [pc, #236]	; (8019aa4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 80199b6:	9311      	str	r3, [sp, #68]	; 0x44
 80199b8:	2366      	movs	r3, #102	; 0x66
 80199ba:	9312      	str	r3, [sp, #72]	; 0x48
 80199bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80199be:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 80199c2:	2b00      	cmp	r3, #0
 80199c4:	f000 80da 	beq.w	8019b7c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 80199c8:	881a      	ldrh	r2, [r3, #0]
 80199ca:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 80199ce:	a80d      	add	r0, sp, #52	; 0x34
 80199d0:	9005      	str	r0, [sp, #20]
 80199d2:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 80199d6:	9004      	str	r0, [sp, #16]
 80199d8:	980e      	ldr	r0, [sp, #56]	; 0x38
 80199da:	9003      	str	r0, [sp, #12]
 80199dc:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 80199e0:	9002      	str	r0, [sp, #8]
 80199e2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80199e4:	9001      	str	r0, [sp, #4]
 80199e6:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 80199ea:	9000      	str	r0, [sp, #0]
 80199ec:	e9cd a606 	strd	sl, r6, [sp, #24]
 80199f0:	a810      	add	r0, sp, #64	; 0x40
 80199f2:	f7ff fbdd 	bl	80191b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80199f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80199f8:	b10b      	cbz	r3, 80199fe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 80199fa:	3302      	adds	r3, #2
 80199fc:	9309      	str	r3, [sp, #36]	; 0x24
 80199fe:	9b08      	ldr	r3, [sp, #32]
 8019a00:	2b00      	cmp	r3, #0
 8019a02:	f43f aefd 	beq.w	8019800 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019a06:	3301      	adds	r3, #1
 8019a08:	9308      	str	r3, [sp, #32]
 8019a0a:	e6f9      	b.n	8019800 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019a0c:	eef4 7a67 	vcmp.f32	s15, s15
 8019a10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019a14:	d63a      	bvs.n	8019a8c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 8019a16:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 8019a1a:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8019a1e:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 8019a22:	eeb0 6a67 	vmov.f32	s12, s15
 8019a26:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019a2a:	eef0 5a47 	vmov.f32	s11, s14
 8019a2e:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8019a32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019a36:	da2d      	bge.n	8019a94 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8019a38:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019a3a:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8019a3e:	2100      	movs	r1, #0
 8019a40:	eef0 4a46 	vmov.f32	s9, s12
 8019a44:	ebaa 0202 	sub.w	r2, sl, r2
 8019a48:	eef4 6ac6 	vcmpe.f32	s13, s12
 8019a4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019a50:	b28d      	uxth	r5, r1
 8019a52:	db2c      	blt.n	8019aae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8019a54:	1a53      	subs	r3, r2, r1
 8019a56:	2b00      	cmp	r3, #0
 8019a58:	dd29      	ble.n	8019aae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8019a5a:	3101      	adds	r1, #1
 8019a5c:	2964      	cmp	r1, #100	; 0x64
 8019a5e:	d025      	beq.n	8019aac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 8019a60:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8019a64:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8019a68:	ee17 3a10 	vmov	r3, s14
 8019a6c:	2b09      	cmp	r3, #9
 8019a6e:	bfa8      	it	ge
 8019a70:	2309      	movge	r3, #9
 8019a72:	ee07 3a10 	vmov	s14, r3
 8019a76:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019a7a:	f103 0030 	add.w	r0, r3, #48	; 0x30
 8019a7e:	eee7 7a66 	vfms.f32	s15, s14, s13
 8019a82:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 8019a86:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 8019a8a:	e7dd      	b.n	8019a48 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 8019a8c:	4b06      	ldr	r3, [pc, #24]	; (8019aa8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 8019a8e:	9311      	str	r3, [sp, #68]	; 0x44
 8019a90:	236e      	movs	r3, #110	; 0x6e
 8019a92:	e792      	b.n	80199ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 8019a94:	ee66 6a87 	vmul.f32	s13, s13, s14
 8019a98:	ee86 6a07 	vdiv.f32	s12, s12, s14
 8019a9c:	e7c7      	b.n	8019a2e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 8019a9e:	bf00      	nop
 8019aa0:	7f7fffff 	.word	0x7f7fffff
 8019aa4:	006e0069 	.word	0x006e0069
 8019aa8:	0061006e 	.word	0x0061006e
 8019aac:	2563      	movs	r5, #99	; 0x63
 8019aae:	2a63      	cmp	r2, #99	; 0x63
 8019ab0:	bfd4      	ite	le
 8019ab2:	ebc5 0202 	rsble	r2, r5, r2
 8019ab6:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 8019aba:	2a00      	cmp	r2, #0
 8019abc:	dd43      	ble.n	8019b46 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8019abe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019ac0:	2b00      	cmp	r3, #0
 8019ac2:	dd40      	ble.n	8019b46 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8019ac4:	f04f 0901 	mov.w	r9, #1
 8019ac8:	210a      	movs	r1, #10
 8019aca:	f113 33ff 	adds.w	r3, r3, #4294967295
 8019ace:	d30c      	bcc.n	8019aea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 8019ad0:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8019ad4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8019ad8:	ee17 0a10 	vmov	r0, s14
 8019adc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019ae0:	fb01 0909 	mla	r9, r1, r9, r0
 8019ae4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8019ae8:	e7ef      	b.n	8019aca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 8019aea:	3501      	adds	r5, #1
 8019aec:	930f      	str	r3, [sp, #60]	; 0x3c
 8019aee:	b292      	uxth	r2, r2
 8019af0:	230a      	movs	r3, #10
 8019af2:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 8019af6:	4648      	mov	r0, r9
 8019af8:	f7ff fb4e 	bl	8019198 <_ZN8touchgfx7Unicode4itoaElPtti>
 8019afc:	f1b9 0f01 	cmp.w	r9, #1
 8019b00:	dc1f      	bgt.n	8019b42 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 8019b02:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 8019b06:	2b00      	cmp	r3, #0
 8019b08:	bf0c      	ite	eq
 8019b0a:	2300      	moveq	r3, #0
 8019b0c:	232e      	movne	r3, #46	; 0x2e
 8019b0e:	aa44      	add	r2, sp, #272	; 0x110
 8019b10:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8019b14:	eef4 7ae4 	vcmpe.f32	s15, s9
 8019b18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b1c:	f825 3ccc 	strh.w	r3, [r5, #-204]
 8019b20:	f6ff af4c 	blt.w	80199bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019b24:	2300      	movs	r3, #0
 8019b26:	f838 2b02 	ldrh.w	r2, [r8], #2
 8019b2a:	1c59      	adds	r1, r3, #1
 8019b2c:	b98a      	cbnz	r2, 8019b52 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 8019b2e:	b29b      	uxth	r3, r3
 8019b30:	2130      	movs	r1, #48	; 0x30
 8019b32:	b983      	cbnz	r3, 8019b56 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 8019b34:	2331      	movs	r3, #49	; 0x31
 8019b36:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8019b3a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019b3c:	3b02      	subs	r3, #2
 8019b3e:	9310      	str	r3, [sp, #64]	; 0x40
 8019b40:	e73c      	b.n	80199bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019b42:	232e      	movs	r3, #46	; 0x2e
 8019b44:	e7e3      	b.n	8019b0e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 8019b46:	ab44      	add	r3, sp, #272	; 0x110
 8019b48:	3501      	adds	r5, #1
 8019b4a:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8019b4e:	2300      	movs	r3, #0
 8019b50:	e7e0      	b.n	8019b14 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 8019b52:	460b      	mov	r3, r1
 8019b54:	e7e7      	b.n	8019b26 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 8019b56:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 8019b5a:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 8019b5e:	2808      	cmp	r0, #8
 8019b60:	d806      	bhi.n	8019b70 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 8019b62:	a944      	add	r1, sp, #272	; 0x110
 8019b64:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8019b68:	3201      	adds	r2, #1
 8019b6a:	f823 2ccc 	strh.w	r2, [r3, #-204]
 8019b6e:	e725      	b.n	80199bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019b70:	2a39      	cmp	r2, #57	; 0x39
 8019b72:	bf08      	it	eq
 8019b74:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 8019b78:	3b01      	subs	r3, #1
 8019b7a:	e7da      	b.n	8019b32 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 8019b7c:	9a08      	ldr	r2, [sp, #32]
 8019b7e:	2a00      	cmp	r2, #0
 8019b80:	f43f af23 	beq.w	80199ca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8019b84:	7812      	ldrb	r2, [r2, #0]
 8019b86:	e720      	b.n	80199ca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8019b88:	2d00      	cmp	r5, #0
 8019b8a:	f43f aede 	beq.w	801994a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8019b8e:	782d      	ldrb	r5, [r5, #0]
 8019b90:	e6db      	b.n	801994a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8019b92:	bf00      	nop

08019b94 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8019b94:	b507      	push	{r0, r1, r2, lr}
 8019b96:	9300      	str	r3, [sp, #0]
 8019b98:	4613      	mov	r3, r2
 8019b9a:	2200      	movs	r2, #0
 8019b9c:	f7ff fe1c 	bl	80197d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8019ba0:	b003      	add	sp, #12
 8019ba2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08019ba8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8019ba8:	4b01      	ldr	r3, [pc, #4]	; (8019bb0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8019baa:	6018      	str	r0, [r3, #0]
 8019bac:	4770      	bx	lr
 8019bae:	bf00      	nop
 8019bb0:	20013884 	.word	0x20013884

08019bb4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8019bb4:	4b06      	ldr	r3, [pc, #24]	; (8019bd0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8019bb6:	881a      	ldrh	r2, [r3, #0]
 8019bb8:	4282      	cmp	r2, r0
 8019bba:	d807      	bhi.n	8019bcc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8019bbc:	4b05      	ldr	r3, [pc, #20]	; (8019bd4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8019bbe:	881b      	ldrh	r3, [r3, #0]
 8019bc0:	4413      	add	r3, r2
 8019bc2:	4298      	cmp	r0, r3
 8019bc4:	bfac      	ite	ge
 8019bc6:	2000      	movge	r0, #0
 8019bc8:	2001      	movlt	r0, #1
 8019bca:	4770      	bx	lr
 8019bcc:	2000      	movs	r0, #0
 8019bce:	4770      	bx	lr
 8019bd0:	200138a4 	.word	0x200138a4
 8019bd4:	200138a8 	.word	0x200138a8

08019bd8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8019bd8:	b508      	push	{r3, lr}
 8019bda:	4601      	mov	r1, r0
 8019bdc:	f7ff ffea 	bl	8019bb4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8019be0:	b118      	cbz	r0, 8019bea <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8019be2:	4b02      	ldr	r3, [pc, #8]	; (8019bec <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8019be4:	681b      	ldr	r3, [r3, #0]
 8019be6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8019bea:	bd08      	pop	{r3, pc}
 8019bec:	20013888 	.word	0x20013888

08019bf0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8019bf0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019bf2:	4c24      	ldr	r4, [pc, #144]	; (8019c84 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8019bf4:	6823      	ldr	r3, [r4, #0]
 8019bf6:	2b00      	cmp	r3, #0
 8019bf8:	d042      	beq.n	8019c80 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8019bfa:	4a23      	ldr	r2, [pc, #140]	; (8019c88 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8019bfc:	4d23      	ldr	r5, [pc, #140]	; (8019c8c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8019bfe:	8811      	ldrh	r1, [r2, #0]
 8019c00:	f8b5 c000 	ldrh.w	ip, [r5]
 8019c04:	4822      	ldr	r0, [pc, #136]	; (8019c90 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8019c06:	4461      	add	r1, ip
 8019c08:	1c4a      	adds	r2, r1, #1
 8019c0a:	f022 0201 	bic.w	r2, r2, #1
 8019c0e:	008f      	lsls	r7, r1, #2
 8019c10:	0412      	lsls	r2, r2, #16
 8019c12:	19de      	adds	r6, r3, r7
 8019c14:	0c12      	lsrs	r2, r2, #16
 8019c16:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8019c1a:	6006      	str	r6, [r0, #0]
 8019c1c:	4e1d      	ldr	r6, [pc, #116]	; (8019c94 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8019c1e:	19da      	adds	r2, r3, r7
 8019c20:	6032      	str	r2, [r6, #0]
 8019c22:	220e      	movs	r2, #14
 8019c24:	fb02 f20c 	mul.w	r2, r2, ip
 8019c28:	3203      	adds	r2, #3
 8019c2a:	f022 0203 	bic.w	r2, r2, #3
 8019c2e:	443a      	add	r2, r7
 8019c30:	4f19      	ldr	r7, [pc, #100]	; (8019c98 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8019c32:	4413      	add	r3, r2
 8019c34:	603b      	str	r3, [r7, #0]
 8019c36:	4f19      	ldr	r7, [pc, #100]	; (8019c9c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8019c38:	2300      	movs	r3, #0
 8019c3a:	803b      	strh	r3, [r7, #0]
 8019c3c:	4f18      	ldr	r7, [pc, #96]	; (8019ca0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8019c3e:	683f      	ldr	r7, [r7, #0]
 8019c40:	1aba      	subs	r2, r7, r2
 8019c42:	4f18      	ldr	r7, [pc, #96]	; (8019ca4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8019c44:	603a      	str	r2, [r7, #0]
 8019c46:	4a18      	ldr	r2, [pc, #96]	; (8019ca8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8019c48:	469c      	mov	ip, r3
 8019c4a:	8013      	strh	r3, [r2, #0]
 8019c4c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8019c50:	428b      	cmp	r3, r1
 8019c52:	d10d      	bne.n	8019c70 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8019c54:	882d      	ldrh	r5, [r5, #0]
 8019c56:	6830      	ldr	r0, [r6, #0]
 8019c58:	2300      	movs	r3, #0
 8019c5a:	240e      	movs	r4, #14
 8019c5c:	429d      	cmp	r5, r3
 8019c5e:	d90f      	bls.n	8019c80 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8019c60:	fb04 0203 	mla	r2, r4, r3, r0
 8019c64:	3301      	adds	r3, #1
 8019c66:	7b11      	ldrb	r1, [r2, #12]
 8019c68:	f36f 1145 	bfc	r1, #5, #1
 8019c6c:	7311      	strb	r1, [r2, #12]
 8019c6e:	e7f5      	b.n	8019c5c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8019c70:	6822      	ldr	r2, [r4, #0]
 8019c72:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8019c76:	6802      	ldr	r2, [r0, #0]
 8019c78:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8019c7c:	3301      	adds	r3, #1
 8019c7e:	e7e7      	b.n	8019c50 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8019c80:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019c82:	bf00      	nop
 8019c84:	20013888 	.word	0x20013888
 8019c88:	200138a4 	.word	0x200138a4
 8019c8c:	200138a8 	.word	0x200138a8
 8019c90:	2001389c 	.word	0x2001389c
 8019c94:	2001388c 	.word	0x2001388c
 8019c98:	20013894 	.word	0x20013894
 8019c9c:	200138a6 	.word	0x200138a6
 8019ca0:	20013890 	.word	0x20013890
 8019ca4:	200138a0 	.word	0x200138a0
 8019ca8:	20013898 	.word	0x20013898

08019cac <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8019cac:	4b06      	ldr	r3, [pc, #24]	; (8019cc8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8019cae:	681b      	ldr	r3, [r3, #0]
 8019cb0:	b943      	cbnz	r3, 8019cc4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8019cb2:	b139      	cbz	r1, 8019cc4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8019cb4:	4b05      	ldr	r3, [pc, #20]	; (8019ccc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8019cb6:	801a      	strh	r2, [r3, #0]
 8019cb8:	4b05      	ldr	r3, [pc, #20]	; (8019cd0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8019cba:	6019      	str	r1, [r3, #0]
 8019cbc:	4b05      	ldr	r3, [pc, #20]	; (8019cd4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8019cbe:	6018      	str	r0, [r3, #0]
 8019cc0:	f7ff bf96 	b.w	8019bf0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8019cc4:	4770      	bx	lr
 8019cc6:	bf00      	nop
 8019cc8:	20013894 	.word	0x20013894
 8019ccc:	200138a8 	.word	0x200138a8
 8019cd0:	20013890 	.word	0x20013890
 8019cd4:	20013888 	.word	0x20013888

08019cd8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8019cd8:	b470      	push	{r4, r5, r6}
 8019cda:	4c07      	ldr	r4, [pc, #28]	; (8019cf8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8019cdc:	6826      	ldr	r6, [r4, #0]
 8019cde:	4605      	mov	r5, r0
 8019ce0:	4610      	mov	r0, r2
 8019ce2:	9a03      	ldr	r2, [sp, #12]
 8019ce4:	b936      	cbnz	r6, 8019cf4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8019ce6:	6025      	str	r5, [r4, #0]
 8019ce8:	4c04      	ldr	r4, [pc, #16]	; (8019cfc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8019cea:	8021      	strh	r1, [r4, #0]
 8019cec:	bc70      	pop	{r4, r5, r6}
 8019cee:	4619      	mov	r1, r3
 8019cf0:	f7ff bfdc 	b.w	8019cac <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8019cf4:	bc70      	pop	{r4, r5, r6}
 8019cf6:	4770      	bx	lr
 8019cf8:	200138ac 	.word	0x200138ac
 8019cfc:	200138a4 	.word	0x200138a4

08019d00 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8019d00:	4a12      	ldr	r2, [pc, #72]	; (8019d4c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8019d02:	8803      	ldrh	r3, [r0, #0]
 8019d04:	8812      	ldrh	r2, [r2, #0]
 8019d06:	4293      	cmp	r3, r2
 8019d08:	d207      	bcs.n	8019d1a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8019d0a:	4a11      	ldr	r2, [pc, #68]	; (8019d50 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8019d0c:	6812      	ldr	r2, [r2, #0]
 8019d0e:	2114      	movs	r1, #20
 8019d10:	fb01 2303 	mla	r3, r1, r3, r2
 8019d14:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8019d18:	4770      	bx	lr
 8019d1a:	490e      	ldr	r1, [pc, #56]	; (8019d54 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8019d1c:	8809      	ldrh	r1, [r1, #0]
 8019d1e:	4411      	add	r1, r2
 8019d20:	428b      	cmp	r3, r1
 8019d22:	da04      	bge.n	8019d2e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8019d24:	1a9b      	subs	r3, r3, r2
 8019d26:	4a0c      	ldr	r2, [pc, #48]	; (8019d58 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8019d28:	210e      	movs	r1, #14
 8019d2a:	6812      	ldr	r2, [r2, #0]
 8019d2c:	e7f0      	b.n	8019d10 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8019d2e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019d32:	4293      	cmp	r3, r2
 8019d34:	d108      	bne.n	8019d48 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8019d36:	4b09      	ldr	r3, [pc, #36]	; (8019d5c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8019d38:	781b      	ldrb	r3, [r3, #0]
 8019d3a:	b91b      	cbnz	r3, 8019d44 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8019d3c:	4b08      	ldr	r3, [pc, #32]	; (8019d60 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8019d3e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8019d42:	4770      	bx	lr
 8019d44:	4b07      	ldr	r3, [pc, #28]	; (8019d64 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8019d46:	e7fa      	b.n	8019d3e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8019d48:	2000      	movs	r0, #0
 8019d4a:	4770      	bx	lr
 8019d4c:	200138a4 	.word	0x200138a4
 8019d50:	200138ac 	.word	0x200138ac
 8019d54:	200138a8 	.word	0x200138a8
 8019d58:	2001388c 	.word	0x2001388c
 8019d5c:	20013814 	.word	0x20013814
 8019d60:	20013816 	.word	0x20013816
 8019d64:	20013818 	.word	0x20013818

08019d68 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8019d68:	4a12      	ldr	r2, [pc, #72]	; (8019db4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8019d6a:	8803      	ldrh	r3, [r0, #0]
 8019d6c:	8812      	ldrh	r2, [r2, #0]
 8019d6e:	4293      	cmp	r3, r2
 8019d70:	d207      	bcs.n	8019d82 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8019d72:	4a11      	ldr	r2, [pc, #68]	; (8019db8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8019d74:	6812      	ldr	r2, [r2, #0]
 8019d76:	2114      	movs	r1, #20
 8019d78:	fb01 2303 	mla	r3, r1, r3, r2
 8019d7c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8019d80:	4770      	bx	lr
 8019d82:	490e      	ldr	r1, [pc, #56]	; (8019dbc <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8019d84:	8809      	ldrh	r1, [r1, #0]
 8019d86:	4411      	add	r1, r2
 8019d88:	428b      	cmp	r3, r1
 8019d8a:	da04      	bge.n	8019d96 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8019d8c:	1a9b      	subs	r3, r3, r2
 8019d8e:	4a0c      	ldr	r2, [pc, #48]	; (8019dc0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8019d90:	210e      	movs	r1, #14
 8019d92:	6812      	ldr	r2, [r2, #0]
 8019d94:	e7f0      	b.n	8019d78 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8019d96:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019d9a:	4293      	cmp	r3, r2
 8019d9c:	d108      	bne.n	8019db0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8019d9e:	4b09      	ldr	r3, [pc, #36]	; (8019dc4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8019da0:	781b      	ldrb	r3, [r3, #0]
 8019da2:	b91b      	cbnz	r3, 8019dac <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8019da4:	4b08      	ldr	r3, [pc, #32]	; (8019dc8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8019da6:	f9b3 0000 	ldrsh.w	r0, [r3]
 8019daa:	4770      	bx	lr
 8019dac:	4b07      	ldr	r3, [pc, #28]	; (8019dcc <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8019dae:	e7fa      	b.n	8019da6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8019db0:	2000      	movs	r0, #0
 8019db2:	4770      	bx	lr
 8019db4:	200138a4 	.word	0x200138a4
 8019db8:	200138ac 	.word	0x200138ac
 8019dbc:	200138a8 	.word	0x200138a8
 8019dc0:	2001388c 	.word	0x2001388c
 8019dc4:	20013814 	.word	0x20013814
 8019dc8:	20013818 	.word	0x20013818
 8019dcc:	20013816 	.word	0x20013816

08019dd0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8019dd0:	b510      	push	{r4, lr}
 8019dd2:	4a1f      	ldr	r2, [pc, #124]	; (8019e50 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8019dd4:	880b      	ldrh	r3, [r1, #0]
 8019dd6:	8812      	ldrh	r2, [r2, #0]
 8019dd8:	4293      	cmp	r3, r2
 8019dda:	d213      	bcs.n	8019e04 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8019ddc:	4a1d      	ldr	r2, [pc, #116]	; (8019e54 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8019dde:	6812      	ldr	r2, [r2, #0]
 8019de0:	2114      	movs	r1, #20
 8019de2:	fb01 2303 	mla	r3, r1, r3, r2
 8019de6:	8a1a      	ldrh	r2, [r3, #16]
 8019de8:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8019dec:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8019df0:	8a5b      	ldrh	r3, [r3, #18]
 8019df2:	8004      	strh	r4, [r0, #0]
 8019df4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8019df8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8019dfc:	8041      	strh	r1, [r0, #2]
 8019dfe:	8082      	strh	r2, [r0, #4]
 8019e00:	80c3      	strh	r3, [r0, #6]
 8019e02:	e00e      	b.n	8019e22 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8019e04:	4914      	ldr	r1, [pc, #80]	; (8019e58 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8019e06:	8809      	ldrh	r1, [r1, #0]
 8019e08:	4411      	add	r1, r2
 8019e0a:	428b      	cmp	r3, r1
 8019e0c:	da0a      	bge.n	8019e24 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8019e0e:	1a9b      	subs	r3, r3, r2
 8019e10:	4a12      	ldr	r2, [pc, #72]	; (8019e5c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8019e12:	6812      	ldr	r2, [r2, #0]
 8019e14:	210e      	movs	r1, #14
 8019e16:	fb01 2303 	mla	r3, r1, r3, r2
 8019e1a:	681a      	ldr	r2, [r3, #0]
 8019e1c:	6002      	str	r2, [r0, #0]
 8019e1e:	685a      	ldr	r2, [r3, #4]
 8019e20:	6042      	str	r2, [r0, #4]
 8019e22:	bd10      	pop	{r4, pc}
 8019e24:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019e28:	4293      	cmp	r3, r2
 8019e2a:	d10b      	bne.n	8019e44 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8019e2c:	4b0c      	ldr	r3, [pc, #48]	; (8019e60 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8019e2e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8019e32:	4b0c      	ldr	r3, [pc, #48]	; (8019e64 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8019e34:	8081      	strh	r1, [r0, #4]
 8019e36:	f9b3 2000 	ldrsh.w	r2, [r3]
 8019e3a:	80c2      	strh	r2, [r0, #6]
 8019e3c:	2300      	movs	r3, #0
 8019e3e:	8003      	strh	r3, [r0, #0]
 8019e40:	8043      	strh	r3, [r0, #2]
 8019e42:	e7ee      	b.n	8019e22 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8019e44:	2300      	movs	r3, #0
 8019e46:	8003      	strh	r3, [r0, #0]
 8019e48:	8043      	strh	r3, [r0, #2]
 8019e4a:	8083      	strh	r3, [r0, #4]
 8019e4c:	e7d8      	b.n	8019e00 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8019e4e:	bf00      	nop
 8019e50:	200138a4 	.word	0x200138a4
 8019e54:	200138ac 	.word	0x200138ac
 8019e58:	200138a8 	.word	0x200138a8
 8019e5c:	2001388c 	.word	0x2001388c
 8019e60:	20013810 	.word	0x20013810
 8019e64:	20013812 	.word	0x20013812

08019e68 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8019e68:	4a17      	ldr	r2, [pc, #92]	; (8019ec8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8019e6a:	8803      	ldrh	r3, [r0, #0]
 8019e6c:	8812      	ldrh	r2, [r2, #0]
 8019e6e:	4293      	cmp	r3, r2
 8019e70:	d213      	bcs.n	8019e9a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8019e72:	4a16      	ldr	r2, [pc, #88]	; (8019ecc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8019e74:	6812      	ldr	r2, [r2, #0]
 8019e76:	2114      	movs	r1, #20
 8019e78:	fb01 2303 	mla	r3, r1, r3, r2
 8019e7c:	8a1a      	ldrh	r2, [r3, #16]
 8019e7e:	8919      	ldrh	r1, [r3, #8]
 8019e80:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8019e84:	428a      	cmp	r2, r1
 8019e86:	db1d      	blt.n	8019ec4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8019e88:	8a58      	ldrh	r0, [r3, #18]
 8019e8a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8019e8e:	895b      	ldrh	r3, [r3, #10]
 8019e90:	4298      	cmp	r0, r3
 8019e92:	bfac      	ite	ge
 8019e94:	2000      	movge	r0, #0
 8019e96:	2001      	movlt	r0, #1
 8019e98:	4770      	bx	lr
 8019e9a:	490d      	ldr	r1, [pc, #52]	; (8019ed0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8019e9c:	8809      	ldrh	r1, [r1, #0]
 8019e9e:	4411      	add	r1, r2
 8019ea0:	428b      	cmp	r3, r1
 8019ea2:	da0d      	bge.n	8019ec0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8019ea4:	1a9b      	subs	r3, r3, r2
 8019ea6:	4a0b      	ldr	r2, [pc, #44]	; (8019ed4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8019ea8:	6812      	ldr	r2, [r2, #0]
 8019eaa:	210e      	movs	r1, #14
 8019eac:	fb01 2303 	mla	r3, r1, r3, r2
 8019eb0:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8019eb4:	891a      	ldrh	r2, [r3, #8]
 8019eb6:	4291      	cmp	r1, r2
 8019eb8:	db04      	blt.n	8019ec4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8019eba:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8019ebe:	e7e6      	b.n	8019e8e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8019ec0:	2000      	movs	r0, #0
 8019ec2:	4770      	bx	lr
 8019ec4:	2001      	movs	r0, #1
 8019ec6:	4770      	bx	lr
 8019ec8:	200138a4 	.word	0x200138a4
 8019ecc:	200138ac 	.word	0x200138ac
 8019ed0:	200138a8 	.word	0x200138a8
 8019ed4:	2001388c 	.word	0x2001388c

08019ed8 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8019ed8:	4a12      	ldr	r2, [pc, #72]	; (8019f24 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8019eda:	8803      	ldrh	r3, [r0, #0]
 8019edc:	8811      	ldrh	r1, [r2, #0]
 8019ede:	428b      	cmp	r3, r1
 8019ee0:	d20b      	bcs.n	8019efa <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8019ee2:	4a11      	ldr	r2, [pc, #68]	; (8019f28 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8019ee4:	6812      	ldr	r2, [r2, #0]
 8019ee6:	b112      	cbz	r2, 8019eee <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8019ee8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8019eec:	b9c0      	cbnz	r0, 8019f20 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8019eee:	4a0f      	ldr	r2, [pc, #60]	; (8019f2c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8019ef0:	6811      	ldr	r1, [r2, #0]
 8019ef2:	2214      	movs	r2, #20
 8019ef4:	4353      	muls	r3, r2
 8019ef6:	58c8      	ldr	r0, [r1, r3]
 8019ef8:	4770      	bx	lr
 8019efa:	4a0d      	ldr	r2, [pc, #52]	; (8019f30 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8019efc:	8812      	ldrh	r2, [r2, #0]
 8019efe:	440a      	add	r2, r1
 8019f00:	4293      	cmp	r3, r2
 8019f02:	da04      	bge.n	8019f0e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8019f04:	4a08      	ldr	r2, [pc, #32]	; (8019f28 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8019f06:	6812      	ldr	r2, [r2, #0]
 8019f08:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8019f0c:	4770      	bx	lr
 8019f0e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019f12:	4293      	cmp	r3, r2
 8019f14:	d103      	bne.n	8019f1e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8019f16:	4b07      	ldr	r3, [pc, #28]	; (8019f34 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8019f18:	681b      	ldr	r3, [r3, #0]
 8019f1a:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8019f1c:	4770      	bx	lr
 8019f1e:	2000      	movs	r0, #0
 8019f20:	4770      	bx	lr
 8019f22:	bf00      	nop
 8019f24:	200138a4 	.word	0x200138a4
 8019f28:	20013888 	.word	0x20013888
 8019f2c:	200138ac 	.word	0x200138ac
 8019f30:	200138a8 	.word	0x200138a8
 8019f34:	2001381c 	.word	0x2001381c

08019f38 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8019f38:	4b24      	ldr	r3, [pc, #144]	; (8019fcc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8019f3a:	8802      	ldrh	r2, [r0, #0]
 8019f3c:	8818      	ldrh	r0, [r3, #0]
 8019f3e:	4282      	cmp	r2, r0
 8019f40:	d221      	bcs.n	8019f86 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8019f42:	4b23      	ldr	r3, [pc, #140]	; (8019fd0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8019f44:	6819      	ldr	r1, [r3, #0]
 8019f46:	2314      	movs	r3, #20
 8019f48:	fb03 1302 	mla	r3, r3, r2, r1
 8019f4c:	6858      	ldr	r0, [r3, #4]
 8019f4e:	2800      	cmp	r0, #0
 8019f50:	d03a      	beq.n	8019fc8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019f52:	4920      	ldr	r1, [pc, #128]	; (8019fd4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8019f54:	6809      	ldr	r1, [r1, #0]
 8019f56:	2900      	cmp	r1, #0
 8019f58:	d036      	beq.n	8019fc8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019f5a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8019f5e:	2900      	cmp	r1, #0
 8019f60:	d032      	beq.n	8019fc8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019f62:	891a      	ldrh	r2, [r3, #8]
 8019f64:	8958      	ldrh	r0, [r3, #10]
 8019f66:	4350      	muls	r0, r2
 8019f68:	7c5a      	ldrb	r2, [r3, #17]
 8019f6a:	7cdb      	ldrb	r3, [r3, #19]
 8019f6c:	0952      	lsrs	r2, r2, #5
 8019f6e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8019f72:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8019f76:	2b0b      	cmp	r3, #11
 8019f78:	bf18      	it	ne
 8019f7a:	0040      	lslne	r0, r0, #1
 8019f7c:	3003      	adds	r0, #3
 8019f7e:	f020 0003 	bic.w	r0, r0, #3
 8019f82:	4408      	add	r0, r1
 8019f84:	4770      	bx	lr
 8019f86:	4b14      	ldr	r3, [pc, #80]	; (8019fd8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8019f88:	881b      	ldrh	r3, [r3, #0]
 8019f8a:	4403      	add	r3, r0
 8019f8c:	429a      	cmp	r2, r3
 8019f8e:	da1a      	bge.n	8019fc6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8019f90:	4b12      	ldr	r3, [pc, #72]	; (8019fdc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8019f92:	681b      	ldr	r3, [r3, #0]
 8019f94:	1a10      	subs	r0, r2, r0
 8019f96:	210e      	movs	r1, #14
 8019f98:	fb01 3000 	mla	r0, r1, r0, r3
 8019f9c:	7b03      	ldrb	r3, [r0, #12]
 8019f9e:	f003 031f 	and.w	r3, r3, #31
 8019fa2:	2b0b      	cmp	r3, #11
 8019fa4:	d10b      	bne.n	8019fbe <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8019fa6:	8903      	ldrh	r3, [r0, #8]
 8019fa8:	8940      	ldrh	r0, [r0, #10]
 8019faa:	4358      	muls	r0, r3
 8019fac:	4b09      	ldr	r3, [pc, #36]	; (8019fd4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8019fae:	6819      	ldr	r1, [r3, #0]
 8019fb0:	3003      	adds	r0, #3
 8019fb2:	f020 0303 	bic.w	r3, r0, #3
 8019fb6:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8019fba:	4418      	add	r0, r3
 8019fbc:	4770      	bx	lr
 8019fbe:	2b0d      	cmp	r3, #13
 8019fc0:	d101      	bne.n	8019fc6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8019fc2:	300d      	adds	r0, #13
 8019fc4:	4770      	bx	lr
 8019fc6:	2000      	movs	r0, #0
 8019fc8:	4770      	bx	lr
 8019fca:	bf00      	nop
 8019fcc:	200138a4 	.word	0x200138a4
 8019fd0:	200138ac 	.word	0x200138ac
 8019fd4:	20013888 	.word	0x20013888
 8019fd8:	200138a8 	.word	0x200138a8
 8019fdc:	2001388c 	.word	0x2001388c

08019fe0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8019fe0:	b510      	push	{r4, lr}
 8019fe2:	4a17      	ldr	r2, [pc, #92]	; (801a040 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8019fe4:	8803      	ldrh	r3, [r0, #0]
 8019fe6:	8812      	ldrh	r2, [r2, #0]
 8019fe8:	4293      	cmp	r3, r2
 8019fea:	d20c      	bcs.n	801a006 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8019fec:	4a15      	ldr	r2, [pc, #84]	; (801a044 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8019fee:	6812      	ldr	r2, [r2, #0]
 8019ff0:	2114      	movs	r1, #20
 8019ff2:	fb01 2303 	mla	r3, r1, r3, r2
 8019ff6:	7c58      	ldrb	r0, [r3, #17]
 8019ff8:	0942      	lsrs	r2, r0, #5
 8019ffa:	7cd8      	ldrb	r0, [r3, #19]
 8019ffc:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801a000:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801a004:	bd10      	pop	{r4, pc}
 801a006:	4910      	ldr	r1, [pc, #64]	; (801a048 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801a008:	8809      	ldrh	r1, [r1, #0]
 801a00a:	4411      	add	r1, r2
 801a00c:	428b      	cmp	r3, r1
 801a00e:	da09      	bge.n	801a024 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801a010:	1a9b      	subs	r3, r3, r2
 801a012:	4a0e      	ldr	r2, [pc, #56]	; (801a04c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801a014:	6812      	ldr	r2, [r2, #0]
 801a016:	210e      	movs	r1, #14
 801a018:	fb01 2303 	mla	r3, r1, r3, r2
 801a01c:	7b18      	ldrb	r0, [r3, #12]
 801a01e:	f000 001f 	and.w	r0, r0, #31
 801a022:	e7ef      	b.n	801a004 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801a024:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a028:	4293      	cmp	r3, r2
 801a02a:	d106      	bne.n	801a03a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801a02c:	f7ea fa52 	bl	80044d4 <_ZN8touchgfx3HAL3lcdEv>
 801a030:	6803      	ldr	r3, [r0, #0]
 801a032:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a036:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a038:	4718      	bx	r3
 801a03a:	2000      	movs	r0, #0
 801a03c:	e7e2      	b.n	801a004 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801a03e:	bf00      	nop
 801a040:	200138a4 	.word	0x200138a4
 801a044:	200138ac 	.word	0x200138ac
 801a048:	200138a8 	.word	0x200138a8
 801a04c:	2001388c 	.word	0x2001388c

0801a050 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801a050:	2010      	movs	r0, #16
 801a052:	4770      	bx	lr

0801a054 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801a054:	2000      	movs	r0, #0
 801a056:	4770      	bx	lr

0801a058 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801a058:	4b02      	ldr	r3, [pc, #8]	; (801a064 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801a05a:	8818      	ldrh	r0, [r3, #0]
 801a05c:	0040      	lsls	r0, r0, #1
 801a05e:	b280      	uxth	r0, r0
 801a060:	4770      	bx	lr
 801a062:	bf00      	nop
 801a064:	20013816 	.word	0x20013816

0801a068 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801a068:	2bff      	cmp	r3, #255	; 0xff
 801a06a:	d050      	beq.n	801a10e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801a06c:	2a0b      	cmp	r2, #11
 801a06e:	d04a      	beq.n	801a106 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801a070:	d80e      	bhi.n	801a090 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801a072:	2a03      	cmp	r2, #3
 801a074:	d03f      	beq.n	801a0f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801a076:	d804      	bhi.n	801a082 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801a078:	2a01      	cmp	r2, #1
 801a07a:	d03e      	beq.n	801a0fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801a07c:	d93f      	bls.n	801a0fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801a07e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801a080:	4770      	bx	lr
 801a082:	2a09      	cmp	r2, #9
 801a084:	d03f      	beq.n	801a106 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801a086:	d83c      	bhi.n	801a102 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801a088:	2a08      	cmp	r2, #8
 801a08a:	d03a      	beq.n	801a102 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801a08c:	2000      	movs	r0, #0
 801a08e:	4770      	bx	lr
 801a090:	2a2f      	cmp	r2, #47	; 0x2f
 801a092:	d024      	beq.n	801a0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801a094:	d80d      	bhi.n	801a0b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801a096:	2a2d      	cmp	r2, #45	; 0x2d
 801a098:	d014      	beq.n	801a0c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801a09a:	d826      	bhi.n	801a0ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801a09c:	2a2c      	cmp	r2, #44	; 0x2c
 801a09e:	d1f5      	bne.n	801a08c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a0a0:	684b      	ldr	r3, [r1, #4]
 801a0a2:	781b      	ldrb	r3, [r3, #0]
 801a0a4:	2b01      	cmp	r3, #1
 801a0a6:	d018      	beq.n	801a0da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801a0a8:	d323      	bcc.n	801a0f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801a0aa:	2b02      	cmp	r3, #2
 801a0ac:	d1ee      	bne.n	801a08c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a0ae:	6880      	ldr	r0, [r0, #8]
 801a0b0:	4770      	bx	lr
 801a0b2:	2a31      	cmp	r2, #49	; 0x31
 801a0b4:	d004      	beq.n	801a0c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801a0b6:	d328      	bcc.n	801a10a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801a0b8:	2a32      	cmp	r2, #50	; 0x32
 801a0ba:	d026      	beq.n	801a10a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801a0bc:	2a33      	cmp	r2, #51	; 0x33
 801a0be:	d1e5      	bne.n	801a08c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a0c0:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801a0c2:	4770      	bx	lr
 801a0c4:	684b      	ldr	r3, [r1, #4]
 801a0c6:	781b      	ldrb	r3, [r3, #0]
 801a0c8:	2b01      	cmp	r3, #1
 801a0ca:	d004      	beq.n	801a0d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801a0cc:	d30b      	bcc.n	801a0e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a0ce:	2b02      	cmp	r3, #2
 801a0d0:	d1dc      	bne.n	801a08c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a0d2:	6900      	ldr	r0, [r0, #16]
 801a0d4:	4770      	bx	lr
 801a0d6:	6a00      	ldr	r0, [r0, #32]
 801a0d8:	4770      	bx	lr
 801a0da:	6980      	ldr	r0, [r0, #24]
 801a0dc:	4770      	bx	lr
 801a0de:	684b      	ldr	r3, [r1, #4]
 801a0e0:	781b      	ldrb	r3, [r3, #0]
 801a0e2:	2b00      	cmp	r3, #0
 801a0e4:	d1d2      	bne.n	801a08c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a0e6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801a0e8:	4770      	bx	lr
 801a0ea:	684b      	ldr	r3, [r1, #4]
 801a0ec:	781b      	ldrb	r3, [r3, #0]
 801a0ee:	2b00      	cmp	r3, #0
 801a0f0:	d1cc      	bne.n	801a08c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a0f2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801a0f4:	4770      	bx	lr
 801a0f6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801a0f8:	4770      	bx	lr
 801a0fa:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801a0fc:	4770      	bx	lr
 801a0fe:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801a100:	4770      	bx	lr
 801a102:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801a104:	4770      	bx	lr
 801a106:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801a108:	4770      	bx	lr
 801a10a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801a10c:	4770      	bx	lr
 801a10e:	2a0b      	cmp	r2, #11
 801a110:	d049      	beq.n	801a1a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801a112:	d80e      	bhi.n	801a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801a114:	2a03      	cmp	r2, #3
 801a116:	d040      	beq.n	801a19a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801a118:	d804      	bhi.n	801a124 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801a11a:	2a01      	cmp	r2, #1
 801a11c:	d03f      	beq.n	801a19e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801a11e:	d940      	bls.n	801a1a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801a120:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801a122:	4770      	bx	lr
 801a124:	2a09      	cmp	r2, #9
 801a126:	d03e      	beq.n	801a1a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801a128:	d801      	bhi.n	801a12e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801a12a:	2a08      	cmp	r2, #8
 801a12c:	d1ae      	bne.n	801a08c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a12e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801a130:	4770      	bx	lr
 801a132:	2a2f      	cmp	r2, #47	; 0x2f
 801a134:	d024      	beq.n	801a180 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801a136:	d80d      	bhi.n	801a154 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801a138:	2a2d      	cmp	r2, #45	; 0x2d
 801a13a:	d014      	beq.n	801a166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801a13c:	d826      	bhi.n	801a18c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801a13e:	2a2c      	cmp	r2, #44	; 0x2c
 801a140:	d1a4      	bne.n	801a08c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a142:	684b      	ldr	r3, [r1, #4]
 801a144:	781b      	ldrb	r3, [r3, #0]
 801a146:	2b01      	cmp	r3, #1
 801a148:	d018      	beq.n	801a17c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801a14a:	d324      	bcc.n	801a196 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801a14c:	2b02      	cmp	r3, #2
 801a14e:	d19d      	bne.n	801a08c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a150:	68c0      	ldr	r0, [r0, #12]
 801a152:	4770      	bx	lr
 801a154:	2a31      	cmp	r2, #49	; 0x31
 801a156:	d004      	beq.n	801a162 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801a158:	d327      	bcc.n	801a1aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801a15a:	2a32      	cmp	r2, #50	; 0x32
 801a15c:	d025      	beq.n	801a1aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801a15e:	2a33      	cmp	r2, #51	; 0x33
 801a160:	d194      	bne.n	801a08c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a162:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801a164:	4770      	bx	lr
 801a166:	684b      	ldr	r3, [r1, #4]
 801a168:	781b      	ldrb	r3, [r3, #0]
 801a16a:	2b01      	cmp	r3, #1
 801a16c:	d004      	beq.n	801a178 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801a16e:	d30b      	bcc.n	801a188 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801a170:	2b02      	cmp	r3, #2
 801a172:	d18b      	bne.n	801a08c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a174:	6940      	ldr	r0, [r0, #20]
 801a176:	4770      	bx	lr
 801a178:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801a17a:	4770      	bx	lr
 801a17c:	69c0      	ldr	r0, [r0, #28]
 801a17e:	4770      	bx	lr
 801a180:	684b      	ldr	r3, [r1, #4]
 801a182:	781b      	ldrb	r3, [r3, #0]
 801a184:	2b00      	cmp	r3, #0
 801a186:	d181      	bne.n	801a08c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a188:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801a18a:	4770      	bx	lr
 801a18c:	684b      	ldr	r3, [r1, #4]
 801a18e:	781b      	ldrb	r3, [r3, #0]
 801a190:	2b00      	cmp	r3, #0
 801a192:	f47f af7b 	bne.w	801a08c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a196:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801a198:	4770      	bx	lr
 801a19a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801a19c:	4770      	bx	lr
 801a19e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801a1a0:	4770      	bx	lr
 801a1a2:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801a1a4:	4770      	bx	lr
 801a1a6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801a1a8:	4770      	bx	lr
 801a1aa:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801a1ac:	4770      	bx	lr

0801a1ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a1ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a1b2:	b087      	sub	sp, #28
 801a1b4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a1b6:	9205      	str	r2, [sp, #20]
 801a1b8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a1bc:	9202      	str	r2, [sp, #8]
 801a1be:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a1c2:	9101      	str	r1, [sp, #4]
 801a1c4:	6841      	ldr	r1, [r0, #4]
 801a1c6:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801a1ca:	fb01 2404 	mla	r4, r1, r4, r2
 801a1ce:	6802      	ldr	r2, [r0, #0]
 801a1d0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a1d4:	f8de 2000 	ldr.w	r2, [lr]
 801a1d8:	9203      	str	r2, [sp, #12]
 801a1da:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a1de:	3204      	adds	r2, #4
 801a1e0:	9204      	str	r2, [sp, #16]
 801a1e2:	9a02      	ldr	r2, [sp, #8]
 801a1e4:	43d6      	mvns	r6, r2
 801a1e6:	b2f6      	uxtb	r6, r6
 801a1e8:	9a01      	ldr	r2, [sp, #4]
 801a1ea:	2a00      	cmp	r2, #0
 801a1ec:	dc03      	bgt.n	801a1f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a1ee:	9a05      	ldr	r2, [sp, #20]
 801a1f0:	2a00      	cmp	r2, #0
 801a1f2:	f340 8129 	ble.w	801a448 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801a1f6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a1f8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801a1fc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801a200:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a204:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a206:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a20a:	2b00      	cmp	r3, #0
 801a20c:	dd0e      	ble.n	801a22c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a20e:	1408      	asrs	r0, r1, #16
 801a210:	d405      	bmi.n	801a21e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a212:	4560      	cmp	r0, ip
 801a214:	da03      	bge.n	801a21e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a216:	1410      	asrs	r0, r2, #16
 801a218:	d401      	bmi.n	801a21e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a21a:	42b8      	cmp	r0, r7
 801a21c:	db07      	blt.n	801a22e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a21e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a220:	4401      	add	r1, r0
 801a222:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a224:	3b01      	subs	r3, #1
 801a226:	4402      	add	r2, r0
 801a228:	3402      	adds	r4, #2
 801a22a:	e7ee      	b.n	801a20a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801a22c:	d071      	beq.n	801a312 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a22e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a230:	1e58      	subs	r0, r3, #1
 801a232:	fb05 1500 	mla	r5, r5, r0, r1
 801a236:	142d      	asrs	r5, r5, #16
 801a238:	d45f      	bmi.n	801a2fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801a23a:	4565      	cmp	r5, ip
 801a23c:	da5d      	bge.n	801a2fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801a23e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a240:	fb05 2000 	mla	r0, r5, r0, r2
 801a244:	1400      	asrs	r0, r0, #16
 801a246:	d458      	bmi.n	801a2fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801a248:	42b8      	cmp	r0, r7
 801a24a:	da56      	bge.n	801a2fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801a24c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801a250:	4699      	mov	r9, r3
 801a252:	46a2      	mov	sl, r4
 801a254:	f1b9 0f00 	cmp.w	r9, #0
 801a258:	dd57      	ble.n	801a30a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801a25a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a25e:	9803      	ldr	r0, [sp, #12]
 801a260:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801a264:	140d      	asrs	r5, r1, #16
 801a266:	fb07 000c 	mla	r0, r7, ip, r0
 801a26a:	f109 39ff 	add.w	r9, r9, #4294967295
 801a26e:	5d40      	ldrb	r0, [r0, r5]
 801a270:	9d04      	ldr	r5, [sp, #16]
 801a272:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801a276:	f8ba 5000 	ldrh.w	r5, [sl]
 801a27a:	122f      	asrs	r7, r5, #8
 801a27c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a280:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a284:	fb17 f706 	smulbb	r7, r7, r6
 801a288:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801a28c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a290:	00ed      	lsls	r5, r5, #3
 801a292:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801a296:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801a29a:	10c7      	asrs	r7, r0, #3
 801a29c:	b2ed      	uxtb	r5, r5
 801a29e:	00c0      	lsls	r0, r0, #3
 801a2a0:	fb18 f806 	smulbb	r8, r8, r6
 801a2a4:	fb15 f506 	smulbb	r5, r5, r6
 801a2a8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a2ac:	b2c0      	uxtb	r0, r0
 801a2ae:	fa1f fc8c 	uxth.w	ip, ip
 801a2b2:	fb07 870b 	mla	r7, r7, fp, r8
 801a2b6:	fb00 500b 	mla	r0, r0, fp, r5
 801a2ba:	b280      	uxth	r0, r0
 801a2bc:	b2bf      	uxth	r7, r7
 801a2be:	f10c 0501 	add.w	r5, ip, #1
 801a2c2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a2c6:	f107 0801 	add.w	r8, r7, #1
 801a2ca:	1c45      	adds	r5, r0, #1
 801a2cc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a2d0:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801a2d4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a2d6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a2da:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a2de:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801a2e2:	ea45 0c0c 	orr.w	ip, r5, ip
 801a2e6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801a2ea:	4401      	add	r1, r0
 801a2ec:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a2ee:	ea4c 0c08 	orr.w	ip, ip, r8
 801a2f2:	f82a cb02 	strh.w	ip, [sl], #2
 801a2f6:	4402      	add	r2, r0
 801a2f8:	e7ac      	b.n	801a254 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a2fa:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801a2fe:	f04f 0800 	mov.w	r8, #0
 801a302:	eb03 0008 	add.w	r0, r3, r8
 801a306:	2800      	cmp	r0, #0
 801a308:	dc41      	bgt.n	801a38e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801a30a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a30e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a312:	9b01      	ldr	r3, [sp, #4]
 801a314:	2b00      	cmp	r3, #0
 801a316:	f340 8097 	ble.w	801a448 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801a31a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a31e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a322:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a326:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a328:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a32c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a330:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a334:	eef0 6a62 	vmov.f32	s13, s5
 801a338:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a33c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a340:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a344:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801a348:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a34c:	eef0 6a43 	vmov.f32	s13, s6
 801a350:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a354:	ee12 2a90 	vmov	r2, s5
 801a358:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a35c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a360:	ee13 2a10 	vmov	r2, s6
 801a364:	9313      	str	r3, [sp, #76]	; 0x4c
 801a366:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a368:	fb92 f3f3 	sdiv	r3, r2, r3
 801a36c:	9314      	str	r3, [sp, #80]	; 0x50
 801a36e:	9b01      	ldr	r3, [sp, #4]
 801a370:	9a05      	ldr	r2, [sp, #20]
 801a372:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a376:	3b01      	subs	r3, #1
 801a378:	9301      	str	r3, [sp, #4]
 801a37a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801a37e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a380:	eeb0 3a67 	vmov.f32	s6, s15
 801a384:	bf08      	it	eq
 801a386:	4613      	moveq	r3, r2
 801a388:	eef0 2a47 	vmov.f32	s5, s14
 801a38c:	e72c      	b.n	801a1e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801a38e:	140f      	asrs	r7, r1, #16
 801a390:	d453      	bmi.n	801a43a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a392:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a396:	42bd      	cmp	r5, r7
 801a398:	dd4f      	ble.n	801a43a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a39a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a39e:	d44c      	bmi.n	801a43a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a3a0:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a3a4:	4560      	cmp	r0, ip
 801a3a6:	dd48      	ble.n	801a43a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a3a8:	9803      	ldr	r0, [sp, #12]
 801a3aa:	b22d      	sxth	r5, r5
 801a3ac:	fb0c 0505 	mla	r5, ip, r5, r0
 801a3b0:	5de8      	ldrb	r0, [r5, r7]
 801a3b2:	9d04      	ldr	r5, [sp, #16]
 801a3b4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801a3b8:	f06f 0501 	mvn.w	r5, #1
 801a3bc:	fb05 fb08 	mul.w	fp, r5, r8
 801a3c0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a3c4:	f834 500b 	ldrh.w	r5, [r4, fp]
 801a3c8:	122f      	asrs	r7, r5, #8
 801a3ca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a3ce:	fb17 f706 	smulbb	r7, r7, r6
 801a3d2:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801a3d6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a3da:	00ed      	lsls	r5, r5, #3
 801a3dc:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801a3e0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801a3e4:	10c7      	asrs	r7, r0, #3
 801a3e6:	b2ed      	uxtb	r5, r5
 801a3e8:	00c0      	lsls	r0, r0, #3
 801a3ea:	fb19 f906 	smulbb	r9, r9, r6
 801a3ee:	fb15 f506 	smulbb	r5, r5, r6
 801a3f2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a3f6:	b2c0      	uxtb	r0, r0
 801a3f8:	fa1f fc8c 	uxth.w	ip, ip
 801a3fc:	fb07 970a 	mla	r7, r7, sl, r9
 801a400:	fb00 500a 	mla	r0, r0, sl, r5
 801a404:	b2bf      	uxth	r7, r7
 801a406:	b280      	uxth	r0, r0
 801a408:	f10c 0501 	add.w	r5, ip, #1
 801a40c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a410:	f107 0901 	add.w	r9, r7, #1
 801a414:	1c45      	adds	r5, r0, #1
 801a416:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a41a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801a41e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a422:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a426:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a42a:	ea45 0c0c 	orr.w	ip, r5, ip
 801a42e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a432:	ea4c 0c09 	orr.w	ip, ip, r9
 801a436:	f824 c00b 	strh.w	ip, [r4, fp]
 801a43a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a43c:	4401      	add	r1, r0
 801a43e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a440:	f108 38ff 	add.w	r8, r8, #4294967295
 801a444:	4402      	add	r2, r0
 801a446:	e75c      	b.n	801a302 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801a448:	b007      	add	sp, #28
 801a44a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a44e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a44e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a452:	b085      	sub	sp, #20
 801a454:	4693      	mov	fp, r2
 801a456:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a458:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a45a:	6870      	ldr	r0, [r6, #4]
 801a45c:	9100      	str	r1, [sp, #0]
 801a45e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a462:	fb00 2404 	mla	r4, r0, r4, r2
 801a466:	6832      	ldr	r2, [r6, #0]
 801a468:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a46c:	682a      	ldr	r2, [r5, #0]
 801a46e:	9201      	str	r2, [sp, #4]
 801a470:	686a      	ldr	r2, [r5, #4]
 801a472:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801a476:	3204      	adds	r2, #4
 801a478:	9202      	str	r2, [sp, #8]
 801a47a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a47e:	9a00      	ldr	r2, [sp, #0]
 801a480:	2a00      	cmp	r2, #0
 801a482:	dc03      	bgt.n	801a48c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a484:	f1bb 0f00 	cmp.w	fp, #0
 801a488:	f340 80a0 	ble.w	801a5cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801a48c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a48e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a492:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a496:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a49a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a49c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a4a0:	2b00      	cmp	r3, #0
 801a4a2:	dd0c      	ble.n	801a4be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a4a4:	1406      	asrs	r6, r0, #16
 801a4a6:	d405      	bmi.n	801a4b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a4a8:	454e      	cmp	r6, r9
 801a4aa:	da03      	bge.n	801a4b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a4ac:	1416      	asrs	r6, r2, #16
 801a4ae:	d401      	bmi.n	801a4b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a4b0:	4546      	cmp	r6, r8
 801a4b2:	db05      	blt.n	801a4c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a4b4:	4470      	add	r0, lr
 801a4b6:	4462      	add	r2, ip
 801a4b8:	3b01      	subs	r3, #1
 801a4ba:	3402      	adds	r4, #2
 801a4bc:	e7f0      	b.n	801a4a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a4be:	d00f      	beq.n	801a4e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a4c0:	1e5e      	subs	r6, r3, #1
 801a4c2:	fb0e 0706 	mla	r7, lr, r6, r0
 801a4c6:	143f      	asrs	r7, r7, #16
 801a4c8:	d541      	bpl.n	801a54e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801a4ca:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801a4ce:	4698      	mov	r8, r3
 801a4d0:	9603      	str	r6, [sp, #12]
 801a4d2:	f1b8 0f00 	cmp.w	r8, #0
 801a4d6:	dc59      	bgt.n	801a58c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a4d8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a4dc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a4e0:	9b00      	ldr	r3, [sp, #0]
 801a4e2:	2b00      	cmp	r3, #0
 801a4e4:	dd72      	ble.n	801a5cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801a4e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a4ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a4ee:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a4f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a4f4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a4f8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a4fc:	eeb0 6a62 	vmov.f32	s12, s5
 801a500:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a504:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a508:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a50c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a510:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a514:	eeb0 6a43 	vmov.f32	s12, s6
 801a518:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a51c:	ee12 2a90 	vmov	r2, s5
 801a520:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a524:	fb92 fef3 	sdiv	lr, r2, r3
 801a528:	ee13 2a10 	vmov	r2, s6
 801a52c:	fb92 fcf3 	sdiv	ip, r2, r3
 801a530:	9b00      	ldr	r3, [sp, #0]
 801a532:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a536:	3b01      	subs	r3, #1
 801a538:	9300      	str	r3, [sp, #0]
 801a53a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a53e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a540:	eeb0 3a67 	vmov.f32	s6, s15
 801a544:	bf08      	it	eq
 801a546:	465b      	moveq	r3, fp
 801a548:	eef0 2a47 	vmov.f32	s5, s14
 801a54c:	e797      	b.n	801a47e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a54e:	454f      	cmp	r7, r9
 801a550:	dabb      	bge.n	801a4ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a552:	fb0c 2606 	mla	r6, ip, r6, r2
 801a556:	1436      	asrs	r6, r6, #16
 801a558:	d4b7      	bmi.n	801a4ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a55a:	4546      	cmp	r6, r8
 801a55c:	dab5      	bge.n	801a4ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a55e:	461e      	mov	r6, r3
 801a560:	46a0      	mov	r8, r4
 801a562:	2e00      	cmp	r6, #0
 801a564:	ddb8      	ble.n	801a4d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a566:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801a56a:	9901      	ldr	r1, [sp, #4]
 801a56c:	1417      	asrs	r7, r2, #16
 801a56e:	ea4f 4920 	mov.w	r9, r0, asr #16
 801a572:	fb0a 1707 	mla	r7, sl, r7, r1
 801a576:	9902      	ldr	r1, [sp, #8]
 801a578:	f817 7009 	ldrb.w	r7, [r7, r9]
 801a57c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801a580:	f828 7b02 	strh.w	r7, [r8], #2
 801a584:	4470      	add	r0, lr
 801a586:	4462      	add	r2, ip
 801a588:	3e01      	subs	r6, #1
 801a58a:	e7ea      	b.n	801a562 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801a58c:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a590:	d417      	bmi.n	801a5c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a592:	68ae      	ldr	r6, [r5, #8]
 801a594:	454e      	cmp	r6, r9
 801a596:	dd14      	ble.n	801a5c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a598:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801a59c:	d411      	bmi.n	801a5c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a59e:	68ef      	ldr	r7, [r5, #12]
 801a5a0:	4557      	cmp	r7, sl
 801a5a2:	dd0e      	ble.n	801a5c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a5a4:	9f01      	ldr	r7, [sp, #4]
 801a5a6:	b236      	sxth	r6, r6
 801a5a8:	fb0a 7606 	mla	r6, sl, r6, r7
 801a5ac:	9f02      	ldr	r7, [sp, #8]
 801a5ae:	f816 6009 	ldrb.w	r6, [r6, r9]
 801a5b2:	f06f 0101 	mvn.w	r1, #1
 801a5b6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801a5ba:	fb01 f608 	mul.w	r6, r1, r8
 801a5be:	9903      	ldr	r1, [sp, #12]
 801a5c0:	538f      	strh	r7, [r1, r6]
 801a5c2:	4470      	add	r0, lr
 801a5c4:	4462      	add	r2, ip
 801a5c6:	f108 38ff 	add.w	r8, r8, #4294967295
 801a5ca:	e782      	b.n	801a4d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a5cc:	b005      	add	sp, #20
 801a5ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a5d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a5d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a5d6:	b087      	sub	sp, #28
 801a5d8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a5da:	9205      	str	r2, [sp, #20]
 801a5dc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a5e0:	9203      	str	r2, [sp, #12]
 801a5e2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801a5e6:	9102      	str	r1, [sp, #8]
 801a5e8:	6861      	ldr	r1, [r4, #4]
 801a5ea:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801a5ee:	fb01 2000 	mla	r0, r1, r0, r2
 801a5f2:	6822      	ldr	r2, [r4, #0]
 801a5f4:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801a5f8:	9200      	str	r2, [sp, #0]
 801a5fa:	f8dc 2000 	ldr.w	r2, [ip]
 801a5fe:	9204      	str	r2, [sp, #16]
 801a600:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801a604:	3204      	adds	r2, #4
 801a606:	9201      	str	r2, [sp, #4]
 801a608:	9a03      	ldr	r2, [sp, #12]
 801a60a:	43d5      	mvns	r5, r2
 801a60c:	b2ed      	uxtb	r5, r5
 801a60e:	9a02      	ldr	r2, [sp, #8]
 801a610:	2a00      	cmp	r2, #0
 801a612:	dc03      	bgt.n	801a61c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a614:	9a05      	ldr	r2, [sp, #20]
 801a616:	2a00      	cmp	r2, #0
 801a618:	f340 812c 	ble.w	801a874 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a61c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a61e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801a622:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801a626:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a62a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a62c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a630:	2b00      	cmp	r3, #0
 801a632:	dd10      	ble.n	801a656 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a634:	140c      	asrs	r4, r1, #16
 801a636:	d405      	bmi.n	801a644 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a638:	4574      	cmp	r4, lr
 801a63a:	da03      	bge.n	801a644 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a63c:	1414      	asrs	r4, r2, #16
 801a63e:	d401      	bmi.n	801a644 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a640:	42bc      	cmp	r4, r7
 801a642:	db09      	blt.n	801a658 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a644:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a646:	9800      	ldr	r0, [sp, #0]
 801a648:	4421      	add	r1, r4
 801a64a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a64c:	3002      	adds	r0, #2
 801a64e:	4422      	add	r2, r4
 801a650:	3b01      	subs	r3, #1
 801a652:	9000      	str	r0, [sp, #0]
 801a654:	e7ec      	b.n	801a630 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a656:	d071      	beq.n	801a73c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801a658:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a65a:	1e5c      	subs	r4, r3, #1
 801a65c:	fb06 1604 	mla	r6, r6, r4, r1
 801a660:	1436      	asrs	r6, r6, #16
 801a662:	d45d      	bmi.n	801a720 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a664:	4576      	cmp	r6, lr
 801a666:	da5b      	bge.n	801a720 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a668:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801a66a:	fb06 2404 	mla	r4, r6, r4, r2
 801a66e:	1424      	asrs	r4, r4, #16
 801a670:	d456      	bmi.n	801a720 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a672:	42bc      	cmp	r4, r7
 801a674:	da54      	bge.n	801a720 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a676:	f8dd 9000 	ldr.w	r9, [sp]
 801a67a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801a67e:	4698      	mov	r8, r3
 801a680:	f1b8 0f00 	cmp.w	r8, #0
 801a684:	dd54      	ble.n	801a730 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801a686:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a68a:	9804      	ldr	r0, [sp, #16]
 801a68c:	1414      	asrs	r4, r2, #16
 801a68e:	fb07 0404 	mla	r4, r7, r4, r0
 801a692:	140e      	asrs	r6, r1, #16
 801a694:	9801      	ldr	r0, [sp, #4]
 801a696:	f814 e006 	ldrb.w	lr, [r4, r6]
 801a69a:	f8b9 4000 	ldrh.w	r4, [r9]
 801a69e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a6a2:	eb00 0b0e 	add.w	fp, r0, lr
 801a6a6:	1227      	asrs	r7, r4, #8
 801a6a8:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801a6ac:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a6b0:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801a6b4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a6b6:	fb16 f60a 	smulbb	r6, r6, sl
 801a6ba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a6be:	fb07 6705 	mla	r7, r7, r5, r6
 801a6c2:	10e6      	asrs	r6, r4, #3
 801a6c4:	00e4      	lsls	r4, r4, #3
 801a6c6:	b2e4      	uxtb	r4, r4
 801a6c8:	fb1b fb0a 	smulbb	fp, fp, sl
 801a6cc:	fb14 f405 	smulbb	r4, r4, r5
 801a6d0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a6d4:	b2bf      	uxth	r7, r7
 801a6d6:	fb06 b605 	mla	r6, r6, r5, fp
 801a6da:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801a6de:	b2b6      	uxth	r6, r6
 801a6e0:	fa1f fe8e 	uxth.w	lr, lr
 801a6e4:	1c7c      	adds	r4, r7, #1
 801a6e6:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801a6ea:	f106 0b01 	add.w	fp, r6, #1
 801a6ee:	f10e 0401 	add.w	r4, lr, #1
 801a6f2:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801a6f6:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801a6fa:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a6fe:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801a702:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801a706:	4327      	orrs	r7, r4
 801a708:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a70c:	4401      	add	r1, r0
 801a70e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a710:	ea47 070b 	orr.w	r7, r7, fp
 801a714:	f829 7b02 	strh.w	r7, [r9], #2
 801a718:	4402      	add	r2, r0
 801a71a:	f108 38ff 	add.w	r8, r8, #4294967295
 801a71e:	e7af      	b.n	801a680 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801a720:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801a724:	f04f 0e00 	mov.w	lr, #0
 801a728:	eb03 040e 	add.w	r4, r3, lr
 801a72c:	2c00      	cmp	r4, #0
 801a72e:	dc43      	bgt.n	801a7b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801a730:	9a00      	ldr	r2, [sp, #0]
 801a732:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a736:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a73a:	9300      	str	r3, [sp, #0]
 801a73c:	9b02      	ldr	r3, [sp, #8]
 801a73e:	2b00      	cmp	r3, #0
 801a740:	f340 8098 	ble.w	801a874 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a744:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a748:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a74c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a750:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a752:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a756:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a75a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a75e:	eef0 6a62 	vmov.f32	s13, s5
 801a762:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a766:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a76a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a76e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801a772:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a776:	eef0 6a43 	vmov.f32	s13, s6
 801a77a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a77e:	ee12 2a90 	vmov	r2, s5
 801a782:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a786:	fb92 f3f3 	sdiv	r3, r2, r3
 801a78a:	ee13 2a10 	vmov	r2, s6
 801a78e:	9313      	str	r3, [sp, #76]	; 0x4c
 801a790:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a792:	fb92 f3f3 	sdiv	r3, r2, r3
 801a796:	9314      	str	r3, [sp, #80]	; 0x50
 801a798:	9b02      	ldr	r3, [sp, #8]
 801a79a:	9a05      	ldr	r2, [sp, #20]
 801a79c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a7a0:	3b01      	subs	r3, #1
 801a7a2:	9302      	str	r3, [sp, #8]
 801a7a4:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801a7a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a7aa:	eeb0 3a67 	vmov.f32	s6, s15
 801a7ae:	bf08      	it	eq
 801a7b0:	4613      	moveq	r3, r2
 801a7b2:	eef0 2a47 	vmov.f32	s5, s14
 801a7b6:	e72a      	b.n	801a60e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a7b8:	140f      	asrs	r7, r1, #16
 801a7ba:	d454      	bmi.n	801a866 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a7bc:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801a7c0:	42be      	cmp	r6, r7
 801a7c2:	dd50      	ble.n	801a866 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a7c4:	ea5f 4822 	movs.w	r8, r2, asr #16
 801a7c8:	d44d      	bmi.n	801a866 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a7ca:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801a7ce:	4544      	cmp	r4, r8
 801a7d0:	dd49      	ble.n	801a866 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a7d2:	9c04      	ldr	r4, [sp, #16]
 801a7d4:	b236      	sxth	r6, r6
 801a7d6:	fb08 4606 	mla	r6, r8, r6, r4
 801a7da:	f06f 0001 	mvn.w	r0, #1
 801a7de:	f816 8007 	ldrb.w	r8, [r6, r7]
 801a7e2:	9c01      	ldr	r4, [sp, #4]
 801a7e4:	fb00 fa0e 	mul.w	sl, r0, lr
 801a7e8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a7ec:	9800      	ldr	r0, [sp, #0]
 801a7ee:	eb04 0b08 	add.w	fp, r4, r8
 801a7f2:	f830 400a 	ldrh.w	r4, [r0, sl]
 801a7f6:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801a7fa:	9801      	ldr	r0, [sp, #4]
 801a7fc:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a800:	f810 8008 	ldrb.w	r8, [r0, r8]
 801a804:	9800      	ldr	r0, [sp, #0]
 801a806:	1227      	asrs	r7, r4, #8
 801a808:	fb16 f609 	smulbb	r6, r6, r9
 801a80c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a810:	fb07 6705 	mla	r7, r7, r5, r6
 801a814:	10e6      	asrs	r6, r4, #3
 801a816:	00e4      	lsls	r4, r4, #3
 801a818:	b2e4      	uxtb	r4, r4
 801a81a:	fb1b fb09 	smulbb	fp, fp, r9
 801a81e:	fb14 f405 	smulbb	r4, r4, r5
 801a822:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a826:	b2bf      	uxth	r7, r7
 801a828:	fb06 b605 	mla	r6, r6, r5, fp
 801a82c:	fb08 4809 	mla	r8, r8, r9, r4
 801a830:	b2b6      	uxth	r6, r6
 801a832:	fa1f f888 	uxth.w	r8, r8
 801a836:	1c7c      	adds	r4, r7, #1
 801a838:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801a83c:	f106 0b01 	add.w	fp, r6, #1
 801a840:	f108 0401 	add.w	r4, r8, #1
 801a844:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801a848:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801a84c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a850:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801a854:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801a858:	4327      	orrs	r7, r4
 801a85a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a85e:	ea47 070b 	orr.w	r7, r7, fp
 801a862:	f820 700a 	strh.w	r7, [r0, sl]
 801a866:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a868:	4401      	add	r1, r0
 801a86a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a86c:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a870:	4402      	add	r2, r0
 801a872:	e759      	b.n	801a728 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801a874:	b007      	add	sp, #28
 801a876:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801a87c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a87c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a880:	b085      	sub	sp, #20
 801a882:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a886:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a888:	9203      	str	r2, [sp, #12]
 801a88a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a88e:	6870      	ldr	r0, [r6, #4]
 801a890:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a892:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801a896:	686f      	ldr	r7, [r5, #4]
 801a898:	9101      	str	r1, [sp, #4]
 801a89a:	fb00 2404 	mla	r4, r0, r4, r2
 801a89e:	6832      	ldr	r2, [r6, #0]
 801a8a0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a8a4:	682a      	ldr	r2, [r5, #0]
 801a8a6:	9202      	str	r2, [sp, #8]
 801a8a8:	3704      	adds	r7, #4
 801a8aa:	9a01      	ldr	r2, [sp, #4]
 801a8ac:	2a00      	cmp	r2, #0
 801a8ae:	dc03      	bgt.n	801a8b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a8b0:	9a03      	ldr	r2, [sp, #12]
 801a8b2:	2a00      	cmp	r2, #0
 801a8b4:	f340 80cc 	ble.w	801aa50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a8b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a8ba:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a8be:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a8c2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a8c6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a8c8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a8cc:	2b00      	cmp	r3, #0
 801a8ce:	dd0d      	ble.n	801a8ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a8d0:	1406      	asrs	r6, r0, #16
 801a8d2:	d405      	bmi.n	801a8e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a8d4:	454e      	cmp	r6, r9
 801a8d6:	da03      	bge.n	801a8e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a8d8:	1416      	asrs	r6, r2, #16
 801a8da:	d401      	bmi.n	801a8e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a8dc:	4546      	cmp	r6, r8
 801a8de:	db06      	blt.n	801a8ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a8e0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801a8e2:	4460      	add	r0, ip
 801a8e4:	4432      	add	r2, r6
 801a8e6:	3b01      	subs	r3, #1
 801a8e8:	3402      	adds	r4, #2
 801a8ea:	e7ef      	b.n	801a8cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801a8ec:	d00f      	beq.n	801a90e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a8ee:	1e5e      	subs	r6, r3, #1
 801a8f0:	fb0c 0e06 	mla	lr, ip, r6, r0
 801a8f4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801a8f8:	d543      	bpl.n	801a982 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a8fa:	4698      	mov	r8, r3
 801a8fc:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801a900:	f1b8 0f00 	cmp.w	r8, #0
 801a904:	dc71      	bgt.n	801a9ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801a906:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a90a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a90e:	9b01      	ldr	r3, [sp, #4]
 801a910:	2b00      	cmp	r3, #0
 801a912:	f340 809d 	ble.w	801aa50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a916:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a91a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a91e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a922:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a924:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a928:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a92c:	eeb0 6a62 	vmov.f32	s12, s5
 801a930:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a934:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a938:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a93c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a940:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a944:	eeb0 6a43 	vmov.f32	s12, s6
 801a948:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a94c:	ee12 2a90 	vmov	r2, s5
 801a950:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a954:	fb92 fcf3 	sdiv	ip, r2, r3
 801a958:	ee13 2a10 	vmov	r2, s6
 801a95c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a960:	9312      	str	r3, [sp, #72]	; 0x48
 801a962:	9b01      	ldr	r3, [sp, #4]
 801a964:	9a03      	ldr	r2, [sp, #12]
 801a966:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a96a:	3b01      	subs	r3, #1
 801a96c:	9301      	str	r3, [sp, #4]
 801a96e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a972:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a974:	eeb0 3a67 	vmov.f32	s6, s15
 801a978:	bf08      	it	eq
 801a97a:	4613      	moveq	r3, r2
 801a97c:	eef0 2a47 	vmov.f32	s5, s14
 801a980:	e793      	b.n	801a8aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801a982:	45ce      	cmp	lr, r9
 801a984:	dab9      	bge.n	801a8fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a986:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a988:	fb01 2606 	mla	r6, r1, r6, r2
 801a98c:	1436      	asrs	r6, r6, #16
 801a98e:	d4b4      	bmi.n	801a8fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a990:	4546      	cmp	r6, r8
 801a992:	dab2      	bge.n	801a8fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a994:	4698      	mov	r8, r3
 801a996:	46a2      	mov	sl, r4
 801a998:	f1b8 0f00 	cmp.w	r8, #0
 801a99c:	ddb3      	ble.n	801a906 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a99e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a9a2:	9902      	ldr	r1, [sp, #8]
 801a9a4:	1416      	asrs	r6, r2, #16
 801a9a6:	fb09 1606 	mla	r6, r9, r6, r1
 801a9aa:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801a9ae:	492a      	ldr	r1, [pc, #168]	; (801aa58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801a9b0:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801a9b4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a9b8:	eb07 0b0e 	add.w	fp, r7, lr
 801a9bc:	4460      	add	r0, ip
 801a9be:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801a9c2:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801a9c6:	00f6      	lsls	r6, r6, #3
 801a9c8:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801a9cc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a9d0:	ea49 0606 	orr.w	r6, r9, r6
 801a9d4:	f817 900e 	ldrb.w	r9, [r7, lr]
 801a9d8:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a9da:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801a9de:	f82a 6b02 	strh.w	r6, [sl], #2
 801a9e2:	440a      	add	r2, r1
 801a9e4:	f108 38ff 	add.w	r8, r8, #4294967295
 801a9e8:	e7d6      	b.n	801a998 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a9ea:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a9ee:	d429      	bmi.n	801aa44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a9f0:	68ae      	ldr	r6, [r5, #8]
 801a9f2:	454e      	cmp	r6, r9
 801a9f4:	dd26      	ble.n	801aa44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a9f6:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801a9fa:	d423      	bmi.n	801aa44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a9fc:	68e9      	ldr	r1, [r5, #12]
 801a9fe:	4559      	cmp	r1, fp
 801aa00:	dd20      	ble.n	801aa44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801aa02:	9902      	ldr	r1, [sp, #8]
 801aa04:	fa0f fe86 	sxth.w	lr, r6
 801aa08:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801aa0c:	f06f 0101 	mvn.w	r1, #1
 801aa10:	f81e e009 	ldrb.w	lr, [lr, r9]
 801aa14:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801aa18:	eb07 060e 	add.w	r6, r7, lr
 801aa1c:	fb01 f908 	mul.w	r9, r1, r8
 801aa20:	f896 b002 	ldrb.w	fp, [r6, #2]
 801aa24:	7876      	ldrb	r6, [r6, #1]
 801aa26:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801aa2a:	00f6      	lsls	r6, r6, #3
 801aa2c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801aa30:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801aa34:	ea4b 0606 	orr.w	r6, fp, r6
 801aa38:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801aa3c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801aa40:	f82a 6009 	strh.w	r6, [sl, r9]
 801aa44:	9912      	ldr	r1, [sp, #72]	; 0x48
 801aa46:	4460      	add	r0, ip
 801aa48:	440a      	add	r2, r1
 801aa4a:	f108 38ff 	add.w	r8, r8, #4294967295
 801aa4e:	e757      	b.n	801a900 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801aa50:	b005      	add	sp, #20
 801aa52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aa56:	bf00      	nop
 801aa58:	fffff800 	.word	0xfffff800

0801aa5c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aa5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa60:	b087      	sub	sp, #28
 801aa62:	468b      	mov	fp, r1
 801aa64:	9815      	ldr	r0, [sp, #84]	; 0x54
 801aa66:	9204      	str	r2, [sp, #16]
 801aa68:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801aa6c:	9205      	str	r2, [sp, #20]
 801aa6e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801aa72:	6841      	ldr	r1, [r0, #4]
 801aa74:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801aa78:	fb01 2404 	mla	r4, r1, r4, r2
 801aa7c:	6802      	ldr	r2, [r0, #0]
 801aa7e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801aa82:	f8dc 2000 	ldr.w	r2, [ip]
 801aa86:	9201      	str	r2, [sp, #4]
 801aa88:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801aa8c:	3204      	adds	r2, #4
 801aa8e:	9202      	str	r2, [sp, #8]
 801aa90:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801aa94:	f1bb 0f00 	cmp.w	fp, #0
 801aa98:	dc03      	bgt.n	801aaa2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801aa9a:	9a04      	ldr	r2, [sp, #16]
 801aa9c:	2a00      	cmp	r2, #0
 801aa9e:	f340 8138 	ble.w	801ad12 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801aaa2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801aaa4:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801aaa8:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801aaac:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801aab0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801aab2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801aab6:	2b00      	cmp	r3, #0
 801aab8:	dd0e      	ble.n	801aad8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801aaba:	1402      	asrs	r2, r0, #16
 801aabc:	d405      	bmi.n	801aaca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801aabe:	42ba      	cmp	r2, r7
 801aac0:	da03      	bge.n	801aaca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801aac2:	140a      	asrs	r2, r1, #16
 801aac4:	d401      	bmi.n	801aaca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801aac6:	42b2      	cmp	r2, r6
 801aac8:	db07      	blt.n	801aada <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801aaca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aacc:	4410      	add	r0, r2
 801aace:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aad0:	3b01      	subs	r3, #1
 801aad2:	4411      	add	r1, r2
 801aad4:	3402      	adds	r4, #2
 801aad6:	e7ee      	b.n	801aab6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801aad8:	d019      	beq.n	801ab0e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801aada:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801aadc:	1e5a      	subs	r2, r3, #1
 801aade:	fb05 0502 	mla	r5, r5, r2, r0
 801aae2:	142d      	asrs	r5, r5, #16
 801aae4:	d409      	bmi.n	801aafa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801aae6:	42bd      	cmp	r5, r7
 801aae8:	da07      	bge.n	801aafa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801aaea:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801aaec:	fb05 1202 	mla	r2, r5, r2, r1
 801aaf0:	1412      	asrs	r2, r2, #16
 801aaf2:	d402      	bmi.n	801aafa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801aaf4:	42b2      	cmp	r2, r6
 801aaf6:	f2c0 80ac 	blt.w	801ac52 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801aafa:	f04f 0e00 	mov.w	lr, #0
 801aafe:	eb03 020e 	add.w	r2, r3, lr
 801ab02:	2a00      	cmp	r2, #0
 801ab04:	dc3e      	bgt.n	801ab84 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801ab06:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ab0a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ab0e:	f1bb 0f00 	cmp.w	fp, #0
 801ab12:	f340 80fe 	ble.w	801ad12 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801ab16:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ab1a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ab1e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ab22:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ab24:	f1bb 0b01 	subs.w	fp, fp, #1
 801ab28:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ab2c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ab30:	eeb0 6a62 	vmov.f32	s12, s5
 801ab34:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ab38:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ab3c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ab40:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801ab44:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ab48:	eeb0 6a43 	vmov.f32	s12, s6
 801ab4c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ab50:	ee12 2a90 	vmov	r2, s5
 801ab54:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ab58:	fb92 f3f3 	sdiv	r3, r2, r3
 801ab5c:	ee13 2a10 	vmov	r2, s6
 801ab60:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ab64:	9313      	str	r3, [sp, #76]	; 0x4c
 801ab66:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ab68:	fb92 f3f3 	sdiv	r3, r2, r3
 801ab6c:	9a04      	ldr	r2, [sp, #16]
 801ab6e:	9314      	str	r3, [sp, #80]	; 0x50
 801ab70:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ab74:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ab76:	eeb0 3a67 	vmov.f32	s6, s15
 801ab7a:	bf08      	it	eq
 801ab7c:	4613      	moveq	r3, r2
 801ab7e:	eef0 2a47 	vmov.f32	s5, s14
 801ab82:	e787      	b.n	801aa94 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801ab84:	1406      	asrs	r6, r0, #16
 801ab86:	d45d      	bmi.n	801ac44 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801ab88:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801ab8c:	42b5      	cmp	r5, r6
 801ab8e:	dd59      	ble.n	801ac44 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801ab90:	140f      	asrs	r7, r1, #16
 801ab92:	d457      	bmi.n	801ac44 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801ab94:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801ab98:	42ba      	cmp	r2, r7
 801ab9a:	dd53      	ble.n	801ac44 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801ab9c:	9a01      	ldr	r2, [sp, #4]
 801ab9e:	b22d      	sxth	r5, r5
 801aba0:	fb07 2505 	mla	r5, r7, r5, r2
 801aba4:	5daa      	ldrb	r2, [r5, r6]
 801aba6:	9d02      	ldr	r5, [sp, #8]
 801aba8:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801abac:	0e2e      	lsrs	r6, r5, #24
 801abae:	d049      	beq.n	801ac44 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801abb0:	f06f 0201 	mvn.w	r2, #1
 801abb4:	fb02 f20e 	mul.w	r2, r2, lr
 801abb8:	9203      	str	r2, [sp, #12]
 801abba:	f834 8002 	ldrh.w	r8, [r4, r2]
 801abbe:	9a05      	ldr	r2, [sp, #20]
 801abc0:	4356      	muls	r6, r2
 801abc2:	1c72      	adds	r2, r6, #1
 801abc4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801abc8:	1212      	asrs	r2, r2, #8
 801abca:	fa1f f982 	uxth.w	r9, r2
 801abce:	ea4f 2728 	mov.w	r7, r8, asr #8
 801abd2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801abd6:	43d2      	mvns	r2, r2
 801abd8:	b2d2      	uxtb	r2, r2
 801abda:	fb16 f609 	smulbb	r6, r6, r9
 801abde:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801abe2:	fb07 6702 	mla	r7, r7, r2, r6
 801abe6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801abea:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801abee:	b2ed      	uxtb	r5, r5
 801abf0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801abf4:	fa5f f888 	uxtb.w	r8, r8
 801abf8:	fb15 f509 	smulbb	r5, r5, r9
 801abfc:	fb08 5502 	mla	r5, r8, r2, r5
 801ac00:	b2bf      	uxth	r7, r7
 801ac02:	fb1a fa09 	smulbb	sl, sl, r9
 801ac06:	b2ad      	uxth	r5, r5
 801ac08:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ac0c:	fb06 a602 	mla	r6, r6, r2, sl
 801ac10:	1c7a      	adds	r2, r7, #1
 801ac12:	f105 0a01 	add.w	sl, r5, #1
 801ac16:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801ac1a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ac1e:	b2b6      	uxth	r6, r6
 801ac20:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ac24:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ac28:	ea4a 0707 	orr.w	r7, sl, r7
 801ac2c:	f106 0a01 	add.w	sl, r6, #1
 801ac30:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ac34:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ac38:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ac3c:	9a03      	ldr	r2, [sp, #12]
 801ac3e:	ea47 070a 	orr.w	r7, r7, sl
 801ac42:	52a7      	strh	r7, [r4, r2]
 801ac44:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ac46:	4410      	add	r0, r2
 801ac48:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ac4a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801ac4e:	4411      	add	r1, r2
 801ac50:	e755      	b.n	801aafe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ac52:	f04f 0800 	mov.w	r8, #0
 801ac56:	eba3 0208 	sub.w	r2, r3, r8
 801ac5a:	2a00      	cmp	r2, #0
 801ac5c:	f77f af53 	ble.w	801ab06 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801ac60:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801ac64:	9f01      	ldr	r7, [sp, #4]
 801ac66:	140a      	asrs	r2, r1, #16
 801ac68:	1405      	asrs	r5, r0, #16
 801ac6a:	fb06 7202 	mla	r2, r6, r2, r7
 801ac6e:	5d52      	ldrb	r2, [r2, r5]
 801ac70:	9d02      	ldr	r5, [sp, #8]
 801ac72:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801ac76:	0e2e      	lsrs	r6, r5, #24
 801ac78:	d044      	beq.n	801ad04 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ac7a:	9a05      	ldr	r2, [sp, #20]
 801ac7c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801ac80:	4356      	muls	r6, r2
 801ac82:	1c72      	adds	r2, r6, #1
 801ac84:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801ac88:	1212      	asrs	r2, r2, #8
 801ac8a:	fa1f f982 	uxth.w	r9, r2
 801ac8e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801ac92:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801ac96:	43d2      	mvns	r2, r2
 801ac98:	b2d2      	uxtb	r2, r2
 801ac9a:	fb16 f609 	smulbb	r6, r6, r9
 801ac9e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801aca2:	fb07 6702 	mla	r7, r7, r2, r6
 801aca6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801acaa:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801acae:	b2ed      	uxtb	r5, r5
 801acb0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801acb4:	fa5f fe8e 	uxtb.w	lr, lr
 801acb8:	fb15 f509 	smulbb	r5, r5, r9
 801acbc:	fb0e 5502 	mla	r5, lr, r2, r5
 801acc0:	b2bf      	uxth	r7, r7
 801acc2:	fb1a fa09 	smulbb	sl, sl, r9
 801acc6:	b2ad      	uxth	r5, r5
 801acc8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801accc:	fb06 a602 	mla	r6, r6, r2, sl
 801acd0:	1c7a      	adds	r2, r7, #1
 801acd2:	f105 0a01 	add.w	sl, r5, #1
 801acd6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801acda:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801acde:	b2b6      	uxth	r6, r6
 801ace0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ace4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ace8:	ea4a 0707 	orr.w	r7, sl, r7
 801acec:	f106 0a01 	add.w	sl, r6, #1
 801acf0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801acf4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801acf8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801acfc:	ea47 070a 	orr.w	r7, r7, sl
 801ad00:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801ad04:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ad06:	4410      	add	r0, r2
 801ad08:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ad0a:	f108 0801 	add.w	r8, r8, #1
 801ad0e:	4411      	add	r1, r2
 801ad10:	e7a1      	b.n	801ac56 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801ad12:	b007      	add	sp, #28
 801ad14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ad18 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ad18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad1c:	b085      	sub	sp, #20
 801ad1e:	468b      	mov	fp, r1
 801ad20:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ad22:	9203      	str	r2, [sp, #12]
 801ad24:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801ad28:	6841      	ldr	r1, [r0, #4]
 801ad2a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801ad2e:	fb01 2404 	mla	r4, r1, r4, r2
 801ad32:	6802      	ldr	r2, [r0, #0]
 801ad34:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ad38:	f8de 2000 	ldr.w	r2, [lr]
 801ad3c:	9200      	str	r2, [sp, #0]
 801ad3e:	f8de 2004 	ldr.w	r2, [lr, #4]
 801ad42:	3204      	adds	r2, #4
 801ad44:	9201      	str	r2, [sp, #4]
 801ad46:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ad4a:	f1bb 0f00 	cmp.w	fp, #0
 801ad4e:	dc03      	bgt.n	801ad58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801ad50:	9a03      	ldr	r2, [sp, #12]
 801ad52:	2a00      	cmp	r2, #0
 801ad54:	f340 8153 	ble.w	801affe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801ad58:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ad5a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801ad5e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801ad62:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ad66:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ad68:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ad6c:	2b00      	cmp	r3, #0
 801ad6e:	dd0e      	ble.n	801ad8e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ad70:	1408      	asrs	r0, r1, #16
 801ad72:	d405      	bmi.n	801ad80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ad74:	42b8      	cmp	r0, r7
 801ad76:	da03      	bge.n	801ad80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ad78:	1410      	asrs	r0, r2, #16
 801ad7a:	d401      	bmi.n	801ad80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ad7c:	42b0      	cmp	r0, r6
 801ad7e:	db07      	blt.n	801ad90 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ad80:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ad82:	4401      	add	r1, r0
 801ad84:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ad86:	3b01      	subs	r3, #1
 801ad88:	4402      	add	r2, r0
 801ad8a:	3402      	adds	r4, #2
 801ad8c:	e7ee      	b.n	801ad6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801ad8e:	d017      	beq.n	801adc0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801ad90:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ad92:	1e58      	subs	r0, r3, #1
 801ad94:	fb05 1500 	mla	r5, r5, r0, r1
 801ad98:	142d      	asrs	r5, r5, #16
 801ad9a:	d409      	bmi.n	801adb0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801ad9c:	42bd      	cmp	r5, r7
 801ad9e:	da07      	bge.n	801adb0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801ada0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ada2:	fb05 2000 	mla	r0, r5, r0, r2
 801ada6:	1400      	asrs	r0, r0, #16
 801ada8:	d402      	bmi.n	801adb0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801adaa:	42b0      	cmp	r0, r6
 801adac:	f2c0 80bc 	blt.w	801af28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801adb0:	2600      	movs	r6, #0
 801adb2:	1998      	adds	r0, r3, r6
 801adb4:	2800      	cmp	r0, #0
 801adb6:	dc3e      	bgt.n	801ae36 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801adb8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801adbc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801adc0:	f1bb 0f00 	cmp.w	fp, #0
 801adc4:	f340 811b 	ble.w	801affe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801adc8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801adcc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801add0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801add4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801add6:	f1bb 0b01 	subs.w	fp, fp, #1
 801adda:	ee31 1a05 	vadd.f32	s2, s2, s10
 801adde:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ade2:	eeb0 6a62 	vmov.f32	s12, s5
 801ade6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801adea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801adee:	ee77 2a62 	vsub.f32	s5, s14, s5
 801adf2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801adf6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801adfa:	eeb0 6a43 	vmov.f32	s12, s6
 801adfe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ae02:	ee12 2a90 	vmov	r2, s5
 801ae06:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ae0a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae0e:	ee13 2a10 	vmov	r2, s6
 801ae12:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ae16:	9311      	str	r3, [sp, #68]	; 0x44
 801ae18:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ae1a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae1e:	9a03      	ldr	r2, [sp, #12]
 801ae20:	9312      	str	r3, [sp, #72]	; 0x48
 801ae22:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801ae26:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ae28:	eeb0 3a67 	vmov.f32	s6, s15
 801ae2c:	bf08      	it	eq
 801ae2e:	4613      	moveq	r3, r2
 801ae30:	eef0 2a47 	vmov.f32	s5, s14
 801ae34:	e789      	b.n	801ad4a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801ae36:	140f      	asrs	r7, r1, #16
 801ae38:	d426      	bmi.n	801ae88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801ae3a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801ae3e:	42bd      	cmp	r5, r7
 801ae40:	dd22      	ble.n	801ae88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801ae42:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801ae46:	d41f      	bmi.n	801ae88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801ae48:	f8de 000c 	ldr.w	r0, [lr, #12]
 801ae4c:	4560      	cmp	r0, ip
 801ae4e:	dd1b      	ble.n	801ae88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801ae50:	9800      	ldr	r0, [sp, #0]
 801ae52:	b22d      	sxth	r5, r5
 801ae54:	fb0c 0505 	mla	r5, ip, r5, r0
 801ae58:	5de8      	ldrb	r0, [r5, r7]
 801ae5a:	9d01      	ldr	r5, [sp, #4]
 801ae5c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801ae60:	0e07      	lsrs	r7, r0, #24
 801ae62:	2fff      	cmp	r7, #255	; 0xff
 801ae64:	d116      	bne.n	801ae94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801ae66:	f06f 0501 	mvn.w	r5, #1
 801ae6a:	fb05 f706 	mul.w	r7, r5, r6
 801ae6e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801ae72:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801ae76:	0945      	lsrs	r5, r0, #5
 801ae78:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ae7c:	ea4c 0505 	orr.w	r5, ip, r5
 801ae80:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801ae84:	4305      	orrs	r5, r0
 801ae86:	53e5      	strh	r5, [r4, r7]
 801ae88:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ae8a:	4401      	add	r1, r0
 801ae8c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ae8e:	3e01      	subs	r6, #1
 801ae90:	4402      	add	r2, r0
 801ae92:	e78e      	b.n	801adb2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ae94:	b2fd      	uxtb	r5, r7
 801ae96:	2f00      	cmp	r7, #0
 801ae98:	d0f6      	beq.n	801ae88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801ae9a:	f06f 0701 	mvn.w	r7, #1
 801ae9e:	4377      	muls	r7, r6
 801aea0:	fa1f f985 	uxth.w	r9, r5
 801aea4:	f834 8007 	ldrh.w	r8, [r4, r7]
 801aea8:	9702      	str	r7, [sp, #8]
 801aeaa:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801aeae:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801aeb2:	43ed      	mvns	r5, r5
 801aeb4:	b2ed      	uxtb	r5, r5
 801aeb6:	fb17 f709 	smulbb	r7, r7, r9
 801aeba:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801aebe:	fb0c 7c05 	mla	ip, ip, r5, r7
 801aec2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801aec6:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801aeca:	b2c0      	uxtb	r0, r0
 801aecc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801aed0:	fa5f f888 	uxtb.w	r8, r8
 801aed4:	fb10 f009 	smulbb	r0, r0, r9
 801aed8:	fb08 0005 	mla	r0, r8, r5, r0
 801aedc:	b280      	uxth	r0, r0
 801aede:	fa1f fc8c 	uxth.w	ip, ip
 801aee2:	fb1a fa09 	smulbb	sl, sl, r9
 801aee6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801aeea:	fb07 a705 	mla	r7, r7, r5, sl
 801aeee:	f100 0a01 	add.w	sl, r0, #1
 801aef2:	f10c 0501 	add.w	r5, ip, #1
 801aef6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801aefa:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801aefe:	b2bf      	uxth	r7, r7
 801af00:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801af04:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801af08:	ea4a 0c0c 	orr.w	ip, sl, ip
 801af0c:	f107 0a01 	add.w	sl, r7, #1
 801af10:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801af14:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801af18:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801af1c:	9802      	ldr	r0, [sp, #8]
 801af1e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801af22:	f824 c000 	strh.w	ip, [r4, r0]
 801af26:	e7af      	b.n	801ae88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801af28:	f04f 0800 	mov.w	r8, #0
 801af2c:	eba3 0008 	sub.w	r0, r3, r8
 801af30:	2800      	cmp	r0, #0
 801af32:	f77f af41 	ble.w	801adb8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801af36:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801af3a:	9f00      	ldr	r7, [sp, #0]
 801af3c:	1410      	asrs	r0, r2, #16
 801af3e:	140d      	asrs	r5, r1, #16
 801af40:	fb06 7000 	mla	r0, r6, r0, r7
 801af44:	5d40      	ldrb	r0, [r0, r5]
 801af46:	9d01      	ldr	r5, [sp, #4]
 801af48:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801af4c:	0e2e      	lsrs	r6, r5, #24
 801af4e:	2eff      	cmp	r6, #255	; 0xff
 801af50:	d112      	bne.n	801af78 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801af52:	482c      	ldr	r0, [pc, #176]	; (801b004 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801af54:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801af58:	0968      	lsrs	r0, r5, #5
 801af5a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801af5e:	4330      	orrs	r0, r6
 801af60:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801af64:	4328      	orrs	r0, r5
 801af66:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801af6a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801af6c:	4401      	add	r1, r0
 801af6e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801af70:	f108 0801 	add.w	r8, r8, #1
 801af74:	4402      	add	r2, r0
 801af76:	e7d9      	b.n	801af2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801af78:	b2f0      	uxtb	r0, r6
 801af7a:	2e00      	cmp	r6, #0
 801af7c:	d0f5      	beq.n	801af6a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801af7e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801af82:	fa1f f980 	uxth.w	r9, r0
 801af86:	ea4f 272c 	mov.w	r7, ip, asr #8
 801af8a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801af8e:	43c0      	mvns	r0, r0
 801af90:	b2c0      	uxtb	r0, r0
 801af92:	fb16 f609 	smulbb	r6, r6, r9
 801af96:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801af9a:	fb07 6700 	mla	r7, r7, r0, r6
 801af9e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801afa2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801afa6:	b2ed      	uxtb	r5, r5
 801afa8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801afac:	fa5f fc8c 	uxtb.w	ip, ip
 801afb0:	fb15 f509 	smulbb	r5, r5, r9
 801afb4:	fb0c 5500 	mla	r5, ip, r0, r5
 801afb8:	b2bf      	uxth	r7, r7
 801afba:	fb1a fa09 	smulbb	sl, sl, r9
 801afbe:	b2ad      	uxth	r5, r5
 801afc0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801afc4:	fb06 a600 	mla	r6, r6, r0, sl
 801afc8:	1c78      	adds	r0, r7, #1
 801afca:	f105 0a01 	add.w	sl, r5, #1
 801afce:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801afd2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801afd6:	b2b6      	uxth	r6, r6
 801afd8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801afdc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801afe0:	ea4a 0707 	orr.w	r7, sl, r7
 801afe4:	f106 0a01 	add.w	sl, r6, #1
 801afe8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801afec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aff0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801aff4:	ea47 070a 	orr.w	r7, r7, sl
 801aff8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801affc:	e7b5      	b.n	801af6a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801affe:	b005      	add	sp, #20
 801b000:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b004:	fffff800 	.word	0xfffff800

0801b008 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b008:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b00c:	b087      	sub	sp, #28
 801b00e:	468b      	mov	fp, r1
 801b010:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b012:	9204      	str	r2, [sp, #16]
 801b014:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b018:	9205      	str	r2, [sp, #20]
 801b01a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801b01e:	6861      	ldr	r1, [r4, #4]
 801b020:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801b024:	fb01 2000 	mla	r0, r1, r0, r2
 801b028:	6822      	ldr	r2, [r4, #0]
 801b02a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801b02e:	f8de 2000 	ldr.w	r2, [lr]
 801b032:	9201      	str	r2, [sp, #4]
 801b034:	f8de 2004 	ldr.w	r2, [lr, #4]
 801b038:	9202      	str	r2, [sp, #8]
 801b03a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b03e:	f1bb 0f00 	cmp.w	fp, #0
 801b042:	dc03      	bgt.n	801b04c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801b044:	9a04      	ldr	r2, [sp, #16]
 801b046:	2a00      	cmp	r2, #0
 801b048:	f340 8142 	ble.w	801b2d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801b04c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b04e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b052:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801b056:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b05a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b05c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b060:	2b00      	cmp	r3, #0
 801b062:	dd0e      	ble.n	801b082 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b064:	140c      	asrs	r4, r1, #16
 801b066:	d405      	bmi.n	801b074 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b068:	42bc      	cmp	r4, r7
 801b06a:	da03      	bge.n	801b074 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b06c:	1414      	asrs	r4, r2, #16
 801b06e:	d401      	bmi.n	801b074 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b070:	42b4      	cmp	r4, r6
 801b072:	db07      	blt.n	801b084 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b074:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b076:	4421      	add	r1, r4
 801b078:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b07a:	3b01      	subs	r3, #1
 801b07c:	4422      	add	r2, r4
 801b07e:	3002      	adds	r0, #2
 801b080:	e7ee      	b.n	801b060 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b082:	d019      	beq.n	801b0b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801b084:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b086:	1e5c      	subs	r4, r3, #1
 801b088:	fb05 1504 	mla	r5, r5, r4, r1
 801b08c:	142d      	asrs	r5, r5, #16
 801b08e:	d409      	bmi.n	801b0a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b090:	42bd      	cmp	r5, r7
 801b092:	da07      	bge.n	801b0a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b094:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b096:	fb05 2404 	mla	r4, r5, r4, r2
 801b09a:	1424      	asrs	r4, r4, #16
 801b09c:	d402      	bmi.n	801b0a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b09e:	42b4      	cmp	r4, r6
 801b0a0:	f2c0 80b1 	blt.w	801b206 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801b0a4:	f04f 0800 	mov.w	r8, #0
 801b0a8:	eb03 0408 	add.w	r4, r3, r8
 801b0ac:	2c00      	cmp	r4, #0
 801b0ae:	dc3e      	bgt.n	801b12e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b0b0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b0b4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b0b8:	f1bb 0f00 	cmp.w	fp, #0
 801b0bc:	f340 8108 	ble.w	801b2d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801b0c0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b0c4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b0c8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b0cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b0ce:	f1bb 0b01 	subs.w	fp, fp, #1
 801b0d2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b0d6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b0da:	eeb0 6a62 	vmov.f32	s12, s5
 801b0de:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b0e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b0e6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b0ea:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b0ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b0f2:	eeb0 6a43 	vmov.f32	s12, s6
 801b0f6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b0fa:	ee12 2a90 	vmov	r2, s5
 801b0fe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b102:	fb92 f3f3 	sdiv	r3, r2, r3
 801b106:	ee13 2a10 	vmov	r2, s6
 801b10a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b10e:	9313      	str	r3, [sp, #76]	; 0x4c
 801b110:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b112:	fb92 f3f3 	sdiv	r3, r2, r3
 801b116:	9a04      	ldr	r2, [sp, #16]
 801b118:	9314      	str	r3, [sp, #80]	; 0x50
 801b11a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b11e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b120:	eeb0 3a67 	vmov.f32	s6, s15
 801b124:	bf08      	it	eq
 801b126:	4613      	moveq	r3, r2
 801b128:	eef0 2a47 	vmov.f32	s5, s14
 801b12c:	e787      	b.n	801b03e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801b12e:	140e      	asrs	r6, r1, #16
 801b130:	d462      	bmi.n	801b1f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b132:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b136:	42b5      	cmp	r5, r6
 801b138:	dd5e      	ble.n	801b1f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b13a:	1417      	asrs	r7, r2, #16
 801b13c:	d45c      	bmi.n	801b1f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b13e:	f8de 400c 	ldr.w	r4, [lr, #12]
 801b142:	42bc      	cmp	r4, r7
 801b144:	dd58      	ble.n	801b1f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b146:	b22d      	sxth	r5, r5
 801b148:	fb07 6505 	mla	r5, r7, r5, r6
 801b14c:	9c02      	ldr	r4, [sp, #8]
 801b14e:	5d66      	ldrb	r6, [r4, r5]
 801b150:	2e00      	cmp	r6, #0
 801b152:	d051      	beq.n	801b1f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b154:	9c01      	ldr	r4, [sp, #4]
 801b156:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801b15a:	f06f 0401 	mvn.w	r4, #1
 801b15e:	fb04 f408 	mul.w	r4, r4, r8
 801b162:	9403      	str	r4, [sp, #12]
 801b164:	5b05      	ldrh	r5, [r0, r4]
 801b166:	9c05      	ldr	r4, [sp, #20]
 801b168:	4366      	muls	r6, r4
 801b16a:	1c74      	adds	r4, r6, #1
 801b16c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801b170:	1224      	asrs	r4, r4, #8
 801b172:	b2a7      	uxth	r7, r4
 801b174:	122e      	asrs	r6, r5, #8
 801b176:	43e4      	mvns	r4, r4
 801b178:	b2e4      	uxtb	r4, r4
 801b17a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801b17e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b182:	fb16 f604 	smulbb	r6, r6, r4
 801b186:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b18a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b18e:	00ed      	lsls	r5, r5, #3
 801b190:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b194:	b2ed      	uxtb	r5, r5
 801b196:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801b19a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801b19e:	fb15 f504 	smulbb	r5, r5, r4
 801b1a2:	fa5f f989 	uxtb.w	r9, r9
 801b1a6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b1aa:	fb09 5507 	mla	r5, r9, r7, r5
 801b1ae:	fb1a fa04 	smulbb	sl, sl, r4
 801b1b2:	fa1f fc8c 	uxth.w	ip, ip
 801b1b6:	b2ad      	uxth	r5, r5
 801b1b8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b1bc:	fb06 a607 	mla	r6, r6, r7, sl
 801b1c0:	f10c 0401 	add.w	r4, ip, #1
 801b1c4:	f105 0a01 	add.w	sl, r5, #1
 801b1c8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801b1cc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b1d0:	b2b6      	uxth	r6, r6
 801b1d2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b1d6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b1da:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b1de:	f106 0a01 	add.w	sl, r6, #1
 801b1e2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b1e6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b1ea:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b1ee:	9c03      	ldr	r4, [sp, #12]
 801b1f0:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b1f4:	f820 c004 	strh.w	ip, [r0, r4]
 801b1f8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b1fa:	4421      	add	r1, r4
 801b1fc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b1fe:	f108 38ff 	add.w	r8, r8, #4294967295
 801b202:	4422      	add	r2, r4
 801b204:	e750      	b.n	801b0a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b206:	f04f 0900 	mov.w	r9, #0
 801b20a:	eba3 0409 	sub.w	r4, r3, r9
 801b20e:	2c00      	cmp	r4, #0
 801b210:	f77f af4e 	ble.w	801b0b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801b214:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801b218:	140d      	asrs	r5, r1, #16
 801b21a:	1414      	asrs	r4, r2, #16
 801b21c:	fb06 5404 	mla	r4, r6, r4, r5
 801b220:	9d02      	ldr	r5, [sp, #8]
 801b222:	5d2e      	ldrb	r6, [r5, r4]
 801b224:	2e00      	cmp	r6, #0
 801b226:	d04c      	beq.n	801b2c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801b228:	9d01      	ldr	r5, [sp, #4]
 801b22a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801b22e:	9c05      	ldr	r4, [sp, #20]
 801b230:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801b234:	4366      	muls	r6, r4
 801b236:	1c74      	adds	r4, r6, #1
 801b238:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801b23c:	1224      	asrs	r4, r4, #8
 801b23e:	b2a7      	uxth	r7, r4
 801b240:	122e      	asrs	r6, r5, #8
 801b242:	43e4      	mvns	r4, r4
 801b244:	b2e4      	uxtb	r4, r4
 801b246:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801b24a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b24e:	fb16 f604 	smulbb	r6, r6, r4
 801b252:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b256:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b25a:	00ed      	lsls	r5, r5, #3
 801b25c:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b260:	b2ed      	uxtb	r5, r5
 801b262:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801b266:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b26a:	fb15 f504 	smulbb	r5, r5, r4
 801b26e:	fa5f f888 	uxtb.w	r8, r8
 801b272:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b276:	fb08 5507 	mla	r5, r8, r7, r5
 801b27a:	fb1a fa04 	smulbb	sl, sl, r4
 801b27e:	fa1f fc8c 	uxth.w	ip, ip
 801b282:	b2ad      	uxth	r5, r5
 801b284:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b288:	fb06 a607 	mla	r6, r6, r7, sl
 801b28c:	f10c 0401 	add.w	r4, ip, #1
 801b290:	f105 0a01 	add.w	sl, r5, #1
 801b294:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801b298:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b29c:	b2b6      	uxth	r6, r6
 801b29e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b2a2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b2a6:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b2aa:	f106 0a01 	add.w	sl, r6, #1
 801b2ae:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b2b2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b2b6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b2ba:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b2be:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801b2c2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b2c4:	4421      	add	r1, r4
 801b2c6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b2c8:	f109 0901 	add.w	r9, r9, #1
 801b2cc:	4422      	add	r2, r4
 801b2ce:	e79c      	b.n	801b20a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801b2d0:	b007      	add	sp, #28
 801b2d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b2d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b2d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b2da:	b085      	sub	sp, #20
 801b2dc:	468b      	mov	fp, r1
 801b2de:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b2e0:	9203      	str	r2, [sp, #12]
 801b2e2:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801b2e6:	6861      	ldr	r1, [r4, #4]
 801b2e8:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801b2ec:	fb01 2000 	mla	r0, r1, r0, r2
 801b2f0:	6822      	ldr	r2, [r4, #0]
 801b2f2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801b2f6:	f8d8 2000 	ldr.w	r2, [r8]
 801b2fa:	9200      	str	r2, [sp, #0]
 801b2fc:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801b300:	9201      	str	r2, [sp, #4]
 801b302:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b306:	f1bb 0f00 	cmp.w	fp, #0
 801b30a:	dc03      	bgt.n	801b314 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b30c:	9a03      	ldr	r2, [sp, #12]
 801b30e:	2a00      	cmp	r2, #0
 801b310:	f340 8146 	ble.w	801b5a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801b314:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b316:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801b31a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801b31e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b322:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b324:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b328:	2b00      	cmp	r3, #0
 801b32a:	dd0e      	ble.n	801b34a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b32c:	140c      	asrs	r4, r1, #16
 801b32e:	d405      	bmi.n	801b33c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b330:	42bc      	cmp	r4, r7
 801b332:	da03      	bge.n	801b33c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b334:	1414      	asrs	r4, r2, #16
 801b336:	d401      	bmi.n	801b33c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b338:	42b4      	cmp	r4, r6
 801b33a:	db07      	blt.n	801b34c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b33c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b33e:	4421      	add	r1, r4
 801b340:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b342:	3b01      	subs	r3, #1
 801b344:	4422      	add	r2, r4
 801b346:	3002      	adds	r0, #2
 801b348:	e7ee      	b.n	801b328 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b34a:	d017      	beq.n	801b37c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b34c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b34e:	1e5c      	subs	r4, r3, #1
 801b350:	fb05 1504 	mla	r5, r5, r4, r1
 801b354:	142d      	asrs	r5, r5, #16
 801b356:	d409      	bmi.n	801b36c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b358:	42bd      	cmp	r5, r7
 801b35a:	da07      	bge.n	801b36c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b35c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b35e:	fb05 2404 	mla	r4, r5, r4, r2
 801b362:	1424      	asrs	r4, r4, #16
 801b364:	d402      	bmi.n	801b36c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b366:	42b4      	cmp	r4, r6
 801b368:	f2c0 80b3 	blt.w	801b4d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801b36c:	2600      	movs	r6, #0
 801b36e:	199c      	adds	r4, r3, r6
 801b370:	2c00      	cmp	r4, #0
 801b372:	dc3e      	bgt.n	801b3f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b374:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b378:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b37c:	f1bb 0f00 	cmp.w	fp, #0
 801b380:	f340 810e 	ble.w	801b5a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801b384:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b388:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b38c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b390:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b392:	f1bb 0b01 	subs.w	fp, fp, #1
 801b396:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b39a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b39e:	eeb0 6a62 	vmov.f32	s12, s5
 801b3a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b3a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b3aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b3ae:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b3b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b3b6:	eeb0 6a43 	vmov.f32	s12, s6
 801b3ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b3be:	ee12 2a90 	vmov	r2, s5
 801b3c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b3c6:	fb92 f3f3 	sdiv	r3, r2, r3
 801b3ca:	ee13 2a10 	vmov	r2, s6
 801b3ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b3d2:	9311      	str	r3, [sp, #68]	; 0x44
 801b3d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b3d6:	fb92 f3f3 	sdiv	r3, r2, r3
 801b3da:	9a03      	ldr	r2, [sp, #12]
 801b3dc:	9312      	str	r3, [sp, #72]	; 0x48
 801b3de:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b3e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b3e4:	eeb0 3a67 	vmov.f32	s6, s15
 801b3e8:	bf08      	it	eq
 801b3ea:	4613      	moveq	r3, r2
 801b3ec:	eef0 2a47 	vmov.f32	s5, s14
 801b3f0:	e789      	b.n	801b306 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b3f2:	140f      	asrs	r7, r1, #16
 801b3f4:	d418      	bmi.n	801b428 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b3f6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801b3fa:	42bd      	cmp	r5, r7
 801b3fc:	dd14      	ble.n	801b428 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b3fe:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b402:	d411      	bmi.n	801b428 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b404:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801b408:	4564      	cmp	r4, ip
 801b40a:	dd0d      	ble.n	801b428 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b40c:	b22d      	sxth	r5, r5
 801b40e:	fb0c 7505 	mla	r5, ip, r5, r7
 801b412:	9c01      	ldr	r4, [sp, #4]
 801b414:	5d64      	ldrb	r4, [r4, r5]
 801b416:	2cff      	cmp	r4, #255	; 0xff
 801b418:	d10c      	bne.n	801b434 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801b41a:	9c00      	ldr	r4, [sp, #0]
 801b41c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801b420:	f06f 0401 	mvn.w	r4, #1
 801b424:	4374      	muls	r4, r6
 801b426:	5305      	strh	r5, [r0, r4]
 801b428:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b42a:	4421      	add	r1, r4
 801b42c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b42e:	3e01      	subs	r6, #1
 801b430:	4422      	add	r2, r4
 801b432:	e79c      	b.n	801b36e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b434:	2c00      	cmp	r4, #0
 801b436:	d0f7      	beq.n	801b428 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b438:	9f00      	ldr	r7, [sp, #0]
 801b43a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801b43e:	f06f 0501 	mvn.w	r5, #1
 801b442:	4375      	muls	r5, r6
 801b444:	9502      	str	r5, [sp, #8]
 801b446:	5b45      	ldrh	r5, [r0, r5]
 801b448:	fa1f fc84 	uxth.w	ip, r4
 801b44c:	122f      	asrs	r7, r5, #8
 801b44e:	43e4      	mvns	r4, r4
 801b450:	b2e4      	uxtb	r4, r4
 801b452:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801b456:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b45a:	fb17 f704 	smulbb	r7, r7, r4
 801b45e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b462:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b466:	00ed      	lsls	r5, r5, #3
 801b468:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801b46c:	b2ed      	uxtb	r5, r5
 801b46e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801b472:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801b476:	fb15 f504 	smulbb	r5, r5, r4
 801b47a:	fa5f f989 	uxtb.w	r9, r9
 801b47e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b482:	fb09 550c 	mla	r5, r9, ip, r5
 801b486:	fb1a fa04 	smulbb	sl, sl, r4
 801b48a:	fa1f fe8e 	uxth.w	lr, lr
 801b48e:	b2ad      	uxth	r5, r5
 801b490:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b494:	fb07 a70c 	mla	r7, r7, ip, sl
 801b498:	f10e 0401 	add.w	r4, lr, #1
 801b49c:	f105 0a01 	add.w	sl, r5, #1
 801b4a0:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801b4a4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b4a8:	b2bf      	uxth	r7, r7
 801b4aa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b4ae:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b4b2:	ea4a 0e0e 	orr.w	lr, sl, lr
 801b4b6:	f107 0a01 	add.w	sl, r7, #1
 801b4ba:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b4be:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b4c2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b4c6:	9c02      	ldr	r4, [sp, #8]
 801b4c8:	ea4e 0e0a 	orr.w	lr, lr, sl
 801b4cc:	f820 e004 	strh.w	lr, [r0, r4]
 801b4d0:	e7aa      	b.n	801b428 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b4d2:	f04f 0900 	mov.w	r9, #0
 801b4d6:	eba3 0409 	sub.w	r4, r3, r9
 801b4da:	2c00      	cmp	r4, #0
 801b4dc:	f77f af4a 	ble.w	801b374 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b4e0:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801b4e4:	1414      	asrs	r4, r2, #16
 801b4e6:	140d      	asrs	r5, r1, #16
 801b4e8:	fb06 5504 	mla	r5, r6, r4, r5
 801b4ec:	9c01      	ldr	r4, [sp, #4]
 801b4ee:	5d64      	ldrb	r4, [r4, r5]
 801b4f0:	2cff      	cmp	r4, #255	; 0xff
 801b4f2:	d10b      	bne.n	801b50c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801b4f4:	9c00      	ldr	r4, [sp, #0]
 801b4f6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801b4fa:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801b4fe:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b500:	4421      	add	r1, r4
 801b502:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b504:	f109 0901 	add.w	r9, r9, #1
 801b508:	4422      	add	r2, r4
 801b50a:	e7e4      	b.n	801b4d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b50c:	2c00      	cmp	r4, #0
 801b50e:	d0f6      	beq.n	801b4fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801b510:	9e00      	ldr	r6, [sp, #0]
 801b512:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801b516:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801b51a:	b2a7      	uxth	r7, r4
 801b51c:	122e      	asrs	r6, r5, #8
 801b51e:	43e4      	mvns	r4, r4
 801b520:	b2e4      	uxtb	r4, r4
 801b522:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b526:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b52a:	fb16 f604 	smulbb	r6, r6, r4
 801b52e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b532:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b536:	00ed      	lsls	r5, r5, #3
 801b538:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b53c:	b2ed      	uxtb	r5, r5
 801b53e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b542:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b546:	fb15 f504 	smulbb	r5, r5, r4
 801b54a:	fa5f fe8e 	uxtb.w	lr, lr
 801b54e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b552:	fb0e 5507 	mla	r5, lr, r7, r5
 801b556:	fb1a fa04 	smulbb	sl, sl, r4
 801b55a:	fa1f fc8c 	uxth.w	ip, ip
 801b55e:	b2ad      	uxth	r5, r5
 801b560:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b564:	fb06 a607 	mla	r6, r6, r7, sl
 801b568:	f10c 0401 	add.w	r4, ip, #1
 801b56c:	f105 0a01 	add.w	sl, r5, #1
 801b570:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801b574:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b578:	b2b6      	uxth	r6, r6
 801b57a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b57e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b582:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b586:	f106 0a01 	add.w	sl, r6, #1
 801b58a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b58e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b592:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b596:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b59a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801b59e:	e7ae      	b.n	801b4fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801b5a0:	b005      	add	sp, #20
 801b5a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b5a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b5a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b5aa:	b085      	sub	sp, #20
 801b5ac:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b5ae:	9203      	str	r2, [sp, #12]
 801b5b0:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801b5b4:	9201      	str	r2, [sp, #4]
 801b5b6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b5ba:	9100      	str	r1, [sp, #0]
 801b5bc:	6841      	ldr	r1, [r0, #4]
 801b5be:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801b5c2:	fb01 2404 	mla	r4, r1, r4, r2
 801b5c6:	6802      	ldr	r2, [r0, #0]
 801b5c8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b5cc:	f8de 2000 	ldr.w	r2, [lr]
 801b5d0:	9202      	str	r2, [sp, #8]
 801b5d2:	9a01      	ldr	r2, [sp, #4]
 801b5d4:	43d6      	mvns	r6, r2
 801b5d6:	b2f6      	uxtb	r6, r6
 801b5d8:	9a00      	ldr	r2, [sp, #0]
 801b5da:	2a00      	cmp	r2, #0
 801b5dc:	dc03      	bgt.n	801b5e6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b5de:	9a03      	ldr	r2, [sp, #12]
 801b5e0:	2a00      	cmp	r2, #0
 801b5e2:	f340 8124 	ble.w	801b82e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801b5e6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b5e8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801b5ec:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801b5f0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b5f4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b5f6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b5fa:	2b00      	cmp	r3, #0
 801b5fc:	dd0e      	ble.n	801b61c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b5fe:	1408      	asrs	r0, r1, #16
 801b600:	d405      	bmi.n	801b60e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b602:	4560      	cmp	r0, ip
 801b604:	da03      	bge.n	801b60e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b606:	1410      	asrs	r0, r2, #16
 801b608:	d401      	bmi.n	801b60e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b60a:	42b8      	cmp	r0, r7
 801b60c:	db07      	blt.n	801b61e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b60e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b610:	4401      	add	r1, r0
 801b612:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b614:	3b01      	subs	r3, #1
 801b616:	4402      	add	r2, r0
 801b618:	3402      	adds	r4, #2
 801b61a:	e7ee      	b.n	801b5fa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801b61c:	d06e      	beq.n	801b6fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801b61e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b620:	1e58      	subs	r0, r3, #1
 801b622:	fb05 1500 	mla	r5, r5, r0, r1
 801b626:	142d      	asrs	r5, r5, #16
 801b628:	d45c      	bmi.n	801b6e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b62a:	4565      	cmp	r5, ip
 801b62c:	da5a      	bge.n	801b6e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b62e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b630:	fb05 2000 	mla	r0, r5, r0, r2
 801b634:	1400      	asrs	r0, r0, #16
 801b636:	d455      	bmi.n	801b6e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b638:	42b8      	cmp	r0, r7
 801b63a:	da53      	bge.n	801b6e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b63c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801b640:	4699      	mov	r9, r3
 801b642:	46a2      	mov	sl, r4
 801b644:	f1b9 0f00 	cmp.w	r9, #0
 801b648:	dd54      	ble.n	801b6f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801b64a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b64e:	140d      	asrs	r5, r1, #16
 801b650:	1410      	asrs	r0, r2, #16
 801b652:	fb07 5000 	mla	r0, r7, r0, r5
 801b656:	9d02      	ldr	r5, [sp, #8]
 801b658:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801b65c:	f8ba 5000 	ldrh.w	r5, [sl]
 801b660:	122f      	asrs	r7, r5, #8
 801b662:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b666:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b66a:	fb17 f706 	smulbb	r7, r7, r6
 801b66e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801b672:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b676:	00ed      	lsls	r5, r5, #3
 801b678:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801b67c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801b680:	10c7      	asrs	r7, r0, #3
 801b682:	b2ed      	uxtb	r5, r5
 801b684:	00c0      	lsls	r0, r0, #3
 801b686:	fb18 f806 	smulbb	r8, r8, r6
 801b68a:	fb15 f506 	smulbb	r5, r5, r6
 801b68e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b692:	b2c0      	uxtb	r0, r0
 801b694:	fa1f fc8c 	uxth.w	ip, ip
 801b698:	fb07 870b 	mla	r7, r7, fp, r8
 801b69c:	fb00 500b 	mla	r0, r0, fp, r5
 801b6a0:	b280      	uxth	r0, r0
 801b6a2:	b2bf      	uxth	r7, r7
 801b6a4:	f10c 0501 	add.w	r5, ip, #1
 801b6a8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b6ac:	f107 0801 	add.w	r8, r7, #1
 801b6b0:	1c45      	adds	r5, r0, #1
 801b6b2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b6b6:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801b6ba:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b6bc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b6c0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b6c4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801b6c8:	ea45 0c0c 	orr.w	ip, r5, ip
 801b6cc:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801b6d0:	4401      	add	r1, r0
 801b6d2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b6d4:	ea4c 0c08 	orr.w	ip, ip, r8
 801b6d8:	f82a cb02 	strh.w	ip, [sl], #2
 801b6dc:	4402      	add	r2, r0
 801b6de:	f109 39ff 	add.w	r9, r9, #4294967295
 801b6e2:	e7af      	b.n	801b644 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b6e4:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801b6e8:	f04f 0800 	mov.w	r8, #0
 801b6ec:	eb03 0008 	add.w	r0, r3, r8
 801b6f0:	2800      	cmp	r0, #0
 801b6f2:	dc41      	bgt.n	801b778 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801b6f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b6f8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b6fc:	9b00      	ldr	r3, [sp, #0]
 801b6fe:	2b00      	cmp	r3, #0
 801b700:	f340 8095 	ble.w	801b82e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801b704:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b708:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b70c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b710:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b712:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b716:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b71a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b71e:	eef0 6a62 	vmov.f32	s13, s5
 801b722:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b726:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b72a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b72e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801b732:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b736:	eef0 6a43 	vmov.f32	s13, s6
 801b73a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b73e:	ee12 2a90 	vmov	r2, s5
 801b742:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b746:	fb92 f3f3 	sdiv	r3, r2, r3
 801b74a:	ee13 2a10 	vmov	r2, s6
 801b74e:	9311      	str	r3, [sp, #68]	; 0x44
 801b750:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b752:	fb92 f3f3 	sdiv	r3, r2, r3
 801b756:	9312      	str	r3, [sp, #72]	; 0x48
 801b758:	9b00      	ldr	r3, [sp, #0]
 801b75a:	9a03      	ldr	r2, [sp, #12]
 801b75c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b760:	3b01      	subs	r3, #1
 801b762:	9300      	str	r3, [sp, #0]
 801b764:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801b768:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b76a:	eeb0 3a67 	vmov.f32	s6, s15
 801b76e:	bf08      	it	eq
 801b770:	4613      	moveq	r3, r2
 801b772:	eef0 2a47 	vmov.f32	s5, s14
 801b776:	e72f      	b.n	801b5d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b778:	140f      	asrs	r7, r1, #16
 801b77a:	d451      	bmi.n	801b820 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b77c:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b780:	42bd      	cmp	r5, r7
 801b782:	dd4d      	ble.n	801b820 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b784:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b788:	d44a      	bmi.n	801b820 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b78a:	f8de 000c 	ldr.w	r0, [lr, #12]
 801b78e:	4560      	cmp	r0, ip
 801b790:	dd46      	ble.n	801b820 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b792:	b22d      	sxth	r5, r5
 801b794:	fb0c 7505 	mla	r5, ip, r5, r7
 801b798:	9802      	ldr	r0, [sp, #8]
 801b79a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801b79e:	f06f 0501 	mvn.w	r5, #1
 801b7a2:	fb05 fb08 	mul.w	fp, r5, r8
 801b7a6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b7aa:	f834 500b 	ldrh.w	r5, [r4, fp]
 801b7ae:	122f      	asrs	r7, r5, #8
 801b7b0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b7b4:	fb17 f706 	smulbb	r7, r7, r6
 801b7b8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801b7bc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b7c0:	00ed      	lsls	r5, r5, #3
 801b7c2:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801b7c6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801b7ca:	10c7      	asrs	r7, r0, #3
 801b7cc:	b2ed      	uxtb	r5, r5
 801b7ce:	00c0      	lsls	r0, r0, #3
 801b7d0:	fb19 f906 	smulbb	r9, r9, r6
 801b7d4:	fb15 f506 	smulbb	r5, r5, r6
 801b7d8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b7dc:	b2c0      	uxtb	r0, r0
 801b7de:	fa1f fc8c 	uxth.w	ip, ip
 801b7e2:	fb07 970a 	mla	r7, r7, sl, r9
 801b7e6:	fb00 500a 	mla	r0, r0, sl, r5
 801b7ea:	b2bf      	uxth	r7, r7
 801b7ec:	b280      	uxth	r0, r0
 801b7ee:	f10c 0501 	add.w	r5, ip, #1
 801b7f2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b7f6:	f107 0901 	add.w	r9, r7, #1
 801b7fa:	1c45      	adds	r5, r0, #1
 801b7fc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b800:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801b804:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b808:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b80c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b810:	ea45 0c0c 	orr.w	ip, r5, ip
 801b814:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b818:	ea4c 0c09 	orr.w	ip, ip, r9
 801b81c:	f824 c00b 	strh.w	ip, [r4, fp]
 801b820:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b822:	4401      	add	r1, r0
 801b824:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b826:	f108 38ff 	add.w	r8, r8, #4294967295
 801b82a:	4402      	add	r2, r0
 801b82c:	e75e      	b.n	801b6ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801b82e:	b005      	add	sp, #20
 801b830:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b834 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b838:	b085      	sub	sp, #20
 801b83a:	4693      	mov	fp, r2
 801b83c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b83e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b840:	6870      	ldr	r0, [r6, #4]
 801b842:	9101      	str	r1, [sp, #4]
 801b844:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b848:	fb00 2404 	mla	r4, r0, r4, r2
 801b84c:	6832      	ldr	r2, [r6, #0]
 801b84e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801b852:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b856:	682a      	ldr	r2, [r5, #0]
 801b858:	9202      	str	r2, [sp, #8]
 801b85a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b85e:	9a01      	ldr	r2, [sp, #4]
 801b860:	2a00      	cmp	r2, #0
 801b862:	dc03      	bgt.n	801b86c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b864:	f1bb 0f00 	cmp.w	fp, #0
 801b868:	f340 809a 	ble.w	801b9a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b86c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b86e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b872:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801b876:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b87a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b87c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b880:	2b00      	cmp	r3, #0
 801b882:	dd0c      	ble.n	801b89e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801b884:	1406      	asrs	r6, r0, #16
 801b886:	d405      	bmi.n	801b894 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b888:	454e      	cmp	r6, r9
 801b88a:	da03      	bge.n	801b894 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b88c:	1416      	asrs	r6, r2, #16
 801b88e:	d401      	bmi.n	801b894 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b890:	4546      	cmp	r6, r8
 801b892:	db05      	blt.n	801b8a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b894:	4470      	add	r0, lr
 801b896:	4462      	add	r2, ip
 801b898:	3b01      	subs	r3, #1
 801b89a:	3402      	adds	r4, #2
 801b89c:	e7f0      	b.n	801b880 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b89e:	d00f      	beq.n	801b8c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b8a0:	1e5e      	subs	r6, r3, #1
 801b8a2:	fb0e 0706 	mla	r7, lr, r6, r0
 801b8a6:	143f      	asrs	r7, r7, #16
 801b8a8:	d541      	bpl.n	801b92e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801b8aa:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801b8ae:	4698      	mov	r8, r3
 801b8b0:	9603      	str	r6, [sp, #12]
 801b8b2:	f1b8 0f00 	cmp.w	r8, #0
 801b8b6:	dc56      	bgt.n	801b966 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801b8b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b8bc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b8c0:	9b01      	ldr	r3, [sp, #4]
 801b8c2:	2b00      	cmp	r3, #0
 801b8c4:	dd6c      	ble.n	801b9a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b8c6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b8ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b8ce:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b8d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b8d4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b8d8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b8dc:	eeb0 6a62 	vmov.f32	s12, s5
 801b8e0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b8e4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b8e8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b8ec:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b8f0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b8f4:	eeb0 6a43 	vmov.f32	s12, s6
 801b8f8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b8fc:	ee12 2a90 	vmov	r2, s5
 801b900:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b904:	fb92 fef3 	sdiv	lr, r2, r3
 801b908:	ee13 2a10 	vmov	r2, s6
 801b90c:	fb92 fcf3 	sdiv	ip, r2, r3
 801b910:	9b01      	ldr	r3, [sp, #4]
 801b912:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b916:	3b01      	subs	r3, #1
 801b918:	9301      	str	r3, [sp, #4]
 801b91a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b91e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b920:	eeb0 3a67 	vmov.f32	s6, s15
 801b924:	bf08      	it	eq
 801b926:	465b      	moveq	r3, fp
 801b928:	eef0 2a47 	vmov.f32	s5, s14
 801b92c:	e797      	b.n	801b85e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b92e:	454f      	cmp	r7, r9
 801b930:	dabb      	bge.n	801b8aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b932:	fb0c 2606 	mla	r6, ip, r6, r2
 801b936:	1436      	asrs	r6, r6, #16
 801b938:	d4b7      	bmi.n	801b8aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b93a:	4546      	cmp	r6, r8
 801b93c:	dab5      	bge.n	801b8aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b93e:	461e      	mov	r6, r3
 801b940:	46a0      	mov	r8, r4
 801b942:	2e00      	cmp	r6, #0
 801b944:	ddb8      	ble.n	801b8b8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b946:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801b94a:	9902      	ldr	r1, [sp, #8]
 801b94c:	1417      	asrs	r7, r2, #16
 801b94e:	ea4f 4920 	mov.w	r9, r0, asr #16
 801b952:	fb0a 9707 	mla	r7, sl, r7, r9
 801b956:	4470      	add	r0, lr
 801b958:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801b95c:	f828 7b02 	strh.w	r7, [r8], #2
 801b960:	4462      	add	r2, ip
 801b962:	3e01      	subs	r6, #1
 801b964:	e7ed      	b.n	801b942 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801b966:	ea5f 4920 	movs.w	r9, r0, asr #16
 801b96a:	d414      	bmi.n	801b996 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b96c:	68ae      	ldr	r6, [r5, #8]
 801b96e:	454e      	cmp	r6, r9
 801b970:	dd11      	ble.n	801b996 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b972:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801b976:	d40e      	bmi.n	801b996 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b978:	68ef      	ldr	r7, [r5, #12]
 801b97a:	4557      	cmp	r7, sl
 801b97c:	dd0b      	ble.n	801b996 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b97e:	b236      	sxth	r6, r6
 801b980:	fb0a 9606 	mla	r6, sl, r6, r9
 801b984:	9f02      	ldr	r7, [sp, #8]
 801b986:	f06f 0101 	mvn.w	r1, #1
 801b98a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801b98e:	fb01 f608 	mul.w	r6, r1, r8
 801b992:	9903      	ldr	r1, [sp, #12]
 801b994:	538f      	strh	r7, [r1, r6]
 801b996:	4470      	add	r0, lr
 801b998:	4462      	add	r2, ip
 801b99a:	f108 38ff 	add.w	r8, r8, #4294967295
 801b99e:	e788      	b.n	801b8b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b9a0:	b005      	add	sp, #20
 801b9a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b9a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b9a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b9aa:	b087      	sub	sp, #28
 801b9ac:	468b      	mov	fp, r1
 801b9ae:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b9b0:	9203      	str	r2, [sp, #12]
 801b9b2:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b9b6:	9204      	str	r2, [sp, #16]
 801b9b8:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801b9bc:	6841      	ldr	r1, [r0, #4]
 801b9be:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b9c2:	fb01 2505 	mla	r5, r1, r5, r2
 801b9c6:	6802      	ldr	r2, [r0, #0]
 801b9c8:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801b9cc:	f8d9 2000 	ldr.w	r2, [r9]
 801b9d0:	9201      	str	r2, [sp, #4]
 801b9d2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b9d6:	f1bb 0f00 	cmp.w	fp, #0
 801b9da:	dc03      	bgt.n	801b9e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b9dc:	9a03      	ldr	r2, [sp, #12]
 801b9de:	2a00      	cmp	r2, #0
 801b9e0:	f340 8159 	ble.w	801bc96 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b9e4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b9e6:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b9ea:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b9ee:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b9f2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b9f4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b9f8:	2b00      	cmp	r3, #0
 801b9fa:	dd0e      	ble.n	801ba1a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b9fc:	1402      	asrs	r2, r0, #16
 801b9fe:	d405      	bmi.n	801ba0c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ba00:	42ba      	cmp	r2, r7
 801ba02:	da03      	bge.n	801ba0c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ba04:	140a      	asrs	r2, r1, #16
 801ba06:	d401      	bmi.n	801ba0c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ba08:	42b2      	cmp	r2, r6
 801ba0a:	db07      	blt.n	801ba1c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ba0c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ba0e:	4410      	add	r0, r2
 801ba10:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ba12:	3b01      	subs	r3, #1
 801ba14:	4411      	add	r1, r2
 801ba16:	3502      	adds	r5, #2
 801ba18:	e7ee      	b.n	801b9f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ba1a:	d017      	beq.n	801ba4c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801ba1c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ba1e:	1e5a      	subs	r2, r3, #1
 801ba20:	fb04 0402 	mla	r4, r4, r2, r0
 801ba24:	1424      	asrs	r4, r4, #16
 801ba26:	d409      	bmi.n	801ba3c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ba28:	42bc      	cmp	r4, r7
 801ba2a:	da07      	bge.n	801ba3c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ba2c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ba2e:	fb04 1202 	mla	r2, r4, r2, r1
 801ba32:	1412      	asrs	r2, r2, #16
 801ba34:	d402      	bmi.n	801ba3c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ba36:	42b2      	cmp	r2, r6
 801ba38:	f2c0 80bf 	blt.w	801bbba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ba3c:	2700      	movs	r7, #0
 801ba3e:	19da      	adds	r2, r3, r7
 801ba40:	2a00      	cmp	r2, #0
 801ba42:	dc3e      	bgt.n	801bac2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ba44:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ba48:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801ba4c:	f1bb 0f00 	cmp.w	fp, #0
 801ba50:	f340 8121 	ble.w	801bc96 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801ba54:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ba58:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ba5c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ba60:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ba62:	f1bb 0b01 	subs.w	fp, fp, #1
 801ba66:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ba6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ba6e:	eeb0 6a62 	vmov.f32	s12, s5
 801ba72:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ba76:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ba7a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ba7e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801ba82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ba86:	eeb0 6a43 	vmov.f32	s12, s6
 801ba8a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ba8e:	ee12 2a90 	vmov	r2, s5
 801ba92:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ba96:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba9a:	ee13 2a10 	vmov	r2, s6
 801ba9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801baa2:	9313      	str	r3, [sp, #76]	; 0x4c
 801baa4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801baa6:	fb92 f3f3 	sdiv	r3, r2, r3
 801baaa:	9a03      	ldr	r2, [sp, #12]
 801baac:	9314      	str	r3, [sp, #80]	; 0x50
 801baae:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801bab2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bab4:	eeb0 3a67 	vmov.f32	s6, s15
 801bab8:	bf08      	it	eq
 801baba:	4613      	moveq	r3, r2
 801babc:	eef0 2a47 	vmov.f32	s5, s14
 801bac0:	e789      	b.n	801b9d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801bac2:	1406      	asrs	r6, r0, #16
 801bac4:	d42d      	bmi.n	801bb22 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801bac6:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801baca:	42b4      	cmp	r4, r6
 801bacc:	dd29      	ble.n	801bb22 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801bace:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801bad2:	d426      	bmi.n	801bb22 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801bad4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801bad8:	4562      	cmp	r2, ip
 801bada:	dd22      	ble.n	801bb22 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801badc:	b224      	sxth	r4, r4
 801bade:	9a01      	ldr	r2, [sp, #4]
 801bae0:	fb0c 6404 	mla	r4, ip, r4, r6
 801bae4:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801bae8:	0e22      	lsrs	r2, r4, #24
 801baea:	d01a      	beq.n	801bb22 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801baec:	9e04      	ldr	r6, [sp, #16]
 801baee:	4372      	muls	r2, r6
 801baf0:	1c56      	adds	r6, r2, #1
 801baf2:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801baf6:	1212      	asrs	r2, r2, #8
 801baf8:	0a26      	lsrs	r6, r4, #8
 801bafa:	2aff      	cmp	r2, #255	; 0xff
 801bafc:	9605      	str	r6, [sp, #20]
 801bafe:	d116      	bne.n	801bb2e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801bb00:	f06f 0201 	mvn.w	r2, #1
 801bb04:	fb02 fc07 	mul.w	ip, r2, r7
 801bb08:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801bb0c:	0962      	lsrs	r2, r4, #5
 801bb0e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bb12:	f026 0607 	bic.w	r6, r6, #7
 801bb16:	4316      	orrs	r6, r2
 801bb18:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801bb1c:	4326      	orrs	r6, r4
 801bb1e:	f825 600c 	strh.w	r6, [r5, ip]
 801bb22:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bb24:	4410      	add	r0, r2
 801bb26:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bb28:	3f01      	subs	r7, #1
 801bb2a:	4411      	add	r1, r2
 801bb2c:	e787      	b.n	801ba3e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801bb2e:	f06f 0601 	mvn.w	r6, #1
 801bb32:	437e      	muls	r6, r7
 801bb34:	fa1f fa82 	uxth.w	sl, r2
 801bb38:	f835 8006 	ldrh.w	r8, [r5, r6]
 801bb3c:	9602      	str	r6, [sp, #8]
 801bb3e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801bb42:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801bb46:	43d2      	mvns	r2, r2
 801bb48:	b2d2      	uxtb	r2, r2
 801bb4a:	fb1c fc0a 	smulbb	ip, ip, sl
 801bb4e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801bb52:	fb0e ce02 	mla	lr, lr, r2, ip
 801bb56:	b2e4      	uxtb	r4, r4
 801bb58:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801bb5c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801bb60:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801bb64:	fa5f f888 	uxtb.w	r8, r8
 801bb68:	fb14 f40a 	smulbb	r4, r4, sl
 801bb6c:	fb08 4402 	mla	r4, r8, r2, r4
 801bb70:	fa1f fe8e 	uxth.w	lr, lr
 801bb74:	fb16 f60a 	smulbb	r6, r6, sl
 801bb78:	b2a4      	uxth	r4, r4
 801bb7a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801bb7e:	fb0c 6c02 	mla	ip, ip, r2, r6
 801bb82:	f10e 0201 	add.w	r2, lr, #1
 801bb86:	1c66      	adds	r6, r4, #1
 801bb88:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801bb8c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801bb90:	fa1f fc8c 	uxth.w	ip, ip
 801bb94:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801bb98:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801bb9c:	ea46 0e0e 	orr.w	lr, r6, lr
 801bba0:	f10c 0601 	add.w	r6, ip, #1
 801bba4:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801bba8:	0976      	lsrs	r6, r6, #5
 801bbaa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bbae:	9a02      	ldr	r2, [sp, #8]
 801bbb0:	ea4e 0e06 	orr.w	lr, lr, r6
 801bbb4:	f825 e002 	strh.w	lr, [r5, r2]
 801bbb8:	e7b3      	b.n	801bb22 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801bbba:	f04f 0800 	mov.w	r8, #0
 801bbbe:	eba3 0208 	sub.w	r2, r3, r8
 801bbc2:	2a00      	cmp	r2, #0
 801bbc4:	f77f af3e 	ble.w	801ba44 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801bbc8:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801bbcc:	1404      	asrs	r4, r0, #16
 801bbce:	140a      	asrs	r2, r1, #16
 801bbd0:	fb06 4202 	mla	r2, r6, r2, r4
 801bbd4:	9c01      	ldr	r4, [sp, #4]
 801bbd6:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801bbda:	0e22      	lsrs	r2, r4, #24
 801bbdc:	d016      	beq.n	801bc0c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801bbde:	9e04      	ldr	r6, [sp, #16]
 801bbe0:	4372      	muls	r2, r6
 801bbe2:	1c56      	adds	r6, r2, #1
 801bbe4:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801bbe8:	1212      	asrs	r2, r2, #8
 801bbea:	2aff      	cmp	r2, #255	; 0xff
 801bbec:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801bbf0:	d113      	bne.n	801bc1a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801bbf2:	0962      	lsrs	r2, r4, #5
 801bbf4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801bbf8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bbfc:	f026 0607 	bic.w	r6, r6, #7
 801bc00:	4316      	orrs	r6, r2
 801bc02:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801bc06:	4326      	orrs	r6, r4
 801bc08:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801bc0c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bc0e:	4410      	add	r0, r2
 801bc10:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bc12:	f108 0801 	add.w	r8, r8, #1
 801bc16:	4411      	add	r1, r2
 801bc18:	e7d1      	b.n	801bbbe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801bc1a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801bc1e:	fa1f fa82 	uxth.w	sl, r2
 801bc22:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801bc26:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801bc2a:	43d2      	mvns	r2, r2
 801bc2c:	b2d2      	uxtb	r2, r2
 801bc2e:	fb17 f70a 	smulbb	r7, r7, sl
 801bc32:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bc36:	fb0c 7c02 	mla	ip, ip, r2, r7
 801bc3a:	b2e4      	uxtb	r4, r4
 801bc3c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801bc40:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bc44:	fa5f fe8e 	uxtb.w	lr, lr
 801bc48:	fb14 f40a 	smulbb	r4, r4, sl
 801bc4c:	fb0e 4402 	mla	r4, lr, r2, r4
 801bc50:	b2f6      	uxtb	r6, r6
 801bc52:	fa1f fc8c 	uxth.w	ip, ip
 801bc56:	fb16 f60a 	smulbb	r6, r6, sl
 801bc5a:	b2a4      	uxth	r4, r4
 801bc5c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bc60:	fb07 6702 	mla	r7, r7, r2, r6
 801bc64:	f10c 0201 	add.w	r2, ip, #1
 801bc68:	1c66      	adds	r6, r4, #1
 801bc6a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801bc6e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801bc72:	b2bf      	uxth	r7, r7
 801bc74:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801bc78:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bc7c:	ea46 0c0c 	orr.w	ip, r6, ip
 801bc80:	1c7e      	adds	r6, r7, #1
 801bc82:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801bc86:	0976      	lsrs	r6, r6, #5
 801bc88:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bc8c:	ea4c 0c06 	orr.w	ip, ip, r6
 801bc90:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801bc94:	e7ba      	b.n	801bc0c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801bc96:	b007      	add	sp, #28
 801bc98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bc9c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bc9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bca0:	b085      	sub	sp, #20
 801bca2:	468b      	mov	fp, r1
 801bca4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801bca6:	9203      	str	r2, [sp, #12]
 801bca8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801bcac:	6841      	ldr	r1, [r0, #4]
 801bcae:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801bcb2:	fb01 2404 	mla	r4, r1, r4, r2
 801bcb6:	6802      	ldr	r2, [r0, #0]
 801bcb8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801bcbc:	f8d8 2000 	ldr.w	r2, [r8]
 801bcc0:	9201      	str	r2, [sp, #4]
 801bcc2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bcc6:	f1bb 0f00 	cmp.w	fp, #0
 801bcca:	dc03      	bgt.n	801bcd4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801bccc:	9a03      	ldr	r2, [sp, #12]
 801bcce:	2a00      	cmp	r2, #0
 801bcd0:	f340 814f 	ble.w	801bf72 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801bcd4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bcd6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801bcda:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801bcde:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801bce2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801bce4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801bce8:	2b00      	cmp	r3, #0
 801bcea:	dd0e      	ble.n	801bd0a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bcec:	1408      	asrs	r0, r1, #16
 801bcee:	d405      	bmi.n	801bcfc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801bcf0:	42b8      	cmp	r0, r7
 801bcf2:	da03      	bge.n	801bcfc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801bcf4:	1410      	asrs	r0, r2, #16
 801bcf6:	d401      	bmi.n	801bcfc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801bcf8:	42b0      	cmp	r0, r6
 801bcfa:	db07      	blt.n	801bd0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bcfc:	9811      	ldr	r0, [sp, #68]	; 0x44
 801bcfe:	4401      	add	r1, r0
 801bd00:	9812      	ldr	r0, [sp, #72]	; 0x48
 801bd02:	3b01      	subs	r3, #1
 801bd04:	4402      	add	r2, r0
 801bd06:	3402      	adds	r4, #2
 801bd08:	e7ee      	b.n	801bce8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801bd0a:	d017      	beq.n	801bd3c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bd0c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801bd0e:	1e58      	subs	r0, r3, #1
 801bd10:	fb05 1500 	mla	r5, r5, r0, r1
 801bd14:	142d      	asrs	r5, r5, #16
 801bd16:	d409      	bmi.n	801bd2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801bd18:	42bd      	cmp	r5, r7
 801bd1a:	da07      	bge.n	801bd2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801bd1c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801bd1e:	fb05 2000 	mla	r0, r5, r0, r2
 801bd22:	1400      	asrs	r0, r0, #16
 801bd24:	d402      	bmi.n	801bd2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801bd26:	42b0      	cmp	r0, r6
 801bd28:	f2c0 80ba 	blt.w	801bea0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801bd2c:	2600      	movs	r6, #0
 801bd2e:	1998      	adds	r0, r3, r6
 801bd30:	2800      	cmp	r0, #0
 801bd32:	dc3e      	bgt.n	801bdb2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801bd34:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bd38:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bd3c:	f1bb 0f00 	cmp.w	fp, #0
 801bd40:	f340 8117 	ble.w	801bf72 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801bd44:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bd48:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bd4c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bd50:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bd52:	f1bb 0b01 	subs.w	fp, fp, #1
 801bd56:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bd5a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bd5e:	eeb0 6a62 	vmov.f32	s12, s5
 801bd62:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bd66:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bd6a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bd6e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801bd72:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bd76:	eeb0 6a43 	vmov.f32	s12, s6
 801bd7a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bd7e:	ee12 2a90 	vmov	r2, s5
 801bd82:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bd86:	fb92 f3f3 	sdiv	r3, r2, r3
 801bd8a:	ee13 2a10 	vmov	r2, s6
 801bd8e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bd92:	9311      	str	r3, [sp, #68]	; 0x44
 801bd94:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bd96:	fb92 f3f3 	sdiv	r3, r2, r3
 801bd9a:	9a03      	ldr	r2, [sp, #12]
 801bd9c:	9312      	str	r3, [sp, #72]	; 0x48
 801bd9e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801bda2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bda4:	eeb0 3a67 	vmov.f32	s6, s15
 801bda8:	bf08      	it	eq
 801bdaa:	4613      	moveq	r3, r2
 801bdac:	eef0 2a47 	vmov.f32	s5, s14
 801bdb0:	e789      	b.n	801bcc6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801bdb2:	140f      	asrs	r7, r1, #16
 801bdb4:	d424      	bmi.n	801be00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bdb6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801bdba:	42bd      	cmp	r5, r7
 801bdbc:	dd20      	ble.n	801be00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bdbe:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801bdc2:	d41d      	bmi.n	801be00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bdc4:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801bdc8:	4560      	cmp	r0, ip
 801bdca:	dd19      	ble.n	801be00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bdcc:	b22d      	sxth	r5, r5
 801bdce:	fb0c 7505 	mla	r5, ip, r5, r7
 801bdd2:	9801      	ldr	r0, [sp, #4]
 801bdd4:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801bdd8:	0e07      	lsrs	r7, r0, #24
 801bdda:	2fff      	cmp	r7, #255	; 0xff
 801bddc:	d116      	bne.n	801be0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801bdde:	f06f 0501 	mvn.w	r5, #1
 801bde2:	fb05 f706 	mul.w	r7, r5, r6
 801bde6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801bdea:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801bdee:	0945      	lsrs	r5, r0, #5
 801bdf0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bdf4:	ea4c 0505 	orr.w	r5, ip, r5
 801bdf8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801bdfc:	4305      	orrs	r5, r0
 801bdfe:	53e5      	strh	r5, [r4, r7]
 801be00:	9811      	ldr	r0, [sp, #68]	; 0x44
 801be02:	4401      	add	r1, r0
 801be04:	9812      	ldr	r0, [sp, #72]	; 0x48
 801be06:	3e01      	subs	r6, #1
 801be08:	4402      	add	r2, r0
 801be0a:	e790      	b.n	801bd2e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801be0c:	b2fd      	uxtb	r5, r7
 801be0e:	2f00      	cmp	r7, #0
 801be10:	d0f6      	beq.n	801be00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801be12:	f06f 0701 	mvn.w	r7, #1
 801be16:	4377      	muls	r7, r6
 801be18:	fa1f f985 	uxth.w	r9, r5
 801be1c:	f834 e007 	ldrh.w	lr, [r4, r7]
 801be20:	9702      	str	r7, [sp, #8]
 801be22:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801be26:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801be2a:	43ed      	mvns	r5, r5
 801be2c:	b2ed      	uxtb	r5, r5
 801be2e:	fb17 f709 	smulbb	r7, r7, r9
 801be32:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801be36:	fb0c 7c05 	mla	ip, ip, r5, r7
 801be3a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801be3e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801be42:	b2c0      	uxtb	r0, r0
 801be44:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801be48:	fa5f fe8e 	uxtb.w	lr, lr
 801be4c:	fb10 f009 	smulbb	r0, r0, r9
 801be50:	fb0e 0005 	mla	r0, lr, r5, r0
 801be54:	b280      	uxth	r0, r0
 801be56:	fa1f fc8c 	uxth.w	ip, ip
 801be5a:	fb1a fa09 	smulbb	sl, sl, r9
 801be5e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801be62:	fb07 a705 	mla	r7, r7, r5, sl
 801be66:	f100 0a01 	add.w	sl, r0, #1
 801be6a:	f10c 0501 	add.w	r5, ip, #1
 801be6e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801be72:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801be76:	b2bf      	uxth	r7, r7
 801be78:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801be7c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801be80:	ea4a 0c0c 	orr.w	ip, sl, ip
 801be84:	f107 0a01 	add.w	sl, r7, #1
 801be88:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801be8c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801be90:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801be94:	9802      	ldr	r0, [sp, #8]
 801be96:	ea4c 0c0a 	orr.w	ip, ip, sl
 801be9a:	f824 c000 	strh.w	ip, [r4, r0]
 801be9e:	e7af      	b.n	801be00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bea0:	f04f 0e00 	mov.w	lr, #0
 801bea4:	eba3 000e 	sub.w	r0, r3, lr
 801bea8:	2800      	cmp	r0, #0
 801beaa:	f77f af43 	ble.w	801bd34 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801beae:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801beb2:	140d      	asrs	r5, r1, #16
 801beb4:	1410      	asrs	r0, r2, #16
 801beb6:	fb06 5000 	mla	r0, r6, r0, r5
 801beba:	9d01      	ldr	r5, [sp, #4]
 801bebc:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801bec0:	0e2e      	lsrs	r6, r5, #24
 801bec2:	2eff      	cmp	r6, #255	; 0xff
 801bec4:	d112      	bne.n	801beec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801bec6:	482c      	ldr	r0, [pc, #176]	; (801bf78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801bec8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801becc:	0968      	lsrs	r0, r5, #5
 801bece:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bed2:	4330      	orrs	r0, r6
 801bed4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801bed8:	4328      	orrs	r0, r5
 801beda:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801bede:	9811      	ldr	r0, [sp, #68]	; 0x44
 801bee0:	4401      	add	r1, r0
 801bee2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801bee4:	f10e 0e01 	add.w	lr, lr, #1
 801bee8:	4402      	add	r2, r0
 801beea:	e7db      	b.n	801bea4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801beec:	b2f0      	uxtb	r0, r6
 801beee:	2e00      	cmp	r6, #0
 801bef0:	d0f5      	beq.n	801bede <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801bef2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801bef6:	fa1f f980 	uxth.w	r9, r0
 801befa:	ea4f 272c 	mov.w	r7, ip, asr #8
 801befe:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801bf02:	43c0      	mvns	r0, r0
 801bf04:	b2c0      	uxtb	r0, r0
 801bf06:	fb16 f609 	smulbb	r6, r6, r9
 801bf0a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bf0e:	fb07 6700 	mla	r7, r7, r0, r6
 801bf12:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801bf16:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801bf1a:	b2ed      	uxtb	r5, r5
 801bf1c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bf20:	fa5f fc8c 	uxtb.w	ip, ip
 801bf24:	fb15 f509 	smulbb	r5, r5, r9
 801bf28:	fb0c 5500 	mla	r5, ip, r0, r5
 801bf2c:	b2bf      	uxth	r7, r7
 801bf2e:	fb1a fa09 	smulbb	sl, sl, r9
 801bf32:	b2ad      	uxth	r5, r5
 801bf34:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bf38:	fb06 a600 	mla	r6, r6, r0, sl
 801bf3c:	1c78      	adds	r0, r7, #1
 801bf3e:	f105 0a01 	add.w	sl, r5, #1
 801bf42:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801bf46:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bf4a:	b2b6      	uxth	r6, r6
 801bf4c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bf50:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801bf54:	ea4a 0707 	orr.w	r7, sl, r7
 801bf58:	f106 0a01 	add.w	sl, r6, #1
 801bf5c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bf60:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bf64:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bf68:	ea47 070a 	orr.w	r7, r7, sl
 801bf6c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801bf70:	e7b5      	b.n	801bede <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801bf72:	b005      	add	sp, #20
 801bf74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bf78:	fffff800 	.word	0xfffff800

0801bf7c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bf7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bf80:	b087      	sub	sp, #28
 801bf82:	468b      	mov	fp, r1
 801bf84:	9815      	ldr	r0, [sp, #84]	; 0x54
 801bf86:	9203      	str	r2, [sp, #12]
 801bf88:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801bf8c:	9204      	str	r2, [sp, #16]
 801bf8e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801bf92:	6841      	ldr	r1, [r0, #4]
 801bf94:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801bf98:	fb01 2404 	mla	r4, r1, r4, r2
 801bf9c:	6802      	ldr	r2, [r0, #0]
 801bf9e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801bfa2:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801bfa6:	3201      	adds	r2, #1
 801bfa8:	f022 0201 	bic.w	r2, r2, #1
 801bfac:	9200      	str	r2, [sp, #0]
 801bfae:	f8d9 2000 	ldr.w	r2, [r9]
 801bfb2:	9201      	str	r2, [sp, #4]
 801bfb4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bfb8:	f1bb 0f00 	cmp.w	fp, #0
 801bfbc:	dc03      	bgt.n	801bfc6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801bfbe:	9a03      	ldr	r2, [sp, #12]
 801bfc0:	2a00      	cmp	r2, #0
 801bfc2:	f340 8169 	ble.w	801c298 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801bfc6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bfc8:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801bfcc:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801bfd0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801bfd4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bfd6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801bfda:	2b00      	cmp	r3, #0
 801bfdc:	dd0e      	ble.n	801bffc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801bfde:	1402      	asrs	r2, r0, #16
 801bfe0:	d405      	bmi.n	801bfee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801bfe2:	42ba      	cmp	r2, r7
 801bfe4:	da03      	bge.n	801bfee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801bfe6:	140a      	asrs	r2, r1, #16
 801bfe8:	d401      	bmi.n	801bfee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801bfea:	42b2      	cmp	r2, r6
 801bfec:	db07      	blt.n	801bffe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801bfee:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bff0:	4410      	add	r0, r2
 801bff2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bff4:	3b01      	subs	r3, #1
 801bff6:	4411      	add	r1, r2
 801bff8:	3402      	adds	r4, #2
 801bffa:	e7ee      	b.n	801bfda <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801bffc:	d017      	beq.n	801c02e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801bffe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c000:	1e5a      	subs	r2, r3, #1
 801c002:	fb05 0502 	mla	r5, r5, r2, r0
 801c006:	142d      	asrs	r5, r5, #16
 801c008:	d409      	bmi.n	801c01e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c00a:	42bd      	cmp	r5, r7
 801c00c:	da07      	bge.n	801c01e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c00e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c010:	fb05 1202 	mla	r2, r5, r2, r1
 801c014:	1412      	asrs	r2, r2, #16
 801c016:	d402      	bmi.n	801c01e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c018:	42b2      	cmp	r2, r6
 801c01a:	f2c0 80c7 	blt.w	801c1ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801c01e:	2700      	movs	r7, #0
 801c020:	19da      	adds	r2, r3, r7
 801c022:	2a00      	cmp	r2, #0
 801c024:	dc3e      	bgt.n	801c0a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801c026:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c02a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c02e:	f1bb 0f00 	cmp.w	fp, #0
 801c032:	f340 8131 	ble.w	801c298 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801c036:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c03a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c03e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c042:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c044:	f1bb 0b01 	subs.w	fp, fp, #1
 801c048:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c04c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c050:	eeb0 6a62 	vmov.f32	s12, s5
 801c054:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c058:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c05c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c060:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801c064:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c068:	eeb0 6a43 	vmov.f32	s12, s6
 801c06c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c070:	ee12 2a90 	vmov	r2, s5
 801c074:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c078:	fb92 f3f3 	sdiv	r3, r2, r3
 801c07c:	ee13 2a10 	vmov	r2, s6
 801c080:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c084:	9313      	str	r3, [sp, #76]	; 0x4c
 801c086:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c088:	fb92 f3f3 	sdiv	r3, r2, r3
 801c08c:	9a03      	ldr	r2, [sp, #12]
 801c08e:	9314      	str	r3, [sp, #80]	; 0x50
 801c090:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801c094:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c096:	eeb0 3a67 	vmov.f32	s6, s15
 801c09a:	bf08      	it	eq
 801c09c:	4613      	moveq	r3, r2
 801c09e:	eef0 2a47 	vmov.f32	s5, s14
 801c0a2:	e789      	b.n	801bfb8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c0a4:	1405      	asrs	r5, r0, #16
 801c0a6:	d435      	bmi.n	801c114 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c0a8:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801c0ac:	42aa      	cmp	r2, r5
 801c0ae:	dd31      	ble.n	801c114 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c0b0:	140e      	asrs	r6, r1, #16
 801c0b2:	d42f      	bmi.n	801c114 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c0b4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801c0b8:	42b2      	cmp	r2, r6
 801c0ba:	dd2b      	ble.n	801c114 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c0bc:	9a00      	ldr	r2, [sp, #0]
 801c0be:	fb06 5502 	mla	r5, r6, r2, r5
 801c0c2:	086a      	lsrs	r2, r5, #1
 801c0c4:	9e01      	ldr	r6, [sp, #4]
 801c0c6:	5cb2      	ldrb	r2, [r6, r2]
 801c0c8:	07ee      	lsls	r6, r5, #31
 801c0ca:	bf54      	ite	pl
 801c0cc:	f002 020f 	andpl.w	r2, r2, #15
 801c0d0:	1112      	asrmi	r2, r2, #4
 801c0d2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c0d6:	b2d2      	uxtb	r2, r2
 801c0d8:	b1e2      	cbz	r2, 801c114 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c0da:	9d04      	ldr	r5, [sp, #16]
 801c0dc:	436a      	muls	r2, r5
 801c0de:	1c55      	adds	r5, r2, #1
 801c0e0:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801c0e4:	4d6e      	ldr	r5, [pc, #440]	; (801c2a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801c0e6:	682d      	ldr	r5, [r5, #0]
 801c0e8:	1212      	asrs	r2, r2, #8
 801c0ea:	0a2e      	lsrs	r6, r5, #8
 801c0ec:	2aff      	cmp	r2, #255	; 0xff
 801c0ee:	9605      	str	r6, [sp, #20]
 801c0f0:	d116      	bne.n	801c120 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801c0f2:	f06f 0201 	mvn.w	r2, #1
 801c0f6:	fb02 fc07 	mul.w	ip, r2, r7
 801c0fa:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801c0fe:	096a      	lsrs	r2, r5, #5
 801c100:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c104:	f026 0607 	bic.w	r6, r6, #7
 801c108:	4316      	orrs	r6, r2
 801c10a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c10e:	432e      	orrs	r6, r5
 801c110:	f824 600c 	strh.w	r6, [r4, ip]
 801c114:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c116:	4410      	add	r0, r2
 801c118:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c11a:	3f01      	subs	r7, #1
 801c11c:	4411      	add	r1, r2
 801c11e:	e77f      	b.n	801c020 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801c120:	f06f 0601 	mvn.w	r6, #1
 801c124:	437e      	muls	r6, r7
 801c126:	fa1f fa82 	uxth.w	sl, r2
 801c12a:	f834 8006 	ldrh.w	r8, [r4, r6]
 801c12e:	9602      	str	r6, [sp, #8]
 801c130:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801c134:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801c138:	43d2      	mvns	r2, r2
 801c13a:	b2d2      	uxtb	r2, r2
 801c13c:	fb1c fc0a 	smulbb	ip, ip, sl
 801c140:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c144:	fb0e ce02 	mla	lr, lr, r2, ip
 801c148:	b2ed      	uxtb	r5, r5
 801c14a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801c14e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801c152:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801c156:	fa5f f888 	uxtb.w	r8, r8
 801c15a:	fb15 f50a 	smulbb	r5, r5, sl
 801c15e:	fb08 5502 	mla	r5, r8, r2, r5
 801c162:	fa1f fe8e 	uxth.w	lr, lr
 801c166:	fb16 f60a 	smulbb	r6, r6, sl
 801c16a:	b2ad      	uxth	r5, r5
 801c16c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801c170:	fb0c 6c02 	mla	ip, ip, r2, r6
 801c174:	f10e 0201 	add.w	r2, lr, #1
 801c178:	1c6e      	adds	r6, r5, #1
 801c17a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801c17e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801c182:	fa1f fc8c 	uxth.w	ip, ip
 801c186:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c18a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801c18e:	ea46 0e0e 	orr.w	lr, r6, lr
 801c192:	f10c 0601 	add.w	r6, ip, #1
 801c196:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801c19a:	0976      	lsrs	r6, r6, #5
 801c19c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c1a0:	9a02      	ldr	r2, [sp, #8]
 801c1a2:	ea4e 0e06 	orr.w	lr, lr, r6
 801c1a6:	f824 e002 	strh.w	lr, [r4, r2]
 801c1aa:	e7b3      	b.n	801c114 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c1ac:	f04f 0800 	mov.w	r8, #0
 801c1b0:	eba3 0208 	sub.w	r2, r3, r8
 801c1b4:	2a00      	cmp	r2, #0
 801c1b6:	f77f af36 	ble.w	801c026 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801c1ba:	9e00      	ldr	r6, [sp, #0]
 801c1bc:	1402      	asrs	r2, r0, #16
 801c1be:	140d      	asrs	r5, r1, #16
 801c1c0:	fb06 2505 	mla	r5, r6, r5, r2
 801c1c4:	086a      	lsrs	r2, r5, #1
 801c1c6:	9e01      	ldr	r6, [sp, #4]
 801c1c8:	5cb2      	ldrb	r2, [r6, r2]
 801c1ca:	07ed      	lsls	r5, r5, #31
 801c1cc:	bf54      	ite	pl
 801c1ce:	f002 020f 	andpl.w	r2, r2, #15
 801c1d2:	1112      	asrmi	r2, r2, #4
 801c1d4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c1d8:	b2d2      	uxtb	r2, r2
 801c1da:	b1c2      	cbz	r2, 801c20e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801c1dc:	9d04      	ldr	r5, [sp, #16]
 801c1de:	436a      	muls	r2, r5
 801c1e0:	1c55      	adds	r5, r2, #1
 801c1e2:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801c1e6:	4d2e      	ldr	r5, [pc, #184]	; (801c2a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801c1e8:	1212      	asrs	r2, r2, #8
 801c1ea:	682e      	ldr	r6, [r5, #0]
 801c1ec:	2aff      	cmp	r2, #255	; 0xff
 801c1ee:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801c1f2:	d113      	bne.n	801c21c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801c1f4:	0972      	lsrs	r2, r6, #5
 801c1f6:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801c1fa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c1fe:	f025 0507 	bic.w	r5, r5, #7
 801c202:	4315      	orrs	r5, r2
 801c204:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801c208:	4335      	orrs	r5, r6
 801c20a:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801c20e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c210:	4410      	add	r0, r2
 801c212:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c214:	f108 0801 	add.w	r8, r8, #1
 801c218:	4411      	add	r1, r2
 801c21a:	e7c9      	b.n	801c1b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c21c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801c220:	fa1f fa82 	uxth.w	sl, r2
 801c224:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c228:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801c22c:	43d2      	mvns	r2, r2
 801c22e:	b2d2      	uxtb	r2, r2
 801c230:	fb17 f70a 	smulbb	r7, r7, sl
 801c234:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c238:	fb0c 7c02 	mla	ip, ip, r2, r7
 801c23c:	b2f6      	uxtb	r6, r6
 801c23e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801c242:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c246:	fa5f fe8e 	uxtb.w	lr, lr
 801c24a:	fb16 f60a 	smulbb	r6, r6, sl
 801c24e:	fb0e 6602 	mla	r6, lr, r2, r6
 801c252:	b2ed      	uxtb	r5, r5
 801c254:	fa1f fc8c 	uxth.w	ip, ip
 801c258:	fb15 f50a 	smulbb	r5, r5, sl
 801c25c:	b2b6      	uxth	r6, r6
 801c25e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c262:	fb07 5702 	mla	r7, r7, r2, r5
 801c266:	f10c 0201 	add.w	r2, ip, #1
 801c26a:	1c75      	adds	r5, r6, #1
 801c26c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801c270:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801c274:	b2bf      	uxth	r7, r7
 801c276:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c27a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c27e:	ea45 0c0c 	orr.w	ip, r5, ip
 801c282:	1c7d      	adds	r5, r7, #1
 801c284:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801c288:	096d      	lsrs	r5, r5, #5
 801c28a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c28e:	ea4c 0c05 	orr.w	ip, ip, r5
 801c292:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801c296:	e7ba      	b.n	801c20e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801c298:	b007      	add	sp, #28
 801c29a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c29e:	bf00      	nop
 801c2a0:	2001382c 	.word	0x2001382c

0801c2a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c2a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c2a8:	b087      	sub	sp, #28
 801c2aa:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801c5b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801c2ae:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c2b0:	9205      	str	r2, [sp, #20]
 801c2b2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801c2b6:	9101      	str	r1, [sp, #4]
 801c2b8:	6841      	ldr	r1, [r0, #4]
 801c2ba:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801c2be:	fb01 2404 	mla	r4, r1, r4, r2
 801c2c2:	6802      	ldr	r2, [r0, #0]
 801c2c4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c2c8:	f8db 2008 	ldr.w	r2, [fp, #8]
 801c2cc:	3201      	adds	r2, #1
 801c2ce:	f022 0201 	bic.w	r2, r2, #1
 801c2d2:	9202      	str	r2, [sp, #8]
 801c2d4:	f8db 2000 	ldr.w	r2, [fp]
 801c2d8:	9203      	str	r2, [sp, #12]
 801c2da:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c2de:	9a01      	ldr	r2, [sp, #4]
 801c2e0:	2a00      	cmp	r2, #0
 801c2e2:	dc03      	bgt.n	801c2ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c2e4:	9a05      	ldr	r2, [sp, #20]
 801c2e6:	2a00      	cmp	r2, #0
 801c2e8:	f340 8162 	ble.w	801c5b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801c2ec:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c2ee:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801c2f2:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801c2f6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c2fa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c2fc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c300:	2b00      	cmp	r3, #0
 801c302:	dd0e      	ble.n	801c322 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c304:	1402      	asrs	r2, r0, #16
 801c306:	d405      	bmi.n	801c314 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c308:	42ba      	cmp	r2, r7
 801c30a:	da03      	bge.n	801c314 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c30c:	140a      	asrs	r2, r1, #16
 801c30e:	d401      	bmi.n	801c314 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c310:	42b2      	cmp	r2, r6
 801c312:	db07      	blt.n	801c324 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c314:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c316:	4410      	add	r0, r2
 801c318:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c31a:	3b01      	subs	r3, #1
 801c31c:	4411      	add	r1, r2
 801c31e:	3402      	adds	r4, #2
 801c320:	e7ee      	b.n	801c300 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801c322:	d017      	beq.n	801c354 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801c324:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c326:	1e5a      	subs	r2, r3, #1
 801c328:	fb05 0502 	mla	r5, r5, r2, r0
 801c32c:	142d      	asrs	r5, r5, #16
 801c32e:	d409      	bmi.n	801c344 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c330:	42bd      	cmp	r5, r7
 801c332:	da07      	bge.n	801c344 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c334:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c336:	fb05 1202 	mla	r2, r5, r2, r1
 801c33a:	1412      	asrs	r2, r2, #16
 801c33c:	d402      	bmi.n	801c344 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c33e:	42b2      	cmp	r2, r6
 801c340:	f2c0 80c3 	blt.w	801c4ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801c344:	2500      	movs	r5, #0
 801c346:	195a      	adds	r2, r3, r5
 801c348:	2a00      	cmp	r2, #0
 801c34a:	dc3f      	bgt.n	801c3cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801c34c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c350:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c354:	9b01      	ldr	r3, [sp, #4]
 801c356:	2b00      	cmp	r3, #0
 801c358:	f340 812a 	ble.w	801c5b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801c35c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c360:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c364:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c368:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c36a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c36e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c372:	eeb0 6a62 	vmov.f32	s12, s5
 801c376:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c37a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c37e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c382:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801c386:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c38a:	eeb0 6a43 	vmov.f32	s12, s6
 801c38e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c392:	ee12 2a90 	vmov	r2, s5
 801c396:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c39a:	fb92 f3f3 	sdiv	r3, r2, r3
 801c39e:	ee13 2a10 	vmov	r2, s6
 801c3a2:	9313      	str	r3, [sp, #76]	; 0x4c
 801c3a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c3a6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c3aa:	9314      	str	r3, [sp, #80]	; 0x50
 801c3ac:	9b01      	ldr	r3, [sp, #4]
 801c3ae:	9a05      	ldr	r2, [sp, #20]
 801c3b0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c3b4:	3b01      	subs	r3, #1
 801c3b6:	9301      	str	r3, [sp, #4]
 801c3b8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801c3bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c3be:	eeb0 3a67 	vmov.f32	s6, s15
 801c3c2:	bf08      	it	eq
 801c3c4:	4613      	moveq	r3, r2
 801c3c6:	eef0 2a47 	vmov.f32	s5, s14
 801c3ca:	e788      	b.n	801c2de <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c3cc:	1406      	asrs	r6, r0, #16
 801c3ce:	d42c      	bmi.n	801c42a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c3d0:	f8db 2008 	ldr.w	r2, [fp, #8]
 801c3d4:	42b2      	cmp	r2, r6
 801c3d6:	dd28      	ble.n	801c42a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c3d8:	140f      	asrs	r7, r1, #16
 801c3da:	d426      	bmi.n	801c42a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c3dc:	f8db 200c 	ldr.w	r2, [fp, #12]
 801c3e0:	42ba      	cmp	r2, r7
 801c3e2:	dd22      	ble.n	801c42a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c3e4:	9a02      	ldr	r2, [sp, #8]
 801c3e6:	fb07 6602 	mla	r6, r7, r2, r6
 801c3ea:	0872      	lsrs	r2, r6, #1
 801c3ec:	9f03      	ldr	r7, [sp, #12]
 801c3ee:	5cba      	ldrb	r2, [r7, r2]
 801c3f0:	07f6      	lsls	r6, r6, #31
 801c3f2:	bf54      	ite	pl
 801c3f4:	f002 020f 	andpl.w	r2, r2, #15
 801c3f8:	1112      	asrmi	r2, r2, #4
 801c3fa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c3fe:	b2d2      	uxtb	r2, r2
 801c400:	2aff      	cmp	r2, #255	; 0xff
 801c402:	d118      	bne.n	801c436 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801c404:	f8d8 2000 	ldr.w	r2, [r8]
 801c408:	f06f 0601 	mvn.w	r6, #1
 801c40c:	fb06 f705 	mul.w	r7, r6, r5
 801c410:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801c414:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801c418:	0956      	lsrs	r6, r2, #5
 801c41a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c41e:	ea4c 0606 	orr.w	r6, ip, r6
 801c422:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c426:	4316      	orrs	r6, r2
 801c428:	53e6      	strh	r6, [r4, r7]
 801c42a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c42c:	4410      	add	r0, r2
 801c42e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c430:	3d01      	subs	r5, #1
 801c432:	4411      	add	r1, r2
 801c434:	e787      	b.n	801c346 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c436:	2a00      	cmp	r2, #0
 801c438:	d0f7      	beq.n	801c42a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c43a:	f06f 0601 	mvn.w	r6, #1
 801c43e:	436e      	muls	r6, r5
 801c440:	f8d8 c000 	ldr.w	ip, [r8]
 801c444:	f834 e006 	ldrh.w	lr, [r4, r6]
 801c448:	9604      	str	r6, [sp, #16]
 801c44a:	fa1f f982 	uxth.w	r9, r2
 801c44e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801c452:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801c456:	43d2      	mvns	r2, r2
 801c458:	b2d2      	uxtb	r2, r2
 801c45a:	fb16 f609 	smulbb	r6, r6, r9
 801c45e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c462:	fb07 6702 	mla	r7, r7, r2, r6
 801c466:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801c46a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801c46e:	fa5f fc8c 	uxtb.w	ip, ip
 801c472:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c476:	fa5f fe8e 	uxtb.w	lr, lr
 801c47a:	fb1c fc09 	smulbb	ip, ip, r9
 801c47e:	fb0e cc02 	mla	ip, lr, r2, ip
 801c482:	b2bf      	uxth	r7, r7
 801c484:	fb1a fa09 	smulbb	sl, sl, r9
 801c488:	fa1f fc8c 	uxth.w	ip, ip
 801c48c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c490:	fb06 a602 	mla	r6, r6, r2, sl
 801c494:	1c7a      	adds	r2, r7, #1
 801c496:	f10c 0a01 	add.w	sl, ip, #1
 801c49a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c49e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801c4a2:	b2b6      	uxth	r6, r6
 801c4a4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c4a8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c4ac:	ea4a 0707 	orr.w	r7, sl, r7
 801c4b0:	f106 0a01 	add.w	sl, r6, #1
 801c4b4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c4b8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c4bc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c4c0:	9a04      	ldr	r2, [sp, #16]
 801c4c2:	ea47 070a 	orr.w	r7, r7, sl
 801c4c6:	52a7      	strh	r7, [r4, r2]
 801c4c8:	e7af      	b.n	801c42a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c4ca:	f04f 0e00 	mov.w	lr, #0
 801c4ce:	eba3 020e 	sub.w	r2, r3, lr
 801c4d2:	2a00      	cmp	r2, #0
 801c4d4:	f77f af3a 	ble.w	801c34c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801c4d8:	9e02      	ldr	r6, [sp, #8]
 801c4da:	1402      	asrs	r2, r0, #16
 801c4dc:	140d      	asrs	r5, r1, #16
 801c4de:	fb06 2505 	mla	r5, r6, r5, r2
 801c4e2:	086a      	lsrs	r2, r5, #1
 801c4e4:	9e03      	ldr	r6, [sp, #12]
 801c4e6:	5cb2      	ldrb	r2, [r6, r2]
 801c4e8:	07ed      	lsls	r5, r5, #31
 801c4ea:	bf54      	ite	pl
 801c4ec:	f002 020f 	andpl.w	r2, r2, #15
 801c4f0:	1112      	asrmi	r2, r2, #4
 801c4f2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c4f6:	b2d2      	uxtb	r2, r2
 801c4f8:	2aff      	cmp	r2, #255	; 0xff
 801c4fa:	d115      	bne.n	801c528 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801c4fc:	f8d8 5000 	ldr.w	r5, [r8]
 801c500:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801c504:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801c508:	096a      	lsrs	r2, r5, #5
 801c50a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c50e:	4332      	orrs	r2, r6
 801c510:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c514:	432a      	orrs	r2, r5
 801c516:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801c51a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c51c:	4410      	add	r0, r2
 801c51e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c520:	f10e 0e01 	add.w	lr, lr, #1
 801c524:	4411      	add	r1, r2
 801c526:	e7d2      	b.n	801c4ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c528:	2a00      	cmp	r2, #0
 801c52a:	d0f6      	beq.n	801c51a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801c52c:	f8d8 7000 	ldr.w	r7, [r8]
 801c530:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801c534:	fa1f f982 	uxth.w	r9, r2
 801c538:	ea4f 262c 	mov.w	r6, ip, asr #8
 801c53c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801c540:	43d2      	mvns	r2, r2
 801c542:	b2d2      	uxtb	r2, r2
 801c544:	fb15 f509 	smulbb	r5, r5, r9
 801c548:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c54c:	fb06 5602 	mla	r6, r6, r2, r5
 801c550:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801c554:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801c558:	b2ff      	uxtb	r7, r7
 801c55a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c55e:	fa5f fc8c 	uxtb.w	ip, ip
 801c562:	fb17 f709 	smulbb	r7, r7, r9
 801c566:	fb0c 7702 	mla	r7, ip, r2, r7
 801c56a:	b2b6      	uxth	r6, r6
 801c56c:	fb1a fa09 	smulbb	sl, sl, r9
 801c570:	b2bf      	uxth	r7, r7
 801c572:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c576:	fb05 a502 	mla	r5, r5, r2, sl
 801c57a:	1c72      	adds	r2, r6, #1
 801c57c:	f107 0a01 	add.w	sl, r7, #1
 801c580:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801c584:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801c588:	b2ad      	uxth	r5, r5
 801c58a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c58e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c592:	ea4a 0606 	orr.w	r6, sl, r6
 801c596:	f105 0a01 	add.w	sl, r5, #1
 801c59a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c59e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c5a2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c5a6:	ea46 060a 	orr.w	r6, r6, sl
 801c5aa:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801c5ae:	e7b4      	b.n	801c51a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801c5b0:	b007      	add	sp, #28
 801c5b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c5b6:	bf00      	nop
 801c5b8:	2001382c 	.word	0x2001382c

0801c5bc <_ZN8touchgfx8LCD16bppD1Ev>:
 801c5bc:	4770      	bx	lr

0801c5be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801c5be:	4770      	bx	lr

0801c5c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801c5c0:	4770      	bx	lr

0801c5c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801c5c2:	4770      	bx	lr

0801c5c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801c5c4:	4770      	bx	lr

0801c5c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801c5c6:	4770      	bx	lr

0801c5c8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801c5c8:	4770      	bx	lr

0801c5ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801c5ca:	4770      	bx	lr

0801c5cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801c5cc:	4770      	bx	lr

0801c5ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801c5ce:	4770      	bx	lr

0801c5d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c5d0:	4770      	bx	lr

0801c5d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c5d2:	4770      	bx	lr

0801c5d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c5d4:	4770      	bx	lr

0801c5d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801c5d6:	4770      	bx	lr

0801c5d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801c5d8:	4770      	bx	lr

0801c5da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801c5da:	4770      	bx	lr

0801c5dc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c5dc:	4770      	bx	lr

0801c5de <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801c5de:	4770      	bx	lr

0801c5e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c5e0:	4770      	bx	lr

0801c5e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c5e2:	4770      	bx	lr

0801c5e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801c5e4:	4770      	bx	lr

0801c5e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801c5e6:	4770      	bx	lr

0801c5e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c5e8:	4770      	bx	lr

0801c5ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c5ea:	4770      	bx	lr

0801c5ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c5ec:	4770      	bx	lr

0801c5ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801c5ee:	4770      	bx	lr

0801c5f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c5f0:	4770      	bx	lr

0801c5f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801c5f2:	4770      	bx	lr

0801c5f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c5f4:	4770      	bx	lr

0801c5f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801c5f6:	4770      	bx	lr

0801c5f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c5f8:	4770      	bx	lr

0801c5fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801c5fa:	4770      	bx	lr

0801c5fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801c5fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c600:	b088      	sub	sp, #32
 801c602:	ac08      	add	r4, sp, #32
 801c604:	4606      	mov	r6, r0
 801c606:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801c60a:	4620      	mov	r0, r4
 801c60c:	4688      	mov	r8, r1
 801c60e:	4691      	mov	r9, r2
 801c610:	f7fd fc62 	bl	8019ed8 <_ZNK8touchgfx6Bitmap7getDataEv>
 801c614:	6833      	ldr	r3, [r6, #0]
 801c616:	4605      	mov	r5, r0
 801c618:	4620      	mov	r0, r4
 801c61a:	699f      	ldr	r7, [r3, #24]
 801c61c:	f7fd fb70 	bl	8019d00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801c620:	4682      	mov	sl, r0
 801c622:	4620      	mov	r0, r4
 801c624:	f7fd fba0 	bl	8019d68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801c628:	9500      	str	r5, [sp, #0]
 801c62a:	e9cd a001 	strd	sl, r0, [sp, #4]
 801c62e:	464b      	mov	r3, r9
 801c630:	a806      	add	r0, sp, #24
 801c632:	4642      	mov	r2, r8
 801c634:	4631      	mov	r1, r6
 801c636:	47b8      	blx	r7
 801c638:	4628      	mov	r0, r5
 801c63a:	b008      	add	sp, #32
 801c63c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801c640 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801c640:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801c644:	2300      	movs	r3, #0
 801c646:	9300      	str	r3, [sp, #0]
 801c648:	4b3d      	ldr	r3, [pc, #244]	; (801c740 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801c64a:	781b      	ldrb	r3, [r3, #0]
 801c64c:	2b00      	cmp	r3, #0
 801c64e:	d137      	bne.n	801c6c0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801c650:	4a3c      	ldr	r2, [pc, #240]	; (801c744 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c652:	f9b2 2000 	ldrsh.w	r2, [r2]
 801c656:	f8ad 2004 	strh.w	r2, [sp, #4]
 801c65a:	2b00      	cmp	r3, #0
 801c65c:	d132      	bne.n	801c6c4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801c65e:	4b3a      	ldr	r3, [pc, #232]	; (801c748 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801c660:	f9b3 3000 	ldrsh.w	r3, [r3]
 801c664:	6808      	ldr	r0, [r1, #0]
 801c666:	6849      	ldr	r1, [r1, #4]
 801c668:	f8ad 3006 	strh.w	r3, [sp, #6]
 801c66c:	ac02      	add	r4, sp, #8
 801c66e:	ab02      	add	r3, sp, #8
 801c670:	c303      	stmia	r3!, {r0, r1}
 801c672:	4669      	mov	r1, sp
 801c674:	4620      	mov	r0, r4
 801c676:	f7f9 fd83 	bl	8016180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c67a:	4668      	mov	r0, sp
 801c67c:	f7f9 fd3c 	bl	80160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c680:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801c684:	f8bd 2000 	ldrh.w	r2, [sp]
 801c688:	4d30      	ldr	r5, [pc, #192]	; (801c74c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801c68a:	4413      	add	r3, r2
 801c68c:	f8ad 3008 	strh.w	r3, [sp, #8]
 801c690:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801c694:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801c698:	6828      	ldr	r0, [r5, #0]
 801c69a:	4413      	add	r3, r2
 801c69c:	f8ad 300a 	strh.w	r3, [sp, #10]
 801c6a0:	6803      	ldr	r3, [r0, #0]
 801c6a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c6a4:	4798      	blx	r3
 801c6a6:	f010 0f01 	tst.w	r0, #1
 801c6aa:	462f      	mov	r7, r5
 801c6ac:	d00c      	beq.n	801c6c8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801c6ae:	6828      	ldr	r0, [r5, #0]
 801c6b0:	6803      	ldr	r3, [r0, #0]
 801c6b2:	e894 0006 	ldmia.w	r4, {r1, r2}
 801c6b6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801c6b8:	4798      	blx	r3
 801c6ba:	b004      	add	sp, #16
 801c6bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c6c0:	4a21      	ldr	r2, [pc, #132]	; (801c748 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801c6c2:	e7c6      	b.n	801c652 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801c6c4:	4b1f      	ldr	r3, [pc, #124]	; (801c744 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c6c6:	e7cb      	b.n	801c660 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801c6c8:	6838      	ldr	r0, [r7, #0]
 801c6ca:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801c6ce:	6803      	ldr	r3, [r0, #0]
 801c6d0:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801c6d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c6d6:	4798      	blx	r3
 801c6d8:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801c6dc:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801c6e0:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801c6e4:	fb16 3602 	smlabb	r6, r6, r2, r3
 801c6e8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801c6ec:	6838      	ldr	r0, [r7, #0]
 801c6ee:	6803      	ldr	r3, [r0, #0]
 801c6f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c6f2:	4798      	blx	r3
 801c6f4:	4a13      	ldr	r2, [pc, #76]	; (801c744 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c6f6:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801c6fa:	8813      	ldrh	r3, [r2, #0]
 801c6fc:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801c700:	fb03 1404 	mla	r4, r3, r4, r1
 801c704:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801c708:	435d      	muls	r5, r3
 801c70a:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c70e:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801c712:	4691      	mov	r9, r2
 801c714:	6838      	ldr	r0, [r7, #0]
 801c716:	42ac      	cmp	r4, r5
 801c718:	6803      	ldr	r3, [r0, #0]
 801c71a:	d20e      	bcs.n	801c73a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801c71c:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801c720:	4632      	mov	r2, r6
 801c722:	4643      	mov	r3, r8
 801c724:	4621      	mov	r1, r4
 801c726:	47d0      	blx	sl
 801c728:	f8b9 3000 	ldrh.w	r3, [r9]
 801c72c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c730:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801c734:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c738:	e7ec      	b.n	801c714 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801c73a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c73c:	4798      	blx	r3
 801c73e:	e7bc      	b.n	801c6ba <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801c740:	20013814 	.word	0x20013814
 801c744:	20013816 	.word	0x20013816
 801c748:	20013818 	.word	0x20013818
 801c74c:	2001381c 	.word	0x2001381c

0801c750 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801c750:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c754:	b08b      	sub	sp, #44	; 0x2c
 801c756:	460f      	mov	r7, r1
 801c758:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801c75c:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801c760:	4616      	mov	r6, r2
 801c762:	f1bb 0f00 	cmp.w	fp, #0
 801c766:	d04a      	beq.n	801c7fe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801c768:	6810      	ldr	r0, [r2, #0]
 801c76a:	6851      	ldr	r1, [r2, #4]
 801c76c:	ad06      	add	r5, sp, #24
 801c76e:	c503      	stmia	r5!, {r0, r1}
 801c770:	6818      	ldr	r0, [r3, #0]
 801c772:	6859      	ldr	r1, [r3, #4]
 801c774:	ad08      	add	r5, sp, #32
 801c776:	c503      	stmia	r5!, {r0, r1}
 801c778:	a806      	add	r0, sp, #24
 801c77a:	f7f9 fcbd 	bl	80160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c77e:	4631      	mov	r1, r6
 801c780:	a808      	add	r0, sp, #32
 801c782:	f7f9 fcfd 	bl	8016180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c786:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801c78a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801c78e:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801c792:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801c796:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801c79a:	fb16 2103 	smlabb	r1, r6, r3, r2
 801c79e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801c7a2:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801c7a6:	4f5f      	ldr	r7, [pc, #380]	; (801c924 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801c7a8:	440a      	add	r2, r1
 801c7aa:	f8ad 2020 	strh.w	r2, [sp, #32]
 801c7ae:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801c7b2:	6838      	ldr	r0, [r7, #0]
 801c7b4:	4413      	add	r3, r2
 801c7b6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801c7ba:	6803      	ldr	r3, [r0, #0]
 801c7bc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c7be:	4798      	blx	r3
 801c7c0:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801c7c4:	46b9      	mov	r9, r7
 801c7c6:	d11d      	bne.n	801c804 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801c7c8:	b9fc      	cbnz	r4, 801c80a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801c7ca:	f010 0f01 	tst.w	r0, #1
 801c7ce:	d01c      	beq.n	801c80a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801c7d0:	f8d9 0000 	ldr.w	r0, [r9]
 801c7d4:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801c7d8:	6801      	ldr	r1, [r0, #0]
 801c7da:	f8cd b00c 	str.w	fp, [sp, #12]
 801c7de:	2700      	movs	r7, #0
 801c7e0:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801c7e4:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801c7e8:	9402      	str	r4, [sp, #8]
 801c7ea:	b2ad      	uxth	r5, r5
 801c7ec:	fa1f f488 	uxth.w	r4, r8
 801c7f0:	9501      	str	r5, [sp, #4]
 801c7f2:	9400      	str	r4, [sp, #0]
 801c7f4:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801c7f6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801c7fa:	4631      	mov	r1, r6
 801c7fc:	47a0      	blx	r4
 801c7fe:	b00b      	add	sp, #44	; 0x2c
 801c800:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c804:	f010 0f04 	tst.w	r0, #4
 801c808:	e7e1      	b.n	801c7ce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801c80a:	f8d9 0000 	ldr.w	r0, [r9]
 801c80e:	6803      	ldr	r3, [r0, #0]
 801c810:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c812:	4798      	blx	r3
 801c814:	4b44      	ldr	r3, [pc, #272]	; (801c928 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801c816:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801c81a:	881a      	ldrh	r2, [r3, #0]
 801c81c:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801c820:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801c824:	fb02 1404 	mla	r4, r2, r4, r1
 801c828:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801c82c:	469a      	mov	sl, r3
 801c82e:	fb05 f502 	mul.w	r5, r5, r2
 801c832:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801c836:	d059      	beq.n	801c8ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801c838:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801c83c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c840:	fa1f f28b 	uxth.w	r2, fp
 801c844:	fa1f f989 	uxth.w	r9, r9
 801c848:	469e      	mov	lr, r3
 801c84a:	42ac      	cmp	r4, r5
 801c84c:	d264      	bcs.n	801c918 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c84e:	eb04 0a07 	add.w	sl, r4, r7
 801c852:	4554      	cmp	r4, sl
 801c854:	d23d      	bcs.n	801c8d2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801c856:	8821      	ldrh	r1, [r4, #0]
 801c858:	f836 3b02 	ldrh.w	r3, [r6], #2
 801c85c:	1208      	asrs	r0, r1, #8
 801c85e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801c862:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c866:	fb10 f009 	smulbb	r0, r0, r9
 801c86a:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801c86e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c872:	00c9      	lsls	r1, r1, #3
 801c874:	fb0c 0c02 	mla	ip, ip, r2, r0
 801c878:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c87c:	10d8      	asrs	r0, r3, #3
 801c87e:	b2c9      	uxtb	r1, r1
 801c880:	00db      	lsls	r3, r3, #3
 801c882:	fa1f fc8c 	uxth.w	ip, ip
 801c886:	fb1b fb09 	smulbb	fp, fp, r9
 801c88a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c88e:	b2db      	uxtb	r3, r3
 801c890:	fb11 f109 	smulbb	r1, r1, r9
 801c894:	fb00 b002 	mla	r0, r0, r2, fp
 801c898:	fb03 1302 	mla	r3, r3, r2, r1
 801c89c:	f10c 0b01 	add.w	fp, ip, #1
 801c8a0:	b29b      	uxth	r3, r3
 801c8a2:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801c8a6:	b280      	uxth	r0, r0
 801c8a8:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801c8ac:	f103 0c01 	add.w	ip, r3, #1
 801c8b0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801c8b4:	1c43      	adds	r3, r0, #1
 801c8b6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c8ba:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c8be:	0940      	lsrs	r0, r0, #5
 801c8c0:	ea4c 0c0b 	orr.w	ip, ip, fp
 801c8c4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c8c8:	ea4c 0c00 	orr.w	ip, ip, r0
 801c8cc:	f824 cb02 	strh.w	ip, [r4], #2
 801c8d0:	e7bf      	b.n	801c852 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801c8d2:	f8be 3000 	ldrh.w	r3, [lr]
 801c8d6:	eba3 0308 	sub.w	r3, r3, r8
 801c8da:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c8de:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c8e2:	eba3 0308 	sub.w	r3, r3, r8
 801c8e6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c8ea:	e7ae      	b.n	801c84a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801c8ec:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c8f0:	f8d9 0000 	ldr.w	r0, [r9]
 801c8f4:	42ac      	cmp	r4, r5
 801c8f6:	6803      	ldr	r3, [r0, #0]
 801c8f8:	d20e      	bcs.n	801c918 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c8fa:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801c8fe:	4632      	mov	r2, r6
 801c900:	463b      	mov	r3, r7
 801c902:	4621      	mov	r1, r4
 801c904:	47c0      	blx	r8
 801c906:	f8ba 3000 	ldrh.w	r3, [sl]
 801c90a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c90e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c912:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c916:	e7eb      	b.n	801c8f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801c918:	4b02      	ldr	r3, [pc, #8]	; (801c924 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801c91a:	6818      	ldr	r0, [r3, #0]
 801c91c:	6803      	ldr	r3, [r0, #0]
 801c91e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c920:	4798      	blx	r3
 801c922:	e76c      	b.n	801c7fe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801c924:	2001381c 	.word	0x2001381c
 801c928:	20013816 	.word	0x20013816

0801c92c <_ZN8touchgfx8LCD16bppD0Ev>:
 801c92c:	b510      	push	{r4, lr}
 801c92e:	2184      	movs	r1, #132	; 0x84
 801c930:	4604      	mov	r4, r0
 801c932:	f00d fe4a 	bl	802a5ca <_ZdlPvj>
 801c936:	4620      	mov	r0, r4
 801c938:	bd10      	pop	{r4, pc}

0801c93a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801c93a:	b510      	push	{r4, lr}
 801c93c:	2104      	movs	r1, #4
 801c93e:	4604      	mov	r4, r0
 801c940:	f00d fe43 	bl	802a5ca <_ZdlPvj>
 801c944:	4620      	mov	r0, r4
 801c946:	bd10      	pop	{r4, pc}

0801c948 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801c948:	b510      	push	{r4, lr}
 801c94a:	2104      	movs	r1, #4
 801c94c:	4604      	mov	r4, r0
 801c94e:	f00d fe3c 	bl	802a5ca <_ZdlPvj>
 801c952:	4620      	mov	r0, r4
 801c954:	bd10      	pop	{r4, pc}

0801c956 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801c956:	b510      	push	{r4, lr}
 801c958:	f640 0144 	movw	r1, #2116	; 0x844
 801c95c:	4604      	mov	r4, r0
 801c95e:	f00d fe34 	bl	802a5ca <_ZdlPvj>
 801c962:	4620      	mov	r0, r4
 801c964:	bd10      	pop	{r4, pc}

0801c966 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c966:	b510      	push	{r4, lr}
 801c968:	2104      	movs	r1, #4
 801c96a:	4604      	mov	r4, r0
 801c96c:	f00d fe2d 	bl	802a5ca <_ZdlPvj>
 801c970:	4620      	mov	r0, r4
 801c972:	bd10      	pop	{r4, pc}

0801c974 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c974:	b510      	push	{r4, lr}
 801c976:	2104      	movs	r1, #4
 801c978:	4604      	mov	r4, r0
 801c97a:	f00d fe26 	bl	802a5ca <_ZdlPvj>
 801c97e:	4620      	mov	r0, r4
 801c980:	bd10      	pop	{r4, pc}

0801c982 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c982:	b510      	push	{r4, lr}
 801c984:	2104      	movs	r1, #4
 801c986:	4604      	mov	r4, r0
 801c988:	f00d fe1f 	bl	802a5ca <_ZdlPvj>
 801c98c:	4620      	mov	r0, r4
 801c98e:	bd10      	pop	{r4, pc}

0801c990 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c990:	b510      	push	{r4, lr}
 801c992:	2104      	movs	r1, #4
 801c994:	4604      	mov	r4, r0
 801c996:	f00d fe18 	bl	802a5ca <_ZdlPvj>
 801c99a:	4620      	mov	r0, r4
 801c99c:	bd10      	pop	{r4, pc}

0801c99e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c99e:	b510      	push	{r4, lr}
 801c9a0:	2104      	movs	r1, #4
 801c9a2:	4604      	mov	r4, r0
 801c9a4:	f00d fe11 	bl	802a5ca <_ZdlPvj>
 801c9a8:	4620      	mov	r0, r4
 801c9aa:	bd10      	pop	{r4, pc}

0801c9ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801c9ac:	b510      	push	{r4, lr}
 801c9ae:	2104      	movs	r1, #4
 801c9b0:	4604      	mov	r4, r0
 801c9b2:	f00d fe0a 	bl	802a5ca <_ZdlPvj>
 801c9b6:	4620      	mov	r0, r4
 801c9b8:	bd10      	pop	{r4, pc}

0801c9ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c9ba:	b510      	push	{r4, lr}
 801c9bc:	2104      	movs	r1, #4
 801c9be:	4604      	mov	r4, r0
 801c9c0:	f00d fe03 	bl	802a5ca <_ZdlPvj>
 801c9c4:	4620      	mov	r0, r4
 801c9c6:	bd10      	pop	{r4, pc}

0801c9c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801c9c8:	b510      	push	{r4, lr}
 801c9ca:	2104      	movs	r1, #4
 801c9cc:	4604      	mov	r4, r0
 801c9ce:	f00d fdfc 	bl	802a5ca <_ZdlPvj>
 801c9d2:	4620      	mov	r0, r4
 801c9d4:	bd10      	pop	{r4, pc}

0801c9d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c9d6:	b510      	push	{r4, lr}
 801c9d8:	2104      	movs	r1, #4
 801c9da:	4604      	mov	r4, r0
 801c9dc:	f00d fdf5 	bl	802a5ca <_ZdlPvj>
 801c9e0:	4620      	mov	r0, r4
 801c9e2:	bd10      	pop	{r4, pc}

0801c9e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c9e4:	b510      	push	{r4, lr}
 801c9e6:	2104      	movs	r1, #4
 801c9e8:	4604      	mov	r4, r0
 801c9ea:	f00d fdee 	bl	802a5ca <_ZdlPvj>
 801c9ee:	4620      	mov	r0, r4
 801c9f0:	bd10      	pop	{r4, pc}

0801c9f2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c9f2:	b510      	push	{r4, lr}
 801c9f4:	2104      	movs	r1, #4
 801c9f6:	4604      	mov	r4, r0
 801c9f8:	f00d fde7 	bl	802a5ca <_ZdlPvj>
 801c9fc:	4620      	mov	r0, r4
 801c9fe:	bd10      	pop	{r4, pc}

0801ca00 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801ca00:	b510      	push	{r4, lr}
 801ca02:	2104      	movs	r1, #4
 801ca04:	4604      	mov	r4, r0
 801ca06:	f00d fde0 	bl	802a5ca <_ZdlPvj>
 801ca0a:	4620      	mov	r0, r4
 801ca0c:	bd10      	pop	{r4, pc}

0801ca0e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801ca0e:	b510      	push	{r4, lr}
 801ca10:	2104      	movs	r1, #4
 801ca12:	4604      	mov	r4, r0
 801ca14:	f00d fdd9 	bl	802a5ca <_ZdlPvj>
 801ca18:	4620      	mov	r0, r4
 801ca1a:	bd10      	pop	{r4, pc}

0801ca1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801ca1c:	b510      	push	{r4, lr}
 801ca1e:	2104      	movs	r1, #4
 801ca20:	4604      	mov	r4, r0
 801ca22:	f00d fdd2 	bl	802a5ca <_ZdlPvj>
 801ca26:	4620      	mov	r0, r4
 801ca28:	bd10      	pop	{r4, pc}

0801ca2a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ca2a:	b510      	push	{r4, lr}
 801ca2c:	2104      	movs	r1, #4
 801ca2e:	4604      	mov	r4, r0
 801ca30:	f00d fdcb 	bl	802a5ca <_ZdlPvj>
 801ca34:	4620      	mov	r0, r4
 801ca36:	bd10      	pop	{r4, pc}

0801ca38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801ca38:	b510      	push	{r4, lr}
 801ca3a:	2104      	movs	r1, #4
 801ca3c:	4604      	mov	r4, r0
 801ca3e:	f00d fdc4 	bl	802a5ca <_ZdlPvj>
 801ca42:	4620      	mov	r0, r4
 801ca44:	bd10      	pop	{r4, pc}

0801ca46 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801ca46:	b510      	push	{r4, lr}
 801ca48:	2104      	movs	r1, #4
 801ca4a:	4604      	mov	r4, r0
 801ca4c:	f00d fdbd 	bl	802a5ca <_ZdlPvj>
 801ca50:	4620      	mov	r0, r4
 801ca52:	bd10      	pop	{r4, pc}

0801ca54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801ca54:	b510      	push	{r4, lr}
 801ca56:	2104      	movs	r1, #4
 801ca58:	4604      	mov	r4, r0
 801ca5a:	f00d fdb6 	bl	802a5ca <_ZdlPvj>
 801ca5e:	4620      	mov	r0, r4
 801ca60:	bd10      	pop	{r4, pc}

0801ca62 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801ca62:	b510      	push	{r4, lr}
 801ca64:	2104      	movs	r1, #4
 801ca66:	4604      	mov	r4, r0
 801ca68:	f00d fdaf 	bl	802a5ca <_ZdlPvj>
 801ca6c:	4620      	mov	r0, r4
 801ca6e:	bd10      	pop	{r4, pc}

0801ca70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801ca70:	b510      	push	{r4, lr}
 801ca72:	2104      	movs	r1, #4
 801ca74:	4604      	mov	r4, r0
 801ca76:	f00d fda8 	bl	802a5ca <_ZdlPvj>
 801ca7a:	4620      	mov	r0, r4
 801ca7c:	bd10      	pop	{r4, pc}

0801ca7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ca7e:	b510      	push	{r4, lr}
 801ca80:	2104      	movs	r1, #4
 801ca82:	4604      	mov	r4, r0
 801ca84:	f00d fda1 	bl	802a5ca <_ZdlPvj>
 801ca88:	4620      	mov	r0, r4
 801ca8a:	bd10      	pop	{r4, pc}

0801ca8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801ca8c:	b510      	push	{r4, lr}
 801ca8e:	2104      	movs	r1, #4
 801ca90:	4604      	mov	r4, r0
 801ca92:	f00d fd9a 	bl	802a5ca <_ZdlPvj>
 801ca96:	4620      	mov	r0, r4
 801ca98:	bd10      	pop	{r4, pc}

0801ca9a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801ca9a:	b510      	push	{r4, lr}
 801ca9c:	2104      	movs	r1, #4
 801ca9e:	4604      	mov	r4, r0
 801caa0:	f00d fd93 	bl	802a5ca <_ZdlPvj>
 801caa4:	4620      	mov	r0, r4
 801caa6:	bd10      	pop	{r4, pc}

0801caa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801caa8:	b510      	push	{r4, lr}
 801caaa:	2104      	movs	r1, #4
 801caac:	4604      	mov	r4, r0
 801caae:	f00d fd8c 	bl	802a5ca <_ZdlPvj>
 801cab2:	4620      	mov	r0, r4
 801cab4:	bd10      	pop	{r4, pc}

0801cab6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801cab6:	b510      	push	{r4, lr}
 801cab8:	2104      	movs	r1, #4
 801caba:	4604      	mov	r4, r0
 801cabc:	f00d fd85 	bl	802a5ca <_ZdlPvj>
 801cac0:	4620      	mov	r0, r4
 801cac2:	bd10      	pop	{r4, pc}

0801cac4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801cac4:	b510      	push	{r4, lr}
 801cac6:	2104      	movs	r1, #4
 801cac8:	4604      	mov	r4, r0
 801caca:	f00d fd7e 	bl	802a5ca <_ZdlPvj>
 801cace:	4620      	mov	r0, r4
 801cad0:	bd10      	pop	{r4, pc}

0801cad2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801cad2:	b510      	push	{r4, lr}
 801cad4:	2104      	movs	r1, #4
 801cad6:	4604      	mov	r4, r0
 801cad8:	f00d fd77 	bl	802a5ca <_ZdlPvj>
 801cadc:	4620      	mov	r0, r4
 801cade:	bd10      	pop	{r4, pc}

0801cae0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801cae0:	b510      	push	{r4, lr}
 801cae2:	2104      	movs	r1, #4
 801cae4:	4604      	mov	r4, r0
 801cae6:	f00d fd70 	bl	802a5ca <_ZdlPvj>
 801caea:	4620      	mov	r0, r4
 801caec:	bd10      	pop	{r4, pc}
	...

0801caf0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801caf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801caf4:	b08f      	sub	sp, #60	; 0x3c
 801caf6:	461c      	mov	r4, r3
 801caf8:	9205      	str	r2, [sp, #20]
 801cafa:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801cafe:	9100      	str	r1, [sp, #0]
 801cb00:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801cb02:	9201      	str	r2, [sp, #4]
 801cb04:	2a00      	cmp	r2, #0
 801cb06:	f000 8115 	beq.w	801cd34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801cb0a:	6820      	ldr	r0, [r4, #0]
 801cb0c:	6861      	ldr	r1, [r4, #4]
 801cb0e:	aa0a      	add	r2, sp, #40	; 0x28
 801cb10:	c203      	stmia	r2!, {r0, r1}
 801cb12:	6818      	ldr	r0, [r3, #0]
 801cb14:	6859      	ldr	r1, [r3, #4]
 801cb16:	aa0c      	add	r2, sp, #48	; 0x30
 801cb18:	c203      	stmia	r2!, {r0, r1}
 801cb1a:	a80a      	add	r0, sp, #40	; 0x28
 801cb1c:	f7f9 faec 	bl	80160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cb20:	4621      	mov	r1, r4
 801cb22:	a80c      	add	r0, sp, #48	; 0x30
 801cb24:	f7f9 fb2c 	bl	8016180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cb28:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801cb2c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801cb30:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801cb34:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801cb38:	bfde      	ittt	le
 801cb3a:	b2b3      	uxthle	r3, r6
 801cb3c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801cb40:	fb92 f3f3 	sdivle	r3, r2, r3
 801cb44:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801cb48:	bfc8      	it	gt
 801cb4a:	2301      	movgt	r3, #1
 801cb4c:	fb92 f1f3 	sdiv	r1, r2, r3
 801cb50:	fa1f fc81 	uxth.w	ip, r1
 801cb54:	fb0c 2413 	mls	r4, ip, r3, r2
 801cb58:	fb14 f406 	smulbb	r4, r4, r6
 801cb5c:	441d      	add	r5, r3
 801cb5e:	4404      	add	r4, r0
 801cb60:	4661      	mov	r1, ip
 801cb62:	3d01      	subs	r5, #1
 801cb64:	b2a4      	uxth	r4, r4
 801cb66:	fb95 f5f3 	sdiv	r5, r5, r3
 801cb6a:	b131      	cbz	r1, 801cb7a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801cb6c:	9b05      	ldr	r3, [sp, #20]
 801cb6e:	9900      	ldr	r1, [sp, #0]
 801cb70:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801cb74:	ba1b      	rev	r3, r3
 801cb76:	4419      	add	r1, r3
 801cb78:	9100      	str	r1, [sp, #0]
 801cb7a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801cb7e:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801cb82:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801cb86:	4418      	add	r0, r3
 801cb88:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801cb8c:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801cb90:	441a      	add	r2, r3
 801cb92:	4b6a      	ldr	r3, [pc, #424]	; (801cd3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801cb94:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801cb98:	6818      	ldr	r0, [r3, #0]
 801cb9a:	6803      	ldr	r3, [r0, #0]
 801cb9c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cb9e:	4798      	blx	r3
 801cba0:	4967      	ldr	r1, [pc, #412]	; (801cd40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801cba2:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801cba6:	880b      	ldrh	r3, [r1, #0]
 801cba8:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801cbac:	9109      	str	r1, [sp, #36]	; 0x24
 801cbae:	fb03 c202 	mla	r2, r3, r2, ip
 801cbb2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cbb6:	4373      	muls	r3, r6
 801cbb8:	b2ad      	uxth	r5, r5
 801cbba:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cbbe:	00ad      	lsls	r5, r5, #2
 801cbc0:	9306      	str	r3, [sp, #24]
 801cbc2:	1d2b      	adds	r3, r5, #4
 801cbc4:	9307      	str	r3, [sp, #28]
 801cbc6:	9b01      	ldr	r3, [sp, #4]
 801cbc8:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801cbcc:	9103      	str	r1, [sp, #12]
 801cbce:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801cbd2:	2c00      	cmp	r4, #0
 801cbd4:	bf0c      	ite	eq
 801cbd6:	46c6      	moveq	lr, r8
 801cbd8:	f04f 0e00 	movne.w	lr, #0
 801cbdc:	2300      	movs	r3, #0
 801cbde:	b292      	uxth	r2, r2
 801cbe0:	fa1f fe8e 	uxth.w	lr, lr
 801cbe4:	9302      	str	r3, [sp, #8]
 801cbe6:	9204      	str	r2, [sp, #16]
 801cbe8:	9a06      	ldr	r2, [sp, #24]
 801cbea:	4282      	cmp	r2, r0
 801cbec:	f240 809d 	bls.w	801cd2a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801cbf0:	b963      	cbnz	r3, 801cc0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801cbf2:	9b00      	ldr	r3, [sp, #0]
 801cbf4:	781a      	ldrb	r2, [r3, #0]
 801cbf6:	0993      	lsrs	r3, r2, #6
 801cbf8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801cbfc:	9202      	str	r2, [sp, #8]
 801cbfe:	1e5a      	subs	r2, r3, #1
 801cc00:	2a02      	cmp	r2, #2
 801cc02:	d815      	bhi.n	801cc30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801cc04:	9a00      	ldr	r2, [sp, #0]
 801cc06:	3201      	adds	r2, #1
 801cc08:	9200      	str	r2, [sp, #0]
 801cc0a:	b29b      	uxth	r3, r3
 801cc0c:	b1b4      	cbz	r4, 801cc3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801cc0e:	429c      	cmp	r4, r3
 801cc10:	bf95      	itete	ls
 801cc12:	1b1c      	subls	r4, r3, r4
 801cc14:	1ae4      	subhi	r4, r4, r3
 801cc16:	fa1f fa84 	uxthls.w	sl, r4
 801cc1a:	b2a4      	uxthhi	r4, r4
 801cc1c:	bf87      	ittee	hi
 801cc1e:	4671      	movhi	r1, lr
 801cc20:	f04f 0a00 	movhi.w	sl, #0
 801cc24:	fa1f f188 	uxthls.w	r1, r8
 801cc28:	2400      	movls	r4, #0
 801cc2a:	4653      	mov	r3, sl
 801cc2c:	468e      	mov	lr, r1
 801cc2e:	e7db      	b.n	801cbe8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801cc30:	9a00      	ldr	r2, [sp, #0]
 801cc32:	9b00      	ldr	r3, [sp, #0]
 801cc34:	3202      	adds	r2, #2
 801cc36:	785b      	ldrb	r3, [r3, #1]
 801cc38:	9200      	str	r2, [sp, #0]
 801cc3a:	e7e7      	b.n	801cc0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801cc3c:	2202      	movs	r2, #2
 801cc3e:	4615      	mov	r5, r2
 801cc40:	9907      	ldr	r1, [sp, #28]
 801cc42:	9a02      	ldr	r2, [sp, #8]
 801cc44:	fb15 1202 	smlabb	r2, r5, r2, r1
 801cc48:	9905      	ldr	r1, [sp, #20]
 801cc4a:	4573      	cmp	r3, lr
 801cc4c:	f831 c002 	ldrh.w	ip, [r1, r2]
 801cc50:	9a01      	ldr	r2, [sp, #4]
 801cc52:	bf2b      	itete	cs
 801cc54:	eba3 0a0e 	subcs.w	sl, r3, lr
 801cc58:	ebae 0103 	subcc.w	r1, lr, r3
 801cc5c:	46f1      	movcs	r9, lr
 801cc5e:	4699      	movcc	r9, r3
 801cc60:	bf27      	ittee	cs
 801cc62:	fa1f fa8a 	uxthcs.w	sl, sl
 801cc66:	4621      	movcs	r1, r4
 801cc68:	b289      	uxthcc	r1, r1
 801cc6a:	46a2      	movcc	sl, r4
 801cc6c:	2aff      	cmp	r2, #255	; 0xff
 801cc6e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cc72:	d105      	bne.n	801cc80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801cc74:	4481      	add	r9, r0
 801cc76:	4581      	cmp	r9, r0
 801cc78:	d045      	beq.n	801cd06 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801cc7a:	f820 cb02 	strh.w	ip, [r0], #2
 801cc7e:	e7fa      	b.n	801cc76 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801cc80:	9d03      	ldr	r5, [sp, #12]
 801cc82:	ea4f 222c 	mov.w	r2, ip, asr #8
 801cc86:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801cc8a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801cc8e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801cc92:	436a      	muls	r2, r5
 801cc94:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801cc98:	fa5f fc8c 	uxtb.w	ip, ip
 801cc9c:	9208      	str	r2, [sp, #32]
 801cc9e:	fb0b fb05 	mul.w	fp, fp, r5
 801cca2:	fb0c fc05 	mul.w	ip, ip, r5
 801cca6:	4481      	add	r9, r0
 801cca8:	4581      	cmp	r9, r0
 801ccaa:	d02c      	beq.n	801cd06 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801ccac:	8802      	ldrh	r2, [r0, #0]
 801ccae:	9d04      	ldr	r5, [sp, #16]
 801ccb0:	9f04      	ldr	r7, [sp, #16]
 801ccb2:	1216      	asrs	r6, r2, #8
 801ccb4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ccb8:	fb16 f605 	smulbb	r6, r6, r5
 801ccbc:	9d08      	ldr	r5, [sp, #32]
 801ccbe:	442e      	add	r6, r5
 801ccc0:	10d5      	asrs	r5, r2, #3
 801ccc2:	00d2      	lsls	r2, r2, #3
 801ccc4:	b2d2      	uxtb	r2, r2
 801ccc6:	fb12 f207 	smulbb	r2, r2, r7
 801ccca:	b2b6      	uxth	r6, r6
 801cccc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ccd0:	4462      	add	r2, ip
 801ccd2:	fb15 f507 	smulbb	r5, r5, r7
 801ccd6:	b292      	uxth	r2, r2
 801ccd8:	1c77      	adds	r7, r6, #1
 801ccda:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801ccde:	1c57      	adds	r7, r2, #1
 801cce0:	445d      	add	r5, fp
 801cce2:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801cce6:	b2ad      	uxth	r5, r5
 801cce8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ccec:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801ccf0:	4316      	orrs	r6, r2
 801ccf2:	1c6a      	adds	r2, r5, #1
 801ccf4:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801ccf8:	096d      	lsrs	r5, r5, #5
 801ccfa:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ccfe:	432e      	orrs	r6, r5
 801cd00:	f820 6b02 	strh.w	r6, [r0], #2
 801cd04:	e7d0      	b.n	801cca8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801cd06:	4573      	cmp	r3, lr
 801cd08:	d38f      	bcc.n	801cc2a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801cd0a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801cd0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cd10:	fa1f f188 	uxth.w	r1, r8
 801cd14:	1a64      	subs	r4, r4, r1
 801cd16:	881b      	ldrh	r3, [r3, #0]
 801cd18:	b2a4      	uxth	r4, r4
 801cd1a:	2c00      	cmp	r4, #0
 801cd1c:	eba3 0308 	sub.w	r3, r3, r8
 801cd20:	bf18      	it	ne
 801cd22:	2100      	movne	r1, #0
 801cd24:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cd28:	e77f      	b.n	801cc2a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801cd2a:	4b04      	ldr	r3, [pc, #16]	; (801cd3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801cd2c:	6818      	ldr	r0, [r3, #0]
 801cd2e:	6803      	ldr	r3, [r0, #0]
 801cd30:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cd32:	4798      	blx	r3
 801cd34:	b00f      	add	sp, #60	; 0x3c
 801cd36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cd3a:	bf00      	nop
 801cd3c:	2001381c 	.word	0x2001381c
 801cd40:	20013816 	.word	0x20013816

0801cd44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801cd44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cd48:	b09f      	sub	sp, #124	; 0x7c
 801cd4a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801cd4e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801cd52:	9209      	str	r2, [sp, #36]	; 0x24
 801cd54:	461d      	mov	r5, r3
 801cd56:	4604      	mov	r4, r0
 801cd58:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cd5a:	2a00      	cmp	r2, #0
 801cd5c:	f000 81eb 	beq.w	801d136 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801cd60:	6828      	ldr	r0, [r5, #0]
 801cd62:	6869      	ldr	r1, [r5, #4]
 801cd64:	aa1a      	add	r2, sp, #104	; 0x68
 801cd66:	c203      	stmia	r2!, {r0, r1}
 801cd68:	6818      	ldr	r0, [r3, #0]
 801cd6a:	6859      	ldr	r1, [r3, #4]
 801cd6c:	aa1c      	add	r2, sp, #112	; 0x70
 801cd6e:	c203      	stmia	r2!, {r0, r1}
 801cd70:	a81a      	add	r0, sp, #104	; 0x68
 801cd72:	f7f9 f9c1 	bl	80160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cd76:	4629      	mov	r1, r5
 801cd78:	a81c      	add	r0, sp, #112	; 0x70
 801cd7a:	f7f9 fa01 	bl	8016180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cd7e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801cd82:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801cd86:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801cd8a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801cd8e:	bfd7      	itett	le
 801cd90:	b29a      	uxthle	r2, r3
 801cd92:	2201      	movgt	r2, #1
 801cd94:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801cd98:	fb91 f2f2 	sdivle	r2, r1, r2
 801cd9c:	9202      	str	r2, [sp, #8]
 801cd9e:	9802      	ldr	r0, [sp, #8]
 801cda0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801cda4:	fb92 f0f0 	sdiv	r0, r2, r0
 801cda8:	b280      	uxth	r0, r0
 801cdaa:	9010      	str	r0, [sp, #64]	; 0x40
 801cdac:	9902      	ldr	r1, [sp, #8]
 801cdae:	9802      	ldr	r0, [sp, #8]
 801cdb0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801cdb2:	4488      	add	r8, r1
 801cdb4:	fb05 2510 	mls	r5, r5, r0, r2
 801cdb8:	fb15 f503 	smulbb	r5, r5, r3
 801cdbc:	f108 38ff 	add.w	r8, r8, #4294967295
 801cdc0:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801cdc4:	fb98 f8f1 	sdiv	r8, r8, r1
 801cdc8:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801cdcc:	440d      	add	r5, r1
 801cdce:	4419      	add	r1, r3
 801cdd0:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801cdd4:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801cdd8:	441a      	add	r2, r3
 801cdda:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801cdde:	9304      	str	r3, [sp, #16]
 801cde0:	4b95      	ldr	r3, [pc, #596]	; (801d038 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801cde2:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801cde6:	6818      	ldr	r0, [r3, #0]
 801cde8:	6803      	ldr	r3, [r0, #0]
 801cdea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cdec:	4798      	blx	r3
 801cdee:	4b93      	ldr	r3, [pc, #588]	; (801d03c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801cdf0:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801cdf4:	881a      	ldrh	r2, [r3, #0]
 801cdf6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801cdfa:	9318      	str	r3, [sp, #96]	; 0x60
 801cdfc:	fb02 7101 	mla	r1, r2, r1, r7
 801ce00:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801ce04:	4356      	muls	r6, r2
 801ce06:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801ce0a:	f108 0801 	add.w	r8, r8, #1
 801ce0e:	920a      	str	r2, [sp, #40]	; 0x28
 801ce10:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ce12:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801ce16:	930f      	str	r3, [sp, #60]	; 0x3c
 801ce18:	fa1f f888 	uxth.w	r8, r8
 801ce1c:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801ce20:	f108 0204 	add.w	r2, r8, #4
 801ce24:	9211      	str	r2, [sp, #68]	; 0x44
 801ce26:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ce28:	4b85      	ldr	r3, [pc, #532]	; (801d040 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801ce2a:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801ce2e:	b2ad      	uxth	r5, r5
 801ce30:	9215      	str	r2, [sp, #84]	; 0x54
 801ce32:	2d00      	cmp	r5, #0
 801ce34:	9a04      	ldr	r2, [sp, #16]
 801ce36:	f04f 0100 	mov.w	r1, #0
 801ce3a:	bf18      	it	ne
 801ce3c:	2200      	movne	r2, #0
 801ce3e:	1b1b      	subs	r3, r3, r4
 801ce40:	b292      	uxth	r2, r2
 801ce42:	910d      	str	r1, [sp, #52]	; 0x34
 801ce44:	9319      	str	r3, [sp, #100]	; 0x64
 801ce46:	9910      	ldr	r1, [sp, #64]	; 0x40
 801ce48:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ce4a:	fa11 f383 	uxtah	r3, r1, r3
 801ce4e:	9914      	ldr	r1, [sp, #80]	; 0x50
 801ce50:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801ce54:	3304      	adds	r3, #4
 801ce56:	9306      	str	r3, [sp, #24]
 801ce58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ce5a:	4283      	cmp	r3, r0
 801ce5c:	f240 8166 	bls.w	801d12c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801ce60:	9902      	ldr	r1, [sp, #8]
 801ce62:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801ce66:	fbb5 f3f3 	udiv	r3, r5, r3
 801ce6a:	1acb      	subs	r3, r1, r3
 801ce6c:	b29b      	uxth	r3, r3
 801ce6e:	9316      	str	r3, [sp, #88]	; 0x58
 801ce70:	9b06      	ldr	r3, [sp, #24]
 801ce72:	9e06      	ldr	r6, [sp, #24]
 801ce74:	7859      	ldrb	r1, [r3, #1]
 801ce76:	789b      	ldrb	r3, [r3, #2]
 801ce78:	7836      	ldrb	r6, [r6, #0]
 801ce7a:	9612      	str	r6, [sp, #72]	; 0x48
 801ce7c:	021b      	lsls	r3, r3, #8
 801ce7e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801ce82:	9906      	ldr	r1, [sp, #24]
 801ce84:	78c9      	ldrb	r1, [r1, #3]
 801ce86:	430b      	orrs	r3, r1
 801ce88:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801ce8a:	3601      	adds	r6, #1
 801ce8c:	4419      	add	r1, r3
 801ce8e:	9605      	str	r6, [sp, #20]
 801ce90:	1c4e      	adds	r6, r1, #1
 801ce92:	9603      	str	r6, [sp, #12]
 801ce94:	7849      	ldrb	r1, [r1, #1]
 801ce96:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801ce98:	0209      	lsls	r1, r1, #8
 801ce9a:	5cf3      	ldrb	r3, [r6, r3]
 801ce9c:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801cea0:	4319      	orrs	r1, r3
 801cea2:	b28b      	uxth	r3, r1
 801cea4:	930c      	str	r3, [sp, #48]	; 0x30
 801cea6:	2300      	movs	r3, #0
 801cea8:	f04f 0a01 	mov.w	sl, #1
 801ceac:	9307      	str	r3, [sp, #28]
 801ceae:	469c      	mov	ip, r3
 801ceb0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801ceb4:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801ceb8:	46d3      	mov	fp, sl
 801ceba:	4657      	mov	r7, sl
 801cebc:	930e      	str	r3, [sp, #56]	; 0x38
 801cebe:	2d00      	cmp	r5, #0
 801cec0:	d07e      	beq.n	801cfc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801cec2:	42af      	cmp	r7, r5
 801cec4:	d26e      	bcs.n	801cfa4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801cec6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cec8:	9201      	str	r2, [sp, #4]
 801ceca:	1bed      	subs	r5, r5, r7
 801cecc:	4283      	cmp	r3, r0
 801cece:	b2ad      	uxth	r5, r5
 801ced0:	d802      	bhi.n	801ced8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801ced2:	e073      	b.n	801cfbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801ced4:	2b00      	cmp	r3, #0
 801ced6:	d15f      	bne.n	801cf98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801ced8:	9b03      	ldr	r3, [sp, #12]
 801ceda:	785b      	ldrb	r3, [r3, #1]
 801cedc:	f1cb 0207 	rsb	r2, fp, #7
 801cee0:	4093      	lsls	r3, r2
 801cee2:	005b      	lsls	r3, r3, #1
 801cee4:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801cee8:	9b03      	ldr	r3, [sp, #12]
 801ceea:	781b      	ldrb	r3, [r3, #0]
 801ceec:	fa43 f30b 	asr.w	r3, r3, fp
 801cef0:	b2db      	uxtb	r3, r3
 801cef2:	4313      	orrs	r3, r2
 801cef4:	f10b 0201 	add.w	r2, fp, #1
 801cef8:	fa5f fb82 	uxtb.w	fp, r2
 801cefc:	9a03      	ldr	r2, [sp, #12]
 801cefe:	f1bb 0f08 	cmp.w	fp, #8
 801cf02:	bf15      	itete	ne
 801cf04:	3201      	addne	r2, #1
 801cf06:	3202      	addeq	r2, #2
 801cf08:	9203      	strne	r2, [sp, #12]
 801cf0a:	9203      	streq	r2, [sp, #12]
 801cf0c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801cf0e:	b29f      	uxth	r7, r3
 801cf10:	bf08      	it	eq
 801cf12:	f04f 0b00 	moveq.w	fp, #0
 801cf16:	42ba      	cmp	r2, r7
 801cf18:	d309      	bcc.n	801cf2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801cf1a:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801cf1e:	2301      	movs	r3, #1
 801cf20:	9a05      	ldr	r2, [sp, #20]
 801cf22:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801cf26:	d30e      	bcc.n	801cf46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801cf28:	469a      	mov	sl, r3
 801cf2a:	2600      	movs	r6, #0
 801cf2c:	e035      	b.n	801cf9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801cf2e:	9b05      	ldr	r3, [sp, #20]
 801cf30:	429f      	cmp	r7, r3
 801cf32:	d318      	bcc.n	801cf66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801cf34:	eb04 030a 	add.w	r3, r4, sl
 801cf38:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801cf3c:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801cf40:	f10a 0301 	add.w	r3, sl, #1
 801cf44:	b29b      	uxth	r3, r3
 801cf46:	9a05      	ldr	r2, [sp, #20]
 801cf48:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801cf4c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801cf4e:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801cf52:	7116      	strb	r6, [r2, #4]
 801cf54:	f10a 0601 	add.w	r6, sl, #1
 801cf58:	80d1      	strh	r1, [r2, #6]
 801cf5a:	7156      	strb	r6, [r2, #5]
 801cf5c:	9a05      	ldr	r2, [sp, #20]
 801cf5e:	3201      	adds	r2, #1
 801cf60:	b292      	uxth	r2, r2
 801cf62:	9205      	str	r2, [sp, #20]
 801cf64:	e7e0      	b.n	801cf28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801cf66:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801cf6a:	463a      	mov	r2, r7
 801cf6c:	795b      	ldrb	r3, [r3, #5]
 801cf6e:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801cf72:	4426      	add	r6, r4
 801cf74:	9919      	ldr	r1, [sp, #100]	; 0x64
 801cf76:	eb01 0c06 	add.w	ip, r1, r6
 801cf7a:	f1bc 0f00 	cmp.w	ip, #0
 801cf7e:	dd07      	ble.n	801cf90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801cf80:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801cf84:	f892 c004 	ldrb.w	ip, [r2, #4]
 801cf88:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801cf8c:	88d2      	ldrh	r2, [r2, #6]
 801cf8e:	e7f1      	b.n	801cf74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801cf90:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801cf94:	b29b      	uxth	r3, r3
 801cf96:	e7c3      	b.n	801cf20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801cf98:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801cf9a:	970c      	str	r7, [sp, #48]	; 0x30
 801cf9c:	9a01      	ldr	r2, [sp, #4]
 801cf9e:	46b4      	mov	ip, r6
 801cfa0:	461f      	mov	r7, r3
 801cfa2:	e78c      	b.n	801cebe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801cfa4:	1b7b      	subs	r3, r7, r5
 801cfa6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801cfaa:	9201      	str	r2, [sp, #4]
 801cfac:	eb0c 0605 	add.w	r6, ip, r5
 801cfb0:	b29b      	uxth	r3, r3
 801cfb2:	b2b6      	uxth	r6, r6
 801cfb4:	2500      	movs	r5, #0
 801cfb6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801cfb8:	4282      	cmp	r2, r0
 801cfba:	d88b      	bhi.n	801ced4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801cfbc:	9a01      	ldr	r2, [sp, #4]
 801cfbe:	e74b      	b.n	801ce58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801cfc0:	4297      	cmp	r7, r2
 801cfc2:	d332      	bcc.n	801d02a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801cfc4:	1abb      	subs	r3, r7, r2
 801cfc6:	b29b      	uxth	r3, r3
 801cfc8:	9208      	str	r2, [sp, #32]
 801cfca:	9501      	str	r5, [sp, #4]
 801cfcc:	9909      	ldr	r1, [sp, #36]	; 0x24
 801cfce:	29ff      	cmp	r1, #255	; 0xff
 801cfd0:	9908      	ldr	r1, [sp, #32]
 801cfd2:	eb0c 0601 	add.w	r6, ip, r1
 801cfd6:	d135      	bne.n	801d044 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801cfd8:	f1a0 0e02 	sub.w	lr, r0, #2
 801cfdc:	b2b6      	uxth	r6, r6
 801cfde:	45b4      	cmp	ip, r6
 801cfe0:	f040 808c 	bne.w	801d0fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801cfe4:	9908      	ldr	r1, [sp, #32]
 801cfe6:	4297      	cmp	r7, r2
 801cfe8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801cfec:	d3e2      	bcc.n	801cfb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801cfee:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801cff0:	9904      	ldr	r1, [sp, #16]
 801cff2:	8812      	ldrh	r2, [r2, #0]
 801cff4:	1a52      	subs	r2, r2, r1
 801cff6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cffa:	9a07      	ldr	r2, [sp, #28]
 801cffc:	9916      	ldr	r1, [sp, #88]	; 0x58
 801cffe:	3201      	adds	r2, #1
 801d000:	428a      	cmp	r2, r1
 801d002:	9207      	str	r2, [sp, #28]
 801d004:	f040 8087 	bne.w	801d116 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801d008:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801d00c:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801d010:	9b04      	ldr	r3, [sp, #16]
 801d012:	1bed      	subs	r5, r5, r7
 801d014:	b2ad      	uxth	r5, r5
 801d016:	2d00      	cmp	r5, #0
 801d018:	bf08      	it	eq
 801d01a:	461a      	moveq	r2, r3
 801d01c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d01e:	bf18      	it	ne
 801d020:	2200      	movne	r2, #0
 801d022:	3301      	adds	r3, #1
 801d024:	930d      	str	r3, [sp, #52]	; 0x34
 801d026:	b292      	uxth	r2, r2
 801d028:	e70d      	b.n	801ce46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801d02a:	1bd1      	subs	r1, r2, r7
 801d02c:	b28b      	uxth	r3, r1
 801d02e:	9301      	str	r3, [sp, #4]
 801d030:	9708      	str	r7, [sp, #32]
 801d032:	462b      	mov	r3, r5
 801d034:	e7ca      	b.n	801cfcc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801d036:	bf00      	nop
 801d038:	2001381c 	.word	0x2001381c
 801d03c:	20013816 	.word	0x20013816
 801d040:	fffff7fb 	.word	0xfffff7fb
 801d044:	b2b6      	uxth	r6, r6
 801d046:	900b      	str	r0, [sp, #44]	; 0x2c
 801d048:	45b4      	cmp	ip, r6
 801d04a:	d0cb      	beq.n	801cfe4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801d04c:	f10c 0101 	add.w	r1, ip, #1
 801d050:	44a4      	add	ip, r4
 801d052:	9117      	str	r1, [sp, #92]	; 0x5c
 801d054:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801d058:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d05a:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801d05e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801d060:	f8b1 c000 	ldrh.w	ip, [r1]
 801d064:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d066:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801d06a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801d06e:	fb1e fe01 	smulbb	lr, lr, r1
 801d072:	ea4f 2825 	mov.w	r8, r5, asr #8
 801d076:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d078:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801d07c:	fb08 e801 	mla	r8, r8, r1, lr
 801d080:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801d084:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d086:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d08a:	fb19 f901 	smulbb	r9, r9, r1
 801d08e:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801d092:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d094:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d098:	fb0e 9e01 	mla	lr, lr, r1, r9
 801d09c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d0a0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d0a2:	fa5f fc8c 	uxtb.w	ip, ip
 801d0a6:	fb1c fc01 	smulbb	ip, ip, r1
 801d0aa:	00ed      	lsls	r5, r5, #3
 801d0ac:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d0ae:	b2ed      	uxtb	r5, r5
 801d0b0:	fb05 c501 	mla	r5, r5, r1, ip
 801d0b4:	fa1f f888 	uxth.w	r8, r8
 801d0b8:	fa1f fe8e 	uxth.w	lr, lr
 801d0bc:	b2ad      	uxth	r5, r5
 801d0be:	f108 0c01 	add.w	ip, r8, #1
 801d0c2:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801d0c6:	f10e 0901 	add.w	r9, lr, #1
 801d0ca:	f105 0c01 	add.w	ip, r5, #1
 801d0ce:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801d0d2:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801d0d6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d0da:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801d0de:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d0e2:	ea4c 0808 	orr.w	r8, ip, r8
 801d0e6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801d0e8:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801d0ec:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d0f0:	ea48 0809 	orr.w	r8, r8, r9
 801d0f4:	f821 8b02 	strh.w	r8, [r1], #2
 801d0f8:	910b      	str	r1, [sp, #44]	; 0x2c
 801d0fa:	e7a5      	b.n	801d048 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801d0fc:	f10c 0801 	add.w	r8, ip, #1
 801d100:	44a4      	add	ip, r4
 801d102:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d104:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801d108:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801d10c:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801d110:	fa1f fc88 	uxth.w	ip, r8
 801d114:	e763      	b.n	801cfde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801d116:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d11a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801d11e:	1aad      	subs	r5, r5, r2
 801d120:	b2ad      	uxth	r5, r5
 801d122:	2d00      	cmp	r5, #0
 801d124:	bf18      	it	ne
 801d126:	2200      	movne	r2, #0
 801d128:	9201      	str	r2, [sp, #4]
 801d12a:	e744      	b.n	801cfb6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801d12c:	4b03      	ldr	r3, [pc, #12]	; (801d13c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801d12e:	6818      	ldr	r0, [r3, #0]
 801d130:	6803      	ldr	r3, [r0, #0]
 801d132:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d134:	4798      	blx	r3
 801d136:	b01f      	add	sp, #124	; 0x7c
 801d138:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d13c:	2001381c 	.word	0x2001381c

0801d140 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801d140:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d144:	b08f      	sub	sp, #60	; 0x3c
 801d146:	461c      	mov	r4, r3
 801d148:	9203      	str	r2, [sp, #12]
 801d14a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d14e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d150:	9202      	str	r2, [sp, #8]
 801d152:	460f      	mov	r7, r1
 801d154:	2a00      	cmp	r2, #0
 801d156:	f000 8128 	beq.w	801d3aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801d15a:	6820      	ldr	r0, [r4, #0]
 801d15c:	6861      	ldr	r1, [r4, #4]
 801d15e:	aa0a      	add	r2, sp, #40	; 0x28
 801d160:	c203      	stmia	r2!, {r0, r1}
 801d162:	6818      	ldr	r0, [r3, #0]
 801d164:	6859      	ldr	r1, [r3, #4]
 801d166:	aa0c      	add	r2, sp, #48	; 0x30
 801d168:	c203      	stmia	r2!, {r0, r1}
 801d16a:	a80a      	add	r0, sp, #40	; 0x28
 801d16c:	f7f8 ffc4 	bl	80160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d170:	4621      	mov	r1, r4
 801d172:	a80c      	add	r0, sp, #48	; 0x30
 801d174:	f7f9 f804 	bl	8016180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d178:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801d17c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801d180:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801d184:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801d188:	bfde      	ittt	le
 801d18a:	b2b3      	uxthle	r3, r6
 801d18c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801d190:	fb92 f3f3 	sdivle	r3, r2, r3
 801d194:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801d198:	bfc8      	it	gt
 801d19a:	2301      	movgt	r3, #1
 801d19c:	fb92 f1f3 	sdiv	r1, r2, r3
 801d1a0:	fa1f fc81 	uxth.w	ip, r1
 801d1a4:	fb0c 2413 	mls	r4, ip, r3, r2
 801d1a8:	fb14 f406 	smulbb	r4, r4, r6
 801d1ac:	441d      	add	r5, r3
 801d1ae:	4404      	add	r4, r0
 801d1b0:	4661      	mov	r1, ip
 801d1b2:	3d01      	subs	r5, #1
 801d1b4:	b2a4      	uxth	r4, r4
 801d1b6:	fb95 f5f3 	sdiv	r5, r5, r3
 801d1ba:	b121      	cbz	r1, 801d1c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801d1bc:	9b03      	ldr	r3, [sp, #12]
 801d1be:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801d1c2:	ba1b      	rev	r3, r3
 801d1c4:	441f      	add	r7, r3
 801d1c6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801d1ca:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801d1ce:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801d1d2:	4418      	add	r0, r3
 801d1d4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801d1d8:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801d1dc:	441a      	add	r2, r3
 801d1de:	4b74      	ldr	r3, [pc, #464]	; (801d3b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801d1e0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801d1e4:	6818      	ldr	r0, [r3, #0]
 801d1e6:	6803      	ldr	r3, [r0, #0]
 801d1e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d1ea:	4798      	blx	r3
 801d1ec:	4a71      	ldr	r2, [pc, #452]	; (801d3b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801d1ee:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801d1f2:	8813      	ldrh	r3, [r2, #0]
 801d1f4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801d1f8:	9209      	str	r2, [sp, #36]	; 0x24
 801d1fa:	fb03 c101 	mla	r1, r3, r1, ip
 801d1fe:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d202:	4373      	muls	r3, r6
 801d204:	b2ad      	uxth	r5, r5
 801d206:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d20a:	00ad      	lsls	r5, r5, #2
 801d20c:	2c00      	cmp	r4, #0
 801d20e:	9304      	str	r3, [sp, #16]
 801d210:	f105 0304 	add.w	r3, r5, #4
 801d214:	9305      	str	r3, [sp, #20]
 801d216:	bf0c      	ite	eq
 801d218:	46c8      	moveq	r8, r9
 801d21a:	f04f 0800 	movne.w	r8, #0
 801d21e:	2300      	movs	r3, #0
 801d220:	fa1f f888 	uxth.w	r8, r8
 801d224:	9301      	str	r3, [sp, #4]
 801d226:	9a04      	ldr	r2, [sp, #16]
 801d228:	4282      	cmp	r2, r0
 801d22a:	f240 80b9 	bls.w	801d3a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801d22e:	b95b      	cbnz	r3, 801d248 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801d230:	783a      	ldrb	r2, [r7, #0]
 801d232:	0993      	lsrs	r3, r2, #6
 801d234:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801d238:	9201      	str	r2, [sp, #4]
 801d23a:	1e5a      	subs	r2, r3, #1
 801d23c:	2a02      	cmp	r2, #2
 801d23e:	bf8d      	iteet	hi
 801d240:	787b      	ldrbhi	r3, [r7, #1]
 801d242:	3701      	addls	r7, #1
 801d244:	b29b      	uxthls	r3, r3
 801d246:	3702      	addhi	r7, #2
 801d248:	b184      	cbz	r4, 801d26c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801d24a:	429c      	cmp	r4, r3
 801d24c:	bf95      	itete	ls
 801d24e:	1b1c      	subls	r4, r3, r4
 801d250:	1ae4      	subhi	r4, r4, r3
 801d252:	fa1f fa84 	uxthls.w	sl, r4
 801d256:	b2a4      	uxthhi	r4, r4
 801d258:	bf87      	ittee	hi
 801d25a:	46c4      	movhi	ip, r8
 801d25c:	f04f 0a00 	movhi.w	sl, #0
 801d260:	fa1f fc89 	uxthls.w	ip, r9
 801d264:	2400      	movls	r4, #0
 801d266:	4653      	mov	r3, sl
 801d268:	46e0      	mov	r8, ip
 801d26a:	e7dc      	b.n	801d226 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801d26c:	2204      	movs	r2, #4
 801d26e:	4615      	mov	r5, r2
 801d270:	9905      	ldr	r1, [sp, #20]
 801d272:	9a01      	ldr	r2, [sp, #4]
 801d274:	fb15 1202 	smlabb	r2, r5, r2, r1
 801d278:	9903      	ldr	r1, [sp, #12]
 801d27a:	588a      	ldr	r2, [r1, r2]
 801d27c:	4543      	cmp	r3, r8
 801d27e:	bf27      	ittee	cs
 801d280:	eba3 0a08 	subcs.w	sl, r3, r8
 801d284:	46c6      	movcs	lr, r8
 801d286:	eba8 0c03 	subcc.w	ip, r8, r3
 801d28a:	469e      	movcc	lr, r3
 801d28c:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801d290:	bf27      	ittee	cs
 801d292:	fa1f fa8a 	uxthcs.w	sl, sl
 801d296:	46a4      	movcs	ip, r4
 801d298:	fa1f fc8c 	uxthcc.w	ip, ip
 801d29c:	46a2      	movcc	sl, r4
 801d29e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801d2a2:	2900      	cmp	r1, #0
 801d2a4:	d066      	beq.n	801d374 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801d2a6:	29ff      	cmp	r1, #255	; 0xff
 801d2a8:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801d2ac:	d114      	bne.n	801d2d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801d2ae:	9d02      	ldr	r5, [sp, #8]
 801d2b0:	2dff      	cmp	r5, #255	; 0xff
 801d2b2:	d111      	bne.n	801d2d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801d2b4:	0951      	lsrs	r1, r2, #5
 801d2b6:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801d2ba:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d2be:	f026 0607 	bic.w	r6, r6, #7
 801d2c2:	430e      	orrs	r6, r1
 801d2c4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d2c8:	4316      	orrs	r6, r2
 801d2ca:	b2b6      	uxth	r6, r6
 801d2cc:	4486      	add	lr, r0
 801d2ce:	4586      	cmp	lr, r0
 801d2d0:	d051      	beq.n	801d376 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801d2d2:	f820 6b02 	strh.w	r6, [r0], #2
 801d2d6:	e7fa      	b.n	801d2ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801d2d8:	9d02      	ldr	r5, [sp, #8]
 801d2da:	4369      	muls	r1, r5
 801d2dc:	1c4d      	adds	r5, r1, #1
 801d2de:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801d2e2:	122d      	asrs	r5, r5, #8
 801d2e4:	ea6f 0b05 	mvn.w	fp, r5
 801d2e8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801d2ec:	b2ad      	uxth	r5, r5
 801d2ee:	b2f6      	uxtb	r6, r6
 801d2f0:	b2d2      	uxtb	r2, r2
 801d2f2:	fb11 f105 	smulbb	r1, r1, r5
 801d2f6:	fb16 f605 	smulbb	r6, r6, r5
 801d2fa:	fb12 f205 	smulbb	r2, r2, r5
 801d2fe:	b289      	uxth	r1, r1
 801d300:	b2b6      	uxth	r6, r6
 801d302:	b292      	uxth	r2, r2
 801d304:	9106      	str	r1, [sp, #24]
 801d306:	9607      	str	r6, [sp, #28]
 801d308:	9208      	str	r2, [sp, #32]
 801d30a:	4486      	add	lr, r0
 801d30c:	fa5f fb8b 	uxtb.w	fp, fp
 801d310:	4586      	cmp	lr, r0
 801d312:	d030      	beq.n	801d376 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801d314:	8802      	ldrh	r2, [r0, #0]
 801d316:	9906      	ldr	r1, [sp, #24]
 801d318:	1216      	asrs	r6, r2, #8
 801d31a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d31e:	10d5      	asrs	r5, r2, #3
 801d320:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d324:	fb06 160b 	mla	r6, r6, fp, r1
 801d328:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d32c:	9907      	ldr	r1, [sp, #28]
 801d32e:	00d2      	lsls	r2, r2, #3
 801d330:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d334:	fb05 150b 	mla	r5, r5, fp, r1
 801d338:	b2d2      	uxtb	r2, r2
 801d33a:	9908      	ldr	r1, [sp, #32]
 801d33c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d340:	b2b6      	uxth	r6, r6
 801d342:	fb02 120b 	mla	r2, r2, fp, r1
 801d346:	b292      	uxth	r2, r2
 801d348:	1c71      	adds	r1, r6, #1
 801d34a:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801d34e:	1c51      	adds	r1, r2, #1
 801d350:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d354:	b2ad      	uxth	r5, r5
 801d356:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d35a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801d35e:	4316      	orrs	r6, r2
 801d360:	1c6a      	adds	r2, r5, #1
 801d362:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801d366:	096d      	lsrs	r5, r5, #5
 801d368:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d36c:	432e      	orrs	r6, r5
 801d36e:	f820 6b02 	strh.w	r6, [r0], #2
 801d372:	e7cd      	b.n	801d310 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801d374:	4470      	add	r0, lr
 801d376:	4543      	cmp	r3, r8
 801d378:	f4ff af75 	bcc.w	801d266 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801d37c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801d380:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d382:	fa1f fc89 	uxth.w	ip, r9
 801d386:	eba4 040c 	sub.w	r4, r4, ip
 801d38a:	881b      	ldrh	r3, [r3, #0]
 801d38c:	b2a4      	uxth	r4, r4
 801d38e:	2c00      	cmp	r4, #0
 801d390:	eba3 0309 	sub.w	r3, r3, r9
 801d394:	bf18      	it	ne
 801d396:	f04f 0c00 	movne.w	ip, #0
 801d39a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d39e:	e762      	b.n	801d266 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801d3a0:	4b03      	ldr	r3, [pc, #12]	; (801d3b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801d3a2:	6818      	ldr	r0, [r3, #0]
 801d3a4:	6803      	ldr	r3, [r0, #0]
 801d3a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d3a8:	4798      	blx	r3
 801d3aa:	b00f      	add	sp, #60	; 0x3c
 801d3ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d3b0:	2001381c 	.word	0x2001381c
 801d3b4:	20013816 	.word	0x20013816

0801d3b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801d3b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d3bc:	b093      	sub	sp, #76	; 0x4c
 801d3be:	461c      	mov	r4, r3
 801d3c0:	9205      	str	r2, [sp, #20]
 801d3c2:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801d3c6:	9101      	str	r1, [sp, #4]
 801d3c8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d3ca:	9202      	str	r2, [sp, #8]
 801d3cc:	2a00      	cmp	r2, #0
 801d3ce:	f000 812c 	beq.w	801d62a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801d3d2:	6820      	ldr	r0, [r4, #0]
 801d3d4:	6861      	ldr	r1, [r4, #4]
 801d3d6:	aa0e      	add	r2, sp, #56	; 0x38
 801d3d8:	c203      	stmia	r2!, {r0, r1}
 801d3da:	6818      	ldr	r0, [r3, #0]
 801d3dc:	6859      	ldr	r1, [r3, #4]
 801d3de:	aa10      	add	r2, sp, #64	; 0x40
 801d3e0:	c203      	stmia	r2!, {r0, r1}
 801d3e2:	a80e      	add	r0, sp, #56	; 0x38
 801d3e4:	f7f8 fe88 	bl	80160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d3e8:	4621      	mov	r1, r4
 801d3ea:	a810      	add	r0, sp, #64	; 0x40
 801d3ec:	f7f8 fec8 	bl	8016180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d3f0:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801d3f4:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801d3f8:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801d3fc:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801d400:	bfde      	ittt	le
 801d402:	b2b3      	uxthle	r3, r6
 801d404:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801d408:	fb92 f3f3 	sdivle	r3, r2, r3
 801d40c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801d410:	bfc8      	it	gt
 801d412:	2301      	movgt	r3, #1
 801d414:	fb92 f1f3 	sdiv	r1, r2, r3
 801d418:	fa1f fc81 	uxth.w	ip, r1
 801d41c:	fb0c 2413 	mls	r4, ip, r3, r2
 801d420:	fb14 f406 	smulbb	r4, r4, r6
 801d424:	441d      	add	r5, r3
 801d426:	4404      	add	r4, r0
 801d428:	4661      	mov	r1, ip
 801d42a:	3d01      	subs	r5, #1
 801d42c:	b2a4      	uxth	r4, r4
 801d42e:	fb95 f5f3 	sdiv	r5, r5, r3
 801d432:	b131      	cbz	r1, 801d442 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801d434:	9b05      	ldr	r3, [sp, #20]
 801d436:	9901      	ldr	r1, [sp, #4]
 801d438:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801d43c:	ba1b      	rev	r3, r3
 801d43e:	4419      	add	r1, r3
 801d440:	9101      	str	r1, [sp, #4]
 801d442:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801d446:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801d44a:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801d44e:	4418      	add	r0, r3
 801d450:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801d454:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801d458:	441a      	add	r2, r3
 801d45a:	4b75      	ldr	r3, [pc, #468]	; (801d630 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801d45c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801d460:	6818      	ldr	r0, [r3, #0]
 801d462:	6803      	ldr	r3, [r0, #0]
 801d464:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d466:	4798      	blx	r3
 801d468:	4972      	ldr	r1, [pc, #456]	; (801d634 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801d46a:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801d46e:	880b      	ldrh	r3, [r1, #0]
 801d470:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801d474:	910d      	str	r1, [sp, #52]	; 0x34
 801d476:	fb03 c202 	mla	r2, r3, r2, ip
 801d47a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d47e:	4373      	muls	r3, r6
 801d480:	b2ad      	uxth	r5, r5
 801d482:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d486:	00ad      	lsls	r5, r5, #2
 801d488:	9308      	str	r3, [sp, #32]
 801d48a:	1d2b      	adds	r3, r5, #4
 801d48c:	9309      	str	r3, [sp, #36]	; 0x24
 801d48e:	9b02      	ldr	r3, [sp, #8]
 801d490:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d494:	9106      	str	r1, [sp, #24]
 801d496:	43da      	mvns	r2, r3
 801d498:	2c00      	cmp	r4, #0
 801d49a:	bf0c      	ite	eq
 801d49c:	46dc      	moveq	ip, fp
 801d49e:	f04f 0c00 	movne.w	ip, #0
 801d4a2:	2300      	movs	r3, #0
 801d4a4:	b2d2      	uxtb	r2, r2
 801d4a6:	fa1f fc8c 	uxth.w	ip, ip
 801d4aa:	9303      	str	r3, [sp, #12]
 801d4ac:	9207      	str	r2, [sp, #28]
 801d4ae:	9a08      	ldr	r2, [sp, #32]
 801d4b0:	4282      	cmp	r2, r0
 801d4b2:	f240 80b5 	bls.w	801d620 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801d4b6:	b963      	cbnz	r3, 801d4d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801d4b8:	9b01      	ldr	r3, [sp, #4]
 801d4ba:	781a      	ldrb	r2, [r3, #0]
 801d4bc:	0993      	lsrs	r3, r2, #6
 801d4be:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801d4c2:	9203      	str	r2, [sp, #12]
 801d4c4:	1e5a      	subs	r2, r3, #1
 801d4c6:	2a02      	cmp	r2, #2
 801d4c8:	d815      	bhi.n	801d4f6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801d4ca:	9a01      	ldr	r2, [sp, #4]
 801d4cc:	3201      	adds	r2, #1
 801d4ce:	9201      	str	r2, [sp, #4]
 801d4d0:	b29b      	uxth	r3, r3
 801d4d2:	b1b4      	cbz	r4, 801d502 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801d4d4:	429c      	cmp	r4, r3
 801d4d6:	bf95      	itete	ls
 801d4d8:	1b1c      	subls	r4, r3, r4
 801d4da:	1ae4      	subhi	r4, r4, r3
 801d4dc:	fa1f f884 	uxthls.w	r8, r4
 801d4e0:	b2a4      	uxthhi	r4, r4
 801d4e2:	bf87      	ittee	hi
 801d4e4:	4666      	movhi	r6, ip
 801d4e6:	f04f 0800 	movhi.w	r8, #0
 801d4ea:	fa1f f68b 	uxthls.w	r6, fp
 801d4ee:	2400      	movls	r4, #0
 801d4f0:	4643      	mov	r3, r8
 801d4f2:	46b4      	mov	ip, r6
 801d4f4:	e7db      	b.n	801d4ae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801d4f6:	9a01      	ldr	r2, [sp, #4]
 801d4f8:	9b01      	ldr	r3, [sp, #4]
 801d4fa:	3202      	adds	r2, #2
 801d4fc:	785b      	ldrb	r3, [r3, #1]
 801d4fe:	9201      	str	r2, [sp, #4]
 801d500:	e7e7      	b.n	801d4d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801d502:	2203      	movs	r2, #3
 801d504:	4615      	mov	r5, r2
 801d506:	9909      	ldr	r1, [sp, #36]	; 0x24
 801d508:	9a03      	ldr	r2, [sp, #12]
 801d50a:	fb15 1202 	smlabb	r2, r5, r2, r1
 801d50e:	9905      	ldr	r1, [sp, #20]
 801d510:	4563      	cmp	r3, ip
 801d512:	eb01 0502 	add.w	r5, r1, r2
 801d516:	9902      	ldr	r1, [sp, #8]
 801d518:	bf29      	itett	cs
 801d51a:	eba3 080c 	subcs.w	r8, r3, ip
 801d51e:	ebac 0603 	subcc.w	r6, ip, r3
 801d522:	fa1f f888 	uxthcs.w	r8, r8
 801d526:	46e1      	movcs	r9, ip
 801d528:	bf2f      	iteee	cs
 801d52a:	4626      	movcs	r6, r4
 801d52c:	b2b6      	uxthcc	r6, r6
 801d52e:	4699      	movcc	r9, r3
 801d530:	46a0      	movcc	r8, r4
 801d532:	29ff      	cmp	r1, #255	; 0xff
 801d534:	d04a      	beq.n	801d5cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801d536:	9f06      	ldr	r7, [sp, #24]
 801d538:	78a9      	ldrb	r1, [r5, #2]
 801d53a:	9004      	str	r0, [sp, #16]
 801d53c:	4379      	muls	r1, r7
 801d53e:	910a      	str	r1, [sp, #40]	; 0x28
 801d540:	7869      	ldrb	r1, [r5, #1]
 801d542:	4379      	muls	r1, r7
 801d544:	910b      	str	r1, [sp, #44]	; 0x2c
 801d546:	9905      	ldr	r1, [sp, #20]
 801d548:	5c8a      	ldrb	r2, [r1, r2]
 801d54a:	437a      	muls	r2, r7
 801d54c:	920c      	str	r2, [sp, #48]	; 0x30
 801d54e:	46ca      	mov	sl, r9
 801d550:	f1ba 0f00 	cmp.w	sl, #0
 801d554:	d03d      	beq.n	801d5d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801d556:	9a04      	ldr	r2, [sp, #16]
 801d558:	9f07      	ldr	r7, [sp, #28]
 801d55a:	8812      	ldrh	r2, [r2, #0]
 801d55c:	1215      	asrs	r5, r2, #8
 801d55e:	46be      	mov	lr, r7
 801d560:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d564:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801d566:	10d1      	asrs	r1, r2, #3
 801d568:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801d56c:	fb05 750e 	mla	r5, r5, lr, r7
 801d570:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d574:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801d576:	00d2      	lsls	r2, r2, #3
 801d578:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801d57c:	fb01 710e 	mla	r1, r1, lr, r7
 801d580:	b2d2      	uxtb	r2, r2
 801d582:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801d584:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d588:	b2ad      	uxth	r5, r5
 801d58a:	fb02 720e 	mla	r2, r2, lr, r7
 801d58e:	b292      	uxth	r2, r2
 801d590:	f105 0e01 	add.w	lr, r5, #1
 801d594:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d598:	f102 0e01 	add.w	lr, r2, #1
 801d59c:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801d5a0:	b289      	uxth	r1, r1
 801d5a2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d5a6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d5aa:	4315      	orrs	r5, r2
 801d5ac:	1c4a      	adds	r2, r1, #1
 801d5ae:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d5b2:	0949      	lsrs	r1, r1, #5
 801d5b4:	9a04      	ldr	r2, [sp, #16]
 801d5b6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d5ba:	430d      	orrs	r5, r1
 801d5bc:	f822 5b02 	strh.w	r5, [r2], #2
 801d5c0:	f10a 3aff 	add.w	sl, sl, #4294967295
 801d5c4:	9204      	str	r2, [sp, #16]
 801d5c6:	fa1f fa8a 	uxth.w	sl, sl
 801d5ca:	e7c1      	b.n	801d550 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801d5cc:	4649      	mov	r1, r9
 801d5ce:	4686      	mov	lr, r0
 801d5d0:	b999      	cbnz	r1, 801d5fa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801d5d2:	4563      	cmp	r3, ip
 801d5d4:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801d5d8:	d38a      	bcc.n	801d4f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801d5da:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801d5de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d5e0:	fa1f f68b 	uxth.w	r6, fp
 801d5e4:	1ba4      	subs	r4, r4, r6
 801d5e6:	881b      	ldrh	r3, [r3, #0]
 801d5e8:	b2a4      	uxth	r4, r4
 801d5ea:	2c00      	cmp	r4, #0
 801d5ec:	eba3 030b 	sub.w	r3, r3, fp
 801d5f0:	bf18      	it	ne
 801d5f2:	2600      	movne	r6, #0
 801d5f4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d5f8:	e77a      	b.n	801d4f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801d5fa:	78aa      	ldrb	r2, [r5, #2]
 801d5fc:	4f0e      	ldr	r7, [pc, #56]	; (801d638 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801d5fe:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801d602:	786a      	ldrb	r2, [r5, #1]
 801d604:	00d2      	lsls	r2, r2, #3
 801d606:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d60a:	ea4a 0202 	orr.w	r2, sl, r2
 801d60e:	f895 a000 	ldrb.w	sl, [r5]
 801d612:	3901      	subs	r1, #1
 801d614:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801d618:	f82e 2b02 	strh.w	r2, [lr], #2
 801d61c:	b289      	uxth	r1, r1
 801d61e:	e7d7      	b.n	801d5d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801d620:	4b03      	ldr	r3, [pc, #12]	; (801d630 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801d622:	6818      	ldr	r0, [r3, #0]
 801d624:	6803      	ldr	r3, [r0, #0]
 801d626:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d628:	4798      	blx	r3
 801d62a:	b013      	add	sp, #76	; 0x4c
 801d62c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d630:	2001381c 	.word	0x2001381c
 801d634:	20013816 	.word	0x20013816
 801d638:	fffff800 	.word	0xfffff800

0801d63c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801d63c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d640:	b09d      	sub	sp, #116	; 0x74
 801d642:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801d646:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801d64a:	920e      	str	r2, [sp, #56]	; 0x38
 801d64c:	461c      	mov	r4, r3
 801d64e:	4683      	mov	fp, r0
 801d650:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d652:	2a00      	cmp	r2, #0
 801d654:	f000 81e0 	beq.w	801da18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801d658:	6820      	ldr	r0, [r4, #0]
 801d65a:	6861      	ldr	r1, [r4, #4]
 801d65c:	aa18      	add	r2, sp, #96	; 0x60
 801d65e:	c203      	stmia	r2!, {r0, r1}
 801d660:	6818      	ldr	r0, [r3, #0]
 801d662:	6859      	ldr	r1, [r3, #4]
 801d664:	aa1a      	add	r2, sp, #104	; 0x68
 801d666:	c203      	stmia	r2!, {r0, r1}
 801d668:	a818      	add	r0, sp, #96	; 0x60
 801d66a:	f7f8 fd45 	bl	80160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d66e:	4621      	mov	r1, r4
 801d670:	a81a      	add	r0, sp, #104	; 0x68
 801d672:	f7f8 fd85 	bl	8016180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d676:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801d67a:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801d67e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801d682:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d686:	bfd7      	itett	le
 801d688:	b29a      	uxthle	r2, r3
 801d68a:	2201      	movgt	r2, #1
 801d68c:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801d690:	fb91 f2f2 	sdivle	r2, r1, r2
 801d694:	9202      	str	r2, [sp, #8]
 801d696:	9802      	ldr	r0, [sp, #8]
 801d698:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801d69c:	fb92 f0f0 	sdiv	r0, r2, r0
 801d6a0:	b280      	uxth	r0, r0
 801d6a2:	900f      	str	r0, [sp, #60]	; 0x3c
 801d6a4:	9902      	ldr	r1, [sp, #8]
 801d6a6:	9802      	ldr	r0, [sp, #8]
 801d6a8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801d6aa:	440c      	add	r4, r1
 801d6ac:	fb05 2510 	mls	r5, r5, r0, r2
 801d6b0:	fb15 f503 	smulbb	r5, r5, r3
 801d6b4:	3c01      	subs	r4, #1
 801d6b6:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801d6ba:	fb94 f4f1 	sdiv	r4, r4, r1
 801d6be:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801d6c2:	440d      	add	r5, r1
 801d6c4:	4419      	add	r1, r3
 801d6c6:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801d6ca:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801d6ce:	441a      	add	r2, r3
 801d6d0:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801d6d4:	9306      	str	r3, [sp, #24]
 801d6d6:	4bb3      	ldr	r3, [pc, #716]	; (801d9a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801d6d8:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801d6dc:	6818      	ldr	r0, [r3, #0]
 801d6de:	6803      	ldr	r3, [r0, #0]
 801d6e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d6e2:	4798      	blx	r3
 801d6e4:	4bb0      	ldr	r3, [pc, #704]	; (801d9a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801d6e6:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801d6ea:	881a      	ldrh	r2, [r3, #0]
 801d6ec:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801d6f0:	9316      	str	r3, [sp, #88]	; 0x58
 801d6f2:	fb02 7101 	mla	r1, r2, r1, r7
 801d6f6:	3401      	adds	r4, #1
 801d6f8:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801d6fc:	b2a4      	uxth	r4, r4
 801d6fe:	4356      	muls	r6, r2
 801d700:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801d704:	00a4      	lsls	r4, r4, #2
 801d706:	920a      	str	r2, [sp, #40]	; 0x28
 801d708:	1d22      	adds	r2, r4, #4
 801d70a:	b2ad      	uxth	r5, r5
 801d70c:	9213      	str	r2, [sp, #76]	; 0x4c
 801d70e:	4ba7      	ldr	r3, [pc, #668]	; (801d9ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801d710:	9a06      	ldr	r2, [sp, #24]
 801d712:	2d00      	cmp	r5, #0
 801d714:	bf0c      	ite	eq
 801d716:	4611      	moveq	r1, r2
 801d718:	2100      	movne	r1, #0
 801d71a:	2200      	movs	r2, #0
 801d71c:	eba3 030b 	sub.w	r3, r3, fp
 801d720:	b289      	uxth	r1, r1
 801d722:	920d      	str	r2, [sp, #52]	; 0x34
 801d724:	9317      	str	r3, [sp, #92]	; 0x5c
 801d726:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d728:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d72a:	fa12 f383 	uxtah	r3, r2, r3
 801d72e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d730:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801d734:	3304      	adds	r3, #4
 801d736:	9308      	str	r3, [sp, #32]
 801d738:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d73a:	4543      	cmp	r3, r8
 801d73c:	f240 8167 	bls.w	801da0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801d740:	9a02      	ldr	r2, [sp, #8]
 801d742:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801d746:	fbb5 f3f3 	udiv	r3, r5, r3
 801d74a:	1ad3      	subs	r3, r2, r3
 801d74c:	b29b      	uxth	r3, r3
 801d74e:	9314      	str	r3, [sp, #80]	; 0x50
 801d750:	9b08      	ldr	r3, [sp, #32]
 801d752:	9808      	ldr	r0, [sp, #32]
 801d754:	785a      	ldrb	r2, [r3, #1]
 801d756:	789b      	ldrb	r3, [r3, #2]
 801d758:	7800      	ldrb	r0, [r0, #0]
 801d75a:	9010      	str	r0, [sp, #64]	; 0x40
 801d75c:	021b      	lsls	r3, r3, #8
 801d75e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801d762:	9a08      	ldr	r2, [sp, #32]
 801d764:	78d2      	ldrb	r2, [r2, #3]
 801d766:	4313      	orrs	r3, r2
 801d768:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d76a:	3001      	adds	r0, #1
 801d76c:	441a      	add	r2, r3
 801d76e:	9007      	str	r0, [sp, #28]
 801d770:	1c50      	adds	r0, r2, #1
 801d772:	9005      	str	r0, [sp, #20]
 801d774:	7852      	ldrb	r2, [r2, #1]
 801d776:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d778:	0212      	lsls	r2, r2, #8
 801d77a:	5cc3      	ldrb	r3, [r0, r3]
 801d77c:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801d780:	431a      	orrs	r2, r3
 801d782:	b293      	uxth	r3, r2
 801d784:	930b      	str	r3, [sp, #44]	; 0x2c
 801d786:	2300      	movs	r3, #0
 801d788:	9309      	str	r3, [sp, #36]	; 0x24
 801d78a:	2301      	movs	r3, #1
 801d78c:	9301      	str	r3, [sp, #4]
 801d78e:	9304      	str	r3, [sp, #16]
 801d790:	2300      	movs	r3, #0
 801d792:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801d796:	9303      	str	r3, [sp, #12]
 801d798:	f04f 0e01 	mov.w	lr, #1
 801d79c:	2d00      	cmp	r5, #0
 801d79e:	d07c      	beq.n	801d89a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801d7a0:	45ae      	cmp	lr, r5
 801d7a2:	d26b      	bcs.n	801d87c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801d7a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d7a6:	eba5 050e 	sub.w	r5, r5, lr
 801d7aa:	4543      	cmp	r3, r8
 801d7ac:	b2ad      	uxth	r5, r5
 801d7ae:	460c      	mov	r4, r1
 801d7b0:	d802      	bhi.n	801d7b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801d7b2:	e070      	b.n	801d896 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801d7b4:	2b00      	cmp	r3, #0
 801d7b6:	d15c      	bne.n	801d872 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801d7b8:	9b05      	ldr	r3, [sp, #20]
 801d7ba:	9a04      	ldr	r2, [sp, #16]
 801d7bc:	785b      	ldrb	r3, [r3, #1]
 801d7be:	9904      	ldr	r1, [sp, #16]
 801d7c0:	f1c2 0207 	rsb	r2, r2, #7
 801d7c4:	4093      	lsls	r3, r2
 801d7c6:	005b      	lsls	r3, r3, #1
 801d7c8:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d7cc:	9b05      	ldr	r3, [sp, #20]
 801d7ce:	781b      	ldrb	r3, [r3, #0]
 801d7d0:	410b      	asrs	r3, r1
 801d7d2:	3101      	adds	r1, #1
 801d7d4:	b2c9      	uxtb	r1, r1
 801d7d6:	2908      	cmp	r1, #8
 801d7d8:	9104      	str	r1, [sp, #16]
 801d7da:	9905      	ldr	r1, [sp, #20]
 801d7dc:	bf0a      	itet	eq
 801d7de:	3102      	addeq	r1, #2
 801d7e0:	3101      	addne	r1, #1
 801d7e2:	9105      	streq	r1, [sp, #20]
 801d7e4:	b2db      	uxtb	r3, r3
 801d7e6:	bf0a      	itet	eq
 801d7e8:	2100      	moveq	r1, #0
 801d7ea:	9105      	strne	r1, [sp, #20]
 801d7ec:	9104      	streq	r1, [sp, #16]
 801d7ee:	4313      	orrs	r3, r2
 801d7f0:	9910      	ldr	r1, [sp, #64]	; 0x40
 801d7f2:	b29a      	uxth	r2, r3
 801d7f4:	4291      	cmp	r1, r2
 801d7f6:	d30a      	bcc.n	801d80e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801d7f8:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801d7fc:	2301      	movs	r3, #1
 801d7fe:	9907      	ldr	r1, [sp, #28]
 801d800:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801d804:	d30f      	bcc.n	801d826 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801d806:	2100      	movs	r1, #0
 801d808:	9301      	str	r3, [sp, #4]
 801d80a:	9103      	str	r1, [sp, #12]
 801d80c:	e032      	b.n	801d874 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801d80e:	9b07      	ldr	r3, [sp, #28]
 801d810:	429a      	cmp	r2, r3
 801d812:	d318      	bcc.n	801d846 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801d814:	9b01      	ldr	r3, [sp, #4]
 801d816:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801d81a:	445b      	add	r3, fp
 801d81c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801d820:	9b01      	ldr	r3, [sp, #4]
 801d822:	3301      	adds	r3, #1
 801d824:	b29b      	uxth	r3, r3
 801d826:	9907      	ldr	r1, [sp, #28]
 801d828:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801d82c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801d830:	7108      	strb	r0, [r1, #4]
 801d832:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801d834:	80c8      	strh	r0, [r1, #6]
 801d836:	9801      	ldr	r0, [sp, #4]
 801d838:	3001      	adds	r0, #1
 801d83a:	7148      	strb	r0, [r1, #5]
 801d83c:	9907      	ldr	r1, [sp, #28]
 801d83e:	3101      	adds	r1, #1
 801d840:	b289      	uxth	r1, r1
 801d842:	9107      	str	r1, [sp, #28]
 801d844:	e7df      	b.n	801d806 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801d846:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801d84a:	4611      	mov	r1, r2
 801d84c:	795b      	ldrb	r3, [r3, #5]
 801d84e:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801d852:	4458      	add	r0, fp
 801d854:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801d856:	4406      	add	r6, r0
 801d858:	2e00      	cmp	r6, #0
 801d85a:	dd06      	ble.n	801d86a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801d85c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801d860:	790e      	ldrb	r6, [r1, #4]
 801d862:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801d866:	88c9      	ldrh	r1, [r1, #6]
 801d868:	e7f4      	b.n	801d854 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801d86a:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801d86e:	b29b      	uxth	r3, r3
 801d870:	e7c5      	b.n	801d7fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801d872:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d874:	920b      	str	r2, [sp, #44]	; 0x2c
 801d876:	4621      	mov	r1, r4
 801d878:	469e      	mov	lr, r3
 801d87a:	e78f      	b.n	801d79c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801d87c:	9a03      	ldr	r2, [sp, #12]
 801d87e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801d882:	442a      	add	r2, r5
 801d884:	ebae 0305 	sub.w	r3, lr, r5
 801d888:	b292      	uxth	r2, r2
 801d88a:	b29b      	uxth	r3, r3
 801d88c:	9203      	str	r2, [sp, #12]
 801d88e:	2500      	movs	r5, #0
 801d890:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d892:	4542      	cmp	r2, r8
 801d894:	d88e      	bhi.n	801d7b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801d896:	4621      	mov	r1, r4
 801d898:	e74e      	b.n	801d738 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801d89a:	458e      	cmp	lr, r1
 801d89c:	bf29      	itett	cs
 801d89e:	ebae 0301 	subcs.w	r3, lr, r1
 801d8a2:	eba1 040e 	subcc.w	r4, r1, lr
 801d8a6:	b29b      	uxthcs	r3, r3
 801d8a8:	910c      	strcs	r1, [sp, #48]	; 0x30
 801d8aa:	bf2f      	iteee	cs
 801d8ac:	462c      	movcs	r4, r5
 801d8ae:	b2a4      	uxthcc	r4, r4
 801d8b0:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801d8b4:	462b      	movcc	r3, r5
 801d8b6:	f04f 0900 	mov.w	r9, #0
 801d8ba:	9a03      	ldr	r2, [sp, #12]
 801d8bc:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d8be:	444a      	add	r2, r9
 801d8c0:	4548      	cmp	r0, r9
 801d8c2:	b292      	uxth	r2, r2
 801d8c4:	d074      	beq.n	801d9b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801d8c6:	445a      	add	r2, fp
 801d8c8:	2004      	movs	r0, #4
 801d8ca:	4605      	mov	r5, r0
 801d8cc:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801d8d0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d8d2:	fb15 0202 	smlabb	r2, r5, r2, r0
 801d8d6:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d8d8:	5880      	ldr	r0, [r0, r2]
 801d8da:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801d8de:	d014      	beq.n	801d90a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801d8e0:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d8e4:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801d8e8:	d112      	bne.n	801d910 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801d8ea:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d8ec:	2aff      	cmp	r2, #255	; 0xff
 801d8ee:	d10f      	bne.n	801d910 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801d8f0:	0942      	lsrs	r2, r0, #5
 801d8f2:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801d8f6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d8fa:	f025 0507 	bic.w	r5, r5, #7
 801d8fe:	4315      	orrs	r5, r2
 801d900:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801d904:	4305      	orrs	r5, r0
 801d906:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801d90a:	f109 0901 	add.w	r9, r9, #1
 801d90e:	e7d4      	b.n	801d8ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801d910:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801d914:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801d918:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801d91c:	9215      	str	r2, [sp, #84]	; 0x54
 801d91e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d920:	fb02 fa0a 	mul.w	sl, r2, sl
 801d924:	f10a 0201 	add.w	r2, sl, #1
 801d928:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801d92c:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d930:	1212      	asrs	r2, r2, #8
 801d932:	fa1f fa82 	uxth.w	sl, r2
 801d936:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801d93a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d93e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d942:	43d2      	mvns	r2, r2
 801d944:	b2d2      	uxtb	r2, r2
 801d946:	fb16 f60a 	smulbb	r6, r6, sl
 801d94a:	fa5f fc8c 	uxtb.w	ip, ip
 801d94e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801d952:	b2c0      	uxtb	r0, r0
 801d954:	fb07 6702 	mla	r7, r7, r2, r6
 801d958:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801d95c:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801d95e:	fb10 f00a 	smulbb	r0, r0, sl
 801d962:	fb0c 0002 	mla	r0, ip, r2, r0
 801d966:	b2ed      	uxtb	r5, r5
 801d968:	b2bf      	uxth	r7, r7
 801d96a:	fb15 f50a 	smulbb	r5, r5, sl
 801d96e:	b280      	uxth	r0, r0
 801d970:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801d974:	fb06 5602 	mla	r6, r6, r2, r5
 801d978:	1c7a      	adds	r2, r7, #1
 801d97a:	1c45      	adds	r5, r0, #1
 801d97c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d980:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801d984:	b2b6      	uxth	r6, r6
 801d986:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801d98a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d98e:	432f      	orrs	r7, r5
 801d990:	1c75      	adds	r5, r6, #1
 801d992:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801d996:	096d      	lsrs	r5, r5, #5
 801d998:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d99c:	432f      	orrs	r7, r5
 801d99e:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801d9a2:	e7b2      	b.n	801d90a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801d9a4:	2001381c 	.word	0x2001381c
 801d9a8:	20013816 	.word	0x20013816
 801d9ac:	fffff7fb 	.word	0xfffff7fb
 801d9b0:	9203      	str	r2, [sp, #12]
 801d9b2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d9b4:	458e      	cmp	lr, r1
 801d9b6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801d9ba:	f4ff af68 	bcc.w	801d88e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801d9be:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801d9c0:	9906      	ldr	r1, [sp, #24]
 801d9c2:	8812      	ldrh	r2, [r2, #0]
 801d9c4:	1a52      	subs	r2, r2, r1
 801d9c6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801d9ca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d9cc:	9914      	ldr	r1, [sp, #80]	; 0x50
 801d9ce:	3201      	adds	r2, #1
 801d9d0:	428a      	cmp	r2, r1
 801d9d2:	9209      	str	r2, [sp, #36]	; 0x24
 801d9d4:	d111      	bne.n	801d9fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801d9d6:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801d9da:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801d9de:	9b06      	ldr	r3, [sp, #24]
 801d9e0:	eba5 0509 	sub.w	r5, r5, r9
 801d9e4:	b2ad      	uxth	r5, r5
 801d9e6:	2d00      	cmp	r5, #0
 801d9e8:	bf08      	it	eq
 801d9ea:	4619      	moveq	r1, r3
 801d9ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d9ee:	bf18      	it	ne
 801d9f0:	2100      	movne	r1, #0
 801d9f2:	3301      	adds	r3, #1
 801d9f4:	930d      	str	r3, [sp, #52]	; 0x34
 801d9f6:	b289      	uxth	r1, r1
 801d9f8:	e695      	b.n	801d726 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801d9fa:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801d9fe:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801da02:	1b2d      	subs	r5, r5, r4
 801da04:	b2ad      	uxth	r5, r5
 801da06:	2d00      	cmp	r5, #0
 801da08:	bf18      	it	ne
 801da0a:	2400      	movne	r4, #0
 801da0c:	e740      	b.n	801d890 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801da0e:	4b04      	ldr	r3, [pc, #16]	; (801da20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801da10:	6818      	ldr	r0, [r3, #0]
 801da12:	6803      	ldr	r3, [r0, #0]
 801da14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801da16:	4798      	blx	r3
 801da18:	b01d      	add	sp, #116	; 0x74
 801da1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801da1e:	bf00      	nop
 801da20:	2001381c 	.word	0x2001381c

0801da24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801da24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801da28:	b09f      	sub	sp, #124	; 0x7c
 801da2a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801da2e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801da32:	920a      	str	r2, [sp, #40]	; 0x28
 801da34:	461d      	mov	r5, r3
 801da36:	4604      	mov	r4, r0
 801da38:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801da3a:	2a00      	cmp	r2, #0
 801da3c:	f000 81fa 	beq.w	801de34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801da40:	6828      	ldr	r0, [r5, #0]
 801da42:	6869      	ldr	r1, [r5, #4]
 801da44:	aa1a      	add	r2, sp, #104	; 0x68
 801da46:	c203      	stmia	r2!, {r0, r1}
 801da48:	6818      	ldr	r0, [r3, #0]
 801da4a:	6859      	ldr	r1, [r3, #4]
 801da4c:	aa1c      	add	r2, sp, #112	; 0x70
 801da4e:	c203      	stmia	r2!, {r0, r1}
 801da50:	a81a      	add	r0, sp, #104	; 0x68
 801da52:	f7f8 fb51 	bl	80160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801da56:	4629      	mov	r1, r5
 801da58:	a81c      	add	r0, sp, #112	; 0x70
 801da5a:	f7f8 fb91 	bl	8016180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801da5e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801da62:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801da66:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801da6a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801da6e:	bfd7      	itett	le
 801da70:	b29a      	uxthle	r2, r3
 801da72:	2201      	movgt	r2, #1
 801da74:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801da78:	fb91 f2f2 	sdivle	r2, r1, r2
 801da7c:	9201      	str	r2, [sp, #4]
 801da7e:	9801      	ldr	r0, [sp, #4]
 801da80:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801da84:	fb92 f0f0 	sdiv	r0, r2, r0
 801da88:	b280      	uxth	r0, r0
 801da8a:	9010      	str	r0, [sp, #64]	; 0x40
 801da8c:	9901      	ldr	r1, [sp, #4]
 801da8e:	9801      	ldr	r0, [sp, #4]
 801da90:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801da92:	440e      	add	r6, r1
 801da94:	fb05 2510 	mls	r5, r5, r0, r2
 801da98:	fb15 f503 	smulbb	r5, r5, r3
 801da9c:	3e01      	subs	r6, #1
 801da9e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801daa2:	fb96 f6f1 	sdiv	r6, r6, r1
 801daa6:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801daaa:	440d      	add	r5, r1
 801daac:	4419      	add	r1, r3
 801daae:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801dab2:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801dab6:	441a      	add	r2, r3
 801dab8:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801dabc:	9304      	str	r3, [sp, #16]
 801dabe:	4b96      	ldr	r3, [pc, #600]	; (801dd18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801dac0:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801dac4:	6818      	ldr	r0, [r3, #0]
 801dac6:	6803      	ldr	r3, [r0, #0]
 801dac8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801daca:	4798      	blx	r3
 801dacc:	4b93      	ldr	r3, [pc, #588]	; (801dd1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801dace:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801dad2:	881a      	ldrh	r2, [r3, #0]
 801dad4:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801dad8:	9318      	str	r3, [sp, #96]	; 0x60
 801dada:	fb02 c101 	mla	r1, r2, r1, ip
 801dade:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801dae2:	4357      	muls	r7, r2
 801dae4:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801dae8:	3601      	adds	r6, #1
 801daea:	920b      	str	r2, [sp, #44]	; 0x2c
 801daec:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801daee:	4b8c      	ldr	r3, [pc, #560]	; (801dd20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801daf0:	b2b6      	uxth	r6, r6
 801daf2:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801daf6:	1d32      	adds	r2, r6, #4
 801daf8:	9206      	str	r2, [sp, #24]
 801dafa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801dafc:	43d2      	mvns	r2, r2
 801dafe:	b2d2      	uxtb	r2, r2
 801db00:	b2ad      	uxth	r5, r5
 801db02:	9215      	str	r2, [sp, #84]	; 0x54
 801db04:	9a04      	ldr	r2, [sp, #16]
 801db06:	2d00      	cmp	r5, #0
 801db08:	bf0c      	ite	eq
 801db0a:	4611      	moveq	r1, r2
 801db0c:	2100      	movne	r1, #0
 801db0e:	2200      	movs	r2, #0
 801db10:	1b1b      	subs	r3, r3, r4
 801db12:	b289      	uxth	r1, r1
 801db14:	920d      	str	r2, [sp, #52]	; 0x34
 801db16:	9319      	str	r3, [sp, #100]	; 0x64
 801db18:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801db1a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801db1c:	fa12 f383 	uxtah	r3, r2, r3
 801db20:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801db22:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801db26:	3304      	adds	r3, #4
 801db28:	9307      	str	r3, [sp, #28]
 801db2a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801db2c:	455b      	cmp	r3, fp
 801db2e:	f240 817c 	bls.w	801de2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801db32:	9a01      	ldr	r2, [sp, #4]
 801db34:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801db38:	fbb5 f3f3 	udiv	r3, r5, r3
 801db3c:	1ad3      	subs	r3, r2, r3
 801db3e:	b29b      	uxth	r3, r3
 801db40:	9316      	str	r3, [sp, #88]	; 0x58
 801db42:	9b07      	ldr	r3, [sp, #28]
 801db44:	9807      	ldr	r0, [sp, #28]
 801db46:	785a      	ldrb	r2, [r3, #1]
 801db48:	789b      	ldrb	r3, [r3, #2]
 801db4a:	7800      	ldrb	r0, [r0, #0]
 801db4c:	9011      	str	r0, [sp, #68]	; 0x44
 801db4e:	021b      	lsls	r3, r3, #8
 801db50:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801db54:	9a07      	ldr	r2, [sp, #28]
 801db56:	78d2      	ldrb	r2, [r2, #3]
 801db58:	4313      	orrs	r3, r2
 801db5a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801db5c:	3001      	adds	r0, #1
 801db5e:	441a      	add	r2, r3
 801db60:	9005      	str	r0, [sp, #20]
 801db62:	1c50      	adds	r0, r2, #1
 801db64:	9003      	str	r0, [sp, #12]
 801db66:	7852      	ldrb	r2, [r2, #1]
 801db68:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801db6a:	0212      	lsls	r2, r2, #8
 801db6c:	5cc3      	ldrb	r3, [r0, r3]
 801db6e:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801db72:	431a      	orrs	r2, r3
 801db74:	b293      	uxth	r3, r2
 801db76:	930c      	str	r3, [sp, #48]	; 0x30
 801db78:	2300      	movs	r3, #0
 801db7a:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801db7e:	9308      	str	r3, [sp, #32]
 801db80:	461a      	mov	r2, r3
 801db82:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801db86:	930e      	str	r3, [sp, #56]	; 0x38
 801db88:	f04f 0801 	mov.w	r8, #1
 801db8c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801db90:	f8cd 8008 	str.w	r8, [sp, #8]
 801db94:	46c4      	mov	ip, r8
 801db96:	930f      	str	r3, [sp, #60]	; 0x3c
 801db98:	2d00      	cmp	r5, #0
 801db9a:	d07c      	beq.n	801dc96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801db9c:	45ac      	cmp	ip, r5
 801db9e:	d26c      	bcs.n	801dc7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801dba0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801dba2:	eba5 050c 	sub.w	r5, r5, ip
 801dba6:	455b      	cmp	r3, fp
 801dba8:	b2ad      	uxth	r5, r5
 801dbaa:	4608      	mov	r0, r1
 801dbac:	d802      	bhi.n	801dbb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801dbae:	e070      	b.n	801dc92 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801dbb0:	2b00      	cmp	r3, #0
 801dbb2:	d15c      	bne.n	801dc6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801dbb4:	9b03      	ldr	r3, [sp, #12]
 801dbb6:	9a02      	ldr	r2, [sp, #8]
 801dbb8:	785b      	ldrb	r3, [r3, #1]
 801dbba:	9902      	ldr	r1, [sp, #8]
 801dbbc:	f1c2 0207 	rsb	r2, r2, #7
 801dbc0:	4093      	lsls	r3, r2
 801dbc2:	005b      	lsls	r3, r3, #1
 801dbc4:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801dbc8:	9b03      	ldr	r3, [sp, #12]
 801dbca:	781b      	ldrb	r3, [r3, #0]
 801dbcc:	410b      	asrs	r3, r1
 801dbce:	3101      	adds	r1, #1
 801dbd0:	b2c9      	uxtb	r1, r1
 801dbd2:	2908      	cmp	r1, #8
 801dbd4:	9102      	str	r1, [sp, #8]
 801dbd6:	9903      	ldr	r1, [sp, #12]
 801dbd8:	bf0a      	itet	eq
 801dbda:	3102      	addeq	r1, #2
 801dbdc:	3101      	addne	r1, #1
 801dbde:	9103      	streq	r1, [sp, #12]
 801dbe0:	b2db      	uxtb	r3, r3
 801dbe2:	bf0a      	itet	eq
 801dbe4:	2100      	moveq	r1, #0
 801dbe6:	9103      	strne	r1, [sp, #12]
 801dbe8:	9102      	streq	r1, [sp, #8]
 801dbea:	4313      	orrs	r3, r2
 801dbec:	9911      	ldr	r1, [sp, #68]	; 0x44
 801dbee:	b29a      	uxth	r2, r3
 801dbf0:	4291      	cmp	r1, r2
 801dbf2:	d30a      	bcc.n	801dc0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801dbf4:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801dbf8:	2301      	movs	r3, #1
 801dbfa:	9905      	ldr	r1, [sp, #20]
 801dbfc:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801dc00:	d30f      	bcc.n	801dc22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801dc02:	2100      	movs	r1, #0
 801dc04:	4698      	mov	r8, r3
 801dc06:	9100      	str	r1, [sp, #0]
 801dc08:	e032      	b.n	801dc70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801dc0a:	9b05      	ldr	r3, [sp, #20]
 801dc0c:	429a      	cmp	r2, r3
 801dc0e:	d318      	bcc.n	801dc42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801dc10:	eb04 0308 	add.w	r3, r4, r8
 801dc14:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801dc18:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801dc1c:	f108 0301 	add.w	r3, r8, #1
 801dc20:	b29b      	uxth	r3, r3
 801dc22:	9905      	ldr	r1, [sp, #20]
 801dc24:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801dc28:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801dc2c:	710e      	strb	r6, [r1, #4]
 801dc2e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801dc30:	80ce      	strh	r6, [r1, #6]
 801dc32:	f108 0601 	add.w	r6, r8, #1
 801dc36:	714e      	strb	r6, [r1, #5]
 801dc38:	9905      	ldr	r1, [sp, #20]
 801dc3a:	3101      	adds	r1, #1
 801dc3c:	b289      	uxth	r1, r1
 801dc3e:	9105      	str	r1, [sp, #20]
 801dc40:	e7df      	b.n	801dc02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801dc42:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801dc46:	4611      	mov	r1, r2
 801dc48:	795b      	ldrb	r3, [r3, #5]
 801dc4a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801dc4e:	4426      	add	r6, r4
 801dc50:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801dc52:	4437      	add	r7, r6
 801dc54:	2f00      	cmp	r7, #0
 801dc56:	dd06      	ble.n	801dc66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801dc58:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801dc5c:	790f      	ldrb	r7, [r1, #4]
 801dc5e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801dc62:	88c9      	ldrh	r1, [r1, #6]
 801dc64:	e7f4      	b.n	801dc50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801dc66:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801dc6a:	b29b      	uxth	r3, r3
 801dc6c:	e7c5      	b.n	801dbfa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801dc6e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801dc70:	920c      	str	r2, [sp, #48]	; 0x30
 801dc72:	4601      	mov	r1, r0
 801dc74:	9a00      	ldr	r2, [sp, #0]
 801dc76:	469c      	mov	ip, r3
 801dc78:	e78e      	b.n	801db98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801dc7a:	1957      	adds	r7, r2, r5
 801dc7c:	ebac 0305 	sub.w	r3, ip, r5
 801dc80:	b2ba      	uxth	r2, r7
 801dc82:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801dc86:	9200      	str	r2, [sp, #0]
 801dc88:	b29b      	uxth	r3, r3
 801dc8a:	2500      	movs	r5, #0
 801dc8c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801dc8e:	455a      	cmp	r2, fp
 801dc90:	d88e      	bhi.n	801dbb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801dc92:	4601      	mov	r1, r0
 801dc94:	e749      	b.n	801db2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801dc96:	458c      	cmp	ip, r1
 801dc98:	bf2c      	ite	cs
 801dc9a:	4628      	movcs	r0, r5
 801dc9c:	462b      	movcc	r3, r5
 801dc9e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801dca0:	bf27      	ittee	cs
 801dca2:	9109      	strcs	r1, [sp, #36]	; 0x24
 801dca4:	ebac 0301 	subcs.w	r3, ip, r1
 801dca8:	eba1 000c 	subcc.w	r0, r1, ip
 801dcac:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801dcb0:	bf2c      	ite	cs
 801dcb2:	b29b      	uxthcs	r3, r3
 801dcb4:	b280      	uxthcc	r0, r0
 801dcb6:	2dff      	cmp	r5, #255	; 0xff
 801dcb8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801dcba:	eb02 0705 	add.w	r7, r2, r5
 801dcbe:	b2bd      	uxth	r5, r7
 801dcc0:	9500      	str	r5, [sp, #0]
 801dcc2:	d12f      	bne.n	801dd24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801dcc4:	465e      	mov	r6, fp
 801dcc6:	9d00      	ldr	r5, [sp, #0]
 801dcc8:	42aa      	cmp	r2, r5
 801dcca:	f040 8084 	bne.w	801ddd6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801dcce:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801dcd0:	458c      	cmp	ip, r1
 801dcd2:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801dcd6:	d3d8      	bcc.n	801dc8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801dcd8:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801dcda:	9904      	ldr	r1, [sp, #16]
 801dcdc:	8812      	ldrh	r2, [r2, #0]
 801dcde:	1a52      	subs	r2, r2, r1
 801dce0:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801dce4:	9a08      	ldr	r2, [sp, #32]
 801dce6:	9916      	ldr	r1, [sp, #88]	; 0x58
 801dce8:	3201      	adds	r2, #1
 801dcea:	428a      	cmp	r2, r1
 801dcec:	9208      	str	r2, [sp, #32]
 801dcee:	f040 8092 	bne.w	801de16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801dcf2:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801dcf6:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801dcfa:	9b04      	ldr	r3, [sp, #16]
 801dcfc:	eba5 050c 	sub.w	r5, r5, ip
 801dd00:	b2ad      	uxth	r5, r5
 801dd02:	2d00      	cmp	r5, #0
 801dd04:	bf08      	it	eq
 801dd06:	4619      	moveq	r1, r3
 801dd08:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801dd0a:	bf18      	it	ne
 801dd0c:	2100      	movne	r1, #0
 801dd0e:	3301      	adds	r3, #1
 801dd10:	930d      	str	r3, [sp, #52]	; 0x34
 801dd12:	b289      	uxth	r1, r1
 801dd14:	e700      	b.n	801db18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801dd16:	bf00      	nop
 801dd18:	2001381c 	.word	0x2001381c
 801dd1c:	20013816 	.word	0x20013816
 801dd20:	fffff7fb 	.word	0xfffff7fb
 801dd24:	46d9      	mov	r9, fp
 801dd26:	9d00      	ldr	r5, [sp, #0]
 801dd28:	42aa      	cmp	r2, r5
 801dd2a:	d0d0      	beq.n	801dcce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801dd2c:	1c55      	adds	r5, r2, #1
 801dd2e:	4422      	add	r2, r4
 801dd30:	9517      	str	r5, [sp, #92]	; 0x5c
 801dd32:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801dd36:	9a06      	ldr	r2, [sp, #24]
 801dd38:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801dd3c:	4472      	add	r2, lr
 801dd3e:	9212      	str	r2, [sp, #72]	; 0x48
 801dd40:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801dd42:	f8b9 2000 	ldrh.w	r2, [r9]
 801dd46:	f897 a002 	ldrb.w	sl, [r7, #2]
 801dd4a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801dd4c:	1216      	asrs	r6, r2, #8
 801dd4e:	fb1a fa07 	smulbb	sl, sl, r7
 801dd52:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801dd56:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801dd58:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801dd5c:	fb06 a607 	mla	r6, r6, r7, sl
 801dd60:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801dd62:	f897 a001 	ldrb.w	sl, [r7, #1]
 801dd66:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801dd68:	10d5      	asrs	r5, r2, #3
 801dd6a:	fb1a fa07 	smulbb	sl, sl, r7
 801dd6e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801dd72:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801dd74:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801dd78:	fb05 a507 	mla	r5, r5, r7, sl
 801dd7c:	9f06      	ldr	r7, [sp, #24]
 801dd7e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801dd82:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801dd84:	00d2      	lsls	r2, r2, #3
 801dd86:	fb1e fe07 	smulbb	lr, lr, r7
 801dd8a:	b2d2      	uxtb	r2, r2
 801dd8c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801dd8e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801dd92:	b2b6      	uxth	r6, r6
 801dd94:	fb02 e207 	mla	r2, r2, r7, lr
 801dd98:	b292      	uxth	r2, r2
 801dd9a:	b2ad      	uxth	r5, r5
 801dd9c:	f106 0a01 	add.w	sl, r6, #1
 801dda0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801dda4:	f102 0e01 	add.w	lr, r2, #1
 801dda8:	f105 0a01 	add.w	sl, r5, #1
 801ddac:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801ddb0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ddb4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801ddb8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801ddbc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ddc0:	ea4e 0606 	orr.w	r6, lr, r6
 801ddc4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ddc8:	ea46 060a 	orr.w	r6, r6, sl
 801ddcc:	f829 6b02 	strh.w	r6, [r9], #2
 801ddd0:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801ddd4:	e7a7      	b.n	801dd26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801ddd6:	f102 0e01 	add.w	lr, r2, #1
 801ddda:	4422      	add	r2, r4
 801dddc:	9f06      	ldr	r7, [sp, #24]
 801ddde:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801dde2:	9a06      	ldr	r2, [sp, #24]
 801dde4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801dde8:	eb02 0a05 	add.w	sl, r2, r5
 801ddec:	4a13      	ldr	r2, [pc, #76]	; (801de3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801ddee:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801ddf2:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801ddf6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ddfa:	00d2      	lsls	r2, r2, #3
 801ddfc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801de00:	ea49 0202 	orr.w	r2, r9, r2
 801de04:	f817 9005 	ldrb.w	r9, [r7, r5]
 801de08:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801de0c:	f826 2b02 	strh.w	r2, [r6], #2
 801de10:	fa1f f28e 	uxth.w	r2, lr
 801de14:	e757      	b.n	801dcc6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801de16:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801de1a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801de1e:	1a2d      	subs	r5, r5, r0
 801de20:	b2ad      	uxth	r5, r5
 801de22:	2d00      	cmp	r5, #0
 801de24:	bf18      	it	ne
 801de26:	2000      	movne	r0, #0
 801de28:	e730      	b.n	801dc8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801de2a:	4b05      	ldr	r3, [pc, #20]	; (801de40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801de2c:	6818      	ldr	r0, [r3, #0]
 801de2e:	6803      	ldr	r3, [r0, #0]
 801de30:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801de32:	4798      	blx	r3
 801de34:	b01f      	add	sp, #124	; 0x7c
 801de36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801de3a:	bf00      	nop
 801de3c:	fffff800 	.word	0xfffff800
 801de40:	2001381c 	.word	0x2001381c

0801de44 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801de44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801de48:	b091      	sub	sp, #68	; 0x44
 801de4a:	469b      	mov	fp, r3
 801de4c:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801de50:	4616      	mov	r6, r2
 801de52:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801de56:	f9b3 2000 	ldrsh.w	r2, [r3]
 801de5a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801de5e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801de62:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801de66:	4604      	mov	r4, r0
 801de68:	460d      	mov	r5, r1
 801de6a:	4640      	mov	r0, r8
 801de6c:	4659      	mov	r1, fp
 801de6e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801de72:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801de76:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801de7a:	f7f2 fb9f 	bl	80105bc <_ZN8touchgfx4RectaNERKS0_>
 801de7e:	4631      	mov	r1, r6
 801de80:	4640      	mov	r0, r8
 801de82:	f7f2 fb9b 	bl	80105bc <_ZN8touchgfx4RectaNERKS0_>
 801de86:	4b74      	ldr	r3, [pc, #464]	; (801e058 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801de88:	8818      	ldrh	r0, [r3, #0]
 801de8a:	4b74      	ldr	r3, [pc, #464]	; (801e05c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801de8c:	8819      	ldrh	r1, [r3, #0]
 801de8e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801de92:	2b00      	cmp	r3, #0
 801de94:	b202      	sxth	r2, r0
 801de96:	b20e      	sxth	r6, r1
 801de98:	da07      	bge.n	801deaa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801de9a:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801de9e:	4463      	add	r3, ip
 801dea0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801dea4:	2300      	movs	r3, #0
 801dea6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801deaa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801deae:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801deb2:	1ad2      	subs	r2, r2, r3
 801deb4:	4594      	cmp	ip, r2
 801deb6:	bfc4      	itt	gt
 801deb8:	1ac2      	subgt	r2, r0, r3
 801deba:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801debe:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801dec2:	2a00      	cmp	r2, #0
 801dec4:	da07      	bge.n	801ded6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801dec6:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801deca:	4462      	add	r2, ip
 801decc:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801ded0:	2200      	movs	r2, #0
 801ded2:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801ded6:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801deda:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801dede:	eba6 060a 	sub.w	r6, r6, sl
 801dee2:	42b2      	cmp	r2, r6
 801dee4:	bfc4      	itt	gt
 801dee6:	eba1 020a 	subgt.w	r2, r1, sl
 801deea:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801deee:	4a5c      	ldr	r2, [pc, #368]	; (801e060 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801def0:	7812      	ldrb	r2, [r2, #0]
 801def2:	b9a2      	cbnz	r2, 801df1e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801def4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801def8:	4286      	cmp	r6, r0
 801defa:	4640      	mov	r0, r8
 801defc:	9303      	str	r3, [sp, #12]
 801defe:	bf14      	ite	ne
 801df00:	2600      	movne	r6, #0
 801df02:	2601      	moveq	r6, #1
 801df04:	f7f2 fb9d 	bl	8010642 <_ZNK8touchgfx4Rect7isEmptyEv>
 801df08:	9b03      	ldr	r3, [sp, #12]
 801df0a:	b160      	cbz	r0, 801df26 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801df0c:	2300      	movs	r3, #0
 801df0e:	8023      	strh	r3, [r4, #0]
 801df10:	8063      	strh	r3, [r4, #2]
 801df12:	80a3      	strh	r3, [r4, #4]
 801df14:	4620      	mov	r0, r4
 801df16:	80e3      	strh	r3, [r4, #6]
 801df18:	b011      	add	sp, #68	; 0x44
 801df1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801df1e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801df22:	428e      	cmp	r6, r1
 801df24:	e7e9      	b.n	801defa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801df26:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801df2a:	9205      	str	r2, [sp, #20]
 801df2c:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801df30:	9206      	str	r2, [sp, #24]
 801df32:	f8bb 2000 	ldrh.w	r2, [fp]
 801df36:	900e      	str	r0, [sp, #56]	; 0x38
 801df38:	1a9b      	subs	r3, r3, r2
 801df3a:	b21b      	sxth	r3, r3
 801df3c:	9303      	str	r3, [sp, #12]
 801df3e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801df42:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801df46:	ebaa 0a03 	sub.w	sl, sl, r3
 801df4a:	fa0f f38a 	sxth.w	r3, sl
 801df4e:	9304      	str	r3, [sp, #16]
 801df50:	9b03      	ldr	r3, [sp, #12]
 801df52:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801df56:	9b04      	ldr	r3, [sp, #16]
 801df58:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801df5c:	9b05      	ldr	r3, [sp, #20]
 801df5e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801df62:	a90e      	add	r1, sp, #56	; 0x38
 801df64:	9b06      	ldr	r3, [sp, #24]
 801df66:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801df6a:	a80c      	add	r0, sp, #48	; 0x30
 801df6c:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801df70:	f7f8 f906 	bl	8016180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801df74:	4640      	mov	r0, r8
 801df76:	f7f8 f8bf 	bl	80160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801df7a:	a80e      	add	r0, sp, #56	; 0x38
 801df7c:	f7f8 f8bc 	bl	80160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801df80:	4b38      	ldr	r3, [pc, #224]	; (801e064 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801df82:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801df86:	881b      	ldrh	r3, [r3, #0]
 801df88:	9307      	str	r3, [sp, #28]
 801df8a:	682b      	ldr	r3, [r5, #0]
 801df8c:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801e068 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801df90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801df92:	4628      	mov	r0, r5
 801df94:	4798      	blx	r3
 801df96:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801df9a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801df9e:	4681      	mov	r9, r0
 801dfa0:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801dfa4:	f8db 0000 	ldr.w	r0, [fp]
 801dfa8:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801dfaa:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801dfae:	6803      	ldr	r3, [r0, #0]
 801dfb0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801dfb2:	4798      	blx	r3
 801dfb4:	4607      	mov	r7, r0
 801dfb6:	f8db 0000 	ldr.w	r0, [fp]
 801dfba:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801dfbe:	6803      	ldr	r3, [r0, #0]
 801dfc0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801dfc4:	9109      	str	r1, [sp, #36]	; 0x24
 801dfc6:	9208      	str	r2, [sp, #32]
 801dfc8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801dfca:	4798      	blx	r3
 801dfcc:	f010 0f01 	tst.w	r0, #1
 801dfd0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801dfd4:	d012      	beq.n	801dffc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801dfd6:	f8db 0000 	ldr.w	r0, [fp]
 801dfda:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801dfde:	6803      	ldr	r3, [r0, #0]
 801dfe0:	9200      	str	r2, [sp, #0]
 801dfe2:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801dfe4:	e898 0006 	ldmia.w	r8, {r1, r2}
 801dfe8:	462b      	mov	r3, r5
 801dfea:	47b0      	blx	r6
 801dfec:	9b03      	ldr	r3, [sp, #12]
 801dfee:	8023      	strh	r3, [r4, #0]
 801dff0:	9b04      	ldr	r3, [sp, #16]
 801dff2:	8063      	strh	r3, [r4, #2]
 801dff4:	9b05      	ldr	r3, [sp, #20]
 801dff6:	80a3      	strh	r3, [r4, #4]
 801dff8:	9b06      	ldr	r3, [sp, #24]
 801dffa:	e78b      	b.n	801df14 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801dffc:	fb09 f202 	mul.w	r2, r9, r2
 801e000:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801e004:	440f      	add	r7, r1
 801e006:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801e00a:	b166      	cbz	r6, 801e026 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801e00c:	9a07      	ldr	r2, [sp, #28]
 801e00e:	4592      	cmp	sl, r2
 801e010:	d109      	bne.n	801e026 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801e012:	f8db 0000 	ldr.w	r0, [fp]
 801e016:	6802      	ldr	r2, [r0, #0]
 801e018:	fb09 f303 	mul.w	r3, r9, r3
 801e01c:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801e01e:	4629      	mov	r1, r5
 801e020:	463a      	mov	r2, r7
 801e022:	47b0      	blx	r6
 801e024:	e7e2      	b.n	801dfec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801e026:	fb0a f303 	mul.w	r3, sl, r3
 801e02a:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801e068 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801e02e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801e032:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801e036:	4545      	cmp	r5, r8
 801e038:	d2d8      	bcs.n	801dfec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801e03a:	f8db 0000 	ldr.w	r0, [fp]
 801e03e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e042:	6802      	ldr	r2, [r0, #0]
 801e044:	4629      	mov	r1, r5
 801e046:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801e04a:	005b      	lsls	r3, r3, #1
 801e04c:	463a      	mov	r2, r7
 801e04e:	47d0      	blx	sl
 801e050:	444f      	add	r7, r9
 801e052:	4435      	add	r5, r6
 801e054:	e7ef      	b.n	801e036 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801e056:	bf00      	nop
 801e058:	20013810 	.word	0x20013810
 801e05c:	20013812 	.word	0x20013812
 801e060:	20013814 	.word	0x20013814
 801e064:	20013816 	.word	0x20013816
 801e068:	2001381c 	.word	0x2001381c

0801e06c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801e06c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801e06e:	4606      	mov	r6, r0
 801e070:	b087      	sub	sp, #28
 801e072:	460c      	mov	r4, r1
 801e074:	4617      	mov	r7, r2
 801e076:	461d      	mov	r5, r3
 801e078:	b333      	cbz	r3, 801e0c8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e07a:	4608      	mov	r0, r1
 801e07c:	f7f2 fae1 	bl	8010642 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e080:	bb10      	cbnz	r0, 801e0c8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e082:	6820      	ldr	r0, [r4, #0]
 801e084:	6861      	ldr	r1, [r4, #4]
 801e086:	4c1c      	ldr	r4, [pc, #112]	; (801e0f8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801e088:	ab04      	add	r3, sp, #16
 801e08a:	c303      	stmia	r3!, {r0, r1}
 801e08c:	a804      	add	r0, sp, #16
 801e08e:	f7f8 f833 	bl	80160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e092:	6820      	ldr	r0, [r4, #0]
 801e094:	6803      	ldr	r3, [r0, #0]
 801e096:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e098:	4798      	blx	r3
 801e09a:	2dff      	cmp	r5, #255	; 0xff
 801e09c:	d016      	beq.n	801e0cc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801e09e:	f010 0f08 	tst.w	r0, #8
 801e0a2:	6820      	ldr	r0, [r4, #0]
 801e0a4:	d015      	beq.n	801e0d2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801e0a6:	2400      	movs	r4, #0
 801e0a8:	6801      	ldr	r1, [r0, #0]
 801e0aa:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801e0ae:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e0b2:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801e0b6:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801e0ba:	9401      	str	r4, [sp, #4]
 801e0bc:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801e0c0:	9400      	str	r4, [sp, #0]
 801e0c2:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801e0c4:	4639      	mov	r1, r7
 801e0c6:	47a0      	blx	r4
 801e0c8:	b007      	add	sp, #28
 801e0ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801e0cc:	f010 0f02 	tst.w	r0, #2
 801e0d0:	e7e7      	b.n	801e0a2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801e0d2:	6803      	ldr	r3, [r0, #0]
 801e0d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e0d6:	4798      	blx	r3
 801e0d8:	4b08      	ldr	r3, [pc, #32]	; (801e0fc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801e0da:	881a      	ldrh	r2, [r3, #0]
 801e0dc:	6833      	ldr	r3, [r6, #0]
 801e0de:	e9cd 7500 	strd	r7, r5, [sp]
 801e0e2:	4601      	mov	r1, r0
 801e0e4:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801e0e6:	4630      	mov	r0, r6
 801e0e8:	ab04      	add	r3, sp, #16
 801e0ea:	47a8      	blx	r5
 801e0ec:	6820      	ldr	r0, [r4, #0]
 801e0ee:	6803      	ldr	r3, [r0, #0]
 801e0f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e0f2:	4798      	blx	r3
 801e0f4:	e7e8      	b.n	801e0c8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e0f6:	bf00      	nop
 801e0f8:	2001381c 	.word	0x2001381c
 801e0fc:	20013816 	.word	0x20013816

0801e100 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801e100:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e104:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801e108:	9e08      	ldr	r6, [sp, #32]
 801e10a:	4688      	mov	r8, r1
 801e10c:	4614      	mov	r4, r2
 801e10e:	461d      	mov	r5, r3
 801e110:	2f00      	cmp	r7, #0
 801e112:	f000 80a9 	beq.w	801e268 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e116:	4618      	mov	r0, r3
 801e118:	f7f2 fa93 	bl	8010642 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e11c:	2800      	cmp	r0, #0
 801e11e:	f040 80a3 	bne.w	801e268 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e122:	f9b5 1000 	ldrsh.w	r1, [r5]
 801e126:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801e12a:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801e12e:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801e132:	fb04 1303 	mla	r3, r4, r3, r1
 801e136:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801e13a:	4365      	muls	r5, r4
 801e13c:	2fff      	cmp	r7, #255	; 0xff
 801e13e:	eba4 0200 	sub.w	r2, r4, r0
 801e142:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801e146:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801e14a:	d04a      	beq.n	801e1e2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801e14c:	b2bc      	uxth	r4, r7
 801e14e:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801e152:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801e156:	fa5f f788 	uxtb.w	r7, r8
 801e15a:	b2f3      	uxtb	r3, r6
 801e15c:	0040      	lsls	r0, r0, #1
 801e15e:	fb0e fe04 	mul.w	lr, lr, r4
 801e162:	4367      	muls	r7, r4
 801e164:	4363      	muls	r3, r4
 801e166:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801e16a:	fa1f fc8c 	uxth.w	ip, ip
 801e16e:	42a9      	cmp	r1, r5
 801e170:	d27a      	bcs.n	801e268 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e172:	eb01 0900 	add.w	r9, r1, r0
 801e176:	4549      	cmp	r1, r9
 801e178:	d231      	bcs.n	801e1de <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801e17a:	880a      	ldrh	r2, [r1, #0]
 801e17c:	1214      	asrs	r4, r2, #8
 801e17e:	10d6      	asrs	r6, r2, #3
 801e180:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801e184:	00d2      	lsls	r2, r2, #3
 801e186:	b2d2      	uxtb	r2, r2
 801e188:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801e18c:	fb14 f40c 	smulbb	r4, r4, ip
 801e190:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e194:	4474      	add	r4, lr
 801e196:	fb12 f20c 	smulbb	r2, r2, ip
 801e19a:	b2a4      	uxth	r4, r4
 801e19c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e1a0:	441a      	add	r2, r3
 801e1a2:	b292      	uxth	r2, r2
 801e1a4:	f104 0a01 	add.w	sl, r4, #1
 801e1a8:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801e1ac:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801e1b0:	fb16 f60c 	smulbb	r6, r6, ip
 801e1b4:	f102 0a01 	add.w	sl, r2, #1
 801e1b8:	443e      	add	r6, r7
 801e1ba:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801e1be:	b2b6      	uxth	r6, r6
 801e1c0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801e1c4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e1c8:	4322      	orrs	r2, r4
 801e1ca:	1c74      	adds	r4, r6, #1
 801e1cc:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801e1d0:	0976      	lsrs	r6, r6, #5
 801e1d2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e1d6:	4332      	orrs	r2, r6
 801e1d8:	f821 2b02 	strh.w	r2, [r1], #2
 801e1dc:	e7cb      	b.n	801e176 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801e1de:	4441      	add	r1, r8
 801e1e0:	e7c5      	b.n	801e16e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801e1e2:	4f22      	ldr	r7, [pc, #136]	; (801e26c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801e1e4:	0973      	lsrs	r3, r6, #5
 801e1e6:	ea08 0707 	and.w	r7, r8, r7
 801e1ea:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e1ee:	433b      	orrs	r3, r7
 801e1f0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801e1f4:	4333      	orrs	r3, r6
 801e1f6:	07e7      	lsls	r7, r4, #31
 801e1f8:	b29b      	uxth	r3, r3
 801e1fa:	d50b      	bpl.n	801e214 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801e1fc:	0040      	lsls	r0, r0, #1
 801e1fe:	0052      	lsls	r2, r2, #1
 801e200:	42a9      	cmp	r1, r5
 801e202:	d231      	bcs.n	801e268 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e204:	180c      	adds	r4, r1, r0
 801e206:	42a1      	cmp	r1, r4
 801e208:	d202      	bcs.n	801e210 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801e20a:	f821 3b02 	strh.w	r3, [r1], #2
 801e20e:	e7fa      	b.n	801e206 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801e210:	4411      	add	r1, r2
 801e212:	e7f5      	b.n	801e200 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801e214:	078e      	lsls	r6, r1, #30
 801e216:	d008      	beq.n	801e22a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801e218:	0066      	lsls	r6, r4, #1
 801e21a:	460a      	mov	r2, r1
 801e21c:	42aa      	cmp	r2, r5
 801e21e:	d202      	bcs.n	801e226 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801e220:	8013      	strh	r3, [r2, #0]
 801e222:	4432      	add	r2, r6
 801e224:	e7fa      	b.n	801e21c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801e226:	3102      	adds	r1, #2
 801e228:	3801      	subs	r0, #1
 801e22a:	07c2      	lsls	r2, r0, #31
 801e22c:	d50b      	bpl.n	801e246 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801e22e:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801e232:	3a01      	subs	r2, #1
 801e234:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801e238:	0066      	lsls	r6, r4, #1
 801e23a:	42aa      	cmp	r2, r5
 801e23c:	d202      	bcs.n	801e244 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801e23e:	8013      	strh	r3, [r2, #0]
 801e240:	4432      	add	r2, r6
 801e242:	e7fa      	b.n	801e23a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801e244:	3801      	subs	r0, #1
 801e246:	b178      	cbz	r0, 801e268 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e248:	1040      	asrs	r0, r0, #1
 801e24a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801e24e:	0080      	lsls	r0, r0, #2
 801e250:	0064      	lsls	r4, r4, #1
 801e252:	42a9      	cmp	r1, r5
 801e254:	d208      	bcs.n	801e268 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e256:	180e      	adds	r6, r1, r0
 801e258:	460a      	mov	r2, r1
 801e25a:	42b2      	cmp	r2, r6
 801e25c:	d202      	bcs.n	801e264 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801e25e:	f842 3b04 	str.w	r3, [r2], #4
 801e262:	e7fa      	b.n	801e25a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801e264:	4421      	add	r1, r4
 801e266:	e7f4      	b.n	801e252 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801e268:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e26c:	00fff800 	.word	0x00fff800

0801e270 <_ZN8touchgfx8LCD16bppC1Ev>:
 801e270:	2200      	movs	r2, #0
 801e272:	4912      	ldr	r1, [pc, #72]	; (801e2bc <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801e274:	6042      	str	r2, [r0, #4]
 801e276:	6001      	str	r1, [r0, #0]
 801e278:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801e27c:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801e280:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801e284:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801e288:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801e28c:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801e290:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801e294:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801e298:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801e29c:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801e2a0:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801e2a4:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801e2a8:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801e2ac:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801e2b0:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801e2b4:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801e2b8:	4770      	bx	lr
 801e2ba:	bf00      	nop
 801e2bc:	0802fa20 	.word	0x0802fa20

0801e2c0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801e2c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e2c4:	460d      	mov	r5, r1
 801e2c6:	b08d      	sub	sp, #52	; 0x34
 801e2c8:	4604      	mov	r4, r0
 801e2ca:	6808      	ldr	r0, [r1, #0]
 801e2cc:	6849      	ldr	r1, [r1, #4]
 801e2ce:	4699      	mov	r9, r3
 801e2d0:	ab08      	add	r3, sp, #32
 801e2d2:	c303      	stmia	r3!, {r0, r1}
 801e2d4:	6810      	ldr	r0, [r2, #0]
 801e2d6:	6851      	ldr	r1, [r2, #4]
 801e2d8:	ab0a      	add	r3, sp, #40	; 0x28
 801e2da:	c303      	stmia	r3!, {r0, r1}
 801e2dc:	a808      	add	r0, sp, #32
 801e2de:	f7f7 ff0b 	bl	80160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e2e2:	4629      	mov	r1, r5
 801e2e4:	a80a      	add	r0, sp, #40	; 0x28
 801e2e6:	f7f7 ff4b 	bl	8016180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e2ea:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801e2ee:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801e2f2:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801e2f6:	4d63      	ldr	r5, [pc, #396]	; (801e484 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801e2f8:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801e2fc:	6828      	ldr	r0, [r5, #0]
 801e2fe:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801e302:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e306:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801e30a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801e30e:	440a      	add	r2, r1
 801e310:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801e314:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801e318:	4413      	add	r3, r2
 801e31a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801e31e:	6803      	ldr	r3, [r0, #0]
 801e320:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e322:	4798      	blx	r3
 801e324:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801e328:	d119      	bne.n	801e35e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801e32a:	f010 0f20 	tst.w	r0, #32
 801e32e:	6828      	ldr	r0, [r5, #0]
 801e330:	d018      	beq.n	801e364 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801e332:	2500      	movs	r5, #0
 801e334:	6801      	ldr	r1, [r0, #0]
 801e336:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801e33a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801e33e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801e342:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801e346:	9502      	str	r5, [sp, #8]
 801e348:	b2b6      	uxth	r6, r6
 801e34a:	fa1f f588 	uxth.w	r5, r8
 801e34e:	9601      	str	r6, [sp, #4]
 801e350:	9500      	str	r5, [sp, #0]
 801e352:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801e354:	4621      	mov	r1, r4
 801e356:	47a8      	blx	r5
 801e358:	b00d      	add	sp, #52	; 0x34
 801e35a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e35e:	f010 0f40 	tst.w	r0, #64	; 0x40
 801e362:	e7e4      	b.n	801e32e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801e364:	6803      	ldr	r3, [r0, #0]
 801e366:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e368:	4798      	blx	r3
 801e36a:	4947      	ldr	r1, [pc, #284]	; (801e488 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801e36c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801e370:	880b      	ldrh	r3, [r1, #0]
 801e372:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801e376:	fb03 5202 	mla	r2, r3, r2, r5
 801e37a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e37e:	4373      	muls	r3, r6
 801e380:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e384:	9307      	str	r3, [sp, #28]
 801e386:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801e38a:	9306      	str	r3, [sp, #24]
 801e38c:	468a      	mov	sl, r1
 801e38e:	9b07      	ldr	r3, [sp, #28]
 801e390:	4298      	cmp	r0, r3
 801e392:	d270      	bcs.n	801e476 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801e394:	9b06      	ldr	r3, [sp, #24]
 801e396:	4621      	mov	r1, r4
 801e398:	eb00 0b03 	add.w	fp, r0, r3
 801e39c:	4558      	cmp	r0, fp
 801e39e:	d25d      	bcs.n	801e45c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801e3a0:	f851 4b04 	ldr.w	r4, [r1], #4
 801e3a4:	0e23      	lsrs	r3, r4, #24
 801e3a6:	d014      	beq.n	801e3d2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801e3a8:	2bff      	cmp	r3, #255	; 0xff
 801e3aa:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801e3ae:	d112      	bne.n	801e3d6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801e3b0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801e3b4:	d10f      	bne.n	801e3d6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801e3b6:	0963      	lsrs	r3, r4, #5
 801e3b8:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801e3bc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e3c0:	f02c 0c07 	bic.w	ip, ip, #7
 801e3c4:	ea43 0c0c 	orr.w	ip, r3, ip
 801e3c8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e3cc:	ea4c 0404 	orr.w	r4, ip, r4
 801e3d0:	8004      	strh	r4, [r0, #0]
 801e3d2:	3002      	adds	r0, #2
 801e3d4:	e7e2      	b.n	801e39c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801e3d6:	fb09 f303 	mul.w	r3, r9, r3
 801e3da:	8807      	ldrh	r7, [r0, #0]
 801e3dc:	1c5a      	adds	r2, r3, #1
 801e3de:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801e3e2:	1212      	asrs	r2, r2, #8
 801e3e4:	123e      	asrs	r6, r7, #8
 801e3e6:	b293      	uxth	r3, r2
 801e3e8:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801e3ec:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e3f0:	43d2      	mvns	r2, r2
 801e3f2:	b2d2      	uxtb	r2, r2
 801e3f4:	10fd      	asrs	r5, r7, #3
 801e3f6:	fb1e fe03 	smulbb	lr, lr, r3
 801e3fa:	00ff      	lsls	r7, r7, #3
 801e3fc:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e400:	fb06 e602 	mla	r6, r6, r2, lr
 801e404:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e408:	b2ff      	uxtb	r7, r7
 801e40a:	fa5f fc8c 	uxtb.w	ip, ip
 801e40e:	b2e4      	uxtb	r4, r4
 801e410:	b2b6      	uxth	r6, r6
 801e412:	fb1c fc03 	smulbb	ip, ip, r3
 801e416:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801e41a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801e41e:	fb14 f403 	smulbb	r4, r4, r3
 801e422:	fb05 c502 	mla	r5, r5, r2, ip
 801e426:	f106 0e01 	add.w	lr, r6, #1
 801e42a:	fb07 4702 	mla	r7, r7, r2, r4
 801e42e:	b2ad      	uxth	r5, r5
 801e430:	b2bf      	uxth	r7, r7
 801e432:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801e436:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801e43a:	f105 0c01 	add.w	ip, r5, #1
 801e43e:	1c7e      	adds	r6, r7, #1
 801e440:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801e444:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e448:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e44c:	096d      	lsrs	r5, r5, #5
 801e44e:	ea46 060e 	orr.w	r6, r6, lr
 801e452:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e456:	432e      	orrs	r6, r5
 801e458:	8006      	strh	r6, [r0, #0]
 801e45a:	e7ba      	b.n	801e3d2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801e45c:	f8ba 3000 	ldrh.w	r3, [sl]
 801e460:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801e464:	eba3 0308 	sub.w	r3, r3, r8
 801e468:	eba4 0408 	sub.w	r4, r4, r8
 801e46c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e470:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801e474:	e78b      	b.n	801e38e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801e476:	4b03      	ldr	r3, [pc, #12]	; (801e484 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801e478:	6818      	ldr	r0, [r3, #0]
 801e47a:	6803      	ldr	r3, [r0, #0]
 801e47c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e47e:	4798      	blx	r3
 801e480:	e76a      	b.n	801e358 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801e482:	bf00      	nop
 801e484:	2001381c 	.word	0x2001381c
 801e488:	20013816 	.word	0x20013816

0801e48c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801e48c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801e490:	460c      	mov	r4, r1
 801e492:	b085      	sub	sp, #20
 801e494:	6810      	ldr	r0, [r2, #0]
 801e496:	6851      	ldr	r1, [r2, #4]
 801e498:	466d      	mov	r5, sp
 801e49a:	c503      	stmia	r5!, {r0, r1}
 801e49c:	6818      	ldr	r0, [r3, #0]
 801e49e:	6859      	ldr	r1, [r3, #4]
 801e4a0:	4616      	mov	r6, r2
 801e4a2:	c503      	stmia	r5!, {r0, r1}
 801e4a4:	4668      	mov	r0, sp
 801e4a6:	f7f7 fe27 	bl	80160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e4aa:	4631      	mov	r1, r6
 801e4ac:	a802      	add	r0, sp, #8
 801e4ae:	f7f7 fe67 	bl	8016180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e4b2:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801e4b6:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801e4ba:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801e4be:	4d28      	ldr	r5, [pc, #160]	; (801e560 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801e4c0:	4e28      	ldr	r6, [pc, #160]	; (801e564 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801e4c2:	6828      	ldr	r0, [r5, #0]
 801e4c4:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801e4c8:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801e4cc:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e4d0:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801e4d4:	f8bd 1000 	ldrh.w	r1, [sp]
 801e4d8:	440a      	add	r2, r1
 801e4da:	f8ad 2008 	strh.w	r2, [sp, #8]
 801e4de:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801e4e2:	4413      	add	r3, r2
 801e4e4:	f8ad 300a 	strh.w	r3, [sp, #10]
 801e4e8:	6803      	ldr	r3, [r0, #0]
 801e4ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e4ec:	4798      	blx	r3
 801e4ee:	8833      	ldrh	r3, [r6, #0]
 801e4f0:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801e4f4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801e4f8:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801e568 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801e4fc:	fb03 1202 	mla	r2, r3, r2, r1
 801e500:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e504:	fb08 f303 	mul.w	r3, r8, r3
 801e508:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e50c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801e510:	4298      	cmp	r0, r3
 801e512:	d21d      	bcs.n	801e550 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801e514:	eb00 080c 	add.w	r8, r0, ip
 801e518:	4540      	cmp	r0, r8
 801e51a:	d20f      	bcs.n	801e53c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801e51c:	f854 1b04 	ldr.w	r1, [r4], #4
 801e520:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801e524:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801e528:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e52c:	ea42 0209 	orr.w	r2, r2, r9
 801e530:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801e534:	430a      	orrs	r2, r1
 801e536:	f820 2b02 	strh.w	r2, [r0], #2
 801e53a:	e7ed      	b.n	801e518 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801e53c:	8832      	ldrh	r2, [r6, #0]
 801e53e:	1bd2      	subs	r2, r2, r7
 801e540:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e544:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801e548:	1bd2      	subs	r2, r2, r7
 801e54a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801e54e:	e7df      	b.n	801e510 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801e550:	6828      	ldr	r0, [r5, #0]
 801e552:	6803      	ldr	r3, [r0, #0]
 801e554:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e556:	4798      	blx	r3
 801e558:	b005      	add	sp, #20
 801e55a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e55e:	bf00      	nop
 801e560:	2001381c 	.word	0x2001381c
 801e564:	20013816 	.word	0x20013816
 801e568:	fffff800 	.word	0xfffff800

0801e56c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801e56c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e570:	460e      	mov	r6, r1
 801e572:	b08e      	sub	sp, #56	; 0x38
 801e574:	4604      	mov	r4, r0
 801e576:	6808      	ldr	r0, [r1, #0]
 801e578:	6849      	ldr	r1, [r1, #4]
 801e57a:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801e754 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801e57e:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801e758 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801e582:	461d      	mov	r5, r3
 801e584:	ab0a      	add	r3, sp, #40	; 0x28
 801e586:	c303      	stmia	r3!, {r0, r1}
 801e588:	6810      	ldr	r0, [r2, #0]
 801e58a:	6851      	ldr	r1, [r2, #4]
 801e58c:	ab0c      	add	r3, sp, #48	; 0x30
 801e58e:	c303      	stmia	r3!, {r0, r1}
 801e590:	a80a      	add	r0, sp, #40	; 0x28
 801e592:	f7f7 fdb1 	bl	80160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e596:	4631      	mov	r1, r6
 801e598:	a80c      	add	r0, sp, #48	; 0x30
 801e59a:	f7f7 fdf1 	bl	8016180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e59e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801e5a2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801e5a6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801e5aa:	f8d8 0000 	ldr.w	r0, [r8]
 801e5ae:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801e5b2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801e5b6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e5ba:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801e5be:	440c      	add	r4, r1
 801e5c0:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801e5c4:	440a      	add	r2, r1
 801e5c6:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801e5ca:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801e5ce:	4413      	add	r3, r2
 801e5d0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801e5d4:	6803      	ldr	r3, [r0, #0]
 801e5d6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e5d8:	4798      	blx	r3
 801e5da:	2dff      	cmp	r5, #255	; 0xff
 801e5dc:	d124      	bne.n	801e628 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801e5de:	f010 0f01 	tst.w	r0, #1
 801e5e2:	f8d8 0000 	ldr.w	r0, [r8]
 801e5e6:	d022      	beq.n	801e62e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801e5e8:	2100      	movs	r1, #0
 801e5ea:	f8d0 c000 	ldr.w	ip, [r0]
 801e5ee:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801e5f2:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801e5f6:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801e5fa:	f04f 0e01 	mov.w	lr, #1
 801e5fe:	f8cd e018 	str.w	lr, [sp, #24]
 801e602:	f8b9 e000 	ldrh.w	lr, [r9]
 801e606:	9503      	str	r5, [sp, #12]
 801e608:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801e60c:	b2b6      	uxth	r6, r6
 801e60e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801e612:	9102      	str	r1, [sp, #8]
 801e614:	b2bf      	uxth	r7, r7
 801e616:	9601      	str	r6, [sp, #4]
 801e618:	9700      	str	r7, [sp, #0]
 801e61a:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801e61e:	4621      	mov	r1, r4
 801e620:	47a8      	blx	r5
 801e622:	b00e      	add	sp, #56	; 0x38
 801e624:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e628:	f010 0f04 	tst.w	r0, #4
 801e62c:	e7d9      	b.n	801e5e2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801e62e:	6803      	ldr	r3, [r0, #0]
 801e630:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e632:	4798      	blx	r3
 801e634:	f8b9 3000 	ldrh.w	r3, [r9]
 801e638:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801e63c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801e640:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801e644:	fb03 1202 	mla	r2, r3, r2, r1
 801e648:	ebac 0c07 	sub.w	ip, ip, r7
 801e64c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e650:	435e      	muls	r6, r3
 801e652:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801e656:	2dff      	cmp	r5, #255	; 0xff
 801e658:	eba3 0707 	sub.w	r7, r3, r7
 801e65c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801e660:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801e664:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801e668:	d049      	beq.n	801e6fe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801e66a:	43eb      	mvns	r3, r5
 801e66c:	fa1f f985 	uxth.w	r9, r5
 801e670:	b2db      	uxtb	r3, r3
 801e672:	42b0      	cmp	r0, r6
 801e674:	d266      	bcs.n	801e744 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801e676:	eb00 0a0e 	add.w	sl, r0, lr
 801e67a:	4550      	cmp	r0, sl
 801e67c:	4621      	mov	r1, r4
 801e67e:	f104 0403 	add.w	r4, r4, #3
 801e682:	d25b      	bcs.n	801e73c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801e684:	8802      	ldrh	r2, [r0, #0]
 801e686:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801e68a:	ea4f 2822 	mov.w	r8, r2, asr #8
 801e68e:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801e692:	fb11 f109 	smulbb	r1, r1, r9
 801e696:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801e69a:	10d5      	asrs	r5, r2, #3
 801e69c:	fb08 1803 	mla	r8, r8, r3, r1
 801e6a0:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801e6a4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e6a8:	fb11 f109 	smulbb	r1, r1, r9
 801e6ac:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801e6b0:	fb05 1503 	mla	r5, r5, r3, r1
 801e6b4:	00d2      	lsls	r2, r2, #3
 801e6b6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801e6ba:	b2d2      	uxtb	r2, r2
 801e6bc:	fb11 f109 	smulbb	r1, r1, r9
 801e6c0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e6c4:	fa1f f888 	uxth.w	r8, r8
 801e6c8:	fb02 1203 	mla	r2, r2, r3, r1
 801e6cc:	b292      	uxth	r2, r2
 801e6ce:	f108 0101 	add.w	r1, r8, #1
 801e6d2:	b2ad      	uxth	r5, r5
 801e6d4:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801e6d8:	1c51      	adds	r1, r2, #1
 801e6da:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e6de:	1c69      	adds	r1, r5, #1
 801e6e0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801e6e4:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801e6e8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e6ec:	096d      	lsrs	r5, r5, #5
 801e6ee:	ea42 0208 	orr.w	r2, r2, r8
 801e6f2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e6f6:	432a      	orrs	r2, r5
 801e6f8:	f820 2b02 	strh.w	r2, [r0], #2
 801e6fc:	e7bd      	b.n	801e67a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801e6fe:	4a14      	ldr	r2, [pc, #80]	; (801e750 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801e700:	42b0      	cmp	r0, r6
 801e702:	d21f      	bcs.n	801e744 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801e704:	eb00 050e 	add.w	r5, r0, lr
 801e708:	42a8      	cmp	r0, r5
 801e70a:	4621      	mov	r1, r4
 801e70c:	f104 0403 	add.w	r4, r4, #3
 801e710:	d210      	bcs.n	801e734 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801e712:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801e716:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801e71a:	00db      	lsls	r3, r3, #3
 801e71c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801e720:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e724:	430b      	orrs	r3, r1
 801e726:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801e72a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801e72e:	f820 3b02 	strh.w	r3, [r0], #2
 801e732:	e7e9      	b.n	801e708 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801e734:	4438      	add	r0, r7
 801e736:	eb01 040c 	add.w	r4, r1, ip
 801e73a:	e7e1      	b.n	801e700 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801e73c:	4438      	add	r0, r7
 801e73e:	eb01 040c 	add.w	r4, r1, ip
 801e742:	e796      	b.n	801e672 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801e744:	4b03      	ldr	r3, [pc, #12]	; (801e754 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801e746:	6818      	ldr	r0, [r3, #0]
 801e748:	6803      	ldr	r3, [r0, #0]
 801e74a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e74c:	4798      	blx	r3
 801e74e:	e768      	b.n	801e622 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801e750:	fffff800 	.word	0xfffff800
 801e754:	2001381c 	.word	0x2001381c
 801e758:	20013816 	.word	0x20013816

0801e75c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801e75c:	b4f0      	push	{r4, r5, r6, r7}
 801e75e:	4616      	mov	r6, r2
 801e760:	2e01      	cmp	r6, #1
 801e762:	461c      	mov	r4, r3
 801e764:	460d      	mov	r5, r1
 801e766:	9a04      	ldr	r2, [sp, #16]
 801e768:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801e76c:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801e770:	d012      	beq.n	801e798 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801e772:	d303      	bcc.n	801e77c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801e774:	2e02      	cmp	r6, #2
 801e776:	d00a      	beq.n	801e78e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801e778:	bcf0      	pop	{r4, r5, r6, r7}
 801e77a:	4770      	bx	lr
 801e77c:	6805      	ldr	r5, [r0, #0]
 801e77e:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801e782:	68ed      	ldr	r5, [r5, #12]
 801e784:	4613      	mov	r3, r2
 801e786:	46ac      	mov	ip, r5
 801e788:	4622      	mov	r2, r4
 801e78a:	bcf0      	pop	{r4, r5, r6, r7}
 801e78c:	4760      	bx	ip
 801e78e:	4621      	mov	r1, r4
 801e790:	4628      	mov	r0, r5
 801e792:	bcf0      	pop	{r4, r5, r6, r7}
 801e794:	f7ff bd94 	b.w	801e2c0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e798:	4621      	mov	r1, r4
 801e79a:	4628      	mov	r0, r5
 801e79c:	bcf0      	pop	{r4, r5, r6, r7}
 801e79e:	f7ff bee5 	b.w	801e56c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801e7a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801e7a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e7a8:	4681      	mov	r9, r0
 801e7aa:	b093      	sub	sp, #76	; 0x4c
 801e7ac:	6810      	ldr	r0, [r2, #0]
 801e7ae:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801e7b2:	4f6d      	ldr	r7, [pc, #436]	; (801e968 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801e7b4:	4688      	mov	r8, r1
 801e7b6:	6851      	ldr	r1, [r2, #4]
 801e7b8:	ac0e      	add	r4, sp, #56	; 0x38
 801e7ba:	c403      	stmia	r4!, {r0, r1}
 801e7bc:	6818      	ldr	r0, [r3, #0]
 801e7be:	6859      	ldr	r1, [r3, #4]
 801e7c0:	ac10      	add	r4, sp, #64	; 0x40
 801e7c2:	4616      	mov	r6, r2
 801e7c4:	c403      	stmia	r4!, {r0, r1}
 801e7c6:	a80e      	add	r0, sp, #56	; 0x38
 801e7c8:	f7f7 fc96 	bl	80160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e7cc:	4631      	mov	r1, r6
 801e7ce:	a810      	add	r0, sp, #64	; 0x40
 801e7d0:	f7f7 fcd6 	bl	8016180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e7d4:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801e7d8:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801e7dc:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801e7e0:	4e62      	ldr	r6, [pc, #392]	; (801e96c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801e7e2:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801e7e6:	6830      	ldr	r0, [r6, #0]
 801e7e8:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801e7ec:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e7f0:	4489      	add	r9, r1
 801e7f2:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801e7f6:	440a      	add	r2, r1
 801e7f8:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801e7fc:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801e800:	4413      	add	r3, r2
 801e802:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801e806:	6803      	ldr	r3, [r0, #0]
 801e808:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e80a:	4798      	blx	r3
 801e80c:	f010 0f80 	tst.w	r0, #128	; 0x80
 801e810:	6830      	ldr	r0, [r6, #0]
 801e812:	d01d      	beq.n	801e850 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801e814:	2200      	movs	r2, #0
 801e816:	6801      	ldr	r1, [r0, #0]
 801e818:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801e81c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801e820:	220b      	movs	r2, #11
 801e822:	9207      	str	r2, [sp, #28]
 801e824:	883a      	ldrh	r2, [r7, #0]
 801e826:	9206      	str	r2, [sp, #24]
 801e828:	2201      	movs	r2, #1
 801e82a:	e9cd a204 	strd	sl, r2, [sp, #16]
 801e82e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801e832:	9203      	str	r2, [sp, #12]
 801e834:	b2a4      	uxth	r4, r4
 801e836:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801e83a:	9200      	str	r2, [sp, #0]
 801e83c:	b2ad      	uxth	r5, r5
 801e83e:	9502      	str	r5, [sp, #8]
 801e840:	9401      	str	r4, [sp, #4]
 801e842:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801e844:	4642      	mov	r2, r8
 801e846:	4649      	mov	r1, r9
 801e848:	47a0      	blx	r4
 801e84a:	b013      	add	sp, #76	; 0x4c
 801e84c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e850:	6803      	ldr	r3, [r0, #0]
 801e852:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e854:	4798      	blx	r3
 801e856:	883b      	ldrh	r3, [r7, #0]
 801e858:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801e85c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801e860:	fb03 1202 	mla	r2, r3, r2, r1
 801e864:	435d      	muls	r5, r3
 801e866:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e86a:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801e86e:	920c      	str	r2, [sp, #48]	; 0x30
 801e870:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801e874:	1b12      	subs	r2, r2, r4
 801e876:	920d      	str	r2, [sp, #52]	; 0x34
 801e878:	0062      	lsls	r2, r4, #1
 801e87a:	1b1c      	subs	r4, r3, r4
 801e87c:	0063      	lsls	r3, r4, #1
 801e87e:	920a      	str	r2, [sp, #40]	; 0x28
 801e880:	930b      	str	r3, [sp, #44]	; 0x2c
 801e882:	f04f 0e04 	mov.w	lr, #4
 801e886:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e888:	4298      	cmp	r0, r3
 801e88a:	d266      	bcs.n	801e95a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801e88c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e88e:	eb00 0b03 	add.w	fp, r0, r3
 801e892:	4558      	cmp	r0, fp
 801e894:	d25c      	bcs.n	801e950 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801e896:	f819 3b01 	ldrb.w	r3, [r9], #1
 801e89a:	fb1e e303 	smlabb	r3, lr, r3, lr
 801e89e:	f858 2003 	ldr.w	r2, [r8, r3]
 801e8a2:	0e11      	lsrs	r1, r2, #24
 801e8a4:	d012      	beq.n	801e8cc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801e8a6:	29ff      	cmp	r1, #255	; 0xff
 801e8a8:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801e8ac:	d110      	bne.n	801e8d0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801e8ae:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801e8b2:	d10d      	bne.n	801e8d0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801e8b4:	0953      	lsrs	r3, r2, #5
 801e8b6:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801e8ba:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e8be:	f027 0707 	bic.w	r7, r7, #7
 801e8c2:	431f      	orrs	r7, r3
 801e8c4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e8c8:	433a      	orrs	r2, r7
 801e8ca:	8002      	strh	r2, [r0, #0]
 801e8cc:	3002      	adds	r0, #2
 801e8ce:	e7e0      	b.n	801e892 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801e8d0:	fb0a f101 	mul.w	r1, sl, r1
 801e8d4:	8806      	ldrh	r6, [r0, #0]
 801e8d6:	1c4b      	adds	r3, r1, #1
 801e8d8:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801e8dc:	1235      	asrs	r5, r6, #8
 801e8de:	10f4      	asrs	r4, r6, #3
 801e8e0:	121b      	asrs	r3, r3, #8
 801e8e2:	00f6      	lsls	r6, r6, #3
 801e8e4:	b299      	uxth	r1, r3
 801e8e6:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801e8ea:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e8ee:	b2f6      	uxtb	r6, r6
 801e8f0:	43db      	mvns	r3, r3
 801e8f2:	b2d2      	uxtb	r2, r2
 801e8f4:	b2db      	uxtb	r3, r3
 801e8f6:	fb1c fc01 	smulbb	ip, ip, r1
 801e8fa:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801e8fe:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e902:	fb12 f201 	smulbb	r2, r2, r1
 801e906:	fb05 c503 	mla	r5, r5, r3, ip
 801e90a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801e90e:	b2ff      	uxtb	r7, r7
 801e910:	fb06 2203 	mla	r2, r6, r3, r2
 801e914:	b2ad      	uxth	r5, r5
 801e916:	fb17 f701 	smulbb	r7, r7, r1
 801e91a:	b292      	uxth	r2, r2
 801e91c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801e920:	fb04 7403 	mla	r4, r4, r3, r7
 801e924:	f105 0c01 	add.w	ip, r5, #1
 801e928:	1c57      	adds	r7, r2, #1
 801e92a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e92e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801e932:	b2a4      	uxth	r4, r4
 801e934:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e938:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e93c:	433d      	orrs	r5, r7
 801e93e:	1c67      	adds	r7, r4, #1
 801e940:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801e944:	0964      	lsrs	r4, r4, #5
 801e946:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801e94a:	4325      	orrs	r5, r4
 801e94c:	8005      	strh	r5, [r0, #0]
 801e94e:	e7bd      	b.n	801e8cc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801e950:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e952:	4418      	add	r0, r3
 801e954:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e956:	4499      	add	r9, r3
 801e958:	e795      	b.n	801e886 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801e95a:	4b04      	ldr	r3, [pc, #16]	; (801e96c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801e95c:	6818      	ldr	r0, [r3, #0]
 801e95e:	6803      	ldr	r3, [r0, #0]
 801e960:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e962:	4798      	blx	r3
 801e964:	e771      	b.n	801e84a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801e966:	bf00      	nop
 801e968:	20013816 	.word	0x20013816
 801e96c:	2001381c 	.word	0x2001381c

0801e970 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801e970:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e974:	b087      	sub	sp, #28
 801e976:	4680      	mov	r8, r0
 801e978:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801e97c:	460d      	mov	r5, r1
 801e97e:	4614      	mov	r4, r2
 801e980:	2e00      	cmp	r6, #0
 801e982:	f000 80b9 	beq.w	801eaf8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801e986:	6810      	ldr	r0, [r2, #0]
 801e988:	6851      	ldr	r1, [r2, #4]
 801e98a:	af02      	add	r7, sp, #8
 801e98c:	c703      	stmia	r7!, {r0, r1}
 801e98e:	6818      	ldr	r0, [r3, #0]
 801e990:	6859      	ldr	r1, [r3, #4]
 801e992:	af04      	add	r7, sp, #16
 801e994:	c703      	stmia	r7!, {r0, r1}
 801e996:	a802      	add	r0, sp, #8
 801e998:	f7f7 fbae 	bl	80160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e99c:	4621      	mov	r1, r4
 801e99e:	a804      	add	r0, sp, #16
 801e9a0:	f7f7 fbee 	bl	8016180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e9a4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e9a8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e9ac:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801e9b0:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801e9b4:	fb14 2103 	smlabb	r1, r4, r3, r2
 801e9b8:	eb08 0401 	add.w	r4, r8, r1
 801e9bc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801e9c0:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801e9c4:	440a      	add	r2, r1
 801e9c6:	f8ad 2010 	strh.w	r2, [sp, #16]
 801e9ca:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801e9ce:	4413      	add	r3, r2
 801e9d0:	f8ad 3012 	strh.w	r3, [sp, #18]
 801e9d4:	4b4a      	ldr	r3, [pc, #296]	; (801eb00 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801e9d6:	6818      	ldr	r0, [r3, #0]
 801e9d8:	6803      	ldr	r3, [r0, #0]
 801e9da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e9dc:	4798      	blx	r3
 801e9de:	4b49      	ldr	r3, [pc, #292]	; (801eb04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801e9e0:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801e9e4:	881a      	ldrh	r2, [r3, #0]
 801e9e6:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801e9ea:	2eff      	cmp	r6, #255	; 0xff
 801e9ec:	fb02 c101 	mla	r1, r2, r1, ip
 801e9f0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801e9f4:	fb02 f207 	mul.w	r2, r2, r7
 801e9f8:	f105 0104 	add.w	r1, r5, #4
 801e9fc:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801ea00:	461d      	mov	r5, r3
 801ea02:	d05a      	beq.n	801eaba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801ea04:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801ea08:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801ea0c:	b2b6      	uxth	r6, r6
 801ea0e:	fa1f fe8e 	uxth.w	lr, lr
 801ea12:	9301      	str	r3, [sp, #4]
 801ea14:	4282      	cmp	r2, r0
 801ea16:	d96a      	bls.n	801eaee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801ea18:	eb00 0b0a 	add.w	fp, r0, sl
 801ea1c:	4583      	cmp	fp, r0
 801ea1e:	d940      	bls.n	801eaa2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801ea20:	f814 3b01 	ldrb.w	r3, [r4], #1
 801ea24:	8805      	ldrh	r5, [r0, #0]
 801ea26:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801ea2a:	122f      	asrs	r7, r5, #8
 801ea2c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801ea30:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ea34:	fb17 f70e 	smulbb	r7, r7, lr
 801ea38:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801ea3c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ea40:	00ed      	lsls	r5, r5, #3
 801ea42:	fb0c 7c06 	mla	ip, ip, r6, r7
 801ea46:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801ea4a:	10df      	asrs	r7, r3, #3
 801ea4c:	b2ed      	uxtb	r5, r5
 801ea4e:	00db      	lsls	r3, r3, #3
 801ea50:	fa1f fc8c 	uxth.w	ip, ip
 801ea54:	fb19 f90e 	smulbb	r9, r9, lr
 801ea58:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ea5c:	b2db      	uxtb	r3, r3
 801ea5e:	fb15 f50e 	smulbb	r5, r5, lr
 801ea62:	fb07 9706 	mla	r7, r7, r6, r9
 801ea66:	fb03 5306 	mla	r3, r3, r6, r5
 801ea6a:	f10c 0901 	add.w	r9, ip, #1
 801ea6e:	b29b      	uxth	r3, r3
 801ea70:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801ea74:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801ea78:	f103 0c01 	add.w	ip, r3, #1
 801ea7c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ea80:	b2bf      	uxth	r7, r7
 801ea82:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ea86:	ea4c 0c09 	orr.w	ip, ip, r9
 801ea8a:	f107 0901 	add.w	r9, r7, #1
 801ea8e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801ea92:	097f      	lsrs	r7, r7, #5
 801ea94:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801ea98:	ea4c 0c07 	orr.w	ip, ip, r7
 801ea9c:	f820 cb02 	strh.w	ip, [r0], #2
 801eaa0:	e7bc      	b.n	801ea1c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801eaa2:	9b01      	ldr	r3, [sp, #4]
 801eaa4:	881b      	ldrh	r3, [r3, #0]
 801eaa6:	eba3 0308 	sub.w	r3, r3, r8
 801eaaa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801eaae:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801eab2:	eba3 0308 	sub.w	r3, r3, r8
 801eab6:	441c      	add	r4, r3
 801eab8:	e7ac      	b.n	801ea14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801eaba:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801eabe:	4282      	cmp	r2, r0
 801eac0:	d915      	bls.n	801eaee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801eac2:	eb00 060a 	add.w	r6, r0, sl
 801eac6:	4286      	cmp	r6, r0
 801eac8:	d906      	bls.n	801ead8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801eaca:	f814 3b01 	ldrb.w	r3, [r4], #1
 801eace:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801ead2:	f820 3b02 	strh.w	r3, [r0], #2
 801ead6:	e7f6      	b.n	801eac6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801ead8:	882b      	ldrh	r3, [r5, #0]
 801eada:	eba3 0308 	sub.w	r3, r3, r8
 801eade:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801eae2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801eae6:	eba3 0308 	sub.w	r3, r3, r8
 801eaea:	441c      	add	r4, r3
 801eaec:	e7e7      	b.n	801eabe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801eaee:	4b04      	ldr	r3, [pc, #16]	; (801eb00 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801eaf0:	6818      	ldr	r0, [r3, #0]
 801eaf2:	6803      	ldr	r3, [r0, #0]
 801eaf4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801eaf6:	4798      	blx	r3
 801eaf8:	b007      	add	sp, #28
 801eafa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eafe:	bf00      	nop
 801eb00:	2001381c 	.word	0x2001381c
 801eb04:	20013816 	.word	0x20013816

0801eb08 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801eb08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eb0c:	b091      	sub	sp, #68	; 0x44
 801eb0e:	4680      	mov	r8, r0
 801eb10:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801eb14:	460f      	mov	r7, r1
 801eb16:	4614      	mov	r4, r2
 801eb18:	2d00      	cmp	r5, #0
 801eb1a:	d051      	beq.n	801ebc0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801eb1c:	6810      	ldr	r0, [r2, #0]
 801eb1e:	6851      	ldr	r1, [r2, #4]
 801eb20:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801ed24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801eb24:	ae0c      	add	r6, sp, #48	; 0x30
 801eb26:	c603      	stmia	r6!, {r0, r1}
 801eb28:	6818      	ldr	r0, [r3, #0]
 801eb2a:	6859      	ldr	r1, [r3, #4]
 801eb2c:	ae0e      	add	r6, sp, #56	; 0x38
 801eb2e:	c603      	stmia	r6!, {r0, r1}
 801eb30:	a80c      	add	r0, sp, #48	; 0x30
 801eb32:	f7f7 fae1 	bl	80160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801eb36:	4621      	mov	r1, r4
 801eb38:	a80e      	add	r0, sp, #56	; 0x38
 801eb3a:	f7f7 fb21 	bl	8016180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801eb3e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801eb42:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801eb46:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801eb4a:	f8d9 0000 	ldr.w	r0, [r9]
 801eb4e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801eb52:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801eb56:	fb11 2103 	smlabb	r1, r1, r3, r2
 801eb5a:	eb08 0401 	add.w	r4, r8, r1
 801eb5e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801eb62:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801ed28 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801eb66:	440a      	add	r2, r1
 801eb68:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801eb6c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801eb70:	4413      	add	r3, r2
 801eb72:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801eb76:	6803      	ldr	r3, [r0, #0]
 801eb78:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801eb7a:	4798      	blx	r3
 801eb7c:	f010 0f80 	tst.w	r0, #128	; 0x80
 801eb80:	f8d9 0000 	ldr.w	r0, [r9]
 801eb84:	d01f      	beq.n	801ebc6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801eb86:	2200      	movs	r2, #0
 801eb88:	6801      	ldr	r1, [r0, #0]
 801eb8a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801eb8e:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801eb92:	220b      	movs	r2, #11
 801eb94:	9207      	str	r2, [sp, #28]
 801eb96:	f8b8 2000 	ldrh.w	r2, [r8]
 801eb9a:	9206      	str	r2, [sp, #24]
 801eb9c:	2201      	movs	r2, #1
 801eb9e:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801eba2:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801eba6:	9203      	str	r2, [sp, #12]
 801eba8:	fa1f f28a 	uxth.w	r2, sl
 801ebac:	9202      	str	r2, [sp, #8]
 801ebae:	b2b6      	uxth	r6, r6
 801ebb0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801ebb4:	9200      	str	r2, [sp, #0]
 801ebb6:	9601      	str	r6, [sp, #4]
 801ebb8:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801ebba:	463a      	mov	r2, r7
 801ebbc:	4621      	mov	r1, r4
 801ebbe:	47a8      	blx	r5
 801ebc0:	b011      	add	sp, #68	; 0x44
 801ebc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ebc6:	6803      	ldr	r3, [r0, #0]
 801ebc8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ebca:	4798      	blx	r3
 801ebcc:	f8b8 2000 	ldrh.w	r2, [r8]
 801ebd0:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801ebd4:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801ebd8:	2dff      	cmp	r5, #255	; 0xff
 801ebda:	fb02 1303 	mla	r3, r2, r3, r1
 801ebde:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ebe2:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801ebe6:	fb0a fa02 	mul.w	sl, sl, r2
 801ebea:	d062      	beq.n	801ecb2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801ebec:	ea6f 0c05 	mvn.w	ip, r5
 801ebf0:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801ebf4:	930a      	str	r3, [sp, #40]	; 0x28
 801ebf6:	b2ad      	uxth	r5, r5
 801ebf8:	fa5f fc8c 	uxtb.w	ip, ip
 801ebfc:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801ec00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ec02:	4298      	cmp	r0, r3
 801ec04:	f080 8085 	bcs.w	801ed12 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801ec08:	eb00 0b09 	add.w	fp, r0, r9
 801ec0c:	4558      	cmp	r0, fp
 801ec0e:	d246      	bcs.n	801ec9e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801ec10:	f814 eb01 	ldrb.w	lr, [r4], #1
 801ec14:	2303      	movs	r3, #3
 801ec16:	2204      	movs	r2, #4
 801ec18:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801ec1c:	eb07 0a0e 	add.w	sl, r7, lr
 801ec20:	8803      	ldrh	r3, [r0, #0]
 801ec22:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801ec26:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ec2a:	1219      	asrs	r1, r3, #8
 801ec2c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ec30:	fb18 f805 	smulbb	r8, r8, r5
 801ec34:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801ec38:	10da      	asrs	r2, r3, #3
 801ec3a:	fb01 810c 	mla	r1, r1, ip, r8
 801ec3e:	00db      	lsls	r3, r3, #3
 801ec40:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801ec44:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ec48:	b2db      	uxtb	r3, r3
 801ec4a:	fb18 f805 	smulbb	r8, r8, r5
 801ec4e:	fb1e fe05 	smulbb	lr, lr, r5
 801ec52:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801ec56:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801ec5a:	b289      	uxth	r1, r1
 801ec5c:	fb02 820c 	mla	r2, r2, ip, r8
 801ec60:	fb03 e30c 	mla	r3, r3, ip, lr
 801ec64:	b292      	uxth	r2, r2
 801ec66:	b29b      	uxth	r3, r3
 801ec68:	f101 0801 	add.w	r8, r1, #1
 801ec6c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801ec70:	f103 0e01 	add.w	lr, r3, #1
 801ec74:	f102 0801 	add.w	r8, r2, #1
 801ec78:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801ec7c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801ec80:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801ec84:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801ec88:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801ec8c:	ea4e 0101 	orr.w	r1, lr, r1
 801ec90:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801ec94:	ea41 0108 	orr.w	r1, r1, r8
 801ec98:	f820 1b02 	strh.w	r1, [r0], #2
 801ec9c:	e7b6      	b.n	801ec0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801ec9e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801eca0:	881b      	ldrh	r3, [r3, #0]
 801eca2:	1b9b      	subs	r3, r3, r6
 801eca4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801eca8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801ecac:	1b9b      	subs	r3, r3, r6
 801ecae:	441c      	add	r4, r3
 801ecb0:	e7a6      	b.n	801ec00 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801ecb2:	491b      	ldr	r1, [pc, #108]	; (801ed20 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801ecb4:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801ecb8:	2203      	movs	r2, #3
 801ecba:	2504      	movs	r5, #4
 801ecbc:	4550      	cmp	r0, sl
 801ecbe:	d228      	bcs.n	801ed12 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801ecc0:	eb00 0c09 	add.w	ip, r0, r9
 801ecc4:	4560      	cmp	r0, ip
 801ecc6:	4623      	mov	r3, r4
 801ecc8:	d219      	bcs.n	801ecfe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801ecca:	f893 e000 	ldrb.w	lr, [r3]
 801ecce:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801ecd2:	eb07 0b0e 	add.w	fp, r7, lr
 801ecd6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ecda:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801ecde:	f89b b001 	ldrb.w	fp, [fp, #1]
 801ece2:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801ece6:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801ecea:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801ecee:	ea43 030b 	orr.w	r3, r3, fp
 801ecf2:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801ecf6:	3401      	adds	r4, #1
 801ecf8:	f820 3b02 	strh.w	r3, [r0], #2
 801ecfc:	e7e2      	b.n	801ecc4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801ecfe:	f8b8 3000 	ldrh.w	r3, [r8]
 801ed02:	1b9b      	subs	r3, r3, r6
 801ed04:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ed08:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801ed0c:	1b9b      	subs	r3, r3, r6
 801ed0e:	441c      	add	r4, r3
 801ed10:	e7d4      	b.n	801ecbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801ed12:	4b04      	ldr	r3, [pc, #16]	; (801ed24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801ed14:	6818      	ldr	r0, [r3, #0]
 801ed16:	6803      	ldr	r3, [r0, #0]
 801ed18:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ed1a:	4798      	blx	r3
 801ed1c:	e750      	b.n	801ebc0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801ed1e:	bf00      	nop
 801ed20:	fffff800 	.word	0xfffff800
 801ed24:	2001381c 	.word	0x2001381c
 801ed28:	20013816 	.word	0x20013816

0801ed2c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801ed2c:	b4f0      	push	{r4, r5, r6, r7}
 801ed2e:	460c      	mov	r4, r1
 801ed30:	4611      	mov	r1, r2
 801ed32:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801ed36:	780f      	ldrb	r7, [r1, #0]
 801ed38:	784e      	ldrb	r6, [r1, #1]
 801ed3a:	2f01      	cmp	r7, #1
 801ed3c:	461a      	mov	r2, r3
 801ed3e:	9b04      	ldr	r3, [sp, #16]
 801ed40:	d036      	beq.n	801edb0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801ed42:	d31e      	bcc.n	801ed82 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801ed44:	2f02      	cmp	r7, #2
 801ed46:	d14a      	bne.n	801edde <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801ed48:	2e03      	cmp	r6, #3
 801ed4a:	d848      	bhi.n	801edde <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801ed4c:	e8df f006 	tbb	[pc, r6]
 801ed50:	16140702 	.word	0x16140702
 801ed54:	9504      	str	r5, [sp, #16]
 801ed56:	4620      	mov	r0, r4
 801ed58:	bcf0      	pop	{r4, r5, r6, r7}
 801ed5a:	f7ff be09 	b.w	801e970 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801ed5e:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801ed60:	2800      	cmp	r0, #0
 801ed62:	d03c      	beq.n	801edde <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801ed64:	6806      	ldr	r6, [r0, #0]
 801ed66:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801ed6a:	68b5      	ldr	r5, [r6, #8]
 801ed6c:	4613      	mov	r3, r2
 801ed6e:	46ac      	mov	ip, r5
 801ed70:	460a      	mov	r2, r1
 801ed72:	4621      	mov	r1, r4
 801ed74:	bcf0      	pop	{r4, r5, r6, r7}
 801ed76:	4760      	bx	ip
 801ed78:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801ed7a:	e7f1      	b.n	801ed60 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801ed7c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801ed80:	e7ee      	b.n	801ed60 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801ed82:	2e03      	cmp	r6, #3
 801ed84:	d82b      	bhi.n	801edde <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801ed86:	e8df f006 	tbb	[pc, r6]
 801ed8a:	0702      	.short	0x0702
 801ed8c:	100e      	.short	0x100e
 801ed8e:	9504      	str	r5, [sp, #16]
 801ed90:	4620      	mov	r0, r4
 801ed92:	bcf0      	pop	{r4, r5, r6, r7}
 801ed94:	f7ff bd06 	b.w	801e7a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801ed98:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801ed9a:	b300      	cbz	r0, 801edde <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801ed9c:	6806      	ldr	r6, [r0, #0]
 801ed9e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801eda2:	68f5      	ldr	r5, [r6, #12]
 801eda4:	e7e2      	b.n	801ed6c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801eda6:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801eda8:	e7f7      	b.n	801ed9a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801edaa:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801edae:	e7f4      	b.n	801ed9a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801edb0:	2e03      	cmp	r6, #3
 801edb2:	d814      	bhi.n	801edde <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801edb4:	e8df f006 	tbb	[pc, r6]
 801edb8:	100e0702 	.word	0x100e0702
 801edbc:	9504      	str	r5, [sp, #16]
 801edbe:	4620      	mov	r0, r4
 801edc0:	bcf0      	pop	{r4, r5, r6, r7}
 801edc2:	f7ff bea1 	b.w	801eb08 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801edc6:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801edc8:	b148      	cbz	r0, 801edde <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801edca:	6806      	ldr	r6, [r0, #0]
 801edcc:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801edd0:	6935      	ldr	r5, [r6, #16]
 801edd2:	e7cb      	b.n	801ed6c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801edd4:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801edd6:	e7f7      	b.n	801edc8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801edd8:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801eddc:	e7f4      	b.n	801edc8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801edde:	bcf0      	pop	{r4, r5, r6, r7}
 801ede0:	4770      	bx	lr
	...

0801ede4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801ede4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ede8:	4604      	mov	r4, r0
 801edea:	b087      	sub	sp, #28
 801edec:	6810      	ldr	r0, [r2, #0]
 801edee:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801edf2:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801f02c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801edf6:	460e      	mov	r6, r1
 801edf8:	6851      	ldr	r1, [r2, #4]
 801edfa:	ad02      	add	r5, sp, #8
 801edfc:	c503      	stmia	r5!, {r0, r1}
 801edfe:	6818      	ldr	r0, [r3, #0]
 801ee00:	6859      	ldr	r1, [r3, #4]
 801ee02:	ad04      	add	r5, sp, #16
 801ee04:	4617      	mov	r7, r2
 801ee06:	c503      	stmia	r5!, {r0, r1}
 801ee08:	a802      	add	r0, sp, #8
 801ee0a:	f7f7 f975 	bl	80160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ee0e:	4639      	mov	r1, r7
 801ee10:	a804      	add	r0, sp, #16
 801ee12:	f7f7 f9b5 	bl	8016180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ee16:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801ee1a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ee1e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801ee22:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801ee26:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801ee2a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ee2e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801ee32:	440e      	add	r6, r1
 801ee34:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801ee38:	440a      	add	r2, r1
 801ee3a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ee3e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ee42:	4413      	add	r3, r2
 801ee44:	f8ad 3012 	strh.w	r3, [sp, #18]
 801ee48:	4b77      	ldr	r3, [pc, #476]	; (801f028 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801ee4a:	6818      	ldr	r0, [r3, #0]
 801ee4c:	6803      	ldr	r3, [r0, #0]
 801ee4e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ee50:	4798      	blx	r3
 801ee52:	f8b9 b000 	ldrh.w	fp, [r9]
 801ee56:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ee5a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801ee5e:	fb0b 2303 	mla	r3, fp, r3, r2
 801ee62:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ee66:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801ee6a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801ee6e:	fb05 f50b 	mul.w	r5, r5, fp
 801ee72:	9300      	str	r3, [sp, #0]
 801ee74:	d069      	beq.n	801ef4a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801ee76:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801ee7a:	4558      	cmp	r0, fp
 801ee7c:	f080 80cc 	bcs.w	801f018 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801ee80:	9b00      	ldr	r3, [sp, #0]
 801ee82:	18c3      	adds	r3, r0, r3
 801ee84:	9301      	str	r3, [sp, #4]
 801ee86:	4631      	mov	r1, r6
 801ee88:	9b01      	ldr	r3, [sp, #4]
 801ee8a:	4298      	cmp	r0, r3
 801ee8c:	d24f      	bcs.n	801ef2e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801ee8e:	f811 2b01 	ldrb.w	r2, [r1], #1
 801ee92:	2a00      	cmp	r2, #0
 801ee94:	d048      	beq.n	801ef28 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801ee96:	fb0a f202 	mul.w	r2, sl, r2
 801ee9a:	1c53      	adds	r3, r2, #1
 801ee9c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801eea0:	121b      	asrs	r3, r3, #8
 801eea2:	d041      	beq.n	801ef28 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801eea4:	8802      	ldrh	r2, [r0, #0]
 801eea6:	f8b4 c000 	ldrh.w	ip, [r4]
 801eeaa:	b29e      	uxth	r6, r3
 801eeac:	1215      	asrs	r5, r2, #8
 801eeae:	43db      	mvns	r3, r3
 801eeb0:	b2db      	uxtb	r3, r3
 801eeb2:	ea4f 272c 	mov.w	r7, ip, asr #8
 801eeb6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801eeba:	fb15 f503 	smulbb	r5, r5, r3
 801eebe:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801eec2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801eec6:	00d2      	lsls	r2, r2, #3
 801eec8:	fb07 5706 	mla	r7, r7, r6, r5
 801eecc:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801eed0:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801eed4:	b2d2      	uxtb	r2, r2
 801eed6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801eeda:	b2bf      	uxth	r7, r7
 801eedc:	fb1e fe03 	smulbb	lr, lr, r3
 801eee0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801eee4:	fa5f fc8c 	uxtb.w	ip, ip
 801eee8:	fb12 f203 	smulbb	r2, r2, r3
 801eeec:	fb05 e506 	mla	r5, r5, r6, lr
 801eef0:	fb0c 2c06 	mla	ip, ip, r6, r2
 801eef4:	f107 0e01 	add.w	lr, r7, #1
 801eef8:	fa1f fc8c 	uxth.w	ip, ip
 801eefc:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801ef00:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801ef04:	f10c 0701 	add.w	r7, ip, #1
 801ef08:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ef0c:	b2ad      	uxth	r5, r5
 801ef0e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ef12:	ea47 070e 	orr.w	r7, r7, lr
 801ef16:	f105 0e01 	add.w	lr, r5, #1
 801ef1a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801ef1e:	096d      	lsrs	r5, r5, #5
 801ef20:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ef24:	432f      	orrs	r7, r5
 801ef26:	8007      	strh	r7, [r0, #0]
 801ef28:	3002      	adds	r0, #2
 801ef2a:	3402      	adds	r4, #2
 801ef2c:	e7ac      	b.n	801ee88 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801ef2e:	f8b9 3000 	ldrh.w	r3, [r9]
 801ef32:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801ef36:	eba3 0308 	sub.w	r3, r3, r8
 801ef3a:	eba6 0608 	sub.w	r6, r6, r8
 801ef3e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801ef42:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ef46:	440e      	add	r6, r1
 801ef48:	e797      	b.n	801ee7a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801ef4a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801ef4e:	42a8      	cmp	r0, r5
 801ef50:	d262      	bcs.n	801f018 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801ef52:	9b00      	ldr	r3, [sp, #0]
 801ef54:	4631      	mov	r1, r6
 801ef56:	eb00 0b03 	add.w	fp, r0, r3
 801ef5a:	4558      	cmp	r0, fp
 801ef5c:	d24e      	bcs.n	801effc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801ef5e:	f811 3b01 	ldrb.w	r3, [r1], #1
 801ef62:	b12b      	cbz	r3, 801ef70 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801ef64:	2bff      	cmp	r3, #255	; 0xff
 801ef66:	f8b4 e000 	ldrh.w	lr, [r4]
 801ef6a:	d104      	bne.n	801ef76 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801ef6c:	f8a0 e000 	strh.w	lr, [r0]
 801ef70:	3002      	adds	r0, #2
 801ef72:	3402      	adds	r4, #2
 801ef74:	e7f1      	b.n	801ef5a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801ef76:	8802      	ldrh	r2, [r0, #0]
 801ef78:	b29f      	uxth	r7, r3
 801ef7a:	1216      	asrs	r6, r2, #8
 801ef7c:	43db      	mvns	r3, r3
 801ef7e:	b2db      	uxtb	r3, r3
 801ef80:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ef84:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ef88:	fb16 f603 	smulbb	r6, r6, r3
 801ef8c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801ef90:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ef94:	00d2      	lsls	r2, r2, #3
 801ef96:	fb0c 6c07 	mla	ip, ip, r7, r6
 801ef9a:	b2d2      	uxtb	r2, r2
 801ef9c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801efa0:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801efa4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801efa8:	fb1a fa03 	smulbb	sl, sl, r3
 801efac:	fa1f fc8c 	uxth.w	ip, ip
 801efb0:	fb12 f303 	smulbb	r3, r2, r3
 801efb4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801efb8:	fa5f fe8e 	uxtb.w	lr, lr
 801efbc:	fb06 a607 	mla	r6, r6, r7, sl
 801efc0:	f10c 0201 	add.w	r2, ip, #1
 801efc4:	fb0e 3307 	mla	r3, lr, r7, r3
 801efc8:	b2b6      	uxth	r6, r6
 801efca:	b29b      	uxth	r3, r3
 801efcc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801efd0:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801efd4:	f106 0a01 	add.w	sl, r6, #1
 801efd8:	f103 0c01 	add.w	ip, r3, #1
 801efdc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801efe0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801efe4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801efe8:	0976      	lsrs	r6, r6, #5
 801efea:	ea4c 0c02 	orr.w	ip, ip, r2
 801efee:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801eff2:	ea4c 0c06 	orr.w	ip, ip, r6
 801eff6:	f8a0 c000 	strh.w	ip, [r0]
 801effa:	e7b9      	b.n	801ef70 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801effc:	f8b9 3000 	ldrh.w	r3, [r9]
 801f000:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801f004:	eba3 0308 	sub.w	r3, r3, r8
 801f008:	eba6 0608 	sub.w	r6, r6, r8
 801f00c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801f010:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f014:	440e      	add	r6, r1
 801f016:	e79a      	b.n	801ef4e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801f018:	4b03      	ldr	r3, [pc, #12]	; (801f028 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801f01a:	6818      	ldr	r0, [r3, #0]
 801f01c:	6803      	ldr	r3, [r0, #0]
 801f01e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f020:	4798      	blx	r3
 801f022:	b007      	add	sp, #28
 801f024:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f028:	2001381c 	.word	0x2001381c
 801f02c:	20013816 	.word	0x20013816

0801f030 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801f030:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f034:	b089      	sub	sp, #36	; 0x24
 801f036:	4682      	mov	sl, r0
 801f038:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801f03c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f03e:	460f      	mov	r7, r1
 801f040:	4691      	mov	r9, r2
 801f042:	4698      	mov	r8, r3
 801f044:	2e00      	cmp	r6, #0
 801f046:	d03d      	beq.n	801f0c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f048:	4608      	mov	r0, r1
 801f04a:	f7fa fe59 	bl	8019d00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801f04e:	4605      	mov	r5, r0
 801f050:	4638      	mov	r0, r7
 801f052:	f7fa fe89 	bl	8019d68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801f056:	f8ad 000e 	strh.w	r0, [sp, #14]
 801f05a:	4638      	mov	r0, r7
 801f05c:	f8ad 9008 	strh.w	r9, [sp, #8]
 801f060:	f8ad 500c 	strh.w	r5, [sp, #12]
 801f064:	f8ad 800a 	strh.w	r8, [sp, #10]
 801f068:	f7fa ff36 	bl	8019ed8 <_ZNK8touchgfx6Bitmap7getDataEv>
 801f06c:	4605      	mov	r5, r0
 801f06e:	4638      	mov	r0, r7
 801f070:	f7fa ff62 	bl	8019f38 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801f074:	4681      	mov	r9, r0
 801f076:	4638      	mov	r0, r7
 801f078:	f7fa ffb2 	bl	8019fe0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801f07c:	280b      	cmp	r0, #11
 801f07e:	d821      	bhi.n	801f0c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f080:	e8df f000 	tbb	[pc, r0]
 801f084:	2006aebe 	.word	0x2006aebe
 801f088:	20202020 	.word	0x20202020
 801f08c:	b5202020 	.word	0xb5202020
 801f090:	4bb0      	ldr	r3, [pc, #704]	; (801f354 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801f092:	6818      	ldr	r0, [r3, #0]
 801f094:	6803      	ldr	r3, [r0, #0]
 801f096:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f098:	4798      	blx	r3
 801f09a:	2eff      	cmp	r6, #255	; 0xff
 801f09c:	d101      	bne.n	801f0a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801f09e:	0683      	lsls	r3, r0, #26
 801f0a0:	d506      	bpl.n	801f0b0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801f0a2:	4633      	mov	r3, r6
 801f0a4:	4622      	mov	r2, r4
 801f0a6:	a902      	add	r1, sp, #8
 801f0a8:	4628      	mov	r0, r5
 801f0aa:	f7ff f909 	bl	801e2c0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f0ae:	e009      	b.n	801f0c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f0b0:	4638      	mov	r0, r7
 801f0b2:	f7fa fed9 	bl	8019e68 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801f0b6:	b940      	cbnz	r0, 801f0ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801f0b8:	4623      	mov	r3, r4
 801f0ba:	aa02      	add	r2, sp, #8
 801f0bc:	4629      	mov	r1, r5
 801f0be:	4650      	mov	r0, sl
 801f0c0:	f7ff f9e4 	bl	801e48c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801f0c4:	b009      	add	sp, #36	; 0x24
 801f0c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f0ca:	f10d 0818 	add.w	r8, sp, #24
 801f0ce:	4639      	mov	r1, r7
 801f0d0:	4640      	mov	r0, r8
 801f0d2:	f7fa fe7d 	bl	8019dd0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801f0d6:	e898 0003 	ldmia.w	r8, {r0, r1}
 801f0da:	af04      	add	r7, sp, #16
 801f0dc:	e887 0003 	stmia.w	r7, {r0, r1}
 801f0e0:	4638      	mov	r0, r7
 801f0e2:	4621      	mov	r1, r4
 801f0e4:	f7f1 fa6a 	bl	80105bc <_ZN8touchgfx4RectaNERKS0_>
 801f0e8:	4638      	mov	r0, r7
 801f0ea:	f7f1 faaa 	bl	8010642 <_ZNK8touchgfx4Rect7isEmptyEv>
 801f0ee:	2800      	cmp	r0, #0
 801f0f0:	d1d7      	bne.n	801f0a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801f0f2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f0f6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801f0fa:	4293      	cmp	r3, r2
 801f0fc:	dd12      	ble.n	801f124 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801f0fe:	1a9b      	subs	r3, r3, r2
 801f100:	f9b4 0000 	ldrsh.w	r0, [r4]
 801f104:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801f108:	f8ad 0018 	strh.w	r0, [sp, #24]
 801f10c:	f8ad 201a 	strh.w	r2, [sp, #26]
 801f110:	f8ad 101c 	strh.w	r1, [sp, #28]
 801f114:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f118:	4642      	mov	r2, r8
 801f11a:	4633      	mov	r3, r6
 801f11c:	a902      	add	r1, sp, #8
 801f11e:	4628      	mov	r0, r5
 801f120:	f7ff f8ce 	bl	801e2c0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f124:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801f128:	f9b4 2000 	ldrsh.w	r2, [r4]
 801f12c:	4293      	cmp	r3, r2
 801f12e:	dd12      	ble.n	801f156 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801f130:	1a9b      	subs	r3, r3, r2
 801f132:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801f136:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801f13a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801f13e:	f8ad 001a 	strh.w	r0, [sp, #26]
 801f142:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f146:	f8ad 101e 	strh.w	r1, [sp, #30]
 801f14a:	23ff      	movs	r3, #255	; 0xff
 801f14c:	4642      	mov	r2, r8
 801f14e:	a902      	add	r1, sp, #8
 801f150:	4628      	mov	r0, r5
 801f152:	f7ff f8b5 	bl	801e2c0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f156:	463b      	mov	r3, r7
 801f158:	aa02      	add	r2, sp, #8
 801f15a:	4629      	mov	r1, r5
 801f15c:	4650      	mov	r0, sl
 801f15e:	f7ff f995 	bl	801e48c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801f162:	88a2      	ldrh	r2, [r4, #4]
 801f164:	8823      	ldrh	r3, [r4, #0]
 801f166:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801f16a:	4413      	add	r3, r2
 801f16c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f170:	440a      	add	r2, r1
 801f172:	b29b      	uxth	r3, r3
 801f174:	b292      	uxth	r2, r2
 801f176:	b211      	sxth	r1, r2
 801f178:	b218      	sxth	r0, r3
 801f17a:	4288      	cmp	r0, r1
 801f17c:	dd12      	ble.n	801f1a4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801f17e:	1a9b      	subs	r3, r3, r2
 801f180:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801f184:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801f188:	f8ad 1018 	strh.w	r1, [sp, #24]
 801f18c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f190:	f8ad 001e 	strh.w	r0, [sp, #30]
 801f194:	23ff      	movs	r3, #255	; 0xff
 801f196:	4642      	mov	r2, r8
 801f198:	a902      	add	r1, sp, #8
 801f19a:	4628      	mov	r0, r5
 801f19c:	f8ad 601a 	strh.w	r6, [sp, #26]
 801f1a0:	f7ff f88e 	bl	801e2c0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f1a4:	88e2      	ldrh	r2, [r4, #6]
 801f1a6:	8863      	ldrh	r3, [r4, #2]
 801f1a8:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801f1ac:	4413      	add	r3, r2
 801f1ae:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801f1b2:	440a      	add	r2, r1
 801f1b4:	b29b      	uxth	r3, r3
 801f1b6:	b292      	uxth	r2, r2
 801f1b8:	b211      	sxth	r1, r2
 801f1ba:	b218      	sxth	r0, r3
 801f1bc:	4288      	cmp	r0, r1
 801f1be:	dd81      	ble.n	801f0c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f1c0:	1a9b      	subs	r3, r3, r2
 801f1c2:	f9b4 6000 	ldrsh.w	r6, [r4]
 801f1c6:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801f1ca:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f1ce:	f8ad 6018 	strh.w	r6, [sp, #24]
 801f1d2:	f8ad 101a 	strh.w	r1, [sp, #26]
 801f1d6:	f8ad 001c 	strh.w	r0, [sp, #28]
 801f1da:	23ff      	movs	r3, #255	; 0xff
 801f1dc:	4642      	mov	r2, r8
 801f1de:	e762      	b.n	801f0a6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801f1e0:	4633      	mov	r3, r6
 801f1e2:	4622      	mov	r2, r4
 801f1e4:	a902      	add	r1, sp, #8
 801f1e6:	4628      	mov	r0, r5
 801f1e8:	f7ff f9c0 	bl	801e56c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801f1ec:	e76a      	b.n	801f0c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f1ee:	e9cd 4600 	strd	r4, r6, [sp]
 801f1f2:	ab02      	add	r3, sp, #8
 801f1f4:	464a      	mov	r2, r9
 801f1f6:	4629      	mov	r1, r5
 801f1f8:	4650      	mov	r0, sl
 801f1fa:	f7ff fd97 	bl	801ed2c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801f1fe:	e761      	b.n	801f0c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f200:	4638      	mov	r0, r7
 801f202:	f7fa fe31 	bl	8019e68 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801f206:	b950      	cbnz	r0, 801f21e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801f208:	e9cd 6000 	strd	r6, r0, [sp]
 801f20c:	f8da 3000 	ldr.w	r3, [sl]
 801f210:	aa02      	add	r2, sp, #8
 801f212:	68de      	ldr	r6, [r3, #12]
 801f214:	4629      	mov	r1, r5
 801f216:	4623      	mov	r3, r4
 801f218:	4650      	mov	r0, sl
 801f21a:	47b0      	blx	r6
 801f21c:	e752      	b.n	801f0c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f21e:	f10d 0818 	add.w	r8, sp, #24
 801f222:	4639      	mov	r1, r7
 801f224:	4640      	mov	r0, r8
 801f226:	f7fa fdd3 	bl	8019dd0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801f22a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801f22e:	af04      	add	r7, sp, #16
 801f230:	e887 0003 	stmia.w	r7, {r0, r1}
 801f234:	4638      	mov	r0, r7
 801f236:	4621      	mov	r1, r4
 801f238:	f7f1 f9c0 	bl	80105bc <_ZN8touchgfx4RectaNERKS0_>
 801f23c:	4638      	mov	r0, r7
 801f23e:	f7f1 fa00 	bl	8010642 <_ZNK8touchgfx4Rect7isEmptyEv>
 801f242:	b138      	cbz	r0, 801f254 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801f244:	9600      	str	r6, [sp, #0]
 801f246:	4623      	mov	r3, r4
 801f248:	aa02      	add	r2, sp, #8
 801f24a:	4649      	mov	r1, r9
 801f24c:	4628      	mov	r0, r5
 801f24e:	f7ff fdc9 	bl	801ede4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f252:	e737      	b.n	801f0c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f254:	e9cd 6000 	strd	r6, r0, [sp]
 801f258:	f8da 3000 	ldr.w	r3, [sl]
 801f25c:	aa02      	add	r2, sp, #8
 801f25e:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801f262:	4629      	mov	r1, r5
 801f264:	463b      	mov	r3, r7
 801f266:	4650      	mov	r0, sl
 801f268:	47d8      	blx	fp
 801f26a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f26e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801f272:	4293      	cmp	r3, r2
 801f274:	dd13      	ble.n	801f29e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801f276:	f9b4 0000 	ldrsh.w	r0, [r4]
 801f27a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801f27e:	f8ad 0018 	strh.w	r0, [sp, #24]
 801f282:	1a9b      	subs	r3, r3, r2
 801f284:	f8ad 201a 	strh.w	r2, [sp, #26]
 801f288:	f8ad 101c 	strh.w	r1, [sp, #28]
 801f28c:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f290:	9600      	str	r6, [sp, #0]
 801f292:	4643      	mov	r3, r8
 801f294:	aa02      	add	r2, sp, #8
 801f296:	4649      	mov	r1, r9
 801f298:	4628      	mov	r0, r5
 801f29a:	f7ff fda3 	bl	801ede4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f29e:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801f2a2:	f9b4 2000 	ldrsh.w	r2, [r4]
 801f2a6:	4293      	cmp	r3, r2
 801f2a8:	dd13      	ble.n	801f2d2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801f2aa:	1a9b      	subs	r3, r3, r2
 801f2ac:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801f2b0:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801f2b4:	f8ad 2018 	strh.w	r2, [sp, #24]
 801f2b8:	f8ad 001a 	strh.w	r0, [sp, #26]
 801f2bc:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f2c0:	f8ad 101e 	strh.w	r1, [sp, #30]
 801f2c4:	9600      	str	r6, [sp, #0]
 801f2c6:	4643      	mov	r3, r8
 801f2c8:	aa02      	add	r2, sp, #8
 801f2ca:	4649      	mov	r1, r9
 801f2cc:	4628      	mov	r0, r5
 801f2ce:	f7ff fd89 	bl	801ede4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f2d2:	88a2      	ldrh	r2, [r4, #4]
 801f2d4:	8823      	ldrh	r3, [r4, #0]
 801f2d6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801f2da:	4413      	add	r3, r2
 801f2dc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f2e0:	440a      	add	r2, r1
 801f2e2:	b29b      	uxth	r3, r3
 801f2e4:	b292      	uxth	r2, r2
 801f2e6:	b211      	sxth	r1, r2
 801f2e8:	b218      	sxth	r0, r3
 801f2ea:	4288      	cmp	r0, r1
 801f2ec:	dd13      	ble.n	801f316 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801f2ee:	1a9b      	subs	r3, r3, r2
 801f2f0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801f2f4:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801f2f8:	f8ad 1018 	strh.w	r1, [sp, #24]
 801f2fc:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f300:	f8ad 001e 	strh.w	r0, [sp, #30]
 801f304:	9600      	str	r6, [sp, #0]
 801f306:	4643      	mov	r3, r8
 801f308:	aa02      	add	r2, sp, #8
 801f30a:	4649      	mov	r1, r9
 801f30c:	4628      	mov	r0, r5
 801f30e:	f8ad 701a 	strh.w	r7, [sp, #26]
 801f312:	f7ff fd67 	bl	801ede4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f316:	88e2      	ldrh	r2, [r4, #6]
 801f318:	8863      	ldrh	r3, [r4, #2]
 801f31a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801f31e:	4413      	add	r3, r2
 801f320:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801f324:	440a      	add	r2, r1
 801f326:	b29b      	uxth	r3, r3
 801f328:	b292      	uxth	r2, r2
 801f32a:	b211      	sxth	r1, r2
 801f32c:	b218      	sxth	r0, r3
 801f32e:	4288      	cmp	r0, r1
 801f330:	f77f aec8 	ble.w	801f0c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f334:	f9b4 7000 	ldrsh.w	r7, [r4]
 801f338:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801f33c:	f8ad 7018 	strh.w	r7, [sp, #24]
 801f340:	1a9b      	subs	r3, r3, r2
 801f342:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f346:	f8ad 101a 	strh.w	r1, [sp, #26]
 801f34a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801f34e:	9600      	str	r6, [sp, #0]
 801f350:	4643      	mov	r3, r8
 801f352:	e779      	b.n	801f248 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801f354:	2001381c 	.word	0x2001381c

0801f358 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801f358:	b180      	cbz	r0, 801f37c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801f35a:	2903      	cmp	r1, #3
 801f35c:	d81c      	bhi.n	801f398 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801f35e:	e8df f001 	tbb	[pc, r1]
 801f362:	1d02      	.short	0x1d02
 801f364:	1f08      	.short	0x1f08
 801f366:	4b10      	ldr	r3, [pc, #64]	; (801f3a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801f368:	8818      	ldrh	r0, [r3, #0]
 801f36a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f36e:	4240      	negs	r0, r0
 801f370:	4770      	bx	lr
 801f372:	4b0d      	ldr	r3, [pc, #52]	; (801f3a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801f374:	8818      	ldrh	r0, [r3, #0]
 801f376:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f37a:	4770      	bx	lr
 801f37c:	2903      	cmp	r1, #3
 801f37e:	d80b      	bhi.n	801f398 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801f380:	a301      	add	r3, pc, #4	; (adr r3, 801f388 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801f382:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801f386:	bf00      	nop
 801f388:	0801f39d 	.word	0x0801f39d
 801f38c:	0801f373 	.word	0x0801f373
 801f390:	0801f3a1 	.word	0x0801f3a1
 801f394:	0801f367 	.word	0x0801f367
 801f398:	2000      	movs	r0, #0
 801f39a:	4770      	bx	lr
 801f39c:	2001      	movs	r0, #1
 801f39e:	4770      	bx	lr
 801f3a0:	f04f 30ff 	mov.w	r0, #4294967295
 801f3a4:	4770      	bx	lr
 801f3a6:	bf00      	nop
 801f3a8:	20013816 	.word	0x20013816

0801f3ac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801f3ac:	b180      	cbz	r0, 801f3d0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801f3ae:	2903      	cmp	r1, #3
 801f3b0:	d81c      	bhi.n	801f3ec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801f3b2:	e8df f001 	tbb	[pc, r1]
 801f3b6:	021d      	.short	0x021d
 801f3b8:	071f      	.short	0x071f
 801f3ba:	4b10      	ldr	r3, [pc, #64]	; (801f3fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801f3bc:	8818      	ldrh	r0, [r3, #0]
 801f3be:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f3c2:	4770      	bx	lr
 801f3c4:	4b0d      	ldr	r3, [pc, #52]	; (801f3fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801f3c6:	8818      	ldrh	r0, [r3, #0]
 801f3c8:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f3cc:	4240      	negs	r0, r0
 801f3ce:	4770      	bx	lr
 801f3d0:	2903      	cmp	r1, #3
 801f3d2:	d80b      	bhi.n	801f3ec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801f3d4:	a301      	add	r3, pc, #4	; (adr r3, 801f3dc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801f3d6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801f3da:	bf00      	nop
 801f3dc:	0801f3bb 	.word	0x0801f3bb
 801f3e0:	0801f3f5 	.word	0x0801f3f5
 801f3e4:	0801f3c5 	.word	0x0801f3c5
 801f3e8:	0801f3f1 	.word	0x0801f3f1
 801f3ec:	2000      	movs	r0, #0
 801f3ee:	4770      	bx	lr
 801f3f0:	2001      	movs	r0, #1
 801f3f2:	4770      	bx	lr
 801f3f4:	f04f 30ff 	mov.w	r0, #4294967295
 801f3f8:	4770      	bx	lr
 801f3fa:	bf00      	nop
 801f3fc:	20013816 	.word	0x20013816

0801f400 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801f400:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f404:	b099      	sub	sp, #100	; 0x64
 801f406:	910b      	str	r1, [sp, #44]	; 0x2c
 801f408:	a914      	add	r1, sp, #80	; 0x50
 801f40a:	e881 000c 	stmia.w	r1, {r2, r3}
 801f40e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801f412:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801f416:	f891 900d 	ldrb.w	r9, [r1, #13]
 801f41a:	9309      	str	r3, [sp, #36]	; 0x24
 801f41c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801f420:	9310      	str	r3, [sp, #64]	; 0x40
 801f422:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801f426:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801f42a:	930c      	str	r3, [sp, #48]	; 0x30
 801f42c:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801f430:	798f      	ldrb	r7, [r1, #6]
 801f432:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801f436:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801f43a:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801f43e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801f442:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801f446:	431f      	orrs	r7, r3
 801f448:	f000 8195 	beq.w	801f776 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f44c:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801f450:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801f454:	f891 9007 	ldrb.w	r9, [r1, #7]
 801f458:	ea59 0903 	orrs.w	r9, r9, r3
 801f45c:	f000 818b 	beq.w	801f776 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f460:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801f464:	b29b      	uxth	r3, r3
 801f466:	2d00      	cmp	r5, #0
 801f468:	f000 812e 	beq.w	801f6c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801f46c:	1aed      	subs	r5, r5, r3
 801f46e:	b2ad      	uxth	r5, r5
 801f470:	042b      	lsls	r3, r5, #16
 801f472:	d502      	bpl.n	801f47a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801f474:	1b64      	subs	r4, r4, r5
 801f476:	b224      	sxth	r4, r4
 801f478:	2500      	movs	r5, #0
 801f47a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801f47e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801f482:	428c      	cmp	r4, r1
 801f484:	b28b      	uxth	r3, r1
 801f486:	bfbf      	itttt	lt
 801f488:	18ed      	addlt	r5, r5, r3
 801f48a:	1b2c      	sublt	r4, r5, r4
 801f48c:	b2a5      	uxthlt	r5, r4
 801f48e:	460c      	movlt	r4, r1
 801f490:	8891      	ldrh	r1, [r2, #4]
 801f492:	440b      	add	r3, r1
 801f494:	b21b      	sxth	r3, r3
 801f496:	930f      	str	r3, [sp, #60]	; 0x3c
 801f498:	88d3      	ldrh	r3, [r2, #6]
 801f49a:	8852      	ldrh	r2, [r2, #2]
 801f49c:	4413      	add	r3, r2
 801f49e:	b21b      	sxth	r3, r3
 801f4a0:	930d      	str	r3, [sp, #52]	; 0x34
 801f4a2:	4bbe      	ldr	r3, [pc, #760]	; (801f79c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801f4a4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f4a6:	f893 b000 	ldrb.w	fp, [r3]
 801f4aa:	f10b 3cff 	add.w	ip, fp, #4294967295
 801f4ae:	f1dc 0300 	rsbs	r3, ip, #0
 801f4b2:	eb43 030c 	adc.w	r3, r3, ip
 801f4b6:	930e      	str	r3, [sp, #56]	; 0x38
 801f4b8:	4621      	mov	r1, r4
 801f4ba:	4653      	mov	r3, sl
 801f4bc:	a814      	add	r0, sp, #80	; 0x50
 801f4be:	f7f6 fc90 	bl	8015de2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801f4c2:	4621      	mov	r1, r4
 801f4c4:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801f4c8:	4653      	mov	r3, sl
 801f4ca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f4cc:	a814      	add	r0, sp, #80	; 0x50
 801f4ce:	f7f6 fca5 	bl	8015e1c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801f4d2:	a918      	add	r1, sp, #96	; 0x60
 801f4d4:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801f4d8:	a817      	add	r0, sp, #92	; 0x5c
 801f4da:	f7f6 fdcb 	bl	8016074 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801f4de:	f1ba 0f00 	cmp.w	sl, #0
 801f4e2:	f040 80f4 	bne.w	801f6ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801f4e6:	f1bb 0f01 	cmp.w	fp, #1
 801f4ea:	f040 80f8 	bne.w	801f6de <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801f4ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f4f0:	2b00      	cmp	r3, #0
 801f4f2:	f040 8145 	bne.w	801f780 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801f4f6:	b2ba      	uxth	r2, r7
 801f4f8:	b905      	cbnz	r5, 801f4fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801f4fa:	b16e      	cbz	r6, 801f518 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801f4fc:	fb06 5302 	mla	r3, r6, r2, r5
 801f500:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801f502:	fb08 f303 	mul.w	r3, r8, r3
 801f506:	4631      	mov	r1, r6
 801f508:	f003 0607 	and.w	r6, r3, #7
 801f50c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801f510:	9328      	str	r3, [sp, #160]	; 0xa0
 801f512:	eba9 0301 	sub.w	r3, r9, r1
 801f516:	930a      	str	r3, [sp, #40]	; 0x28
 801f518:	4651      	mov	r1, sl
 801f51a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801f51c:	f7ff ff1c 	bl	801f358 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801f520:	4681      	mov	r9, r0
 801f522:	980e      	ldr	r0, [sp, #56]	; 0x38
 801f524:	f7ff ff42 	bl	801f3ac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801f528:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f52a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801f52c:	eba3 0a01 	sub.w	sl, r3, r1
 801f530:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f532:	459a      	cmp	sl, r3
 801f534:	bfa8      	it	ge
 801f536:	469a      	movge	sl, r3
 801f538:	f1ba 0f00 	cmp.w	sl, #0
 801f53c:	4683      	mov	fp, r0
 801f53e:	f340 811a 	ble.w	801f776 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f542:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f544:	1b64      	subs	r4, r4, r5
 801f546:	1b1c      	subs	r4, r3, r4
 801f548:	42bc      	cmp	r4, r7
 801f54a:	bfd4      	ite	le
 801f54c:	ebc5 0504 	rsble	r5, r5, r4
 801f550:	ebc5 0507 	rsbgt	r5, r5, r7
 801f554:	2d00      	cmp	r5, #0
 801f556:	f340 810e 	ble.w	801f776 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f55a:	1b52      	subs	r2, r2, r5
 801f55c:	fb08 f302 	mul.w	r3, r8, r2
 801f560:	930f      	str	r3, [sp, #60]	; 0x3c
 801f562:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f564:	2b00      	cmp	r3, #0
 801f566:	f040 8116 	bne.w	801f796 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801f56a:	4b8d      	ldr	r3, [pc, #564]	; (801f7a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801f56c:	6818      	ldr	r0, [r3, #0]
 801f56e:	6803      	ldr	r3, [r0, #0]
 801f570:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f572:	4798      	blx	r3
 801f574:	2301      	movs	r3, #1
 801f576:	fa03 f308 	lsl.w	r3, r3, r8
 801f57a:	4a8a      	ldr	r2, [pc, #552]	; (801f7a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801f57c:	3b01      	subs	r3, #1
 801f57e:	b2db      	uxtb	r3, r3
 801f580:	8811      	ldrh	r1, [r2, #0]
 801f582:	930e      	str	r3, [sp, #56]	; 0x38
 801f584:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801f588:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801f58c:	fb01 2303 	mla	r3, r1, r3, r2
 801f590:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f594:	930a      	str	r3, [sp, #40]	; 0x28
 801f596:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f598:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801f59c:	9313      	str	r3, [sp, #76]	; 0x4c
 801f59e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f5a0:	0a19      	lsrs	r1, r3, #8
 801f5a2:	b2cb      	uxtb	r3, r1
 801f5a4:	9312      	str	r3, [sp, #72]	; 0x48
 801f5a6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f5a8:	b2db      	uxtb	r3, r3
 801f5aa:	9311      	str	r3, [sp, #68]	; 0x44
 801f5ac:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f5ae:	095a      	lsrs	r2, r3, #5
 801f5b0:	4b7d      	ldr	r3, [pc, #500]	; (801f7a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801f5b2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f5b6:	400b      	ands	r3, r1
 801f5b8:	4313      	orrs	r3, r2
 801f5ba:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801f5bc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f5c0:	4313      	orrs	r3, r2
 801f5c2:	b29b      	uxth	r3, r3
 801f5c4:	9310      	str	r3, [sp, #64]	; 0x40
 801f5c6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f5c8:	781a      	ldrb	r2, [r3, #0]
 801f5ca:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801f5ce:	4132      	asrs	r2, r6
 801f5d0:	fb05 b919 	mls	r9, r5, r9, fp
 801f5d4:	fb03 fb05 	mul.w	fp, r3, r5
 801f5d8:	b2d2      	uxtb	r2, r2
 801f5da:	930d      	str	r3, [sp, #52]	; 0x34
 801f5dc:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801f5e0:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801f5e4:	f0c0 80f5 	bcc.w	801f7d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801f5e8:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801f5ec:	46ae      	mov	lr, r5
 801f5ee:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801f5f2:	f0c0 80dd 	bcc.w	801f7b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801f5f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f5f8:	4013      	ands	r3, r2
 801f5fa:	d055      	beq.n	801f6a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801f5fc:	20ff      	movs	r0, #255	; 0xff
 801f5fe:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f600:	fb90 f1f1 	sdiv	r1, r0, r1
 801f604:	434b      	muls	r3, r1
 801f606:	2bfe      	cmp	r3, #254	; 0xfe
 801f608:	dd03      	ble.n	801f612 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801f60a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f60c:	4281      	cmp	r1, r0
 801f60e:	f000 80cd 	beq.w	801f7ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801f612:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f614:	f8bc 4000 	ldrh.w	r4, [ip]
 801f618:	fb11 f303 	smulbb	r3, r1, r3
 801f61c:	b29b      	uxth	r3, r3
 801f61e:	1c59      	adds	r1, r3, #1
 801f620:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801f624:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f628:	b29f      	uxth	r7, r3
 801f62a:	43db      	mvns	r3, r3
 801f62c:	b2db      	uxtb	r3, r3
 801f62e:	9309      	str	r3, [sp, #36]	; 0x24
 801f630:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801f632:	1220      	asrs	r0, r4, #8
 801f634:	fb13 f907 	smulbb	r9, r3, r7
 801f638:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f63c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f63e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801f642:	fb00 9003 	mla	r0, r0, r3, r9
 801f646:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f648:	10e1      	asrs	r1, r4, #3
 801f64a:	fb13 f907 	smulbb	r9, r3, r7
 801f64e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f652:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f654:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801f658:	fb01 9103 	mla	r1, r1, r3, r9
 801f65c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f65e:	00e4      	lsls	r4, r4, #3
 801f660:	fb13 f707 	smulbb	r7, r3, r7
 801f664:	b2e4      	uxtb	r4, r4
 801f666:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f668:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801f66c:	fb04 7403 	mla	r4, r4, r3, r7
 801f670:	b280      	uxth	r0, r0
 801f672:	b2a4      	uxth	r4, r4
 801f674:	1c43      	adds	r3, r0, #1
 801f676:	f104 0901 	add.w	r9, r4, #1
 801f67a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f67e:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801f682:	b289      	uxth	r1, r1
 801f684:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801f688:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f68c:	ea49 0000 	orr.w	r0, r9, r0
 801f690:	f101 0901 	add.w	r9, r1, #1
 801f694:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801f698:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801f69c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801f6a0:	ea40 0009 	orr.w	r0, r0, r9
 801f6a4:	f8ac 0000 	strh.w	r0, [ip]
 801f6a8:	4446      	add	r6, r8
 801f6aa:	b2b6      	uxth	r6, r6
 801f6ac:	2e07      	cmp	r6, #7
 801f6ae:	bf81      	itttt	hi
 801f6b0:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801f6b2:	785a      	ldrbhi	r2, [r3, #1]
 801f6b4:	3301      	addhi	r3, #1
 801f6b6:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801f6b8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f6ba:	bf9a      	itte	ls
 801f6bc:	fa42 f208 	asrls.w	r2, r2, r8
 801f6c0:	b2d2      	uxtbls	r2, r2
 801f6c2:	2600      	movhi	r6, #0
 801f6c4:	449c      	add	ip, r3
 801f6c6:	e792      	b.n	801f5ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801f6c8:	441c      	add	r4, r3
 801f6ca:	b224      	sxth	r4, r4
 801f6cc:	e6d5      	b.n	801f47a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801f6ce:	f1ba 0f01 	cmp.w	sl, #1
 801f6d2:	f47f af0c 	bne.w	801f4ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f6d6:	f1bb 0f01 	cmp.w	fp, #1
 801f6da:	f47f af08 	bne.w	801f4ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f6de:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801f7a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801f6e2:	f8db 0000 	ldr.w	r0, [fp]
 801f6e6:	6803      	ldr	r3, [r0, #0]
 801f6e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f6ea:	4798      	blx	r3
 801f6ec:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801f6f0:	465a      	mov	r2, fp
 801f6f2:	d006      	beq.n	801f702 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801f6f4:	f1b8 0f04 	cmp.w	r8, #4
 801f6f8:	d140      	bne.n	801f77c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801f6fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f6fc:	3300      	adds	r3, #0
 801f6fe:	bf18      	it	ne
 801f700:	2301      	movne	r3, #1
 801f702:	0580      	lsls	r0, r0, #22
 801f704:	d56e      	bpl.n	801f7e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801f706:	f1b8 0f08 	cmp.w	r8, #8
 801f70a:	d16b      	bne.n	801f7e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801f70c:	2b00      	cmp	r3, #0
 801f70e:	bf0c      	ite	eq
 801f710:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801f714:	f44f 7180 	movne.w	r1, #256	; 0x100
 801f718:	2d00      	cmp	r5, #0
 801f71a:	f47f aee8 	bne.w	801f4ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f71e:	2e00      	cmp	r6, #0
 801f720:	f47f aee5 	bne.w	801f4ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f724:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801f726:	19e3      	adds	r3, r4, r7
 801f728:	4283      	cmp	r3, r0
 801f72a:	f73f aee0 	bgt.w	801f4ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f72e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f730:	980d      	ldr	r0, [sp, #52]	; 0x34
 801f732:	444b      	add	r3, r9
 801f734:	4283      	cmp	r3, r0
 801f736:	f73f aeda 	bgt.w	801f4ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f73a:	6810      	ldr	r0, [r2, #0]
 801f73c:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801f740:	6804      	ldr	r4, [r0, #0]
 801f742:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801f746:	b2bf      	uxth	r7, r7
 801f748:	f1b8 0f08 	cmp.w	r8, #8
 801f74c:	f04f 0500 	mov.w	r5, #0
 801f750:	bf18      	it	ne
 801f752:	3701      	addne	r7, #1
 801f754:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801f758:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f75a:	9104      	str	r1, [sp, #16]
 801f75c:	bf18      	it	ne
 801f75e:	f027 0701 	bicne.w	r7, r7, #1
 801f762:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801f764:	bf18      	it	ne
 801f766:	b2bf      	uxthne	r7, r7
 801f768:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801f76c:	e9cd 7900 	strd	r7, r9, [sp]
 801f770:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801f772:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801f774:	47a0      	blx	r4
 801f776:	b019      	add	sp, #100	; 0x64
 801f778:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f77c:	2300      	movs	r3, #0
 801f77e:	e7c0      	b.n	801f702 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801f780:	2208      	movs	r2, #8
 801f782:	fb92 f3f8 	sdiv	r3, r2, r8
 801f786:	1e5a      	subs	r2, r3, #1
 801f788:	443a      	add	r2, r7
 801f78a:	fb92 f2f3 	sdiv	r2, r2, r3
 801f78e:	fb12 f203 	smulbb	r2, r2, r3
 801f792:	b292      	uxth	r2, r2
 801f794:	e6b0      	b.n	801f4f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801f796:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801f798:	e6ec      	b.n	801f574 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801f79a:	bf00      	nop
 801f79c:	20013814 	.word	0x20013814
 801f7a0:	2001381c 	.word	0x2001381c
 801f7a4:	20013816 	.word	0x20013816
 801f7a8:	00fff800 	.word	0x00fff800
 801f7ac:	9810      	ldr	r0, [sp, #64]	; 0x40
 801f7ae:	e779      	b.n	801f6a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801f7b0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f7b2:	b153      	cbz	r3, 801f7ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801f7b4:	441e      	add	r6, r3
 801f7b6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f7b8:	b2b6      	uxth	r6, r6
 801f7ba:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801f7be:	f006 0607 	and.w	r6, r6, #7
 801f7c2:	781a      	ldrb	r2, [r3, #0]
 801f7c4:	9328      	str	r3, [sp, #160]	; 0xa0
 801f7c6:	4132      	asrs	r2, r6
 801f7c8:	b2d2      	uxtb	r2, r2
 801f7ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f7cc:	445b      	add	r3, fp
 801f7ce:	930a      	str	r3, [sp, #40]	; 0x28
 801f7d0:	e706      	b.n	801f5e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801f7d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f7d4:	2b00      	cmp	r3, #0
 801f7d6:	d1ce      	bne.n	801f776 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f7d8:	4b05      	ldr	r3, [pc, #20]	; (801f7f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801f7da:	6818      	ldr	r0, [r3, #0]
 801f7dc:	6803      	ldr	r3, [r0, #0]
 801f7de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f7e0:	4798      	blx	r3
 801f7e2:	e7c8      	b.n	801f776 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f7e4:	2b00      	cmp	r3, #0
 801f7e6:	f43f ae82 	beq.w	801f4ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f7ea:	f44f 7180 	mov.w	r1, #256	; 0x100
 801f7ee:	e793      	b.n	801f718 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801f7f0:	2001381c 	.word	0x2001381c

0801f7f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801f7f4:	b538      	push	{r3, r4, r5, lr}
 801f7f6:	4c15      	ldr	r4, [pc, #84]	; (801f84c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801f7f8:	7823      	ldrb	r3, [r4, #0]
 801f7fa:	f3bf 8f5b 	dmb	ish
 801f7fe:	07da      	lsls	r2, r3, #31
 801f800:	4605      	mov	r5, r0
 801f802:	d40b      	bmi.n	801f81c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801f804:	4620      	mov	r0, r4
 801f806:	f00a fee2 	bl	802a5ce <__cxa_guard_acquire>
 801f80a:	b138      	cbz	r0, 801f81c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801f80c:	4620      	mov	r0, r4
 801f80e:	f00a feea 	bl	802a5e6 <__cxa_guard_release>
 801f812:	4a0f      	ldr	r2, [pc, #60]	; (801f850 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801f814:	490f      	ldr	r1, [pc, #60]	; (801f854 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801f816:	4810      	ldr	r0, [pc, #64]	; (801f858 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801f818:	f00a fed2 	bl	802a5c0 <__aeabi_atexit>
 801f81c:	4c0f      	ldr	r4, [pc, #60]	; (801f85c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801f81e:	7823      	ldrb	r3, [r4, #0]
 801f820:	f3bf 8f5b 	dmb	ish
 801f824:	07db      	lsls	r3, r3, #31
 801f826:	d40b      	bmi.n	801f840 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801f828:	4620      	mov	r0, r4
 801f82a:	f00a fed0 	bl	802a5ce <__cxa_guard_acquire>
 801f82e:	b138      	cbz	r0, 801f840 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801f830:	4620      	mov	r0, r4
 801f832:	f00a fed8 	bl	802a5e6 <__cxa_guard_release>
 801f836:	4a06      	ldr	r2, [pc, #24]	; (801f850 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801f838:	4909      	ldr	r1, [pc, #36]	; (801f860 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801f83a:	480a      	ldr	r0, [pc, #40]	; (801f864 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801f83c:	f00a fec0 	bl	802a5c0 <__aeabi_atexit>
 801f840:	4b05      	ldr	r3, [pc, #20]	; (801f858 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801f842:	612b      	str	r3, [r5, #16]
 801f844:	4b07      	ldr	r3, [pc, #28]	; (801f864 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801f846:	616b      	str	r3, [r5, #20]
 801f848:	bd38      	pop	{r3, r4, r5, pc}
 801f84a:	bf00      	nop
 801f84c:	200138fc 	.word	0x200138fc
 801f850:	20000000 	.word	0x20000000
 801f854:	0801c5f7 	.word	0x0801c5f7
 801f858:	200000d4 	.word	0x200000d4
 801f85c:	20013900 	.word	0x20013900
 801f860:	0801c5f5 	.word	0x0801c5f5
 801f864:	200000d8 	.word	0x200000d8

0801f868 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801f868:	b538      	push	{r3, r4, r5, lr}
 801f86a:	4c15      	ldr	r4, [pc, #84]	; (801f8c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801f86c:	7823      	ldrb	r3, [r4, #0]
 801f86e:	f3bf 8f5b 	dmb	ish
 801f872:	07da      	lsls	r2, r3, #31
 801f874:	4605      	mov	r5, r0
 801f876:	d40b      	bmi.n	801f890 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801f878:	4620      	mov	r0, r4
 801f87a:	f00a fea8 	bl	802a5ce <__cxa_guard_acquire>
 801f87e:	b138      	cbz	r0, 801f890 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801f880:	4620      	mov	r0, r4
 801f882:	f00a feb0 	bl	802a5e6 <__cxa_guard_release>
 801f886:	4a0f      	ldr	r2, [pc, #60]	; (801f8c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801f888:	490f      	ldr	r1, [pc, #60]	; (801f8c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801f88a:	4810      	ldr	r0, [pc, #64]	; (801f8cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801f88c:	f00a fe98 	bl	802a5c0 <__aeabi_atexit>
 801f890:	4c0f      	ldr	r4, [pc, #60]	; (801f8d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801f892:	7823      	ldrb	r3, [r4, #0]
 801f894:	f3bf 8f5b 	dmb	ish
 801f898:	07db      	lsls	r3, r3, #31
 801f89a:	d40b      	bmi.n	801f8b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801f89c:	4620      	mov	r0, r4
 801f89e:	f00a fe96 	bl	802a5ce <__cxa_guard_acquire>
 801f8a2:	b138      	cbz	r0, 801f8b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801f8a4:	4620      	mov	r0, r4
 801f8a6:	f00a fe9e 	bl	802a5e6 <__cxa_guard_release>
 801f8aa:	4a06      	ldr	r2, [pc, #24]	; (801f8c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801f8ac:	4909      	ldr	r1, [pc, #36]	; (801f8d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801f8ae:	480a      	ldr	r0, [pc, #40]	; (801f8d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801f8b0:	f00a fe86 	bl	802a5c0 <__aeabi_atexit>
 801f8b4:	4b05      	ldr	r3, [pc, #20]	; (801f8cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801f8b6:	60ab      	str	r3, [r5, #8]
 801f8b8:	4b07      	ldr	r3, [pc, #28]	; (801f8d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801f8ba:	60eb      	str	r3, [r5, #12]
 801f8bc:	bd38      	pop	{r3, r4, r5, pc}
 801f8be:	bf00      	nop
 801f8c0:	200138d4 	.word	0x200138d4
 801f8c4:	20000000 	.word	0x20000000
 801f8c8:	0801c5fb 	.word	0x0801c5fb
 801f8cc:	200000ac 	.word	0x200000ac
 801f8d0:	200138d8 	.word	0x200138d8
 801f8d4:	0801c5f9 	.word	0x0801c5f9
 801f8d8:	200000b0 	.word	0x200000b0

0801f8dc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801f8dc:	b510      	push	{r4, lr}
 801f8de:	4604      	mov	r4, r0
 801f8e0:	f7ff ff88 	bl	801f7f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801f8e4:	4620      	mov	r0, r4
 801f8e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f8ea:	f7ff bfbd 	b.w	801f868 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801f8f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801f8f0:	b538      	push	{r3, r4, r5, lr}
 801f8f2:	4c15      	ldr	r4, [pc, #84]	; (801f948 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801f8f4:	7823      	ldrb	r3, [r4, #0]
 801f8f6:	f3bf 8f5b 	dmb	ish
 801f8fa:	07da      	lsls	r2, r3, #31
 801f8fc:	4605      	mov	r5, r0
 801f8fe:	d40b      	bmi.n	801f918 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801f900:	4620      	mov	r0, r4
 801f902:	f00a fe64 	bl	802a5ce <__cxa_guard_acquire>
 801f906:	b138      	cbz	r0, 801f918 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801f908:	4620      	mov	r0, r4
 801f90a:	f00a fe6c 	bl	802a5e6 <__cxa_guard_release>
 801f90e:	4a0f      	ldr	r2, [pc, #60]	; (801f94c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801f910:	490f      	ldr	r1, [pc, #60]	; (801f950 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801f912:	4810      	ldr	r0, [pc, #64]	; (801f954 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801f914:	f00a fe54 	bl	802a5c0 <__aeabi_atexit>
 801f918:	4c0f      	ldr	r4, [pc, #60]	; (801f958 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801f91a:	7823      	ldrb	r3, [r4, #0]
 801f91c:	f3bf 8f5b 	dmb	ish
 801f920:	07db      	lsls	r3, r3, #31
 801f922:	d40b      	bmi.n	801f93c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801f924:	4620      	mov	r0, r4
 801f926:	f00a fe52 	bl	802a5ce <__cxa_guard_acquire>
 801f92a:	b138      	cbz	r0, 801f93c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801f92c:	4620      	mov	r0, r4
 801f92e:	f00a fe5a 	bl	802a5e6 <__cxa_guard_release>
 801f932:	4a06      	ldr	r2, [pc, #24]	; (801f94c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801f934:	4909      	ldr	r1, [pc, #36]	; (801f95c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801f936:	480a      	ldr	r0, [pc, #40]	; (801f960 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801f938:	f00a fe42 	bl	802a5c0 <__aeabi_atexit>
 801f93c:	4b05      	ldr	r3, [pc, #20]	; (801f954 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801f93e:	622b      	str	r3, [r5, #32]
 801f940:	4b07      	ldr	r3, [pc, #28]	; (801f960 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801f942:	626b      	str	r3, [r5, #36]	; 0x24
 801f944:	bd38      	pop	{r3, r4, r5, pc}
 801f946:	bf00      	nop
 801f948:	20013904 	.word	0x20013904
 801f94c:	20000000 	.word	0x20000000
 801f950:	0801c5ef 	.word	0x0801c5ef
 801f954:	200000dc 	.word	0x200000dc
 801f958:	20013908 	.word	0x20013908
 801f95c:	0801c5ed 	.word	0x0801c5ed
 801f960:	200000e0 	.word	0x200000e0

0801f964 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801f964:	b538      	push	{r3, r4, r5, lr}
 801f966:	4c15      	ldr	r4, [pc, #84]	; (801f9bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801f968:	7823      	ldrb	r3, [r4, #0]
 801f96a:	f3bf 8f5b 	dmb	ish
 801f96e:	07da      	lsls	r2, r3, #31
 801f970:	4605      	mov	r5, r0
 801f972:	d40b      	bmi.n	801f98c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801f974:	4620      	mov	r0, r4
 801f976:	f00a fe2a 	bl	802a5ce <__cxa_guard_acquire>
 801f97a:	b138      	cbz	r0, 801f98c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801f97c:	4620      	mov	r0, r4
 801f97e:	f00a fe32 	bl	802a5e6 <__cxa_guard_release>
 801f982:	4a0f      	ldr	r2, [pc, #60]	; (801f9c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801f984:	490f      	ldr	r1, [pc, #60]	; (801f9c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801f986:	4810      	ldr	r0, [pc, #64]	; (801f9c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801f988:	f00a fe1a 	bl	802a5c0 <__aeabi_atexit>
 801f98c:	4c0f      	ldr	r4, [pc, #60]	; (801f9cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801f98e:	7823      	ldrb	r3, [r4, #0]
 801f990:	f3bf 8f5b 	dmb	ish
 801f994:	07db      	lsls	r3, r3, #31
 801f996:	d40b      	bmi.n	801f9b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801f998:	4620      	mov	r0, r4
 801f99a:	f00a fe18 	bl	802a5ce <__cxa_guard_acquire>
 801f99e:	b138      	cbz	r0, 801f9b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801f9a0:	4620      	mov	r0, r4
 801f9a2:	f00a fe20 	bl	802a5e6 <__cxa_guard_release>
 801f9a6:	4a06      	ldr	r2, [pc, #24]	; (801f9c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801f9a8:	4909      	ldr	r1, [pc, #36]	; (801f9d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801f9aa:	480a      	ldr	r0, [pc, #40]	; (801f9d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801f9ac:	f00a fe08 	bl	802a5c0 <__aeabi_atexit>
 801f9b0:	4b05      	ldr	r3, [pc, #20]	; (801f9c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801f9b2:	61ab      	str	r3, [r5, #24]
 801f9b4:	4b07      	ldr	r3, [pc, #28]	; (801f9d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801f9b6:	61eb      	str	r3, [r5, #28]
 801f9b8:	bd38      	pop	{r3, r4, r5, pc}
 801f9ba:	bf00      	nop
 801f9bc:	200138dc 	.word	0x200138dc
 801f9c0:	20000000 	.word	0x20000000
 801f9c4:	0801c5f3 	.word	0x0801c5f3
 801f9c8:	200000b4 	.word	0x200000b4
 801f9cc:	200138e0 	.word	0x200138e0
 801f9d0:	0801c5f1 	.word	0x0801c5f1
 801f9d4:	200000b8 	.word	0x200000b8

0801f9d8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801f9d8:	b510      	push	{r4, lr}
 801f9da:	4604      	mov	r4, r0
 801f9dc:	f7ff ff88 	bl	801f8f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801f9e0:	4620      	mov	r0, r4
 801f9e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f9e6:	f7ff bfbd 	b.w	801f964 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801f9ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801f9ec:	b538      	push	{r3, r4, r5, lr}
 801f9ee:	4c15      	ldr	r4, [pc, #84]	; (801fa44 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801f9f0:	7823      	ldrb	r3, [r4, #0]
 801f9f2:	f3bf 8f5b 	dmb	ish
 801f9f6:	07da      	lsls	r2, r3, #31
 801f9f8:	4605      	mov	r5, r0
 801f9fa:	d40b      	bmi.n	801fa14 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801f9fc:	4620      	mov	r0, r4
 801f9fe:	f00a fde6 	bl	802a5ce <__cxa_guard_acquire>
 801fa02:	b138      	cbz	r0, 801fa14 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801fa04:	4620      	mov	r0, r4
 801fa06:	f00a fdee 	bl	802a5e6 <__cxa_guard_release>
 801fa0a:	4a0f      	ldr	r2, [pc, #60]	; (801fa48 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801fa0c:	490f      	ldr	r1, [pc, #60]	; (801fa4c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801fa0e:	4810      	ldr	r0, [pc, #64]	; (801fa50 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801fa10:	f00a fdd6 	bl	802a5c0 <__aeabi_atexit>
 801fa14:	4c0f      	ldr	r4, [pc, #60]	; (801fa54 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801fa16:	7823      	ldrb	r3, [r4, #0]
 801fa18:	f3bf 8f5b 	dmb	ish
 801fa1c:	07db      	lsls	r3, r3, #31
 801fa1e:	d40b      	bmi.n	801fa38 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801fa20:	4620      	mov	r0, r4
 801fa22:	f00a fdd4 	bl	802a5ce <__cxa_guard_acquire>
 801fa26:	b138      	cbz	r0, 801fa38 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801fa28:	4620      	mov	r0, r4
 801fa2a:	f00a fddc 	bl	802a5e6 <__cxa_guard_release>
 801fa2e:	4a06      	ldr	r2, [pc, #24]	; (801fa48 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801fa30:	4909      	ldr	r1, [pc, #36]	; (801fa58 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801fa32:	480a      	ldr	r0, [pc, #40]	; (801fa5c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801fa34:	f00a fdc4 	bl	802a5c0 <__aeabi_atexit>
 801fa38:	4b05      	ldr	r3, [pc, #20]	; (801fa50 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801fa3a:	632b      	str	r3, [r5, #48]	; 0x30
 801fa3c:	4b07      	ldr	r3, [pc, #28]	; (801fa5c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801fa3e:	636b      	str	r3, [r5, #52]	; 0x34
 801fa40:	bd38      	pop	{r3, r4, r5, pc}
 801fa42:	bf00      	nop
 801fa44:	20013914 	.word	0x20013914
 801fa48:	20000000 	.word	0x20000000
 801fa4c:	0801c5e7 	.word	0x0801c5e7
 801fa50:	200000ec 	.word	0x200000ec
 801fa54:	20013918 	.word	0x20013918
 801fa58:	0801c5e5 	.word	0x0801c5e5
 801fa5c:	200000f0 	.word	0x200000f0

0801fa60 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801fa60:	b538      	push	{r3, r4, r5, lr}
 801fa62:	4c15      	ldr	r4, [pc, #84]	; (801fab8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801fa64:	7823      	ldrb	r3, [r4, #0]
 801fa66:	f3bf 8f5b 	dmb	ish
 801fa6a:	07da      	lsls	r2, r3, #31
 801fa6c:	4605      	mov	r5, r0
 801fa6e:	d40b      	bmi.n	801fa88 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801fa70:	4620      	mov	r0, r4
 801fa72:	f00a fdac 	bl	802a5ce <__cxa_guard_acquire>
 801fa76:	b138      	cbz	r0, 801fa88 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801fa78:	4620      	mov	r0, r4
 801fa7a:	f00a fdb4 	bl	802a5e6 <__cxa_guard_release>
 801fa7e:	4a0f      	ldr	r2, [pc, #60]	; (801fabc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801fa80:	490f      	ldr	r1, [pc, #60]	; (801fac0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801fa82:	4810      	ldr	r0, [pc, #64]	; (801fac4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801fa84:	f00a fd9c 	bl	802a5c0 <__aeabi_atexit>
 801fa88:	4c0f      	ldr	r4, [pc, #60]	; (801fac8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801fa8a:	7823      	ldrb	r3, [r4, #0]
 801fa8c:	f3bf 8f5b 	dmb	ish
 801fa90:	07db      	lsls	r3, r3, #31
 801fa92:	d40b      	bmi.n	801faac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801fa94:	4620      	mov	r0, r4
 801fa96:	f00a fd9a 	bl	802a5ce <__cxa_guard_acquire>
 801fa9a:	b138      	cbz	r0, 801faac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801fa9c:	4620      	mov	r0, r4
 801fa9e:	f00a fda2 	bl	802a5e6 <__cxa_guard_release>
 801faa2:	4a06      	ldr	r2, [pc, #24]	; (801fabc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801faa4:	4909      	ldr	r1, [pc, #36]	; (801facc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801faa6:	480a      	ldr	r0, [pc, #40]	; (801fad0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801faa8:	f00a fd8a 	bl	802a5c0 <__aeabi_atexit>
 801faac:	4b05      	ldr	r3, [pc, #20]	; (801fac4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801faae:	62ab      	str	r3, [r5, #40]	; 0x28
 801fab0:	4b07      	ldr	r3, [pc, #28]	; (801fad0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801fab2:	62eb      	str	r3, [r5, #44]	; 0x2c
 801fab4:	bd38      	pop	{r3, r4, r5, pc}
 801fab6:	bf00      	nop
 801fab8:	200138e4 	.word	0x200138e4
 801fabc:	20000000 	.word	0x20000000
 801fac0:	0801c5eb 	.word	0x0801c5eb
 801fac4:	200000bc 	.word	0x200000bc
 801fac8:	200138e8 	.word	0x200138e8
 801facc:	0801c5e9 	.word	0x0801c5e9
 801fad0:	200000c0 	.word	0x200000c0

0801fad4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801fad4:	b510      	push	{r4, lr}
 801fad6:	4604      	mov	r4, r0
 801fad8:	f7ff ff88 	bl	801f9ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801fadc:	4620      	mov	r0, r4
 801fade:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fae2:	f7ff bfbd 	b.w	801fa60 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801fae8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801fae8:	b538      	push	{r3, r4, r5, lr}
 801faea:	4c15      	ldr	r4, [pc, #84]	; (801fb40 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801faec:	7823      	ldrb	r3, [r4, #0]
 801faee:	f3bf 8f5b 	dmb	ish
 801faf2:	07da      	lsls	r2, r3, #31
 801faf4:	4605      	mov	r5, r0
 801faf6:	d40b      	bmi.n	801fb10 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801faf8:	4620      	mov	r0, r4
 801fafa:	f00a fd68 	bl	802a5ce <__cxa_guard_acquire>
 801fafe:	b138      	cbz	r0, 801fb10 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801fb00:	4620      	mov	r0, r4
 801fb02:	f00a fd70 	bl	802a5e6 <__cxa_guard_release>
 801fb06:	4a0f      	ldr	r2, [pc, #60]	; (801fb44 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801fb08:	490f      	ldr	r1, [pc, #60]	; (801fb48 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801fb0a:	4810      	ldr	r0, [pc, #64]	; (801fb4c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801fb0c:	f00a fd58 	bl	802a5c0 <__aeabi_atexit>
 801fb10:	4c0f      	ldr	r4, [pc, #60]	; (801fb50 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801fb12:	7823      	ldrb	r3, [r4, #0]
 801fb14:	f3bf 8f5b 	dmb	ish
 801fb18:	07db      	lsls	r3, r3, #31
 801fb1a:	d40b      	bmi.n	801fb34 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801fb1c:	4620      	mov	r0, r4
 801fb1e:	f00a fd56 	bl	802a5ce <__cxa_guard_acquire>
 801fb22:	b138      	cbz	r0, 801fb34 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801fb24:	4620      	mov	r0, r4
 801fb26:	f00a fd5e 	bl	802a5e6 <__cxa_guard_release>
 801fb2a:	4a06      	ldr	r2, [pc, #24]	; (801fb44 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801fb2c:	4909      	ldr	r1, [pc, #36]	; (801fb54 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801fb2e:	480a      	ldr	r0, [pc, #40]	; (801fb58 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801fb30:	f00a fd46 	bl	802a5c0 <__aeabi_atexit>
 801fb34:	4b05      	ldr	r3, [pc, #20]	; (801fb4c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801fb36:	652b      	str	r3, [r5, #80]	; 0x50
 801fb38:	4b07      	ldr	r3, [pc, #28]	; (801fb58 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801fb3a:	656b      	str	r3, [r5, #84]	; 0x54
 801fb3c:	bd38      	pop	{r3, r4, r5, pc}
 801fb3e:	bf00      	nop
 801fb40:	2001391c 	.word	0x2001391c
 801fb44:	20000000 	.word	0x20000000
 801fb48:	0801c5d7 	.word	0x0801c5d7
 801fb4c:	200000f4 	.word	0x200000f4
 801fb50:	20013920 	.word	0x20013920
 801fb54:	0801c5d5 	.word	0x0801c5d5
 801fb58:	200000f8 	.word	0x200000f8

0801fb5c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801fb5c:	b538      	push	{r3, r4, r5, lr}
 801fb5e:	4c15      	ldr	r4, [pc, #84]	; (801fbb4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801fb60:	7823      	ldrb	r3, [r4, #0]
 801fb62:	f3bf 8f5b 	dmb	ish
 801fb66:	07da      	lsls	r2, r3, #31
 801fb68:	4605      	mov	r5, r0
 801fb6a:	d40b      	bmi.n	801fb84 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801fb6c:	4620      	mov	r0, r4
 801fb6e:	f00a fd2e 	bl	802a5ce <__cxa_guard_acquire>
 801fb72:	b138      	cbz	r0, 801fb84 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801fb74:	4620      	mov	r0, r4
 801fb76:	f00a fd36 	bl	802a5e6 <__cxa_guard_release>
 801fb7a:	4a0f      	ldr	r2, [pc, #60]	; (801fbb8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801fb7c:	490f      	ldr	r1, [pc, #60]	; (801fbbc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801fb7e:	4810      	ldr	r0, [pc, #64]	; (801fbc0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801fb80:	f00a fd1e 	bl	802a5c0 <__aeabi_atexit>
 801fb84:	4c0f      	ldr	r4, [pc, #60]	; (801fbc4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801fb86:	7823      	ldrb	r3, [r4, #0]
 801fb88:	f3bf 8f5b 	dmb	ish
 801fb8c:	07db      	lsls	r3, r3, #31
 801fb8e:	d40b      	bmi.n	801fba8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801fb90:	4620      	mov	r0, r4
 801fb92:	f00a fd1c 	bl	802a5ce <__cxa_guard_acquire>
 801fb96:	b138      	cbz	r0, 801fba8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801fb98:	4620      	mov	r0, r4
 801fb9a:	f00a fd24 	bl	802a5e6 <__cxa_guard_release>
 801fb9e:	4a06      	ldr	r2, [pc, #24]	; (801fbb8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801fba0:	4909      	ldr	r1, [pc, #36]	; (801fbc8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801fba2:	480a      	ldr	r0, [pc, #40]	; (801fbcc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801fba4:	f00a fd0c 	bl	802a5c0 <__aeabi_atexit>
 801fba8:	4b05      	ldr	r3, [pc, #20]	; (801fbc0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801fbaa:	64ab      	str	r3, [r5, #72]	; 0x48
 801fbac:	4b07      	ldr	r3, [pc, #28]	; (801fbcc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801fbae:	64eb      	str	r3, [r5, #76]	; 0x4c
 801fbb0:	bd38      	pop	{r3, r4, r5, pc}
 801fbb2:	bf00      	nop
 801fbb4:	20013924 	.word	0x20013924
 801fbb8:	20000000 	.word	0x20000000
 801fbbc:	0801c5db 	.word	0x0801c5db
 801fbc0:	200000fc 	.word	0x200000fc
 801fbc4:	20013928 	.word	0x20013928
 801fbc8:	0801c5d9 	.word	0x0801c5d9
 801fbcc:	20000100 	.word	0x20000100

0801fbd0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801fbd0:	b538      	push	{r3, r4, r5, lr}
 801fbd2:	4c15      	ldr	r4, [pc, #84]	; (801fc28 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801fbd4:	7823      	ldrb	r3, [r4, #0]
 801fbd6:	f3bf 8f5b 	dmb	ish
 801fbda:	07da      	lsls	r2, r3, #31
 801fbdc:	4605      	mov	r5, r0
 801fbde:	d40b      	bmi.n	801fbf8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801fbe0:	4620      	mov	r0, r4
 801fbe2:	f00a fcf4 	bl	802a5ce <__cxa_guard_acquire>
 801fbe6:	b138      	cbz	r0, 801fbf8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801fbe8:	4620      	mov	r0, r4
 801fbea:	f00a fcfc 	bl	802a5e6 <__cxa_guard_release>
 801fbee:	4a0f      	ldr	r2, [pc, #60]	; (801fc2c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801fbf0:	490f      	ldr	r1, [pc, #60]	; (801fc30 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801fbf2:	4810      	ldr	r0, [pc, #64]	; (801fc34 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801fbf4:	f00a fce4 	bl	802a5c0 <__aeabi_atexit>
 801fbf8:	4c0f      	ldr	r4, [pc, #60]	; (801fc38 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801fbfa:	7823      	ldrb	r3, [r4, #0]
 801fbfc:	f3bf 8f5b 	dmb	ish
 801fc00:	07db      	lsls	r3, r3, #31
 801fc02:	d40b      	bmi.n	801fc1c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801fc04:	4620      	mov	r0, r4
 801fc06:	f00a fce2 	bl	802a5ce <__cxa_guard_acquire>
 801fc0a:	b138      	cbz	r0, 801fc1c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801fc0c:	4620      	mov	r0, r4
 801fc0e:	f00a fcea 	bl	802a5e6 <__cxa_guard_release>
 801fc12:	4a06      	ldr	r2, [pc, #24]	; (801fc2c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801fc14:	4909      	ldr	r1, [pc, #36]	; (801fc3c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801fc16:	480a      	ldr	r0, [pc, #40]	; (801fc40 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801fc18:	f00a fcd2 	bl	802a5c0 <__aeabi_atexit>
 801fc1c:	4b05      	ldr	r3, [pc, #20]	; (801fc34 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801fc1e:	642b      	str	r3, [r5, #64]	; 0x40
 801fc20:	4b07      	ldr	r3, [pc, #28]	; (801fc40 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801fc22:	646b      	str	r3, [r5, #68]	; 0x44
 801fc24:	bd38      	pop	{r3, r4, r5, pc}
 801fc26:	bf00      	nop
 801fc28:	200138ec 	.word	0x200138ec
 801fc2c:	20000000 	.word	0x20000000
 801fc30:	0801c5df 	.word	0x0801c5df
 801fc34:	200000c4 	.word	0x200000c4
 801fc38:	200138f0 	.word	0x200138f0
 801fc3c:	0801c5dd 	.word	0x0801c5dd
 801fc40:	200000c8 	.word	0x200000c8

0801fc44 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801fc44:	b538      	push	{r3, r4, r5, lr}
 801fc46:	4c15      	ldr	r4, [pc, #84]	; (801fc9c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801fc48:	7823      	ldrb	r3, [r4, #0]
 801fc4a:	f3bf 8f5b 	dmb	ish
 801fc4e:	07da      	lsls	r2, r3, #31
 801fc50:	4605      	mov	r5, r0
 801fc52:	d40b      	bmi.n	801fc6c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801fc54:	4620      	mov	r0, r4
 801fc56:	f00a fcba 	bl	802a5ce <__cxa_guard_acquire>
 801fc5a:	b138      	cbz	r0, 801fc6c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801fc5c:	4620      	mov	r0, r4
 801fc5e:	f00a fcc2 	bl	802a5e6 <__cxa_guard_release>
 801fc62:	4a0f      	ldr	r2, [pc, #60]	; (801fca0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801fc64:	490f      	ldr	r1, [pc, #60]	; (801fca4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801fc66:	4810      	ldr	r0, [pc, #64]	; (801fca8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801fc68:	f00a fcaa 	bl	802a5c0 <__aeabi_atexit>
 801fc6c:	4c0f      	ldr	r4, [pc, #60]	; (801fcac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801fc6e:	7823      	ldrb	r3, [r4, #0]
 801fc70:	f3bf 8f5b 	dmb	ish
 801fc74:	07db      	lsls	r3, r3, #31
 801fc76:	d40b      	bmi.n	801fc90 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801fc78:	4620      	mov	r0, r4
 801fc7a:	f00a fca8 	bl	802a5ce <__cxa_guard_acquire>
 801fc7e:	b138      	cbz	r0, 801fc90 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801fc80:	4620      	mov	r0, r4
 801fc82:	f00a fcb0 	bl	802a5e6 <__cxa_guard_release>
 801fc86:	4a06      	ldr	r2, [pc, #24]	; (801fca0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801fc88:	4909      	ldr	r1, [pc, #36]	; (801fcb0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801fc8a:	480a      	ldr	r0, [pc, #40]	; (801fcb4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801fc8c:	f00a fc98 	bl	802a5c0 <__aeabi_atexit>
 801fc90:	4b05      	ldr	r3, [pc, #20]	; (801fca8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801fc92:	63ab      	str	r3, [r5, #56]	; 0x38
 801fc94:	4b07      	ldr	r3, [pc, #28]	; (801fcb4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801fc96:	63eb      	str	r3, [r5, #60]	; 0x3c
 801fc98:	bd38      	pop	{r3, r4, r5, pc}
 801fc9a:	bf00      	nop
 801fc9c:	2001390c 	.word	0x2001390c
 801fca0:	20000000 	.word	0x20000000
 801fca4:	0801c5e3 	.word	0x0801c5e3
 801fca8:	200000e4 	.word	0x200000e4
 801fcac:	20013910 	.word	0x20013910
 801fcb0:	0801c5e1 	.word	0x0801c5e1
 801fcb4:	200000e8 	.word	0x200000e8

0801fcb8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801fcb8:	b510      	push	{r4, lr}
 801fcba:	4604      	mov	r4, r0
 801fcbc:	f7ff ff14 	bl	801fae8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801fcc0:	4620      	mov	r0, r4
 801fcc2:	f7ff ff85 	bl	801fbd0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801fcc6:	4620      	mov	r0, r4
 801fcc8:	f7ff ff48 	bl	801fb5c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801fccc:	4620      	mov	r0, r4
 801fcce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fcd2:	f7ff bfb7 	b.w	801fc44 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801fcd8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801fcd8:	b538      	push	{r3, r4, r5, lr}
 801fcda:	4c15      	ldr	r4, [pc, #84]	; (801fd30 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801fcdc:	7823      	ldrb	r3, [r4, #0]
 801fcde:	f3bf 8f5b 	dmb	ish
 801fce2:	07da      	lsls	r2, r3, #31
 801fce4:	4605      	mov	r5, r0
 801fce6:	d40b      	bmi.n	801fd00 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801fce8:	4620      	mov	r0, r4
 801fcea:	f00a fc70 	bl	802a5ce <__cxa_guard_acquire>
 801fcee:	b138      	cbz	r0, 801fd00 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801fcf0:	4620      	mov	r0, r4
 801fcf2:	f00a fc78 	bl	802a5e6 <__cxa_guard_release>
 801fcf6:	4a0f      	ldr	r2, [pc, #60]	; (801fd34 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801fcf8:	490f      	ldr	r1, [pc, #60]	; (801fd38 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801fcfa:	4810      	ldr	r0, [pc, #64]	; (801fd3c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801fcfc:	f00a fc60 	bl	802a5c0 <__aeabi_atexit>
 801fd00:	4c0f      	ldr	r4, [pc, #60]	; (801fd40 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801fd02:	7823      	ldrb	r3, [r4, #0]
 801fd04:	f3bf 8f5b 	dmb	ish
 801fd08:	07db      	lsls	r3, r3, #31
 801fd0a:	d40b      	bmi.n	801fd24 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801fd0c:	4620      	mov	r0, r4
 801fd0e:	f00a fc5e 	bl	802a5ce <__cxa_guard_acquire>
 801fd12:	b138      	cbz	r0, 801fd24 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801fd14:	4620      	mov	r0, r4
 801fd16:	f00a fc66 	bl	802a5e6 <__cxa_guard_release>
 801fd1a:	4a06      	ldr	r2, [pc, #24]	; (801fd34 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801fd1c:	4909      	ldr	r1, [pc, #36]	; (801fd44 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801fd1e:	480a      	ldr	r0, [pc, #40]	; (801fd48 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801fd20:	f00a fc4e 	bl	802a5c0 <__aeabi_atexit>
 801fd24:	4b05      	ldr	r3, [pc, #20]	; (801fd3c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801fd26:	662b      	str	r3, [r5, #96]	; 0x60
 801fd28:	4b07      	ldr	r3, [pc, #28]	; (801fd48 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801fd2a:	666b      	str	r3, [r5, #100]	; 0x64
 801fd2c:	bd38      	pop	{r3, r4, r5, pc}
 801fd2e:	bf00      	nop
 801fd30:	200138f4 	.word	0x200138f4
 801fd34:	20000000 	.word	0x20000000
 801fd38:	0801c5cf 	.word	0x0801c5cf
 801fd3c:	200000cc 	.word	0x200000cc
 801fd40:	200138f8 	.word	0x200138f8
 801fd44:	0801c5cd 	.word	0x0801c5cd
 801fd48:	200000d0 	.word	0x200000d0

0801fd4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801fd4c:	b538      	push	{r3, r4, r5, lr}
 801fd4e:	4c15      	ldr	r4, [pc, #84]	; (801fda4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801fd50:	7823      	ldrb	r3, [r4, #0]
 801fd52:	f3bf 8f5b 	dmb	ish
 801fd56:	07da      	lsls	r2, r3, #31
 801fd58:	4605      	mov	r5, r0
 801fd5a:	d40b      	bmi.n	801fd74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801fd5c:	4620      	mov	r0, r4
 801fd5e:	f00a fc36 	bl	802a5ce <__cxa_guard_acquire>
 801fd62:	b138      	cbz	r0, 801fd74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801fd64:	4620      	mov	r0, r4
 801fd66:	f00a fc3e 	bl	802a5e6 <__cxa_guard_release>
 801fd6a:	4a0f      	ldr	r2, [pc, #60]	; (801fda8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801fd6c:	490f      	ldr	r1, [pc, #60]	; (801fdac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801fd6e:	4810      	ldr	r0, [pc, #64]	; (801fdb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801fd70:	f00a fc26 	bl	802a5c0 <__aeabi_atexit>
 801fd74:	4c0f      	ldr	r4, [pc, #60]	; (801fdb4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801fd76:	7823      	ldrb	r3, [r4, #0]
 801fd78:	f3bf 8f5b 	dmb	ish
 801fd7c:	07db      	lsls	r3, r3, #31
 801fd7e:	d40b      	bmi.n	801fd98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801fd80:	4620      	mov	r0, r4
 801fd82:	f00a fc24 	bl	802a5ce <__cxa_guard_acquire>
 801fd86:	b138      	cbz	r0, 801fd98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801fd88:	4620      	mov	r0, r4
 801fd8a:	f00a fc2c 	bl	802a5e6 <__cxa_guard_release>
 801fd8e:	4a06      	ldr	r2, [pc, #24]	; (801fda8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801fd90:	4909      	ldr	r1, [pc, #36]	; (801fdb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801fd92:	480a      	ldr	r0, [pc, #40]	; (801fdbc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801fd94:	f00a fc14 	bl	802a5c0 <__aeabi_atexit>
 801fd98:	4b05      	ldr	r3, [pc, #20]	; (801fdb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801fd9a:	65ab      	str	r3, [r5, #88]	; 0x58
 801fd9c:	4b07      	ldr	r3, [pc, #28]	; (801fdbc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801fd9e:	65eb      	str	r3, [r5, #92]	; 0x5c
 801fda0:	bd38      	pop	{r3, r4, r5, pc}
 801fda2:	bf00      	nop
 801fda4:	200138cc 	.word	0x200138cc
 801fda8:	20000000 	.word	0x20000000
 801fdac:	0801c5d3 	.word	0x0801c5d3
 801fdb0:	200000a4 	.word	0x200000a4
 801fdb4:	200138d0 	.word	0x200138d0
 801fdb8:	0801c5d1 	.word	0x0801c5d1
 801fdbc:	200000a8 	.word	0x200000a8

0801fdc0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801fdc0:	b510      	push	{r4, lr}
 801fdc2:	4604      	mov	r4, r0
 801fdc4:	f7ff ff88 	bl	801fcd8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801fdc8:	4620      	mov	r0, r4
 801fdca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fdce:	f7ff bfbd 	b.w	801fd4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801fdd4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801fdd4:	b538      	push	{r3, r4, r5, lr}
 801fdd6:	4c15      	ldr	r4, [pc, #84]	; (801fe2c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801fdd8:	7823      	ldrb	r3, [r4, #0]
 801fdda:	f3bf 8f5b 	dmb	ish
 801fdde:	07da      	lsls	r2, r3, #31
 801fde0:	4605      	mov	r5, r0
 801fde2:	d40b      	bmi.n	801fdfc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801fde4:	4620      	mov	r0, r4
 801fde6:	f00a fbf2 	bl	802a5ce <__cxa_guard_acquire>
 801fdea:	b138      	cbz	r0, 801fdfc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801fdec:	4620      	mov	r0, r4
 801fdee:	f00a fbfa 	bl	802a5e6 <__cxa_guard_release>
 801fdf2:	4a0f      	ldr	r2, [pc, #60]	; (801fe30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801fdf4:	490f      	ldr	r1, [pc, #60]	; (801fe34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801fdf6:	4810      	ldr	r0, [pc, #64]	; (801fe38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801fdf8:	f00a fbe2 	bl	802a5c0 <__aeabi_atexit>
 801fdfc:	4c0f      	ldr	r4, [pc, #60]	; (801fe3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801fdfe:	7823      	ldrb	r3, [r4, #0]
 801fe00:	f3bf 8f5b 	dmb	ish
 801fe04:	07db      	lsls	r3, r3, #31
 801fe06:	d40b      	bmi.n	801fe20 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801fe08:	4620      	mov	r0, r4
 801fe0a:	f00a fbe0 	bl	802a5ce <__cxa_guard_acquire>
 801fe0e:	b138      	cbz	r0, 801fe20 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801fe10:	4620      	mov	r0, r4
 801fe12:	f00a fbe8 	bl	802a5e6 <__cxa_guard_release>
 801fe16:	4a06      	ldr	r2, [pc, #24]	; (801fe30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801fe18:	4909      	ldr	r1, [pc, #36]	; (801fe40 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801fe1a:	480a      	ldr	r0, [pc, #40]	; (801fe44 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801fe1c:	f00a fbd0 	bl	802a5c0 <__aeabi_atexit>
 801fe20:	4b05      	ldr	r3, [pc, #20]	; (801fe38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801fe22:	672b      	str	r3, [r5, #112]	; 0x70
 801fe24:	4b07      	ldr	r3, [pc, #28]	; (801fe44 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801fe26:	676b      	str	r3, [r5, #116]	; 0x74
 801fe28:	bd38      	pop	{r3, r4, r5, pc}
 801fe2a:	bf00      	nop
 801fe2c:	200138c4 	.word	0x200138c4
 801fe30:	20000000 	.word	0x20000000
 801fe34:	0801c5c7 	.word	0x0801c5c7
 801fe38:	2000009c 	.word	0x2000009c
 801fe3c:	200138c8 	.word	0x200138c8
 801fe40:	0801c5c5 	.word	0x0801c5c5
 801fe44:	200000a0 	.word	0x200000a0

0801fe48 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801fe48:	b538      	push	{r3, r4, r5, lr}
 801fe4a:	4c15      	ldr	r4, [pc, #84]	; (801fea0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801fe4c:	7823      	ldrb	r3, [r4, #0]
 801fe4e:	f3bf 8f5b 	dmb	ish
 801fe52:	07da      	lsls	r2, r3, #31
 801fe54:	4605      	mov	r5, r0
 801fe56:	d40b      	bmi.n	801fe70 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801fe58:	4620      	mov	r0, r4
 801fe5a:	f00a fbb8 	bl	802a5ce <__cxa_guard_acquire>
 801fe5e:	b138      	cbz	r0, 801fe70 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801fe60:	4620      	mov	r0, r4
 801fe62:	f00a fbc0 	bl	802a5e6 <__cxa_guard_release>
 801fe66:	4a0f      	ldr	r2, [pc, #60]	; (801fea4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801fe68:	490f      	ldr	r1, [pc, #60]	; (801fea8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801fe6a:	4810      	ldr	r0, [pc, #64]	; (801feac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801fe6c:	f00a fba8 	bl	802a5c0 <__aeabi_atexit>
 801fe70:	4c0f      	ldr	r4, [pc, #60]	; (801feb0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801fe72:	7823      	ldrb	r3, [r4, #0]
 801fe74:	f3bf 8f5b 	dmb	ish
 801fe78:	07db      	lsls	r3, r3, #31
 801fe7a:	d40b      	bmi.n	801fe94 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801fe7c:	4620      	mov	r0, r4
 801fe7e:	f00a fba6 	bl	802a5ce <__cxa_guard_acquire>
 801fe82:	b138      	cbz	r0, 801fe94 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801fe84:	4620      	mov	r0, r4
 801fe86:	f00a fbae 	bl	802a5e6 <__cxa_guard_release>
 801fe8a:	4a06      	ldr	r2, [pc, #24]	; (801fea4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801fe8c:	4909      	ldr	r1, [pc, #36]	; (801feb4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801fe8e:	480a      	ldr	r0, [pc, #40]	; (801feb8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801fe90:	f00a fb96 	bl	802a5c0 <__aeabi_atexit>
 801fe94:	4b05      	ldr	r3, [pc, #20]	; (801feac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801fe96:	66ab      	str	r3, [r5, #104]	; 0x68
 801fe98:	4b07      	ldr	r3, [pc, #28]	; (801feb8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801fe9a:	66eb      	str	r3, [r5, #108]	; 0x6c
 801fe9c:	bd38      	pop	{r3, r4, r5, pc}
 801fe9e:	bf00      	nop
 801fea0:	200138bc 	.word	0x200138bc
 801fea4:	20000000 	.word	0x20000000
 801fea8:	0801c5cb 	.word	0x0801c5cb
 801feac:	20000094 	.word	0x20000094
 801feb0:	200138c0 	.word	0x200138c0
 801feb4:	0801c5c9 	.word	0x0801c5c9
 801feb8:	20000098 	.word	0x20000098

0801febc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801febc:	b510      	push	{r4, lr}
 801febe:	4604      	mov	r4, r0
 801fec0:	f7ff ff88 	bl	801fdd4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801fec4:	4620      	mov	r0, r4
 801fec6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801feca:	f7ff bfbd 	b.w	801fe48 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801fece <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801fece:	b510      	push	{r4, lr}
 801fed0:	4604      	mov	r4, r0
 801fed2:	f7ff fff3 	bl	801febc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801fed6:	4620      	mov	r0, r4
 801fed8:	f7ff ff72 	bl	801fdc0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801fedc:	4620      	mov	r0, r4
 801fede:	f7ff fdf9 	bl	801fad4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801fee2:	4620      	mov	r0, r4
 801fee4:	f7ff fcfa 	bl	801f8dc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801fee8:	4620      	mov	r0, r4
 801feea:	f7ff fd75 	bl	801f9d8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801feee:	4620      	mov	r0, r4
 801fef0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fef4:	f7ff bee0 	b.w	801fcb8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801fef8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801fef8:	b538      	push	{r3, r4, r5, lr}
 801fefa:	4c0b      	ldr	r4, [pc, #44]	; (801ff28 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801fefc:	7823      	ldrb	r3, [r4, #0]
 801fefe:	f3bf 8f5b 	dmb	ish
 801ff02:	07db      	lsls	r3, r3, #31
 801ff04:	4605      	mov	r5, r0
 801ff06:	d40b      	bmi.n	801ff20 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801ff08:	4620      	mov	r0, r4
 801ff0a:	f00a fb60 	bl	802a5ce <__cxa_guard_acquire>
 801ff0e:	b138      	cbz	r0, 801ff20 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801ff10:	4620      	mov	r0, r4
 801ff12:	f00a fb68 	bl	802a5e6 <__cxa_guard_release>
 801ff16:	4a05      	ldr	r2, [pc, #20]	; (801ff2c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801ff18:	4905      	ldr	r1, [pc, #20]	; (801ff30 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801ff1a:	4806      	ldr	r0, [pc, #24]	; (801ff34 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801ff1c:	f00a fb50 	bl	802a5c0 <__aeabi_atexit>
 801ff20:	4b04      	ldr	r3, [pc, #16]	; (801ff34 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801ff22:	67ab      	str	r3, [r5, #120]	; 0x78
 801ff24:	bd38      	pop	{r3, r4, r5, pc}
 801ff26:	bf00      	nop
 801ff28:	200138b0 	.word	0x200138b0
 801ff2c:	20000000 	.word	0x20000000
 801ff30:	0801c5c3 	.word	0x0801c5c3
 801ff34:	2000008c 	.word	0x2000008c

0801ff38 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801ff38:	b538      	push	{r3, r4, r5, lr}
 801ff3a:	4c0b      	ldr	r4, [pc, #44]	; (801ff68 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801ff3c:	7823      	ldrb	r3, [r4, #0]
 801ff3e:	f3bf 8f5b 	dmb	ish
 801ff42:	07db      	lsls	r3, r3, #31
 801ff44:	4605      	mov	r5, r0
 801ff46:	d40b      	bmi.n	801ff60 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801ff48:	4620      	mov	r0, r4
 801ff4a:	f00a fb40 	bl	802a5ce <__cxa_guard_acquire>
 801ff4e:	b138      	cbz	r0, 801ff60 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801ff50:	4620      	mov	r0, r4
 801ff52:	f00a fb48 	bl	802a5e6 <__cxa_guard_release>
 801ff56:	4a05      	ldr	r2, [pc, #20]	; (801ff6c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801ff58:	4905      	ldr	r1, [pc, #20]	; (801ff70 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801ff5a:	4806      	ldr	r0, [pc, #24]	; (801ff74 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801ff5c:	f00a fb30 	bl	802a5c0 <__aeabi_atexit>
 801ff60:	4b04      	ldr	r3, [pc, #16]	; (801ff74 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801ff62:	67eb      	str	r3, [r5, #124]	; 0x7c
 801ff64:	bd38      	pop	{r3, r4, r5, pc}
 801ff66:	bf00      	nop
 801ff68:	200138b4 	.word	0x200138b4
 801ff6c:	20000000 	.word	0x20000000
 801ff70:	0801c5c1 	.word	0x0801c5c1
 801ff74:	20000090 	.word	0x20000090

0801ff78 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801ff78:	b570      	push	{r4, r5, r6, lr}
 801ff7a:	4d0d      	ldr	r5, [pc, #52]	; (801ffb0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801ff7c:	4c0d      	ldr	r4, [pc, #52]	; (801ffb4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801ff7e:	782b      	ldrb	r3, [r5, #0]
 801ff80:	f3bf 8f5b 	dmb	ish
 801ff84:	f013 0f01 	tst.w	r3, #1
 801ff88:	4606      	mov	r6, r0
 801ff8a:	d10d      	bne.n	801ffa8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801ff8c:	4628      	mov	r0, r5
 801ff8e:	f00a fb1e 	bl	802a5ce <__cxa_guard_acquire>
 801ff92:	b148      	cbz	r0, 801ffa8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801ff94:	4b08      	ldr	r3, [pc, #32]	; (801ffb8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801ff96:	6023      	str	r3, [r4, #0]
 801ff98:	4628      	mov	r0, r5
 801ff9a:	f00a fb24 	bl	802a5e6 <__cxa_guard_release>
 801ff9e:	4a07      	ldr	r2, [pc, #28]	; (801ffbc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801ffa0:	4907      	ldr	r1, [pc, #28]	; (801ffc0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801ffa2:	4620      	mov	r0, r4
 801ffa4:	f00a fb0c 	bl	802a5c0 <__aeabi_atexit>
 801ffa8:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801ffac:	bd70      	pop	{r4, r5, r6, pc}
 801ffae:	bf00      	nop
 801ffb0:	200138b8 	.word	0x200138b8
 801ffb4:	2001392c 	.word	0x2001392c
 801ffb8:	0802f7d4 	.word	0x0802f7d4
 801ffbc:	20000000 	.word	0x20000000
 801ffc0:	0801c5bf 	.word	0x0801c5bf

0801ffc4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801ffc4:	b510      	push	{r4, lr}
 801ffc6:	4604      	mov	r4, r0
 801ffc8:	f7ff ff96 	bl	801fef8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801ffcc:	4620      	mov	r0, r4
 801ffce:	f7ff ffb3 	bl	801ff38 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801ffd2:	4620      	mov	r0, r4
 801ffd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ffd8:	f7ff bfce 	b.w	801ff78 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801ffdc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801ffdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ffe0:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801ffe4:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801ffe8:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801ffec:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801fff0:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801fff4:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801fff8:	8808      	ldrh	r0, [r1, #0]
 801fffa:	fb05 4c0e 	mla	ip, r5, lr, r4
 801fffe:	2d00      	cmp	r5, #0
 8020000:	eb02 0a0c 	add.w	sl, r2, ip
 8020004:	f2c0 80b0 	blt.w	8020168 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8020008:	45ab      	cmp	fp, r5
 802000a:	f340 80ad 	ble.w	8020168 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 802000e:	2c00      	cmp	r4, #0
 8020010:	f2c0 80a8 	blt.w	8020164 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8020014:	45a6      	cmp	lr, r4
 8020016:	f340 80a5 	ble.w	8020164 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 802001a:	f812 200c 	ldrb.w	r2, [r2, ip]
 802001e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8020022:	1c62      	adds	r2, r4, #1
 8020024:	f100 80a3 	bmi.w	802016e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8020028:	4596      	cmp	lr, r2
 802002a:	f340 80a0 	ble.w	802016e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 802002e:	f1b9 0f00 	cmp.w	r9, #0
 8020032:	f000 809c 	beq.w	802016e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8020036:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802003a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 802003e:	3501      	adds	r5, #1
 8020040:	f100 8099 	bmi.w	8020176 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8020044:	45ab      	cmp	fp, r5
 8020046:	f340 8096 	ble.w	8020176 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 802004a:	2f00      	cmp	r7, #0
 802004c:	f000 8093 	beq.w	8020176 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8020050:	2c00      	cmp	r4, #0
 8020052:	f2c0 808e 	blt.w	8020172 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8020056:	45a6      	cmp	lr, r4
 8020058:	f340 808b 	ble.w	8020172 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 802005c:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8020060:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8020064:	3401      	adds	r4, #1
 8020066:	f100 8089 	bmi.w	802017c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 802006a:	45a6      	cmp	lr, r4
 802006c:	f340 8086 	ble.w	802017c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8020070:	f1b9 0f00 	cmp.w	r9, #0
 8020074:	f000 8082 	beq.w	802017c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8020078:	44d6      	add	lr, sl
 802007a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802007e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8020082:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8020086:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802008a:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 802008e:	fb19 fe07 	smulbb	lr, r9, r7
 8020092:	ea44 0808 	orr.w	r8, r4, r8
 8020096:	ea4f 440c 	mov.w	r4, ip, lsl #16
 802009a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 802009e:	f1c7 0210 	rsb	r2, r7, #16
 80200a2:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80200a6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80200aa:	ea44 0c0c 	orr.w	ip, r4, ip
 80200ae:	eba2 0209 	sub.w	r2, r2, r9
 80200b2:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80200b6:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80200ba:	fb04 f40c 	mul.w	r4, r4, ip
 80200be:	fb02 4808 	mla	r8, r2, r8, r4
 80200c2:	041a      	lsls	r2, r3, #16
 80200c4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80200c8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80200cc:	4313      	orrs	r3, r2
 80200ce:	042a      	lsls	r2, r5, #16
 80200d0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80200d4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80200d8:	fb0e 8303 	mla	r3, lr, r3, r8
 80200dc:	432a      	orrs	r2, r5
 80200de:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80200e2:	fb07 3202 	mla	r2, r7, r2, r3
 80200e6:	0d53      	lsrs	r3, r2, #21
 80200e8:	0952      	lsrs	r2, r2, #5
 80200ea:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80200ee:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80200f2:	431a      	orrs	r2, r3
 80200f4:	b293      	uxth	r3, r2
 80200f6:	b2b4      	uxth	r4, r6
 80200f8:	1202      	asrs	r2, r0, #8
 80200fa:	43f6      	mvns	r6, r6
 80200fc:	b2f6      	uxtb	r6, r6
 80200fe:	121d      	asrs	r5, r3, #8
 8020100:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020104:	fb12 f206 	smulbb	r2, r2, r6
 8020108:	10c7      	asrs	r7, r0, #3
 802010a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802010e:	00c0      	lsls	r0, r0, #3
 8020110:	fb05 2504 	mla	r5, r5, r4, r2
 8020114:	b2c0      	uxtb	r0, r0
 8020116:	10da      	asrs	r2, r3, #3
 8020118:	00db      	lsls	r3, r3, #3
 802011a:	b2db      	uxtb	r3, r3
 802011c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020120:	fb10 f006 	smulbb	r0, r0, r6
 8020124:	b2ad      	uxth	r5, r5
 8020126:	fb03 0004 	mla	r0, r3, r4, r0
 802012a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802012e:	fb17 f706 	smulbb	r7, r7, r6
 8020132:	b280      	uxth	r0, r0
 8020134:	1c6b      	adds	r3, r5, #1
 8020136:	fb02 7204 	mla	r2, r2, r4, r7
 802013a:	b292      	uxth	r2, r2
 802013c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020140:	1c43      	adds	r3, r0, #1
 8020142:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020146:	1c50      	adds	r0, r2, #1
 8020148:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802014c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020150:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020154:	0952      	lsrs	r2, r2, #5
 8020156:	432b      	orrs	r3, r5
 8020158:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802015c:	4313      	orrs	r3, r2
 802015e:	800b      	strh	r3, [r1, #0]
 8020160:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020164:	4680      	mov	r8, r0
 8020166:	e75c      	b.n	8020022 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8020168:	4684      	mov	ip, r0
 802016a:	4680      	mov	r8, r0
 802016c:	e767      	b.n	802003e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 802016e:	4684      	mov	ip, r0
 8020170:	e765      	b.n	802003e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8020172:	4605      	mov	r5, r0
 8020174:	e776      	b.n	8020064 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8020176:	4603      	mov	r3, r0
 8020178:	4605      	mov	r5, r0
 802017a:	e782      	b.n	8020082 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 802017c:	4603      	mov	r3, r0
 802017e:	e780      	b.n	8020082 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08020180 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020184:	b099      	sub	sp, #100	; 0x64
 8020186:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 802018a:	9215      	str	r2, [sp, #84]	; 0x54
 802018c:	9309      	str	r3, [sp, #36]	; 0x24
 802018e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8020190:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 8020194:	930d      	str	r3, [sp, #52]	; 0x34
 8020196:	910c      	str	r1, [sp, #48]	; 0x30
 8020198:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 802019c:	9016      	str	r0, [sp, #88]	; 0x58
 802019e:	6850      	ldr	r0, [r2, #4]
 80201a0:	6812      	ldr	r2, [r2, #0]
 80201a2:	fb00 1303 	mla	r3, r0, r3, r1
 80201a6:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80201aa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80201ac:	681b      	ldr	r3, [r3, #0]
 80201ae:	930b      	str	r3, [sp, #44]	; 0x2c
 80201b0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80201b2:	685e      	ldr	r6, [r3, #4]
 80201b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80201b6:	43db      	mvns	r3, r3
 80201b8:	b2db      	uxtb	r3, r3
 80201ba:	3604      	adds	r6, #4
 80201bc:	930a      	str	r3, [sp, #40]	; 0x28
 80201be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80201c0:	2b00      	cmp	r3, #0
 80201c2:	dc03      	bgt.n	80201cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80201c4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80201c6:	2b00      	cmp	r3, #0
 80201c8:	f340 8225 	ble.w	8020616 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80201cc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80201ce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80201d2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80201d6:	1e48      	subs	r0, r1, #1
 80201d8:	1e57      	subs	r7, r2, #1
 80201da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80201dc:	2b00      	cmp	r3, #0
 80201de:	f340 80e3 	ble.w	80203a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80201e2:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80201e6:	ea4f 4325 	mov.w	r3, r5, asr #16
 80201ea:	d406      	bmi.n	80201fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80201ec:	4584      	cmp	ip, r0
 80201ee:	da04      	bge.n	80201fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80201f0:	2b00      	cmp	r3, #0
 80201f2:	db02      	blt.n	80201fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80201f4:	42bb      	cmp	r3, r7
 80201f6:	f2c0 80d8 	blt.w	80203aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80201fa:	f11c 0c01 	adds.w	ip, ip, #1
 80201fe:	f100 80c9 	bmi.w	8020394 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020202:	4561      	cmp	r1, ip
 8020204:	f2c0 80c6 	blt.w	8020394 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020208:	3301      	adds	r3, #1
 802020a:	f100 80c3 	bmi.w	8020394 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 802020e:	429a      	cmp	r2, r3
 8020210:	f2c0 80c0 	blt.w	8020394 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020214:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8020218:	4647      	mov	r7, r8
 802021a:	f1bb 0f00 	cmp.w	fp, #0
 802021e:	f340 80e3 	ble.w	80203e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8020222:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8020224:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020226:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802022a:	689b      	ldr	r3, [r3, #8]
 802022c:	ea5f 422a 	movs.w	r2, sl, asr #16
 8020230:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020234:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8020238:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802023c:	f100 8121 	bmi.w	8020482 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020240:	f103 39ff 	add.w	r9, r3, #4294967295
 8020244:	454a      	cmp	r2, r9
 8020246:	f280 811c 	bge.w	8020482 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 802024a:	f1bc 0f00 	cmp.w	ip, #0
 802024e:	f2c0 8118 	blt.w	8020482 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020252:	f10e 39ff 	add.w	r9, lr, #4294967295
 8020256:	45cc      	cmp	ip, r9
 8020258:	f280 8113 	bge.w	8020482 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 802025c:	b21b      	sxth	r3, r3
 802025e:	fb0c 2203 	mla	r2, ip, r3, r2
 8020262:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020264:	eb04 0902 	add.w	r9, r4, r2
 8020268:	5ca2      	ldrb	r2, [r4, r2]
 802026a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 802026e:	2800      	cmp	r0, #0
 8020270:	f000 80fe 	beq.w	8020470 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8020274:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020278:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802027c:	9211      	str	r2, [sp, #68]	; 0x44
 802027e:	b151      	cbz	r1, 8020296 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020280:	eb09 0203 	add.w	r2, r9, r3
 8020284:	f819 3003 	ldrb.w	r3, [r9, r3]
 8020288:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802028c:	930f      	str	r3, [sp, #60]	; 0x3c
 802028e:	7853      	ldrb	r3, [r2, #1]
 8020290:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020294:	9312      	str	r3, [sp, #72]	; 0x48
 8020296:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020298:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802029a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802029e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80202a2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80202a6:	ea4c 0c03 	orr.w	ip, ip, r3
 80202aa:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80202ac:	041b      	lsls	r3, r3, #16
 80202ae:	fb10 f201 	smulbb	r2, r0, r1
 80202b2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80202b6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80202ba:	10d2      	asrs	r2, r2, #3
 80202bc:	4323      	orrs	r3, r4
 80202be:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 80202c2:	4353      	muls	r3, r2
 80202c4:	fb09 330c 	mla	r3, r9, ip, r3
 80202c8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80202cc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80202d0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80202d4:	ea4c 0e0e 	orr.w	lr, ip, lr
 80202d8:	f1c1 0c10 	rsb	ip, r1, #16
 80202dc:	ebac 0c00 	sub.w	ip, ip, r0
 80202e0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80202e4:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80202e8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80202ea:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80202ec:	0418      	lsls	r0, r3, #16
 80202ee:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80202f2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80202f6:	4318      	orrs	r0, r3
 80202f8:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80202fc:	fb02 c200 	mla	r2, r2, r0, ip
 8020300:	0d53      	lsrs	r3, r2, #21
 8020302:	0952      	lsrs	r2, r2, #5
 8020304:	8838      	ldrh	r0, [r7, #0]
 8020306:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802030a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802030e:	431a      	orrs	r2, r3
 8020310:	b292      	uxth	r2, r2
 8020312:	1201      	asrs	r1, r0, #8
 8020314:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8020318:	ea4f 2c22 	mov.w	ip, r2, asr #8
 802031c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020320:	fb11 f104 	smulbb	r1, r1, r4
 8020324:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8020328:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802032c:	00c0      	lsls	r0, r0, #3
 802032e:	fb0c 1c03 	mla	ip, ip, r3, r1
 8020332:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8020336:	10d1      	asrs	r1, r2, #3
 8020338:	b2c0      	uxtb	r0, r0
 802033a:	00d2      	lsls	r2, r2, #3
 802033c:	b2d2      	uxtb	r2, r2
 802033e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020342:	fb1e fe04 	smulbb	lr, lr, r4
 8020346:	fb10 f004 	smulbb	r0, r0, r4
 802034a:	fa1f fc8c 	uxth.w	ip, ip
 802034e:	fb01 e103 	mla	r1, r1, r3, lr
 8020352:	fb02 0303 	mla	r3, r2, r3, r0
 8020356:	b29a      	uxth	r2, r3
 8020358:	f10c 0301 	add.w	r3, ip, #1
 802035c:	b289      	uxth	r1, r1
 802035e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020362:	1c53      	adds	r3, r2, #1
 8020364:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020368:	1c4a      	adds	r2, r1, #1
 802036a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802036e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8020372:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020376:	0949      	lsrs	r1, r1, #5
 8020378:	ea43 030c 	orr.w	r3, r3, ip
 802037c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020380:	430b      	orrs	r3, r1
 8020382:	803b      	strh	r3, [r7, #0]
 8020384:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020386:	449a      	add	sl, r3
 8020388:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802038a:	3702      	adds	r7, #2
 802038c:	441d      	add	r5, r3
 802038e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020392:	e742      	b.n	802021a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020394:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020396:	449a      	add	sl, r3
 8020398:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802039a:	441d      	add	r5, r3
 802039c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802039e:	3b01      	subs	r3, #1
 80203a0:	9309      	str	r3, [sp, #36]	; 0x24
 80203a2:	f108 0802 	add.w	r8, r8, #2
 80203a6:	e718      	b.n	80201da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80203a8:	d023      	beq.n	80203f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80203aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80203ac:	9825      	ldr	r0, [sp, #148]	; 0x94
 80203ae:	3b01      	subs	r3, #1
 80203b0:	fb00 a003 	mla	r0, r0, r3, sl
 80203b4:	1400      	asrs	r0, r0, #16
 80203b6:	f53f af2d 	bmi.w	8020214 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80203ba:	3901      	subs	r1, #1
 80203bc:	4288      	cmp	r0, r1
 80203be:	f6bf af29 	bge.w	8020214 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80203c2:	9926      	ldr	r1, [sp, #152]	; 0x98
 80203c4:	fb01 5303 	mla	r3, r1, r3, r5
 80203c8:	141b      	asrs	r3, r3, #16
 80203ca:	f53f af23 	bmi.w	8020214 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80203ce:	3a01      	subs	r2, #1
 80203d0:	4293      	cmp	r3, r2
 80203d2:	f6bf af1f 	bge.w	8020214 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80203d6:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80203da:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 80203de:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 80203e2:	f1be 0f00 	cmp.w	lr, #0
 80203e6:	dc6c      	bgt.n	80204c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80203e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80203ea:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80203ee:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80203f2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80203f4:	2b00      	cmp	r3, #0
 80203f6:	f340 810e 	ble.w	8020616 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80203fa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80203fe:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020402:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020406:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020408:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802040c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020410:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020414:	eef0 6a62 	vmov.f32	s13, s5
 8020418:	ee61 7a27 	vmul.f32	s15, s2, s15
 802041c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020420:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020424:	ee16 aa90 	vmov	sl, s13
 8020428:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802042c:	eef0 6a43 	vmov.f32	s13, s6
 8020430:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020434:	ee12 2a90 	vmov	r2, s5
 8020438:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802043c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020440:	ee13 2a10 	vmov	r2, s6
 8020444:	9325      	str	r3, [sp, #148]	; 0x94
 8020446:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020448:	fb92 f3f3 	sdiv	r3, r2, r3
 802044c:	9326      	str	r3, [sp, #152]	; 0x98
 802044e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020450:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8020452:	3b01      	subs	r3, #1
 8020454:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020458:	930c      	str	r3, [sp, #48]	; 0x30
 802045a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802045c:	bf08      	it	eq
 802045e:	4613      	moveq	r3, r2
 8020460:	ee16 5a90 	vmov	r5, s13
 8020464:	9309      	str	r3, [sp, #36]	; 0x24
 8020466:	eeb0 3a67 	vmov.f32	s6, s15
 802046a:	eef0 2a47 	vmov.f32	s5, s14
 802046e:	e6a6      	b.n	80201be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8020470:	2900      	cmp	r1, #0
 8020472:	f43f af10 	beq.w	8020296 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020476:	f819 3003 	ldrb.w	r3, [r9, r3]
 802047a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802047e:	930f      	str	r3, [sp, #60]	; 0x3c
 8020480:	e709      	b.n	8020296 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020482:	f112 0901 	adds.w	r9, r2, #1
 8020486:	f53f af7d 	bmi.w	8020384 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 802048a:	454b      	cmp	r3, r9
 802048c:	f6ff af7a 	blt.w	8020384 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020490:	f11c 0901 	adds.w	r9, ip, #1
 8020494:	f53f af76 	bmi.w	8020384 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020498:	45ce      	cmp	lr, r9
 802049a:	f6ff af73 	blt.w	8020384 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 802049e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80204a0:	9202      	str	r2, [sp, #8]
 80204a2:	b21b      	sxth	r3, r3
 80204a4:	fa0f f28e 	sxth.w	r2, lr
 80204a8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80204ac:	e9cd c003 	strd	ip, r0, [sp, #12]
 80204b0:	9201      	str	r2, [sp, #4]
 80204b2:	9300      	str	r3, [sp, #0]
 80204b4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80204b6:	9816      	ldr	r0, [sp, #88]	; 0x58
 80204b8:	4633      	mov	r3, r6
 80204ba:	4639      	mov	r1, r7
 80204bc:	f7ff fd8e 	bl	801ffdc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 80204c0:	e760      	b.n	8020384 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80204c2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80204c4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80204c6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80204ca:	ea4f 422a 	mov.w	r2, sl, asr #16
 80204ce:	1429      	asrs	r1, r5, #16
 80204d0:	fb03 2101 	mla	r1, r3, r1, r2
 80204d4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80204d6:	440a      	add	r2, r1
 80204d8:	5c61      	ldrb	r1, [r4, r1]
 80204da:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 80204de:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80204e2:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 80204e6:	f1bc 0f00 	cmp.w	ip, #0
 80204ea:	f000 808c 	beq.w	8020606 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 80204ee:	7857      	ldrb	r7, [r2, #1]
 80204f0:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 80204f4:	9413      	str	r4, [sp, #76]	; 0x4c
 80204f6:	b140      	cbz	r0, 802050a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80204f8:	18d7      	adds	r7, r2, r3
 80204fa:	5cd3      	ldrb	r3, [r2, r3]
 80204fc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020500:	9310      	str	r3, [sp, #64]	; 0x40
 8020502:	787b      	ldrb	r3, [r7, #1]
 8020504:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020508:	9314      	str	r3, [sp, #80]	; 0x50
 802050a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 802050c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802050e:	fb1c f200 	smulbb	r2, ip, r0
 8020512:	041f      	lsls	r7, r3, #16
 8020514:	10d2      	asrs	r2, r2, #3
 8020516:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802051a:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 802051e:	431f      	orrs	r7, r3
 8020520:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8020524:	9317      	str	r3, [sp, #92]	; 0x5c
 8020526:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8020528:	041b      	lsls	r3, r3, #16
 802052a:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 802052e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020532:	ea43 030b 	orr.w	r3, r3, fp
 8020536:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020538:	4353      	muls	r3, r2
 802053a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802053e:	fb04 3707 	mla	r7, r4, r7, r3
 8020542:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8020546:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 802054a:	ea43 0b01 	orr.w	fp, r3, r1
 802054e:	f1c0 0110 	rsb	r1, r0, #16
 8020552:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020554:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020556:	eba1 0c0c 	sub.w	ip, r1, ip
 802055a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 802055e:	fb0c 770b 	mla	r7, ip, fp, r7
 8020562:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020566:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 802056a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802056e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8020572:	ea4c 0c0b 	orr.w	ip, ip, fp
 8020576:	fb02 770c 	mla	r7, r2, ip, r7
 802057a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802057c:	0d79      	lsrs	r1, r7, #21
 802057e:	097f      	lsrs	r7, r7, #5
 8020580:	8812      	ldrh	r2, [r2, #0]
 8020582:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020586:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802058a:	430f      	orrs	r7, r1
 802058c:	b2bb      	uxth	r3, r7
 802058e:	1211      	asrs	r1, r2, #8
 8020590:	1218      	asrs	r0, r3, #8
 8020592:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020596:	fb11 f104 	smulbb	r1, r1, r4
 802059a:	10d7      	asrs	r7, r2, #3
 802059c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80205a0:	00d2      	lsls	r2, r2, #3
 80205a2:	fb00 1009 	mla	r0, r0, r9, r1
 80205a6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80205aa:	10d9      	asrs	r1, r3, #3
 80205ac:	b2d2      	uxtb	r2, r2
 80205ae:	00db      	lsls	r3, r3, #3
 80205b0:	fb17 f704 	smulbb	r7, r7, r4
 80205b4:	fb12 f204 	smulbb	r2, r2, r4
 80205b8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80205bc:	b2db      	uxtb	r3, r3
 80205be:	b280      	uxth	r0, r0
 80205c0:	fb01 7109 	mla	r1, r1, r9, r7
 80205c4:	fb03 2309 	mla	r3, r3, r9, r2
 80205c8:	b29b      	uxth	r3, r3
 80205ca:	b289      	uxth	r1, r1
 80205cc:	1c42      	adds	r2, r0, #1
 80205ce:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80205d2:	1c4f      	adds	r7, r1, #1
 80205d4:	1c5a      	adds	r2, r3, #1
 80205d6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80205da:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80205de:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80205e2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80205e6:	0949      	lsrs	r1, r1, #5
 80205e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80205ea:	4310      	orrs	r0, r2
 80205ec:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80205f0:	4308      	orrs	r0, r1
 80205f2:	f823 0b02 	strh.w	r0, [r3], #2
 80205f6:	930e      	str	r3, [sp, #56]	; 0x38
 80205f8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80205fa:	449a      	add	sl, r3
 80205fc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80205fe:	f10e 3eff 	add.w	lr, lr, #4294967295
 8020602:	441d      	add	r5, r3
 8020604:	e6ed      	b.n	80203e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8020606:	2800      	cmp	r0, #0
 8020608:	f43f af7f 	beq.w	802050a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802060c:	5cd3      	ldrb	r3, [r2, r3]
 802060e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020612:	9310      	str	r3, [sp, #64]	; 0x40
 8020614:	e779      	b.n	802050a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020616:	b019      	add	sp, #100	; 0x64
 8020618:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802061c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 802061c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020620:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8020624:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8020628:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 802062c:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8020630:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8020634:	8808      	ldrh	r0, [r1, #0]
 8020636:	fb08 470e 	mla	r7, r8, lr, r4
 802063a:	f1b8 0f00 	cmp.w	r8, #0
 802063e:	eb02 0907 	add.w	r9, r2, r7
 8020642:	db67      	blt.n	8020714 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8020644:	45c2      	cmp	sl, r8
 8020646:	dd65      	ble.n	8020714 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8020648:	2c00      	cmp	r4, #0
 802064a:	db61      	blt.n	8020710 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 802064c:	45a6      	cmp	lr, r4
 802064e:	dd5f      	ble.n	8020710 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8020650:	5dd2      	ldrb	r2, [r2, r7]
 8020652:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8020656:	1c62      	adds	r2, r4, #1
 8020658:	d45f      	bmi.n	802071a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 802065a:	4596      	cmp	lr, r2
 802065c:	dd5d      	ble.n	802071a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 802065e:	2d00      	cmp	r5, #0
 8020660:	d05b      	beq.n	802071a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8020662:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020666:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 802066a:	f118 0801 	adds.w	r8, r8, #1
 802066e:	d458      	bmi.n	8020722 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020670:	45c2      	cmp	sl, r8
 8020672:	dd56      	ble.n	8020722 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020674:	2e00      	cmp	r6, #0
 8020676:	d054      	beq.n	8020722 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020678:	2c00      	cmp	r4, #0
 802067a:	db50      	blt.n	802071e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 802067c:	45a6      	cmp	lr, r4
 802067e:	dd4e      	ble.n	802071e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8020680:	f819 200e 	ldrb.w	r2, [r9, lr]
 8020684:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8020688:	3401      	adds	r4, #1
 802068a:	d407      	bmi.n	802069c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 802068c:	45a6      	cmp	lr, r4
 802068e:	dd05      	ble.n	802069c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020690:	b125      	cbz	r5, 802069c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020692:	44ce      	add	lr, r9
 8020694:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8020698:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 802069c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 80206a0:	fb15 f406 	smulbb	r4, r5, r6
 80206a4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80206a8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 80206ac:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80206b0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 80206b4:	ea43 0c0c 	orr.w	ip, r3, ip
 80206b8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80206bc:	f1c6 0310 	rsb	r3, r6, #16
 80206c0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80206c4:	1b5b      	subs	r3, r3, r5
 80206c6:	ea4e 0707 	orr.w	r7, lr, r7
 80206ca:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 80206ce:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80206d2:	437d      	muls	r5, r7
 80206d4:	fb03 5c0c 	mla	ip, r3, ip, r5
 80206d8:	0403      	lsls	r3, r0, #16
 80206da:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80206de:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80206e2:	4318      	orrs	r0, r3
 80206e4:	0413      	lsls	r3, r2, #16
 80206e6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80206ea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80206ee:	4313      	orrs	r3, r2
 80206f0:	fb04 c000 	mla	r0, r4, r0, ip
 80206f4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80206f8:	fb06 0003 	mla	r0, r6, r3, r0
 80206fc:	0d43      	lsrs	r3, r0, #21
 80206fe:	0940      	lsrs	r0, r0, #5
 8020700:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020704:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020708:	4318      	orrs	r0, r3
 802070a:	8008      	strh	r0, [r1, #0]
 802070c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020710:	4684      	mov	ip, r0
 8020712:	e7a0      	b.n	8020656 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8020714:	4607      	mov	r7, r0
 8020716:	4684      	mov	ip, r0
 8020718:	e7a7      	b.n	802066a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 802071a:	4607      	mov	r7, r0
 802071c:	e7a5      	b.n	802066a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 802071e:	4602      	mov	r2, r0
 8020720:	e7b2      	b.n	8020688 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8020722:	4602      	mov	r2, r0
 8020724:	e7ba      	b.n	802069c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08020726 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020726:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802072a:	b093      	sub	sp, #76	; 0x4c
 802072c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8020730:	920f      	str	r2, [sp, #60]	; 0x3c
 8020732:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020734:	9108      	str	r1, [sp, #32]
 8020736:	9306      	str	r3, [sp, #24]
 8020738:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802073c:	9010      	str	r0, [sp, #64]	; 0x40
 802073e:	6850      	ldr	r0, [r2, #4]
 8020740:	6812      	ldr	r2, [r2, #0]
 8020742:	fb00 1303 	mla	r3, r0, r3, r1
 8020746:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802074a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802074c:	681b      	ldr	r3, [r3, #0]
 802074e:	9307      	str	r3, [sp, #28]
 8020750:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020752:	685f      	ldr	r7, [r3, #4]
 8020754:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8020758:	3704      	adds	r7, #4
 802075a:	9b08      	ldr	r3, [sp, #32]
 802075c:	2b00      	cmp	r3, #0
 802075e:	dc03      	bgt.n	8020768 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8020760:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020762:	2b00      	cmp	r3, #0
 8020764:	f340 81b2 	ble.w	8020acc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8020768:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802076a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802076e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020772:	1e48      	subs	r0, r1, #1
 8020774:	f102 3cff 	add.w	ip, r2, #4294967295
 8020778:	9b06      	ldr	r3, [sp, #24]
 802077a:	2b00      	cmp	r3, #0
 802077c:	f340 80a9 	ble.w	80208d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8020780:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020784:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020788:	d406      	bmi.n	8020798 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802078a:	4586      	cmp	lr, r0
 802078c:	da04      	bge.n	8020798 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802078e:	2b00      	cmp	r3, #0
 8020790:	db02      	blt.n	8020798 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020792:	4563      	cmp	r3, ip
 8020794:	f2c0 809e 	blt.w	80208d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020798:	f11e 0e01 	adds.w	lr, lr, #1
 802079c:	f100 808f 	bmi.w	80208be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80207a0:	4571      	cmp	r1, lr
 80207a2:	f2c0 808c 	blt.w	80208be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80207a6:	3301      	adds	r3, #1
 80207a8:	f100 8089 	bmi.w	80208be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80207ac:	429a      	cmp	r2, r3
 80207ae:	f2c0 8086 	blt.w	80208be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80207b2:	f8dd b018 	ldr.w	fp, [sp, #24]
 80207b6:	46c8      	mov	r8, r9
 80207b8:	f1bb 0f00 	cmp.w	fp, #0
 80207bc:	f340 80a6 	ble.w	802090c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80207c0:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80207c2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80207c4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80207c8:	689b      	ldr	r3, [r3, #8]
 80207ca:	1422      	asrs	r2, r4, #16
 80207cc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80207d0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80207d4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80207d8:	f100 80e3 	bmi.w	80209a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80207dc:	f103 3aff 	add.w	sl, r3, #4294967295
 80207e0:	4552      	cmp	r2, sl
 80207e2:	f280 80de 	bge.w	80209a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80207e6:	f1bc 0f00 	cmp.w	ip, #0
 80207ea:	f2c0 80da 	blt.w	80209a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80207ee:	f10e 3aff 	add.w	sl, lr, #4294967295
 80207f2:	45d4      	cmp	ip, sl
 80207f4:	f280 80d5 	bge.w	80209a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80207f8:	b21b      	sxth	r3, r3
 80207fa:	fb0c 2203 	mla	r2, ip, r3, r2
 80207fe:	9d07      	ldr	r5, [sp, #28]
 8020800:	eb05 0a02 	add.w	sl, r5, r2
 8020804:	5caa      	ldrb	r2, [r5, r2]
 8020806:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 802080a:	2800      	cmp	r0, #0
 802080c:	f000 80c0 	beq.w	8020990 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8020810:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020814:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8020818:	920b      	str	r2, [sp, #44]	; 0x2c
 802081a:	b151      	cbz	r1, 8020832 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 802081c:	eb0a 0203 	add.w	r2, sl, r3
 8020820:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8020824:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020828:	9309      	str	r3, [sp, #36]	; 0x24
 802082a:	7853      	ldrb	r3, [r2, #1]
 802082c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020830:	930c      	str	r3, [sp, #48]	; 0x30
 8020832:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020834:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020836:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802083a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802083e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020842:	ea4c 0c03 	orr.w	ip, ip, r3
 8020846:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020848:	041b      	lsls	r3, r3, #16
 802084a:	fb10 f201 	smulbb	r2, r0, r1
 802084e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020852:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020856:	10d2      	asrs	r2, r2, #3
 8020858:	432b      	orrs	r3, r5
 802085a:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 802085e:	4353      	muls	r3, r2
 8020860:	fb0a 330c 	mla	r3, sl, ip, r3
 8020864:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8020868:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802086c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020870:	ea4c 0e0e 	orr.w	lr, ip, lr
 8020874:	f1c1 0c10 	rsb	ip, r1, #16
 8020878:	ebac 0c00 	sub.w	ip, ip, r0
 802087c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020880:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8020884:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020886:	0418      	lsls	r0, r3, #16
 8020888:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802088c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020890:	4318      	orrs	r0, r3
 8020892:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8020896:	fb02 c200 	mla	r2, r2, r0, ip
 802089a:	0d53      	lsrs	r3, r2, #21
 802089c:	0952      	lsrs	r2, r2, #5
 802089e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80208a2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80208a6:	431a      	orrs	r2, r3
 80208a8:	f8a8 2000 	strh.w	r2, [r8]
 80208ac:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80208ae:	441c      	add	r4, r3
 80208b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80208b2:	f108 0802 	add.w	r8, r8, #2
 80208b6:	441e      	add	r6, r3
 80208b8:	f10b 3bff 	add.w	fp, fp, #4294967295
 80208bc:	e77c      	b.n	80207b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80208be:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80208c0:	441c      	add	r4, r3
 80208c2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80208c4:	441e      	add	r6, r3
 80208c6:	9b06      	ldr	r3, [sp, #24]
 80208c8:	3b01      	subs	r3, #1
 80208ca:	9306      	str	r3, [sp, #24]
 80208cc:	f109 0902 	add.w	r9, r9, #2
 80208d0:	e752      	b.n	8020778 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80208d2:	d020      	beq.n	8020916 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80208d4:	9b06      	ldr	r3, [sp, #24]
 80208d6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80208d8:	3b01      	subs	r3, #1
 80208da:	fb00 4003 	mla	r0, r0, r3, r4
 80208de:	1400      	asrs	r0, r0, #16
 80208e0:	f53f af67 	bmi.w	80207b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80208e4:	3901      	subs	r1, #1
 80208e6:	4288      	cmp	r0, r1
 80208e8:	f6bf af63 	bge.w	80207b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80208ec:	9920      	ldr	r1, [sp, #128]	; 0x80
 80208ee:	fb01 6303 	mla	r3, r1, r3, r6
 80208f2:	141b      	asrs	r3, r3, #16
 80208f4:	f53f af5d 	bmi.w	80207b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80208f8:	3a01      	subs	r2, #1
 80208fa:	4293      	cmp	r3, r2
 80208fc:	f6bf af59 	bge.w	80207b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020900:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8020904:	46ca      	mov	sl, r9
 8020906:	f1b8 0f00 	cmp.w	r8, #0
 802090a:	dc67      	bgt.n	80209dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 802090c:	9b06      	ldr	r3, [sp, #24]
 802090e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8020912:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8020916:	9b08      	ldr	r3, [sp, #32]
 8020918:	2b00      	cmp	r3, #0
 802091a:	f340 80d7 	ble.w	8020acc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 802091e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020922:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020926:	eec6 7a80 	vdiv.f32	s15, s13, s0
 802092a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802092c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020930:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020934:	eeb0 6a62 	vmov.f32	s12, s5
 8020938:	ee61 7a27 	vmul.f32	s15, s2, s15
 802093c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020940:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020944:	ee16 4a10 	vmov	r4, s12
 8020948:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802094c:	eeb0 6a43 	vmov.f32	s12, s6
 8020950:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020954:	ee12 2a90 	vmov	r2, s5
 8020958:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802095c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020960:	ee13 2a10 	vmov	r2, s6
 8020964:	931f      	str	r3, [sp, #124]	; 0x7c
 8020966:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020968:	fb92 f3f3 	sdiv	r3, r2, r3
 802096c:	9320      	str	r3, [sp, #128]	; 0x80
 802096e:	9b08      	ldr	r3, [sp, #32]
 8020970:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020972:	3b01      	subs	r3, #1
 8020974:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020978:	9308      	str	r3, [sp, #32]
 802097a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802097c:	bf08      	it	eq
 802097e:	4613      	moveq	r3, r2
 8020980:	ee16 6a10 	vmov	r6, s12
 8020984:	9306      	str	r3, [sp, #24]
 8020986:	eeb0 3a67 	vmov.f32	s6, s15
 802098a:	eef0 2a47 	vmov.f32	s5, s14
 802098e:	e6e4      	b.n	802075a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8020990:	2900      	cmp	r1, #0
 8020992:	f43f af4e 	beq.w	8020832 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8020996:	f81a 3003 	ldrb.w	r3, [sl, r3]
 802099a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802099e:	9309      	str	r3, [sp, #36]	; 0x24
 80209a0:	e747      	b.n	8020832 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80209a2:	f112 0a01 	adds.w	sl, r2, #1
 80209a6:	d481      	bmi.n	80208ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80209a8:	4553      	cmp	r3, sl
 80209aa:	f6ff af7f 	blt.w	80208ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80209ae:	f11c 0a01 	adds.w	sl, ip, #1
 80209b2:	f53f af7b 	bmi.w	80208ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80209b6:	45d6      	cmp	lr, sl
 80209b8:	f6ff af78 	blt.w	80208ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80209bc:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 80209c0:	b21b      	sxth	r3, r3
 80209c2:	fa0f f28e 	sxth.w	r2, lr
 80209c6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80209ca:	9201      	str	r2, [sp, #4]
 80209cc:	9300      	str	r3, [sp, #0]
 80209ce:	9a07      	ldr	r2, [sp, #28]
 80209d0:	9810      	ldr	r0, [sp, #64]	; 0x40
 80209d2:	463b      	mov	r3, r7
 80209d4:	4641      	mov	r1, r8
 80209d6:	f7ff fe21 	bl	802061c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80209da:	e767      	b.n	80208ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80209dc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80209de:	9d07      	ldr	r5, [sp, #28]
 80209e0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80209e4:	1422      	asrs	r2, r4, #16
 80209e6:	1431      	asrs	r1, r6, #16
 80209e8:	fb03 2101 	mla	r1, r3, r1, r2
 80209ec:	9a07      	ldr	r2, [sp, #28]
 80209ee:	440a      	add	r2, r1
 80209f0:	5c69      	ldrb	r1, [r5, r1]
 80209f2:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 80209f6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80209fa:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 80209fe:	f1be 0f00 	cmp.w	lr, #0
 8020a02:	d05c      	beq.n	8020abe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8020a04:	f892 c001 	ldrb.w	ip, [r2, #1]
 8020a08:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8020a0c:	950d      	str	r5, [sp, #52]	; 0x34
 8020a0e:	b150      	cbz	r0, 8020a26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020a10:	eb02 0c03 	add.w	ip, r2, r3
 8020a14:	5cd3      	ldrb	r3, [r2, r3]
 8020a16:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020a1a:	930a      	str	r3, [sp, #40]	; 0x28
 8020a1c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8020a20:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020a24:	930e      	str	r3, [sp, #56]	; 0x38
 8020a26:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020a28:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8020a2a:	fb1e f200 	smulbb	r2, lr, r0
 8020a2e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020a32:	10d2      	asrs	r2, r2, #3
 8020a34:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020a38:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020a3c:	ea4c 0c03 	orr.w	ip, ip, r3
 8020a40:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8020a44:	9311      	str	r3, [sp, #68]	; 0x44
 8020a46:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020a48:	041b      	lsls	r3, r3, #16
 8020a4a:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8020a4e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020a52:	ea43 030b 	orr.w	r3, r3, fp
 8020a56:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020a58:	4353      	muls	r3, r2
 8020a5a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020a5e:	fb05 3c0c 	mla	ip, r5, ip, r3
 8020a62:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8020a66:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8020a6a:	ea43 0b01 	orr.w	fp, r3, r1
 8020a6e:	f1c0 0110 	rsb	r1, r0, #16
 8020a72:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020a74:	eba1 0e0e 	sub.w	lr, r1, lr
 8020a78:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8020a7c:	fb0e cc0b 	mla	ip, lr, fp, ip
 8020a80:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8020a84:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8020a88:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020a8c:	ea4b 0e0e 	orr.w	lr, fp, lr
 8020a90:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8020a94:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020a98:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8020a9c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020aa0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020aa4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020aa8:	ea43 0c0c 	orr.w	ip, r3, ip
 8020aac:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020aae:	f82a cb02 	strh.w	ip, [sl], #2
 8020ab2:	441c      	add	r4, r3
 8020ab4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020ab6:	f108 38ff 	add.w	r8, r8, #4294967295
 8020aba:	441e      	add	r6, r3
 8020abc:	e723      	b.n	8020906 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8020abe:	2800      	cmp	r0, #0
 8020ac0:	d0b1      	beq.n	8020a26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020ac2:	5cd3      	ldrb	r3, [r2, r3]
 8020ac4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020ac8:	930a      	str	r3, [sp, #40]	; 0x28
 8020aca:	e7ac      	b.n	8020a26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020acc:	b013      	add	sp, #76	; 0x4c
 8020ace:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020ad2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8020ad2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020ad6:	880d      	ldrh	r5, [r1, #0]
 8020ad8:	b087      	sub	sp, #28
 8020ada:	10ef      	asrs	r7, r5, #3
 8020adc:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8020ae0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020ae4:	00ed      	lsls	r5, r5, #3
 8020ae6:	9701      	str	r7, [sp, #4]
 8020ae8:	b2ed      	uxtb	r5, r5
 8020aea:	9502      	str	r5, [sp, #8]
 8020aec:	9d01      	ldr	r5, [sp, #4]
 8020aee:	9103      	str	r1, [sp, #12]
 8020af0:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8020af4:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8020af8:	9902      	ldr	r1, [sp, #8]
 8020afa:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8020afe:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8020b02:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8020b06:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8020b0a:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8020b0e:	022d      	lsls	r5, r5, #8
 8020b10:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8020b14:	fb06 0709 	mla	r7, r6, r9, r0
 8020b18:	430d      	orrs	r5, r1
 8020b1a:	2e00      	cmp	r6, #0
 8020b1c:	eb02 0c07 	add.w	ip, r2, r7
 8020b20:	9505      	str	r5, [sp, #20]
 8020b22:	f2c0 80b6 	blt.w	8020c92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8020b26:	45b3      	cmp	fp, r6
 8020b28:	f340 80b3 	ble.w	8020c92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8020b2c:	2800      	cmp	r0, #0
 8020b2e:	f2c0 80ae 	blt.w	8020c8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8020b32:	4581      	cmp	r9, r0
 8020b34:	f340 80ab 	ble.w	8020c8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8020b38:	5dd7      	ldrb	r7, [r2, r7]
 8020b3a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020b3e:	441f      	add	r7, r3
 8020b40:	1c42      	adds	r2, r0, #1
 8020b42:	f100 80a9 	bmi.w	8020c98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020b46:	4591      	cmp	r9, r2
 8020b48:	f340 80a6 	ble.w	8020c98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020b4c:	2c00      	cmp	r4, #0
 8020b4e:	f000 80a3 	beq.w	8020c98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020b52:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8020b56:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020b5a:	441d      	add	r5, r3
 8020b5c:	3601      	adds	r6, #1
 8020b5e:	f100 809f 	bmi.w	8020ca0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020b62:	45b3      	cmp	fp, r6
 8020b64:	f340 809c 	ble.w	8020ca0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020b68:	f1be 0f00 	cmp.w	lr, #0
 8020b6c:	f000 8098 	beq.w	8020ca0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020b70:	2800      	cmp	r0, #0
 8020b72:	f2c0 8093 	blt.w	8020c9c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8020b76:	4581      	cmp	r9, r0
 8020b78:	f340 8090 	ble.w	8020c9c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8020b7c:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8020b80:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020b84:	441e      	add	r6, r3
 8020b86:	3001      	adds	r0, #1
 8020b88:	f100 808d 	bmi.w	8020ca6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020b8c:	4581      	cmp	r9, r0
 8020b8e:	f340 808a 	ble.w	8020ca6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020b92:	2c00      	cmp	r4, #0
 8020b94:	f000 8087 	beq.w	8020ca6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020b98:	44e1      	add	r9, ip
 8020b9a:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020b9e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020ba2:	4413      	add	r3, r2
 8020ba4:	b2a4      	uxth	r4, r4
 8020ba6:	fa1f fe8e 	uxth.w	lr, lr
 8020baa:	fb04 fb0e 	mul.w	fp, r4, lr
 8020bae:	0124      	lsls	r4, r4, #4
 8020bb0:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8020bb4:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8020bb8:	eba4 040b 	sub.w	r4, r4, fp
 8020bbc:	fa1f f08e 	uxth.w	r0, lr
 8020bc0:	b2a2      	uxth	r2, r4
 8020bc2:	78ac      	ldrb	r4, [r5, #2]
 8020bc4:	f897 c002 	ldrb.w	ip, [r7, #2]
 8020bc8:	9901      	ldr	r1, [sp, #4]
 8020bca:	eba9 0900 	sub.w	r9, r9, r0
 8020bce:	fa1f f989 	uxth.w	r9, r9
 8020bd2:	4354      	muls	r4, r2
 8020bd4:	fb09 440c 	mla	r4, r9, ip, r4
 8020bd8:	f896 c002 	ldrb.w	ip, [r6, #2]
 8020bdc:	fb00 440c 	mla	r4, r0, ip, r4
 8020be0:	f893 c002 	ldrb.w	ip, [r3, #2]
 8020be4:	fa1f fe88 	uxth.w	lr, r8
 8020be8:	ea6f 0808 	mvn.w	r8, r8
 8020bec:	fa5f f888 	uxtb.w	r8, r8
 8020bf0:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8020bf4:	fb1a fa08 	smulbb	sl, sl, r8
 8020bf8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8020bfc:	fb0c ac0e 	mla	ip, ip, lr, sl
 8020c00:	f895 a001 	ldrb.w	sl, [r5, #1]
 8020c04:	787c      	ldrb	r4, [r7, #1]
 8020c06:	782d      	ldrb	r5, [r5, #0]
 8020c08:	783f      	ldrb	r7, [r7, #0]
 8020c0a:	fb02 fa0a 	mul.w	sl, r2, sl
 8020c0e:	fb09 aa04 	mla	sl, r9, r4, sl
 8020c12:	7874      	ldrb	r4, [r6, #1]
 8020c14:	436a      	muls	r2, r5
 8020c16:	7835      	ldrb	r5, [r6, #0]
 8020c18:	fb00 aa04 	mla	sl, r0, r4, sl
 8020c1c:	fb09 2207 	mla	r2, r9, r7, r2
 8020c20:	785c      	ldrb	r4, [r3, #1]
 8020c22:	781b      	ldrb	r3, [r3, #0]
 8020c24:	fb00 2005 	mla	r0, r0, r5, r2
 8020c28:	fb0b a404 	mla	r4, fp, r4, sl
 8020c2c:	fb0b 0b03 	mla	fp, fp, r3, r0
 8020c30:	9b02      	ldr	r3, [sp, #8]
 8020c32:	fb11 fa08 	smulbb	sl, r1, r8
 8020c36:	fa1f fc8c 	uxth.w	ip, ip
 8020c3a:	fb13 f808 	smulbb	r8, r3, r8
 8020c3e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8020c42:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8020c46:	fb04 a40e 	mla	r4, r4, lr, sl
 8020c4a:	f10c 0301 	add.w	r3, ip, #1
 8020c4e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8020c52:	fa1f fe8e 	uxth.w	lr, lr
 8020c56:	b2a4      	uxth	r4, r4
 8020c58:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020c5c:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8020c60:	f104 0a01 	add.w	sl, r4, #1
 8020c64:	f10e 0c01 	add.w	ip, lr, #1
 8020c68:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020c6c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8020c70:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020c74:	0964      	lsrs	r4, r4, #5
 8020c76:	ea4c 0c03 	orr.w	ip, ip, r3
 8020c7a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020c7e:	9b03      	ldr	r3, [sp, #12]
 8020c80:	ea4c 0c04 	orr.w	ip, ip, r4
 8020c84:	f8a3 c000 	strh.w	ip, [r3]
 8020c88:	b007      	add	sp, #28
 8020c8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020c8e:	af05      	add	r7, sp, #20
 8020c90:	e756      	b.n	8020b40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8020c92:	ad05      	add	r5, sp, #20
 8020c94:	462f      	mov	r7, r5
 8020c96:	e761      	b.n	8020b5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8020c98:	ad05      	add	r5, sp, #20
 8020c9a:	e75f      	b.n	8020b5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8020c9c:	ae05      	add	r6, sp, #20
 8020c9e:	e772      	b.n	8020b86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8020ca0:	ab05      	add	r3, sp, #20
 8020ca2:	461e      	mov	r6, r3
 8020ca4:	e77e      	b.n	8020ba4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8020ca6:	ab05      	add	r3, sp, #20
 8020ca8:	e77c      	b.n	8020ba4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08020caa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020caa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020cae:	b095      	sub	sp, #84	; 0x54
 8020cb0:	9212      	str	r2, [sp, #72]	; 0x48
 8020cb2:	9309      	str	r3, [sp, #36]	; 0x24
 8020cb4:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8020cb6:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8020cba:	930f      	str	r3, [sp, #60]	; 0x3c
 8020cbc:	910e      	str	r1, [sp, #56]	; 0x38
 8020cbe:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8020cc2:	9013      	str	r0, [sp, #76]	; 0x4c
 8020cc4:	6850      	ldr	r0, [r2, #4]
 8020cc6:	6812      	ldr	r2, [r2, #0]
 8020cc8:	fb00 1303 	mla	r3, r0, r3, r1
 8020ccc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020cd0:	930a      	str	r3, [sp, #40]	; 0x28
 8020cd2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020cd4:	681b      	ldr	r3, [r3, #0]
 8020cd6:	930d      	str	r3, [sp, #52]	; 0x34
 8020cd8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020cda:	685c      	ldr	r4, [r3, #4]
 8020cdc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020cde:	43db      	mvns	r3, r3
 8020ce0:	b2db      	uxtb	r3, r3
 8020ce2:	3404      	adds	r4, #4
 8020ce4:	930b      	str	r3, [sp, #44]	; 0x2c
 8020ce6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020ce8:	2b00      	cmp	r3, #0
 8020cea:	dc03      	bgt.n	8020cf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020cec:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8020cee:	2b00      	cmp	r3, #0
 8020cf0:	f340 8255 	ble.w	802119e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8020cf4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020cf6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020cfa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020cfe:	1e48      	subs	r0, r1, #1
 8020d00:	1e55      	subs	r5, r2, #1
 8020d02:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020d04:	2b00      	cmp	r3, #0
 8020d06:	f340 80f9 	ble.w	8020efc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8020d0a:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8020d0c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020d0e:	1436      	asrs	r6, r6, #16
 8020d10:	ea4f 4323 	mov.w	r3, r3, asr #16
 8020d14:	d406      	bmi.n	8020d24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020d16:	4286      	cmp	r6, r0
 8020d18:	da04      	bge.n	8020d24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020d1a:	2b00      	cmp	r3, #0
 8020d1c:	db02      	blt.n	8020d24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020d1e:	42ab      	cmp	r3, r5
 8020d20:	f2c0 80ed 	blt.w	8020efe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8020d24:	3601      	adds	r6, #1
 8020d26:	f100 80da 	bmi.w	8020ede <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020d2a:	42b1      	cmp	r1, r6
 8020d2c:	f2c0 80d7 	blt.w	8020ede <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020d30:	3301      	adds	r3, #1
 8020d32:	f100 80d4 	bmi.w	8020ede <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020d36:	429a      	cmp	r2, r3
 8020d38:	f2c0 80d1 	blt.w	8020ede <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020d3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020d3e:	9311      	str	r3, [sp, #68]	; 0x44
 8020d40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020d42:	930c      	str	r3, [sp, #48]	; 0x30
 8020d44:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020d46:	2b00      	cmp	r3, #0
 8020d48:	f340 80fa 	ble.w	8020f40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8020d4c:	9826      	ldr	r0, [sp, #152]	; 0x98
 8020d4e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020d50:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020d52:	68c6      	ldr	r6, [r0, #12]
 8020d54:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8020d56:	141d      	asrs	r5, r3, #16
 8020d58:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8020d5c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020d5e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8020d60:	1400      	asrs	r0, r0, #16
 8020d62:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8020d66:	6892      	ldr	r2, [r2, #8]
 8020d68:	f100 813e 	bmi.w	8020fe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020d6c:	1e57      	subs	r7, r2, #1
 8020d6e:	42b8      	cmp	r0, r7
 8020d70:	f280 813a 	bge.w	8020fe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020d74:	2d00      	cmp	r5, #0
 8020d76:	f2c0 8137 	blt.w	8020fe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020d7a:	1e77      	subs	r7, r6, #1
 8020d7c:	42bd      	cmp	r5, r7
 8020d7e:	f280 8133 	bge.w	8020fe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020d82:	b212      	sxth	r2, r2
 8020d84:	fb05 0002 	mla	r0, r5, r2, r0
 8020d88:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020d8a:	f815 a000 	ldrb.w	sl, [r5, r0]
 8020d8e:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8020d92:	182e      	adds	r6, r5, r0
 8020d94:	eb04 050a 	add.w	r5, r4, sl
 8020d98:	2b00      	cmp	r3, #0
 8020d9a:	f000 8117 	beq.w	8020fcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8020d9e:	f896 c001 	ldrb.w	ip, [r6, #1]
 8020da2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8020da6:	44a4      	add	ip, r4
 8020da8:	2900      	cmp	r1, #0
 8020daa:	f000 8117 	beq.w	8020fdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8020dae:	18b0      	adds	r0, r6, r2
 8020db0:	5cb2      	ldrb	r2, [r6, r2]
 8020db2:	7840      	ldrb	r0, [r0, #1]
 8020db4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020db8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020dbc:	4422      	add	r2, r4
 8020dbe:	4420      	add	r0, r4
 8020dc0:	b29b      	uxth	r3, r3
 8020dc2:	b289      	uxth	r1, r1
 8020dc4:	fb03 f901 	mul.w	r9, r3, r1
 8020dc8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020dcc:	011b      	lsls	r3, r3, #4
 8020dce:	b289      	uxth	r1, r1
 8020dd0:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8020dd4:	f895 b002 	ldrb.w	fp, [r5, #2]
 8020dd8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8020dda:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8020dde:	f8b6 e000 	ldrh.w	lr, [r6]
 8020de2:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8020de6:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8020dea:	eba3 0309 	sub.w	r3, r3, r9
 8020dee:	b29b      	uxth	r3, r3
 8020df0:	eba8 0801 	sub.w	r8, r8, r1
 8020df4:	fa1f f888 	uxth.w	r8, r8
 8020df8:	435f      	muls	r7, r3
 8020dfa:	fb08 770b 	mla	r7, r8, fp, r7
 8020dfe:	f892 b002 	ldrb.w	fp, [r2, #2]
 8020e02:	9310      	str	r3, [sp, #64]	; 0x40
 8020e04:	fb01 770b 	mla	r7, r1, fp, r7
 8020e08:	f890 b002 	ldrb.w	fp, [r0, #2]
 8020e0c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020e0e:	fb09 770b 	mla	r7, r9, fp, r7
 8020e12:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8020e16:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8020e1a:	fb1b fb03 	smulbb	fp, fp, r3
 8020e1e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8020e22:	fb07 b706 	mla	r7, r7, r6, fp
 8020e26:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020e28:	f895 b001 	ldrb.w	fp, [r5, #1]
 8020e2c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8020e30:	f89c c000 	ldrb.w	ip, [ip]
 8020e34:	435d      	muls	r5, r3
 8020e36:	fb08 550b 	mla	r5, r8, fp, r5
 8020e3a:	f892 b001 	ldrb.w	fp, [r2, #1]
 8020e3e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020e40:	fb01 550b 	mla	r5, r1, fp, r5
 8020e44:	f890 b001 	ldrb.w	fp, [r0, #1]
 8020e48:	fb09 550b 	mla	r5, r9, fp, r5
 8020e4c:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8020e50:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8020e54:	fb1b fb03 	smulbb	fp, fp, r3
 8020e58:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020e5a:	fb03 f30c 	mul.w	r3, r3, ip
 8020e5e:	f892 c000 	ldrb.w	ip, [r2]
 8020e62:	fb08 330a 	mla	r3, r8, sl, r3
 8020e66:	fb01 330c 	mla	r3, r1, ip, r3
 8020e6a:	f890 c000 	ldrb.w	ip, [r0]
 8020e6e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020e72:	fb09 3c0c 	mla	ip, r9, ip, r3
 8020e76:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020e78:	fa5f fe8e 	uxtb.w	lr, lr
 8020e7c:	b2bf      	uxth	r7, r7
 8020e7e:	fb1e fe03 	smulbb	lr, lr, r3
 8020e82:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8020e86:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8020e8a:	fb05 b506 	mla	r5, r5, r6, fp
 8020e8e:	1c7b      	adds	r3, r7, #1
 8020e90:	fb0c e606 	mla	r6, ip, r6, lr
 8020e94:	b2ad      	uxth	r5, r5
 8020e96:	b2b6      	uxth	r6, r6
 8020e98:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8020e9c:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8020ea0:	f105 0b01 	add.w	fp, r5, #1
 8020ea4:	1c77      	adds	r7, r6, #1
 8020ea6:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8020eaa:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8020eae:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020eb2:	096d      	lsrs	r5, r5, #5
 8020eb4:	431f      	orrs	r7, r3
 8020eb6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020eba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020ebc:	433d      	orrs	r5, r7
 8020ebe:	801d      	strh	r5, [r3, #0]
 8020ec0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020ec2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020ec4:	3302      	adds	r3, #2
 8020ec6:	930c      	str	r3, [sp, #48]	; 0x30
 8020ec8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020eca:	4413      	add	r3, r2
 8020ecc:	931f      	str	r3, [sp, #124]	; 0x7c
 8020ece:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8020ed0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020ed2:	4413      	add	r3, r2
 8020ed4:	9320      	str	r3, [sp, #128]	; 0x80
 8020ed6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020ed8:	3b01      	subs	r3, #1
 8020eda:	9311      	str	r3, [sp, #68]	; 0x44
 8020edc:	e732      	b.n	8020d44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020ede:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020ee0:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8020ee2:	4433      	add	r3, r6
 8020ee4:	931f      	str	r3, [sp, #124]	; 0x7c
 8020ee6:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8020ee8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020eea:	4433      	add	r3, r6
 8020eec:	9320      	str	r3, [sp, #128]	; 0x80
 8020eee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020ef0:	3b01      	subs	r3, #1
 8020ef2:	9309      	str	r3, [sp, #36]	; 0x24
 8020ef4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020ef6:	3302      	adds	r3, #2
 8020ef8:	930a      	str	r3, [sp, #40]	; 0x28
 8020efa:	e702      	b.n	8020d02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020efc:	d027      	beq.n	8020f4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8020efe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020f00:	9821      	ldr	r0, [sp, #132]	; 0x84
 8020f02:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8020f04:	3b01      	subs	r3, #1
 8020f06:	fb00 5003 	mla	r0, r0, r3, r5
 8020f0a:	1400      	asrs	r0, r0, #16
 8020f0c:	f53f af16 	bmi.w	8020d3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020f10:	3901      	subs	r1, #1
 8020f12:	4288      	cmp	r0, r1
 8020f14:	f6bf af12 	bge.w	8020d3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020f18:	9922      	ldr	r1, [sp, #136]	; 0x88
 8020f1a:	9820      	ldr	r0, [sp, #128]	; 0x80
 8020f1c:	fb01 0303 	mla	r3, r1, r3, r0
 8020f20:	141b      	asrs	r3, r3, #16
 8020f22:	f53f af0b 	bmi.w	8020d3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020f26:	3a01      	subs	r2, #1
 8020f28:	4293      	cmp	r3, r2
 8020f2a:	f6bf af07 	bge.w	8020d3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020f2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020f30:	9311      	str	r3, [sp, #68]	; 0x44
 8020f32:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8020f36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020f38:	930c      	str	r3, [sp, #48]	; 0x30
 8020f3a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020f3c:	2b00      	cmp	r3, #0
 8020f3e:	dc70      	bgt.n	8021022 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8020f40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020f42:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020f44:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020f48:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020f4c:	930a      	str	r3, [sp, #40]	; 0x28
 8020f4e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020f50:	2b00      	cmp	r3, #0
 8020f52:	f340 8124 	ble.w	802119e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8020f56:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020f5a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020f5e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020f62:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020f64:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020f68:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020f6c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020f70:	eef0 6a62 	vmov.f32	s13, s5
 8020f74:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020f78:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020f7c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020f80:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8020f84:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020f88:	eef0 6a43 	vmov.f32	s13, s6
 8020f8c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020f90:	ee12 2a90 	vmov	r2, s5
 8020f94:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020f98:	fb92 f3f3 	sdiv	r3, r2, r3
 8020f9c:	ee13 2a10 	vmov	r2, s6
 8020fa0:	9321      	str	r3, [sp, #132]	; 0x84
 8020fa2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020fa4:	fb92 f3f3 	sdiv	r3, r2, r3
 8020fa8:	9322      	str	r3, [sp, #136]	; 0x88
 8020faa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020fac:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8020fae:	3b01      	subs	r3, #1
 8020fb0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020fb4:	930e      	str	r3, [sp, #56]	; 0x38
 8020fb6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020fb8:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 8020fbc:	bf08      	it	eq
 8020fbe:	4613      	moveq	r3, r2
 8020fc0:	9309      	str	r3, [sp, #36]	; 0x24
 8020fc2:	eeb0 3a67 	vmov.f32	s6, s15
 8020fc6:	eef0 2a47 	vmov.f32	s5, s14
 8020fca:	e68c      	b.n	8020ce6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020fcc:	b149      	cbz	r1, 8020fe2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8020fce:	5cb2      	ldrb	r2, [r6, r2]
 8020fd0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020fd4:	4422      	add	r2, r4
 8020fd6:	4628      	mov	r0, r5
 8020fd8:	46ac      	mov	ip, r5
 8020fda:	e6f1      	b.n	8020dc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020fdc:	4628      	mov	r0, r5
 8020fde:	462a      	mov	r2, r5
 8020fe0:	e6ee      	b.n	8020dc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020fe2:	4628      	mov	r0, r5
 8020fe4:	462a      	mov	r2, r5
 8020fe6:	e7f7      	b.n	8020fd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8020fe8:	1c47      	adds	r7, r0, #1
 8020fea:	f53f af69 	bmi.w	8020ec0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020fee:	42ba      	cmp	r2, r7
 8020ff0:	f6ff af66 	blt.w	8020ec0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020ff4:	1c6f      	adds	r7, r5, #1
 8020ff6:	f53f af63 	bmi.w	8020ec0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020ffa:	42be      	cmp	r6, r7
 8020ffc:	f6ff af60 	blt.w	8020ec0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021000:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8021002:	9002      	str	r0, [sp, #8]
 8021004:	b236      	sxth	r6, r6
 8021006:	b212      	sxth	r2, r2
 8021008:	e9cd 1705 	strd	r1, r7, [sp, #20]
 802100c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8021010:	9200      	str	r2, [sp, #0]
 8021012:	9601      	str	r6, [sp, #4]
 8021014:	4623      	mov	r3, r4
 8021016:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 802101a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802101c:	f7ff fd59 	bl	8020ad2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8021020:	e74e      	b.n	8020ec0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021022:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8021024:	9820      	ldr	r0, [sp, #128]	; 0x80
 8021026:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8021028:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802102a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802102e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8021030:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8021034:	142d      	asrs	r5, r5, #16
 8021036:	1400      	asrs	r0, r0, #16
 8021038:	fb02 5000 	mla	r0, r2, r0, r5
 802103c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802103e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8021042:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8021046:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802104a:	182e      	adds	r6, r5, r0
 802104c:	eb04 0509 	add.w	r5, r4, r9
 8021050:	2b00      	cmp	r3, #0
 8021052:	f000 8096 	beq.w	8021182 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8021056:	7877      	ldrb	r7, [r6, #1]
 8021058:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802105c:	4427      	add	r7, r4
 802105e:	2900      	cmp	r1, #0
 8021060:	f000 8097 	beq.w	8021192 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8021064:	18b0      	adds	r0, r6, r2
 8021066:	5cb2      	ldrb	r2, [r6, r2]
 8021068:	7840      	ldrb	r0, [r0, #1]
 802106a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802106e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021072:	4422      	add	r2, r4
 8021074:	4420      	add	r0, r4
 8021076:	b29b      	uxth	r3, r3
 8021078:	b289      	uxth	r1, r1
 802107a:	fb03 f801 	mul.w	r8, r3, r1
 802107e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8021080:	f895 b002 	ldrb.w	fp, [r5, #2]
 8021084:	f8b6 c000 	ldrh.w	ip, [r6]
 8021088:	78be      	ldrb	r6, [r7, #2]
 802108a:	f814 9009 	ldrb.w	r9, [r4, r9]
 802108e:	011b      	lsls	r3, r3, #4
 8021090:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8021094:	b289      	uxth	r1, r1
 8021096:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 802109a:	eba3 0308 	sub.w	r3, r3, r8
 802109e:	b29b      	uxth	r3, r3
 80210a0:	ebae 0e01 	sub.w	lr, lr, r1
 80210a4:	fa1f fe8e 	uxth.w	lr, lr
 80210a8:	435e      	muls	r6, r3
 80210aa:	fb0e 660b 	mla	r6, lr, fp, r6
 80210ae:	f892 b002 	ldrb.w	fp, [r2, #2]
 80210b2:	9310      	str	r3, [sp, #64]	; 0x40
 80210b4:	fb01 660b 	mla	r6, r1, fp, r6
 80210b8:	f890 b002 	ldrb.w	fp, [r0, #2]
 80210bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80210be:	fb08 660b 	mla	r6, r8, fp, r6
 80210c2:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 80210c6:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80210ca:	fb1b fb03 	smulbb	fp, fp, r3
 80210ce:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80210d2:	fb06 b60a 	mla	r6, r6, sl, fp
 80210d6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80210d8:	f895 b001 	ldrb.w	fp, [r5, #1]
 80210dc:	787d      	ldrb	r5, [r7, #1]
 80210de:	783f      	ldrb	r7, [r7, #0]
 80210e0:	435d      	muls	r5, r3
 80210e2:	fb0e 550b 	mla	r5, lr, fp, r5
 80210e6:	f892 b001 	ldrb.w	fp, [r2, #1]
 80210ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80210ec:	fb01 550b 	mla	r5, r1, fp, r5
 80210f0:	f890 b001 	ldrb.w	fp, [r0, #1]
 80210f4:	fb08 550b 	mla	r5, r8, fp, r5
 80210f8:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80210fc:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8021100:	fb1b fb03 	smulbb	fp, fp, r3
 8021104:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021106:	437b      	muls	r3, r7
 8021108:	7817      	ldrb	r7, [r2, #0]
 802110a:	fb0e 3309 	mla	r3, lr, r9, r3
 802110e:	fb01 3307 	mla	r3, r1, r7, r3
 8021112:	7807      	ldrb	r7, [r0, #0]
 8021114:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8021118:	fb08 3707 	mla	r7, r8, r7, r3
 802111c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802111e:	fa5f fc8c 	uxtb.w	ip, ip
 8021122:	fb1c fc03 	smulbb	ip, ip, r3
 8021126:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802112a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802112e:	fb05 b50a 	mla	r5, r5, sl, fp
 8021132:	fb07 c70a 	mla	r7, r7, sl, ip
 8021136:	b2b6      	uxth	r6, r6
 8021138:	b2ad      	uxth	r5, r5
 802113a:	b2bf      	uxth	r7, r7
 802113c:	1c73      	adds	r3, r6, #1
 802113e:	1c7a      	adds	r2, r7, #1
 8021140:	f105 0b01 	add.w	fp, r5, #1
 8021144:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8021148:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 802114c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8021150:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021154:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8021158:	096d      	lsrs	r5, r5, #5
 802115a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802115c:	4316      	orrs	r6, r2
 802115e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021162:	432e      	orrs	r6, r5
 8021164:	f823 6b02 	strh.w	r6, [r3], #2
 8021168:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802116a:	930c      	str	r3, [sp, #48]	; 0x30
 802116c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802116e:	4413      	add	r3, r2
 8021170:	931f      	str	r3, [sp, #124]	; 0x7c
 8021172:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021174:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021176:	4413      	add	r3, r2
 8021178:	9320      	str	r3, [sp, #128]	; 0x80
 802117a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802117c:	3b01      	subs	r3, #1
 802117e:	9311      	str	r3, [sp, #68]	; 0x44
 8021180:	e6db      	b.n	8020f3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8021182:	b149      	cbz	r1, 8021198 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8021184:	5cb2      	ldrb	r2, [r6, r2]
 8021186:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802118a:	4422      	add	r2, r4
 802118c:	4628      	mov	r0, r5
 802118e:	462f      	mov	r7, r5
 8021190:	e771      	b.n	8021076 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8021192:	4628      	mov	r0, r5
 8021194:	462a      	mov	r2, r5
 8021196:	e76e      	b.n	8021076 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8021198:	4628      	mov	r0, r5
 802119a:	462a      	mov	r2, r5
 802119c:	e7f7      	b.n	802118e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802119e:	b015      	add	sp, #84	; 0x54
 80211a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080211a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80211a4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80211a8:	880f      	ldrh	r7, [r1, #0]
 80211aa:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 80211ae:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80211b2:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 80211b6:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80211ba:	023c      	lsls	r4, r7, #8
 80211bc:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 80211c0:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 80211c4:	017c      	lsls	r4, r7, #5
 80211c6:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 80211ca:	00ff      	lsls	r7, r7, #3
 80211cc:	ea4b 0404 	orr.w	r4, fp, r4
 80211d0:	b2ff      	uxtb	r7, r7
 80211d2:	fb05 ca0e 	mla	sl, r5, lr, ip
 80211d6:	4327      	orrs	r7, r4
 80211d8:	2d00      	cmp	r5, #0
 80211da:	eb02 080a 	add.w	r8, r2, sl
 80211de:	9701      	str	r7, [sp, #4]
 80211e0:	db7e      	blt.n	80212e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80211e2:	45a9      	cmp	r9, r5
 80211e4:	dd7c      	ble.n	80212e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80211e6:	f1bc 0f00 	cmp.w	ip, #0
 80211ea:	db77      	blt.n	80212dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 80211ec:	45e6      	cmp	lr, ip
 80211ee:	dd75      	ble.n	80212dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 80211f0:	f812 700a 	ldrb.w	r7, [r2, sl]
 80211f4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80211f8:	441f      	add	r7, r3
 80211fa:	f11c 0201 	adds.w	r2, ip, #1
 80211fe:	d472      	bmi.n	80212e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021200:	4596      	cmp	lr, r2
 8021202:	dd70      	ble.n	80212e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021204:	2800      	cmp	r0, #0
 8021206:	d06e      	beq.n	80212e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021208:	f898 4001 	ldrb.w	r4, [r8, #1]
 802120c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8021210:	441c      	add	r4, r3
 8021212:	3501      	adds	r5, #1
 8021214:	d46b      	bmi.n	80212ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8021216:	45a9      	cmp	r9, r5
 8021218:	dd69      	ble.n	80212ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802121a:	2e00      	cmp	r6, #0
 802121c:	d067      	beq.n	80212ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802121e:	f1bc 0f00 	cmp.w	ip, #0
 8021222:	db62      	blt.n	80212ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8021224:	45e6      	cmp	lr, ip
 8021226:	dd60      	ble.n	80212ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8021228:	f818 500e 	ldrb.w	r5, [r8, lr]
 802122c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8021230:	441d      	add	r5, r3
 8021232:	f11c 0201 	adds.w	r2, ip, #1
 8021236:	d45d      	bmi.n	80212f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8021238:	4596      	cmp	lr, r2
 802123a:	dd5b      	ble.n	80212f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 802123c:	2800      	cmp	r0, #0
 802123e:	d059      	beq.n	80212f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8021240:	44c6      	add	lr, r8
 8021242:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021246:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802124a:	4413      	add	r3, r2
 802124c:	b280      	uxth	r0, r0
 802124e:	b2b2      	uxth	r2, r6
 8021250:	fb00 f602 	mul.w	r6, r0, r2
 8021254:	0100      	lsls	r0, r0, #4
 8021256:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802125a:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 802125e:	1b80      	subs	r0, r0, r6
 8021260:	fa1f fc82 	uxth.w	ip, r2
 8021264:	b282      	uxth	r2, r0
 8021266:	78a0      	ldrb	r0, [r4, #2]
 8021268:	f897 e002 	ldrb.w	lr, [r7, #2]
 802126c:	f897 9000 	ldrb.w	r9, [r7]
 8021270:	787f      	ldrb	r7, [r7, #1]
 8021272:	eba8 080c 	sub.w	r8, r8, ip
 8021276:	fa1f f888 	uxth.w	r8, r8
 802127a:	4350      	muls	r0, r2
 802127c:	fb08 0e0e 	mla	lr, r8, lr, r0
 8021280:	78a8      	ldrb	r0, [r5, #2]
 8021282:	fb0c e000 	mla	r0, ip, r0, lr
 8021286:	f893 e002 	ldrb.w	lr, [r3, #2]
 802128a:	fb06 0e0e 	mla	lr, r6, lr, r0
 802128e:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8021292:	f894 e000 	ldrb.w	lr, [r4]
 8021296:	fb02 fe0e 	mul.w	lr, r2, lr
 802129a:	fb08 e909 	mla	r9, r8, r9, lr
 802129e:	f895 e000 	ldrb.w	lr, [r5]
 80212a2:	fb0c 990e 	mla	r9, ip, lr, r9
 80212a6:	f893 e000 	ldrb.w	lr, [r3]
 80212aa:	785b      	ldrb	r3, [r3, #1]
 80212ac:	fb06 9e0e 	mla	lr, r6, lr, r9
 80212b0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80212b4:	ea4e 0e00 	orr.w	lr, lr, r0
 80212b8:	7860      	ldrb	r0, [r4, #1]
 80212ba:	4350      	muls	r0, r2
 80212bc:	786a      	ldrb	r2, [r5, #1]
 80212be:	fb08 0007 	mla	r0, r8, r7, r0
 80212c2:	fb0c 0202 	mla	r2, ip, r2, r0
 80212c6:	fb06 2303 	mla	r3, r6, r3, r2
 80212ca:	095b      	lsrs	r3, r3, #5
 80212cc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80212d0:	ea4e 0303 	orr.w	r3, lr, r3
 80212d4:	800b      	strh	r3, [r1, #0]
 80212d6:	b003      	add	sp, #12
 80212d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80212dc:	af01      	add	r7, sp, #4
 80212de:	e78c      	b.n	80211fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 80212e0:	ac01      	add	r4, sp, #4
 80212e2:	4627      	mov	r7, r4
 80212e4:	e795      	b.n	8021212 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80212e6:	ac01      	add	r4, sp, #4
 80212e8:	e793      	b.n	8021212 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80212ea:	ad01      	add	r5, sp, #4
 80212ec:	e7a1      	b.n	8021232 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 80212ee:	ab01      	add	r3, sp, #4
 80212f0:	461d      	mov	r5, r3
 80212f2:	e7ab      	b.n	802124c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 80212f4:	ab01      	add	r3, sp, #4
 80212f6:	e7a9      	b.n	802124c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

080212f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80212f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80212fc:	b08f      	sub	sp, #60	; 0x3c
 80212fe:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8021302:	920c      	str	r2, [sp, #48]	; 0x30
 8021304:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8021306:	910a      	str	r1, [sp, #40]	; 0x28
 8021308:	9306      	str	r3, [sp, #24]
 802130a:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 802130e:	900d      	str	r0, [sp, #52]	; 0x34
 8021310:	6850      	ldr	r0, [r2, #4]
 8021312:	6812      	ldr	r2, [r2, #0]
 8021314:	fb00 1303 	mla	r3, r0, r3, r1
 8021318:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802131c:	9307      	str	r3, [sp, #28]
 802131e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021320:	681b      	ldr	r3, [r3, #0]
 8021322:	9308      	str	r3, [sp, #32]
 8021324:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021326:	685c      	ldr	r4, [r3, #4]
 8021328:	3404      	adds	r4, #4
 802132a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802132c:	2b00      	cmp	r3, #0
 802132e:	dc03      	bgt.n	8021338 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8021330:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021332:	2b00      	cmp	r3, #0
 8021334:	f340 81d6 	ble.w	80216e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8021338:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802133a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802133e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021342:	1e48      	subs	r0, r1, #1
 8021344:	1e56      	subs	r6, r2, #1
 8021346:	9b06      	ldr	r3, [sp, #24]
 8021348:	2b00      	cmp	r3, #0
 802134a:	f340 80b7 	ble.w	80214bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 802134e:	ea5f 472b 	movs.w	r7, fp, asr #16
 8021352:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021356:	d406      	bmi.n	8021366 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021358:	4287      	cmp	r7, r0
 802135a:	da04      	bge.n	8021366 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802135c:	2b00      	cmp	r3, #0
 802135e:	db02      	blt.n	8021366 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021360:	42b3      	cmp	r3, r6
 8021362:	f2c0 80ac 	blt.w	80214be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8021366:	3701      	adds	r7, #1
 8021368:	f100 809d 	bmi.w	80214a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 802136c:	42b9      	cmp	r1, r7
 802136e:	f2c0 809a 	blt.w	80214a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021372:	3301      	adds	r3, #1
 8021374:	f100 8097 	bmi.w	80214a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021378:	429a      	cmp	r2, r3
 802137a:	f2c0 8094 	blt.w	80214a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 802137e:	9b06      	ldr	r3, [sp, #24]
 8021380:	930b      	str	r3, [sp, #44]	; 0x2c
 8021382:	9b07      	ldr	r3, [sp, #28]
 8021384:	9309      	str	r3, [sp, #36]	; 0x24
 8021386:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021388:	2b00      	cmp	r3, #0
 802138a:	f340 80b5 	ble.w	80214f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802138e:	9820      	ldr	r0, [sp, #128]	; 0x80
 8021390:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8021392:	68c7      	ldr	r7, [r0, #12]
 8021394:	6892      	ldr	r2, [r2, #8]
 8021396:	ea5f 402b 	movs.w	r0, fp, asr #16
 802139a:	ea4f 4625 	mov.w	r6, r5, asr #16
 802139e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80213a2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80213a6:	f100 80fb 	bmi.w	80215a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80213aa:	f102 3cff 	add.w	ip, r2, #4294967295
 80213ae:	4560      	cmp	r0, ip
 80213b0:	f280 80f6 	bge.w	80215a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80213b4:	2e00      	cmp	r6, #0
 80213b6:	f2c0 80f3 	blt.w	80215a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80213ba:	f107 3cff 	add.w	ip, r7, #4294967295
 80213be:	4566      	cmp	r6, ip
 80213c0:	f280 80ee 	bge.w	80215a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80213c4:	b212      	sxth	r2, r2
 80213c6:	fb06 0002 	mla	r0, r6, r2, r0
 80213ca:	9e08      	ldr	r6, [sp, #32]
 80213cc:	1837      	adds	r7, r6, r0
 80213ce:	5c30      	ldrb	r0, [r6, r0]
 80213d0:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 80213d4:	eb04 0c08 	add.w	ip, r4, r8
 80213d8:	2b00      	cmp	r3, #0
 80213da:	f000 80d3 	beq.w	8021584 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80213de:	787e      	ldrb	r6, [r7, #1]
 80213e0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80213e4:	4426      	add	r6, r4
 80213e6:	2900      	cmp	r1, #0
 80213e8:	f000 80d4 	beq.w	8021594 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 80213ec:	18b8      	adds	r0, r7, r2
 80213ee:	5cba      	ldrb	r2, [r7, r2]
 80213f0:	7840      	ldrb	r0, [r0, #1]
 80213f2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80213f6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80213fa:	4422      	add	r2, r4
 80213fc:	4420      	add	r0, r4
 80213fe:	b29b      	uxth	r3, r3
 8021400:	b289      	uxth	r1, r1
 8021402:	fb03 f901 	mul.w	r9, r3, r1
 8021406:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802140a:	011b      	lsls	r3, r3, #4
 802140c:	b289      	uxth	r1, r1
 802140e:	78b7      	ldrb	r7, [r6, #2]
 8021410:	f89c a002 	ldrb.w	sl, [ip, #2]
 8021414:	f89c c001 	ldrb.w	ip, [ip, #1]
 8021418:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 802141c:	eba3 0309 	sub.w	r3, r3, r9
 8021420:	b29b      	uxth	r3, r3
 8021422:	ebae 0e01 	sub.w	lr, lr, r1
 8021426:	fa1f fe8e 	uxth.w	lr, lr
 802142a:	435f      	muls	r7, r3
 802142c:	fb0e 770a 	mla	r7, lr, sl, r7
 8021430:	f892 a002 	ldrb.w	sl, [r2, #2]
 8021434:	fb01 770a 	mla	r7, r1, sl, r7
 8021438:	f890 a002 	ldrb.w	sl, [r0, #2]
 802143c:	fb09 7a0a 	mla	sl, r9, sl, r7
 8021440:	f814 7008 	ldrb.w	r7, [r4, r8]
 8021444:	f896 8000 	ldrb.w	r8, [r6]
 8021448:	7876      	ldrb	r6, [r6, #1]
 802144a:	fb03 f808 	mul.w	r8, r3, r8
 802144e:	fb0e 8807 	mla	r8, lr, r7, r8
 8021452:	7817      	ldrb	r7, [r2, #0]
 8021454:	fb01 8807 	mla	r8, r1, r7, r8
 8021458:	7807      	ldrb	r7, [r0, #0]
 802145a:	fb09 8707 	mla	r7, r9, r7, r8
 802145e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8021462:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021466:	ea47 070a 	orr.w	r7, r7, sl
 802146a:	4373      	muls	r3, r6
 802146c:	f892 a001 	ldrb.w	sl, [r2, #1]
 8021470:	fb0e 330c 	mla	r3, lr, ip, r3
 8021474:	fb01 310a 	mla	r1, r1, sl, r3
 8021478:	f890 a001 	ldrb.w	sl, [r0, #1]
 802147c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802147e:	fb09 1a0a 	mla	sl, r9, sl, r1
 8021482:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8021486:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 802148a:	ea47 070a 	orr.w	r7, r7, sl
 802148e:	801f      	strh	r7, [r3, #0]
 8021490:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021492:	3302      	adds	r3, #2
 8021494:	9309      	str	r3, [sp, #36]	; 0x24
 8021496:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021498:	449b      	add	fp, r3
 802149a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802149c:	441d      	add	r5, r3
 802149e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80214a0:	3b01      	subs	r3, #1
 80214a2:	930b      	str	r3, [sp, #44]	; 0x2c
 80214a4:	e76f      	b.n	8021386 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80214a6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80214a8:	449b      	add	fp, r3
 80214aa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80214ac:	441d      	add	r5, r3
 80214ae:	9b06      	ldr	r3, [sp, #24]
 80214b0:	3b01      	subs	r3, #1
 80214b2:	9306      	str	r3, [sp, #24]
 80214b4:	9b07      	ldr	r3, [sp, #28]
 80214b6:	3302      	adds	r3, #2
 80214b8:	9307      	str	r3, [sp, #28]
 80214ba:	e744      	b.n	8021346 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 80214bc:	d023      	beq.n	8021506 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80214be:	9b06      	ldr	r3, [sp, #24]
 80214c0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80214c2:	3b01      	subs	r3, #1
 80214c4:	fb00 b003 	mla	r0, r0, r3, fp
 80214c8:	1400      	asrs	r0, r0, #16
 80214ca:	f53f af58 	bmi.w	802137e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80214ce:	3901      	subs	r1, #1
 80214d0:	4288      	cmp	r0, r1
 80214d2:	f6bf af54 	bge.w	802137e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80214d6:	991c      	ldr	r1, [sp, #112]	; 0x70
 80214d8:	fb01 5303 	mla	r3, r1, r3, r5
 80214dc:	141b      	asrs	r3, r3, #16
 80214de:	f53f af4e 	bmi.w	802137e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80214e2:	3a01      	subs	r2, #1
 80214e4:	4293      	cmp	r3, r2
 80214e6:	f6bf af4a 	bge.w	802137e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80214ea:	9b06      	ldr	r3, [sp, #24]
 80214ec:	9309      	str	r3, [sp, #36]	; 0x24
 80214ee:	9b07      	ldr	r3, [sp, #28]
 80214f0:	930b      	str	r3, [sp, #44]	; 0x2c
 80214f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80214f4:	2b00      	cmp	r3, #0
 80214f6:	dc70      	bgt.n	80215da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 80214f8:	9b06      	ldr	r3, [sp, #24]
 80214fa:	9a07      	ldr	r2, [sp, #28]
 80214fc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8021500:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021504:	9307      	str	r3, [sp, #28]
 8021506:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021508:	2b00      	cmp	r3, #0
 802150a:	f340 80eb 	ble.w	80216e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 802150e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021512:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021516:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802151a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802151c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021520:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021524:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021528:	eef0 6a62 	vmov.f32	s13, s5
 802152c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021530:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021534:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021538:	ee16 ba90 	vmov	fp, s13
 802153c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021540:	eef0 6a43 	vmov.f32	s13, s6
 8021544:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021548:	ee12 2a90 	vmov	r2, s5
 802154c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021550:	fb92 f3f3 	sdiv	r3, r2, r3
 8021554:	ee13 2a10 	vmov	r2, s6
 8021558:	931b      	str	r3, [sp, #108]	; 0x6c
 802155a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802155c:	fb92 f3f3 	sdiv	r3, r2, r3
 8021560:	931c      	str	r3, [sp, #112]	; 0x70
 8021562:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021564:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021566:	3b01      	subs	r3, #1
 8021568:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802156c:	930a      	str	r3, [sp, #40]	; 0x28
 802156e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021570:	bf08      	it	eq
 8021572:	4613      	moveq	r3, r2
 8021574:	ee16 5a90 	vmov	r5, s13
 8021578:	9306      	str	r3, [sp, #24]
 802157a:	eeb0 3a67 	vmov.f32	s6, s15
 802157e:	eef0 2a47 	vmov.f32	s5, s14
 8021582:	e6d2      	b.n	802132a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8021584:	b149      	cbz	r1, 802159a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8021586:	5cba      	ldrb	r2, [r7, r2]
 8021588:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802158c:	4422      	add	r2, r4
 802158e:	4660      	mov	r0, ip
 8021590:	4666      	mov	r6, ip
 8021592:	e734      	b.n	80213fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8021594:	4660      	mov	r0, ip
 8021596:	4662      	mov	r2, ip
 8021598:	e731      	b.n	80213fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 802159a:	4660      	mov	r0, ip
 802159c:	4662      	mov	r2, ip
 802159e:	e7f7      	b.n	8021590 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 80215a0:	f110 0c01 	adds.w	ip, r0, #1
 80215a4:	f53f af74 	bmi.w	8021490 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80215a8:	4562      	cmp	r2, ip
 80215aa:	f6ff af71 	blt.w	8021490 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80215ae:	f116 0c01 	adds.w	ip, r6, #1
 80215b2:	f53f af6d 	bmi.w	8021490 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80215b6:	4567      	cmp	r7, ip
 80215b8:	f6ff af6a 	blt.w	8021490 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80215bc:	b23f      	sxth	r7, r7
 80215be:	b212      	sxth	r2, r2
 80215c0:	e9cd 3104 	strd	r3, r1, [sp, #16]
 80215c4:	e9cd 0602 	strd	r0, r6, [sp, #8]
 80215c8:	9200      	str	r2, [sp, #0]
 80215ca:	9701      	str	r7, [sp, #4]
 80215cc:	4623      	mov	r3, r4
 80215ce:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80215d2:	980d      	ldr	r0, [sp, #52]	; 0x34
 80215d4:	f7ff fde6 	bl	80211a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 80215d8:	e75a      	b.n	8021490 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80215da:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80215dc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80215e0:	ea4f 462b 	mov.w	r6, fp, asr #16
 80215e4:	1428      	asrs	r0, r5, #16
 80215e6:	fb02 6000 	mla	r0, r2, r0, r6
 80215ea:	9e08      	ldr	r6, [sp, #32]
 80215ec:	f816 8000 	ldrb.w	r8, [r6, r0]
 80215f0:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80215f4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80215f8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80215fc:	1837      	adds	r7, r6, r0
 80215fe:	eb04 0c08 	add.w	ip, r4, r8
 8021602:	2b00      	cmp	r3, #0
 8021604:	d060      	beq.n	80216c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8021606:	787e      	ldrb	r6, [r7, #1]
 8021608:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802160c:	4426      	add	r6, r4
 802160e:	2900      	cmp	r1, #0
 8021610:	d062      	beq.n	80216d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8021612:	18b8      	adds	r0, r7, r2
 8021614:	5cba      	ldrb	r2, [r7, r2]
 8021616:	7840      	ldrb	r0, [r0, #1]
 8021618:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802161c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021620:	4422      	add	r2, r4
 8021622:	4420      	add	r0, r4
 8021624:	b29b      	uxth	r3, r3
 8021626:	b289      	uxth	r1, r1
 8021628:	fb03 f901 	mul.w	r9, r3, r1
 802162c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021630:	011b      	lsls	r3, r3, #4
 8021632:	b289      	uxth	r1, r1
 8021634:	78b7      	ldrb	r7, [r6, #2]
 8021636:	f89c a002 	ldrb.w	sl, [ip, #2]
 802163a:	f89c c001 	ldrb.w	ip, [ip, #1]
 802163e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8021642:	eba3 0309 	sub.w	r3, r3, r9
 8021646:	b29b      	uxth	r3, r3
 8021648:	ebae 0e01 	sub.w	lr, lr, r1
 802164c:	fa1f fe8e 	uxth.w	lr, lr
 8021650:	435f      	muls	r7, r3
 8021652:	fb0e 770a 	mla	r7, lr, sl, r7
 8021656:	f892 a002 	ldrb.w	sl, [r2, #2]
 802165a:	fb01 770a 	mla	r7, r1, sl, r7
 802165e:	f890 a002 	ldrb.w	sl, [r0, #2]
 8021662:	fb09 7a0a 	mla	sl, r9, sl, r7
 8021666:	f814 7008 	ldrb.w	r7, [r4, r8]
 802166a:	f896 8000 	ldrb.w	r8, [r6]
 802166e:	7876      	ldrb	r6, [r6, #1]
 8021670:	fb03 f808 	mul.w	r8, r3, r8
 8021674:	fb0e 8807 	mla	r8, lr, r7, r8
 8021678:	7817      	ldrb	r7, [r2, #0]
 802167a:	fb01 8807 	mla	r8, r1, r7, r8
 802167e:	7807      	ldrb	r7, [r0, #0]
 8021680:	fb09 8707 	mla	r7, r9, r7, r8
 8021684:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8021688:	4373      	muls	r3, r6
 802168a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802168e:	7856      	ldrb	r6, [r2, #1]
 8021690:	ea47 070a 	orr.w	r7, r7, sl
 8021694:	fb0e 330c 	mla	r3, lr, ip, r3
 8021698:	f890 a001 	ldrb.w	sl, [r0, #1]
 802169c:	fb01 3306 	mla	r3, r1, r6, r3
 80216a0:	fb09 3a0a 	mla	sl, r9, sl, r3
 80216a4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80216a8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80216aa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80216ae:	ea47 070a 	orr.w	r7, r7, sl
 80216b2:	f823 7b02 	strh.w	r7, [r3], #2
 80216b6:	930b      	str	r3, [sp, #44]	; 0x2c
 80216b8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80216ba:	449b      	add	fp, r3
 80216bc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80216be:	441d      	add	r5, r3
 80216c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80216c2:	3b01      	subs	r3, #1
 80216c4:	9309      	str	r3, [sp, #36]	; 0x24
 80216c6:	e714      	b.n	80214f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80216c8:	b149      	cbz	r1, 80216de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80216ca:	5cba      	ldrb	r2, [r7, r2]
 80216cc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80216d0:	4422      	add	r2, r4
 80216d2:	4660      	mov	r0, ip
 80216d4:	4666      	mov	r6, ip
 80216d6:	e7a5      	b.n	8021624 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 80216d8:	4660      	mov	r0, ip
 80216da:	4662      	mov	r2, ip
 80216dc:	e7a2      	b.n	8021624 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 80216de:	4660      	mov	r0, ip
 80216e0:	4662      	mov	r2, ip
 80216e2:	e7f7      	b.n	80216d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 80216e4:	b00f      	add	sp, #60	; 0x3c
 80216e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080216ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 80216ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80216ee:	b085      	sub	sp, #20
 80216f0:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 80216f4:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80216f8:	9102      	str	r1, [sp, #8]
 80216fa:	2c00      	cmp	r4, #0
 80216fc:	fb04 710c 	mla	r1, r4, ip, r7
 8021700:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8021704:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8021708:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 802170c:	eb02 0e01 	add.w	lr, r2, r1
 8021710:	f2c0 8122 	blt.w	8021958 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8021714:	45a0      	cmp	r8, r4
 8021716:	f340 811f 	ble.w	8021958 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 802171a:	2f00      	cmp	r7, #0
 802171c:	f2c0 811a 	blt.w	8021954 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8021720:	45bc      	cmp	ip, r7
 8021722:	f340 8117 	ble.w	8021954 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8021726:	5c52      	ldrb	r2, [r2, r1]
 8021728:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 802172c:	1c7a      	adds	r2, r7, #1
 802172e:	f100 8116 	bmi.w	802195e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8021732:	4594      	cmp	ip, r2
 8021734:	f340 8113 	ble.w	802195e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8021738:	2e00      	cmp	r6, #0
 802173a:	f000 8112 	beq.w	8021962 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 802173e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021742:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8021746:	3401      	adds	r4, #1
 8021748:	f100 810f 	bmi.w	802196a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 802174c:	45a0      	cmp	r8, r4
 802174e:	f340 810c 	ble.w	802196a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8021752:	2800      	cmp	r0, #0
 8021754:	f000 810c 	beq.w	8021970 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8021758:	2f00      	cmp	r7, #0
 802175a:	f2c0 8104 	blt.w	8021966 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 802175e:	45bc      	cmp	ip, r7
 8021760:	f340 8101 	ble.w	8021966 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8021764:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8021768:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 802176c:	3701      	adds	r7, #1
 802176e:	f100 8102 	bmi.w	8021976 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8021772:	45bc      	cmp	ip, r7
 8021774:	f340 80ff 	ble.w	8021976 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8021778:	2e00      	cmp	r6, #0
 802177a:	f000 80fe 	beq.w	802197a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 802177e:	44f4      	add	ip, lr
 8021780:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8021784:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8021788:	b2b6      	uxth	r6, r6
 802178a:	b280      	uxth	r0, r0
 802178c:	fb00 fe06 	mul.w	lr, r0, r6
 8021790:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8021794:	0136      	lsls	r6, r6, #4
 8021796:	eba6 070e 	sub.w	r7, r6, lr
 802179a:	b280      	uxth	r0, r0
 802179c:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80217a0:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80217a4:	b2bf      	uxth	r7, r7
 80217a6:	1a1b      	subs	r3, r3, r0
 80217a8:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80217ac:	b29b      	uxth	r3, r3
 80217ae:	fb0a f607 	mul.w	r6, sl, r7
 80217b2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80217b6:	fb0b 6603 	mla	r6, fp, r3, r6
 80217ba:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80217be:	fb00 6609 	mla	r6, r0, r9, r6
 80217c2:	fb0e 6608 	mla	r6, lr, r8, r6
 80217c6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80217ca:	9600      	str	r6, [sp, #0]
 80217cc:	2e00      	cmp	r6, #0
 80217ce:	f000 80be 	beq.w	802194e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 80217d2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80217d6:	fb0b fc0c 	mul.w	ip, fp, ip
 80217da:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80217de:	fb0b f505 	mul.w	r5, fp, r5
 80217e2:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80217e6:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80217ea:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80217ee:	44dc      	add	ip, fp
 80217f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80217f4:	9501      	str	r5, [sp, #4]
 80217f6:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80217fa:	9503      	str	r5, [sp, #12]
 80217fc:	9d01      	ldr	r5, [sp, #4]
 80217fe:	9e02      	ldr	r6, [sp, #8]
 8021800:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8021804:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8021808:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802180c:	fb0a fc0c 	mul.w	ip, sl, ip
 8021810:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8021814:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8021818:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802181c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021820:	4465      	add	r5, ip
 8021822:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021826:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802182a:	fb09 fc0c 	mul.w	ip, r9, ip
 802182e:	fb09 f904 	mul.w	r9, r9, r4
 8021832:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8021836:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802183a:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 802183e:	fb08 f404 	mul.w	r4, r8, r4
 8021842:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021846:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802184a:	fb08 f802 	mul.w	r8, r8, r2
 802184e:	fb0a fa01 	mul.w	sl, sl, r1
 8021852:	0a22      	lsrs	r2, r4, #8
 8021854:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8021858:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802185c:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8021860:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8021864:	4414      	add	r4, r2
 8021866:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802186a:	f508 7280 	add.w	r2, r8, #256	; 0x100
 802186e:	0a2d      	lsrs	r5, r5, #8
 8021870:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8021874:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021878:	9a03      	ldr	r2, [sp, #12]
 802187a:	8836      	ldrh	r6, [r6, #0]
 802187c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8021880:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021884:	437d      	muls	r5, r7
 8021886:	4461      	add	r1, ip
 8021888:	0a24      	lsrs	r4, r4, #8
 802188a:	fb02 5503 	mla	r5, r2, r3, r5
 802188e:	0a09      	lsrs	r1, r1, #8
 8021890:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8021894:	fb04 540e 	mla	r4, r4, lr, r5
 8021898:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802189c:	fb01 4100 	mla	r1, r1, r0, r4
 80218a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80218a4:	0a09      	lsrs	r1, r1, #8
 80218a6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80218aa:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80218ae:	fb07 f70a 	mul.w	r7, r7, sl
 80218b2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80218b6:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80218ba:	fb03 7101 	mla	r1, r3, r1, r7
 80218be:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80218c2:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80218c6:	fb0e 1e08 	mla	lr, lr, r8, r1
 80218ca:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80218ce:	fb00 e101 	mla	r1, r0, r1, lr
 80218d2:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 80218d6:	9a00      	ldr	r2, [sp, #0]
 80218d8:	b287      	uxth	r7, r0
 80218da:	437a      	muls	r2, r7
 80218dc:	0a09      	lsrs	r1, r1, #8
 80218de:	1c53      	adds	r3, r2, #1
 80218e0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80218e4:	4321      	orrs	r1, r4
 80218e6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80218ea:	1235      	asrs	r5, r6, #8
 80218ec:	0c0a      	lsrs	r2, r1, #16
 80218ee:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80218f2:	b2db      	uxtb	r3, r3
 80218f4:	fb12 f207 	smulbb	r2, r2, r7
 80218f8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80218fc:	fb05 2503 	mla	r5, r5, r3, r2
 8021900:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8021904:	10f2      	asrs	r2, r6, #3
 8021906:	b2c8      	uxtb	r0, r1
 8021908:	00f6      	lsls	r6, r6, #3
 802190a:	fb14 f407 	smulbb	r4, r4, r7
 802190e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021912:	b2f6      	uxtb	r6, r6
 8021914:	fb10 f007 	smulbb	r0, r0, r7
 8021918:	fb02 4203 	mla	r2, r2, r3, r4
 802191c:	b2ad      	uxth	r5, r5
 802191e:	fb06 0303 	mla	r3, r6, r3, r0
 8021922:	b299      	uxth	r1, r3
 8021924:	b294      	uxth	r4, r2
 8021926:	1c6b      	adds	r3, r5, #1
 8021928:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802192c:	1c62      	adds	r2, r4, #1
 802192e:	1c4b      	adds	r3, r1, #1
 8021930:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021934:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8021938:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802193c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021940:	0952      	lsrs	r2, r2, #5
 8021942:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021946:	432b      	orrs	r3, r5
 8021948:	4313      	orrs	r3, r2
 802194a:	9a02      	ldr	r2, [sp, #8]
 802194c:	8013      	strh	r3, [r2, #0]
 802194e:	b005      	add	sp, #20
 8021950:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021954:	2500      	movs	r5, #0
 8021956:	e6e9      	b.n	802172c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8021958:	2100      	movs	r1, #0
 802195a:	460d      	mov	r5, r1
 802195c:	e6f3      	b.n	8021746 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802195e:	2100      	movs	r1, #0
 8021960:	e6f1      	b.n	8021746 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021962:	4631      	mov	r1, r6
 8021964:	e6ef      	b.n	8021746 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021966:	2400      	movs	r4, #0
 8021968:	e700      	b.n	802176c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 802196a:	2200      	movs	r2, #0
 802196c:	4614      	mov	r4, r2
 802196e:	e70b      	b.n	8021788 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021970:	4602      	mov	r2, r0
 8021972:	4604      	mov	r4, r0
 8021974:	e708      	b.n	8021788 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021976:	2200      	movs	r2, #0
 8021978:	e706      	b.n	8021788 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802197a:	4632      	mov	r2, r6
 802197c:	e704      	b.n	8021788 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0802197e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802197e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021982:	b09f      	sub	sp, #124	; 0x7c
 8021984:	921b      	str	r2, [sp, #108]	; 0x6c
 8021986:	9309      	str	r3, [sp, #36]	; 0x24
 8021988:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 802198a:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 802198e:	931c      	str	r3, [sp, #112]	; 0x70
 8021990:	9119      	str	r1, [sp, #100]	; 0x64
 8021992:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8021996:	901d      	str	r0, [sp, #116]	; 0x74
 8021998:	6850      	ldr	r0, [r2, #4]
 802199a:	6812      	ldr	r2, [r2, #0]
 802199c:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 802199e:	fb00 1303 	mla	r3, r0, r3, r1
 80219a2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80219a6:	930c      	str	r3, [sp, #48]	; 0x30
 80219a8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80219aa:	681b      	ldr	r3, [r3, #0]
 80219ac:	9312      	str	r3, [sp, #72]	; 0x48
 80219ae:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80219b0:	685e      	ldr	r6, [r3, #4]
 80219b2:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 80219b6:	930d      	str	r3, [sp, #52]	; 0x34
 80219b8:	3604      	adds	r6, #4
 80219ba:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80219bc:	2b00      	cmp	r3, #0
 80219be:	dc03      	bgt.n	80219c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80219c0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80219c2:	2b00      	cmp	r3, #0
 80219c4:	f340 8388 	ble.w	80220d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80219c8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80219ca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80219ce:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80219d2:	1e48      	subs	r0, r1, #1
 80219d4:	1e57      	subs	r7, r2, #1
 80219d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80219d8:	2b00      	cmp	r3, #0
 80219da:	f340 8195 	ble.w	8021d08 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80219de:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80219e0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80219e4:	ea4f 4325 	mov.w	r3, r5, asr #16
 80219e8:	d406      	bmi.n	80219f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80219ea:	4584      	cmp	ip, r0
 80219ec:	da04      	bge.n	80219f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80219ee:	2b00      	cmp	r3, #0
 80219f0:	db02      	blt.n	80219f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80219f2:	42bb      	cmp	r3, r7
 80219f4:	f2c0 8189 	blt.w	8021d0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 80219f8:	f11c 0c01 	adds.w	ip, ip, #1
 80219fc:	f100 8177 	bmi.w	8021cee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021a00:	4561      	cmp	r1, ip
 8021a02:	f2c0 8174 	blt.w	8021cee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021a06:	3301      	adds	r3, #1
 8021a08:	f100 8171 	bmi.w	8021cee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021a0c:	429a      	cmp	r2, r3
 8021a0e:	f2c0 816e 	blt.w	8021cee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021a12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021a14:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8021a16:	931a      	str	r3, [sp, #104]	; 0x68
 8021a18:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8021a1a:	2b00      	cmp	r3, #0
 8021a1c:	f340 8193 	ble.w	8021d46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8021a20:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021a22:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021a26:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021a28:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8021a2c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021a2e:	141b      	asrs	r3, r3, #16
 8021a30:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021a34:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021a38:	f100 81d6 	bmi.w	8021de8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021a3c:	f100 38ff 	add.w	r8, r0, #4294967295
 8021a40:	4543      	cmp	r3, r8
 8021a42:	f280 81d1 	bge.w	8021de8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021a46:	f1bc 0f00 	cmp.w	ip, #0
 8021a4a:	f2c0 81cd 	blt.w	8021de8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021a4e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021a52:	45c4      	cmp	ip, r8
 8021a54:	f280 81c8 	bge.w	8021de8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021a58:	b200      	sxth	r0, r0
 8021a5a:	fb0c 3300 	mla	r3, ip, r0, r3
 8021a5e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021a60:	eb04 0803 	add.w	r8, r4, r3
 8021a64:	5ce3      	ldrb	r3, [r4, r3]
 8021a66:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021a6a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8021a6e:	2a00      	cmp	r2, #0
 8021a70:	f000 81af 	beq.w	8021dd2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021a74:	f898 c001 	ldrb.w	ip, [r8, #1]
 8021a78:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8021a7c:	940e      	str	r4, [sp, #56]	; 0x38
 8021a7e:	0e24      	lsrs	r4, r4, #24
 8021a80:	9415      	str	r4, [sp, #84]	; 0x54
 8021a82:	b179      	cbz	r1, 8021aa4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8021a84:	eb08 0c00 	add.w	ip, r8, r0
 8021a88:	f818 0000 	ldrb.w	r0, [r8, r0]
 8021a8c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021a90:	900a      	str	r0, [sp, #40]	; 0x28
 8021a92:	0e00      	lsrs	r0, r0, #24
 8021a94:	9013      	str	r0, [sp, #76]	; 0x4c
 8021a96:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8021a9a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021a9e:	900f      	str	r0, [sp, #60]	; 0x3c
 8021aa0:	0e00      	lsrs	r0, r0, #24
 8021aa2:	9016      	str	r0, [sp, #88]	; 0x58
 8021aa4:	b292      	uxth	r2, r2
 8021aa6:	b289      	uxth	r1, r1
 8021aa8:	fb02 f901 	mul.w	r9, r2, r1
 8021aac:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021ab0:	0112      	lsls	r2, r2, #4
 8021ab2:	eba2 0809 	sub.w	r8, r2, r9
 8021ab6:	b289      	uxth	r1, r1
 8021ab8:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021abc:	9815      	ldr	r0, [sp, #84]	; 0x54
 8021abe:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021ac0:	fa1f f888 	uxth.w	r8, r8
 8021ac4:	1a52      	subs	r2, r2, r1
 8021ac6:	b292      	uxth	r2, r2
 8021ac8:	fb08 f000 	mul.w	r0, r8, r0
 8021acc:	fb02 000e 	mla	r0, r2, lr, r0
 8021ad0:	fb01 0004 	mla	r0, r1, r4, r0
 8021ad4:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021ad6:	fb09 0004 	mla	r0, r9, r4, r0
 8021ada:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8021ade:	2800      	cmp	r0, #0
 8021ae0:	f000 80fa 	beq.w	8021cd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021ae4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8021ae8:	d01b      	beq.n	8021b22 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021aea:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021aee:	fb0e fa0a 	mul.w	sl, lr, sl
 8021af2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021af6:	fb0e fe03 	mul.w	lr, lr, r3
 8021afa:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021afe:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021b02:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021b06:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8021b0a:	4453      	add	r3, sl
 8021b0c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021b10:	0a1b      	lsrs	r3, r3, #8
 8021b12:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021b16:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021b1a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021b1e:	ea43 030c 	orr.w	r3, r3, ip
 8021b22:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021b24:	2cff      	cmp	r4, #255	; 0xff
 8021b26:	d021      	beq.n	8021b6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8021b28:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021b2a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021b2e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021b30:	fb04 fb0b 	mul.w	fp, r4, fp
 8021b34:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021b36:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021b3a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021b3c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021b40:	fb04 fa0a 	mul.w	sl, r4, sl
 8021b44:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021b48:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021b4c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021b50:	44de      	add	lr, fp
 8021b52:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021b56:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021b5a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021b5e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021b62:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021b66:	ea4e 040a 	orr.w	r4, lr, sl
 8021b6a:	940e      	str	r4, [sp, #56]	; 0x38
 8021b6c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021b6e:	2cff      	cmp	r4, #255	; 0xff
 8021b70:	d021      	beq.n	8021bb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8021b72:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021b74:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021b78:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021b7a:	fb04 fb0b 	mul.w	fp, r4, fp
 8021b7e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021b80:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021b84:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021b86:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021b8a:	fb04 fa0a 	mul.w	sl, r4, sl
 8021b8e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021b92:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021b96:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021b9a:	44de      	add	lr, fp
 8021b9c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021ba0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021ba4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021ba8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021bac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021bb0:	ea4e 040a 	orr.w	r4, lr, sl
 8021bb4:	940a      	str	r4, [sp, #40]	; 0x28
 8021bb6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021bb8:	2cff      	cmp	r4, #255	; 0xff
 8021bba:	d021      	beq.n	8021c00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8021bbc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021bbe:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021bc2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021bc4:	fb04 fb0b 	mul.w	fp, r4, fp
 8021bc8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021bca:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021bce:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021bd0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021bd4:	fb04 fa0a 	mul.w	sl, r4, sl
 8021bd8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021bdc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021be0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021be4:	44de      	add	lr, fp
 8021be6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021bea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021bee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021bf2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021bf6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021bfa:	ea4e 040a 	orr.w	r4, lr, sl
 8021bfe:	940f      	str	r4, [sp, #60]	; 0x3c
 8021c00:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021c02:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021c06:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021c08:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8021c0c:	fb08 fc0c 	mul.w	ip, r8, ip
 8021c10:	fb02 cc0e 	mla	ip, r2, lr, ip
 8021c14:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021c18:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021c1a:	fb01 cc0e 	mla	ip, r1, lr, ip
 8021c1e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021c22:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021c24:	fb09 cc0e 	mla	ip, r9, lr, ip
 8021c28:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8021c2c:	fb08 f80e 	mul.w	r8, r8, lr
 8021c30:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021c34:	fb02 8303 	mla	r3, r2, r3, r8
 8021c38:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8021c3a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021c3c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8021c40:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021c42:	fb01 330a 	mla	r3, r1, sl, r3
 8021c46:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8021c4a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8021c4c:	fb09 3901 	mla	r9, r9, r1, r3
 8021c50:	4342      	muls	r2, r0
 8021c52:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021c56:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021c5a:	883b      	ldrh	r3, [r7, #0]
 8021c5c:	1c50      	adds	r0, r2, #1
 8021c5e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021c62:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021c66:	ea4c 0c09 	orr.w	ip, ip, r9
 8021c6a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8021c6e:	1219      	asrs	r1, r3, #8
 8021c70:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8021c74:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8021c78:	b2c0      	uxtb	r0, r0
 8021c7a:	fb12 f204 	smulbb	r2, r2, r4
 8021c7e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021c82:	fb01 2100 	mla	r1, r1, r0, r2
 8021c86:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8021c8a:	10da      	asrs	r2, r3, #3
 8021c8c:	fa5f fc8c 	uxtb.w	ip, ip
 8021c90:	00db      	lsls	r3, r3, #3
 8021c92:	fb1c fc04 	smulbb	ip, ip, r4
 8021c96:	b2db      	uxtb	r3, r3
 8021c98:	b289      	uxth	r1, r1
 8021c9a:	fb03 c300 	mla	r3, r3, r0, ip
 8021c9e:	fa1f fc83 	uxth.w	ip, r3
 8021ca2:	1c4b      	adds	r3, r1, #1
 8021ca4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8021ca8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021cac:	fb1e fe04 	smulbb	lr, lr, r4
 8021cb0:	f10c 0301 	add.w	r3, ip, #1
 8021cb4:	fb02 e200 	mla	r2, r2, r0, lr
 8021cb8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8021cbc:	b292      	uxth	r2, r2
 8021cbe:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8021cc2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021cc6:	430b      	orrs	r3, r1
 8021cc8:	1c51      	adds	r1, r2, #1
 8021cca:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8021cce:	0952      	lsrs	r2, r2, #5
 8021cd0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021cd4:	4313      	orrs	r3, r2
 8021cd6:	803b      	strh	r3, [r7, #0]
 8021cd8:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8021cda:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021cdc:	441a      	add	r2, r3
 8021cde:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021ce0:	9229      	str	r2, [sp, #164]	; 0xa4
 8021ce2:	441d      	add	r5, r3
 8021ce4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8021ce6:	3b01      	subs	r3, #1
 8021ce8:	3702      	adds	r7, #2
 8021cea:	931a      	str	r3, [sp, #104]	; 0x68
 8021cec:	e694      	b.n	8021a18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8021cee:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8021cf0:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021cf2:	441c      	add	r4, r3
 8021cf4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021cf6:	9429      	str	r4, [sp, #164]	; 0xa4
 8021cf8:	441d      	add	r5, r3
 8021cfa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021cfc:	3b01      	subs	r3, #1
 8021cfe:	9309      	str	r3, [sp, #36]	; 0x24
 8021d00:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021d02:	3302      	adds	r3, #2
 8021d04:	930c      	str	r3, [sp, #48]	; 0x30
 8021d06:	e666      	b.n	80219d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8021d08:	d024      	beq.n	8021d54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8021d0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021d0c:	982b      	ldr	r0, [sp, #172]	; 0xac
 8021d0e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021d10:	3b01      	subs	r3, #1
 8021d12:	fb00 4003 	mla	r0, r0, r3, r4
 8021d16:	1400      	asrs	r0, r0, #16
 8021d18:	f53f ae7b 	bmi.w	8021a12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021d1c:	3901      	subs	r1, #1
 8021d1e:	4288      	cmp	r0, r1
 8021d20:	f6bf ae77 	bge.w	8021a12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021d24:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8021d26:	fb01 5303 	mla	r3, r1, r3, r5
 8021d2a:	141b      	asrs	r3, r3, #16
 8021d2c:	f53f ae71 	bmi.w	8021a12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021d30:	3a01      	subs	r2, #1
 8021d32:	4293      	cmp	r3, r2
 8021d34:	f6bf ae6d 	bge.w	8021a12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021d38:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8021d3c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8021d40:	f1bb 0f00 	cmp.w	fp, #0
 8021d44:	dc70      	bgt.n	8021e28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8021d46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021d48:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021d4c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021d4e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021d52:	930c      	str	r3, [sp, #48]	; 0x30
 8021d54:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021d56:	2b00      	cmp	r3, #0
 8021d58:	f340 81be 	ble.w	80220d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8021d5c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021d60:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021d64:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021d68:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021d6a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021d6e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021d72:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021d76:	eef0 6a62 	vmov.f32	s13, s5
 8021d7a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021d7e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021d82:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021d86:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8021d8a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021d8e:	eef0 6a43 	vmov.f32	s13, s6
 8021d92:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021d96:	ee12 2a90 	vmov	r2, s5
 8021d9a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021d9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8021da2:	ee13 2a10 	vmov	r2, s6
 8021da6:	932b      	str	r3, [sp, #172]	; 0xac
 8021da8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021daa:	fb92 f3f3 	sdiv	r3, r2, r3
 8021dae:	932c      	str	r3, [sp, #176]	; 0xb0
 8021db0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021db2:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8021db4:	3b01      	subs	r3, #1
 8021db6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021dba:	9319      	str	r3, [sp, #100]	; 0x64
 8021dbc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021dbe:	bf08      	it	eq
 8021dc0:	4613      	moveq	r3, r2
 8021dc2:	ee16 5a90 	vmov	r5, s13
 8021dc6:	9309      	str	r3, [sp, #36]	; 0x24
 8021dc8:	eeb0 3a67 	vmov.f32	s6, s15
 8021dcc:	eef0 2a47 	vmov.f32	s5, s14
 8021dd0:	e5f3      	b.n	80219ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021dd2:	2900      	cmp	r1, #0
 8021dd4:	f43f ae66 	beq.w	8021aa4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8021dd8:	f818 0000 	ldrb.w	r0, [r8, r0]
 8021ddc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021de0:	900a      	str	r0, [sp, #40]	; 0x28
 8021de2:	0e00      	lsrs	r0, r0, #24
 8021de4:	9013      	str	r0, [sp, #76]	; 0x4c
 8021de6:	e65d      	b.n	8021aa4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8021de8:	f113 0801 	adds.w	r8, r3, #1
 8021dec:	f53f af74 	bmi.w	8021cd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021df0:	4540      	cmp	r0, r8
 8021df2:	f6ff af71 	blt.w	8021cd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021df6:	f11c 0801 	adds.w	r8, ip, #1
 8021dfa:	f53f af6d 	bmi.w	8021cd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021dfe:	45c6      	cmp	lr, r8
 8021e00:	f6ff af6a 	blt.w	8021cd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021e04:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8021e06:	9302      	str	r3, [sp, #8]
 8021e08:	b200      	sxth	r0, r0
 8021e0a:	fa0f f38e 	sxth.w	r3, lr
 8021e0e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8021e12:	e9cd c203 	strd	ip, r2, [sp, #12]
 8021e16:	9301      	str	r3, [sp, #4]
 8021e18:	9000      	str	r0, [sp, #0]
 8021e1a:	4633      	mov	r3, r6
 8021e1c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8021e1e:	981d      	ldr	r0, [sp, #116]	; 0x74
 8021e20:	4639      	mov	r1, r7
 8021e22:	f7ff fc62 	bl	80216ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8021e26:	e757      	b.n	8021cd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021e28:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021e2a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021e2c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021e30:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021e32:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021e36:	1427      	asrs	r7, r4, #16
 8021e38:	142b      	asrs	r3, r5, #16
 8021e3a:	fb01 7303 	mla	r3, r1, r3, r7
 8021e3e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021e40:	18e7      	adds	r7, r4, r3
 8021e42:	5ce3      	ldrb	r3, [r4, r3]
 8021e44:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021e48:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021e4c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021e50:	2a00      	cmp	r2, #0
 8021e52:	f000 8137 	beq.w	80220c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8021e56:	f897 e001 	ldrb.w	lr, [r7, #1]
 8021e5a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8021e5e:	9410      	str	r4, [sp, #64]	; 0x40
 8021e60:	0e24      	lsrs	r4, r4, #24
 8021e62:	9417      	str	r4, [sp, #92]	; 0x5c
 8021e64:	b170      	cbz	r0, 8021e84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8021e66:	eb07 0e01 	add.w	lr, r7, r1
 8021e6a:	5c79      	ldrb	r1, [r7, r1]
 8021e6c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021e70:	910b      	str	r1, [sp, #44]	; 0x2c
 8021e72:	0e09      	lsrs	r1, r1, #24
 8021e74:	9114      	str	r1, [sp, #80]	; 0x50
 8021e76:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8021e7a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021e7e:	9111      	str	r1, [sp, #68]	; 0x44
 8021e80:	0e09      	lsrs	r1, r1, #24
 8021e82:	9118      	str	r1, [sp, #96]	; 0x60
 8021e84:	b292      	uxth	r2, r2
 8021e86:	b280      	uxth	r0, r0
 8021e88:	fb02 f800 	mul.w	r8, r2, r0
 8021e8c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8021e90:	0112      	lsls	r2, r2, #4
 8021e92:	eba2 0e08 	sub.w	lr, r2, r8
 8021e96:	b280      	uxth	r0, r0
 8021e98:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021e9c:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8021e9e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021ea0:	fa1f fe8e 	uxth.w	lr, lr
 8021ea4:	1a12      	subs	r2, r2, r0
 8021ea6:	b292      	uxth	r2, r2
 8021ea8:	fb0e f101 	mul.w	r1, lr, r1
 8021eac:	fb02 110c 	mla	r1, r2, ip, r1
 8021eb0:	fb00 1104 	mla	r1, r0, r4, r1
 8021eb4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8021eb6:	fb08 1104 	mla	r1, r8, r4, r1
 8021eba:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021ebe:	2900      	cmp	r1, #0
 8021ec0:	f000 80f5 	beq.w	80220ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8021ec4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8021ec8:	d019      	beq.n	8021efe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8021eca:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021ece:	fb0c fa0a 	mul.w	sl, ip, sl
 8021ed2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021ed6:	fb0c fc03 	mul.w	ip, ip, r3
 8021eda:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021ede:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021ee2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021ee6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8021eea:	4453      	add	r3, sl
 8021eec:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021ef0:	0a1b      	lsrs	r3, r3, #8
 8021ef2:	0a3f      	lsrs	r7, r7, #8
 8021ef4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021ef8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021efc:	433b      	orrs	r3, r7
 8021efe:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8021f00:	2cff      	cmp	r4, #255	; 0xff
 8021f02:	d020      	beq.n	8021f46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8021f04:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021f06:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021f0a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8021f0c:	4367      	muls	r7, r4
 8021f0e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021f10:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021f14:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8021f16:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021f1a:	fb04 fa0a 	mul.w	sl, r4, sl
 8021f1e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021f22:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021f26:	44bc      	add	ip, r7
 8021f28:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021f2c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021f30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021f34:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021f38:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021f3c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021f40:	ea4c 040a 	orr.w	r4, ip, sl
 8021f44:	9410      	str	r4, [sp, #64]	; 0x40
 8021f46:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021f48:	2cff      	cmp	r4, #255	; 0xff
 8021f4a:	d020      	beq.n	8021f8e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8021f4c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021f4e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021f52:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021f54:	4367      	muls	r7, r4
 8021f56:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021f58:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021f5c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021f5e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021f62:	fb04 fa0a 	mul.w	sl, r4, sl
 8021f66:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021f6a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021f6e:	44bc      	add	ip, r7
 8021f70:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021f74:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021f78:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021f7c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021f80:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021f84:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021f88:	ea4c 040a 	orr.w	r4, ip, sl
 8021f8c:	940b      	str	r4, [sp, #44]	; 0x2c
 8021f8e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8021f90:	2cff      	cmp	r4, #255	; 0xff
 8021f92:	d020      	beq.n	8021fd6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8021f94:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021f96:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021f9a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8021f9c:	4367      	muls	r7, r4
 8021f9e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021fa0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021fa4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8021fa6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021faa:	fb04 fa0a 	mul.w	sl, r4, sl
 8021fae:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021fb2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021fb6:	44bc      	add	ip, r7
 8021fb8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021fbc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021fc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021fc4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021fc8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021fcc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021fd0:	ea4c 040a 	orr.w	r4, ip, sl
 8021fd4:	9411      	str	r4, [sp, #68]	; 0x44
 8021fd6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021fd8:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021fdc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021fde:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8021fe2:	fb0e f707 	mul.w	r7, lr, r7
 8021fe6:	fb02 770c 	mla	r7, r2, ip, r7
 8021fea:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021fee:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021ff0:	fb00 770c 	mla	r7, r0, ip, r7
 8021ff4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021ff8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021ffa:	fb08 770c 	mla	r7, r8, ip, r7
 8021ffe:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8022002:	fb0e fe0c 	mul.w	lr, lr, ip
 8022006:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802200a:	fb02 e303 	mla	r3, r2, r3, lr
 802200e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022010:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022012:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022016:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8022018:	fb00 330a 	mla	r3, r0, sl, r3
 802201c:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8022020:	fb08 3c0c 	mla	ip, r8, ip, r3
 8022024:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022026:	f8b9 0000 	ldrh.w	r0, [r9]
 802202a:	434b      	muls	r3, r1
 802202c:	0a3f      	lsrs	r7, r7, #8
 802202e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022032:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022036:	1c59      	adds	r1, r3, #1
 8022038:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802203c:	ea47 070c 	orr.w	r7, r7, ip
 8022040:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8022044:	1202      	asrs	r2, r0, #8
 8022046:	0c3b      	lsrs	r3, r7, #16
 8022048:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802204c:	b2c9      	uxtb	r1, r1
 802204e:	fb13 f304 	smulbb	r3, r3, r4
 8022052:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022056:	fb02 3201 	mla	r2, r2, r1, r3
 802205a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802205e:	10c3      	asrs	r3, r0, #3
 8022060:	b2ff      	uxtb	r7, r7
 8022062:	00c0      	lsls	r0, r0, #3
 8022064:	b292      	uxth	r2, r2
 8022066:	fb1c fc04 	smulbb	ip, ip, r4
 802206a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802206e:	b2c0      	uxtb	r0, r0
 8022070:	fb17 f704 	smulbb	r7, r7, r4
 8022074:	fb03 c301 	mla	r3, r3, r1, ip
 8022078:	fb00 7001 	mla	r0, r0, r1, r7
 802207c:	f102 0c01 	add.w	ip, r2, #1
 8022080:	b280      	uxth	r0, r0
 8022082:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8022086:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 802208a:	1c42      	adds	r2, r0, #1
 802208c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8022090:	b29b      	uxth	r3, r3
 8022092:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022096:	ea42 020c 	orr.w	r2, r2, ip
 802209a:	f103 0c01 	add.w	ip, r3, #1
 802209e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80220a2:	095b      	lsrs	r3, r3, #5
 80220a4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80220a8:	431a      	orrs	r2, r3
 80220aa:	f8a9 2000 	strh.w	r2, [r9]
 80220ae:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80220b0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80220b2:	441a      	add	r2, r3
 80220b4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80220b6:	9229      	str	r2, [sp, #164]	; 0xa4
 80220b8:	f109 0902 	add.w	r9, r9, #2
 80220bc:	441d      	add	r5, r3
 80220be:	f10b 3bff 	add.w	fp, fp, #4294967295
 80220c2:	e63d      	b.n	8021d40 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80220c4:	2800      	cmp	r0, #0
 80220c6:	f43f aedd 	beq.w	8021e84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80220ca:	5c79      	ldrb	r1, [r7, r1]
 80220cc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80220d0:	910b      	str	r1, [sp, #44]	; 0x2c
 80220d2:	0e09      	lsrs	r1, r1, #24
 80220d4:	9114      	str	r1, [sp, #80]	; 0x50
 80220d6:	e6d5      	b.n	8021e84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80220d8:	b01f      	add	sp, #124	; 0x7c
 80220da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080220de <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80220de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80220e2:	b089      	sub	sp, #36	; 0x24
 80220e4:	9101      	str	r1, [sp, #4]
 80220e6:	9801      	ldr	r0, [sp, #4]
 80220e8:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 80220ec:	8800      	ldrh	r0, [r0, #0]
 80220ee:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 80220f2:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 80220f6:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 80220fa:	1206      	asrs	r6, r0, #8
 80220fc:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8022100:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8022104:	9602      	str	r6, [sp, #8]
 8022106:	10c6      	asrs	r6, r0, #3
 8022108:	00c0      	lsls	r0, r0, #3
 802210a:	b2c0      	uxtb	r0, r0
 802210c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8022110:	9004      	str	r0, [sp, #16]
 8022112:	2f00      	cmp	r7, #0
 8022114:	fb07 100c 	mla	r0, r7, ip, r1
 8022118:	9603      	str	r6, [sp, #12]
 802211a:	eb02 0e00 	add.w	lr, r2, r0
 802211e:	f2c0 810a 	blt.w	8022336 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8022122:	45b8      	cmp	r8, r7
 8022124:	f340 8107 	ble.w	8022336 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8022128:	2900      	cmp	r1, #0
 802212a:	f2c0 8102 	blt.w	8022332 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802212e:	458c      	cmp	ip, r1
 8022130:	f340 80ff 	ble.w	8022332 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8022134:	5c12      	ldrb	r2, [r2, r0]
 8022136:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802213a:	1c4a      	adds	r2, r1, #1
 802213c:	f100 80fe 	bmi.w	802233c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8022140:	4594      	cmp	ip, r2
 8022142:	f340 80fb 	ble.w	802233c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8022146:	2d00      	cmp	r5, #0
 8022148:	f000 80fa 	beq.w	8022340 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 802214c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8022150:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8022154:	3701      	adds	r7, #1
 8022156:	f100 80f7 	bmi.w	8022348 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 802215a:	45b8      	cmp	r8, r7
 802215c:	f340 80f4 	ble.w	8022348 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8022160:	2c00      	cmp	r4, #0
 8022162:	f000 80f4 	beq.w	802234e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8022166:	2900      	cmp	r1, #0
 8022168:	eb0e 020c 	add.w	r2, lr, ip
 802216c:	f2c0 80ea 	blt.w	8022344 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8022170:	458c      	cmp	ip, r1
 8022172:	f340 80e7 	ble.w	8022344 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8022176:	f81e 700c 	ldrb.w	r7, [lr, ip]
 802217a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 802217e:	3101      	adds	r1, #1
 8022180:	f100 80e8 	bmi.w	8022354 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8022184:	458c      	cmp	ip, r1
 8022186:	f340 80e5 	ble.w	8022354 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 802218a:	2d00      	cmp	r5, #0
 802218c:	f000 80e4 	beq.w	8022358 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8022190:	7852      	ldrb	r2, [r2, #1]
 8022192:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8022196:	0e0b      	lsrs	r3, r1, #24
 8022198:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 802219c:	9300      	str	r3, [sp, #0]
 802219e:	b2a4      	uxth	r4, r4
 80221a0:	b2ab      	uxth	r3, r5
 80221a2:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 80221a6:	fb03 f904 	mul.w	r9, r3, r4
 80221aa:	fb0a f505 	mul.w	r5, sl, r5
 80221ae:	011b      	lsls	r3, r3, #4
 80221b0:	eba3 0e09 	sub.w	lr, r3, r9
 80221b4:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 80221b8:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 80221bc:	0a28      	lsrs	r0, r5, #8
 80221be:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80221c2:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 80221c6:	4405      	add	r5, r0
 80221c8:	0a2d      	lsrs	r5, r5, #8
 80221ca:	fb0a f303 	mul.w	r3, sl, r3
 80221ce:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 80221d2:	9005      	str	r0, [sp, #20]
 80221d4:	f503 7080 	add.w	r0, r3, #256	; 0x100
 80221d8:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80221dc:	0a1b      	lsrs	r3, r3, #8
 80221de:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 80221e2:	9306      	str	r3, [sp, #24]
 80221e4:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 80221e8:	fb0b f303 	mul.w	r3, fp, r3
 80221ec:	0a1d      	lsrs	r5, r3, #8
 80221ee:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80221f2:	ea4f 6817 	mov.w	r8, r7, lsr #24
 80221f6:	fb0b f606 	mul.w	r6, fp, r6
 80221fa:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80221fe:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8022202:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022206:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802220a:	fb08 f707 	mul.w	r7, r8, r7
 802220e:	441d      	add	r5, r3
 8022210:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8022214:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8022218:	f507 7380 	add.w	r3, r7, #256	; 0x100
 802221c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8022220:	fb08 fc0c 	mul.w	ip, r8, ip
 8022224:	0a1b      	lsrs	r3, r3, #8
 8022226:	9307      	str	r3, [sp, #28]
 8022228:	ea4f 201c 	mov.w	r0, ip, lsr #8
 802222c:	0e0b      	lsrs	r3, r1, #24
 802222e:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8022232:	435f      	muls	r7, r3
 8022234:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022238:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 802223c:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8022240:	4460      	add	r0, ip
 8022242:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022246:	b2a4      	uxth	r4, r4
 8022248:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802224c:	0a2d      	lsrs	r5, r5, #8
 802224e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022252:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022256:	fa1f fe8e 	uxth.w	lr, lr
 802225a:	4359      	muls	r1, r3
 802225c:	1b12      	subs	r2, r2, r4
 802225e:	9b05      	ldr	r3, [sp, #20]
 8022260:	44bc      	add	ip, r7
 8022262:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022266:	b292      	uxth	r2, r2
 8022268:	fb05 f50e 	mul.w	r5, r5, lr
 802226c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022270:	fb03 5502 	mla	r5, r3, r2, r5
 8022274:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022278:	9b06      	ldr	r3, [sp, #24]
 802227a:	f501 7780 	add.w	r7, r1, #256	; 0x100
 802227e:	0a36      	lsrs	r6, r6, #8
 8022280:	0a00      	lsrs	r0, r0, #8
 8022282:	fb0c 5509 	mla	r5, ip, r9, r5
 8022286:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 802228a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 802228e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8022292:	fb00 5504 	mla	r5, r0, r4, r5
 8022296:	fb0e f606 	mul.w	r6, lr, r6
 802229a:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 802229e:	0a09      	lsrs	r1, r1, #8
 80222a0:	9b07      	ldr	r3, [sp, #28]
 80222a2:	fb02 6000 	mla	r0, r2, r0, r6
 80222a6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80222aa:	fb09 0001 	mla	r0, r9, r1, r0
 80222ae:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80222b2:	fb0e fe0b 	mul.w	lr, lr, fp
 80222b6:	fb04 0003 	mla	r0, r4, r3, r0
 80222ba:	fb02 e20a 	mla	r2, r2, sl, lr
 80222be:	9b00      	ldr	r3, [sp, #0]
 80222c0:	fb04 2408 	mla	r4, r4, r8, r2
 80222c4:	fb09 4903 	mla	r9, r9, r3, r4
 80222c8:	ea6f 2929 	mvn.w	r9, r9, asr #8
 80222cc:	9b02      	ldr	r3, [sp, #8]
 80222ce:	9a04      	ldr	r2, [sp, #16]
 80222d0:	fa5f f989 	uxtb.w	r9, r9
 80222d4:	fb03 f109 	mul.w	r1, r3, r9
 80222d8:	9b03      	ldr	r3, [sp, #12]
 80222da:	0a2d      	lsrs	r5, r5, #8
 80222dc:	0a00      	lsrs	r0, r0, #8
 80222de:	fb03 f309 	mul.w	r3, r3, r9
 80222e2:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80222e6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80222ea:	4305      	orrs	r5, r0
 80222ec:	fb02 f909 	mul.w	r9, r2, r9
 80222f0:	1c58      	adds	r0, r3, #1
 80222f2:	1c4a      	adds	r2, r1, #1
 80222f4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80222f8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80222fc:	0a2b      	lsrs	r3, r5, #8
 80222fe:	0c2a      	lsrs	r2, r5, #16
 8022300:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022304:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8022308:	00db      	lsls	r3, r3, #3
 802230a:	0212      	lsls	r2, r2, #8
 802230c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8022310:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022314:	4313      	orrs	r3, r2
 8022316:	f109 0201 	add.w	r2, r9, #1
 802231a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 802231e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8022322:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8022326:	431d      	orrs	r5, r3
 8022328:	9b01      	ldr	r3, [sp, #4]
 802232a:	801d      	strh	r5, [r3, #0]
 802232c:	b009      	add	sp, #36	; 0x24
 802232e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022332:	2000      	movs	r0, #0
 8022334:	e701      	b.n	802213a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8022336:	2600      	movs	r6, #0
 8022338:	4630      	mov	r0, r6
 802233a:	e70b      	b.n	8022154 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 802233c:	2600      	movs	r6, #0
 802233e:	e709      	b.n	8022154 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8022340:	462e      	mov	r6, r5
 8022342:	e707      	b.n	8022154 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8022344:	2700      	movs	r7, #0
 8022346:	e71a      	b.n	802217e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8022348:	2100      	movs	r1, #0
 802234a:	460f      	mov	r7, r1
 802234c:	e723      	b.n	8022196 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 802234e:	4621      	mov	r1, r4
 8022350:	4627      	mov	r7, r4
 8022352:	e720      	b.n	8022196 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8022354:	2100      	movs	r1, #0
 8022356:	e71e      	b.n	8022196 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8022358:	4629      	mov	r1, r5
 802235a:	e71c      	b.n	8022196 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0802235c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802235c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022360:	b09b      	sub	sp, #108	; 0x6c
 8022362:	9218      	str	r2, [sp, #96]	; 0x60
 8022364:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8022366:	9116      	str	r1, [sp, #88]	; 0x58
 8022368:	9307      	str	r3, [sp, #28]
 802236a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 802236e:	9019      	str	r0, [sp, #100]	; 0x64
 8022370:	6850      	ldr	r0, [r2, #4]
 8022372:	6812      	ldr	r2, [r2, #0]
 8022374:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8022376:	fb00 1303 	mla	r3, r0, r3, r1
 802237a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802237e:	930a      	str	r3, [sp, #40]	; 0x28
 8022380:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022382:	681b      	ldr	r3, [r3, #0]
 8022384:	930f      	str	r3, [sp, #60]	; 0x3c
 8022386:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022388:	685e      	ldr	r6, [r3, #4]
 802238a:	3604      	adds	r6, #4
 802238c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802238e:	2b00      	cmp	r3, #0
 8022390:	dc03      	bgt.n	802239a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8022392:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022394:	2b00      	cmp	r3, #0
 8022396:	f340 8373 	ble.w	8022a80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 802239a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802239c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80223a0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80223a4:	1e48      	subs	r0, r1, #1
 80223a6:	1e57      	subs	r7, r2, #1
 80223a8:	9b07      	ldr	r3, [sp, #28]
 80223aa:	2b00      	cmp	r3, #0
 80223ac:	f340 8190 	ble.w	80226d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80223b0:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80223b2:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80223b6:	ea4f 4325 	mov.w	r3, r5, asr #16
 80223ba:	d406      	bmi.n	80223ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80223bc:	4584      	cmp	ip, r0
 80223be:	da04      	bge.n	80223ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80223c0:	2b00      	cmp	r3, #0
 80223c2:	db02      	blt.n	80223ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80223c4:	42bb      	cmp	r3, r7
 80223c6:	f2c0 8184 	blt.w	80226d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 80223ca:	f11c 0c01 	adds.w	ip, ip, #1
 80223ce:	f100 8172 	bmi.w	80226b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80223d2:	4561      	cmp	r1, ip
 80223d4:	f2c0 816f 	blt.w	80226b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80223d8:	3301      	adds	r3, #1
 80223da:	f100 816c 	bmi.w	80226b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80223de:	429a      	cmp	r2, r3
 80223e0:	f2c0 8169 	blt.w	80226b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80223e4:	9b07      	ldr	r3, [sp, #28]
 80223e6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80223e8:	9317      	str	r3, [sp, #92]	; 0x5c
 80223ea:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80223ec:	2b00      	cmp	r3, #0
 80223ee:	f340 818e 	ble.w	802270e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 80223f2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80223f4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80223f8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80223fa:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 80223fe:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022400:	141b      	asrs	r3, r3, #16
 8022402:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8022406:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802240a:	f100 81d1 	bmi.w	80227b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802240e:	f101 38ff 	add.w	r8, r1, #4294967295
 8022412:	4543      	cmp	r3, r8
 8022414:	f280 81cc 	bge.w	80227b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022418:	f1bc 0f00 	cmp.w	ip, #0
 802241c:	f2c0 81c8 	blt.w	80227b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022420:	f10e 38ff 	add.w	r8, lr, #4294967295
 8022424:	45c4      	cmp	ip, r8
 8022426:	f280 81c3 	bge.w	80227b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802242a:	b209      	sxth	r1, r1
 802242c:	fb0c 3301 	mla	r3, ip, r1, r3
 8022430:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022432:	eb04 0803 	add.w	r8, r4, r3
 8022436:	5ce3      	ldrb	r3, [r4, r3]
 8022438:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802243c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8022440:	2a00      	cmp	r2, #0
 8022442:	f000 81aa 	beq.w	802279a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8022446:	f898 c001 	ldrb.w	ip, [r8, #1]
 802244a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 802244e:	940b      	str	r4, [sp, #44]	; 0x2c
 8022450:	0e24      	lsrs	r4, r4, #24
 8022452:	9412      	str	r4, [sp, #72]	; 0x48
 8022454:	b178      	cbz	r0, 8022476 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8022456:	eb08 0c01 	add.w	ip, r8, r1
 802245a:	f818 1001 	ldrb.w	r1, [r8, r1]
 802245e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022462:	9108      	str	r1, [sp, #32]
 8022464:	0e09      	lsrs	r1, r1, #24
 8022466:	9110      	str	r1, [sp, #64]	; 0x40
 8022468:	f89c 1001 	ldrb.w	r1, [ip, #1]
 802246c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022470:	910c      	str	r1, [sp, #48]	; 0x30
 8022472:	0e09      	lsrs	r1, r1, #24
 8022474:	9113      	str	r1, [sp, #76]	; 0x4c
 8022476:	b292      	uxth	r2, r2
 8022478:	b280      	uxth	r0, r0
 802247a:	fb02 f900 	mul.w	r9, r2, r0
 802247e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8022482:	0112      	lsls	r2, r2, #4
 8022484:	eba2 0809 	sub.w	r8, r2, r9
 8022488:	b280      	uxth	r0, r0
 802248a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802248e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022490:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022492:	fa1f f888 	uxth.w	r8, r8
 8022496:	1a12      	subs	r2, r2, r0
 8022498:	b292      	uxth	r2, r2
 802249a:	fb08 f101 	mul.w	r1, r8, r1
 802249e:	fb02 110e 	mla	r1, r2, lr, r1
 80224a2:	fb00 1104 	mla	r1, r0, r4, r1
 80224a6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80224a8:	fb09 1104 	mla	r1, r9, r4, r1
 80224ac:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80224b0:	2900      	cmp	r1, #0
 80224b2:	f000 80f5 	beq.w	80226a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80224b6:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80224ba:	d01b      	beq.n	80224f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80224bc:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80224c0:	fb0e fa0a 	mul.w	sl, lr, sl
 80224c4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80224c8:	fb0e fe03 	mul.w	lr, lr, r3
 80224cc:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80224d0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80224d4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80224d8:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80224dc:	4453      	add	r3, sl
 80224de:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80224e2:	0a1b      	lsrs	r3, r3, #8
 80224e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80224e8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80224ec:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80224f0:	ea43 030c 	orr.w	r3, r3, ip
 80224f4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80224f6:	2cff      	cmp	r4, #255	; 0xff
 80224f8:	d021      	beq.n	802253e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 80224fa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80224fc:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022500:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022502:	fb04 fb0b 	mul.w	fp, r4, fp
 8022506:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022508:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802250c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802250e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022512:	fb04 fa0a 	mul.w	sl, r4, sl
 8022516:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802251a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802251e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022522:	44de      	add	lr, fp
 8022524:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022528:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802252c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022530:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022534:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022538:	ea4e 040a 	orr.w	r4, lr, sl
 802253c:	940b      	str	r4, [sp, #44]	; 0x2c
 802253e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022540:	2cff      	cmp	r4, #255	; 0xff
 8022542:	d021      	beq.n	8022588 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8022544:	9c08      	ldr	r4, [sp, #32]
 8022546:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802254a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802254c:	fb04 fb0b 	mul.w	fp, r4, fp
 8022550:	9c08      	ldr	r4, [sp, #32]
 8022552:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022556:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022558:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802255c:	fb04 fa0a 	mul.w	sl, r4, sl
 8022560:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022564:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022568:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802256c:	44de      	add	lr, fp
 802256e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022572:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022576:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802257a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802257e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022582:	ea4e 040a 	orr.w	r4, lr, sl
 8022586:	9408      	str	r4, [sp, #32]
 8022588:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802258a:	2cff      	cmp	r4, #255	; 0xff
 802258c:	d021      	beq.n	80225d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802258e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022590:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022594:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022596:	fb04 fb0b 	mul.w	fp, r4, fp
 802259a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802259c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80225a0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80225a2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80225a6:	fb04 fa0a 	mul.w	sl, r4, sl
 80225aa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80225ae:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80225b2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80225b6:	44de      	add	lr, fp
 80225b8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80225bc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80225c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80225c4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80225c8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80225cc:	ea4e 040a 	orr.w	r4, lr, sl
 80225d0:	940c      	str	r4, [sp, #48]	; 0x30
 80225d2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80225d4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80225d8:	9c08      	ldr	r4, [sp, #32]
 80225da:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80225de:	fb08 fc0c 	mul.w	ip, r8, ip
 80225e2:	fb02 cc0e 	mla	ip, r2, lr, ip
 80225e6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80225ea:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80225ec:	fb00 cc0e 	mla	ip, r0, lr, ip
 80225f0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80225f4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80225f6:	fb09 cc0e 	mla	ip, r9, lr, ip
 80225fa:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80225fe:	fb08 f80e 	mul.w	r8, r8, lr
 8022602:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022606:	fb02 8303 	mla	r3, r2, r3, r8
 802260a:	9a08      	ldr	r2, [sp, #32]
 802260c:	f8b7 8000 	ldrh.w	r8, [r7]
 8022610:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022614:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022616:	fb00 330a 	mla	r3, r0, sl, r3
 802261a:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 802261e:	fb09 3900 	mla	r9, r9, r0, r3
 8022622:	43c9      	mvns	r1, r1
 8022624:	ea4f 2228 	mov.w	r2, r8, asr #8
 8022628:	fa5f fe81 	uxtb.w	lr, r1
 802262c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022630:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022634:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022638:	fb02 f20e 	mul.w	r2, r2, lr
 802263c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022640:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8022644:	ea4c 0c09 	orr.w	ip, ip, r9
 8022648:	1c53      	adds	r3, r2, #1
 802264a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 802264e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8022652:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8022656:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802265a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802265e:	4a63      	ldr	r2, [pc, #396]	; (80227ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8022660:	fb00 f00e 	mul.w	r0, r0, lr
 8022664:	b2db      	uxtb	r3, r3
 8022666:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 802266a:	1c43      	adds	r3, r0, #1
 802266c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8022670:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8022674:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8022678:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802267c:	b2c9      	uxtb	r1, r1
 802267e:	00db      	lsls	r3, r3, #3
 8022680:	fb01 f10e 	mul.w	r1, r1, lr
 8022684:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022688:	4313      	orrs	r3, r2
 802268a:	1c4a      	adds	r2, r1, #1
 802268c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022690:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8022694:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8022698:	ea4c 0c03 	orr.w	ip, ip, r3
 802269c:	f8a7 c000 	strh.w	ip, [r7]
 80226a0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80226a2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80226a4:	441a      	add	r2, r3
 80226a6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80226a8:	9225      	str	r2, [sp, #148]	; 0x94
 80226aa:	441d      	add	r5, r3
 80226ac:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80226ae:	3b01      	subs	r3, #1
 80226b0:	3702      	adds	r7, #2
 80226b2:	9317      	str	r3, [sp, #92]	; 0x5c
 80226b4:	e699      	b.n	80223ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80226b6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80226b8:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80226ba:	441c      	add	r4, r3
 80226bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80226be:	9425      	str	r4, [sp, #148]	; 0x94
 80226c0:	441d      	add	r5, r3
 80226c2:	9b07      	ldr	r3, [sp, #28]
 80226c4:	3b01      	subs	r3, #1
 80226c6:	9307      	str	r3, [sp, #28]
 80226c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80226ca:	3302      	adds	r3, #2
 80226cc:	930a      	str	r3, [sp, #40]	; 0x28
 80226ce:	e66b      	b.n	80223a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80226d0:	d024      	beq.n	802271c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 80226d2:	9b07      	ldr	r3, [sp, #28]
 80226d4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80226d6:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80226d8:	3b01      	subs	r3, #1
 80226da:	fb00 4003 	mla	r0, r0, r3, r4
 80226de:	1400      	asrs	r0, r0, #16
 80226e0:	f53f ae80 	bmi.w	80223e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80226e4:	3901      	subs	r1, #1
 80226e6:	4288      	cmp	r0, r1
 80226e8:	f6bf ae7c 	bge.w	80223e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80226ec:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80226ee:	fb01 5303 	mla	r3, r1, r3, r5
 80226f2:	141b      	asrs	r3, r3, #16
 80226f4:	f53f ae76 	bmi.w	80223e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80226f8:	3a01      	subs	r2, #1
 80226fa:	4293      	cmp	r3, r2
 80226fc:	f6bf ae72 	bge.w	80223e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022700:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8022704:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8022708:	f1bb 0f00 	cmp.w	fp, #0
 802270c:	dc70      	bgt.n	80227f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 802270e:	9b07      	ldr	r3, [sp, #28]
 8022710:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022714:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022716:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802271a:	930a      	str	r3, [sp, #40]	; 0x28
 802271c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802271e:	2b00      	cmp	r3, #0
 8022720:	f340 81ae 	ble.w	8022a80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8022724:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022728:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802272c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022730:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022732:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022736:	ee31 1a05 	vadd.f32	s2, s2, s10
 802273a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802273e:	eef0 6a62 	vmov.f32	s13, s5
 8022742:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022746:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802274a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802274e:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8022752:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022756:	eef0 6a43 	vmov.f32	s13, s6
 802275a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802275e:	ee12 2a90 	vmov	r2, s5
 8022762:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022766:	fb92 f3f3 	sdiv	r3, r2, r3
 802276a:	ee13 2a10 	vmov	r2, s6
 802276e:	9327      	str	r3, [sp, #156]	; 0x9c
 8022770:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022772:	fb92 f3f3 	sdiv	r3, r2, r3
 8022776:	9328      	str	r3, [sp, #160]	; 0xa0
 8022778:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802277a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 802277c:	3b01      	subs	r3, #1
 802277e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022782:	9316      	str	r3, [sp, #88]	; 0x58
 8022784:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022786:	bf08      	it	eq
 8022788:	4613      	moveq	r3, r2
 802278a:	ee16 5a90 	vmov	r5, s13
 802278e:	9307      	str	r3, [sp, #28]
 8022790:	eeb0 3a67 	vmov.f32	s6, s15
 8022794:	eef0 2a47 	vmov.f32	s5, s14
 8022798:	e5f8      	b.n	802238c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 802279a:	2800      	cmp	r0, #0
 802279c:	f43f ae6b 	beq.w	8022476 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80227a0:	f818 1001 	ldrb.w	r1, [r8, r1]
 80227a4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80227a8:	9108      	str	r1, [sp, #32]
 80227aa:	0e09      	lsrs	r1, r1, #24
 80227ac:	9110      	str	r1, [sp, #64]	; 0x40
 80227ae:	e662      	b.n	8022476 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80227b0:	f113 0801 	adds.w	r8, r3, #1
 80227b4:	f53f af74 	bmi.w	80226a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80227b8:	4541      	cmp	r1, r8
 80227ba:	f6ff af71 	blt.w	80226a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80227be:	f11c 0801 	adds.w	r8, ip, #1
 80227c2:	f53f af6d 	bmi.w	80226a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80227c6:	45c6      	cmp	lr, r8
 80227c8:	f6ff af6a 	blt.w	80226a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80227cc:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 80227d0:	b209      	sxth	r1, r1
 80227d2:	fa0f f38e 	sxth.w	r3, lr
 80227d6:	e9cd 2004 	strd	r2, r0, [sp, #16]
 80227da:	9301      	str	r3, [sp, #4]
 80227dc:	9100      	str	r1, [sp, #0]
 80227de:	4633      	mov	r3, r6
 80227e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80227e2:	9819      	ldr	r0, [sp, #100]	; 0x64
 80227e4:	4639      	mov	r1, r7
 80227e6:	f7ff fc7a 	bl	80220de <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80227ea:	e759      	b.n	80226a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80227ec:	fffff800 	.word	0xfffff800
 80227f0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80227f2:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80227f4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80227f8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80227fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80227fe:	1427      	asrs	r7, r4, #16
 8022800:	142b      	asrs	r3, r5, #16
 8022802:	fb01 7303 	mla	r3, r1, r3, r7
 8022806:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022808:	18e7      	adds	r7, r4, r3
 802280a:	5ce3      	ldrb	r3, [r4, r3]
 802280c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8022810:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022814:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8022818:	2a00      	cmp	r2, #0
 802281a:	f000 8127 	beq.w	8022a6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802281e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8022822:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8022826:	940d      	str	r4, [sp, #52]	; 0x34
 8022828:	0e24      	lsrs	r4, r4, #24
 802282a:	9414      	str	r4, [sp, #80]	; 0x50
 802282c:	b170      	cbz	r0, 802284c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802282e:	eb07 0e01 	add.w	lr, r7, r1
 8022832:	5c79      	ldrb	r1, [r7, r1]
 8022834:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022838:	9109      	str	r1, [sp, #36]	; 0x24
 802283a:	0e09      	lsrs	r1, r1, #24
 802283c:	9111      	str	r1, [sp, #68]	; 0x44
 802283e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8022842:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022846:	910e      	str	r1, [sp, #56]	; 0x38
 8022848:	0e09      	lsrs	r1, r1, #24
 802284a:	9115      	str	r1, [sp, #84]	; 0x54
 802284c:	b292      	uxth	r2, r2
 802284e:	b280      	uxth	r0, r0
 8022850:	fb02 f800 	mul.w	r8, r2, r0
 8022854:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8022858:	0112      	lsls	r2, r2, #4
 802285a:	eba2 0e08 	sub.w	lr, r2, r8
 802285e:	b280      	uxth	r0, r0
 8022860:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8022864:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022866:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022868:	fa1f fe8e 	uxth.w	lr, lr
 802286c:	1a09      	subs	r1, r1, r0
 802286e:	b289      	uxth	r1, r1
 8022870:	fb0e f202 	mul.w	r2, lr, r2
 8022874:	fb01 220c 	mla	r2, r1, ip, r2
 8022878:	fb00 2204 	mla	r2, r0, r4, r2
 802287c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802287e:	fb08 2204 	mla	r2, r8, r4, r2
 8022882:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8022886:	2a00      	cmp	r2, #0
 8022888:	f000 80e5 	beq.w	8022a56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 802288c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8022890:	d019      	beq.n	80228c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8022892:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022896:	fb0c fa0a 	mul.w	sl, ip, sl
 802289a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802289e:	fb0c fc03 	mul.w	ip, ip, r3
 80228a2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80228a6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80228aa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80228ae:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80228b2:	4453      	add	r3, sl
 80228b4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80228b8:	0a1b      	lsrs	r3, r3, #8
 80228ba:	0a3f      	lsrs	r7, r7, #8
 80228bc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80228c0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80228c4:	433b      	orrs	r3, r7
 80228c6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80228c8:	2cff      	cmp	r4, #255	; 0xff
 80228ca:	d020      	beq.n	802290e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 80228cc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80228ce:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80228d2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80228d4:	4367      	muls	r7, r4
 80228d6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80228d8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80228dc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80228de:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80228e2:	fb04 fa0a 	mul.w	sl, r4, sl
 80228e6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80228ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80228ee:	44bc      	add	ip, r7
 80228f0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80228f4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80228f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80228fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022900:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022904:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022908:	ea4c 040a 	orr.w	r4, ip, sl
 802290c:	940d      	str	r4, [sp, #52]	; 0x34
 802290e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022910:	2cff      	cmp	r4, #255	; 0xff
 8022912:	d020      	beq.n	8022956 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8022914:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8022916:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802291a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802291c:	4367      	muls	r7, r4
 802291e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8022920:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022924:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022926:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802292a:	fb04 fa0a 	mul.w	sl, r4, sl
 802292e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022932:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022936:	44bc      	add	ip, r7
 8022938:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802293c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022940:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022944:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022948:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802294c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022950:	ea4c 040a 	orr.w	r4, ip, sl
 8022954:	9409      	str	r4, [sp, #36]	; 0x24
 8022956:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022958:	2cff      	cmp	r4, #255	; 0xff
 802295a:	d020      	beq.n	802299e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 802295c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802295e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022962:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022964:	4367      	muls	r7, r4
 8022966:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022968:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802296c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802296e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022972:	fb04 fa0a 	mul.w	sl, r4, sl
 8022976:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802297a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802297e:	44bc      	add	ip, r7
 8022980:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022984:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022988:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802298c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022990:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022994:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022998:	ea4c 040a 	orr.w	r4, ip, sl
 802299c:	940e      	str	r4, [sp, #56]	; 0x38
 802299e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80229a0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80229a4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80229a6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80229aa:	fb0e f707 	mul.w	r7, lr, r7
 80229ae:	fb01 770c 	mla	r7, r1, ip, r7
 80229b2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80229b6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80229b8:	fb00 770c 	mla	r7, r0, ip, r7
 80229bc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80229c0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80229c2:	fb08 770c 	mla	r7, r8, ip, r7
 80229c6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80229ca:	fb0e fe0c 	mul.w	lr, lr, ip
 80229ce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80229d2:	fb01 e303 	mla	r3, r1, r3, lr
 80229d6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80229d8:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80229dc:	990e      	ldr	r1, [sp, #56]	; 0x38
 80229de:	fb00 330a 	mla	r3, r0, sl, r3
 80229e2:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80229e6:	fb08 3c0c 	mla	ip, r8, ip, r3
 80229ea:	f8b9 3000 	ldrh.w	r3, [r9]
 80229ee:	43d2      	mvns	r2, r2
 80229f0:	1218      	asrs	r0, r3, #8
 80229f2:	b2d2      	uxtb	r2, r2
 80229f4:	10d9      	asrs	r1, r3, #3
 80229f6:	0a3f      	lsrs	r7, r7, #8
 80229f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80229fc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022a00:	00db      	lsls	r3, r3, #3
 8022a02:	4350      	muls	r0, r2
 8022a04:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8022a08:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022a0c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022a10:	b2db      	uxtb	r3, r3
 8022a12:	ea47 070c 	orr.w	r7, r7, ip
 8022a16:	4351      	muls	r1, r2
 8022a18:	4353      	muls	r3, r2
 8022a1a:	1c42      	adds	r2, r0, #1
 8022a1c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022a20:	0c3a      	lsrs	r2, r7, #16
 8022a22:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022a26:	4a18      	ldr	r2, [pc, #96]	; (8022a88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8022a28:	b2c0      	uxtb	r0, r0
 8022a2a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8022a2e:	1c4a      	adds	r2, r1, #1
 8022a30:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022a34:	0a3a      	lsrs	r2, r7, #8
 8022a36:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022a3a:	00c9      	lsls	r1, r1, #3
 8022a3c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022a40:	4301      	orrs	r1, r0
 8022a42:	1c58      	adds	r0, r3, #1
 8022a44:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022a48:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8022a4c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8022a50:	4308      	orrs	r0, r1
 8022a52:	f8a9 0000 	strh.w	r0, [r9]
 8022a56:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022a58:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8022a5a:	441a      	add	r2, r3
 8022a5c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022a5e:	9225      	str	r2, [sp, #148]	; 0x94
 8022a60:	f109 0902 	add.w	r9, r9, #2
 8022a64:	441d      	add	r5, r3
 8022a66:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022a6a:	e64d      	b.n	8022708 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8022a6c:	2800      	cmp	r0, #0
 8022a6e:	f43f aeed 	beq.w	802284c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022a72:	5c79      	ldrb	r1, [r7, r1]
 8022a74:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022a78:	9109      	str	r1, [sp, #36]	; 0x24
 8022a7a:	0e09      	lsrs	r1, r1, #24
 8022a7c:	9111      	str	r1, [sp, #68]	; 0x44
 8022a7e:	e6e5      	b.n	802284c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022a80:	b01b      	add	sp, #108	; 0x6c
 8022a82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022a86:	bf00      	nop
 8022a88:	fffff800 	.word	0xfffff800

08022a8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8022a8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022a90:	b085      	sub	sp, #20
 8022a92:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8022a96:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8022a9a:	9103      	str	r1, [sp, #12]
 8022a9c:	fb00 7406 	mla	r4, r0, r6, r7
 8022aa0:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8022aa4:	2800      	cmp	r0, #0
 8022aa6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8022aaa:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8022aae:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8022ab2:	9501      	str	r5, [sp, #4]
 8022ab4:	eb03 0904 	add.w	r9, r3, r4
 8022ab8:	f2c0 8150 	blt.w	8022d5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8022abc:	4583      	cmp	fp, r0
 8022abe:	f340 814d 	ble.w	8022d5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8022ac2:	2f00      	cmp	r7, #0
 8022ac4:	f2c0 8146 	blt.w	8022d54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8022ac8:	42be      	cmp	r6, r7
 8022aca:	f340 8143 	ble.w	8022d54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8022ace:	f813 c004 	ldrb.w	ip, [r3, r4]
 8022ad2:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8022ad6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022ada:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8022ade:	4355      	muls	r5, r2
 8022ae0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022ae4:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8022ae8:	fb0c f203 	mul.w	r2, ip, r3
 8022aec:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8022af0:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8022af4:	441d      	add	r5, r3
 8022af6:	f102 0320 	add.w	r3, r2, #32
 8022afa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022afe:	0a1b      	lsrs	r3, r3, #8
 8022b00:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8022b04:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022b08:	431c      	orrs	r4, r3
 8022b0a:	1c7b      	adds	r3, r7, #1
 8022b0c:	f100 812b 	bmi.w	8022d66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8022b10:	429e      	cmp	r6, r3
 8022b12:	f340 8128 	ble.w	8022d66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8022b16:	2900      	cmp	r1, #0
 8022b18:	f000 8128 	beq.w	8022d6c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8022b1c:	9a01      	ldr	r2, [sp, #4]
 8022b1e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8022b22:	8855      	ldrh	r5, [r2, #2]
 8022b24:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8022b28:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8022b2c:	fb08 f802 	mul.w	r8, r8, r2
 8022b30:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022b34:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8022b38:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8022b3c:	435d      	muls	r5, r3
 8022b3e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022b42:	44d0      	add	r8, sl
 8022b44:	f105 0a20 	add.w	sl, r5, #32
 8022b48:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022b4c:	0a2d      	lsrs	r5, r5, #8
 8022b4e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8022b52:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022b56:	432a      	orrs	r2, r5
 8022b58:	3001      	adds	r0, #1
 8022b5a:	f100 810d 	bmi.w	8022d78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022b5e:	4583      	cmp	fp, r0
 8022b60:	f340 810a 	ble.w	8022d78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022b64:	f1be 0f00 	cmp.w	lr, #0
 8022b68:	f000 810b 	beq.w	8022d82 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8022b6c:	2f00      	cmp	r7, #0
 8022b6e:	f2c0 8100 	blt.w	8022d72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8022b72:	42be      	cmp	r6, r7
 8022b74:	f340 80fd 	ble.w	8022d72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8022b78:	9801      	ldr	r0, [sp, #4]
 8022b7a:	f819 5006 	ldrb.w	r5, [r9, r6]
 8022b7e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8022b82:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8022b86:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8022b8a:	fb0a fa00 	mul.w	sl, sl, r0
 8022b8e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8022b92:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8022b96:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8022b9a:	fb05 f808 	mul.w	r8, r5, r8
 8022b9e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8022ba2:	4482      	add	sl, r0
 8022ba4:	f108 0020 	add.w	r0, r8, #32
 8022ba8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022bac:	0a00      	lsrs	r0, r0, #8
 8022bae:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8022bb2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022bb6:	ea4b 0b00 	orr.w	fp, fp, r0
 8022bba:	3701      	adds	r7, #1
 8022bbc:	f100 80e6 	bmi.w	8022d8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8022bc0:	42be      	cmp	r6, r7
 8022bc2:	f340 80e3 	ble.w	8022d8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8022bc6:	2900      	cmp	r1, #0
 8022bc8:	f000 80e3 	beq.w	8022d92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8022bcc:	3601      	adds	r6, #1
 8022bce:	9801      	ldr	r0, [sp, #4]
 8022bd0:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022bd4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8022bd8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022bdc:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8022be0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022be4:	fb09 f906 	mul.w	r9, r9, r6
 8022be8:	fb07 f800 	mul.w	r8, r7, r0
 8022bec:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8022bf0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8022bf4:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8022bf8:	44d1      	add	r9, sl
 8022bfa:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8022bfe:	f108 0020 	add.w	r0, r8, #32
 8022c02:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022c06:	0a00      	lsrs	r0, r0, #8
 8022c08:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022c0c:	4330      	orrs	r0, r6
 8022c0e:	b28e      	uxth	r6, r1
 8022c10:	fa1f f98e 	uxth.w	r9, lr
 8022c14:	fb06 f809 	mul.w	r8, r6, r9
 8022c18:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8022c1c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8022c20:	0136      	lsls	r6, r6, #4
 8022c22:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022c26:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8022c2a:	9601      	str	r6, [sp, #4]
 8022c2c:	ea4a 0404 	orr.w	r4, sl, r4
 8022c30:	fa1f f689 	uxth.w	r6, r9
 8022c34:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022c38:	fb11 f90e 	smulbb	r9, r1, lr
 8022c3c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8022c40:	9602      	str	r6, [sp, #8]
 8022c42:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022c46:	4626      	mov	r6, r4
 8022c48:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022c4c:	f1ce 0410 	rsb	r4, lr, #16
 8022c50:	1a64      	subs	r4, r4, r1
 8022c52:	ea4a 0202 	orr.w	r2, sl, r2
 8022c56:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8022c5a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022c5e:	434a      	muls	r2, r1
 8022c60:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022c64:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022c68:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022c6c:	fb04 2406 	mla	r4, r4, r6, r2
 8022c70:	ea4a 0000 	orr.w	r0, sl, r0
 8022c74:	fb09 4200 	mla	r2, r9, r0, r4
 8022c78:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8022c7c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022c80:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022c84:	ea44 0b0b 	orr.w	fp, r4, fp
 8022c88:	9c01      	ldr	r4, [sp, #4]
 8022c8a:	9e02      	ldr	r6, [sp, #8]
 8022c8c:	9903      	ldr	r1, [sp, #12]
 8022c8e:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8022c92:	1ba4      	subs	r4, r4, r6
 8022c94:	9e01      	ldr	r6, [sp, #4]
 8022c96:	8808      	ldrh	r0, [r1, #0]
 8022c98:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8022c9c:	eba6 0608 	sub.w	r6, r6, r8
 8022ca0:	b2b6      	uxth	r6, r6
 8022ca2:	b2a4      	uxth	r4, r4
 8022ca4:	4373      	muls	r3, r6
 8022ca6:	fb0c 3304 	mla	r3, ip, r4, r3
 8022caa:	9c02      	ldr	r4, [sp, #8]
 8022cac:	fb04 3505 	mla	r5, r4, r5, r3
 8022cb0:	fb08 5707 	mla	r7, r8, r7, r5
 8022cb4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8022cb8:	b289      	uxth	r1, r1
 8022cba:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8022cbe:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8022cc2:	434f      	muls	r7, r1
 8022cc4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022cc8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022ccc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022cd0:	1c7b      	adds	r3, r7, #1
 8022cd2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022cd6:	ea42 0e0e 	orr.w	lr, r2, lr
 8022cda:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8022cde:	fa1f f28e 	uxth.w	r2, lr
 8022ce2:	1203      	asrs	r3, r0, #8
 8022ce4:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8022ce8:	b2ff      	uxtb	r7, r7
 8022cea:	1215      	asrs	r5, r2, #8
 8022cec:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022cf0:	fb13 f307 	smulbb	r3, r3, r7
 8022cf4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022cf8:	fb05 3501 	mla	r5, r5, r1, r3
 8022cfc:	10c3      	asrs	r3, r0, #3
 8022cfe:	10d4      	asrs	r4, r2, #3
 8022d00:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8022d04:	fb13 f307 	smulbb	r3, r3, r7
 8022d08:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8022d0c:	fb04 3401 	mla	r4, r4, r1, r3
 8022d10:	00c3      	lsls	r3, r0, #3
 8022d12:	00d2      	lsls	r2, r2, #3
 8022d14:	b2db      	uxtb	r3, r3
 8022d16:	fb13 f307 	smulbb	r3, r3, r7
 8022d1a:	b2d2      	uxtb	r2, r2
 8022d1c:	fb02 3101 	mla	r1, r2, r1, r3
 8022d20:	b2ad      	uxth	r5, r5
 8022d22:	b289      	uxth	r1, r1
 8022d24:	b2a4      	uxth	r4, r4
 8022d26:	1c6b      	adds	r3, r5, #1
 8022d28:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022d2c:	1c62      	adds	r2, r4, #1
 8022d2e:	1c4b      	adds	r3, r1, #1
 8022d30:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022d34:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8022d38:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022d3c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022d40:	0964      	lsrs	r4, r4, #5
 8022d42:	432b      	orrs	r3, r5
 8022d44:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8022d48:	9a03      	ldr	r2, [sp, #12]
 8022d4a:	4323      	orrs	r3, r4
 8022d4c:	8013      	strh	r3, [r2, #0]
 8022d4e:	b005      	add	sp, #20
 8022d50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022d54:	f04f 0c00 	mov.w	ip, #0
 8022d58:	4664      	mov	r4, ip
 8022d5a:	e6d6      	b.n	8022b0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8022d5c:	2300      	movs	r3, #0
 8022d5e:	469c      	mov	ip, r3
 8022d60:	461a      	mov	r2, r3
 8022d62:	461c      	mov	r4, r3
 8022d64:	e6f8      	b.n	8022b58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8022d66:	2300      	movs	r3, #0
 8022d68:	461a      	mov	r2, r3
 8022d6a:	e6f5      	b.n	8022b58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8022d6c:	460b      	mov	r3, r1
 8022d6e:	460a      	mov	r2, r1
 8022d70:	e6f2      	b.n	8022b58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8022d72:	2500      	movs	r5, #0
 8022d74:	46ab      	mov	fp, r5
 8022d76:	e720      	b.n	8022bba <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8022d78:	2700      	movs	r7, #0
 8022d7a:	463d      	mov	r5, r7
 8022d7c:	4638      	mov	r0, r7
 8022d7e:	46bb      	mov	fp, r7
 8022d80:	e745      	b.n	8022c0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8022d82:	4677      	mov	r7, lr
 8022d84:	4675      	mov	r5, lr
 8022d86:	4670      	mov	r0, lr
 8022d88:	46f3      	mov	fp, lr
 8022d8a:	e740      	b.n	8022c0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8022d8c:	2700      	movs	r7, #0
 8022d8e:	4638      	mov	r0, r7
 8022d90:	e73d      	b.n	8022c0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8022d92:	460f      	mov	r7, r1
 8022d94:	4608      	mov	r0, r1
 8022d96:	e73a      	b.n	8022c0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08022d98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022d98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022d9c:	b097      	sub	sp, #92	; 0x5c
 8022d9e:	9214      	str	r2, [sp, #80]	; 0x50
 8022da0:	9308      	str	r3, [sp, #32]
 8022da2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8022da4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8022da8:	9312      	str	r3, [sp, #72]	; 0x48
 8022daa:	9111      	str	r1, [sp, #68]	; 0x44
 8022dac:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8022db0:	9015      	str	r0, [sp, #84]	; 0x54
 8022db2:	6850      	ldr	r0, [r2, #4]
 8022db4:	6812      	ldr	r2, [r2, #0]
 8022db6:	fb00 1303 	mla	r3, r0, r3, r1
 8022dba:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022dbe:	9309      	str	r3, [sp, #36]	; 0x24
 8022dc0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022dc2:	681b      	ldr	r3, [r3, #0]
 8022dc4:	930b      	str	r3, [sp, #44]	; 0x2c
 8022dc6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022dc8:	685b      	ldr	r3, [r3, #4]
 8022dca:	930c      	str	r3, [sp, #48]	; 0x30
 8022dcc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8022dd0:	930a      	str	r3, [sp, #40]	; 0x28
 8022dd2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022dd4:	2b00      	cmp	r3, #0
 8022dd6:	dc03      	bgt.n	8022de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022dd8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8022dda:	2b00      	cmp	r3, #0
 8022ddc:	f340 83cb 	ble.w	8023576 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8022de0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022de2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022de6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022dea:	1e48      	subs	r0, r1, #1
 8022dec:	1e55      	subs	r5, r2, #1
 8022dee:	9b08      	ldr	r3, [sp, #32]
 8022df0:	2b00      	cmp	r3, #0
 8022df2:	f340 81a3 	ble.w	802313c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8022df6:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8022df8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022dfa:	1436      	asrs	r6, r6, #16
 8022dfc:	ea4f 4323 	mov.w	r3, r3, asr #16
 8022e00:	d406      	bmi.n	8022e10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022e02:	4286      	cmp	r6, r0
 8022e04:	da04      	bge.n	8022e10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022e06:	2b00      	cmp	r3, #0
 8022e08:	db02      	blt.n	8022e10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022e0a:	42ab      	cmp	r3, r5
 8022e0c:	f2c0 8197 	blt.w	802313e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8022e10:	3601      	adds	r6, #1
 8022e12:	f100 8184 	bmi.w	802311e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8022e16:	42b1      	cmp	r1, r6
 8022e18:	f2c0 8181 	blt.w	802311e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8022e1c:	3301      	adds	r3, #1
 8022e1e:	f100 817e 	bmi.w	802311e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8022e22:	429a      	cmp	r2, r3
 8022e24:	f2c0 817b 	blt.w	802311e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8022e28:	9b08      	ldr	r3, [sp, #32]
 8022e2a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8022e2c:	9313      	str	r3, [sp, #76]	; 0x4c
 8022e2e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8022e32:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022e34:	2b00      	cmp	r3, #0
 8022e36:	f340 81a4 	ble.w	8023182 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8022e3a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022e3c:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8022e3e:	1418      	asrs	r0, r3, #16
 8022e40:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022e42:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8022e46:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022e48:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8022e4c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022e4e:	142d      	asrs	r5, r5, #16
 8022e50:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8022e54:	f100 81f8 	bmi.w	8023248 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022e58:	f102 3eff 	add.w	lr, r2, #4294967295
 8022e5c:	4575      	cmp	r5, lr
 8022e5e:	f280 81f3 	bge.w	8023248 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022e62:	2800      	cmp	r0, #0
 8022e64:	f2c0 81f0 	blt.w	8023248 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022e68:	f103 3eff 	add.w	lr, r3, #4294967295
 8022e6c:	4570      	cmp	r0, lr
 8022e6e:	f280 81eb 	bge.w	8023248 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022e72:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022e74:	b212      	sxth	r2, r2
 8022e76:	fb00 5002 	mla	r0, r0, r2, r5
 8022e7a:	fa1f fe81 	uxth.w	lr, r1
 8022e7e:	eb03 0a00 	add.w	sl, r3, r0
 8022e82:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8022e86:	f813 9000 	ldrb.w	r9, [r3, r0]
 8022e8a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022e8e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8022e92:	b29b      	uxth	r3, r3
 8022e94:	f1bc 0f00 	cmp.w	ip, #0
 8022e98:	f000 81b9 	beq.w	802320e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8022e9c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8022ea0:	940d      	str	r4, [sp, #52]	; 0x34
 8022ea2:	eb0a 0b02 	add.w	fp, sl, r2
 8022ea6:	fa1f fa8c 	uxth.w	sl, ip
 8022eaa:	fb0a fe0e 	mul.w	lr, sl, lr
 8022eae:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8022eb2:	fa1f fa8a 	uxth.w	sl, sl
 8022eb6:	eba5 050e 	sub.w	r5, r5, lr
 8022eba:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022ebe:	940e      	str	r4, [sp, #56]	; 0x38
 8022ec0:	eba3 030a 	sub.w	r3, r3, sl
 8022ec4:	b2ad      	uxth	r5, r5
 8022ec6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022ec8:	b29b      	uxth	r3, r3
 8022eca:	fb08 f505 	mul.w	r5, r8, r5
 8022ece:	fb09 5303 	mla	r3, r9, r3, r5
 8022ed2:	fb0a 3304 	mla	r3, sl, r4, r3
 8022ed6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022ed8:	fb0e 3304 	mla	r3, lr, r4, r3
 8022edc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022ee0:	2b00      	cmp	r3, #0
 8022ee2:	f000 810f 	beq.w	8023104 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022ee6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022ee8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022eec:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8022ef0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8022ef4:	f000 8190 	beq.w	8023218 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8022ef8:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022efc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022f00:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022f04:	fb09 f000 	mul.w	r0, r9, r0
 8022f08:	fb0a fe0e 	mul.w	lr, sl, lr
 8022f0c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8022f10:	f100 0b20 	add.w	fp, r0, #32
 8022f14:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8022f18:	44ce      	add	lr, r9
 8022f1a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8022f1e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022f22:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8022f26:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022f2a:	ea4e 0909 	orr.w	r9, lr, r9
 8022f2e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022f32:	8868      	ldrh	r0, [r5, #2]
 8022f34:	d019      	beq.n	8022f6a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8022f36:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022f3a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022f3e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022f42:	fb08 f800 	mul.w	r8, r8, r0
 8022f46:	fb0a fe0e 	mul.w	lr, sl, lr
 8022f4a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8022f4e:	f108 0b20 	add.w	fp, r8, #32
 8022f52:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8022f56:	4486      	add	lr, r0
 8022f58:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8022f5c:	0a00      	lsrs	r0, r0, #8
 8022f5e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8022f62:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022f66:	ea4e 0000 	orr.w	r0, lr, r0
 8022f6a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8022f6e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022f72:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022f76:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022f7a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022f7e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022f82:	ea4e 0909 	orr.w	r9, lr, r9
 8022f86:	ea4a 0000 	orr.w	r0, sl, r0
 8022f8a:	f1bc 0f00 	cmp.w	ip, #0
 8022f8e:	f000 8145 	beq.w	802321c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8022f92:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8022f96:	3a01      	subs	r2, #1
 8022f98:	0052      	lsls	r2, r2, #1
 8022f9a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022f9c:	3202      	adds	r2, #2
 8022f9e:	2cff      	cmp	r4, #255	; 0xff
 8022fa0:	eb05 0e02 	add.w	lr, r5, r2
 8022fa4:	5aaa      	ldrh	r2, [r5, r2]
 8022fa6:	d018      	beq.n	8022fda <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8022fa8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8022fac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022fb0:	fb04 fa02 	mul.w	sl, r4, r2
 8022fb4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022fb8:	fb08 f805 	mul.w	r8, r8, r5
 8022fbc:	f10a 0520 	add.w	r5, sl, #32
 8022fc0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8022fc4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8022fc8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022fcc:	4442      	add	r2, r8
 8022fce:	0a2d      	lsrs	r5, r5, #8
 8022fd0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8022fd4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022fd8:	432a      	orrs	r2, r5
 8022fda:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022fdc:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8022fe0:	2cff      	cmp	r4, #255	; 0xff
 8022fe2:	d01a      	beq.n	802301a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8022fe4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8022fe8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022fec:	fb04 fa05 	mul.w	sl, r4, r5
 8022ff0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022ff4:	fb08 f80e 	mul.w	r8, r8, lr
 8022ff8:	f10a 0e20 	add.w	lr, sl, #32
 8022ffc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8023000:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8023004:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023008:	4445      	add	r5, r8
 802300a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802300e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8023012:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8023016:	ea45 050e 	orr.w	r5, r5, lr
 802301a:	fb1c fe01 	smulbb	lr, ip, r1
 802301e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8023022:	f1cc 0810 	rsb	r8, ip, #16
 8023026:	eba8 0801 	sub.w	r8, r8, r1
 802302a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802302e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8023032:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8023036:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802303a:	4341      	muls	r1, r0
 802303c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023040:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023044:	ea4a 0202 	orr.w	r2, sl, r2
 8023048:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 802304c:	fb09 1108 	mla	r1, r9, r8, r1
 8023050:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023054:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8023058:	fb0c 1102 	mla	r1, ip, r2, r1
 802305c:	ea4b 0505 	orr.w	r5, fp, r5
 8023060:	fb0e 1e05 	mla	lr, lr, r5, r1
 8023064:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023068:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802306c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023070:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023074:	ea42 0e0e 	orr.w	lr, r2, lr
 8023078:	fa1f f28e 	uxth.w	r2, lr
 802307c:	2bff      	cmp	r3, #255	; 0xff
 802307e:	d103      	bne.n	8023088 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8023080:	9912      	ldr	r1, [sp, #72]	; 0x48
 8023082:	29ff      	cmp	r1, #255	; 0xff
 8023084:	f000 80de 	beq.w	8023244 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8023088:	990a      	ldr	r1, [sp, #40]	; 0x28
 802308a:	8838      	ldrh	r0, [r7, #0]
 802308c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802308e:	434b      	muls	r3, r1
 8023090:	f103 0c01 	add.w	ip, r3, #1
 8023094:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8023098:	ea6f 2323 	mvn.w	r3, r3, asr #8
 802309c:	fa5f fc83 	uxtb.w	ip, r3
 80230a0:	1203      	asrs	r3, r0, #8
 80230a2:	1215      	asrs	r5, r2, #8
 80230a4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80230a8:	fb13 f30c 	smulbb	r3, r3, ip
 80230ac:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80230b0:	fb05 3501 	mla	r5, r5, r1, r3
 80230b4:	10c3      	asrs	r3, r0, #3
 80230b6:	10d1      	asrs	r1, r2, #3
 80230b8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80230bc:	fb13 f30c 	smulbb	r3, r3, ip
 80230c0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80230c4:	fb01 3104 	mla	r1, r1, r4, r3
 80230c8:	00c3      	lsls	r3, r0, #3
 80230ca:	00d2      	lsls	r2, r2, #3
 80230cc:	b2db      	uxtb	r3, r3
 80230ce:	b2d2      	uxtb	r2, r2
 80230d0:	fb13 f30c 	smulbb	r3, r3, ip
 80230d4:	b2ad      	uxth	r5, r5
 80230d6:	fb02 3304 	mla	r3, r2, r4, r3
 80230da:	b29a      	uxth	r2, r3
 80230dc:	1c6b      	adds	r3, r5, #1
 80230de:	b289      	uxth	r1, r1
 80230e0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80230e4:	1c53      	adds	r3, r2, #1
 80230e6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80230ea:	1c4a      	adds	r2, r1, #1
 80230ec:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80230f0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80230f4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80230f8:	0949      	lsrs	r1, r1, #5
 80230fa:	432b      	orrs	r3, r5
 80230fc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023100:	430b      	orrs	r3, r1
 8023102:	803b      	strh	r3, [r7, #0]
 8023104:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023106:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8023108:	4413      	add	r3, r2
 802310a:	9321      	str	r3, [sp, #132]	; 0x84
 802310c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802310e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023110:	441a      	add	r2, r3
 8023112:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023114:	9222      	str	r2, [sp, #136]	; 0x88
 8023116:	3b01      	subs	r3, #1
 8023118:	3702      	adds	r7, #2
 802311a:	9313      	str	r3, [sp, #76]	; 0x4c
 802311c:	e689      	b.n	8022e32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802311e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023120:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8023122:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8023124:	4433      	add	r3, r6
 8023126:	9321      	str	r3, [sp, #132]	; 0x84
 8023128:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802312a:	441c      	add	r4, r3
 802312c:	9b08      	ldr	r3, [sp, #32]
 802312e:	9422      	str	r4, [sp, #136]	; 0x88
 8023130:	3b01      	subs	r3, #1
 8023132:	9308      	str	r3, [sp, #32]
 8023134:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023136:	3302      	adds	r3, #2
 8023138:	9309      	str	r3, [sp, #36]	; 0x24
 802313a:	e658      	b.n	8022dee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 802313c:	d028      	beq.n	8023190 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802313e:	9b08      	ldr	r3, [sp, #32]
 8023140:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8023142:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8023144:	3b01      	subs	r3, #1
 8023146:	fb00 5003 	mla	r0, r0, r3, r5
 802314a:	1400      	asrs	r0, r0, #16
 802314c:	f53f ae6c 	bmi.w	8022e28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023150:	3901      	subs	r1, #1
 8023152:	4288      	cmp	r0, r1
 8023154:	f6bf ae68 	bge.w	8022e28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023158:	9924      	ldr	r1, [sp, #144]	; 0x90
 802315a:	9822      	ldr	r0, [sp, #136]	; 0x88
 802315c:	fb01 0303 	mla	r3, r1, r3, r0
 8023160:	141b      	asrs	r3, r3, #16
 8023162:	f53f ae61 	bmi.w	8022e28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023166:	3a01      	subs	r2, #1
 8023168:	4293      	cmp	r3, r2
 802316a:	f6bf ae5d 	bge.w	8022e28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802316e:	9b08      	ldr	r3, [sp, #32]
 8023170:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8023174:	9313      	str	r3, [sp, #76]	; 0x4c
 8023176:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802317a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 802317c:	2b00      	cmp	r3, #0
 802317e:	f300 8082 	bgt.w	8023286 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8023182:	9b08      	ldr	r3, [sp, #32]
 8023184:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023188:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802318a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802318e:	9309      	str	r3, [sp, #36]	; 0x24
 8023190:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023192:	2b00      	cmp	r3, #0
 8023194:	f340 81ef 	ble.w	8023576 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8023198:	ee30 0a04 	vadd.f32	s0, s0, s8
 802319c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80231a0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80231a4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80231a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80231aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80231ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80231b2:	eef0 6a62 	vmov.f32	s13, s5
 80231b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80231ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80231be:	ee77 2a62 	vsub.f32	s5, s14, s5
 80231c2:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 80231c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80231ca:	eef0 6a43 	vmov.f32	s13, s6
 80231ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80231d2:	ee12 2a90 	vmov	r2, s5
 80231d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80231da:	fb92 f3f3 	sdiv	r3, r2, r3
 80231de:	ee13 2a10 	vmov	r2, s6
 80231e2:	9323      	str	r3, [sp, #140]	; 0x8c
 80231e4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80231e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80231ea:	9324      	str	r3, [sp, #144]	; 0x90
 80231ec:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80231ee:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80231f0:	3b01      	subs	r3, #1
 80231f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80231f6:	9311      	str	r3, [sp, #68]	; 0x44
 80231f8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80231fa:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 80231fe:	bf08      	it	eq
 8023200:	4613      	moveq	r3, r2
 8023202:	9308      	str	r3, [sp, #32]
 8023204:	eeb0 3a67 	vmov.f32	s6, s15
 8023208:	eef0 2a47 	vmov.f32	s5, s14
 802320c:	e5e1      	b.n	8022dd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802320e:	fb08 f505 	mul.w	r5, r8, r5
 8023212:	fb09 5303 	mla	r3, r9, r3, r5
 8023216:	e661      	b.n	8022edc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8023218:	4681      	mov	r9, r0
 802321a:	e688      	b.n	8022f2e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 802321c:	f1c1 0210 	rsb	r2, r1, #16
 8023220:	4341      	muls	r1, r0
 8023222:	fb09 1902 	mla	r9, r9, r2, r1
 8023226:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802322a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802322e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8023232:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023236:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802323a:	ea42 0909 	orr.w	r9, r2, r9
 802323e:	fa1f f289 	uxth.w	r2, r9
 8023242:	e71b      	b.n	802307c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8023244:	803a      	strh	r2, [r7, #0]
 8023246:	e75d      	b.n	8023104 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023248:	f115 0e01 	adds.w	lr, r5, #1
 802324c:	f53f af5a 	bmi.w	8023104 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023250:	4572      	cmp	r2, lr
 8023252:	f6ff af57 	blt.w	8023104 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023256:	f110 0e01 	adds.w	lr, r0, #1
 802325a:	f53f af53 	bmi.w	8023104 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802325e:	4573      	cmp	r3, lr
 8023260:	f6ff af50 	blt.w	8023104 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023264:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023266:	9502      	str	r5, [sp, #8]
 8023268:	b21b      	sxth	r3, r3
 802326a:	b212      	sxth	r2, r2
 802326c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8023270:	9301      	str	r3, [sp, #4]
 8023272:	9200      	str	r2, [sp, #0]
 8023274:	e9cd c405 	strd	ip, r4, [sp, #20]
 8023278:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 802327c:	4639      	mov	r1, r7
 802327e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8023280:	f7ff fc04 	bl	8022a8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8023284:	e73e      	b.n	8023104 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023286:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023288:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802328c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802328e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8023292:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023294:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023298:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802329a:	141f      	asrs	r7, r3, #16
 802329c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802329e:	141b      	asrs	r3, r3, #16
 80232a0:	fb01 3707 	mla	r7, r1, r7, r3
 80232a4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80232a6:	fa1f fc82 	uxth.w	ip, r2
 80232aa:	eb03 0a07 	add.w	sl, r3, r7
 80232ae:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80232b2:	f813 9007 	ldrb.w	r9, [r3, r7]
 80232b6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80232ba:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80232be:	b29b      	uxth	r3, r3
 80232c0:	2d00      	cmp	r5, #0
 80232c2:	f000 813d 	beq.w	8023540 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 80232c6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80232ca:	940f      	str	r4, [sp, #60]	; 0x3c
 80232cc:	eb0a 0b01 	add.w	fp, sl, r1
 80232d0:	fa1f fa85 	uxth.w	sl, r5
 80232d4:	fb0a fc0c 	mul.w	ip, sl, ip
 80232d8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80232dc:	fa1f fa8a 	uxth.w	sl, sl
 80232e0:	eba0 000c 	sub.w	r0, r0, ip
 80232e4:	eba3 030a 	sub.w	r3, r3, sl
 80232e8:	b280      	uxth	r0, r0
 80232ea:	fb08 f000 	mul.w	r0, r8, r0
 80232ee:	b29b      	uxth	r3, r3
 80232f0:	fb09 0303 	mla	r3, r9, r3, r0
 80232f4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80232f6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80232fa:	9410      	str	r4, [sp, #64]	; 0x40
 80232fc:	fb0a 3300 	mla	r3, sl, r0, r3
 8023300:	fb0c 3304 	mla	r3, ip, r4, r3
 8023304:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023308:	2b00      	cmp	r3, #0
 802330a:	f000 810b 	beq.w	8023524 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 802330e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8023310:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023312:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023316:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802331a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802331e:	f000 8114 	beq.w	802354a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8023322:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023326:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802332a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802332e:	fb09 f707 	mul.w	r7, r9, r7
 8023332:	fb0a fc0c 	mul.w	ip, sl, ip
 8023336:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802333a:	f107 0b20 	add.w	fp, r7, #32
 802333e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023342:	44cc      	add	ip, r9
 8023344:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8023348:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802334c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023350:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8023354:	ea4c 0909 	orr.w	r9, ip, r9
 8023358:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802335c:	8847      	ldrh	r7, [r0, #2]
 802335e:	d019      	beq.n	8023394 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8023360:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023364:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8023368:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802336c:	fb08 f807 	mul.w	r8, r8, r7
 8023370:	fb0a fc0c 	mul.w	ip, sl, ip
 8023374:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8023378:	f108 0b20 	add.w	fp, r8, #32
 802337c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023380:	44bc      	add	ip, r7
 8023382:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8023386:	0a3f      	lsrs	r7, r7, #8
 8023388:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802338c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023390:	ea4c 0707 	orr.w	r7, ip, r7
 8023394:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8023398:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802339c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80233a0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80233a4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80233a8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80233ac:	ea4c 0909 	orr.w	r9, ip, r9
 80233b0:	ea4a 0707 	orr.w	r7, sl, r7
 80233b4:	2d00      	cmp	r5, #0
 80233b6:	f000 80ca 	beq.w	802354e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 80233ba:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80233be:	3901      	subs	r1, #1
 80233c0:	0049      	lsls	r1, r1, #1
 80233c2:	3102      	adds	r1, #2
 80233c4:	eb00 0c01 	add.w	ip, r0, r1
 80233c8:	5a41      	ldrh	r1, [r0, r1]
 80233ca:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80233cc:	28ff      	cmp	r0, #255	; 0xff
 80233ce:	d019      	beq.n	8023404 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 80233d0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80233d2:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80233d6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80233da:	fb04 fa01 	mul.w	sl, r4, r1
 80233de:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80233e2:	fb08 f800 	mul.w	r8, r8, r0
 80233e6:	f10a 0020 	add.w	r0, sl, #32
 80233ea:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80233ee:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80233f2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80233f6:	4441      	add	r1, r8
 80233f8:	0a00      	lsrs	r0, r0, #8
 80233fa:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80233fe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023402:	4301      	orrs	r1, r0
 8023404:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023406:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802340a:	2cff      	cmp	r4, #255	; 0xff
 802340c:	d01a      	beq.n	8023444 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 802340e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8023412:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023416:	fb04 fa00 	mul.w	sl, r4, r0
 802341a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802341e:	fb08 f80c 	mul.w	r8, r8, ip
 8023422:	f10a 0c20 	add.w	ip, sl, #32
 8023426:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802342a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802342e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023432:	4440      	add	r0, r8
 8023434:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023438:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802343c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023440:	ea40 000c 	orr.w	r0, r0, ip
 8023444:	fb15 fc02 	smulbb	ip, r5, r2
 8023448:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802344c:	f1c5 0810 	rsb	r8, r5, #16
 8023450:	eba8 0802 	sub.w	r8, r8, r2
 8023454:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8023458:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802345c:	437a      	muls	r2, r7
 802345e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023462:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8023466:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802346a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802346e:	fb09 2208 	mla	r2, r9, r8, r2
 8023472:	ea4a 0101 	orr.w	r1, sl, r1
 8023476:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802347a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802347e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023482:	fb05 2201 	mla	r2, r5, r1, r2
 8023486:	ea4b 0000 	orr.w	r0, fp, r0
 802348a:	fb0c 2200 	mla	r2, ip, r0, r2
 802348e:	0d57      	lsrs	r7, r2, #21
 8023490:	0952      	lsrs	r2, r2, #5
 8023492:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023496:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802349a:	433a      	orrs	r2, r7
 802349c:	2bff      	cmp	r3, #255	; 0xff
 802349e:	b292      	uxth	r2, r2
 80234a0:	d102      	bne.n	80234a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80234a2:	9912      	ldr	r1, [sp, #72]	; 0x48
 80234a4:	29ff      	cmp	r1, #255	; 0xff
 80234a6:	d063      	beq.n	8023570 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 80234a8:	980a      	ldr	r0, [sp, #40]	; 0x28
 80234aa:	f8be 1000 	ldrh.w	r1, [lr]
 80234ae:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80234b0:	4343      	muls	r3, r0
 80234b2:	1c58      	adds	r0, r3, #1
 80234b4:	eb00 2323 	add.w	r3, r0, r3, asr #8
 80234b8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80234bc:	1208      	asrs	r0, r1, #8
 80234be:	b2db      	uxtb	r3, r3
 80234c0:	1215      	asrs	r5, r2, #8
 80234c2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80234c6:	fb10 f003 	smulbb	r0, r0, r3
 80234ca:	10cf      	asrs	r7, r1, #3
 80234cc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80234d0:	00c9      	lsls	r1, r1, #3
 80234d2:	fb05 0504 	mla	r5, r5, r4, r0
 80234d6:	b2c9      	uxtb	r1, r1
 80234d8:	10d0      	asrs	r0, r2, #3
 80234da:	00d2      	lsls	r2, r2, #3
 80234dc:	fb11 f103 	smulbb	r1, r1, r3
 80234e0:	b2d2      	uxtb	r2, r2
 80234e2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80234e6:	fb02 1204 	mla	r2, r2, r4, r1
 80234ea:	fb17 f703 	smulbb	r7, r7, r3
 80234ee:	b2ad      	uxth	r5, r5
 80234f0:	b292      	uxth	r2, r2
 80234f2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80234f6:	fb00 7004 	mla	r0, r0, r4, r7
 80234fa:	1c6b      	adds	r3, r5, #1
 80234fc:	1c57      	adds	r7, r2, #1
 80234fe:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023502:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8023506:	b280      	uxth	r0, r0
 8023508:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802350c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023510:	433d      	orrs	r5, r7
 8023512:	1c47      	adds	r7, r0, #1
 8023514:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8023518:	097f      	lsrs	r7, r7, #5
 802351a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802351e:	433d      	orrs	r5, r7
 8023520:	f8ae 5000 	strh.w	r5, [lr]
 8023524:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023526:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8023528:	4413      	add	r3, r2
 802352a:	9321      	str	r3, [sp, #132]	; 0x84
 802352c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802352e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023530:	441a      	add	r2, r3
 8023532:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023534:	9222      	str	r2, [sp, #136]	; 0x88
 8023536:	3b01      	subs	r3, #1
 8023538:	f10e 0e02 	add.w	lr, lr, #2
 802353c:	9313      	str	r3, [sp, #76]	; 0x4c
 802353e:	e61c      	b.n	802317a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8023540:	fb08 f000 	mul.w	r0, r8, r0
 8023544:	fb09 0303 	mla	r3, r9, r3, r0
 8023548:	e6dc      	b.n	8023304 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 802354a:	46b9      	mov	r9, r7
 802354c:	e704      	b.n	8023358 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 802354e:	f1c2 0110 	rsb	r1, r2, #16
 8023552:	437a      	muls	r2, r7
 8023554:	fb09 2901 	mla	r9, r9, r1, r2
 8023558:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802355c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8023560:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8023564:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023568:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802356c:	4302      	orrs	r2, r0
 802356e:	e795      	b.n	802349c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8023570:	f8ae 2000 	strh.w	r2, [lr]
 8023574:	e7d6      	b.n	8023524 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8023576:	b017      	add	sp, #92	; 0x5c
 8023578:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802357c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 802357c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023580:	b085      	sub	sp, #20
 8023582:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8023586:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 802358a:	9103      	str	r1, [sp, #12]
 802358c:	fb00 7406 	mla	r4, r0, r6, r7
 8023590:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8023594:	2800      	cmp	r0, #0
 8023596:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 802359a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802359e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80235a2:	9501      	str	r5, [sp, #4]
 80235a4:	eb02 0904 	add.w	r9, r2, r4
 80235a8:	f2c0 8141 	blt.w	802382e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 80235ac:	4583      	cmp	fp, r0
 80235ae:	f340 813e 	ble.w	802382e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 80235b2:	2f00      	cmp	r7, #0
 80235b4:	f2c0 8137 	blt.w	8023826 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 80235b8:	42be      	cmp	r6, r7
 80235ba:	f340 8134 	ble.w	8023826 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 80235be:	f812 c004 	ldrb.w	ip, [r2, r4]
 80235c2:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 80235c6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80235ca:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 80235ce:	4355      	muls	r5, r2
 80235d0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80235d4:	f64f 041f 	movw	r4, #63519	; 0xf81f
 80235d8:	fb0c f203 	mul.w	r2, ip, r3
 80235dc:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80235e0:	f605 0501 	addw	r5, r5, #2049	; 0x801
 80235e4:	441d      	add	r5, r3
 80235e6:	f102 0320 	add.w	r3, r2, #32
 80235ea:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80235ee:	0a1b      	lsrs	r3, r3, #8
 80235f0:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80235f4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80235f8:	431c      	orrs	r4, r3
 80235fa:	1c7b      	adds	r3, r7, #1
 80235fc:	f100 811c 	bmi.w	8023838 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8023600:	429e      	cmp	r6, r3
 8023602:	f340 8119 	ble.w	8023838 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8023606:	2900      	cmp	r1, #0
 8023608:	f000 8119 	beq.w	802383e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 802360c:	9a01      	ldr	r2, [sp, #4]
 802360e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8023612:	8855      	ldrh	r5, [r2, #2]
 8023614:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8023618:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 802361c:	fb08 f802 	mul.w	r8, r8, r2
 8023620:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023624:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8023628:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 802362c:	435d      	muls	r5, r3
 802362e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023632:	44d0      	add	r8, sl
 8023634:	f105 0a20 	add.w	sl, r5, #32
 8023638:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 802363c:	0a2d      	lsrs	r5, r5, #8
 802363e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8023642:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023646:	432a      	orrs	r2, r5
 8023648:	3001      	adds	r0, #1
 802364a:	f100 80fe 	bmi.w	802384a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 802364e:	4583      	cmp	fp, r0
 8023650:	f340 80fb 	ble.w	802384a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8023654:	f1be 0f00 	cmp.w	lr, #0
 8023658:	f000 80fc 	beq.w	8023854 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 802365c:	2f00      	cmp	r7, #0
 802365e:	f2c0 80f1 	blt.w	8023844 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8023662:	42be      	cmp	r6, r7
 8023664:	f340 80ee 	ble.w	8023844 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8023668:	9801      	ldr	r0, [sp, #4]
 802366a:	f819 5006 	ldrb.w	r5, [r9, r6]
 802366e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8023672:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8023676:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 802367a:	fb0a fa00 	mul.w	sl, sl, r0
 802367e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8023682:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8023686:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 802368a:	fb05 f808 	mul.w	r8, r5, r8
 802368e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8023692:	4482      	add	sl, r0
 8023694:	f108 0020 	add.w	r0, r8, #32
 8023698:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802369c:	0a00      	lsrs	r0, r0, #8
 802369e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80236a2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80236a6:	ea4b 0b00 	orr.w	fp, fp, r0
 80236aa:	3701      	adds	r7, #1
 80236ac:	f100 80d7 	bmi.w	802385e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 80236b0:	42be      	cmp	r6, r7
 80236b2:	f340 80d4 	ble.w	802385e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 80236b6:	2900      	cmp	r1, #0
 80236b8:	f000 80d4 	beq.w	8023864 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 80236bc:	3601      	adds	r6, #1
 80236be:	9801      	ldr	r0, [sp, #4]
 80236c0:	f819 7006 	ldrb.w	r7, [r9, r6]
 80236c4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80236c8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80236cc:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 80236d0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80236d4:	fb09 f906 	mul.w	r9, r9, r6
 80236d8:	fb07 f800 	mul.w	r8, r7, r0
 80236dc:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80236e0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80236e4:	f609 0901 	addw	r9, r9, #2049	; 0x801
 80236e8:	44d1      	add	r9, sl
 80236ea:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80236ee:	f108 0020 	add.w	r0, r8, #32
 80236f2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80236f6:	0a00      	lsrs	r0, r0, #8
 80236f8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80236fc:	4330      	orrs	r0, r6
 80236fe:	b28e      	uxth	r6, r1
 8023700:	fa1f f98e 	uxth.w	r9, lr
 8023704:	fb06 f809 	mul.w	r8, r6, r9
 8023708:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 802370c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8023710:	0136      	lsls	r6, r6, #4
 8023712:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023716:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802371a:	9601      	str	r6, [sp, #4]
 802371c:	ea4a 0404 	orr.w	r4, sl, r4
 8023720:	fa1f f689 	uxth.w	r6, r9
 8023724:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8023728:	fb11 f90e 	smulbb	r9, r1, lr
 802372c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8023730:	9602      	str	r6, [sp, #8]
 8023732:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023736:	4626      	mov	r6, r4
 8023738:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802373c:	f1ce 0410 	rsb	r4, lr, #16
 8023740:	1a64      	subs	r4, r4, r1
 8023742:	ea4a 0202 	orr.w	r2, sl, r2
 8023746:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802374a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802374e:	434a      	muls	r2, r1
 8023750:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8023754:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023758:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802375c:	fb04 2406 	mla	r4, r4, r6, r2
 8023760:	ea4a 0000 	orr.w	r0, sl, r0
 8023764:	fb09 4200 	mla	r2, r9, r0, r4
 8023768:	ea4f 440b 	mov.w	r4, fp, lsl #16
 802376c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023770:	9801      	ldr	r0, [sp, #4]
 8023772:	9903      	ldr	r1, [sp, #12]
 8023774:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8023778:	ea44 0b0b 	orr.w	fp, r4, fp
 802377c:	9c02      	ldr	r4, [sp, #8]
 802377e:	8809      	ldrh	r1, [r1, #0]
 8023780:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8023784:	1b00      	subs	r0, r0, r4
 8023786:	9c01      	ldr	r4, [sp, #4]
 8023788:	eba4 0608 	sub.w	r6, r4, r8
 802378c:	b2b6      	uxth	r6, r6
 802378e:	b280      	uxth	r0, r0
 8023790:	4373      	muls	r3, r6
 8023792:	fb0c 3300 	mla	r3, ip, r0, r3
 8023796:	9802      	ldr	r0, [sp, #8]
 8023798:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 802379c:	fb00 3505 	mla	r5, r0, r5, r3
 80237a0:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80237a4:	fb08 5707 	mla	r7, r8, r7, r5
 80237a8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80237ac:	120b      	asrs	r3, r1, #8
 80237ae:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80237b2:	ea6f 2727 	mvn.w	r7, r7, asr #8
 80237b6:	b2ff      	uxtb	r7, r7
 80237b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80237bc:	10c8      	asrs	r0, r1, #3
 80237be:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80237c2:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80237c6:	00c9      	lsls	r1, r1, #3
 80237c8:	437b      	muls	r3, r7
 80237ca:	ea42 0e0e 	orr.w	lr, r2, lr
 80237ce:	b2c9      	uxtb	r1, r1
 80237d0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80237d4:	fa1f f28e 	uxth.w	r2, lr
 80237d8:	4378      	muls	r0, r7
 80237da:	434f      	muls	r7, r1
 80237dc:	1c59      	adds	r1, r3, #1
 80237de:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80237e2:	1213      	asrs	r3, r2, #8
 80237e4:	f023 0307 	bic.w	r3, r3, #7
 80237e8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80237ec:	1c41      	adds	r1, r0, #1
 80237ee:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80237f2:	10d1      	asrs	r1, r2, #3
 80237f4:	f021 0103 	bic.w	r1, r1, #3
 80237f8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80237fc:	021b      	lsls	r3, r3, #8
 80237fe:	00c9      	lsls	r1, r1, #3
 8023800:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023804:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8023808:	430b      	orrs	r3, r1
 802380a:	1c79      	adds	r1, r7, #1
 802380c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8023810:	00d2      	lsls	r2, r2, #3
 8023812:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8023816:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802381a:	431a      	orrs	r2, r3
 802381c:	9b03      	ldr	r3, [sp, #12]
 802381e:	801a      	strh	r2, [r3, #0]
 8023820:	b005      	add	sp, #20
 8023822:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023826:	f04f 0c00 	mov.w	ip, #0
 802382a:	4664      	mov	r4, ip
 802382c:	e6e5      	b.n	80235fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 802382e:	2300      	movs	r3, #0
 8023830:	469c      	mov	ip, r3
 8023832:	461a      	mov	r2, r3
 8023834:	461c      	mov	r4, r3
 8023836:	e707      	b.n	8023648 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8023838:	2300      	movs	r3, #0
 802383a:	461a      	mov	r2, r3
 802383c:	e704      	b.n	8023648 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 802383e:	460b      	mov	r3, r1
 8023840:	460a      	mov	r2, r1
 8023842:	e701      	b.n	8023648 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8023844:	2500      	movs	r5, #0
 8023846:	46ab      	mov	fp, r5
 8023848:	e72f      	b.n	80236aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 802384a:	2700      	movs	r7, #0
 802384c:	463d      	mov	r5, r7
 802384e:	4638      	mov	r0, r7
 8023850:	46bb      	mov	fp, r7
 8023852:	e754      	b.n	80236fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023854:	4677      	mov	r7, lr
 8023856:	4675      	mov	r5, lr
 8023858:	4670      	mov	r0, lr
 802385a:	46f3      	mov	fp, lr
 802385c:	e74f      	b.n	80236fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 802385e:	2700      	movs	r7, #0
 8023860:	4638      	mov	r0, r7
 8023862:	e74c      	b.n	80236fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023864:	460f      	mov	r7, r1
 8023866:	4608      	mov	r0, r1
 8023868:	e749      	b.n	80236fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0802386c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802386c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023870:	b093      	sub	sp, #76	; 0x4c
 8023872:	9210      	str	r2, [sp, #64]	; 0x40
 8023874:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8023876:	910e      	str	r1, [sp, #56]	; 0x38
 8023878:	9306      	str	r3, [sp, #24]
 802387a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802387e:	9011      	str	r0, [sp, #68]	; 0x44
 8023880:	6850      	ldr	r0, [r2, #4]
 8023882:	6812      	ldr	r2, [r2, #0]
 8023884:	fb00 1303 	mla	r3, r0, r3, r1
 8023888:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802388c:	9307      	str	r3, [sp, #28]
 802388e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023890:	681b      	ldr	r3, [r3, #0]
 8023892:	9308      	str	r3, [sp, #32]
 8023894:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023896:	685b      	ldr	r3, [r3, #4]
 8023898:	9309      	str	r3, [sp, #36]	; 0x24
 802389a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802389c:	2b00      	cmp	r3, #0
 802389e:	dc03      	bgt.n	80238a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80238a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80238a2:	2b00      	cmp	r3, #0
 80238a4:	f340 83b4 	ble.w	8024010 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80238a8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80238aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80238ae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80238b2:	1e48      	subs	r0, r1, #1
 80238b4:	1e55      	subs	r5, r2, #1
 80238b6:	9b06      	ldr	r3, [sp, #24]
 80238b8:	2b00      	cmp	r3, #0
 80238ba:	f340 8163 	ble.w	8023b84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 80238be:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 80238c0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80238c2:	1436      	asrs	r6, r6, #16
 80238c4:	ea4f 4323 	mov.w	r3, r3, asr #16
 80238c8:	d406      	bmi.n	80238d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80238ca:	4286      	cmp	r6, r0
 80238cc:	da04      	bge.n	80238d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80238ce:	2b00      	cmp	r3, #0
 80238d0:	db02      	blt.n	80238d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80238d2:	42ab      	cmp	r3, r5
 80238d4:	f2c0 8157 	blt.w	8023b86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 80238d8:	3601      	adds	r6, #1
 80238da:	f100 8144 	bmi.w	8023b66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80238de:	42b1      	cmp	r1, r6
 80238e0:	f2c0 8141 	blt.w	8023b66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80238e4:	3301      	adds	r3, #1
 80238e6:	f100 813e 	bmi.w	8023b66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80238ea:	429a      	cmp	r2, r3
 80238ec:	f2c0 813b 	blt.w	8023b66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80238f0:	9b06      	ldr	r3, [sp, #24]
 80238f2:	9f07      	ldr	r7, [sp, #28]
 80238f4:	930f      	str	r3, [sp, #60]	; 0x3c
 80238f6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80238fa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80238fc:	2b00      	cmp	r3, #0
 80238fe:	f340 8164 	ble.w	8023bca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8023902:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023904:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8023906:	1418      	asrs	r0, r3, #16
 8023908:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802390a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802390e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023910:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8023914:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023916:	142d      	asrs	r5, r5, #16
 8023918:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 802391c:	f100 81ee 	bmi.w	8023cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023920:	f102 3eff 	add.w	lr, r2, #4294967295
 8023924:	4575      	cmp	r5, lr
 8023926:	f280 81e9 	bge.w	8023cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802392a:	2800      	cmp	r0, #0
 802392c:	f2c0 81e6 	blt.w	8023cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023930:	f103 3eff 	add.w	lr, r3, #4294967295
 8023934:	4570      	cmp	r0, lr
 8023936:	f280 81e1 	bge.w	8023cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802393a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802393c:	b212      	sxth	r2, r2
 802393e:	fb00 5002 	mla	r0, r0, r2, r5
 8023942:	fa1f fe81 	uxth.w	lr, r1
 8023946:	eb03 0a00 	add.w	sl, r3, r0
 802394a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802394e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8023952:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8023956:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 802395a:	b29b      	uxth	r3, r3
 802395c:	f1bc 0f00 	cmp.w	ip, #0
 8023960:	f000 8179 	beq.w	8023c56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8023964:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8023968:	940a      	str	r4, [sp, #40]	; 0x28
 802396a:	eb0a 0b02 	add.w	fp, sl, r2
 802396e:	fa1f fa8c 	uxth.w	sl, ip
 8023972:	fb0a fe0e 	mul.w	lr, sl, lr
 8023976:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802397a:	fa1f fa8a 	uxth.w	sl, sl
 802397e:	eba5 050e 	sub.w	r5, r5, lr
 8023982:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8023986:	940b      	str	r4, [sp, #44]	; 0x2c
 8023988:	eba3 030a 	sub.w	r3, r3, sl
 802398c:	b2ad      	uxth	r5, r5
 802398e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023990:	b29b      	uxth	r3, r3
 8023992:	fb08 f505 	mul.w	r5, r8, r5
 8023996:	fb09 5303 	mla	r3, r9, r3, r5
 802399a:	fb0a 3304 	mla	r3, sl, r4, r3
 802399e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80239a0:	fb0e 3304 	mla	r3, lr, r4, r3
 80239a4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80239a8:	2b00      	cmp	r3, #0
 80239aa:	f000 80cf 	beq.w	8023b4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80239ae:	9c08      	ldr	r4, [sp, #32]
 80239b0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80239b4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80239b8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80239bc:	f000 8150 	beq.w	8023c60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 80239c0:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80239c4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80239c8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80239cc:	fb09 f000 	mul.w	r0, r9, r0
 80239d0:	fb0a fe0e 	mul.w	lr, sl, lr
 80239d4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80239d8:	f100 0b20 	add.w	fp, r0, #32
 80239dc:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80239e0:	44ce      	add	lr, r9
 80239e2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80239e6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80239ea:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80239ee:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80239f2:	ea4e 0909 	orr.w	r9, lr, r9
 80239f6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80239fa:	8868      	ldrh	r0, [r5, #2]
 80239fc:	d019      	beq.n	8023a32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80239fe:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8023a02:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8023a06:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023a0a:	fb08 f800 	mul.w	r8, r8, r0
 8023a0e:	fb0a fe0e 	mul.w	lr, sl, lr
 8023a12:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8023a16:	f108 0b20 	add.w	fp, r8, #32
 8023a1a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023a1e:	4486      	add	lr, r0
 8023a20:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8023a24:	0a00      	lsrs	r0, r0, #8
 8023a26:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023a2a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023a2e:	ea4e 0000 	orr.w	r0, lr, r0
 8023a32:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8023a36:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8023a3a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023a3e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023a42:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023a46:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023a4a:	ea4e 0909 	orr.w	r9, lr, r9
 8023a4e:	ea4a 0000 	orr.w	r0, sl, r0
 8023a52:	f1bc 0f00 	cmp.w	ip, #0
 8023a56:	f000 8105 	beq.w	8023c64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8023a5a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8023a5e:	3a01      	subs	r2, #1
 8023a60:	0052      	lsls	r2, r2, #1
 8023a62:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023a64:	3202      	adds	r2, #2
 8023a66:	2cff      	cmp	r4, #255	; 0xff
 8023a68:	eb05 0e02 	add.w	lr, r5, r2
 8023a6c:	5aaa      	ldrh	r2, [r5, r2]
 8023a6e:	d018      	beq.n	8023aa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8023a70:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8023a74:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023a78:	fb04 fa02 	mul.w	sl, r4, r2
 8023a7c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023a80:	fb08 f805 	mul.w	r8, r8, r5
 8023a84:	f10a 0520 	add.w	r5, sl, #32
 8023a88:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8023a8c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8023a90:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023a94:	4442      	add	r2, r8
 8023a96:	0a2d      	lsrs	r5, r5, #8
 8023a98:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8023a9c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023aa0:	432a      	orrs	r2, r5
 8023aa2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023aa4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8023aa8:	2cff      	cmp	r4, #255	; 0xff
 8023aaa:	d01a      	beq.n	8023ae2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8023aac:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8023ab0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023ab4:	fb04 fa05 	mul.w	sl, r4, r5
 8023ab8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023abc:	fb08 f80e 	mul.w	r8, r8, lr
 8023ac0:	f10a 0e20 	add.w	lr, sl, #32
 8023ac4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8023ac8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8023acc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023ad0:	4445      	add	r5, r8
 8023ad2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023ad6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8023ada:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8023ade:	ea45 050e 	orr.w	r5, r5, lr
 8023ae2:	fb1c fe01 	smulbb	lr, ip, r1
 8023ae6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8023aea:	f1cc 0810 	rsb	r8, ip, #16
 8023aee:	eba8 0801 	sub.w	r8, r8, r1
 8023af2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8023af6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8023afa:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8023afe:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8023b02:	4341      	muls	r1, r0
 8023b04:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023b08:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023b0c:	ea4a 0202 	orr.w	r2, sl, r2
 8023b10:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8023b14:	fb09 1108 	mla	r1, r9, r8, r1
 8023b18:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023b1c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8023b20:	fb0c 1102 	mla	r1, ip, r2, r1
 8023b24:	ea4b 0505 	orr.w	r5, fp, r5
 8023b28:	fb0e 1e05 	mla	lr, lr, r5, r1
 8023b2c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023b30:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8023b34:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023b38:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023b3c:	ea42 0e0e 	orr.w	lr, r2, lr
 8023b40:	fa1f f28e 	uxth.w	r2, lr
 8023b44:	2bff      	cmp	r3, #255	; 0xff
 8023b46:	f040 80a1 	bne.w	8023c8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8023b4a:	803a      	strh	r2, [r7, #0]
 8023b4c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023b4e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8023b50:	4413      	add	r3, r2
 8023b52:	931d      	str	r3, [sp, #116]	; 0x74
 8023b54:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8023b56:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023b58:	441a      	add	r2, r3
 8023b5a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023b5c:	921e      	str	r2, [sp, #120]	; 0x78
 8023b5e:	3b01      	subs	r3, #1
 8023b60:	3702      	adds	r7, #2
 8023b62:	930f      	str	r3, [sp, #60]	; 0x3c
 8023b64:	e6c9      	b.n	80238fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023b66:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023b68:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8023b6a:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8023b6c:	4433      	add	r3, r6
 8023b6e:	931d      	str	r3, [sp, #116]	; 0x74
 8023b70:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023b72:	441c      	add	r4, r3
 8023b74:	9b06      	ldr	r3, [sp, #24]
 8023b76:	941e      	str	r4, [sp, #120]	; 0x78
 8023b78:	3b01      	subs	r3, #1
 8023b7a:	9306      	str	r3, [sp, #24]
 8023b7c:	9b07      	ldr	r3, [sp, #28]
 8023b7e:	3302      	adds	r3, #2
 8023b80:	9307      	str	r3, [sp, #28]
 8023b82:	e698      	b.n	80238b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8023b84:	d028      	beq.n	8023bd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023b86:	9b06      	ldr	r3, [sp, #24]
 8023b88:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023b8a:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8023b8c:	3b01      	subs	r3, #1
 8023b8e:	fb00 5003 	mla	r0, r0, r3, r5
 8023b92:	1400      	asrs	r0, r0, #16
 8023b94:	f53f aeac 	bmi.w	80238f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023b98:	3901      	subs	r1, #1
 8023b9a:	4288      	cmp	r0, r1
 8023b9c:	f6bf aea8 	bge.w	80238f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023ba0:	9920      	ldr	r1, [sp, #128]	; 0x80
 8023ba2:	981e      	ldr	r0, [sp, #120]	; 0x78
 8023ba4:	fb01 0303 	mla	r3, r1, r3, r0
 8023ba8:	141b      	asrs	r3, r3, #16
 8023baa:	f53f aea1 	bmi.w	80238f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023bae:	3a01      	subs	r2, #1
 8023bb0:	4293      	cmp	r3, r2
 8023bb2:	f6bf ae9d 	bge.w	80238f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023bb6:	9b06      	ldr	r3, [sp, #24]
 8023bb8:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8023bbc:	930f      	str	r3, [sp, #60]	; 0x3c
 8023bbe:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8023bc2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023bc4:	2b00      	cmp	r3, #0
 8023bc6:	f300 80b6 	bgt.w	8023d36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8023bca:	9b06      	ldr	r3, [sp, #24]
 8023bcc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023bd0:	9b07      	ldr	r3, [sp, #28]
 8023bd2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8023bd6:	9307      	str	r3, [sp, #28]
 8023bd8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023bda:	2b00      	cmp	r3, #0
 8023bdc:	f340 8218 	ble.w	8024010 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8023be0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023be4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023be8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023bec:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023bee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023bf2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023bf6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023bfa:	eef0 6a62 	vmov.f32	s13, s5
 8023bfe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023c02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023c06:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023c0a:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8023c0e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023c12:	eef0 6a43 	vmov.f32	s13, s6
 8023c16:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023c1a:	ee12 2a90 	vmov	r2, s5
 8023c1e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023c22:	fb92 f3f3 	sdiv	r3, r2, r3
 8023c26:	ee13 2a10 	vmov	r2, s6
 8023c2a:	931f      	str	r3, [sp, #124]	; 0x7c
 8023c2c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023c2e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023c32:	9320      	str	r3, [sp, #128]	; 0x80
 8023c34:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023c36:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023c38:	3b01      	subs	r3, #1
 8023c3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023c3e:	930e      	str	r3, [sp, #56]	; 0x38
 8023c40:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023c42:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8023c46:	bf08      	it	eq
 8023c48:	4613      	moveq	r3, r2
 8023c4a:	9306      	str	r3, [sp, #24]
 8023c4c:	eeb0 3a67 	vmov.f32	s6, s15
 8023c50:	eef0 2a47 	vmov.f32	s5, s14
 8023c54:	e621      	b.n	802389a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8023c56:	fb08 f505 	mul.w	r5, r8, r5
 8023c5a:	fb09 5303 	mla	r3, r9, r3, r5
 8023c5e:	e6a1      	b.n	80239a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8023c60:	4681      	mov	r9, r0
 8023c62:	e6c8      	b.n	80239f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8023c64:	f1c1 0210 	rsb	r2, r1, #16
 8023c68:	4341      	muls	r1, r0
 8023c6a:	fb09 1902 	mla	r9, r9, r2, r1
 8023c6e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023c72:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8023c76:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8023c7a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023c7e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023c82:	ea42 0909 	orr.w	r9, r2, r9
 8023c86:	fa1f f289 	uxth.w	r2, r9
 8023c8a:	e75b      	b.n	8023b44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023c8c:	f8b7 c000 	ldrh.w	ip, [r7]
 8023c90:	43db      	mvns	r3, r3
 8023c92:	ea4f 202c 	mov.w	r0, ip, asr #8
 8023c96:	fa5f fe83 	uxtb.w	lr, r3
 8023c9a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023c9e:	fb00 f00e 	mul.w	r0, r0, lr
 8023ca2:	1c41      	adds	r1, r0, #1
 8023ca4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8023ca8:	1211      	asrs	r1, r2, #8
 8023caa:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8023cae:	f021 0107 	bic.w	r1, r1, #7
 8023cb2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8023cb6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8023cba:	48d7      	ldr	r0, [pc, #860]	; (8024018 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8023cbc:	fb05 f50e 	mul.w	r5, r5, lr
 8023cc0:	b2c9      	uxtb	r1, r1
 8023cc2:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8023cc6:	1c69      	adds	r1, r5, #1
 8023cc8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8023ccc:	10d1      	asrs	r1, r2, #3
 8023cce:	f021 0103 	bic.w	r1, r1, #3
 8023cd2:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8023cd6:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8023cda:	b2db      	uxtb	r3, r3
 8023cdc:	00c9      	lsls	r1, r1, #3
 8023cde:	fb03 f30e 	mul.w	r3, r3, lr
 8023ce2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023ce6:	4301      	orrs	r1, r0
 8023ce8:	1c58      	adds	r0, r3, #1
 8023cea:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8023cee:	00d2      	lsls	r2, r2, #3
 8023cf0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023cf4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023cf8:	430a      	orrs	r2, r1
 8023cfa:	e726      	b.n	8023b4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8023cfc:	f115 0e01 	adds.w	lr, r5, #1
 8023d00:	f53f af24 	bmi.w	8023b4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023d04:	4572      	cmp	r2, lr
 8023d06:	f6ff af21 	blt.w	8023b4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023d0a:	f110 0e01 	adds.w	lr, r0, #1
 8023d0e:	f53f af1d 	bmi.w	8023b4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023d12:	4573      	cmp	r3, lr
 8023d14:	f6ff af1a 	blt.w	8023b4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023d18:	b21b      	sxth	r3, r3
 8023d1a:	b212      	sxth	r2, r2
 8023d1c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8023d20:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8023d24:	9301      	str	r3, [sp, #4]
 8023d26:	9200      	str	r2, [sp, #0]
 8023d28:	4639      	mov	r1, r7
 8023d2a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8023d2e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023d30:	f7ff fc24 	bl	802357c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8023d34:	e70a      	b.n	8023b4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023d36:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023d38:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023d3c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023d3e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8023d42:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023d44:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023d48:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023d4a:	141f      	asrs	r7, r3, #16
 8023d4c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023d4e:	141b      	asrs	r3, r3, #16
 8023d50:	fb01 3707 	mla	r7, r1, r7, r3
 8023d54:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023d56:	fa1f fc82 	uxth.w	ip, r2
 8023d5a:	eb03 0a07 	add.w	sl, r3, r7
 8023d5e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8023d62:	f813 9007 	ldrb.w	r9, [r3, r7]
 8023d66:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8023d6a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8023d6e:	b29b      	uxth	r3, r3
 8023d70:	2d00      	cmp	r5, #0
 8023d72:	f000 80fe 	beq.w	8023f72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8023d76:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8023d7a:	940c      	str	r4, [sp, #48]	; 0x30
 8023d7c:	eb0a 0b01 	add.w	fp, sl, r1
 8023d80:	fa1f fa85 	uxth.w	sl, r5
 8023d84:	fb0a fc0c 	mul.w	ip, sl, ip
 8023d88:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8023d8c:	fa1f fa8a 	uxth.w	sl, sl
 8023d90:	eba0 000c 	sub.w	r0, r0, ip
 8023d94:	eba3 030a 	sub.w	r3, r3, sl
 8023d98:	b280      	uxth	r0, r0
 8023d9a:	fb08 f000 	mul.w	r0, r8, r0
 8023d9e:	b29b      	uxth	r3, r3
 8023da0:	fb09 0303 	mla	r3, r9, r3, r0
 8023da4:	980c      	ldr	r0, [sp, #48]	; 0x30
 8023da6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8023daa:	940d      	str	r4, [sp, #52]	; 0x34
 8023dac:	fb0a 3300 	mla	r3, sl, r0, r3
 8023db0:	fb0c 3304 	mla	r3, ip, r4, r3
 8023db4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023db8:	2b00      	cmp	r3, #0
 8023dba:	f000 80cc 	beq.w	8023f56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8023dbe:	9808      	ldr	r0, [sp, #32]
 8023dc0:	9c08      	ldr	r4, [sp, #32]
 8023dc2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023dc6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8023dca:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8023dce:	f000 80d5 	beq.w	8023f7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8023dd2:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023dd6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023dda:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023dde:	fb09 f707 	mul.w	r7, r9, r7
 8023de2:	fb0a fc0c 	mul.w	ip, sl, ip
 8023de6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8023dea:	f107 0b20 	add.w	fp, r7, #32
 8023dee:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023df2:	44cc      	add	ip, r9
 8023df4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8023df8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023dfc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023e00:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8023e04:	ea4c 0909 	orr.w	r9, ip, r9
 8023e08:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023e0c:	8847      	ldrh	r7, [r0, #2]
 8023e0e:	d019      	beq.n	8023e44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8023e10:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023e14:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8023e18:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023e1c:	fb08 f807 	mul.w	r8, r8, r7
 8023e20:	fb0a fc0c 	mul.w	ip, sl, ip
 8023e24:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8023e28:	f108 0b20 	add.w	fp, r8, #32
 8023e2c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023e30:	44bc      	add	ip, r7
 8023e32:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8023e36:	0a3f      	lsrs	r7, r7, #8
 8023e38:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023e3c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023e40:	ea4c 0707 	orr.w	r7, ip, r7
 8023e44:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8023e48:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8023e4c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023e50:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023e54:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023e58:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023e5c:	ea4c 0909 	orr.w	r9, ip, r9
 8023e60:	ea4a 0707 	orr.w	r7, sl, r7
 8023e64:	2d00      	cmp	r5, #0
 8023e66:	f000 808b 	beq.w	8023f80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8023e6a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023e6e:	3901      	subs	r1, #1
 8023e70:	0049      	lsls	r1, r1, #1
 8023e72:	3102      	adds	r1, #2
 8023e74:	eb00 0c01 	add.w	ip, r0, r1
 8023e78:	5a41      	ldrh	r1, [r0, r1]
 8023e7a:	980c      	ldr	r0, [sp, #48]	; 0x30
 8023e7c:	28ff      	cmp	r0, #255	; 0xff
 8023e7e:	d019      	beq.n	8023eb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8023e80:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8023e82:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8023e86:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023e8a:	fb04 fa01 	mul.w	sl, r4, r1
 8023e8e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023e92:	fb08 f800 	mul.w	r8, r8, r0
 8023e96:	f10a 0020 	add.w	r0, sl, #32
 8023e9a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8023e9e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8023ea2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023ea6:	4441      	add	r1, r8
 8023ea8:	0a00      	lsrs	r0, r0, #8
 8023eaa:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8023eae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023eb2:	4301      	orrs	r1, r0
 8023eb4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023eb6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8023eba:	2cff      	cmp	r4, #255	; 0xff
 8023ebc:	d01a      	beq.n	8023ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8023ebe:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8023ec2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023ec6:	fb04 fa00 	mul.w	sl, r4, r0
 8023eca:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023ece:	fb08 f80c 	mul.w	r8, r8, ip
 8023ed2:	f10a 0c20 	add.w	ip, sl, #32
 8023ed6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8023eda:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8023ede:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023ee2:	4440      	add	r0, r8
 8023ee4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023ee8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8023eec:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023ef0:	ea40 000c 	orr.w	r0, r0, ip
 8023ef4:	fb15 fc02 	smulbb	ip, r5, r2
 8023ef8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8023efc:	f1c5 0810 	rsb	r8, r5, #16
 8023f00:	eba8 0802 	sub.w	r8, r8, r2
 8023f04:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8023f08:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8023f0c:	437a      	muls	r2, r7
 8023f0e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023f12:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8023f16:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023f1a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023f1e:	fb09 2208 	mla	r2, r9, r8, r2
 8023f22:	ea4a 0101 	orr.w	r1, sl, r1
 8023f26:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8023f2a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023f2e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023f32:	fb05 2201 	mla	r2, r5, r1, r2
 8023f36:	ea4b 0000 	orr.w	r0, fp, r0
 8023f3a:	fb0c 2200 	mla	r2, ip, r0, r2
 8023f3e:	0d57      	lsrs	r7, r2, #21
 8023f40:	0952      	lsrs	r2, r2, #5
 8023f42:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023f46:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023f4a:	433a      	orrs	r2, r7
 8023f4c:	2bff      	cmp	r3, #255	; 0xff
 8023f4e:	b292      	uxth	r2, r2
 8023f50:	d127      	bne.n	8023fa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8023f52:	f8ae 2000 	strh.w	r2, [lr]
 8023f56:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023f58:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8023f5a:	4413      	add	r3, r2
 8023f5c:	931d      	str	r3, [sp, #116]	; 0x74
 8023f5e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8023f60:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023f62:	441a      	add	r2, r3
 8023f64:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023f66:	921e      	str	r2, [sp, #120]	; 0x78
 8023f68:	3b01      	subs	r3, #1
 8023f6a:	f10e 0e02 	add.w	lr, lr, #2
 8023f6e:	930f      	str	r3, [sp, #60]	; 0x3c
 8023f70:	e627      	b.n	8023bc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8023f72:	fb08 f000 	mul.w	r0, r8, r0
 8023f76:	fb09 0303 	mla	r3, r9, r3, r0
 8023f7a:	e71b      	b.n	8023db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8023f7c:	46b9      	mov	r9, r7
 8023f7e:	e743      	b.n	8023e08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8023f80:	f1c2 0110 	rsb	r1, r2, #16
 8023f84:	437a      	muls	r2, r7
 8023f86:	fb09 2901 	mla	r9, r9, r1, r2
 8023f8a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023f8e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8023f92:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8023f96:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023f9a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023f9e:	4302      	orrs	r2, r0
 8023fa0:	e7d4      	b.n	8023f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8023fa2:	f8be 7000 	ldrh.w	r7, [lr]
 8023fa6:	4c1c      	ldr	r4, [pc, #112]	; (8024018 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8023fa8:	43db      	mvns	r3, r3
 8023faa:	1238      	asrs	r0, r7, #8
 8023fac:	fa5f fc83 	uxtb.w	ip, r3
 8023fb0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023fb4:	10fd      	asrs	r5, r7, #3
 8023fb6:	fb00 f00c 	mul.w	r0, r0, ip
 8023fba:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8023fbe:	fb05 f10c 	mul.w	r1, r5, ip
 8023fc2:	1c45      	adds	r5, r0, #1
 8023fc4:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8023fc8:	1215      	asrs	r5, r2, #8
 8023fca:	f025 0507 	bic.w	r5, r5, #7
 8023fce:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8023fd2:	1c4d      	adds	r5, r1, #1
 8023fd4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8023fd8:	10d1      	asrs	r1, r2, #3
 8023fda:	f021 0103 	bic.w	r1, r1, #3
 8023fde:	00fb      	lsls	r3, r7, #3
 8023fe0:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8023fe4:	b2db      	uxtb	r3, r3
 8023fe6:	b2c0      	uxtb	r0, r0
 8023fe8:	00c9      	lsls	r1, r1, #3
 8023fea:	fb03 f30c 	mul.w	r3, r3, ip
 8023fee:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023ff2:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8023ff6:	4308      	orrs	r0, r1
 8023ff8:	1c59      	adds	r1, r3, #1
 8023ffa:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8023ffe:	00d2      	lsls	r2, r2, #3
 8024000:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024004:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8024008:	4318      	orrs	r0, r3
 802400a:	f8ae 0000 	strh.w	r0, [lr]
 802400e:	e7a2      	b.n	8023f56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8024010:	b013      	add	sp, #76	; 0x4c
 8024012:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024016:	bf00      	nop
 8024018:	fffff800 	.word	0xfffff800

0802401c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 802401c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024020:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8024024:	fb05 4c03 	mla	ip, r5, r3, r4
 8024028:	2d00      	cmp	r5, #0
 802402a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802402e:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8024032:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024036:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 802403a:	8808      	ldrh	r0, [r1, #0]
 802403c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8024040:	f2c0 80a7 	blt.w	8024192 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8024044:	45aa      	cmp	sl, r5
 8024046:	f340 80a4 	ble.w	8024192 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802404a:	2c00      	cmp	r4, #0
 802404c:	f2c0 809f 	blt.w	802418e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8024050:	42a3      	cmp	r3, r4
 8024052:	f340 809c 	ble.w	802418e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8024056:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 802405a:	1c62      	adds	r2, r4, #1
 802405c:	f100 809c 	bmi.w	8024198 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8024060:	4293      	cmp	r3, r2
 8024062:	f340 8099 	ble.w	8024198 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8024066:	f1b9 0f00 	cmp.w	r9, #0
 802406a:	f000 8095 	beq.w	8024198 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802406e:	f8be c002 	ldrh.w	ip, [lr, #2]
 8024072:	3501      	adds	r5, #1
 8024074:	f100 8094 	bmi.w	80241a0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8024078:	45aa      	cmp	sl, r5
 802407a:	f340 8091 	ble.w	80241a0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802407e:	2f00      	cmp	r7, #0
 8024080:	f000 808e 	beq.w	80241a0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8024084:	2c00      	cmp	r4, #0
 8024086:	f2c0 8089 	blt.w	802419c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802408a:	42a3      	cmp	r3, r4
 802408c:	f340 8086 	ble.w	802419c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8024090:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8024094:	3401      	adds	r4, #1
 8024096:	f100 8086 	bmi.w	80241a6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802409a:	42a3      	cmp	r3, r4
 802409c:	f340 8083 	ble.w	80241a6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80240a0:	f1b9 0f00 	cmp.w	r9, #0
 80240a4:	d07f      	beq.n	80241a6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80240a6:	3301      	adds	r3, #1
 80240a8:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 80240ac:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80240b0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80240b4:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80240b8:	fb19 fe07 	smulbb	lr, r9, r7
 80240bc:	ea44 0808 	orr.w	r8, r4, r8
 80240c0:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80240c4:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80240c8:	f1c7 0210 	rsb	r2, r7, #16
 80240cc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80240d0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80240d4:	ea44 0c0c 	orr.w	ip, r4, ip
 80240d8:	eba2 0209 	sub.w	r2, r2, r9
 80240dc:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80240e0:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80240e4:	fb04 f40c 	mul.w	r4, r4, ip
 80240e8:	fb02 4808 	mla	r8, r2, r8, r4
 80240ec:	041a      	lsls	r2, r3, #16
 80240ee:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80240f2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80240f6:	4313      	orrs	r3, r2
 80240f8:	042a      	lsls	r2, r5, #16
 80240fa:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80240fe:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8024102:	fb0e 8303 	mla	r3, lr, r3, r8
 8024106:	432a      	orrs	r2, r5
 8024108:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 802410c:	fb07 3202 	mla	r2, r7, r2, r3
 8024110:	0d53      	lsrs	r3, r2, #21
 8024112:	0952      	lsrs	r2, r2, #5
 8024114:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024118:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802411c:	431a      	orrs	r2, r3
 802411e:	b293      	uxth	r3, r2
 8024120:	b2b4      	uxth	r4, r6
 8024122:	1202      	asrs	r2, r0, #8
 8024124:	43f6      	mvns	r6, r6
 8024126:	b2f6      	uxtb	r6, r6
 8024128:	121d      	asrs	r5, r3, #8
 802412a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802412e:	fb12 f206 	smulbb	r2, r2, r6
 8024132:	10c7      	asrs	r7, r0, #3
 8024134:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8024138:	00c0      	lsls	r0, r0, #3
 802413a:	fb05 2504 	mla	r5, r5, r4, r2
 802413e:	b2c0      	uxtb	r0, r0
 8024140:	10da      	asrs	r2, r3, #3
 8024142:	00db      	lsls	r3, r3, #3
 8024144:	b2db      	uxtb	r3, r3
 8024146:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802414a:	fb10 f006 	smulbb	r0, r0, r6
 802414e:	b2ad      	uxth	r5, r5
 8024150:	fb03 0004 	mla	r0, r3, r4, r0
 8024154:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024158:	fb17 f706 	smulbb	r7, r7, r6
 802415c:	b280      	uxth	r0, r0
 802415e:	1c6b      	adds	r3, r5, #1
 8024160:	fb02 7204 	mla	r2, r2, r4, r7
 8024164:	b292      	uxth	r2, r2
 8024166:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802416a:	1c43      	adds	r3, r0, #1
 802416c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8024170:	1c50      	adds	r0, r2, #1
 8024172:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8024176:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802417a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802417e:	0952      	lsrs	r2, r2, #5
 8024180:	432b      	orrs	r3, r5
 8024182:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024186:	4313      	orrs	r3, r2
 8024188:	800b      	strh	r3, [r1, #0]
 802418a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802418e:	4680      	mov	r8, r0
 8024190:	e763      	b.n	802405a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8024192:	4684      	mov	ip, r0
 8024194:	4680      	mov	r8, r0
 8024196:	e76c      	b.n	8024072 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8024198:	4684      	mov	ip, r0
 802419a:	e76a      	b.n	8024072 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 802419c:	4605      	mov	r5, r0
 802419e:	e779      	b.n	8024094 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 80241a0:	4603      	mov	r3, r0
 80241a2:	4605      	mov	r5, r0
 80241a4:	e782      	b.n	80240ac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 80241a6:	4603      	mov	r3, r0
 80241a8:	e780      	b.n	80240ac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

080241aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80241aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80241ae:	b093      	sub	sp, #76	; 0x4c
 80241b0:	461d      	mov	r5, r3
 80241b2:	9210      	str	r2, [sp, #64]	; 0x40
 80241b4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80241b6:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 80241ba:	920b      	str	r2, [sp, #44]	; 0x2c
 80241bc:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 80241c0:	910a      	str	r1, [sp, #40]	; 0x28
 80241c2:	6859      	ldr	r1, [r3, #4]
 80241c4:	681b      	ldr	r3, [r3, #0]
 80241c6:	9011      	str	r0, [sp, #68]	; 0x44
 80241c8:	fb01 2707 	mla	r7, r1, r7, r2
 80241cc:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80241d0:	9307      	str	r3, [sp, #28]
 80241d2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80241d4:	681b      	ldr	r3, [r3, #0]
 80241d6:	9309      	str	r3, [sp, #36]	; 0x24
 80241d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80241da:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80241de:	43db      	mvns	r3, r3
 80241e0:	b2db      	uxtb	r3, r3
 80241e2:	9308      	str	r3, [sp, #32]
 80241e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80241e6:	2b00      	cmp	r3, #0
 80241e8:	dc03      	bgt.n	80241f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80241ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80241ec:	2b00      	cmp	r3, #0
 80241ee:	f340 8203 	ble.w	80245f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80241f2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80241f4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80241f8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80241fc:	1e48      	subs	r0, r1, #1
 80241fe:	f102 3cff 	add.w	ip, r2, #4294967295
 8024202:	2d00      	cmp	r5, #0
 8024204:	f340 80da 	ble.w	80243bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8024208:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802420c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024210:	d406      	bmi.n	8024220 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024212:	4586      	cmp	lr, r0
 8024214:	da04      	bge.n	8024220 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024216:	2b00      	cmp	r3, #0
 8024218:	db02      	blt.n	8024220 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802421a:	4563      	cmp	r3, ip
 802421c:	f2c0 80cf 	blt.w	80243be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8024220:	f11e 0e01 	adds.w	lr, lr, #1
 8024224:	f100 80c1 	bmi.w	80243aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024228:	4571      	cmp	r1, lr
 802422a:	f2c0 80be 	blt.w	80243aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802422e:	3301      	adds	r3, #1
 8024230:	f100 80bb 	bmi.w	80243aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024234:	429a      	cmp	r2, r3
 8024236:	f2c0 80b8 	blt.w	80243aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802423a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 802423e:	46a9      	mov	r9, r5
 8024240:	f1b9 0f00 	cmp.w	r9, #0
 8024244:	f340 80d8 	ble.w	80243f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8024248:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802424a:	1421      	asrs	r1, r4, #16
 802424c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024250:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024254:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024258:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802425c:	f100 8111 	bmi.w	8024482 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024260:	f10e 3aff 	add.w	sl, lr, #4294967295
 8024264:	4551      	cmp	r1, sl
 8024266:	f280 810c 	bge.w	8024482 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802426a:	2800      	cmp	r0, #0
 802426c:	f2c0 8109 	blt.w	8024482 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024270:	f103 3aff 	add.w	sl, r3, #4294967295
 8024274:	4550      	cmp	r0, sl
 8024276:	f280 8104 	bge.w	8024482 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802427a:	fa0f f38e 	sxth.w	r3, lr
 802427e:	fb00 1103 	mla	r1, r0, r3, r1
 8024282:	9809      	ldr	r0, [sp, #36]	; 0x24
 8024284:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8024288:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 802428c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8024290:	f1bc 0f00 	cmp.w	ip, #0
 8024294:	d007      	beq.n	80242a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8024296:	005b      	lsls	r3, r3, #1
 8024298:	eb0a 0003 	add.w	r0, sl, r3
 802429c:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80242a0:	930c      	str	r3, [sp, #48]	; 0x30
 80242a2:	8843      	ldrh	r3, [r0, #2]
 80242a4:	930d      	str	r3, [sp, #52]	; 0x34
 80242a6:	ea4f 400e 	mov.w	r0, lr, lsl #16
 80242aa:	fb12 f30c 	smulbb	r3, r2, ip
 80242ae:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80242b2:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80242b6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80242ba:	10db      	asrs	r3, r3, #3
 80242bc:	ea40 000e 	orr.w	r0, r0, lr
 80242c0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80242c4:	f1cc 0e10 	rsb	lr, ip, #16
 80242c8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80242cc:	ebae 0e02 	sub.w	lr, lr, r2
 80242d0:	ea4a 0101 	orr.w	r1, sl, r1
 80242d4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80242d8:	4351      	muls	r1, r2
 80242da:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80242dc:	9f08      	ldr	r7, [sp, #32]
 80242de:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80242e2:	fb0e 1e00 	mla	lr, lr, r0, r1
 80242e6:	0410      	lsls	r0, r2, #16
 80242e8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80242ec:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80242f0:	4310      	orrs	r0, r2
 80242f2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80242f4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80242f6:	0412      	lsls	r2, r2, #16
 80242f8:	fb03 e000 	mla	r0, r3, r0, lr
 80242fc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024300:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8024304:	ea42 020e 	orr.w	r2, r2, lr
 8024308:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 802430c:	fb03 0302 	mla	r3, r3, r2, r0
 8024310:	0d5a      	lsrs	r2, r3, #21
 8024312:	095b      	lsrs	r3, r3, #5
 8024314:	f8b8 0000 	ldrh.w	r0, [r8]
 8024318:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802431c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024320:	4313      	orrs	r3, r2
 8024322:	b29b      	uxth	r3, r3
 8024324:	1201      	asrs	r1, r0, #8
 8024326:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 802432a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802432e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024332:	fb11 f107 	smulbb	r1, r1, r7
 8024336:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 802433a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802433e:	00c0      	lsls	r0, r0, #3
 8024340:	fb0c 1c02 	mla	ip, ip, r2, r1
 8024344:	b2c0      	uxtb	r0, r0
 8024346:	10d9      	asrs	r1, r3, #3
 8024348:	00db      	lsls	r3, r3, #3
 802434a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 802434e:	b2db      	uxtb	r3, r3
 8024350:	fb10 f007 	smulbb	r0, r0, r7
 8024354:	fa1f fc8c 	uxth.w	ip, ip
 8024358:	fb03 0302 	mla	r3, r3, r2, r0
 802435c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024360:	fb1e fe07 	smulbb	lr, lr, r7
 8024364:	fb01 e102 	mla	r1, r1, r2, lr
 8024368:	b29a      	uxth	r2, r3
 802436a:	f10c 0301 	add.w	r3, ip, #1
 802436e:	b289      	uxth	r1, r1
 8024370:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8024374:	1c53      	adds	r3, r2, #1
 8024376:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802437a:	1c4a      	adds	r2, r1, #1
 802437c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024380:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8024384:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024388:	0949      	lsrs	r1, r1, #5
 802438a:	ea43 030c 	orr.w	r3, r3, ip
 802438e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024392:	430b      	orrs	r3, r1
 8024394:	f8a8 3000 	strh.w	r3, [r8]
 8024398:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802439a:	441c      	add	r4, r3
 802439c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802439e:	f108 0802 	add.w	r8, r8, #2
 80243a2:	441e      	add	r6, r3
 80243a4:	f109 39ff 	add.w	r9, r9, #4294967295
 80243a8:	e74a      	b.n	8024240 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80243aa:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80243ac:	441c      	add	r4, r3
 80243ae:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80243b0:	441e      	add	r6, r3
 80243b2:	9b07      	ldr	r3, [sp, #28]
 80243b4:	3302      	adds	r3, #2
 80243b6:	3d01      	subs	r5, #1
 80243b8:	9307      	str	r3, [sp, #28]
 80243ba:	e722      	b.n	8024202 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80243bc:	d022      	beq.n	8024404 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 80243be:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80243c0:	1e6b      	subs	r3, r5, #1
 80243c2:	fb00 4003 	mla	r0, r0, r3, r4
 80243c6:	1400      	asrs	r0, r0, #16
 80243c8:	f53f af37 	bmi.w	802423a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80243cc:	3901      	subs	r1, #1
 80243ce:	4288      	cmp	r0, r1
 80243d0:	f6bf af33 	bge.w	802423a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80243d4:	9920      	ldr	r1, [sp, #128]	; 0x80
 80243d6:	fb01 6303 	mla	r3, r1, r3, r6
 80243da:	141b      	asrs	r3, r3, #16
 80243dc:	f53f af2d 	bmi.w	802423a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80243e0:	3a01      	subs	r2, #1
 80243e2:	4293      	cmp	r3, r2
 80243e4:	f6bf af29 	bge.w	802423a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80243e8:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80243ec:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 80243f0:	46a8      	mov	r8, r5
 80243f2:	f1b8 0f00 	cmp.w	r8, #0
 80243f6:	dc5e      	bgt.n	80244b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80243f8:	9b07      	ldr	r3, [sp, #28]
 80243fa:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80243fe:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8024402:	9307      	str	r3, [sp, #28]
 8024404:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024406:	2b00      	cmp	r3, #0
 8024408:	f340 80f6 	ble.w	80245f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802440c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024410:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024414:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024418:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802441a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802441e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024422:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024426:	eef0 6a62 	vmov.f32	s13, s5
 802442a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802442e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024432:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024436:	ee16 4a90 	vmov	r4, s13
 802443a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802443e:	eef0 6a43 	vmov.f32	s13, s6
 8024442:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024446:	ee12 2a90 	vmov	r2, s5
 802444a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802444e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024452:	ee13 2a10 	vmov	r2, s6
 8024456:	931f      	str	r3, [sp, #124]	; 0x7c
 8024458:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802445a:	fb92 f3f3 	sdiv	r3, r2, r3
 802445e:	9320      	str	r3, [sp, #128]	; 0x80
 8024460:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024462:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024464:	3b01      	subs	r3, #1
 8024466:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802446a:	930a      	str	r3, [sp, #40]	; 0x28
 802446c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802446e:	ee16 6a90 	vmov	r6, s13
 8024472:	bf14      	ite	ne
 8024474:	461d      	movne	r5, r3
 8024476:	4615      	moveq	r5, r2
 8024478:	eeb0 3a67 	vmov.f32	s6, s15
 802447c:	eef0 2a47 	vmov.f32	s5, s14
 8024480:	e6b0      	b.n	80241e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024482:	f111 0a01 	adds.w	sl, r1, #1
 8024486:	d487      	bmi.n	8024398 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024488:	45d6      	cmp	lr, sl
 802448a:	db85      	blt.n	8024398 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802448c:	f110 0a01 	adds.w	sl, r0, #1
 8024490:	d482      	bmi.n	8024398 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024492:	4553      	cmp	r3, sl
 8024494:	db80      	blt.n	8024398 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024496:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8024498:	9101      	str	r1, [sp, #4]
 802449a:	b21b      	sxth	r3, r3
 802449c:	e9cd 0202 	strd	r0, r2, [sp, #8]
 80244a0:	9300      	str	r3, [sp, #0]
 80244a2:	e9cd c704 	strd	ip, r7, [sp, #16]
 80244a6:	fa0f f38e 	sxth.w	r3, lr
 80244aa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80244ac:	9811      	ldr	r0, [sp, #68]	; 0x44
 80244ae:	4641      	mov	r1, r8
 80244b0:	f7ff fdb4 	bl	802401c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 80244b4:	e770      	b.n	8024398 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80244b6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80244b8:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80244ba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80244be:	1430      	asrs	r0, r6, #16
 80244c0:	1423      	asrs	r3, r4, #16
 80244c2:	fb01 3000 	mla	r0, r1, r0, r3
 80244c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80244c8:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 80244cc:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 80244d0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80244d4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80244d8:	8858      	ldrh	r0, [r3, #2]
 80244da:	f1be 0f00 	cmp.w	lr, #0
 80244de:	d00b      	beq.n	80244f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 80244e0:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80244e4:	3901      	subs	r1, #1
 80244e6:	0049      	lsls	r1, r1, #1
 80244e8:	3102      	adds	r1, #2
 80244ea:	eb03 0b01 	add.w	fp, r3, r1
 80244ee:	5a5b      	ldrh	r3, [r3, r1]
 80244f0:	930e      	str	r3, [sp, #56]	; 0x38
 80244f2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80244f6:	930f      	str	r3, [sp, #60]	; 0x3c
 80244f8:	ea4f 410c 	mov.w	r1, ip, lsl #16
 80244fc:	fb12 f30e 	smulbb	r3, r2, lr
 8024500:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024504:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8024508:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 802450c:	10db      	asrs	r3, r3, #3
 802450e:	ea41 010c 	orr.w	r1, r1, ip
 8024512:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024516:	f1ce 0c10 	rsb	ip, lr, #16
 802451a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802451e:	ebac 0c02 	sub.w	ip, ip, r2
 8024522:	ea4b 0000 	orr.w	r0, fp, r0
 8024526:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802452a:	4350      	muls	r0, r2
 802452c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802452e:	9f08      	ldr	r7, [sp, #32]
 8024530:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8024534:	fb0c 0c01 	mla	ip, ip, r1, r0
 8024538:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 802453c:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8024540:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8024542:	980e      	ldr	r0, [sp, #56]	; 0x38
 8024544:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024548:	0412      	lsls	r2, r2, #16
 802454a:	ea4b 0101 	orr.w	r1, fp, r1
 802454e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024552:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024556:	fb03 c101 	mla	r1, r3, r1, ip
 802455a:	4302      	orrs	r2, r0
 802455c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8024560:	fb03 1202 	mla	r2, r3, r2, r1
 8024564:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8024568:	0952      	lsrs	r2, r2, #5
 802456a:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 802456e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8024572:	f8b9 2000 	ldrh.w	r2, [r9]
 8024576:	ea4b 0303 	orr.w	r3, fp, r3
 802457a:	b29b      	uxth	r3, r3
 802457c:	1211      	asrs	r1, r2, #8
 802457e:	1218      	asrs	r0, r3, #8
 8024580:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024584:	fb11 f107 	smulbb	r1, r1, r7
 8024588:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 802458c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024590:	00d2      	lsls	r2, r2, #3
 8024592:	fb00 100a 	mla	r0, r0, sl, r1
 8024596:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 802459a:	10d9      	asrs	r1, r3, #3
 802459c:	b2d2      	uxtb	r2, r2
 802459e:	00db      	lsls	r3, r3, #3
 80245a0:	fb1c fc07 	smulbb	ip, ip, r7
 80245a4:	fb12 f207 	smulbb	r2, r2, r7
 80245a8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80245ac:	b2db      	uxtb	r3, r3
 80245ae:	b280      	uxth	r0, r0
 80245b0:	fb01 c10a 	mla	r1, r1, sl, ip
 80245b4:	fb03 230a 	mla	r3, r3, sl, r2
 80245b8:	b29b      	uxth	r3, r3
 80245ba:	b289      	uxth	r1, r1
 80245bc:	1c42      	adds	r2, r0, #1
 80245be:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80245c2:	f101 0c01 	add.w	ip, r1, #1
 80245c6:	1c5a      	adds	r2, r3, #1
 80245c8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80245cc:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80245d0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80245d2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80245d6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80245da:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80245de:	4310      	orrs	r0, r2
 80245e0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80245e4:	441c      	add	r4, r3
 80245e6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80245e8:	ea40 000c 	orr.w	r0, r0, ip
 80245ec:	f829 0b02 	strh.w	r0, [r9], #2
 80245f0:	441e      	add	r6, r3
 80245f2:	f108 38ff 	add.w	r8, r8, #4294967295
 80245f6:	e6fc      	b.n	80243f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 80245f8:	b013      	add	sp, #76	; 0x4c
 80245fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080245fe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 80245fe:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8024602:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8024606:	fb0e 4703 	mla	r7, lr, r3, r4
 802460a:	f1be 0f00 	cmp.w	lr, #0
 802460e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8024612:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8024616:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 802461a:	8808      	ldrh	r0, [r1, #0]
 802461c:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8024620:	db60      	blt.n	80246e4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8024622:	45f1      	cmp	r9, lr
 8024624:	dd5e      	ble.n	80246e4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8024626:	2c00      	cmp	r4, #0
 8024628:	db5a      	blt.n	80246e0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 802462a:	42a3      	cmp	r3, r4
 802462c:	dd58      	ble.n	80246e0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 802462e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8024632:	1c62      	adds	r2, r4, #1
 8024634:	d459      	bmi.n	80246ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8024636:	4293      	cmp	r3, r2
 8024638:	dd57      	ble.n	80246ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802463a:	2d00      	cmp	r5, #0
 802463c:	d055      	beq.n	80246ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802463e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8024642:	f11e 0e01 	adds.w	lr, lr, #1
 8024646:	d454      	bmi.n	80246f2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8024648:	45f1      	cmp	r9, lr
 802464a:	dd52      	ble.n	80246f2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 802464c:	2e00      	cmp	r6, #0
 802464e:	d050      	beq.n	80246f2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8024650:	2c00      	cmp	r4, #0
 8024652:	db4c      	blt.n	80246ee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8024654:	42a3      	cmp	r3, r4
 8024656:	dd4a      	ble.n	80246ee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8024658:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 802465c:	3401      	adds	r4, #1
 802465e:	d405      	bmi.n	802466c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8024660:	42a3      	cmp	r3, r4
 8024662:	dd03      	ble.n	802466c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8024664:	b115      	cbz	r5, 802466c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8024666:	3301      	adds	r3, #1
 8024668:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 802466c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8024670:	fb15 f406 	smulbb	r4, r5, r6
 8024674:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8024678:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 802467c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024680:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8024684:	ea43 0c0c 	orr.w	ip, r3, ip
 8024688:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802468c:	f1c6 0310 	rsb	r3, r6, #16
 8024690:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8024694:	1b5b      	subs	r3, r3, r5
 8024696:	ea4e 0707 	orr.w	r7, lr, r7
 802469a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 802469e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80246a2:	437d      	muls	r5, r7
 80246a4:	fb03 5c0c 	mla	ip, r3, ip, r5
 80246a8:	0403      	lsls	r3, r0, #16
 80246aa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80246ae:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80246b2:	4318      	orrs	r0, r3
 80246b4:	0413      	lsls	r3, r2, #16
 80246b6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80246ba:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80246be:	4313      	orrs	r3, r2
 80246c0:	fb04 c000 	mla	r0, r4, r0, ip
 80246c4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80246c8:	fb06 0003 	mla	r0, r6, r3, r0
 80246cc:	0d43      	lsrs	r3, r0, #21
 80246ce:	0940      	lsrs	r0, r0, #5
 80246d0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80246d4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80246d8:	4318      	orrs	r0, r3
 80246da:	8008      	strh	r0, [r1, #0]
 80246dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80246e0:	4684      	mov	ip, r0
 80246e2:	e7a6      	b.n	8024632 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 80246e4:	4607      	mov	r7, r0
 80246e6:	4684      	mov	ip, r0
 80246e8:	e7ab      	b.n	8024642 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 80246ea:	4607      	mov	r7, r0
 80246ec:	e7a9      	b.n	8024642 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 80246ee:	4602      	mov	r2, r0
 80246f0:	e7b4      	b.n	802465c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 80246f2:	4602      	mov	r2, r0
 80246f4:	e7ba      	b.n	802466c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

080246f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80246f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80246fa:	b08f      	sub	sp, #60	; 0x3c
 80246fc:	461d      	mov	r5, r3
 80246fe:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024700:	920c      	str	r2, [sp, #48]	; 0x30
 8024702:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8024706:	9107      	str	r1, [sp, #28]
 8024708:	6859      	ldr	r1, [r3, #4]
 802470a:	681b      	ldr	r3, [r3, #0]
 802470c:	900d      	str	r0, [sp, #52]	; 0x34
 802470e:	fb01 2707 	mla	r7, r1, r7, r2
 8024712:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8024716:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024718:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 802471c:	f8d3 8000 	ldr.w	r8, [r3]
 8024720:	9b07      	ldr	r3, [sp, #28]
 8024722:	2b00      	cmp	r3, #0
 8024724:	dc03      	bgt.n	802472e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8024726:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024728:	2b00      	cmp	r3, #0
 802472a:	f340 8181 	ble.w	8024a30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802472e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024730:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024734:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024738:	1e48      	subs	r0, r1, #1
 802473a:	f102 3cff 	add.w	ip, r2, #4294967295
 802473e:	2d00      	cmp	r5, #0
 8024740:	f340 809b 	ble.w	802487a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8024744:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024748:	ea4f 4326 	mov.w	r3, r6, asr #16
 802474c:	d406      	bmi.n	802475c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802474e:	4586      	cmp	lr, r0
 8024750:	da04      	bge.n	802475c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024752:	2b00      	cmp	r3, #0
 8024754:	db02      	blt.n	802475c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024756:	4563      	cmp	r3, ip
 8024758:	f2c0 8090 	blt.w	802487c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802475c:	f11e 0e01 	adds.w	lr, lr, #1
 8024760:	f100 8084 	bmi.w	802486c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024764:	4571      	cmp	r1, lr
 8024766:	f2c0 8081 	blt.w	802486c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802476a:	3301      	adds	r3, #1
 802476c:	d47e      	bmi.n	802486c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802476e:	429a      	cmp	r2, r3
 8024770:	db7c      	blt.n	802486c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024772:	46aa      	mov	sl, r5
 8024774:	46b9      	mov	r9, r7
 8024776:	f1ba 0f00 	cmp.w	sl, #0
 802477a:	f340 8099 	ble.w	80248b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802477e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024780:	1421      	asrs	r1, r4, #16
 8024782:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024786:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802478a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802478e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8024792:	f100 80d0 	bmi.w	8024936 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024796:	f10e 3bff 	add.w	fp, lr, #4294967295
 802479a:	4559      	cmp	r1, fp
 802479c:	f280 80cb 	bge.w	8024936 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80247a0:	2800      	cmp	r0, #0
 80247a2:	f2c0 80c8 	blt.w	8024936 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80247a6:	f103 3bff 	add.w	fp, r3, #4294967295
 80247aa:	4558      	cmp	r0, fp
 80247ac:	f280 80c3 	bge.w	8024936 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80247b0:	fa0f fe8e 	sxth.w	lr, lr
 80247b4:	fb00 110e 	mla	r1, r0, lr, r1
 80247b8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80247bc:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 80247c0:	8841      	ldrh	r1, [r0, #2]
 80247c2:	f1bc 0f00 	cmp.w	ip, #0
 80247c6:	d00b      	beq.n	80247e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 80247c8:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 80247cc:	3b01      	subs	r3, #1
 80247ce:	005b      	lsls	r3, r3, #1
 80247d0:	3302      	adds	r3, #2
 80247d2:	eb00 0e03 	add.w	lr, r0, r3
 80247d6:	5ac3      	ldrh	r3, [r0, r3]
 80247d8:	9308      	str	r3, [sp, #32]
 80247da:	f8be 3002 	ldrh.w	r3, [lr, #2]
 80247de:	9309      	str	r3, [sp, #36]	; 0x24
 80247e0:	ea4f 400b 	mov.w	r0, fp, lsl #16
 80247e4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80247e8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80247ec:	ea40 000b 	orr.w	r0, r0, fp
 80247f0:	fb12 f30c 	smulbb	r3, r2, ip
 80247f4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80247f8:	10db      	asrs	r3, r3, #3
 80247fa:	f1cc 0e10 	rsb	lr, ip, #16
 80247fe:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024802:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8024806:	ebae 0e02 	sub.w	lr, lr, r2
 802480a:	ea4b 0101 	orr.w	r1, fp, r1
 802480e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024812:	4351      	muls	r1, r2
 8024814:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024816:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802481a:	fb0e 1e00 	mla	lr, lr, r0, r1
 802481e:	0410      	lsls	r0, r2, #16
 8024820:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024824:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024828:	4310      	orrs	r0, r2
 802482a:	9a08      	ldr	r2, [sp, #32]
 802482c:	9908      	ldr	r1, [sp, #32]
 802482e:	0412      	lsls	r2, r2, #16
 8024830:	fb03 e000 	mla	r0, r3, r0, lr
 8024834:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024838:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 802483c:	ea42 020e 	orr.w	r2, r2, lr
 8024840:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8024844:	fb03 0302 	mla	r3, r3, r2, r0
 8024848:	0d5a      	lsrs	r2, r3, #21
 802484a:	095b      	lsrs	r3, r3, #5
 802484c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024850:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024854:	4313      	orrs	r3, r2
 8024856:	f8a9 3000 	strh.w	r3, [r9]
 802485a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802485c:	441c      	add	r4, r3
 802485e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024860:	f109 0902 	add.w	r9, r9, #2
 8024864:	441e      	add	r6, r3
 8024866:	f10a 3aff 	add.w	sl, sl, #4294967295
 802486a:	e784      	b.n	8024776 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 802486c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802486e:	441c      	add	r4, r3
 8024870:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024872:	3d01      	subs	r5, #1
 8024874:	441e      	add	r6, r3
 8024876:	3702      	adds	r7, #2
 8024878:	e761      	b.n	802473e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802487a:	d01d      	beq.n	80248b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802487c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802487e:	1e6b      	subs	r3, r5, #1
 8024880:	fb00 4003 	mla	r0, r0, r3, r4
 8024884:	1400      	asrs	r0, r0, #16
 8024886:	f53f af74 	bmi.w	8024772 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802488a:	3901      	subs	r1, #1
 802488c:	4288      	cmp	r0, r1
 802488e:	f6bf af70 	bge.w	8024772 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024892:	991c      	ldr	r1, [sp, #112]	; 0x70
 8024894:	fb01 6303 	mla	r3, r1, r3, r6
 8024898:	141b      	asrs	r3, r3, #16
 802489a:	f53f af6a 	bmi.w	8024772 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802489e:	3a01      	subs	r2, #1
 80248a0:	4293      	cmp	r3, r2
 80248a2:	f6bf af66 	bge.w	8024772 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80248a6:	46a9      	mov	r9, r5
 80248a8:	46ba      	mov	sl, r7
 80248aa:	f1b9 0f00 	cmp.w	r9, #0
 80248ae:	dc5a      	bgt.n	8024966 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 80248b0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80248b4:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80248b8:	9b07      	ldr	r3, [sp, #28]
 80248ba:	2b00      	cmp	r3, #0
 80248bc:	f340 80b8 	ble.w	8024a30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80248c0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80248c4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80248c8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80248cc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80248ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80248d2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80248d6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80248da:	eef0 6a62 	vmov.f32	s13, s5
 80248de:	ee61 7a27 	vmul.f32	s15, s2, s15
 80248e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80248e6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80248ea:	ee16 4a90 	vmov	r4, s13
 80248ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80248f2:	eef0 6a43 	vmov.f32	s13, s6
 80248f6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80248fa:	ee12 2a90 	vmov	r2, s5
 80248fe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024902:	fb92 f3f3 	sdiv	r3, r2, r3
 8024906:	ee13 2a10 	vmov	r2, s6
 802490a:	931b      	str	r3, [sp, #108]	; 0x6c
 802490c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802490e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024912:	931c      	str	r3, [sp, #112]	; 0x70
 8024914:	9b07      	ldr	r3, [sp, #28]
 8024916:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024918:	3b01      	subs	r3, #1
 802491a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802491e:	9307      	str	r3, [sp, #28]
 8024920:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024922:	ee16 6a90 	vmov	r6, s13
 8024926:	bf14      	ite	ne
 8024928:	461d      	movne	r5, r3
 802492a:	4615      	moveq	r5, r2
 802492c:	eeb0 3a67 	vmov.f32	s6, s15
 8024930:	eef0 2a47 	vmov.f32	s5, s14
 8024934:	e6f4      	b.n	8024720 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8024936:	f111 0b01 	adds.w	fp, r1, #1
 802493a:	d48e      	bmi.n	802485a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802493c:	45de      	cmp	lr, fp
 802493e:	db8c      	blt.n	802485a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024940:	f110 0b01 	adds.w	fp, r0, #1
 8024944:	d489      	bmi.n	802485a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024946:	455b      	cmp	r3, fp
 8024948:	db87      	blt.n	802485a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802494a:	b21b      	sxth	r3, r3
 802494c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8024950:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8024954:	9300      	str	r3, [sp, #0]
 8024956:	4642      	mov	r2, r8
 8024958:	fa0f f38e 	sxth.w	r3, lr
 802495c:	4649      	mov	r1, r9
 802495e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8024960:	f7ff fe4d 	bl	80245fe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8024964:	e779      	b.n	802485a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024966:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024968:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802496c:	1420      	asrs	r0, r4, #16
 802496e:	1431      	asrs	r1, r6, #16
 8024970:	fb03 0101 	mla	r1, r3, r1, r0
 8024974:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8024978:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 802497c:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8024980:	8841      	ldrh	r1, [r0, #2]
 8024982:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024986:	f1be 0f00 	cmp.w	lr, #0
 802498a:	d00b      	beq.n	80249a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 802498c:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8024990:	3b01      	subs	r3, #1
 8024992:	005b      	lsls	r3, r3, #1
 8024994:	3302      	adds	r3, #2
 8024996:	eb00 0b03 	add.w	fp, r0, r3
 802499a:	5ac3      	ldrh	r3, [r0, r3]
 802499c:	930a      	str	r3, [sp, #40]	; 0x28
 802499e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80249a2:	930b      	str	r3, [sp, #44]	; 0x2c
 80249a4:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80249a8:	fb12 f30e 	smulbb	r3, r2, lr
 80249ac:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80249b0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80249b4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80249b8:	10db      	asrs	r3, r3, #3
 80249ba:	ea40 000c 	orr.w	r0, r0, ip
 80249be:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80249c2:	f1ce 0c10 	rsb	ip, lr, #16
 80249c6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80249ca:	ebac 0c02 	sub.w	ip, ip, r2
 80249ce:	ea4b 0101 	orr.w	r1, fp, r1
 80249d2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80249d6:	4351      	muls	r1, r2
 80249d8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80249da:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80249de:	fb0c 1c00 	mla	ip, ip, r0, r1
 80249e2:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80249e6:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 80249ea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80249ec:	990a      	ldr	r1, [sp, #40]	; 0x28
 80249ee:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80249f2:	0412      	lsls	r2, r2, #16
 80249f4:	ea4b 0000 	orr.w	r0, fp, r0
 80249f8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80249fc:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8024a00:	fb03 c000 	mla	r0, r3, r0, ip
 8024a04:	ea42 0b0b 	orr.w	fp, r2, fp
 8024a08:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8024a0c:	fb03 000b 	mla	r0, r3, fp, r0
 8024a10:	0d43      	lsrs	r3, r0, #21
 8024a12:	0940      	lsrs	r0, r0, #5
 8024a14:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024a18:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024a1c:	4318      	orrs	r0, r3
 8024a1e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024a20:	f82a 0b02 	strh.w	r0, [sl], #2
 8024a24:	441c      	add	r4, r3
 8024a26:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024a28:	f109 39ff 	add.w	r9, r9, #4294967295
 8024a2c:	441e      	add	r6, r3
 8024a2e:	e73c      	b.n	80248aa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8024a30:	b00f      	add	sp, #60	; 0x3c
 8024a32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024a36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8024a36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024a3a:	b085      	sub	sp, #20
 8024a3c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8024a40:	9102      	str	r1, [sp, #8]
 8024a42:	2c00      	cmp	r4, #0
 8024a44:	fb04 7103 	mla	r1, r4, r3, r7
 8024a48:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8024a4c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8024a50:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024a54:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8024a58:	f2c0 811b 	blt.w	8024c92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024a5c:	45a6      	cmp	lr, r4
 8024a5e:	f340 8118 	ble.w	8024c92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024a62:	2f00      	cmp	r7, #0
 8024a64:	f2c0 8113 	blt.w	8024c8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8024a68:	42bb      	cmp	r3, r7
 8024a6a:	f340 8110 	ble.w	8024c8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8024a6e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8024a72:	1c7a      	adds	r2, r7, #1
 8024a74:	f100 8110 	bmi.w	8024c98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8024a78:	4293      	cmp	r3, r2
 8024a7a:	f340 810d 	ble.w	8024c98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8024a7e:	2e00      	cmp	r6, #0
 8024a80:	f000 810c 	beq.w	8024c9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8024a84:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8024a88:	3401      	adds	r4, #1
 8024a8a:	f100 810b 	bmi.w	8024ca4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8024a8e:	45a6      	cmp	lr, r4
 8024a90:	f340 8108 	ble.w	8024ca4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8024a94:	2800      	cmp	r0, #0
 8024a96:	f000 8108 	beq.w	8024caa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8024a9a:	2f00      	cmp	r7, #0
 8024a9c:	f2c0 8100 	blt.w	8024ca0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8024aa0:	42bb      	cmp	r3, r7
 8024aa2:	f340 80fd 	ble.w	8024ca0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8024aa6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8024aaa:	3701      	adds	r7, #1
 8024aac:	f100 8100 	bmi.w	8024cb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8024ab0:	42bb      	cmp	r3, r7
 8024ab2:	f340 80fd 	ble.w	8024cb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8024ab6:	2e00      	cmp	r6, #0
 8024ab8:	f000 80fc 	beq.w	8024cb4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8024abc:	3301      	adds	r3, #1
 8024abe:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8024ac2:	b2b6      	uxth	r6, r6
 8024ac4:	b280      	uxth	r0, r0
 8024ac6:	fb00 fe06 	mul.w	lr, r0, r6
 8024aca:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8024ace:	0136      	lsls	r6, r6, #4
 8024ad0:	eba6 070e 	sub.w	r7, r6, lr
 8024ad4:	b280      	uxth	r0, r0
 8024ad6:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8024ada:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8024ade:	b2bf      	uxth	r7, r7
 8024ae0:	1a1b      	subs	r3, r3, r0
 8024ae2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8024ae6:	b29b      	uxth	r3, r3
 8024ae8:	fb0a f607 	mul.w	r6, sl, r7
 8024aec:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8024af0:	fb0b 6603 	mla	r6, fp, r3, r6
 8024af4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8024af8:	fb00 6609 	mla	r6, r0, r9, r6
 8024afc:	fb0e 6608 	mla	r6, lr, r8, r6
 8024b00:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024b04:	9600      	str	r6, [sp, #0]
 8024b06:	2e00      	cmp	r6, #0
 8024b08:	f000 80be 	beq.w	8024c88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8024b0c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024b10:	fb0b fc0c 	mul.w	ip, fp, ip
 8024b14:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8024b18:	fb0b f505 	mul.w	r5, fp, r5
 8024b1c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8024b20:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8024b24:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024b28:	44dc      	add	ip, fp
 8024b2a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b2e:	9501      	str	r5, [sp, #4]
 8024b30:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8024b34:	9503      	str	r5, [sp, #12]
 8024b36:	9d01      	ldr	r5, [sp, #4]
 8024b38:	9e02      	ldr	r6, [sp, #8]
 8024b3a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8024b3e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024b42:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8024b46:	fb0a fc0c 	mul.w	ip, sl, ip
 8024b4a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8024b4e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024b52:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024b56:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024b5a:	4465      	add	r5, ip
 8024b5c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024b60:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024b64:	fb09 fc0c 	mul.w	ip, r9, ip
 8024b68:	fb09 f904 	mul.w	r9, r9, r4
 8024b6c:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8024b70:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024b74:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8024b78:	fb08 f404 	mul.w	r4, r8, r4
 8024b7c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024b80:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024b84:	fb08 f802 	mul.w	r8, r8, r2
 8024b88:	fb0a fa01 	mul.w	sl, sl, r1
 8024b8c:	0a22      	lsrs	r2, r4, #8
 8024b8e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8024b92:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024b96:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8024b9a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8024b9e:	4414      	add	r4, r2
 8024ba0:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8024ba4:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8024ba8:	0a2d      	lsrs	r5, r5, #8
 8024baa:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8024bae:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024bb2:	9a03      	ldr	r2, [sp, #12]
 8024bb4:	8836      	ldrh	r6, [r6, #0]
 8024bb6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024bba:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024bbe:	437d      	muls	r5, r7
 8024bc0:	4461      	add	r1, ip
 8024bc2:	0a24      	lsrs	r4, r4, #8
 8024bc4:	fb02 5503 	mla	r5, r2, r3, r5
 8024bc8:	0a09      	lsrs	r1, r1, #8
 8024bca:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8024bce:	fb04 540e 	mla	r4, r4, lr, r5
 8024bd2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024bd6:	fb01 4100 	mla	r1, r1, r0, r4
 8024bda:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024bde:	0a09      	lsrs	r1, r1, #8
 8024be0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024be4:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8024be8:	fb07 f70a 	mul.w	r7, r7, sl
 8024bec:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024bf0:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8024bf4:	fb03 7101 	mla	r1, r3, r1, r7
 8024bf8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024bfc:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8024c00:	fb0e 1e08 	mla	lr, lr, r8, r1
 8024c04:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8024c08:	fb00 e101 	mla	r1, r0, r1, lr
 8024c0c:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8024c10:	9a00      	ldr	r2, [sp, #0]
 8024c12:	b287      	uxth	r7, r0
 8024c14:	437a      	muls	r2, r7
 8024c16:	0a09      	lsrs	r1, r1, #8
 8024c18:	1c53      	adds	r3, r2, #1
 8024c1a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024c1e:	4321      	orrs	r1, r4
 8024c20:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024c24:	1235      	asrs	r5, r6, #8
 8024c26:	0c0a      	lsrs	r2, r1, #16
 8024c28:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8024c2c:	b2db      	uxtb	r3, r3
 8024c2e:	fb12 f207 	smulbb	r2, r2, r7
 8024c32:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8024c36:	fb05 2503 	mla	r5, r5, r3, r2
 8024c3a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8024c3e:	10f2      	asrs	r2, r6, #3
 8024c40:	b2c8      	uxtb	r0, r1
 8024c42:	00f6      	lsls	r6, r6, #3
 8024c44:	fb14 f407 	smulbb	r4, r4, r7
 8024c48:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024c4c:	b2f6      	uxtb	r6, r6
 8024c4e:	fb10 f007 	smulbb	r0, r0, r7
 8024c52:	fb02 4203 	mla	r2, r2, r3, r4
 8024c56:	b2ad      	uxth	r5, r5
 8024c58:	fb06 0303 	mla	r3, r6, r3, r0
 8024c5c:	b299      	uxth	r1, r3
 8024c5e:	b294      	uxth	r4, r2
 8024c60:	1c6b      	adds	r3, r5, #1
 8024c62:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8024c66:	1c62      	adds	r2, r4, #1
 8024c68:	1c4b      	adds	r3, r1, #1
 8024c6a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8024c6e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8024c72:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8024c76:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024c7a:	0952      	lsrs	r2, r2, #5
 8024c7c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024c80:	432b      	orrs	r3, r5
 8024c82:	4313      	orrs	r3, r2
 8024c84:	9a02      	ldr	r2, [sp, #8]
 8024c86:	8013      	strh	r3, [r2, #0]
 8024c88:	b005      	add	sp, #20
 8024c8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024c8e:	2500      	movs	r5, #0
 8024c90:	e6ef      	b.n	8024a72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8024c92:	2100      	movs	r1, #0
 8024c94:	460d      	mov	r5, r1
 8024c96:	e6f7      	b.n	8024a88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8024c98:	2100      	movs	r1, #0
 8024c9a:	e6f5      	b.n	8024a88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8024c9c:	4631      	mov	r1, r6
 8024c9e:	e6f3      	b.n	8024a88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8024ca0:	2400      	movs	r4, #0
 8024ca2:	e702      	b.n	8024aaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8024ca4:	2200      	movs	r2, #0
 8024ca6:	4614      	mov	r4, r2
 8024ca8:	e70b      	b.n	8024ac2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8024caa:	4602      	mov	r2, r0
 8024cac:	4604      	mov	r4, r0
 8024cae:	e708      	b.n	8024ac2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8024cb0:	2200      	movs	r2, #0
 8024cb2:	e706      	b.n	8024ac2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8024cb4:	4632      	mov	r2, r6
 8024cb6:	e704      	b.n	8024ac2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08024cb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024cb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024cbc:	b09d      	sub	sp, #116	; 0x74
 8024cbe:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8024cc2:	9219      	str	r2, [sp, #100]	; 0x64
 8024cc4:	9307      	str	r3, [sp, #28]
 8024cc6:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8024cc8:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8024ccc:	931a      	str	r3, [sp, #104]	; 0x68
 8024cce:	9117      	str	r1, [sp, #92]	; 0x5c
 8024cd0:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8024cd4:	901b      	str	r0, [sp, #108]	; 0x6c
 8024cd6:	6850      	ldr	r0, [r2, #4]
 8024cd8:	6812      	ldr	r2, [r2, #0]
 8024cda:	fb00 1303 	mla	r3, r0, r3, r1
 8024cde:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024ce2:	930a      	str	r3, [sp, #40]	; 0x28
 8024ce4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024ce6:	681b      	ldr	r3, [r3, #0]
 8024ce8:	9310      	str	r3, [sp, #64]	; 0x40
 8024cea:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8024cee:	930b      	str	r3, [sp, #44]	; 0x2c
 8024cf0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024cf2:	2b00      	cmp	r3, #0
 8024cf4:	dc03      	bgt.n	8024cfe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8024cf6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8024cf8:	2b00      	cmp	r3, #0
 8024cfa:	f340 8375 	ble.w	80253e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8024cfe:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024d00:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024d04:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024d08:	1e48      	subs	r0, r1, #1
 8024d0a:	1e57      	subs	r7, r2, #1
 8024d0c:	9b07      	ldr	r3, [sp, #28]
 8024d0e:	2b00      	cmp	r3, #0
 8024d10:	f340 818e 	ble.w	8025030 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8024d14:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024d18:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024d1c:	d406      	bmi.n	8024d2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8024d1e:	4584      	cmp	ip, r0
 8024d20:	da04      	bge.n	8024d2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8024d22:	2b00      	cmp	r3, #0
 8024d24:	db02      	blt.n	8024d2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8024d26:	42bb      	cmp	r3, r7
 8024d28:	f2c0 8183 	blt.w	8025032 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8024d2c:	f11c 0c01 	adds.w	ip, ip, #1
 8024d30:	f100 8173 	bmi.w	802501a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024d34:	4561      	cmp	r1, ip
 8024d36:	f2c0 8170 	blt.w	802501a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024d3a:	3301      	adds	r3, #1
 8024d3c:	f100 816d 	bmi.w	802501a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024d40:	429a      	cmp	r2, r3
 8024d42:	f2c0 816a 	blt.w	802501a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024d46:	9b07      	ldr	r3, [sp, #28]
 8024d48:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8024d4a:	9318      	str	r3, [sp, #96]	; 0x60
 8024d4c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024d4e:	2b00      	cmp	r3, #0
 8024d50:	f340 818c 	ble.w	802506c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8024d54:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8024d56:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024d58:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8024d5c:	689b      	ldr	r3, [r3, #8]
 8024d5e:	1422      	asrs	r2, r4, #16
 8024d60:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8024d64:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8024d68:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024d6c:	f100 81cd 	bmi.w	802510a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024d70:	f103 38ff 	add.w	r8, r3, #4294967295
 8024d74:	4542      	cmp	r2, r8
 8024d76:	f280 81c8 	bge.w	802510a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024d7a:	f1bc 0f00 	cmp.w	ip, #0
 8024d7e:	f2c0 81c4 	blt.w	802510a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024d82:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024d86:	45c4      	cmp	ip, r8
 8024d88:	f280 81bf 	bge.w	802510a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024d8c:	b21b      	sxth	r3, r3
 8024d8e:	fb0c 2203 	mla	r2, ip, r3, r2
 8024d92:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024d94:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8024d98:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8024d9c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8024da0:	2800      	cmp	r0, #0
 8024da2:	f000 81a9 	beq.w	80250f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8024da6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8024daa:	950c      	str	r5, [sp, #48]	; 0x30
 8024dac:	0e2d      	lsrs	r5, r5, #24
 8024dae:	9513      	str	r5, [sp, #76]	; 0x4c
 8024db0:	b181      	cbz	r1, 8024dd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8024db2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8024db6:	3b01      	subs	r3, #1
 8024db8:	009b      	lsls	r3, r3, #2
 8024dba:	3304      	adds	r3, #4
 8024dbc:	eb08 0c03 	add.w	ip, r8, r3
 8024dc0:	f858 3003 	ldr.w	r3, [r8, r3]
 8024dc4:	9308      	str	r3, [sp, #32]
 8024dc6:	0e1b      	lsrs	r3, r3, #24
 8024dc8:	9311      	str	r3, [sp, #68]	; 0x44
 8024dca:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8024dce:	930d      	str	r3, [sp, #52]	; 0x34
 8024dd0:	0e1b      	lsrs	r3, r3, #24
 8024dd2:	9314      	str	r3, [sp, #80]	; 0x50
 8024dd4:	b280      	uxth	r0, r0
 8024dd6:	b289      	uxth	r1, r1
 8024dd8:	fb00 f901 	mul.w	r9, r0, r1
 8024ddc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8024de0:	0100      	lsls	r0, r0, #4
 8024de2:	eba0 0809 	sub.w	r8, r0, r9
 8024de6:	b289      	uxth	r1, r1
 8024de8:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8024dec:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8024dee:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024df0:	fa1f f888 	uxth.w	r8, r8
 8024df4:	1a5b      	subs	r3, r3, r1
 8024df6:	b29b      	uxth	r3, r3
 8024df8:	fb08 f000 	mul.w	r0, r8, r0
 8024dfc:	fb03 000e 	mla	r0, r3, lr, r0
 8024e00:	fb01 0005 	mla	r0, r1, r5, r0
 8024e04:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024e06:	fb09 0005 	mla	r0, r9, r5, r0
 8024e0a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8024e0e:	2800      	cmp	r0, #0
 8024e10:	f000 80fa 	beq.w	8025008 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024e14:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024e18:	d01b      	beq.n	8024e52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8024e1a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8024e1e:	fb0e fa0a 	mul.w	sl, lr, sl
 8024e22:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024e26:	fb0e fe02 	mul.w	lr, lr, r2
 8024e2a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8024e2e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024e32:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024e36:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8024e3a:	4452      	add	r2, sl
 8024e3c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024e40:	0a12      	lsrs	r2, r2, #8
 8024e42:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024e46:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024e4a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024e4e:	ea42 020c 	orr.w	r2, r2, ip
 8024e52:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024e54:	2dff      	cmp	r5, #255	; 0xff
 8024e56:	d021      	beq.n	8024e9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8024e58:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024e5a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024e5e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024e60:	fb05 fb0b 	mul.w	fp, r5, fp
 8024e64:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024e66:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024e6a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024e6c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024e70:	fb05 fa0a 	mul.w	sl, r5, sl
 8024e74:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024e78:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024e7c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024e80:	44de      	add	lr, fp
 8024e82:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024e86:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024e8a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024e8e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024e92:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024e96:	ea4e 050a 	orr.w	r5, lr, sl
 8024e9a:	950c      	str	r5, [sp, #48]	; 0x30
 8024e9c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024e9e:	2dff      	cmp	r5, #255	; 0xff
 8024ea0:	d021      	beq.n	8024ee6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8024ea2:	9d08      	ldr	r5, [sp, #32]
 8024ea4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024ea8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024eaa:	fb05 fb0b 	mul.w	fp, r5, fp
 8024eae:	9d08      	ldr	r5, [sp, #32]
 8024eb0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024eb4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024eb6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024eba:	fb05 fa0a 	mul.w	sl, r5, sl
 8024ebe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024ec2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024ec6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024eca:	44de      	add	lr, fp
 8024ecc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024ed0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024ed4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024ed8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024edc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024ee0:	ea4e 050a 	orr.w	r5, lr, sl
 8024ee4:	9508      	str	r5, [sp, #32]
 8024ee6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024ee8:	2dff      	cmp	r5, #255	; 0xff
 8024eea:	d021      	beq.n	8024f30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8024eec:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024eee:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024ef2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024ef4:	fb05 fb0b 	mul.w	fp, r5, fp
 8024ef8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024efa:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024efe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024f00:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024f04:	fb05 fa0a 	mul.w	sl, r5, sl
 8024f08:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024f0c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024f10:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024f14:	44de      	add	lr, fp
 8024f16:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024f1a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024f1e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024f22:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024f26:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024f2a:	ea4e 050a 	orr.w	r5, lr, sl
 8024f2e:	950d      	str	r5, [sp, #52]	; 0x34
 8024f30:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024f32:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024f36:	9d08      	ldr	r5, [sp, #32]
 8024f38:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8024f3c:	fb08 fc0c 	mul.w	ip, r8, ip
 8024f40:	fb03 cc0e 	mla	ip, r3, lr, ip
 8024f44:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024f48:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024f4a:	fb01 cc0e 	mla	ip, r1, lr, ip
 8024f4e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024f52:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024f54:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024f58:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024f5c:	fb08 f80e 	mul.w	r8, r8, lr
 8024f60:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024f64:	fb03 8202 	mla	r2, r3, r2, r8
 8024f68:	9b08      	ldr	r3, [sp, #32]
 8024f6a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024f6c:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8024f70:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024f72:	fb01 220a 	mla	r2, r1, sl, r2
 8024f76:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8024f7a:	fb09 2901 	mla	r9, r9, r1, r2
 8024f7e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024f80:	883b      	ldrh	r3, [r7, #0]
 8024f82:	4342      	muls	r2, r0
 8024f84:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024f88:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024f8c:	1c50      	adds	r0, r2, #1
 8024f8e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024f92:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024f96:	ea4c 0c09 	orr.w	ip, ip, r9
 8024f9a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8024f9e:	1219      	asrs	r1, r3, #8
 8024fa0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8024fa4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8024fa8:	b2c0      	uxtb	r0, r0
 8024faa:	fb12 f205 	smulbb	r2, r2, r5
 8024fae:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024fb2:	fb01 2100 	mla	r1, r1, r0, r2
 8024fb6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8024fba:	10da      	asrs	r2, r3, #3
 8024fbc:	fa5f fc8c 	uxtb.w	ip, ip
 8024fc0:	00db      	lsls	r3, r3, #3
 8024fc2:	fb1c fc05 	smulbb	ip, ip, r5
 8024fc6:	b2db      	uxtb	r3, r3
 8024fc8:	b289      	uxth	r1, r1
 8024fca:	fb03 c300 	mla	r3, r3, r0, ip
 8024fce:	fa1f fc83 	uxth.w	ip, r3
 8024fd2:	1c4b      	adds	r3, r1, #1
 8024fd4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024fd8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024fdc:	fb1e fe05 	smulbb	lr, lr, r5
 8024fe0:	f10c 0301 	add.w	r3, ip, #1
 8024fe4:	fb02 e200 	mla	r2, r2, r0, lr
 8024fe8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8024fec:	b292      	uxth	r2, r2
 8024fee:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8024ff2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024ff6:	430b      	orrs	r3, r1
 8024ff8:	1c51      	adds	r1, r2, #1
 8024ffa:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024ffe:	0952      	lsrs	r2, r2, #5
 8025000:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025004:	4313      	orrs	r3, r2
 8025006:	803b      	strh	r3, [r7, #0]
 8025008:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802500a:	441c      	add	r4, r3
 802500c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802500e:	441e      	add	r6, r3
 8025010:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025012:	3b01      	subs	r3, #1
 8025014:	3702      	adds	r7, #2
 8025016:	9318      	str	r3, [sp, #96]	; 0x60
 8025018:	e698      	b.n	8024d4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802501a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802501c:	441c      	add	r4, r3
 802501e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8025020:	441e      	add	r6, r3
 8025022:	9b07      	ldr	r3, [sp, #28]
 8025024:	3b01      	subs	r3, #1
 8025026:	9307      	str	r3, [sp, #28]
 8025028:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802502a:	3302      	adds	r3, #2
 802502c:	930a      	str	r3, [sp, #40]	; 0x28
 802502e:	e66d      	b.n	8024d0c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8025030:	d023      	beq.n	802507a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8025032:	9b07      	ldr	r3, [sp, #28]
 8025034:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8025036:	3b01      	subs	r3, #1
 8025038:	fb00 4003 	mla	r0, r0, r3, r4
 802503c:	1400      	asrs	r0, r0, #16
 802503e:	f53f ae82 	bmi.w	8024d46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8025042:	3901      	subs	r1, #1
 8025044:	4288      	cmp	r0, r1
 8025046:	f6bf ae7e 	bge.w	8024d46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802504a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 802504c:	fb01 6303 	mla	r3, r1, r3, r6
 8025050:	141b      	asrs	r3, r3, #16
 8025052:	f53f ae78 	bmi.w	8024d46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8025056:	3a01      	subs	r2, #1
 8025058:	4293      	cmp	r3, r2
 802505a:	f6bf ae74 	bge.w	8024d46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802505e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8025062:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8025066:	f1bb 0f00 	cmp.w	fp, #0
 802506a:	dc6c      	bgt.n	8025146 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802506c:	9b07      	ldr	r3, [sp, #28]
 802506e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8025072:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025074:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8025078:	930a      	str	r3, [sp, #40]	; 0x28
 802507a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802507c:	2b00      	cmp	r3, #0
 802507e:	f340 81b3 	ble.w	80253e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8025082:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025086:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802508a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802508e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025090:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025094:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025098:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802509c:	eef0 6a62 	vmov.f32	s13, s5
 80250a0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80250a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80250a8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80250ac:	ee16 4a90 	vmov	r4, s13
 80250b0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80250b4:	eef0 6a43 	vmov.f32	s13, s6
 80250b8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80250bc:	ee12 2a90 	vmov	r2, s5
 80250c0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80250c4:	fb92 f3f3 	sdiv	r3, r2, r3
 80250c8:	ee13 2a10 	vmov	r2, s6
 80250cc:	9329      	str	r3, [sp, #164]	; 0xa4
 80250ce:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80250d0:	fb92 f3f3 	sdiv	r3, r2, r3
 80250d4:	932a      	str	r3, [sp, #168]	; 0xa8
 80250d6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80250d8:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80250da:	3b01      	subs	r3, #1
 80250dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80250e0:	9317      	str	r3, [sp, #92]	; 0x5c
 80250e2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80250e4:	bf08      	it	eq
 80250e6:	4613      	moveq	r3, r2
 80250e8:	ee16 6a90 	vmov	r6, s13
 80250ec:	9307      	str	r3, [sp, #28]
 80250ee:	eeb0 3a67 	vmov.f32	s6, s15
 80250f2:	eef0 2a47 	vmov.f32	s5, s14
 80250f6:	e5fb      	b.n	8024cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80250f8:	2900      	cmp	r1, #0
 80250fa:	f43f ae6b 	beq.w	8024dd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80250fe:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8025102:	9308      	str	r3, [sp, #32]
 8025104:	0e1b      	lsrs	r3, r3, #24
 8025106:	9311      	str	r3, [sp, #68]	; 0x44
 8025108:	e664      	b.n	8024dd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802510a:	f112 0801 	adds.w	r8, r2, #1
 802510e:	f53f af7b 	bmi.w	8025008 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025112:	4543      	cmp	r3, r8
 8025114:	f6ff af78 	blt.w	8025008 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025118:	f11c 0801 	adds.w	r8, ip, #1
 802511c:	f53f af74 	bmi.w	8025008 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025120:	45c6      	cmp	lr, r8
 8025122:	f6ff af71 	blt.w	8025008 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025126:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8025128:	9201      	str	r2, [sp, #4]
 802512a:	fa0f f28e 	sxth.w	r2, lr
 802512e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8025132:	e9cd c002 	strd	ip, r0, [sp, #8]
 8025136:	9200      	str	r2, [sp, #0]
 8025138:	b21b      	sxth	r3, r3
 802513a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802513c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802513e:	4639      	mov	r1, r7
 8025140:	f7ff fc79 	bl	8024a36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8025144:	e760      	b.n	8025008 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025146:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8025148:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802514a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802514e:	1427      	asrs	r7, r4, #16
 8025150:	1433      	asrs	r3, r6, #16
 8025152:	fb01 7303 	mla	r3, r1, r3, r7
 8025156:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802515a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802515e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025162:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025166:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802516a:	2a00      	cmp	r2, #0
 802516c:	f000 8133 	beq.w	80253d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8025170:	687d      	ldr	r5, [r7, #4]
 8025172:	950e      	str	r5, [sp, #56]	; 0x38
 8025174:	0e2d      	lsrs	r5, r5, #24
 8025176:	9515      	str	r5, [sp, #84]	; 0x54
 8025178:	b178      	cbz	r0, 802519a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802517a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 802517e:	3901      	subs	r1, #1
 8025180:	0089      	lsls	r1, r1, #2
 8025182:	3104      	adds	r1, #4
 8025184:	eb07 0e01 	add.w	lr, r7, r1
 8025188:	5879      	ldr	r1, [r7, r1]
 802518a:	9109      	str	r1, [sp, #36]	; 0x24
 802518c:	0e09      	lsrs	r1, r1, #24
 802518e:	9112      	str	r1, [sp, #72]	; 0x48
 8025190:	f8de 1004 	ldr.w	r1, [lr, #4]
 8025194:	910f      	str	r1, [sp, #60]	; 0x3c
 8025196:	0e09      	lsrs	r1, r1, #24
 8025198:	9116      	str	r1, [sp, #88]	; 0x58
 802519a:	b292      	uxth	r2, r2
 802519c:	b280      	uxth	r0, r0
 802519e:	fb02 f800 	mul.w	r8, r2, r0
 80251a2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80251a6:	0112      	lsls	r2, r2, #4
 80251a8:	eba2 0e08 	sub.w	lr, r2, r8
 80251ac:	b280      	uxth	r0, r0
 80251ae:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80251b2:	9915      	ldr	r1, [sp, #84]	; 0x54
 80251b4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80251b6:	fa1f fe8e 	uxth.w	lr, lr
 80251ba:	1a12      	subs	r2, r2, r0
 80251bc:	b292      	uxth	r2, r2
 80251be:	fb0e f101 	mul.w	r1, lr, r1
 80251c2:	fb02 110c 	mla	r1, r2, ip, r1
 80251c6:	fb00 1105 	mla	r1, r0, r5, r1
 80251ca:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80251cc:	fb08 1105 	mla	r1, r8, r5, r1
 80251d0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80251d4:	2900      	cmp	r1, #0
 80251d6:	f000 80f5 	beq.w	80253c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 80251da:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80251de:	d019      	beq.n	8025214 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 80251e0:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80251e4:	fb0c fa0a 	mul.w	sl, ip, sl
 80251e8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80251ec:	fb0c fc03 	mul.w	ip, ip, r3
 80251f0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80251f4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80251f8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80251fc:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8025200:	4453      	add	r3, sl
 8025202:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8025206:	0a1b      	lsrs	r3, r3, #8
 8025208:	0a3f      	lsrs	r7, r7, #8
 802520a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802520e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8025212:	433b      	orrs	r3, r7
 8025214:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025216:	2dff      	cmp	r5, #255	; 0xff
 8025218:	d020      	beq.n	802525c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 802521a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802521c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025220:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025222:	436f      	muls	r7, r5
 8025224:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025226:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802522a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802522c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025230:	fb05 fa0a 	mul.w	sl, r5, sl
 8025234:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025238:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802523c:	44bc      	add	ip, r7
 802523e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025242:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025246:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802524a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802524e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025252:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025256:	ea4c 050a 	orr.w	r5, ip, sl
 802525a:	950e      	str	r5, [sp, #56]	; 0x38
 802525c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802525e:	2dff      	cmp	r5, #255	; 0xff
 8025260:	d020      	beq.n	80252a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8025262:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025264:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025268:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802526a:	436f      	muls	r7, r5
 802526c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802526e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025272:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025274:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025278:	fb05 fa0a 	mul.w	sl, r5, sl
 802527c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025280:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025284:	44bc      	add	ip, r7
 8025286:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802528a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802528e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025292:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025296:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802529a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802529e:	ea4c 050a 	orr.w	r5, ip, sl
 80252a2:	9509      	str	r5, [sp, #36]	; 0x24
 80252a4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80252a6:	2dff      	cmp	r5, #255	; 0xff
 80252a8:	d020      	beq.n	80252ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80252aa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80252ac:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80252b0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80252b2:	436f      	muls	r7, r5
 80252b4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80252b6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80252ba:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80252bc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80252c0:	fb05 fa0a 	mul.w	sl, r5, sl
 80252c4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80252c8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80252cc:	44bc      	add	ip, r7
 80252ce:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80252d2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80252d6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80252da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80252de:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80252e2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80252e6:	ea4c 050a 	orr.w	r5, ip, sl
 80252ea:	950f      	str	r5, [sp, #60]	; 0x3c
 80252ec:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80252ee:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80252f2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80252f4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80252f8:	fb0e f707 	mul.w	r7, lr, r7
 80252fc:	fb02 770c 	mla	r7, r2, ip, r7
 8025300:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025304:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025306:	fb00 770c 	mla	r7, r0, ip, r7
 802530a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802530e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025310:	fb08 770c 	mla	r7, r8, ip, r7
 8025314:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8025318:	fb0e fe0c 	mul.w	lr, lr, ip
 802531c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025320:	fb02 e303 	mla	r3, r2, r3, lr
 8025324:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025326:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025328:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802532c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802532e:	fb00 330a 	mla	r3, r0, sl, r3
 8025332:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8025336:	fb08 3c0c 	mla	ip, r8, ip, r3
 802533a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802533c:	f8b9 0000 	ldrh.w	r0, [r9]
 8025340:	4359      	muls	r1, r3
 8025342:	0a3f      	lsrs	r7, r7, #8
 8025344:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025348:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802534c:	1c4b      	adds	r3, r1, #1
 802534e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8025352:	ea47 070c 	orr.w	r7, r7, ip
 8025356:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802535a:	1202      	asrs	r2, r0, #8
 802535c:	0c3b      	lsrs	r3, r7, #16
 802535e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8025362:	b2c9      	uxtb	r1, r1
 8025364:	fb13 f305 	smulbb	r3, r3, r5
 8025368:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802536c:	fb02 3201 	mla	r2, r2, r1, r3
 8025370:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8025374:	10c3      	asrs	r3, r0, #3
 8025376:	b2ff      	uxtb	r7, r7
 8025378:	00c0      	lsls	r0, r0, #3
 802537a:	b2c0      	uxtb	r0, r0
 802537c:	fb17 f705 	smulbb	r7, r7, r5
 8025380:	fb00 7001 	mla	r0, r0, r1, r7
 8025384:	b292      	uxth	r2, r2
 8025386:	fb1c fc05 	smulbb	ip, ip, r5
 802538a:	b280      	uxth	r0, r0
 802538c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025390:	fb03 c301 	mla	r3, r3, r1, ip
 8025394:	1c51      	adds	r1, r2, #1
 8025396:	f100 0c01 	add.w	ip, r0, #1
 802539a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802539e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 80253a2:	b29b      	uxth	r3, r3
 80253a4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80253a8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80253ac:	ea4c 0202 	orr.w	r2, ip, r2
 80253b0:	f103 0c01 	add.w	ip, r3, #1
 80253b4:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80253b8:	095b      	lsrs	r3, r3, #5
 80253ba:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80253be:	431a      	orrs	r2, r3
 80253c0:	f8a9 2000 	strh.w	r2, [r9]
 80253c4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80253c6:	441c      	add	r4, r3
 80253c8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80253ca:	f109 0902 	add.w	r9, r9, #2
 80253ce:	441e      	add	r6, r3
 80253d0:	f10b 3bff 	add.w	fp, fp, #4294967295
 80253d4:	e647      	b.n	8025066 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80253d6:	2800      	cmp	r0, #0
 80253d8:	f43f aedf 	beq.w	802519a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80253dc:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 80253e0:	9109      	str	r1, [sp, #36]	; 0x24
 80253e2:	0e09      	lsrs	r1, r1, #24
 80253e4:	9112      	str	r1, [sp, #72]	; 0x48
 80253e6:	e6d8      	b.n	802519a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80253e8:	b01d      	add	sp, #116	; 0x74
 80253ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080253ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 80253ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80253f2:	b085      	sub	sp, #20
 80253f4:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80253f8:	9102      	str	r1, [sp, #8]
 80253fa:	2c00      	cmp	r4, #0
 80253fc:	fb04 7103 	mla	r1, r4, r3, r7
 8025400:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8025404:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8025408:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 802540c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8025410:	f2c0 810c 	blt.w	802562c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8025414:	45a6      	cmp	lr, r4
 8025416:	f340 8109 	ble.w	802562c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802541a:	2f00      	cmp	r7, #0
 802541c:	f2c0 8104 	blt.w	8025628 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8025420:	42bb      	cmp	r3, r7
 8025422:	f340 8101 	ble.w	8025628 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8025426:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802542a:	1c7a      	adds	r2, r7, #1
 802542c:	f100 8101 	bmi.w	8025632 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8025430:	4293      	cmp	r3, r2
 8025432:	f340 80fe 	ble.w	8025632 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8025436:	2e00      	cmp	r6, #0
 8025438:	f000 80fd 	beq.w	8025636 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 802543c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8025440:	3401      	adds	r4, #1
 8025442:	f100 80fc 	bmi.w	802563e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8025446:	45a6      	cmp	lr, r4
 8025448:	f340 80f9 	ble.w	802563e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 802544c:	2800      	cmp	r0, #0
 802544e:	f000 80f9 	beq.w	8025644 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8025452:	2f00      	cmp	r7, #0
 8025454:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8025458:	f2c0 80ef 	blt.w	802563a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802545c:	42bb      	cmp	r3, r7
 802545e:	f340 80ec 	ble.w	802563a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8025462:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8025466:	3701      	adds	r7, #1
 8025468:	f100 80ef 	bmi.w	802564a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 802546c:	42bb      	cmp	r3, r7
 802546e:	f340 80ec 	ble.w	802564a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8025472:	2e00      	cmp	r6, #0
 8025474:	f000 80eb 	beq.w	802564e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8025478:	6852      	ldr	r2, [r2, #4]
 802547a:	b2b6      	uxth	r6, r6
 802547c:	b280      	uxth	r0, r0
 802547e:	fb00 fe06 	mul.w	lr, r0, r6
 8025482:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8025486:	0136      	lsls	r6, r6, #4
 8025488:	eba6 070e 	sub.w	r7, r6, lr
 802548c:	b280      	uxth	r0, r0
 802548e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8025492:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8025496:	b2bf      	uxth	r7, r7
 8025498:	1a1b      	subs	r3, r3, r0
 802549a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802549e:	b29b      	uxth	r3, r3
 80254a0:	fb07 f60a 	mul.w	r6, r7, sl
 80254a4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80254a8:	fb0b 6603 	mla	r6, fp, r3, r6
 80254ac:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80254b0:	fb00 6609 	mla	r6, r0, r9, r6
 80254b4:	fb0e 6608 	mla	r6, lr, r8, r6
 80254b8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80254bc:	9600      	str	r6, [sp, #0]
 80254be:	2e00      	cmp	r6, #0
 80254c0:	f000 80af 	beq.w	8025622 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 80254c4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80254c8:	fb0b fc0c 	mul.w	ip, fp, ip
 80254cc:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80254d0:	fb0b f505 	mul.w	r5, fp, r5
 80254d4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80254d8:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80254dc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80254e0:	44dc      	add	ip, fp
 80254e2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80254e6:	9501      	str	r5, [sp, #4]
 80254e8:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80254ec:	9503      	str	r5, [sp, #12]
 80254ee:	9d01      	ldr	r5, [sp, #4]
 80254f0:	9e02      	ldr	r6, [sp, #8]
 80254f2:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80254f6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80254fa:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80254fe:	fb0a fc0c 	mul.w	ip, sl, ip
 8025502:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8025506:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802550a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802550e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025512:	4465      	add	r5, ip
 8025514:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8025518:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802551c:	fb09 fc0c 	mul.w	ip, r9, ip
 8025520:	fb09 f904 	mul.w	r9, r9, r4
 8025524:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8025528:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802552c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8025530:	fb08 f404 	mul.w	r4, r8, r4
 8025534:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8025538:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802553c:	fb08 f802 	mul.w	r8, r8, r2
 8025540:	fb0a fa01 	mul.w	sl, sl, r1
 8025544:	0a22      	lsrs	r2, r4, #8
 8025546:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 802554a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802554e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8025552:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8025556:	4414      	add	r4, r2
 8025558:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802555c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8025560:	0a2d      	lsrs	r5, r5, #8
 8025562:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8025566:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802556a:	9a03      	ldr	r2, [sp, #12]
 802556c:	8836      	ldrh	r6, [r6, #0]
 802556e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8025572:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025576:	437d      	muls	r5, r7
 8025578:	4461      	add	r1, ip
 802557a:	0a24      	lsrs	r4, r4, #8
 802557c:	fb02 5503 	mla	r5, r2, r3, r5
 8025580:	0a09      	lsrs	r1, r1, #8
 8025582:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8025586:	fb04 540e 	mla	r4, r4, lr, r5
 802558a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802558e:	fb01 4100 	mla	r1, r1, r0, r4
 8025592:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025596:	0a09      	lsrs	r1, r1, #8
 8025598:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802559c:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80255a0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80255a4:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80255a8:	fb07 f70a 	mul.w	r7, r7, sl
 80255ac:	fb03 7101 	mla	r1, r3, r1, r7
 80255b0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80255b4:	9b00      	ldr	r3, [sp, #0]
 80255b6:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80255ba:	fb0e 1e08 	mla	lr, lr, r8, r1
 80255be:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80255c2:	fb00 e101 	mla	r1, r0, r1, lr
 80255c6:	43da      	mvns	r2, r3
 80255c8:	1233      	asrs	r3, r6, #8
 80255ca:	b2d2      	uxtb	r2, r2
 80255cc:	10f0      	asrs	r0, r6, #3
 80255ce:	0a09      	lsrs	r1, r1, #8
 80255d0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80255d4:	00f6      	lsls	r6, r6, #3
 80255d6:	4353      	muls	r3, r2
 80255d8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80255dc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80255e0:	b2f6      	uxtb	r6, r6
 80255e2:	4321      	orrs	r1, r4
 80255e4:	4350      	muls	r0, r2
 80255e6:	4356      	muls	r6, r2
 80255e8:	1c5a      	adds	r2, r3, #1
 80255ea:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80255ee:	0c0b      	lsrs	r3, r1, #16
 80255f0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80255f4:	1c42      	adds	r2, r0, #1
 80255f6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80255fa:	0a0a      	lsrs	r2, r1, #8
 80255fc:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8025600:	021b      	lsls	r3, r3, #8
 8025602:	00d2      	lsls	r2, r2, #3
 8025604:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025608:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 802560c:	4313      	orrs	r3, r2
 802560e:	1c72      	adds	r2, r6, #1
 8025610:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8025614:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8025618:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802561c:	4319      	orrs	r1, r3
 802561e:	9b02      	ldr	r3, [sp, #8]
 8025620:	8019      	strh	r1, [r3, #0]
 8025622:	b005      	add	sp, #20
 8025624:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025628:	2500      	movs	r5, #0
 802562a:	e6fe      	b.n	802542a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 802562c:	2100      	movs	r1, #0
 802562e:	460d      	mov	r5, r1
 8025630:	e706      	b.n	8025440 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8025632:	2100      	movs	r1, #0
 8025634:	e704      	b.n	8025440 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8025636:	4631      	mov	r1, r6
 8025638:	e702      	b.n	8025440 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802563a:	2400      	movs	r4, #0
 802563c:	e713      	b.n	8025466 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 802563e:	2200      	movs	r2, #0
 8025640:	4614      	mov	r4, r2
 8025642:	e71a      	b.n	802547a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8025644:	4602      	mov	r2, r0
 8025646:	4604      	mov	r4, r0
 8025648:	e717      	b.n	802547a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802564a:	2200      	movs	r2, #0
 802564c:	e715      	b.n	802547a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802564e:	4632      	mov	r2, r6
 8025650:	e713      	b.n	802547a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08025654 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025654:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025658:	b09b      	sub	sp, #108	; 0x6c
 802565a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 802565e:	9218      	str	r2, [sp, #96]	; 0x60
 8025660:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8025662:	9116      	str	r1, [sp, #88]	; 0x58
 8025664:	9307      	str	r3, [sp, #28]
 8025666:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 802566a:	9019      	str	r0, [sp, #100]	; 0x64
 802566c:	6850      	ldr	r0, [r2, #4]
 802566e:	6812      	ldr	r2, [r2, #0]
 8025670:	fb00 1303 	mla	r3, r0, r3, r1
 8025674:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025678:	930a      	str	r3, [sp, #40]	; 0x28
 802567a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802567c:	681b      	ldr	r3, [r3, #0]
 802567e:	930f      	str	r3, [sp, #60]	; 0x3c
 8025680:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025682:	2b00      	cmp	r3, #0
 8025684:	dc03      	bgt.n	802568e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8025686:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025688:	2b00      	cmp	r3, #0
 802568a:	f340 8386 	ble.w	8025d9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802568e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025690:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025694:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025698:	1e48      	subs	r0, r1, #1
 802569a:	1e57      	subs	r7, r2, #1
 802569c:	9b07      	ldr	r3, [sp, #28]
 802569e:	2b00      	cmp	r3, #0
 80256a0:	f340 8166 	ble.w	8025970 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80256a4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80256a8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80256ac:	d406      	bmi.n	80256bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80256ae:	4584      	cmp	ip, r0
 80256b0:	da04      	bge.n	80256bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80256b2:	2b00      	cmp	r3, #0
 80256b4:	db02      	blt.n	80256bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80256b6:	42bb      	cmp	r3, r7
 80256b8:	f2c0 815b 	blt.w	8025972 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80256bc:	f11c 0c01 	adds.w	ip, ip, #1
 80256c0:	f100 814b 	bmi.w	802595a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80256c4:	4561      	cmp	r1, ip
 80256c6:	f2c0 8148 	blt.w	802595a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80256ca:	3301      	adds	r3, #1
 80256cc:	f100 8145 	bmi.w	802595a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80256d0:	429a      	cmp	r2, r3
 80256d2:	f2c0 8142 	blt.w	802595a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80256d6:	9b07      	ldr	r3, [sp, #28]
 80256d8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80256da:	9317      	str	r3, [sp, #92]	; 0x5c
 80256dc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80256de:	2b00      	cmp	r3, #0
 80256e0:	f340 8165 	ble.w	80259ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80256e4:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80256e6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80256e8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80256ec:	689b      	ldr	r3, [r3, #8]
 80256ee:	1422      	asrs	r2, r4, #16
 80256f0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80256f4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80256f8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80256fc:	f100 81d5 	bmi.w	8025aaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025700:	f103 38ff 	add.w	r8, r3, #4294967295
 8025704:	4542      	cmp	r2, r8
 8025706:	f280 81d0 	bge.w	8025aaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802570a:	f1bc 0f00 	cmp.w	ip, #0
 802570e:	f2c0 81cc 	blt.w	8025aaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025712:	f10e 38ff 	add.w	r8, lr, #4294967295
 8025716:	45c4      	cmp	ip, r8
 8025718:	f280 81c7 	bge.w	8025aaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802571c:	b21b      	sxth	r3, r3
 802571e:	fb0c 2203 	mla	r2, ip, r3, r2
 8025722:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025724:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8025728:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802572c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8025730:	2900      	cmp	r1, #0
 8025732:	f000 8182 	beq.w	8025a3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8025736:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802573a:	950b      	str	r5, [sp, #44]	; 0x2c
 802573c:	0e2d      	lsrs	r5, r5, #24
 802573e:	9512      	str	r5, [sp, #72]	; 0x48
 8025740:	b180      	cbz	r0, 8025764 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025742:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8025746:	3b01      	subs	r3, #1
 8025748:	009b      	lsls	r3, r3, #2
 802574a:	3304      	adds	r3, #4
 802574c:	eb08 0c03 	add.w	ip, r8, r3
 8025750:	f858 3003 	ldr.w	r3, [r8, r3]
 8025754:	9308      	str	r3, [sp, #32]
 8025756:	0e1b      	lsrs	r3, r3, #24
 8025758:	9310      	str	r3, [sp, #64]	; 0x40
 802575a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802575e:	930c      	str	r3, [sp, #48]	; 0x30
 8025760:	0e1b      	lsrs	r3, r3, #24
 8025762:	9313      	str	r3, [sp, #76]	; 0x4c
 8025764:	b289      	uxth	r1, r1
 8025766:	b280      	uxth	r0, r0
 8025768:	fb01 f900 	mul.w	r9, r1, r0
 802576c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8025770:	0109      	lsls	r1, r1, #4
 8025772:	eba1 0809 	sub.w	r8, r1, r9
 8025776:	b280      	uxth	r0, r0
 8025778:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 802577c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802577e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025780:	fa1f f888 	uxth.w	r8, r8
 8025784:	1a09      	subs	r1, r1, r0
 8025786:	b289      	uxth	r1, r1
 8025788:	fb08 f303 	mul.w	r3, r8, r3
 802578c:	fb01 330e 	mla	r3, r1, lr, r3
 8025790:	fb00 3305 	mla	r3, r0, r5, r3
 8025794:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025796:	fb09 3305 	mla	r3, r9, r5, r3
 802579a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802579e:	2b00      	cmp	r3, #0
 80257a0:	f000 80d2 	beq.w	8025948 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80257a4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80257a8:	d01b      	beq.n	80257e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 80257aa:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80257ae:	fb0e fa0a 	mul.w	sl, lr, sl
 80257b2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80257b6:	fb0e fe02 	mul.w	lr, lr, r2
 80257ba:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80257be:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80257c2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80257c6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80257ca:	4452      	add	r2, sl
 80257cc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80257d0:	0a12      	lsrs	r2, r2, #8
 80257d2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80257d6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80257da:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80257de:	ea42 020c 	orr.w	r2, r2, ip
 80257e2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80257e4:	2dff      	cmp	r5, #255	; 0xff
 80257e6:	d021      	beq.n	802582c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 80257e8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80257ea:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80257ee:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80257f0:	fb05 fb0b 	mul.w	fp, r5, fp
 80257f4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80257f6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80257fa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80257fc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025800:	fb05 fa0a 	mul.w	sl, r5, sl
 8025804:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025808:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802580c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025810:	44de      	add	lr, fp
 8025812:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025816:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802581a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802581e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025822:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025826:	ea4e 050a 	orr.w	r5, lr, sl
 802582a:	950b      	str	r5, [sp, #44]	; 0x2c
 802582c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802582e:	2dff      	cmp	r5, #255	; 0xff
 8025830:	d021      	beq.n	8025876 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8025832:	9d08      	ldr	r5, [sp, #32]
 8025834:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025838:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802583a:	fb05 fb0b 	mul.w	fp, r5, fp
 802583e:	9d08      	ldr	r5, [sp, #32]
 8025840:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8025844:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025846:	fb05 fa0e 	mul.w	sl, r5, lr
 802584a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802584e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025852:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025856:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802585a:	44de      	add	lr, fp
 802585c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025860:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025864:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025868:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802586c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025870:	ea4e 050a 	orr.w	r5, lr, sl
 8025874:	9508      	str	r5, [sp, #32]
 8025876:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025878:	2dff      	cmp	r5, #255	; 0xff
 802587a:	d021      	beq.n	80258c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 802587c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802587e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025882:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025884:	fb05 fb0b 	mul.w	fp, r5, fp
 8025888:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802588a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802588e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025890:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025894:	fb05 fa0a 	mul.w	sl, r5, sl
 8025898:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802589c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80258a0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80258a4:	44de      	add	lr, fp
 80258a6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80258aa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80258ae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80258b2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80258b6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80258ba:	ea4e 050a 	orr.w	r5, lr, sl
 80258be:	950c      	str	r5, [sp, #48]	; 0x30
 80258c0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80258c2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80258c6:	9d08      	ldr	r5, [sp, #32]
 80258c8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80258cc:	fb08 fc0c 	mul.w	ip, r8, ip
 80258d0:	fb01 cc0e 	mla	ip, r1, lr, ip
 80258d4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80258d8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80258da:	fb00 cc0e 	mla	ip, r0, lr, ip
 80258de:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80258e2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80258e4:	fb09 cc0e 	mla	ip, r9, lr, ip
 80258e8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80258ec:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80258f0:	fb08 f80e 	mul.w	r8, r8, lr
 80258f4:	fb01 8202 	mla	r2, r1, r2, r8
 80258f8:	9908      	ldr	r1, [sp, #32]
 80258fa:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80258fe:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025900:	fb00 220a 	mla	r2, r0, sl, r2
 8025904:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8025908:	fb09 2900 	mla	r9, r9, r0, r2
 802590c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025910:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025914:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025918:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802591c:	ea4c 0c09 	orr.w	ip, ip, r9
 8025920:	2bff      	cmp	r3, #255	; 0xff
 8025922:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8025926:	f040 8091 	bne.w	8025a4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802592a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 802592e:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8025932:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025936:	f022 0207 	bic.w	r2, r2, #7
 802593a:	431a      	orrs	r2, r3
 802593c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8025940:	ea4c 0c02 	orr.w	ip, ip, r2
 8025944:	f8a7 c000 	strh.w	ip, [r7]
 8025948:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802594a:	441c      	add	r4, r3
 802594c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802594e:	441e      	add	r6, r3
 8025950:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025952:	3b01      	subs	r3, #1
 8025954:	3702      	adds	r7, #2
 8025956:	9317      	str	r3, [sp, #92]	; 0x5c
 8025958:	e6c0      	b.n	80256dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802595a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802595c:	441c      	add	r4, r3
 802595e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025960:	441e      	add	r6, r3
 8025962:	9b07      	ldr	r3, [sp, #28]
 8025964:	3b01      	subs	r3, #1
 8025966:	9307      	str	r3, [sp, #28]
 8025968:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802596a:	3302      	adds	r3, #2
 802596c:	930a      	str	r3, [sp, #40]	; 0x28
 802596e:	e695      	b.n	802569c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025970:	d024      	beq.n	80259bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8025972:	9b07      	ldr	r3, [sp, #28]
 8025974:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8025976:	3b01      	subs	r3, #1
 8025978:	fb00 4003 	mla	r0, r0, r3, r4
 802597c:	1400      	asrs	r0, r0, #16
 802597e:	f53f aeaa 	bmi.w	80256d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025982:	3901      	subs	r1, #1
 8025984:	4288      	cmp	r0, r1
 8025986:	f6bf aea6 	bge.w	80256d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802598a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 802598c:	fb01 6303 	mla	r3, r1, r3, r6
 8025990:	141b      	asrs	r3, r3, #16
 8025992:	f53f aea0 	bmi.w	80256d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025996:	3a01      	subs	r2, #1
 8025998:	4293      	cmp	r3, r2
 802599a:	f6bf ae9c 	bge.w	80256d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802599e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80259a2:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 80259a6:	f1bb 0f00 	cmp.w	fp, #0
 80259aa:	f300 809a 	bgt.w	8025ae2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80259ae:	9b07      	ldr	r3, [sp, #28]
 80259b0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80259b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80259b6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80259ba:	930a      	str	r3, [sp, #40]	; 0x28
 80259bc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80259be:	2b00      	cmp	r3, #0
 80259c0:	f340 81eb 	ble.w	8025d9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80259c4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80259c8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80259cc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80259d0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80259d2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80259d6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80259da:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80259de:	eef0 6a62 	vmov.f32	s13, s5
 80259e2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80259e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80259ea:	ee77 2a62 	vsub.f32	s5, s14, s5
 80259ee:	ee16 4a90 	vmov	r4, s13
 80259f2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80259f6:	eef0 6a43 	vmov.f32	s13, s6
 80259fa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80259fe:	ee12 2a90 	vmov	r2, s5
 8025a02:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025a06:	fb92 f3f3 	sdiv	r3, r2, r3
 8025a0a:	ee13 2a10 	vmov	r2, s6
 8025a0e:	9327      	str	r3, [sp, #156]	; 0x9c
 8025a10:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025a12:	fb92 f3f3 	sdiv	r3, r2, r3
 8025a16:	9328      	str	r3, [sp, #160]	; 0xa0
 8025a18:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025a1a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8025a1c:	3b01      	subs	r3, #1
 8025a1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025a22:	9316      	str	r3, [sp, #88]	; 0x58
 8025a24:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025a26:	bf08      	it	eq
 8025a28:	4613      	moveq	r3, r2
 8025a2a:	ee16 6a90 	vmov	r6, s13
 8025a2e:	9307      	str	r3, [sp, #28]
 8025a30:	eeb0 3a67 	vmov.f32	s6, s15
 8025a34:	eef0 2a47 	vmov.f32	s5, s14
 8025a38:	e622      	b.n	8025680 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8025a3a:	2800      	cmp	r0, #0
 8025a3c:	f43f ae92 	beq.w	8025764 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025a40:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8025a44:	9308      	str	r3, [sp, #32]
 8025a46:	0e1b      	lsrs	r3, r3, #24
 8025a48:	9310      	str	r3, [sp, #64]	; 0x40
 8025a4a:	e68b      	b.n	8025764 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025a4c:	8839      	ldrh	r1, [r7, #0]
 8025a4e:	4dd4      	ldr	r5, [pc, #848]	; (8025da0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8025a50:	43db      	mvns	r3, r3
 8025a52:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8025a56:	fa5f f883 	uxtb.w	r8, r3
 8025a5a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8025a5e:	fb0e fe08 	mul.w	lr, lr, r8
 8025a62:	10c8      	asrs	r0, r1, #3
 8025a64:	00cb      	lsls	r3, r1, #3
 8025a66:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025a6a:	f10e 0101 	add.w	r1, lr, #1
 8025a6e:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8025a72:	fb00 f008 	mul.w	r0, r0, r8
 8025a76:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8025a7a:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8025a7e:	f100 0e01 	add.w	lr, r0, #1
 8025a82:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8025a86:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8025a8a:	b2db      	uxtb	r3, r3
 8025a8c:	b2c9      	uxtb	r1, r1
 8025a8e:	00d2      	lsls	r2, r2, #3
 8025a90:	fb03 f308 	mul.w	r3, r3, r8
 8025a94:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8025a98:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025a9c:	430a      	orrs	r2, r1
 8025a9e:	1c59      	adds	r1, r3, #1
 8025aa0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8025aa4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8025aa8:	e748      	b.n	802593c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8025aaa:	f112 0801 	adds.w	r8, r2, #1
 8025aae:	f53f af4b 	bmi.w	8025948 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025ab2:	4543      	cmp	r3, r8
 8025ab4:	f6ff af48 	blt.w	8025948 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025ab8:	f11c 0801 	adds.w	r8, ip, #1
 8025abc:	f53f af44 	bmi.w	8025948 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025ac0:	45c6      	cmp	lr, r8
 8025ac2:	f6ff af41 	blt.w	8025948 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025ac6:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8025aca:	fa0f f28e 	sxth.w	r2, lr
 8025ace:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8025ad2:	9200      	str	r2, [sp, #0]
 8025ad4:	b21b      	sxth	r3, r3
 8025ad6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025ad8:	9819      	ldr	r0, [sp, #100]	; 0x64
 8025ada:	4639      	mov	r1, r7
 8025adc:	f7ff fc87 	bl	80253ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8025ae0:	e732      	b.n	8025948 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025ae2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025ae4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025ae6:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8025aea:	1421      	asrs	r1, r4, #16
 8025aec:	1433      	asrs	r3, r6, #16
 8025aee:	fb07 1303 	mla	r3, r7, r3, r1
 8025af2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8025af4:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8025af8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8025afc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025b00:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025b04:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8025b08:	2a00      	cmp	r2, #0
 8025b0a:	f000 8107 	beq.w	8025d1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8025b0e:	684d      	ldr	r5, [r1, #4]
 8025b10:	950d      	str	r5, [sp, #52]	; 0x34
 8025b12:	0e2d      	lsrs	r5, r5, #24
 8025b14:	9514      	str	r5, [sp, #80]	; 0x50
 8025b16:	b178      	cbz	r0, 8025b38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8025b18:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8025b1c:	3f01      	subs	r7, #1
 8025b1e:	00bf      	lsls	r7, r7, #2
 8025b20:	3704      	adds	r7, #4
 8025b22:	eb01 0e07 	add.w	lr, r1, r7
 8025b26:	59c9      	ldr	r1, [r1, r7]
 8025b28:	9109      	str	r1, [sp, #36]	; 0x24
 8025b2a:	0e09      	lsrs	r1, r1, #24
 8025b2c:	9111      	str	r1, [sp, #68]	; 0x44
 8025b2e:	f8de 1004 	ldr.w	r1, [lr, #4]
 8025b32:	910e      	str	r1, [sp, #56]	; 0x38
 8025b34:	0e09      	lsrs	r1, r1, #24
 8025b36:	9115      	str	r1, [sp, #84]	; 0x54
 8025b38:	b292      	uxth	r2, r2
 8025b3a:	b280      	uxth	r0, r0
 8025b3c:	fb02 f900 	mul.w	r9, r2, r0
 8025b40:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8025b44:	0112      	lsls	r2, r2, #4
 8025b46:	eba2 0e09 	sub.w	lr, r2, r9
 8025b4a:	b280      	uxth	r0, r0
 8025b4c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8025b50:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025b52:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025b54:	fa1f fe8e 	uxth.w	lr, lr
 8025b58:	1a09      	subs	r1, r1, r0
 8025b5a:	b289      	uxth	r1, r1
 8025b5c:	fb0e f202 	mul.w	r2, lr, r2
 8025b60:	fb01 220c 	mla	r2, r1, ip, r2
 8025b64:	fb00 2205 	mla	r2, r0, r5, r2
 8025b68:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025b6a:	fb09 2205 	mla	r2, r9, r5, r2
 8025b6e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8025b72:	2a00      	cmp	r2, #0
 8025b74:	f000 80c9 	beq.w	8025d0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8025b78:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8025b7c:	d019      	beq.n	8025bb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8025b7e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8025b82:	fb0c fa0a 	mul.w	sl, ip, sl
 8025b86:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025b8a:	fb0c fc03 	mul.w	ip, ip, r3
 8025b8e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8025b92:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025b96:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025b9a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8025b9e:	4453      	add	r3, sl
 8025ba0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8025ba4:	0a1b      	lsrs	r3, r3, #8
 8025ba6:	0a3f      	lsrs	r7, r7, #8
 8025ba8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025bac:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8025bb0:	433b      	orrs	r3, r7
 8025bb2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025bb4:	2dff      	cmp	r5, #255	; 0xff
 8025bb6:	d020      	beq.n	8025bfa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8025bb8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025bba:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025bbe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025bc0:	436f      	muls	r7, r5
 8025bc2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025bc4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025bc8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025bca:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025bce:	fb05 fa0a 	mul.w	sl, r5, sl
 8025bd2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025bd6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025bda:	44bc      	add	ip, r7
 8025bdc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025be0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025be4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025be8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025bec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025bf0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025bf4:	ea4c 050a 	orr.w	r5, ip, sl
 8025bf8:	950d      	str	r5, [sp, #52]	; 0x34
 8025bfa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025bfc:	2dff      	cmp	r5, #255	; 0xff
 8025bfe:	d020      	beq.n	8025c42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8025c00:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025c02:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025c06:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025c08:	436f      	muls	r7, r5
 8025c0a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025c0c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8025c10:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025c12:	fb05 fa0c 	mul.w	sl, r5, ip
 8025c16:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025c1a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025c1e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025c22:	44bc      	add	ip, r7
 8025c24:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025c28:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025c2c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025c30:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025c34:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025c38:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025c3c:	ea4c 050a 	orr.w	r5, ip, sl
 8025c40:	9509      	str	r5, [sp, #36]	; 0x24
 8025c42:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025c44:	2dff      	cmp	r5, #255	; 0xff
 8025c46:	d020      	beq.n	8025c8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8025c48:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025c4a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025c4e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025c50:	436f      	muls	r7, r5
 8025c52:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025c54:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025c58:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025c5a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025c5e:	fb05 fa0a 	mul.w	sl, r5, sl
 8025c62:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025c66:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025c6a:	44bc      	add	ip, r7
 8025c6c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025c70:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025c74:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025c78:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025c7c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025c80:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025c84:	ea4c 050a 	orr.w	r5, ip, sl
 8025c88:	950e      	str	r5, [sp, #56]	; 0x38
 8025c8a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025c8c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025c90:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025c92:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8025c96:	fb0e f707 	mul.w	r7, lr, r7
 8025c9a:	fb01 770c 	mla	r7, r1, ip, r7
 8025c9e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025ca2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025ca4:	fb00 770c 	mla	r7, r0, ip, r7
 8025ca8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025cac:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025cae:	fb09 770c 	mla	r7, r9, ip, r7
 8025cb2:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8025cb6:	fb0e fe0c 	mul.w	lr, lr, ip
 8025cba:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025cbe:	fb01 e303 	mla	r3, r1, r3, lr
 8025cc2:	9909      	ldr	r1, [sp, #36]	; 0x24
 8025cc4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8025cc8:	990e      	ldr	r1, [sp, #56]	; 0x38
 8025cca:	fb00 330a 	mla	r3, r0, sl, r3
 8025cce:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8025cd2:	fb09 3c0c 	mla	ip, r9, ip, r3
 8025cd6:	0a3f      	lsrs	r7, r7, #8
 8025cd8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025cdc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8025ce0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8025ce4:	ea47 070c 	orr.w	r7, r7, ip
 8025ce8:	2aff      	cmp	r2, #255	; 0xff
 8025cea:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8025cee:	d11e      	bne.n	8025d2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8025cf0:	097a      	lsrs	r2, r7, #5
 8025cf2:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8025cf6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025cfa:	f023 0307 	bic.w	r3, r3, #7
 8025cfe:	4313      	orrs	r3, r2
 8025d00:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8025d04:	431f      	orrs	r7, r3
 8025d06:	f8a8 7000 	strh.w	r7, [r8]
 8025d0a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025d0c:	441c      	add	r4, r3
 8025d0e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025d10:	f108 0802 	add.w	r8, r8, #2
 8025d14:	441e      	add	r6, r3
 8025d16:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025d1a:	e644      	b.n	80259a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8025d1c:	2800      	cmp	r0, #0
 8025d1e:	f43f af0b 	beq.w	8025b38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8025d22:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8025d26:	9109      	str	r1, [sp, #36]	; 0x24
 8025d28:	0e09      	lsrs	r1, r1, #24
 8025d2a:	9111      	str	r1, [sp, #68]	; 0x44
 8025d2c:	e704      	b.n	8025b38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8025d2e:	f8b8 1000 	ldrh.w	r1, [r8]
 8025d32:	43d2      	mvns	r2, r2
 8025d34:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8025d38:	fa5f fe82 	uxtb.w	lr, r2
 8025d3c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8025d40:	fb0c fc0e 	mul.w	ip, ip, lr
 8025d44:	10c8      	asrs	r0, r1, #3
 8025d46:	00ca      	lsls	r2, r1, #3
 8025d48:	f10c 0101 	add.w	r1, ip, #1
 8025d4c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025d50:	0c39      	lsrs	r1, r7, #16
 8025d52:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025d56:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025d5a:	4911      	ldr	r1, [pc, #68]	; (8025da0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8025d5c:	fb00 f00e 	mul.w	r0, r0, lr
 8025d60:	fa5f fc8c 	uxtb.w	ip, ip
 8025d64:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8025d68:	b2d2      	uxtb	r2, r2
 8025d6a:	1c41      	adds	r1, r0, #1
 8025d6c:	fb02 f20e 	mul.w	r2, r2, lr
 8025d70:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8025d74:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025d78:	1c51      	adds	r1, r2, #1
 8025d7a:	00c0      	lsls	r0, r0, #3
 8025d7c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8025d80:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025d84:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8025d88:	ea4c 0c00 	orr.w	ip, ip, r0
 8025d8c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8025d90:	ea47 0c0c 	orr.w	ip, r7, ip
 8025d94:	f8a8 c000 	strh.w	ip, [r8]
 8025d98:	e7b7      	b.n	8025d0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8025d9a:	b01b      	add	sp, #108	; 0x6c
 8025d9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025da0:	fffff800 	.word	0xfffff800

08025da4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8025da4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025da8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8025dac:	2d00      	cmp	r5, #0
 8025dae:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8025db2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8025db6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8025dba:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8025dbe:	fb05 0e03 	mla	lr, r5, r3, r0
 8025dc2:	f2c0 808c 	blt.w	8025ede <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8025dc6:	45a9      	cmp	r9, r5
 8025dc8:	f340 8089 	ble.w	8025ede <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8025dcc:	2800      	cmp	r0, #0
 8025dce:	f2c0 8084 	blt.w	8025eda <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8025dd2:	4580      	cmp	r8, r0
 8025dd4:	f340 8081 	ble.w	8025eda <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8025dd8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8025ddc:	f01e 0f01 	tst.w	lr, #1
 8025de0:	5d16      	ldrb	r6, [r2, r4]
 8025de2:	bf0c      	ite	eq
 8025de4:	f006 060f 	andeq.w	r6, r6, #15
 8025de8:	1136      	asrne	r6, r6, #4
 8025dea:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8025dee:	b2f6      	uxtb	r6, r6
 8025df0:	1c44      	adds	r4, r0, #1
 8025df2:	d477      	bmi.n	8025ee4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8025df4:	45a0      	cmp	r8, r4
 8025df6:	dd75      	ble.n	8025ee4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8025df8:	2f00      	cmp	r7, #0
 8025dfa:	d075      	beq.n	8025ee8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8025dfc:	f10e 0a01 	add.w	sl, lr, #1
 8025e00:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8025e04:	f01a 0f01 	tst.w	sl, #1
 8025e08:	5d14      	ldrb	r4, [r2, r4]
 8025e0a:	bf0c      	ite	eq
 8025e0c:	f004 040f 	andeq.w	r4, r4, #15
 8025e10:	1124      	asrne	r4, r4, #4
 8025e12:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8025e16:	b2e4      	uxtb	r4, r4
 8025e18:	3501      	adds	r5, #1
 8025e1a:	d469      	bmi.n	8025ef0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8025e1c:	45a9      	cmp	r9, r5
 8025e1e:	dd67      	ble.n	8025ef0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8025e20:	f1bc 0f00 	cmp.w	ip, #0
 8025e24:	d067      	beq.n	8025ef6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8025e26:	2800      	cmp	r0, #0
 8025e28:	db60      	blt.n	8025eec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8025e2a:	4580      	cmp	r8, r0
 8025e2c:	dd5e      	ble.n	8025eec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8025e2e:	eb03 090e 	add.w	r9, r3, lr
 8025e32:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8025e36:	f019 0f01 	tst.w	r9, #1
 8025e3a:	5d55      	ldrb	r5, [r2, r5]
 8025e3c:	bf0c      	ite	eq
 8025e3e:	f005 050f 	andeq.w	r5, r5, #15
 8025e42:	112d      	asrne	r5, r5, #4
 8025e44:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8025e48:	b2ed      	uxtb	r5, r5
 8025e4a:	3001      	adds	r0, #1
 8025e4c:	d456      	bmi.n	8025efc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8025e4e:	4580      	cmp	r8, r0
 8025e50:	dd54      	ble.n	8025efc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8025e52:	2f00      	cmp	r7, #0
 8025e54:	d054      	beq.n	8025f00 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8025e56:	3301      	adds	r3, #1
 8025e58:	449e      	add	lr, r3
 8025e5a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8025e5e:	f01e 0f01 	tst.w	lr, #1
 8025e62:	5cd0      	ldrb	r0, [r2, r3]
 8025e64:	bf0c      	ite	eq
 8025e66:	f000 000f 	andeq.w	r0, r0, #15
 8025e6a:	1100      	asrne	r0, r0, #4
 8025e6c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025e70:	b2c3      	uxtb	r3, r0
 8025e72:	b2ba      	uxth	r2, r7
 8025e74:	fa1f fc8c 	uxth.w	ip, ip
 8025e78:	fb02 f00c 	mul.w	r0, r2, ip
 8025e7c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8025e80:	0112      	lsls	r2, r2, #4
 8025e82:	fa1f fc8c 	uxth.w	ip, ip
 8025e86:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8025e8a:	1a12      	subs	r2, r2, r0
 8025e8c:	eba7 070c 	sub.w	r7, r7, ip
 8025e90:	b292      	uxth	r2, r2
 8025e92:	b2bf      	uxth	r7, r7
 8025e94:	4362      	muls	r2, r4
 8025e96:	fb06 2207 	mla	r2, r6, r7, r2
 8025e9a:	fb0c 2505 	mla	r5, ip, r5, r2
 8025e9e:	fb00 5303 	mla	r3, r0, r3, r5
 8025ea2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025ea6:	b1b3      	cbz	r3, 8025ed6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8025ea8:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8025eac:	435a      	muls	r2, r3
 8025eae:	1c53      	adds	r3, r2, #1
 8025eb0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025eb4:	4a2d      	ldr	r2, [pc, #180]	; (8025f6c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8025eb6:	121b      	asrs	r3, r3, #8
 8025eb8:	6812      	ldr	r2, [r2, #0]
 8025eba:	2bff      	cmp	r3, #255	; 0xff
 8025ebc:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8025ec0:	d120      	bne.n	8025f04 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8025ec2:	4b2b      	ldr	r3, [pc, #172]	; (8025f70 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8025ec4:	0950      	lsrs	r0, r2, #5
 8025ec6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025eca:	4033      	ands	r3, r6
 8025ecc:	4318      	orrs	r0, r3
 8025ece:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025ed2:	4302      	orrs	r2, r0
 8025ed4:	800a      	strh	r2, [r1, #0]
 8025ed6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025eda:	2600      	movs	r6, #0
 8025edc:	e788      	b.n	8025df0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8025ede:	2400      	movs	r4, #0
 8025ee0:	4626      	mov	r6, r4
 8025ee2:	e799      	b.n	8025e18 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8025ee4:	2400      	movs	r4, #0
 8025ee6:	e797      	b.n	8025e18 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8025ee8:	463c      	mov	r4, r7
 8025eea:	e795      	b.n	8025e18 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8025eec:	2500      	movs	r5, #0
 8025eee:	e7ac      	b.n	8025e4a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8025ef0:	2300      	movs	r3, #0
 8025ef2:	461d      	mov	r5, r3
 8025ef4:	e7bd      	b.n	8025e72 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8025ef6:	4663      	mov	r3, ip
 8025ef8:	4665      	mov	r5, ip
 8025efa:	e7ba      	b.n	8025e72 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8025efc:	2300      	movs	r3, #0
 8025efe:	e7b8      	b.n	8025e72 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8025f00:	463b      	mov	r3, r7
 8025f02:	e7b6      	b.n	8025e72 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8025f04:	880d      	ldrh	r5, [r1, #0]
 8025f06:	b29f      	uxth	r7, r3
 8025f08:	122c      	asrs	r4, r5, #8
 8025f0a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8025f0e:	43db      	mvns	r3, r3
 8025f10:	b2db      	uxtb	r3, r3
 8025f12:	fb10 f007 	smulbb	r0, r0, r7
 8025f16:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025f1a:	fb04 0403 	mla	r4, r4, r3, r0
 8025f1e:	b2f6      	uxtb	r6, r6
 8025f20:	10e8      	asrs	r0, r5, #3
 8025f22:	b2d2      	uxtb	r2, r2
 8025f24:	00ed      	lsls	r5, r5, #3
 8025f26:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025f2a:	fb12 f207 	smulbb	r2, r2, r7
 8025f2e:	fb16 f607 	smulbb	r6, r6, r7
 8025f32:	b2ed      	uxtb	r5, r5
 8025f34:	b2a4      	uxth	r4, r4
 8025f36:	fb00 6603 	mla	r6, r0, r3, r6
 8025f3a:	fb05 2303 	mla	r3, r5, r3, r2
 8025f3e:	b29a      	uxth	r2, r3
 8025f40:	1c63      	adds	r3, r4, #1
 8025f42:	b2b0      	uxth	r0, r6
 8025f44:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8025f48:	1c53      	adds	r3, r2, #1
 8025f4a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025f4e:	1c42      	adds	r2, r0, #1
 8025f50:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025f54:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025f58:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025f5c:	0940      	lsrs	r0, r0, #5
 8025f5e:	4323      	orrs	r3, r4
 8025f60:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025f64:	4303      	orrs	r3, r0
 8025f66:	800b      	strh	r3, [r1, #0]
 8025f68:	e7b5      	b.n	8025ed6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8025f6a:	bf00      	nop
 8025f6c:	2001382c 	.word	0x2001382c
 8025f70:	00fff800 	.word	0x00fff800

08025f74 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025f74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025f78:	b097      	sub	sp, #92	; 0x5c
 8025f7a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8025f7e:	9214      	str	r2, [sp, #80]	; 0x50
 8025f80:	9309      	str	r3, [sp, #36]	; 0x24
 8025f82:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8025f84:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8025f88:	910d      	str	r1, [sp, #52]	; 0x34
 8025f8a:	930f      	str	r3, [sp, #60]	; 0x3c
 8025f8c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8025f90:	9015      	str	r0, [sp, #84]	; 0x54
 8025f92:	6850      	ldr	r0, [r2, #4]
 8025f94:	6812      	ldr	r2, [r2, #0]
 8025f96:	fb00 1303 	mla	r3, r0, r3, r1
 8025f9a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8025f9e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025fa0:	689b      	ldr	r3, [r3, #8]
 8025fa2:	3301      	adds	r3, #1
 8025fa4:	f023 0301 	bic.w	r3, r3, #1
 8025fa8:	930a      	str	r3, [sp, #40]	; 0x28
 8025faa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025fac:	681f      	ldr	r7, [r3, #0]
 8025fae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8025fb0:	2b00      	cmp	r3, #0
 8025fb2:	dc03      	bgt.n	8025fbc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025fb4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8025fb6:	2b00      	cmp	r3, #0
 8025fb8:	f340 8287 	ble.w	80264ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8025fbc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025fbe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025fc2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025fc6:	1e48      	subs	r0, r1, #1
 8025fc8:	f102 3cff 	add.w	ip, r2, #4294967295
 8025fcc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025fce:	2b00      	cmp	r3, #0
 8025fd0:	f340 80c4 	ble.w	802615c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8025fd4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025fd8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025fdc:	d406      	bmi.n	8025fec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025fde:	4586      	cmp	lr, r0
 8025fe0:	da04      	bge.n	8025fec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025fe2:	2b00      	cmp	r3, #0
 8025fe4:	db02      	blt.n	8025fec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025fe6:	4563      	cmp	r3, ip
 8025fe8:	f2c0 80b9 	blt.w	802615e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8025fec:	f11e 0e01 	adds.w	lr, lr, #1
 8025ff0:	f100 80aa 	bmi.w	8026148 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8025ff4:	4571      	cmp	r1, lr
 8025ff6:	f2c0 80a7 	blt.w	8026148 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8025ffa:	3301      	adds	r3, #1
 8025ffc:	f100 80a4 	bmi.w	8026148 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026000:	429a      	cmp	r2, r3
 8026002:	f2c0 80a1 	blt.w	8026148 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026006:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026008:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 802600c:	930e      	str	r3, [sp, #56]	; 0x38
 802600e:	46c8      	mov	r8, r9
 8026010:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026012:	2b00      	cmp	r3, #0
 8026014:	f340 80c3 	ble.w	802619e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8026018:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802601a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802601e:	1423      	asrs	r3, r4, #16
 8026020:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026024:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026028:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802602c:	f100 814d 	bmi.w	80262ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8026030:	f10c 3bff 	add.w	fp, ip, #4294967295
 8026034:	455b      	cmp	r3, fp
 8026036:	f280 8148 	bge.w	80262ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802603a:	2800      	cmp	r0, #0
 802603c:	f2c0 8145 	blt.w	80262ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8026040:	f10e 3bff 	add.w	fp, lr, #4294967295
 8026044:	4558      	cmp	r0, fp
 8026046:	f280 8140 	bge.w	80262ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802604a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802604c:	fb00 3305 	mla	r3, r0, r5, r3
 8026050:	0858      	lsrs	r0, r3, #1
 8026052:	07dd      	lsls	r5, r3, #31
 8026054:	f817 c000 	ldrb.w	ip, [r7, r0]
 8026058:	bf54      	ite	pl
 802605a:	f00c 0c0f 	andpl.w	ip, ip, #15
 802605e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026062:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026066:	fa5f fc8c 	uxtb.w	ip, ip
 802606a:	2a00      	cmp	r2, #0
 802606c:	f000 80db 	beq.w	8026226 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8026070:	1c58      	adds	r0, r3, #1
 8026072:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8026076:	07c0      	lsls	r0, r0, #31
 8026078:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802607c:	bf54      	ite	pl
 802607e:	f00e 0e0f 	andpl.w	lr, lr, #15
 8026082:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8026086:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802608a:	fa5f f08e 	uxtb.w	r0, lr
 802608e:	9010      	str	r0, [sp, #64]	; 0x40
 8026090:	b1c9      	cbz	r1, 80260c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8026092:	4453      	add	r3, sl
 8026094:	0858      	lsrs	r0, r3, #1
 8026096:	07dd      	lsls	r5, r3, #31
 8026098:	5c38      	ldrb	r0, [r7, r0]
 802609a:	bf54      	ite	pl
 802609c:	f000 000f 	andpl.w	r0, r0, #15
 80260a0:	1100      	asrmi	r0, r0, #4
 80260a2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80260a6:	3301      	adds	r3, #1
 80260a8:	b2c0      	uxtb	r0, r0
 80260aa:	900b      	str	r0, [sp, #44]	; 0x2c
 80260ac:	0858      	lsrs	r0, r3, #1
 80260ae:	07dd      	lsls	r5, r3, #31
 80260b0:	f817 e000 	ldrb.w	lr, [r7, r0]
 80260b4:	bf54      	ite	pl
 80260b6:	f00e 030f 	andpl.w	r3, lr, #15
 80260ba:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80260be:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80260c2:	b2db      	uxtb	r3, r3
 80260c4:	9311      	str	r3, [sp, #68]	; 0x44
 80260c6:	b292      	uxth	r2, r2
 80260c8:	b289      	uxth	r1, r1
 80260ca:	fb02 f301 	mul.w	r3, r2, r1
 80260ce:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80260d2:	0112      	lsls	r2, r2, #4
 80260d4:	b289      	uxth	r1, r1
 80260d6:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80260da:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80260dc:	1ad2      	subs	r2, r2, r3
 80260de:	1a40      	subs	r0, r0, r1
 80260e0:	b292      	uxth	r2, r2
 80260e2:	436a      	muls	r2, r5
 80260e4:	b280      	uxth	r0, r0
 80260e6:	fb0c 2c00 	mla	ip, ip, r0, r2
 80260ea:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80260ec:	fb01 c102 	mla	r1, r1, r2, ip
 80260f0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80260f2:	fb03 1302 	mla	r3, r3, r2, r1
 80260f6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80260fa:	b1db      	cbz	r3, 8026134 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80260fc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80260fe:	4353      	muls	r3, r2
 8026100:	1c5a      	adds	r2, r3, #1
 8026102:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026106:	4ac6      	ldr	r2, [pc, #792]	; (8026420 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8026108:	121b      	asrs	r3, r3, #8
 802610a:	6812      	ldr	r2, [r2, #0]
 802610c:	2bff      	cmp	r3, #255	; 0xff
 802610e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8026112:	f040 8099 	bne.w	8026248 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8026116:	0953      	lsrs	r3, r2, #5
 8026118:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802611c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026120:	f02c 0c07 	bic.w	ip, ip, #7
 8026124:	ea43 0c0c 	orr.w	ip, r3, ip
 8026128:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802612c:	ea4c 0202 	orr.w	r2, ip, r2
 8026130:	f8a8 2000 	strh.w	r2, [r8]
 8026134:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8026136:	441c      	add	r4, r3
 8026138:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802613a:	441e      	add	r6, r3
 802613c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802613e:	3b01      	subs	r3, #1
 8026140:	f108 0802 	add.w	r8, r8, #2
 8026144:	930e      	str	r3, [sp, #56]	; 0x38
 8026146:	e763      	b.n	8026010 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8026148:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802614a:	441c      	add	r4, r3
 802614c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802614e:	441e      	add	r6, r3
 8026150:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026152:	3b01      	subs	r3, #1
 8026154:	9309      	str	r3, [sp, #36]	; 0x24
 8026156:	f109 0902 	add.w	r9, r9, #2
 802615a:	e737      	b.n	8025fcc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802615c:	d024      	beq.n	80261a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802615e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026160:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8026162:	3b01      	subs	r3, #1
 8026164:	fb00 4003 	mla	r0, r0, r3, r4
 8026168:	1400      	asrs	r0, r0, #16
 802616a:	f53f af4c 	bmi.w	8026006 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802616e:	3901      	subs	r1, #1
 8026170:	4288      	cmp	r0, r1
 8026172:	f6bf af48 	bge.w	8026006 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026176:	9924      	ldr	r1, [sp, #144]	; 0x90
 8026178:	fb01 6303 	mla	r3, r1, r3, r6
 802617c:	141b      	asrs	r3, r3, #16
 802617e:	f53f af42 	bmi.w	8026006 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026182:	3a01      	subs	r2, #1
 8026184:	4293      	cmp	r3, r2
 8026186:	f6bf af3e 	bge.w	8026006 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802618a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 802618e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8026192:	930e      	str	r3, [sp, #56]	; 0x38
 8026194:	46c8      	mov	r8, r9
 8026196:	f1bb 0f00 	cmp.w	fp, #0
 802619a:	f300 80b7 	bgt.w	802630c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 802619e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80261a0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80261a4:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80261a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80261aa:	2b00      	cmp	r3, #0
 80261ac:	f340 818d 	ble.w	80264ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80261b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80261b4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80261b8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80261bc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80261be:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80261c2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80261c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80261ca:	eef0 6a62 	vmov.f32	s13, s5
 80261ce:	ee61 7a27 	vmul.f32	s15, s2, s15
 80261d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80261d6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80261da:	ee16 4a90 	vmov	r4, s13
 80261de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80261e2:	eef0 6a43 	vmov.f32	s13, s6
 80261e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80261ea:	ee12 2a90 	vmov	r2, s5
 80261ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80261f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80261f6:	ee13 2a10 	vmov	r2, s6
 80261fa:	9323      	str	r3, [sp, #140]	; 0x8c
 80261fc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80261fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8026202:	9324      	str	r3, [sp, #144]	; 0x90
 8026204:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026206:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8026208:	3b01      	subs	r3, #1
 802620a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802620e:	930d      	str	r3, [sp, #52]	; 0x34
 8026210:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026212:	bf08      	it	eq
 8026214:	4613      	moveq	r3, r2
 8026216:	ee16 6a90 	vmov	r6, s13
 802621a:	9309      	str	r3, [sp, #36]	; 0x24
 802621c:	eeb0 3a67 	vmov.f32	s6, s15
 8026220:	eef0 2a47 	vmov.f32	s5, s14
 8026224:	e6c3      	b.n	8025fae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8026226:	2900      	cmp	r1, #0
 8026228:	f43f af4d 	beq.w	80260c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802622c:	eb0a 0003 	add.w	r0, sl, r3
 8026230:	0843      	lsrs	r3, r0, #1
 8026232:	07c0      	lsls	r0, r0, #31
 8026234:	5cfb      	ldrb	r3, [r7, r3]
 8026236:	bf54      	ite	pl
 8026238:	f003 030f 	andpl.w	r3, r3, #15
 802623c:	111b      	asrmi	r3, r3, #4
 802623e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026242:	b2db      	uxtb	r3, r3
 8026244:	930b      	str	r3, [sp, #44]	; 0x2c
 8026246:	e73e      	b.n	80260c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8026248:	f8b8 e000 	ldrh.w	lr, [r8]
 802624c:	fa1f fb83 	uxth.w	fp, r3
 8026250:	ea4f 202e 	mov.w	r0, lr, asr #8
 8026254:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8026258:	43db      	mvns	r3, r3
 802625a:	b2db      	uxtb	r3, r3
 802625c:	fb11 f10b 	smulbb	r1, r1, fp
 8026260:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026264:	fb00 1003 	mla	r0, r0, r3, r1
 8026268:	fa5f fc8c 	uxtb.w	ip, ip
 802626c:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8026270:	b2d2      	uxtb	r2, r2
 8026272:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026276:	b280      	uxth	r0, r0
 8026278:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802627c:	fb1c fc0b 	smulbb	ip, ip, fp
 8026280:	fa5f fe8e 	uxtb.w	lr, lr
 8026284:	fb12 fb0b 	smulbb	fp, r2, fp
 8026288:	fb01 cc03 	mla	ip, r1, r3, ip
 802628c:	fb0e bb03 	mla	fp, lr, r3, fp
 8026290:	1c43      	adds	r3, r0, #1
 8026292:	fa1f fc8c 	uxth.w	ip, ip
 8026296:	fa1f fb8b 	uxth.w	fp, fp
 802629a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802629e:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 80262a2:	f10c 0101 	add.w	r1, ip, #1
 80262a6:	f10b 0001 	add.w	r0, fp, #1
 80262aa:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80262ae:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80262b2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80262b6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80262ba:	4318      	orrs	r0, r3
 80262bc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80262c0:	ea40 000c 	orr.w	r0, r0, ip
 80262c4:	f8a8 0000 	strh.w	r0, [r8]
 80262c8:	e734      	b.n	8026134 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80262ca:	f113 0b01 	adds.w	fp, r3, #1
 80262ce:	f53f af31 	bmi.w	8026134 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80262d2:	45dc      	cmp	ip, fp
 80262d4:	f6ff af2e 	blt.w	8026134 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80262d8:	f110 0b01 	adds.w	fp, r0, #1
 80262dc:	f53f af2a 	bmi.w	8026134 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80262e0:	45de      	cmp	lr, fp
 80262e2:	f6ff af27 	blt.w	8026134 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80262e6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80262e8:	9302      	str	r3, [sp, #8]
 80262ea:	fa0f f38e 	sxth.w	r3, lr
 80262ee:	9301      	str	r3, [sp, #4]
 80262f0:	fa0f f38c 	sxth.w	r3, ip
 80262f4:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80262f8:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80262fc:	9300      	str	r3, [sp, #0]
 80262fe:	463a      	mov	r2, r7
 8026300:	4653      	mov	r3, sl
 8026302:	4641      	mov	r1, r8
 8026304:	9815      	ldr	r0, [sp, #84]	; 0x54
 8026306:	f7ff fd4d 	bl	8025da4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 802630a:	e713      	b.n	8026134 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802630c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802630e:	1422      	asrs	r2, r4, #16
 8026310:	1433      	asrs	r3, r6, #16
 8026312:	fb05 2303 	mla	r3, r5, r3, r2
 8026316:	085a      	lsrs	r2, r3, #1
 8026318:	07dd      	lsls	r5, r3, #31
 802631a:	5cba      	ldrb	r2, [r7, r2]
 802631c:	bf54      	ite	pl
 802631e:	f002 020f 	andpl.w	r2, r2, #15
 8026322:	1112      	asrmi	r2, r2, #4
 8026324:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8026328:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802632c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8026330:	b2d2      	uxtb	r2, r2
 8026332:	2900      	cmp	r1, #0
 8026334:	d076      	beq.n	8026424 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8026336:	f103 0e01 	add.w	lr, r3, #1
 802633a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802633e:	f01e 0f01 	tst.w	lr, #1
 8026342:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026346:	bf0c      	ite	eq
 8026348:	f00c 0c0f 	andeq.w	ip, ip, #15
 802634c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8026350:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026354:	fa5f f58c 	uxtb.w	r5, ip
 8026358:	9512      	str	r5, [sp, #72]	; 0x48
 802635a:	b300      	cbz	r0, 802639e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802635c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802635e:	442b      	add	r3, r5
 8026360:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026364:	07dd      	lsls	r5, r3, #31
 8026366:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802636a:	bf54      	ite	pl
 802636c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026370:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026374:	3301      	adds	r3, #1
 8026376:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802637a:	fa5f f58c 	uxtb.w	r5, ip
 802637e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026382:	950c      	str	r5, [sp, #48]	; 0x30
 8026384:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026388:	07dd      	lsls	r5, r3, #31
 802638a:	bf54      	ite	pl
 802638c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026390:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026394:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026398:	fa5f f38c 	uxtb.w	r3, ip
 802639c:	9313      	str	r3, [sp, #76]	; 0x4c
 802639e:	b289      	uxth	r1, r1
 80263a0:	b280      	uxth	r0, r0
 80263a2:	fb01 f300 	mul.w	r3, r1, r0
 80263a6:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 80263aa:	0109      	lsls	r1, r1, #4
 80263ac:	b280      	uxth	r0, r0
 80263ae:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 80263b2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80263b4:	1ac9      	subs	r1, r1, r3
 80263b6:	ebac 0c00 	sub.w	ip, ip, r0
 80263ba:	b289      	uxth	r1, r1
 80263bc:	4369      	muls	r1, r5
 80263be:	fa1f fc8c 	uxth.w	ip, ip
 80263c2:	fb02 120c 	mla	r2, r2, ip, r1
 80263c6:	990c      	ldr	r1, [sp, #48]	; 0x30
 80263c8:	fb00 2001 	mla	r0, r0, r1, r2
 80263cc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80263ce:	fb03 0302 	mla	r3, r3, r2, r0
 80263d2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80263d6:	b1d3      	cbz	r3, 802640e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80263d8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80263da:	4353      	muls	r3, r2
 80263dc:	1c5a      	adds	r2, r3, #1
 80263de:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80263e2:	4a0f      	ldr	r2, [pc, #60]	; (8026420 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80263e4:	121b      	asrs	r3, r3, #8
 80263e6:	6812      	ldr	r2, [r2, #0]
 80263e8:	2bff      	cmp	r3, #255	; 0xff
 80263ea:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80263ee:	d12d      	bne.n	802644c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80263f0:	0953      	lsrs	r3, r2, #5
 80263f2:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80263f6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80263fa:	f02c 0c07 	bic.w	ip, ip, #7
 80263fe:	ea43 0c0c 	orr.w	ip, r3, ip
 8026402:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026406:	ea4c 0202 	orr.w	r2, ip, r2
 802640a:	f8a8 2000 	strh.w	r2, [r8]
 802640e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8026410:	441c      	add	r4, r3
 8026412:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026414:	f108 0802 	add.w	r8, r8, #2
 8026418:	441e      	add	r6, r3
 802641a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802641e:	e6ba      	b.n	8026196 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8026420:	2001382c 	.word	0x2001382c
 8026424:	2800      	cmp	r0, #0
 8026426:	d0ba      	beq.n	802639e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8026428:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802642a:	442b      	add	r3, r5
 802642c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026430:	07db      	lsls	r3, r3, #31
 8026432:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026436:	bf54      	ite	pl
 8026438:	f00c 0c0f 	andpl.w	ip, ip, #15
 802643c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026440:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026444:	fa5f f38c 	uxtb.w	r3, ip
 8026448:	930c      	str	r3, [sp, #48]	; 0x30
 802644a:	e7a8      	b.n	802639e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802644c:	f8b8 e000 	ldrh.w	lr, [r8]
 8026450:	fa1f fa83 	uxth.w	sl, r3
 8026454:	ea4f 202e 	mov.w	r0, lr, asr #8
 8026458:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802645c:	43db      	mvns	r3, r3
 802645e:	b2db      	uxtb	r3, r3
 8026460:	fb11 f10a 	smulbb	r1, r1, sl
 8026464:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026468:	fb00 1003 	mla	r0, r0, r3, r1
 802646c:	b2d2      	uxtb	r2, r2
 802646e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8026472:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026476:	fa5f fe8e 	uxtb.w	lr, lr
 802647a:	fb12 f20a 	smulbb	r2, r2, sl
 802647e:	fb0e 2203 	mla	r2, lr, r3, r2
 8026482:	fa5f fc8c 	uxtb.w	ip, ip
 8026486:	b280      	uxth	r0, r0
 8026488:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802648c:	b292      	uxth	r2, r2
 802648e:	fb1c fc0a 	smulbb	ip, ip, sl
 8026492:	fb01 cc03 	mla	ip, r1, r3, ip
 8026496:	1c43      	adds	r3, r0, #1
 8026498:	1c51      	adds	r1, r2, #1
 802649a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802649e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 80264a2:	fa1f fc8c 	uxth.w	ip, ip
 80264a6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80264aa:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80264ae:	4308      	orrs	r0, r1
 80264b0:	f10c 0101 	add.w	r1, ip, #1
 80264b4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80264b8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80264bc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80264c0:	ea40 000c 	orr.w	r0, r0, ip
 80264c4:	f8a8 0000 	strh.w	r0, [r8]
 80264c8:	e7a1      	b.n	802640e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80264ca:	b017      	add	sp, #92	; 0x5c
 80264cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080264d0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 80264d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80264d4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80264d8:	2d00      	cmp	r5, #0
 80264da:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80264de:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80264e2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80264e6:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80264ea:	fb05 0e03 	mla	lr, r5, r3, r0
 80264ee:	f2c0 80b0 	blt.w	8026652 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80264f2:	45a9      	cmp	r9, r5
 80264f4:	f340 80ad 	ble.w	8026652 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80264f8:	2800      	cmp	r0, #0
 80264fa:	f2c0 80a8 	blt.w	802664e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80264fe:	4580      	cmp	r8, r0
 8026500:	f340 80a5 	ble.w	802664e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8026504:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8026508:	f01e 0f01 	tst.w	lr, #1
 802650c:	5d16      	ldrb	r6, [r2, r4]
 802650e:	bf0c      	ite	eq
 8026510:	f006 060f 	andeq.w	r6, r6, #15
 8026514:	1136      	asrne	r6, r6, #4
 8026516:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802651a:	b2f6      	uxtb	r6, r6
 802651c:	1c44      	adds	r4, r0, #1
 802651e:	f100 809b 	bmi.w	8026658 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8026522:	45a0      	cmp	r8, r4
 8026524:	f340 8098 	ble.w	8026658 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8026528:	2f00      	cmp	r7, #0
 802652a:	f000 8097 	beq.w	802665c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 802652e:	f10e 0a01 	add.w	sl, lr, #1
 8026532:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8026536:	f01a 0f01 	tst.w	sl, #1
 802653a:	5d14      	ldrb	r4, [r2, r4]
 802653c:	bf0c      	ite	eq
 802653e:	f004 040f 	andeq.w	r4, r4, #15
 8026542:	1124      	asrne	r4, r4, #4
 8026544:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8026548:	b2e4      	uxtb	r4, r4
 802654a:	3501      	adds	r5, #1
 802654c:	f100 808a 	bmi.w	8026664 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8026550:	45a9      	cmp	r9, r5
 8026552:	f340 8087 	ble.w	8026664 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8026556:	f1bc 0f00 	cmp.w	ip, #0
 802655a:	f000 8086 	beq.w	802666a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 802655e:	2800      	cmp	r0, #0
 8026560:	db7e      	blt.n	8026660 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8026562:	4580      	cmp	r8, r0
 8026564:	dd7c      	ble.n	8026660 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8026566:	eb03 090e 	add.w	r9, r3, lr
 802656a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802656e:	f019 0f01 	tst.w	r9, #1
 8026572:	5d55      	ldrb	r5, [r2, r5]
 8026574:	bf0c      	ite	eq
 8026576:	f005 050f 	andeq.w	r5, r5, #15
 802657a:	112d      	asrne	r5, r5, #4
 802657c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8026580:	b2ed      	uxtb	r5, r5
 8026582:	3001      	adds	r0, #1
 8026584:	d474      	bmi.n	8026670 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8026586:	4580      	cmp	r8, r0
 8026588:	dd72      	ble.n	8026670 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802658a:	2f00      	cmp	r7, #0
 802658c:	d072      	beq.n	8026674 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802658e:	3301      	adds	r3, #1
 8026590:	449e      	add	lr, r3
 8026592:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8026596:	f01e 0f01 	tst.w	lr, #1
 802659a:	5cd0      	ldrb	r0, [r2, r3]
 802659c:	bf0c      	ite	eq
 802659e:	f000 000f 	andeq.w	r0, r0, #15
 80265a2:	1100      	asrne	r0, r0, #4
 80265a4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80265a8:	b2c3      	uxtb	r3, r0
 80265aa:	b2ba      	uxth	r2, r7
 80265ac:	fa1f fc8c 	uxth.w	ip, ip
 80265b0:	fb02 f00c 	mul.w	r0, r2, ip
 80265b4:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80265b8:	0112      	lsls	r2, r2, #4
 80265ba:	fa1f fc8c 	uxth.w	ip, ip
 80265be:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80265c2:	1a12      	subs	r2, r2, r0
 80265c4:	eba7 070c 	sub.w	r7, r7, ip
 80265c8:	b292      	uxth	r2, r2
 80265ca:	b2bf      	uxth	r7, r7
 80265cc:	4362      	muls	r2, r4
 80265ce:	fb06 2207 	mla	r2, r6, r7, r2
 80265d2:	fb0c 2505 	mla	r5, ip, r5, r2
 80265d6:	fb00 5303 	mla	r3, r0, r3, r5
 80265da:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80265de:	b3a3      	cbz	r3, 802664a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 80265e0:	4a25      	ldr	r2, [pc, #148]	; (8026678 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 80265e2:	880e      	ldrh	r6, [r1, #0]
 80265e4:	6815      	ldr	r5, [r2, #0]
 80265e6:	1234      	asrs	r4, r6, #8
 80265e8:	b29a      	uxth	r2, r3
 80265ea:	f3c5 4007 	ubfx	r0, r5, #16, #8
 80265ee:	43db      	mvns	r3, r3
 80265f0:	b2db      	uxtb	r3, r3
 80265f2:	fb10 f002 	smulbb	r0, r0, r2
 80265f6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80265fa:	fb04 0403 	mla	r4, r4, r3, r0
 80265fe:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8026602:	10f0      	asrs	r0, r6, #3
 8026604:	b2ed      	uxtb	r5, r5
 8026606:	00f6      	lsls	r6, r6, #3
 8026608:	fb17 f702 	smulbb	r7, r7, r2
 802660c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8026610:	fb15 f202 	smulbb	r2, r5, r2
 8026614:	b2f6      	uxtb	r6, r6
 8026616:	b2a4      	uxth	r4, r4
 8026618:	fb00 7003 	mla	r0, r0, r3, r7
 802661c:	fb06 2303 	mla	r3, r6, r3, r2
 8026620:	b29a      	uxth	r2, r3
 8026622:	1c63      	adds	r3, r4, #1
 8026624:	b280      	uxth	r0, r0
 8026626:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802662a:	1c53      	adds	r3, r2, #1
 802662c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026630:	1c42      	adds	r2, r0, #1
 8026632:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026636:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802663a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802663e:	0940      	lsrs	r0, r0, #5
 8026640:	4323      	orrs	r3, r4
 8026642:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026646:	4303      	orrs	r3, r0
 8026648:	800b      	strh	r3, [r1, #0]
 802664a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802664e:	2600      	movs	r6, #0
 8026650:	e764      	b.n	802651c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8026652:	2400      	movs	r4, #0
 8026654:	4626      	mov	r6, r4
 8026656:	e778      	b.n	802654a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026658:	2400      	movs	r4, #0
 802665a:	e776      	b.n	802654a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802665c:	463c      	mov	r4, r7
 802665e:	e774      	b.n	802654a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026660:	2500      	movs	r5, #0
 8026662:	e78e      	b.n	8026582 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8026664:	2300      	movs	r3, #0
 8026666:	461d      	mov	r5, r3
 8026668:	e79f      	b.n	80265aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802666a:	4663      	mov	r3, ip
 802666c:	4665      	mov	r5, ip
 802666e:	e79c      	b.n	80265aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026670:	2300      	movs	r3, #0
 8026672:	e79a      	b.n	80265aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026674:	463b      	mov	r3, r7
 8026676:	e798      	b.n	80265aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026678:	2001382c 	.word	0x2001382c

0802667c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802667c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026680:	b093      	sub	sp, #76	; 0x4c
 8026682:	461d      	mov	r5, r3
 8026684:	920c      	str	r2, [sp, #48]	; 0x30
 8026686:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8026688:	9107      	str	r1, [sp, #28]
 802668a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802668e:	9011      	str	r0, [sp, #68]	; 0x44
 8026690:	6850      	ldr	r0, [r2, #4]
 8026692:	6812      	ldr	r2, [r2, #0]
 8026694:	fb00 1303 	mla	r3, r0, r3, r1
 8026698:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802669c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802669e:	689b      	ldr	r3, [r3, #8]
 80266a0:	3301      	adds	r3, #1
 80266a2:	f023 0301 	bic.w	r3, r3, #1
 80266a6:	9306      	str	r3, [sp, #24]
 80266a8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80266aa:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80266ae:	681f      	ldr	r7, [r3, #0]
 80266b0:	9b07      	ldr	r3, [sp, #28]
 80266b2:	2b00      	cmp	r3, #0
 80266b4:	dc03      	bgt.n	80266be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80266b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80266b8:	2b00      	cmp	r3, #0
 80266ba:	f340 8267 	ble.w	8026b8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 80266be:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80266c0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80266c4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80266c8:	1e48      	subs	r0, r1, #1
 80266ca:	f102 3cff 	add.w	ip, r2, #4294967295
 80266ce:	2d00      	cmp	r5, #0
 80266d0:	f340 80b8 	ble.w	8026844 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80266d4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80266d8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80266dc:	d406      	bmi.n	80266ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80266de:	4586      	cmp	lr, r0
 80266e0:	da04      	bge.n	80266ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80266e2:	2b00      	cmp	r3, #0
 80266e4:	db02      	blt.n	80266ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80266e6:	4563      	cmp	r3, ip
 80266e8:	f2c0 80ad 	blt.w	8026846 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 80266ec:	f11e 0e01 	adds.w	lr, lr, #1
 80266f0:	f100 80a0 	bmi.w	8026834 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80266f4:	4571      	cmp	r1, lr
 80266f6:	f2c0 809d 	blt.w	8026834 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80266fa:	3301      	adds	r3, #1
 80266fc:	f100 809a 	bmi.w	8026834 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026700:	429a      	cmp	r2, r3
 8026702:	f2c0 8097 	blt.w	8026834 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026706:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 802670a:	9509      	str	r5, [sp, #36]	; 0x24
 802670c:	46c8      	mov	r8, r9
 802670e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026710:	2b00      	cmp	r3, #0
 8026712:	f340 80b6 	ble.w	8026882 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8026716:	f3c4 3303 	ubfx	r3, r4, #12, #4
 802671a:	9308      	str	r3, [sp, #32]
 802671c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802671e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8026722:	1423      	asrs	r3, r4, #16
 8026724:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026728:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802672c:	f100 813e 	bmi.w	80269ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026730:	f10c 3bff 	add.w	fp, ip, #4294967295
 8026734:	455b      	cmp	r3, fp
 8026736:	f280 8139 	bge.w	80269ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802673a:	2800      	cmp	r0, #0
 802673c:	f2c0 8136 	blt.w	80269ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026740:	f10e 3bff 	add.w	fp, lr, #4294967295
 8026744:	4558      	cmp	r0, fp
 8026746:	f280 8131 	bge.w	80269ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802674a:	9a06      	ldr	r2, [sp, #24]
 802674c:	fb00 3302 	mla	r3, r0, r2, r3
 8026750:	0858      	lsrs	r0, r3, #1
 8026752:	07da      	lsls	r2, r3, #31
 8026754:	f817 c000 	ldrb.w	ip, [r7, r0]
 8026758:	9a08      	ldr	r2, [sp, #32]
 802675a:	bf54      	ite	pl
 802675c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026760:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026764:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026768:	fa5f fc8c 	uxtb.w	ip, ip
 802676c:	2a00      	cmp	r2, #0
 802676e:	f000 80cb 	beq.w	8026908 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8026772:	1c58      	adds	r0, r3, #1
 8026774:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8026778:	07c0      	lsls	r0, r0, #31
 802677a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802677e:	bf54      	ite	pl
 8026780:	f00e 0e0f 	andpl.w	lr, lr, #15
 8026784:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8026788:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802678c:	fa5f fe8e 	uxtb.w	lr, lr
 8026790:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8026794:	b1b9      	cbz	r1, 80267c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8026796:	4453      	add	r3, sl
 8026798:	0858      	lsrs	r0, r3, #1
 802679a:	07da      	lsls	r2, r3, #31
 802679c:	5c38      	ldrb	r0, [r7, r0]
 802679e:	bf54      	ite	pl
 80267a0:	f000 000f 	andpl.w	r0, r0, #15
 80267a4:	1100      	asrmi	r0, r0, #4
 80267a6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80267aa:	b2c0      	uxtb	r0, r0
 80267ac:	900a      	str	r0, [sp, #40]	; 0x28
 80267ae:	1c58      	adds	r0, r3, #1
 80267b0:	0843      	lsrs	r3, r0, #1
 80267b2:	07c2      	lsls	r2, r0, #31
 80267b4:	5cfb      	ldrb	r3, [r7, r3]
 80267b6:	bf54      	ite	pl
 80267b8:	f003 030f 	andpl.w	r3, r3, #15
 80267bc:	111b      	asrmi	r3, r3, #4
 80267be:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80267c2:	b2db      	uxtb	r3, r3
 80267c4:	930e      	str	r3, [sp, #56]	; 0x38
 80267c6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80267ca:	b289      	uxth	r1, r1
 80267cc:	fb02 f301 	mul.w	r3, r2, r1
 80267d0:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80267d4:	0112      	lsls	r2, r2, #4
 80267d6:	b289      	uxth	r1, r1
 80267d8:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80267dc:	1a40      	subs	r0, r0, r1
 80267de:	fa1f fe80 	uxth.w	lr, r0
 80267e2:	1ad2      	subs	r2, r2, r3
 80267e4:	980d      	ldr	r0, [sp, #52]	; 0x34
 80267e6:	b292      	uxth	r2, r2
 80267e8:	4342      	muls	r2, r0
 80267ea:	fb0c 2c0e 	mla	ip, ip, lr, r2
 80267ee:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80267f0:	fb01 c102 	mla	r1, r1, r2, ip
 80267f4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80267f6:	fb03 1302 	mla	r3, r3, r2, r1
 80267fa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80267fe:	2bff      	cmp	r3, #255	; 0xff
 8026800:	f040 8093 	bne.w	802692a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8026804:	4bbe      	ldr	r3, [pc, #760]	; (8026b00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026806:	681a      	ldr	r2, [r3, #0]
 8026808:	4bbe      	ldr	r3, [pc, #760]	; (8026b04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802680a:	0951      	lsrs	r1, r2, #5
 802680c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8026810:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026814:	430b      	orrs	r3, r1
 8026816:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802681a:	4313      	orrs	r3, r2
 802681c:	f8a8 3000 	strh.w	r3, [r8]
 8026820:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026822:	441c      	add	r4, r3
 8026824:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026826:	441e      	add	r6, r3
 8026828:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802682a:	3b01      	subs	r3, #1
 802682c:	f108 0802 	add.w	r8, r8, #2
 8026830:	9309      	str	r3, [sp, #36]	; 0x24
 8026832:	e76c      	b.n	802670e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026834:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026836:	441c      	add	r4, r3
 8026838:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802683a:	3d01      	subs	r5, #1
 802683c:	441e      	add	r6, r3
 802683e:	f109 0902 	add.w	r9, r9, #2
 8026842:	e744      	b.n	80266ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8026844:	d021      	beq.n	802688a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8026846:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8026848:	1e6b      	subs	r3, r5, #1
 802684a:	fb00 4003 	mla	r0, r0, r3, r4
 802684e:	1400      	asrs	r0, r0, #16
 8026850:	f53f af59 	bmi.w	8026706 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026854:	3901      	subs	r1, #1
 8026856:	4288      	cmp	r0, r1
 8026858:	f6bf af55 	bge.w	8026706 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802685c:	9920      	ldr	r1, [sp, #128]	; 0x80
 802685e:	fb01 6303 	mla	r3, r1, r3, r6
 8026862:	141b      	asrs	r3, r3, #16
 8026864:	f53f af4f 	bmi.w	8026706 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026868:	3a01      	subs	r2, #1
 802686a:	4293      	cmp	r3, r2
 802686c:	f6bf af4b 	bge.w	8026706 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026870:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8026874:	9308      	str	r3, [sp, #32]
 8026876:	46a8      	mov	r8, r5
 8026878:	46ce      	mov	lr, r9
 802687a:	f1b8 0f00 	cmp.w	r8, #0
 802687e:	f300 80b5 	bgt.w	80269ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8026882:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8026886:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802688a:	9b07      	ldr	r3, [sp, #28]
 802688c:	2b00      	cmp	r3, #0
 802688e:	f340 817d 	ble.w	8026b8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8026892:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026896:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802689a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802689e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80268a0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80268a4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80268a8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80268ac:	eef0 6a62 	vmov.f32	s13, s5
 80268b0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80268b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80268b8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80268bc:	ee16 4a90 	vmov	r4, s13
 80268c0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80268c4:	eef0 6a43 	vmov.f32	s13, s6
 80268c8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80268cc:	ee12 2a90 	vmov	r2, s5
 80268d0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80268d4:	fb92 f3f3 	sdiv	r3, r2, r3
 80268d8:	ee13 2a10 	vmov	r2, s6
 80268dc:	931f      	str	r3, [sp, #124]	; 0x7c
 80268de:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80268e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80268e4:	9320      	str	r3, [sp, #128]	; 0x80
 80268e6:	9b07      	ldr	r3, [sp, #28]
 80268e8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80268ea:	3b01      	subs	r3, #1
 80268ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80268f0:	9307      	str	r3, [sp, #28]
 80268f2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80268f4:	ee16 6a90 	vmov	r6, s13
 80268f8:	bf14      	ite	ne
 80268fa:	461d      	movne	r5, r3
 80268fc:	4615      	moveq	r5, r2
 80268fe:	eeb0 3a67 	vmov.f32	s6, s15
 8026902:	eef0 2a47 	vmov.f32	s5, s14
 8026906:	e6d3      	b.n	80266b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8026908:	2900      	cmp	r1, #0
 802690a:	f43f af5c 	beq.w	80267c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802690e:	eb0a 0003 	add.w	r0, sl, r3
 8026912:	0843      	lsrs	r3, r0, #1
 8026914:	07c0      	lsls	r0, r0, #31
 8026916:	5cfb      	ldrb	r3, [r7, r3]
 8026918:	bf54      	ite	pl
 802691a:	f003 030f 	andpl.w	r3, r3, #15
 802691e:	111b      	asrmi	r3, r3, #4
 8026920:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026924:	b2db      	uxtb	r3, r3
 8026926:	930a      	str	r3, [sp, #40]	; 0x28
 8026928:	e74d      	b.n	80267c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802692a:	2b00      	cmp	r3, #0
 802692c:	f43f af78 	beq.w	8026820 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026930:	4a73      	ldr	r2, [pc, #460]	; (8026b00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026932:	f8b8 c000 	ldrh.w	ip, [r8]
 8026936:	6810      	ldr	r0, [r2, #0]
 8026938:	fa1f fe83 	uxth.w	lr, r3
 802693c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8026940:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8026944:	43db      	mvns	r3, r3
 8026946:	b2db      	uxtb	r3, r3
 8026948:	fb12 f20e 	smulbb	r2, r2, lr
 802694c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026950:	fb01 2103 	mla	r1, r1, r3, r2
 8026954:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8026958:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802695c:	b2c0      	uxtb	r0, r0
 802695e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8026962:	fb1b fb0e 	smulbb	fp, fp, lr
 8026966:	b289      	uxth	r1, r1
 8026968:	fb10 fe0e 	smulbb	lr, r0, lr
 802696c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026970:	fa5f fc8c 	uxtb.w	ip, ip
 8026974:	fb02 b203 	mla	r2, r2, r3, fp
 8026978:	1c48      	adds	r0, r1, #1
 802697a:	fb0c e303 	mla	r3, ip, r3, lr
 802697e:	b292      	uxth	r2, r2
 8026980:	b29b      	uxth	r3, r3
 8026982:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8026986:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 802698a:	f102 0b01 	add.w	fp, r2, #1
 802698e:	1c59      	adds	r1, r3, #1
 8026990:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8026994:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8026998:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802699c:	0952      	lsrs	r2, r2, #5
 802699e:	4301      	orrs	r1, r0
 80269a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80269a4:	4311      	orrs	r1, r2
 80269a6:	f8a8 1000 	strh.w	r1, [r8]
 80269aa:	e739      	b.n	8026820 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80269ac:	f113 0b01 	adds.w	fp, r3, #1
 80269b0:	f53f af36 	bmi.w	8026820 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80269b4:	45dc      	cmp	ip, fp
 80269b6:	f6ff af33 	blt.w	8026820 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80269ba:	f110 0b01 	adds.w	fp, r0, #1
 80269be:	f53f af2f 	bmi.w	8026820 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80269c2:	45de      	cmp	lr, fp
 80269c4:	f6ff af2c 	blt.w	8026820 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80269c8:	9a08      	ldr	r2, [sp, #32]
 80269ca:	9302      	str	r3, [sp, #8]
 80269cc:	fa0f f38e 	sxth.w	r3, lr
 80269d0:	9301      	str	r3, [sp, #4]
 80269d2:	fa0f f38c 	sxth.w	r3, ip
 80269d6:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80269da:	9105      	str	r1, [sp, #20]
 80269dc:	9300      	str	r3, [sp, #0]
 80269de:	463a      	mov	r2, r7
 80269e0:	4653      	mov	r3, sl
 80269e2:	4641      	mov	r1, r8
 80269e4:	9811      	ldr	r0, [sp, #68]	; 0x44
 80269e6:	f7ff fd73 	bl	80264d0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 80269ea:	e719      	b.n	8026820 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80269ec:	9906      	ldr	r1, [sp, #24]
 80269ee:	1422      	asrs	r2, r4, #16
 80269f0:	1433      	asrs	r3, r6, #16
 80269f2:	fb01 2303 	mla	r3, r1, r3, r2
 80269f6:	085a      	lsrs	r2, r3, #1
 80269f8:	07d9      	lsls	r1, r3, #31
 80269fa:	5cba      	ldrb	r2, [r7, r2]
 80269fc:	bf54      	ite	pl
 80269fe:	f002 020f 	andpl.w	r2, r2, #15
 8026a02:	1112      	asrmi	r2, r2, #4
 8026a04:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8026a08:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8026a0c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026a10:	b2d2      	uxtb	r2, r2
 8026a12:	2800      	cmp	r0, #0
 8026a14:	d062      	beq.n	8026adc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8026a16:	f103 0a01 	add.w	sl, r3, #1
 8026a1a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8026a1e:	f01a 0f01 	tst.w	sl, #1
 8026a22:	5c79      	ldrb	r1, [r7, r1]
 8026a24:	bf0c      	ite	eq
 8026a26:	f001 010f 	andeq.w	r1, r1, #15
 8026a2a:	1109      	asrne	r1, r1, #4
 8026a2c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026a30:	b2c9      	uxtb	r1, r1
 8026a32:	910f      	str	r1, [sp, #60]	; 0x3c
 8026a34:	f1bc 0f00 	cmp.w	ip, #0
 8026a38:	d019      	beq.n	8026a6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026a3a:	9908      	ldr	r1, [sp, #32]
 8026a3c:	440b      	add	r3, r1
 8026a3e:	0859      	lsrs	r1, r3, #1
 8026a40:	f013 0f01 	tst.w	r3, #1
 8026a44:	5c79      	ldrb	r1, [r7, r1]
 8026a46:	bf0c      	ite	eq
 8026a48:	f001 010f 	andeq.w	r1, r1, #15
 8026a4c:	1109      	asrne	r1, r1, #4
 8026a4e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026a52:	b2c9      	uxtb	r1, r1
 8026a54:	3301      	adds	r3, #1
 8026a56:	910b      	str	r1, [sp, #44]	; 0x2c
 8026a58:	0859      	lsrs	r1, r3, #1
 8026a5a:	07db      	lsls	r3, r3, #31
 8026a5c:	5c79      	ldrb	r1, [r7, r1]
 8026a5e:	bf54      	ite	pl
 8026a60:	f001 010f 	andpl.w	r1, r1, #15
 8026a64:	1109      	asrmi	r1, r1, #4
 8026a66:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026a6a:	b2c9      	uxtb	r1, r1
 8026a6c:	9110      	str	r1, [sp, #64]	; 0x40
 8026a6e:	b280      	uxth	r0, r0
 8026a70:	fa1f fc8c 	uxth.w	ip, ip
 8026a74:	fb00 f30c 	mul.w	r3, r0, ip
 8026a78:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8026a7c:	0100      	lsls	r0, r0, #4
 8026a7e:	fa1f fc8c 	uxth.w	ip, ip
 8026a82:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8026a86:	eba1 010c 	sub.w	r1, r1, ip
 8026a8a:	fa1f fa81 	uxth.w	sl, r1
 8026a8e:	1ac0      	subs	r0, r0, r3
 8026a90:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8026a92:	b280      	uxth	r0, r0
 8026a94:	4348      	muls	r0, r1
 8026a96:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8026a98:	fb02 020a 	mla	r2, r2, sl, r0
 8026a9c:	fb0c 2c01 	mla	ip, ip, r1, r2
 8026aa0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026aa2:	fb03 c302 	mla	r3, r3, r2, ip
 8026aa6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026aaa:	2bff      	cmp	r3, #255	; 0xff
 8026aac:	d12c      	bne.n	8026b08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8026aae:	4b14      	ldr	r3, [pc, #80]	; (8026b00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026ab0:	681a      	ldr	r2, [r3, #0]
 8026ab2:	4b14      	ldr	r3, [pc, #80]	; (8026b04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8026ab4:	0951      	lsrs	r1, r2, #5
 8026ab6:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8026aba:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026abe:	430b      	orrs	r3, r1
 8026ac0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026ac4:	4313      	orrs	r3, r2
 8026ac6:	f8ae 3000 	strh.w	r3, [lr]
 8026aca:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026acc:	441c      	add	r4, r3
 8026ace:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026ad0:	f10e 0e02 	add.w	lr, lr, #2
 8026ad4:	441e      	add	r6, r3
 8026ad6:	f108 38ff 	add.w	r8, r8, #4294967295
 8026ada:	e6ce      	b.n	802687a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8026adc:	f1bc 0f00 	cmp.w	ip, #0
 8026ae0:	d0c5      	beq.n	8026a6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026ae2:	9908      	ldr	r1, [sp, #32]
 8026ae4:	440b      	add	r3, r1
 8026ae6:	0859      	lsrs	r1, r3, #1
 8026ae8:	07db      	lsls	r3, r3, #31
 8026aea:	5c79      	ldrb	r1, [r7, r1]
 8026aec:	bf54      	ite	pl
 8026aee:	f001 010f 	andpl.w	r1, r1, #15
 8026af2:	1109      	asrmi	r1, r1, #4
 8026af4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026af8:	b2c9      	uxtb	r1, r1
 8026afa:	910b      	str	r1, [sp, #44]	; 0x2c
 8026afc:	e7b7      	b.n	8026a6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026afe:	bf00      	nop
 8026b00:	2001382c 	.word	0x2001382c
 8026b04:	fffff800 	.word	0xfffff800
 8026b08:	2b00      	cmp	r3, #0
 8026b0a:	d0de      	beq.n	8026aca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026b0c:	4a21      	ldr	r2, [pc, #132]	; (8026b94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8026b0e:	f8be c000 	ldrh.w	ip, [lr]
 8026b12:	6810      	ldr	r0, [r2, #0]
 8026b14:	fa1f fa83 	uxth.w	sl, r3
 8026b18:	ea4f 212c 	mov.w	r1, ip, asr #8
 8026b1c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8026b20:	43db      	mvns	r3, r3
 8026b22:	b2db      	uxtb	r3, r3
 8026b24:	fb12 f20a 	smulbb	r2, r2, sl
 8026b28:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026b2c:	fb01 2103 	mla	r1, r1, r3, r2
 8026b30:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8026b34:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8026b38:	b2c0      	uxtb	r0, r0
 8026b3a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8026b3e:	fa5f fc8c 	uxtb.w	ip, ip
 8026b42:	fb10 f00a 	smulbb	r0, r0, sl
 8026b46:	fb0c 0003 	mla	r0, ip, r3, r0
 8026b4a:	b289      	uxth	r1, r1
 8026b4c:	fb1b fb0a 	smulbb	fp, fp, sl
 8026b50:	b280      	uxth	r0, r0
 8026b52:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026b56:	fb02 b203 	mla	r2, r2, r3, fp
 8026b5a:	1c4b      	adds	r3, r1, #1
 8026b5c:	f100 0b01 	add.w	fp, r0, #1
 8026b60:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8026b64:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8026b68:	b292      	uxth	r2, r2
 8026b6a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8026b6e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8026b72:	ea4b 0101 	orr.w	r1, fp, r1
 8026b76:	f102 0b01 	add.w	fp, r2, #1
 8026b7a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8026b7e:	0952      	lsrs	r2, r2, #5
 8026b80:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026b84:	4311      	orrs	r1, r2
 8026b86:	f8ae 1000 	strh.w	r1, [lr]
 8026b8a:	e79e      	b.n	8026aca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026b8c:	b013      	add	sp, #76	; 0x4c
 8026b8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026b92:	bf00      	nop
 8026b94:	2001382c 	.word	0x2001382c

08026b98 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8026b98:	b570      	push	{r4, r5, r6, lr}
 8026b9a:	1208      	asrs	r0, r1, #8
 8026b9c:	b29e      	uxth	r6, r3
 8026b9e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8026ba2:	1213      	asrs	r3, r2, #8
 8026ba4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026ba8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8026bac:	fb13 f305 	smulbb	r3, r3, r5
 8026bb0:	fb10 f006 	smulbb	r0, r0, r6
 8026bb4:	4418      	add	r0, r3
 8026bb6:	10cc      	asrs	r4, r1, #3
 8026bb8:	10d3      	asrs	r3, r2, #3
 8026bba:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8026bbe:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8026bc2:	fb13 f305 	smulbb	r3, r3, r5
 8026bc6:	fb14 f406 	smulbb	r4, r4, r6
 8026bca:	00c9      	lsls	r1, r1, #3
 8026bcc:	00d2      	lsls	r2, r2, #3
 8026bce:	441c      	add	r4, r3
 8026bd0:	b2d2      	uxtb	r2, r2
 8026bd2:	b2cb      	uxtb	r3, r1
 8026bd4:	fb12 f205 	smulbb	r2, r2, r5
 8026bd8:	b280      	uxth	r0, r0
 8026bda:	fb13 f306 	smulbb	r3, r3, r6
 8026bde:	4413      	add	r3, r2
 8026be0:	1c42      	adds	r2, r0, #1
 8026be2:	b29b      	uxth	r3, r3
 8026be4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026be8:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8026bec:	1c58      	adds	r0, r3, #1
 8026bee:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8026bf2:	b2a4      	uxth	r4, r4
 8026bf4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026bf8:	4310      	orrs	r0, r2
 8026bfa:	1c62      	adds	r2, r4, #1
 8026bfc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8026c00:	0964      	lsrs	r4, r4, #5
 8026c02:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8026c06:	4320      	orrs	r0, r4
 8026c08:	bd70      	pop	{r4, r5, r6, pc}
	...

08026c0c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8026c0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026c10:	b08f      	sub	sp, #60	; 0x3c
 8026c12:	461c      	mov	r4, r3
 8026c14:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8026c18:	9004      	str	r0, [sp, #16]
 8026c1a:	460d      	mov	r5, r1
 8026c1c:	4616      	mov	r6, r2
 8026c1e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026c20:	2f00      	cmp	r7, #0
 8026c22:	f000 80f6 	beq.w	8026e12 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8026c26:	6820      	ldr	r0, [r4, #0]
 8026c28:	6861      	ldr	r1, [r4, #4]
 8026c2a:	aa0a      	add	r2, sp, #40	; 0x28
 8026c2c:	c203      	stmia	r2!, {r0, r1}
 8026c2e:	6818      	ldr	r0, [r3, #0]
 8026c30:	6859      	ldr	r1, [r3, #4]
 8026c32:	aa0c      	add	r2, sp, #48	; 0x30
 8026c34:	c203      	stmia	r2!, {r0, r1}
 8026c36:	a80a      	add	r0, sp, #40	; 0x28
 8026c38:	f7ef fa5e 	bl	80160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026c3c:	4621      	mov	r1, r4
 8026c3e:	a80c      	add	r0, sp, #48	; 0x30
 8026c40:	f7ef fa9e 	bl	8016180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026c44:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8026c48:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8026c4c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8026c50:	f002 0301 	and.w	r3, r2, #1
 8026c54:	9306      	str	r3, [sp, #24]
 8026c56:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026c5a:	f003 0101 	and.w	r1, r3, #1
 8026c5e:	9105      	str	r1, [sp, #20]
 8026c60:	9805      	ldr	r0, [sp, #20]
 8026c62:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8026c66:	4403      	add	r3, r0
 8026c68:	fb01 2303 	mla	r3, r1, r3, r2
 8026c6c:	f04f 0802 	mov.w	r8, #2
 8026c70:	fb93 f3f8 	sdiv	r3, r3, r8
 8026c74:	441d      	add	r5, r3
 8026c76:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8026c7a:	441a      	add	r2, r3
 8026c7c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8026c80:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8026c84:	4419      	add	r1, r3
 8026c86:	4b64      	ldr	r3, [pc, #400]	; (8026e18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8026c88:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8026c8c:	6818      	ldr	r0, [r3, #0]
 8026c8e:	6803      	ldr	r3, [r0, #0]
 8026c90:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8026c92:	4798      	blx	r3
 8026c94:	4a61      	ldr	r2, [pc, #388]	; (8026e1c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8026c96:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8026c9a:	8813      	ldrh	r3, [r2, #0]
 8026c9c:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8026ca0:	2fff      	cmp	r7, #255	; 0xff
 8026ca2:	fb03 a404 	mla	r4, r3, r4, sl
 8026ca6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026caa:	f106 0604 	add.w	r6, r6, #4
 8026cae:	4611      	mov	r1, r2
 8026cb0:	fb03 fb0b 	mul.w	fp, r3, fp
 8026cb4:	d06b      	beq.n	8026d8e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8026cb6:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 8026cba:	9303      	str	r3, [sp, #12]
 8026cbc:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8026cc0:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8026cc4:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8026cc8:	9b07      	ldr	r3, [sp, #28]
 8026cca:	42a3      	cmp	r3, r4
 8026ccc:	f240 809c 	bls.w	8026e08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8026cd0:	9b06      	ldr	r3, [sp, #24]
 8026cd2:	2b00      	cmp	r3, #0
 8026cd4:	d039      	beq.n	8026d4a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8026cd6:	782b      	ldrb	r3, [r5, #0]
 8026cd8:	8822      	ldrh	r2, [r4, #0]
 8026cda:	9804      	ldr	r0, [sp, #16]
 8026cdc:	f003 030f 	and.w	r3, r3, #15
 8026ce0:	f105 0801 	add.w	r8, r5, #1
 8026ce4:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026ce8:	9b03      	ldr	r3, [sp, #12]
 8026cea:	9300      	str	r3, [sp, #0]
 8026cec:	463b      	mov	r3, r7
 8026cee:	f7ff ff53 	bl	8026b98 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026cf2:	f824 0b02 	strh.w	r0, [r4], #2
 8026cf6:	f109 3bff 	add.w	fp, r9, #4294967295
 8026cfa:	f1bb 0f01 	cmp.w	fp, #1
 8026cfe:	46a2      	mov	sl, r4
 8026d00:	f104 0404 	add.w	r4, r4, #4
 8026d04:	dd24      	ble.n	8026d50 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8026d06:	f898 3000 	ldrb.w	r3, [r8]
 8026d0a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8026d0e:	9804      	ldr	r0, [sp, #16]
 8026d10:	091b      	lsrs	r3, r3, #4
 8026d12:	f1ab 0b02 	sub.w	fp, fp, #2
 8026d16:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026d1a:	9b03      	ldr	r3, [sp, #12]
 8026d1c:	9300      	str	r3, [sp, #0]
 8026d1e:	463b      	mov	r3, r7
 8026d20:	f7ff ff3a 	bl	8026b98 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026d24:	f824 0c04 	strh.w	r0, [r4, #-4]
 8026d28:	f818 3b01 	ldrb.w	r3, [r8], #1
 8026d2c:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8026d30:	9804      	ldr	r0, [sp, #16]
 8026d32:	f003 030f 	and.w	r3, r3, #15
 8026d36:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026d3a:	9b03      	ldr	r3, [sp, #12]
 8026d3c:	9300      	str	r3, [sp, #0]
 8026d3e:	463b      	mov	r3, r7
 8026d40:	f7ff ff2a 	bl	8026b98 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026d44:	f824 0c02 	strh.w	r0, [r4, #-2]
 8026d48:	e7d7      	b.n	8026cfa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8026d4a:	46a8      	mov	r8, r5
 8026d4c:	46cb      	mov	fp, r9
 8026d4e:	e7d4      	b.n	8026cfa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8026d50:	d10e      	bne.n	8026d70 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8026d52:	f898 3000 	ldrb.w	r3, [r8]
 8026d56:	f8ba 2000 	ldrh.w	r2, [sl]
 8026d5a:	9804      	ldr	r0, [sp, #16]
 8026d5c:	091b      	lsrs	r3, r3, #4
 8026d5e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026d62:	9b03      	ldr	r3, [sp, #12]
 8026d64:	9300      	str	r3, [sp, #0]
 8026d66:	463b      	mov	r3, r7
 8026d68:	f7ff ff16 	bl	8026b98 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026d6c:	f82a 0b02 	strh.w	r0, [sl], #2
 8026d70:	9b08      	ldr	r3, [sp, #32]
 8026d72:	9a05      	ldr	r2, [sp, #20]
 8026d74:	881c      	ldrh	r4, [r3, #0]
 8026d76:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026d7a:	eba4 0409 	sub.w	r4, r4, r9
 8026d7e:	4413      	add	r3, r2
 8026d80:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8026d84:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026d86:	fb93 f3f2 	sdiv	r3, r3, r2
 8026d8a:	441d      	add	r5, r3
 8026d8c:	e79c      	b.n	8026cc8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 8026d8e:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8026d92:	45a3      	cmp	fp, r4
 8026d94:	d938      	bls.n	8026e08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8026d96:	9b06      	ldr	r3, [sp, #24]
 8026d98:	b1f3      	cbz	r3, 8026dd8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8026d9a:	782b      	ldrb	r3, [r5, #0]
 8026d9c:	f003 030f 	and.w	r3, r3, #15
 8026da0:	1c6a      	adds	r2, r5, #1
 8026da2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026da6:	8023      	strh	r3, [r4, #0]
 8026da8:	f109 30ff 	add.w	r0, r9, #4294967295
 8026dac:	3402      	adds	r4, #2
 8026dae:	2801      	cmp	r0, #1
 8026db0:	4623      	mov	r3, r4
 8026db2:	f104 0404 	add.w	r4, r4, #4
 8026db6:	dd12      	ble.n	8026dde <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8026db8:	7813      	ldrb	r3, [r2, #0]
 8026dba:	091b      	lsrs	r3, r3, #4
 8026dbc:	3802      	subs	r0, #2
 8026dbe:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026dc2:	f824 3c04 	strh.w	r3, [r4, #-4]
 8026dc6:	f812 3b01 	ldrb.w	r3, [r2], #1
 8026dca:	f003 030f 	and.w	r3, r3, #15
 8026dce:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026dd2:	f824 3c02 	strh.w	r3, [r4, #-2]
 8026dd6:	e7ea      	b.n	8026dae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8026dd8:	462a      	mov	r2, r5
 8026dda:	4648      	mov	r0, r9
 8026ddc:	e7e7      	b.n	8026dae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8026dde:	d106      	bne.n	8026dee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8026de0:	7812      	ldrb	r2, [r2, #0]
 8026de2:	0912      	lsrs	r2, r2, #4
 8026de4:	3302      	adds	r3, #2
 8026de6:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8026dea:	f823 2c02 	strh.w	r2, [r3, #-2]
 8026dee:	880c      	ldrh	r4, [r1, #0]
 8026df0:	9a05      	ldr	r2, [sp, #20]
 8026df2:	eba4 0409 	sub.w	r4, r4, r9
 8026df6:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8026dfa:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026dfe:	4413      	add	r3, r2
 8026e00:	fb93 f3f8 	sdiv	r3, r3, r8
 8026e04:	441d      	add	r5, r3
 8026e06:	e7c4      	b.n	8026d92 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8026e08:	4b03      	ldr	r3, [pc, #12]	; (8026e18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8026e0a:	6818      	ldr	r0, [r3, #0]
 8026e0c:	6803      	ldr	r3, [r0, #0]
 8026e0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026e10:	4798      	blx	r3
 8026e12:	b00f      	add	sp, #60	; 0x3c
 8026e14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026e18:	2001381c 	.word	0x2001381c
 8026e1c:	20013816 	.word	0x20013816

08026e20 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8026e20:	b5f0      	push	{r4, r5, r6, r7, lr}
 8026e22:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8026e26:	2dff      	cmp	r5, #255	; 0xff
 8026e28:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8026e2c:	d10c      	bne.n	8026e48 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8026e2e:	2bff      	cmp	r3, #255	; 0xff
 8026e30:	d10a      	bne.n	8026e48 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8026e32:	4b25      	ldr	r3, [pc, #148]	; (8026ec8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8026e34:	0948      	lsrs	r0, r1, #5
 8026e36:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026e3a:	403b      	ands	r3, r7
 8026e3c:	4318      	orrs	r0, r3
 8026e3e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8026e42:	4308      	orrs	r0, r1
 8026e44:	b280      	uxth	r0, r0
 8026e46:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026e48:	fb15 f503 	smulbb	r5, r5, r3
 8026e4c:	b2ab      	uxth	r3, r5
 8026e4e:	1c5d      	adds	r5, r3, #1
 8026e50:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8026e54:	1214      	asrs	r4, r2, #8
 8026e56:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8026e5a:	fa1f fc85 	uxth.w	ip, r5
 8026e5e:	10d6      	asrs	r6, r2, #3
 8026e60:	00d0      	lsls	r0, r2, #3
 8026e62:	43ed      	mvns	r5, r5
 8026e64:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8026e68:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8026e6c:	b2eb      	uxtb	r3, r5
 8026e6e:	b2c0      	uxtb	r0, r0
 8026e70:	fb12 f20c 	smulbb	r2, r2, ip
 8026e74:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8026e78:	fb04 2403 	mla	r4, r4, r3, r2
 8026e7c:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8026e80:	b2c8      	uxtb	r0, r1
 8026e82:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8026e86:	b2fd      	uxtb	r5, r7
 8026e88:	fb10 f00c 	smulbb	r0, r0, ip
 8026e8c:	b2a4      	uxth	r4, r4
 8026e8e:	fb02 0003 	mla	r0, r2, r3, r0
 8026e92:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8026e96:	fb15 f50c 	smulbb	r5, r5, ip
 8026e9a:	fb06 5503 	mla	r5, r6, r3, r5
 8026e9e:	b283      	uxth	r3, r0
 8026ea0:	1c60      	adds	r0, r4, #1
 8026ea2:	b2ad      	uxth	r5, r5
 8026ea4:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8026ea8:	1c58      	adds	r0, r3, #1
 8026eaa:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8026eae:	1c6b      	adds	r3, r5, #1
 8026eb0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8026eb4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8026eb8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026ebc:	096d      	lsrs	r5, r5, #5
 8026ebe:	4320      	orrs	r0, r4
 8026ec0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8026ec4:	4328      	orrs	r0, r5
 8026ec6:	e7be      	b.n	8026e46 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8026ec8:	00fff800 	.word	0x00fff800

08026ecc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8026ecc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026ed0:	461c      	mov	r4, r3
 8026ed2:	b08d      	sub	sp, #52	; 0x34
 8026ed4:	460d      	mov	r5, r1
 8026ed6:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8026ed8:	6861      	ldr	r1, [r4, #4]
 8026eda:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 8026ede:	4680      	mov	r8, r0
 8026ee0:	6820      	ldr	r0, [r4, #0]
 8026ee2:	4616      	mov	r6, r2
 8026ee4:	aa08      	add	r2, sp, #32
 8026ee6:	c203      	stmia	r2!, {r0, r1}
 8026ee8:	6818      	ldr	r0, [r3, #0]
 8026eea:	6859      	ldr	r1, [r3, #4]
 8026eec:	aa0a      	add	r2, sp, #40	; 0x28
 8026eee:	c203      	stmia	r2!, {r0, r1}
 8026ef0:	a808      	add	r0, sp, #32
 8026ef2:	f7ef f901 	bl	80160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026ef6:	4621      	mov	r1, r4
 8026ef8:	a80a      	add	r0, sp, #40	; 0x28
 8026efa:	f7ef f941 	bl	8016180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026efe:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8026f02:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8026f06:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8026f0a:	f002 0301 	and.w	r3, r2, #1
 8026f0e:	9303      	str	r3, [sp, #12]
 8026f10:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8026f14:	f003 0101 	and.w	r1, r3, #1
 8026f18:	9102      	str	r1, [sp, #8]
 8026f1a:	9802      	ldr	r0, [sp, #8]
 8026f1c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8026f20:	4403      	add	r3, r0
 8026f22:	fb01 2303 	mla	r3, r1, r3, r2
 8026f26:	f04f 0a02 	mov.w	sl, #2
 8026f2a:	fb93 f3fa 	sdiv	r3, r3, sl
 8026f2e:	441d      	add	r5, r3
 8026f30:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8026f34:	441a      	add	r2, r3
 8026f36:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8026f3a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8026f3e:	4a3f      	ldr	r2, [pc, #252]	; (802703c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8026f40:	9205      	str	r2, [sp, #20]
 8026f42:	4419      	add	r1, r3
 8026f44:	6810      	ldr	r0, [r2, #0]
 8026f46:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8026f4a:	6803      	ldr	r3, [r0, #0]
 8026f4c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8026f4e:	4798      	blx	r3
 8026f50:	4b3b      	ldr	r3, [pc, #236]	; (8027040 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8026f52:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8026f56:	8819      	ldrh	r1, [r3, #0]
 8026f58:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8026f5c:	fb01 c404 	mla	r4, r1, r4, ip
 8026f60:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026f64:	434f      	muls	r7, r1
 8026f66:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8026f6a:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8026f6e:	3604      	adds	r6, #4
 8026f70:	9204      	str	r2, [sp, #16]
 8026f72:	9b04      	ldr	r3, [sp, #16]
 8026f74:	429c      	cmp	r4, r3
 8026f76:	d258      	bcs.n	802702a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8026f78:	9b03      	ldr	r3, [sp, #12]
 8026f7a:	2b00      	cmp	r3, #0
 8026f7c:	d034      	beq.n	8026fe8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8026f7e:	782b      	ldrb	r3, [r5, #0]
 8026f80:	f003 030f 	and.w	r3, r3, #15
 8026f84:	1c6f      	adds	r7, r5, #1
 8026f86:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026f8a:	0e0b      	lsrs	r3, r1, #24
 8026f8c:	d006      	beq.n	8026f9c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8026f8e:	8822      	ldrh	r2, [r4, #0]
 8026f90:	9300      	str	r3, [sp, #0]
 8026f92:	4640      	mov	r0, r8
 8026f94:	464b      	mov	r3, r9
 8026f96:	f7ff ff43 	bl	8026e20 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026f9a:	8020      	strh	r0, [r4, #0]
 8026f9c:	3402      	adds	r4, #2
 8026f9e:	f10b 3aff 	add.w	sl, fp, #4294967295
 8026fa2:	f1ba 0f01 	cmp.w	sl, #1
 8026fa6:	dd22      	ble.n	8026fee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8026fa8:	783b      	ldrb	r3, [r7, #0]
 8026faa:	091b      	lsrs	r3, r3, #4
 8026fac:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026fb0:	0e0b      	lsrs	r3, r1, #24
 8026fb2:	d006      	beq.n	8026fc2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8026fb4:	8822      	ldrh	r2, [r4, #0]
 8026fb6:	9300      	str	r3, [sp, #0]
 8026fb8:	4640      	mov	r0, r8
 8026fba:	464b      	mov	r3, r9
 8026fbc:	f7ff ff30 	bl	8026e20 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026fc0:	8020      	strh	r0, [r4, #0]
 8026fc2:	f817 3b01 	ldrb.w	r3, [r7], #1
 8026fc6:	f003 030f 	and.w	r3, r3, #15
 8026fca:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026fce:	0e0b      	lsrs	r3, r1, #24
 8026fd0:	d006      	beq.n	8026fe0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8026fd2:	8862      	ldrh	r2, [r4, #2]
 8026fd4:	9300      	str	r3, [sp, #0]
 8026fd6:	4640      	mov	r0, r8
 8026fd8:	464b      	mov	r3, r9
 8026fda:	f7ff ff21 	bl	8026e20 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026fde:	8060      	strh	r0, [r4, #2]
 8026fe0:	3404      	adds	r4, #4
 8026fe2:	f1aa 0a02 	sub.w	sl, sl, #2
 8026fe6:	e7dc      	b.n	8026fa2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8026fe8:	462f      	mov	r7, r5
 8026fea:	46da      	mov	sl, fp
 8026fec:	e7d9      	b.n	8026fa2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8026fee:	d10d      	bne.n	802700c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8026ff0:	783b      	ldrb	r3, [r7, #0]
 8026ff2:	091b      	lsrs	r3, r3, #4
 8026ff4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026ff8:	0e0b      	lsrs	r3, r1, #24
 8026ffa:	d006      	beq.n	802700a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8026ffc:	8822      	ldrh	r2, [r4, #0]
 8026ffe:	9300      	str	r3, [sp, #0]
 8027000:	4640      	mov	r0, r8
 8027002:	464b      	mov	r3, r9
 8027004:	f7ff ff0c 	bl	8026e20 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8027008:	8020      	strh	r0, [r4, #0]
 802700a:	3402      	adds	r4, #2
 802700c:	9b06      	ldr	r3, [sp, #24]
 802700e:	9a02      	ldr	r2, [sp, #8]
 8027010:	881b      	ldrh	r3, [r3, #0]
 8027012:	eba3 030b 	sub.w	r3, r3, fp
 8027016:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802701a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 802701e:	4413      	add	r3, r2
 8027020:	9a07      	ldr	r2, [sp, #28]
 8027022:	fb93 f3f2 	sdiv	r3, r3, r2
 8027026:	441d      	add	r5, r3
 8027028:	e7a3      	b.n	8026f72 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802702a:	9b05      	ldr	r3, [sp, #20]
 802702c:	6818      	ldr	r0, [r3, #0]
 802702e:	6803      	ldr	r3, [r0, #0]
 8027030:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027032:	4798      	blx	r3
 8027034:	b00d      	add	sp, #52	; 0x34
 8027036:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802703a:	bf00      	nop
 802703c:	2001381c 	.word	0x2001381c
 8027040:	20013816 	.word	0x20013816

08027044 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8027044:	b570      	push	{r4, r5, r6, lr}
 8027046:	1214      	asrs	r4, r2, #8
 8027048:	788d      	ldrb	r5, [r1, #2]
 802704a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802704e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8027052:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8027056:	fb15 f503 	smulbb	r5, r5, r3
 802705a:	fb04 5506 	mla	r5, r4, r6, r5
 802705e:	10d0      	asrs	r0, r2, #3
 8027060:	784c      	ldrb	r4, [r1, #1]
 8027062:	7809      	ldrb	r1, [r1, #0]
 8027064:	00d2      	lsls	r2, r2, #3
 8027066:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802706a:	b2d2      	uxtb	r2, r2
 802706c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8027070:	fb14 f403 	smulbb	r4, r4, r3
 8027074:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8027078:	fb11 f303 	smulbb	r3, r1, r3
 802707c:	fb00 4406 	mla	r4, r0, r6, r4
 8027080:	fb02 3306 	mla	r3, r2, r6, r3
 8027084:	b2ad      	uxth	r5, r5
 8027086:	b29b      	uxth	r3, r3
 8027088:	b2a4      	uxth	r4, r4
 802708a:	1c68      	adds	r0, r5, #1
 802708c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8027090:	1c62      	adds	r2, r4, #1
 8027092:	1c58      	adds	r0, r3, #1
 8027094:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8027098:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802709c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80270a0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80270a4:	0964      	lsrs	r4, r4, #5
 80270a6:	4328      	orrs	r0, r5
 80270a8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80270ac:	4320      	orrs	r0, r4
 80270ae:	bd70      	pop	{r4, r5, r6, pc}

080270b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80270b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80270b4:	b08f      	sub	sp, #60	; 0x3c
 80270b6:	461c      	mov	r4, r3
 80270b8:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80270bc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80270be:	4682      	mov	sl, r0
 80270c0:	460e      	mov	r6, r1
 80270c2:	4615      	mov	r5, r2
 80270c4:	2f00      	cmp	r7, #0
 80270c6:	f000 8142 	beq.w	802734e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 80270ca:	6820      	ldr	r0, [r4, #0]
 80270cc:	6861      	ldr	r1, [r4, #4]
 80270ce:	aa0a      	add	r2, sp, #40	; 0x28
 80270d0:	c203      	stmia	r2!, {r0, r1}
 80270d2:	6818      	ldr	r0, [r3, #0]
 80270d4:	6859      	ldr	r1, [r3, #4]
 80270d6:	aa0c      	add	r2, sp, #48	; 0x30
 80270d8:	c203      	stmia	r2!, {r0, r1}
 80270da:	a80a      	add	r0, sp, #40	; 0x28
 80270dc:	f7ef f80c 	bl	80160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80270e0:	4621      	mov	r1, r4
 80270e2:	a80c      	add	r0, sp, #48	; 0x30
 80270e4:	f7ef f84c 	bl	8016180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80270e8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80270ec:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80270f0:	f002 0301 	and.w	r3, r2, #1
 80270f4:	9306      	str	r3, [sp, #24]
 80270f6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80270fa:	f003 0101 	and.w	r1, r3, #1
 80270fe:	9105      	str	r1, [sp, #20]
 8027100:	9805      	ldr	r0, [sp, #20]
 8027102:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8027106:	4403      	add	r3, r0
 8027108:	fb01 2303 	mla	r3, r1, r3, r2
 802710c:	f04f 0802 	mov.w	r8, #2
 8027110:	fb93 f3f8 	sdiv	r3, r3, r8
 8027114:	441e      	add	r6, r3
 8027116:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802711a:	441a      	add	r2, r3
 802711c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8027120:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8027124:	4419      	add	r1, r3
 8027126:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802712a:	9303      	str	r3, [sp, #12]
 802712c:	4b89      	ldr	r3, [pc, #548]	; (8027354 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802712e:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8027132:	6818      	ldr	r0, [r3, #0]
 8027134:	6803      	ldr	r3, [r0, #0]
 8027136:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8027138:	4798      	blx	r3
 802713a:	4a87      	ldr	r2, [pc, #540]	; (8027358 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802713c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8027140:	8813      	ldrh	r3, [r2, #0]
 8027142:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8027146:	2fff      	cmp	r7, #255	; 0xff
 8027148:	fb03 9404 	mla	r4, r3, r4, r9
 802714c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8027150:	f105 0504 	add.w	r5, r5, #4
 8027154:	4694      	mov	ip, r2
 8027156:	fb03 f30b 	mul.w	r3, r3, fp
 802715a:	d071      	beq.n	8027240 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 802715c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8027160:	43f9      	mvns	r1, r7
 8027162:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8027166:	b2c9      	uxtb	r1, r1
 8027168:	9104      	str	r1, [sp, #16]
 802716a:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 802716e:	9b07      	ldr	r3, [sp, #28]
 8027170:	42a3      	cmp	r3, r4
 8027172:	f240 80e7 	bls.w	8027344 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8027176:	9b06      	ldr	r3, [sp, #24]
 8027178:	2b00      	cmp	r3, #0
 802717a:	d03d      	beq.n	80271f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 802717c:	7831      	ldrb	r1, [r6, #0]
 802717e:	9b04      	ldr	r3, [sp, #16]
 8027180:	8822      	ldrh	r2, [r4, #0]
 8027182:	9300      	str	r3, [sp, #0]
 8027184:	f001 010f 	and.w	r1, r1, #15
 8027188:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802718c:	463b      	mov	r3, r7
 802718e:	4429      	add	r1, r5
 8027190:	4650      	mov	r0, sl
 8027192:	f7ff ff57 	bl	8027044 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027196:	9b03      	ldr	r3, [sp, #12]
 8027198:	f824 0b02 	strh.w	r0, [r4], #2
 802719c:	f106 0801 	add.w	r8, r6, #1
 80271a0:	f103 3bff 	add.w	fp, r3, #4294967295
 80271a4:	f1bb 0f01 	cmp.w	fp, #1
 80271a8:	46a1      	mov	r9, r4
 80271aa:	f104 0404 	add.w	r4, r4, #4
 80271ae:	dd27      	ble.n	8027200 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 80271b0:	f898 1000 	ldrb.w	r1, [r8]
 80271b4:	9b04      	ldr	r3, [sp, #16]
 80271b6:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80271ba:	9300      	str	r3, [sp, #0]
 80271bc:	0909      	lsrs	r1, r1, #4
 80271be:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80271c2:	463b      	mov	r3, r7
 80271c4:	4429      	add	r1, r5
 80271c6:	4650      	mov	r0, sl
 80271c8:	f7ff ff3c 	bl	8027044 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80271cc:	f824 0c04 	strh.w	r0, [r4, #-4]
 80271d0:	f818 1b01 	ldrb.w	r1, [r8], #1
 80271d4:	9b04      	ldr	r3, [sp, #16]
 80271d6:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80271da:	9300      	str	r3, [sp, #0]
 80271dc:	f001 010f 	and.w	r1, r1, #15
 80271e0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80271e4:	463b      	mov	r3, r7
 80271e6:	4429      	add	r1, r5
 80271e8:	4650      	mov	r0, sl
 80271ea:	f7ff ff2b 	bl	8027044 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80271ee:	f1ab 0b02 	sub.w	fp, fp, #2
 80271f2:	f824 0c02 	strh.w	r0, [r4, #-2]
 80271f6:	e7d5      	b.n	80271a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80271f8:	46b0      	mov	r8, r6
 80271fa:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80271fe:	e7d1      	b.n	80271a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8027200:	d10f      	bne.n	8027222 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8027202:	f898 1000 	ldrb.w	r1, [r8]
 8027206:	9b04      	ldr	r3, [sp, #16]
 8027208:	f8b9 2000 	ldrh.w	r2, [r9]
 802720c:	9300      	str	r3, [sp, #0]
 802720e:	0909      	lsrs	r1, r1, #4
 8027210:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027214:	463b      	mov	r3, r7
 8027216:	4429      	add	r1, r5
 8027218:	4650      	mov	r0, sl
 802721a:	f7ff ff13 	bl	8027044 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802721e:	f829 0b02 	strh.w	r0, [r9], #2
 8027222:	9b08      	ldr	r3, [sp, #32]
 8027224:	9a05      	ldr	r2, [sp, #20]
 8027226:	881c      	ldrh	r4, [r3, #0]
 8027228:	9b03      	ldr	r3, [sp, #12]
 802722a:	1ae4      	subs	r4, r4, r3
 802722c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8027230:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8027234:	4413      	add	r3, r2
 8027236:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8027238:	fb93 f3f2 	sdiv	r3, r3, r2
 802723c:	441e      	add	r6, r3
 802723e:	e796      	b.n	802716e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8027240:	4f46      	ldr	r7, [pc, #280]	; (802735c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8027242:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8027246:	42a3      	cmp	r3, r4
 8027248:	d97c      	bls.n	8027344 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802724a:	9a06      	ldr	r2, [sp, #24]
 802724c:	2a00      	cmp	r2, #0
 802724e:	d054      	beq.n	80272fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8027250:	7830      	ldrb	r0, [r6, #0]
 8027252:	f000 000f 	and.w	r0, r0, #15
 8027256:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802725a:	eb05 0e00 	add.w	lr, r5, r0
 802725e:	5c28      	ldrb	r0, [r5, r0]
 8027260:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8027264:	f89e e001 	ldrb.w	lr, [lr, #1]
 8027268:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802726c:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8027270:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8027274:	ea42 020e 	orr.w	r2, r2, lr
 8027278:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 802727c:	f824 2b02 	strh.w	r2, [r4], #2
 8027280:	9a03      	ldr	r2, [sp, #12]
 8027282:	1c71      	adds	r1, r6, #1
 8027284:	f102 3eff 	add.w	lr, r2, #4294967295
 8027288:	f1be 0f01 	cmp.w	lr, #1
 802728c:	4620      	mov	r0, r4
 802728e:	f104 0404 	add.w	r4, r4, #4
 8027292:	dd36      	ble.n	8027302 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8027294:	7808      	ldrb	r0, [r1, #0]
 8027296:	0900      	lsrs	r0, r0, #4
 8027298:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802729c:	eb05 0a00 	add.w	sl, r5, r0
 80272a0:	f1ae 0e02 	sub.w	lr, lr, #2
 80272a4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80272a8:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80272ac:	00d2      	lsls	r2, r2, #3
 80272ae:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80272b2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80272b6:	ea49 0202 	orr.w	r2, r9, r2
 80272ba:	f815 9000 	ldrb.w	r9, [r5, r0]
 80272be:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80272c2:	f824 2c04 	strh.w	r2, [r4, #-4]
 80272c6:	f811 0b01 	ldrb.w	r0, [r1], #1
 80272ca:	f000 000f 	and.w	r0, r0, #15
 80272ce:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80272d2:	eb05 0a00 	add.w	sl, r5, r0
 80272d6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80272da:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80272de:	00d2      	lsls	r2, r2, #3
 80272e0:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80272e4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80272e8:	ea49 0202 	orr.w	r2, r9, r2
 80272ec:	f815 9000 	ldrb.w	r9, [r5, r0]
 80272f0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80272f4:	f824 2c02 	strh.w	r2, [r4, #-2]
 80272f8:	e7c6      	b.n	8027288 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80272fa:	4631      	mov	r1, r6
 80272fc:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8027300:	e7c2      	b.n	8027288 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8027302:	d111      	bne.n	8027328 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8027304:	7809      	ldrb	r1, [r1, #0]
 8027306:	0909      	lsrs	r1, r1, #4
 8027308:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802730c:	186c      	adds	r4, r5, r1
 802730e:	5c69      	ldrb	r1, [r5, r1]
 8027310:	78a2      	ldrb	r2, [r4, #2]
 8027312:	7864      	ldrb	r4, [r4, #1]
 8027314:	00e4      	lsls	r4, r4, #3
 8027316:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802731a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802731e:	4322      	orrs	r2, r4
 8027320:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8027324:	f820 2b02 	strh.w	r2, [r0], #2
 8027328:	9a03      	ldr	r2, [sp, #12]
 802732a:	f8bc 4000 	ldrh.w	r4, [ip]
 802732e:	9905      	ldr	r1, [sp, #20]
 8027330:	1aa4      	subs	r4, r4, r2
 8027332:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8027336:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802733a:	440a      	add	r2, r1
 802733c:	fb92 f2f8 	sdiv	r2, r2, r8
 8027340:	4416      	add	r6, r2
 8027342:	e780      	b.n	8027246 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8027344:	4b03      	ldr	r3, [pc, #12]	; (8027354 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8027346:	6818      	ldr	r0, [r3, #0]
 8027348:	6803      	ldr	r3, [r0, #0]
 802734a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802734c:	4798      	blx	r3
 802734e:	b00f      	add	sp, #60	; 0x3c
 8027350:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027354:	2001381c 	.word	0x2001381c
 8027358:	20013816 	.word	0x20013816
 802735c:	fffff800 	.word	0xfffff800

08027360 <CRC_Lock>:
 8027360:	b530      	push	{r4, r5, lr}
 8027362:	4a20      	ldr	r2, [pc, #128]	; (80273e4 <CRC_Lock+0x84>)
 8027364:	6813      	ldr	r3, [r2, #0]
 8027366:	f023 0301 	bic.w	r3, r3, #1
 802736a:	6013      	str	r3, [r2, #0]
 802736c:	4b1e      	ldr	r3, [pc, #120]	; (80273e8 <CRC_Lock+0x88>)
 802736e:	681a      	ldr	r2, [r3, #0]
 8027370:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8027374:	4022      	ands	r2, r4
 8027376:	f24c 2540 	movw	r5, #49728	; 0xc240
 802737a:	42aa      	cmp	r2, r5
 802737c:	d005      	beq.n	802738a <CRC_Lock+0x2a>
 802737e:	681b      	ldr	r3, [r3, #0]
 8027380:	f24c 2270 	movw	r2, #49776	; 0xc270
 8027384:	4023      	ands	r3, r4
 8027386:	4293      	cmp	r3, r2
 8027388:	d124      	bne.n	80273d4 <CRC_Lock+0x74>
 802738a:	4b18      	ldr	r3, [pc, #96]	; (80273ec <CRC_Lock+0x8c>)
 802738c:	681b      	ldr	r3, [r3, #0]
 802738e:	bb0b      	cbnz	r3, 80273d4 <CRC_Lock+0x74>
 8027390:	4b17      	ldr	r3, [pc, #92]	; (80273f0 <CRC_Lock+0x90>)
 8027392:	681a      	ldr	r2, [r3, #0]
 8027394:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8027398:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 802739c:	d00d      	beq.n	80273ba <CRC_Lock+0x5a>
 802739e:	681a      	ldr	r2, [r3, #0]
 80273a0:	f240 4483 	movw	r4, #1155	; 0x483
 80273a4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80273a8:	42a2      	cmp	r2, r4
 80273aa:	d006      	beq.n	80273ba <CRC_Lock+0x5a>
 80273ac:	681b      	ldr	r3, [r3, #0]
 80273ae:	f240 4285 	movw	r2, #1157	; 0x485
 80273b2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80273b6:	4293      	cmp	r3, r2
 80273b8:	d10c      	bne.n	80273d4 <CRC_Lock+0x74>
 80273ba:	4b0e      	ldr	r3, [pc, #56]	; (80273f4 <CRC_Lock+0x94>)
 80273bc:	2201      	movs	r2, #1
 80273be:	601a      	str	r2, [r3, #0]
 80273c0:	681a      	ldr	r2, [r3, #0]
 80273c2:	2a00      	cmp	r2, #0
 80273c4:	d1fc      	bne.n	80273c0 <CRC_Lock+0x60>
 80273c6:	4b0c      	ldr	r3, [pc, #48]	; (80273f8 <CRC_Lock+0x98>)
 80273c8:	6018      	str	r0, [r3, #0]
 80273ca:	6818      	ldr	r0, [r3, #0]
 80273cc:	1a43      	subs	r3, r0, r1
 80273ce:	4258      	negs	r0, r3
 80273d0:	4158      	adcs	r0, r3
 80273d2:	bd30      	pop	{r4, r5, pc}
 80273d4:	4b09      	ldr	r3, [pc, #36]	; (80273fc <CRC_Lock+0x9c>)
 80273d6:	2201      	movs	r2, #1
 80273d8:	601a      	str	r2, [r3, #0]
 80273da:	681a      	ldr	r2, [r3, #0]
 80273dc:	2a00      	cmp	r2, #0
 80273de:	d1fc      	bne.n	80273da <CRC_Lock+0x7a>
 80273e0:	4b07      	ldr	r3, [pc, #28]	; (8027400 <CRC_Lock+0xa0>)
 80273e2:	e7f1      	b.n	80273c8 <CRC_Lock+0x68>
 80273e4:	e0002000 	.word	0xe0002000
 80273e8:	e000ed00 	.word	0xe000ed00
 80273ec:	e0042000 	.word	0xe0042000
 80273f0:	5c001000 	.word	0x5c001000
 80273f4:	58024c08 	.word	0x58024c08
 80273f8:	58024c00 	.word	0x58024c00
 80273fc:	40023008 	.word	0x40023008
 8027400:	40023000 	.word	0x40023000

08027404 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8027404:	6101      	str	r1, [r0, #16]
 8027406:	4770      	bx	lr

08027408 <_ZN8touchgfx8Gestures4tickEv>:
 8027408:	7b83      	ldrb	r3, [r0, #14]
 802740a:	b14b      	cbz	r3, 8027420 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802740c:	8903      	ldrh	r3, [r0, #8]
 802740e:	3301      	adds	r3, #1
 8027410:	b29b      	uxth	r3, r3
 8027412:	2b07      	cmp	r3, #7
 8027414:	8103      	strh	r3, [r0, #8]
 8027416:	bf81      	itttt	hi
 8027418:	2300      	movhi	r3, #0
 802741a:	8143      	strhhi	r3, [r0, #10]
 802741c:	8183      	strhhi	r3, [r0, #12]
 802741e:	7383      	strbhi	r3, [r0, #14]
 8027420:	4770      	bx	lr
	...

08027424 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8027424:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8027428:	4698      	mov	r8, r3
 802742a:	8883      	ldrh	r3, [r0, #4]
 802742c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8027430:	eba8 0303 	sub.w	r3, r8, r3
 8027434:	b21b      	sxth	r3, r3
 8027436:	4604      	mov	r4, r0
 8027438:	2b00      	cmp	r3, #0
 802743a:	4617      	mov	r7, r2
 802743c:	4a18      	ldr	r2, [pc, #96]	; (80274a0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802743e:	9200      	str	r2, [sp, #0]
 8027440:	bfb8      	it	lt
 8027442:	425b      	neglt	r3, r3
 8027444:	8aa2      	ldrh	r2, [r4, #20]
 8027446:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 802744a:	f8ad 800a 	strh.w	r8, [sp, #10]
 802744e:	b21b      	sxth	r3, r3
 8027450:	460e      	mov	r6, r1
 8027452:	4293      	cmp	r3, r2
 8027454:	88c1      	ldrh	r1, [r0, #6]
 8027456:	f8ad 1008 	strh.w	r1, [sp, #8]
 802745a:	f04f 0000 	mov.w	r0, #0
 802745e:	f88d 0004 	strb.w	r0, [sp, #4]
 8027462:	f8ad 500c 	strh.w	r5, [sp, #12]
 8027466:	dc07      	bgt.n	8027478 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8027468:	1a69      	subs	r1, r5, r1
 802746a:	b209      	sxth	r1, r1
 802746c:	2900      	cmp	r1, #0
 802746e:	bfb8      	it	lt
 8027470:	4249      	neglt	r1, r1
 8027472:	b209      	sxth	r1, r1
 8027474:	428a      	cmp	r2, r1
 8027476:	da10      	bge.n	802749a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8027478:	6920      	ldr	r0, [r4, #16]
 802747a:	6803      	ldr	r3, [r0, #0]
 802747c:	4669      	mov	r1, sp
 802747e:	685b      	ldr	r3, [r3, #4]
 8027480:	4798      	blx	r3
 8027482:	eba8 0606 	sub.w	r6, r8, r6
 8027486:	2300      	movs	r3, #0
 8027488:	1bef      	subs	r7, r5, r7
 802748a:	2001      	movs	r0, #1
 802748c:	8123      	strh	r3, [r4, #8]
 802748e:	8166      	strh	r6, [r4, #10]
 8027490:	81a7      	strh	r7, [r4, #12]
 8027492:	f8a4 8004 	strh.w	r8, [r4, #4]
 8027496:	80e5      	strh	r5, [r4, #6]
 8027498:	73a0      	strb	r0, [r4, #14]
 802749a:	b004      	add	sp, #16
 802749c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80274a0:	0802f740 	.word	0x0802f740

080274a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80274a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80274a6:	461e      	mov	r6, r3
 80274a8:	1e4b      	subs	r3, r1, #1
 80274aa:	2b01      	cmp	r3, #1
 80274ac:	b085      	sub	sp, #20
 80274ae:	4604      	mov	r4, r0
 80274b0:	460d      	mov	r5, r1
 80274b2:	4617      	mov	r7, r2
 80274b4:	d84b      	bhi.n	802754e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 80274b6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80274ba:	1cd3      	adds	r3, r2, #3
 80274bc:	b29b      	uxth	r3, r3
 80274be:	2b06      	cmp	r3, #6
 80274c0:	d916      	bls.n	80274f0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 80274c2:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8027564 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80274c6:	f8cd c004 	str.w	ip, [sp, #4]
 80274ca:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80274ce:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80274d2:	6900      	ldr	r0, [r0, #16]
 80274d4:	f8ad 100c 	strh.w	r1, [sp, #12]
 80274d8:	f04f 0c00 	mov.w	ip, #0
 80274dc:	f88d c008 	strb.w	ip, [sp, #8]
 80274e0:	f8ad 200a 	strh.w	r2, [sp, #10]
 80274e4:	f8ad 300e 	strh.w	r3, [sp, #14]
 80274e8:	6803      	ldr	r3, [r0, #0]
 80274ea:	a901      	add	r1, sp, #4
 80274ec:	689b      	ldr	r3, [r3, #8]
 80274ee:	4798      	blx	r3
 80274f0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80274f4:	1cd3      	adds	r3, r2, #3
 80274f6:	b29b      	uxth	r3, r3
 80274f8:	2b06      	cmp	r3, #6
 80274fa:	d916      	bls.n	802752a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80274fc:	f8df c064 	ldr.w	ip, [pc, #100]	; 8027564 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8027500:	f8cd c004 	str.w	ip, [sp, #4]
 8027504:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8027508:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802750c:	6920      	ldr	r0, [r4, #16]
 802750e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8027512:	f04f 0c01 	mov.w	ip, #1
 8027516:	f88d c008 	strb.w	ip, [sp, #8]
 802751a:	f8ad 200a 	strh.w	r2, [sp, #10]
 802751e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027522:	6803      	ldr	r3, [r0, #0]
 8027524:	a901      	add	r1, sp, #4
 8027526:	689b      	ldr	r3, [r3, #8]
 8027528:	4798      	blx	r3
 802752a:	4b0d      	ldr	r3, [pc, #52]	; (8027560 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802752c:	9301      	str	r3, [sp, #4]
 802752e:	6920      	ldr	r0, [r4, #16]
 8027530:	f88d 5008 	strb.w	r5, [sp, #8]
 8027534:	2300      	movs	r3, #0
 8027536:	f8ad 700a 	strh.w	r7, [sp, #10]
 802753a:	f8ad 600c 	strh.w	r6, [sp, #12]
 802753e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027542:	6803      	ldr	r3, [r0, #0]
 8027544:	a901      	add	r1, sp, #4
 8027546:	681b      	ldr	r3, [r3, #0]
 8027548:	4798      	blx	r3
 802754a:	b005      	add	sp, #20
 802754c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802754e:	2900      	cmp	r1, #0
 8027550:	d1eb      	bne.n	802752a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8027552:	80a2      	strh	r2, [r4, #4]
 8027554:	80c6      	strh	r6, [r0, #6]
 8027556:	60a1      	str	r1, [r4, #8]
 8027558:	81a1      	strh	r1, [r4, #12]
 802755a:	73a1      	strb	r1, [r4, #14]
 802755c:	e7e5      	b.n	802752a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802755e:	bf00      	nop
 8027560:	0802f72c 	.word	0x0802f72c
 8027564:	0802f754 	.word	0x0802f754

08027568 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8027568:	10c9      	asrs	r1, r1, #3
 802756a:	2900      	cmp	r1, #0
 802756c:	bfb8      	it	lt
 802756e:	4249      	neglt	r1, r1
 8027570:	2801      	cmp	r0, #1
 8027572:	d108      	bne.n	8027586 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8027574:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8027578:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 802757c:	4601      	mov	r1, r0
 802757e:	dd02      	ble.n	8027586 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8027580:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8027584:	4770      	bx	lr
 8027586:	29ff      	cmp	r1, #255	; 0xff
 8027588:	bfa8      	it	ge
 802758a:	21ff      	movge	r1, #255	; 0xff
 802758c:	4608      	mov	r0, r1
 802758e:	4770      	bx	lr

08027590 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8027590:	b410      	push	{r4}
 8027592:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8027596:	429c      	cmp	r4, r3
 8027598:	d803      	bhi.n	80275a2 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 802759a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802759e:	f7ed b8b1 	b.w	8014704 <_ZN8touchgfx7Outline6lineToEii>
 80275a2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80275a6:	4770      	bx	lr

080275a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 80275a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80275ac:	b08b      	sub	sp, #44	; 0x2c
 80275ae:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80275b2:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80275b6:	9308      	str	r3, [sp, #32]
 80275b8:	4606      	mov	r6, r0
 80275ba:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80275be:	9309      	str	r3, [sp, #36]	; 0x24
 80275c0:	468a      	mov	sl, r1
 80275c2:	f7ed fa0c 	bl	80149de <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 80275c6:	68b5      	ldr	r5, [r6, #8]
 80275c8:	4604      	mov	r4, r0
 80275ca:	2d00      	cmp	r5, #0
 80275cc:	d044      	beq.n	8027658 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80275ce:	6873      	ldr	r3, [r6, #4]
 80275d0:	42ab      	cmp	r3, r5
 80275d2:	d33d      	bcc.n	8027650 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 80275d4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80275d8:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 80275dc:	eb02 0b03 	add.w	fp, r2, r3
 80275e0:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 80275e4:	fb02 1203 	mla	r2, r2, r3, r1
 80275e8:	9205      	str	r2, [sp, #20]
 80275ea:	1e6a      	subs	r2, r5, #1
 80275ec:	9204      	str	r2, [sp, #16]
 80275ee:	f04f 0800 	mov.w	r8, #0
 80275f2:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 80275f6:	f9b4 7000 	ldrsh.w	r7, [r4]
 80275fa:	454b      	cmp	r3, r9
 80275fc:	463a      	mov	r2, r7
 80275fe:	d008      	beq.n	8027612 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8027600:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8027604:	eb03 0b09 	add.w	fp, r3, r9
 8027608:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 802760c:	fb03 1309 	mla	r3, r3, r9, r1
 8027610:	9305      	str	r3, [sp, #20]
 8027612:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8027616:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 802761a:	4498      	add	r8, r3
 802761c:	9b04      	ldr	r3, [sp, #16]
 802761e:	3b01      	subs	r3, #1
 8027620:	9304      	str	r3, [sp, #16]
 8027622:	9b04      	ldr	r3, [sp, #16]
 8027624:	3301      	adds	r3, #1
 8027626:	d015      	beq.n	8027654 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8027628:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 802762c:	42bb      	cmp	r3, r7
 802762e:	d117      	bne.n	8027660 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8027630:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8027634:	9b04      	ldr	r3, [sp, #16]
 8027636:	4548      	cmp	r0, r9
 8027638:	f103 33ff 	add.w	r3, r3, #4294967295
 802763c:	d17f      	bne.n	802773e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802763e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8027642:	4401      	add	r1, r0
 8027644:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8027648:	4480      	add	r8, r0
 802764a:	e7e9      	b.n	8027620 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 802764c:	461f      	mov	r7, r3
 802764e:	e044      	b.n	80276da <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8027650:	2000      	movs	r0, #0
 8027652:	e002      	b.n	802765a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8027654:	2900      	cmp	r1, #0
 8027656:	d16f      	bne.n	8027738 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8027658:	2001      	movs	r0, #1
 802765a:	b00b      	add	sp, #44	; 0x2c
 802765c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027660:	2900      	cmp	r1, #0
 8027662:	d030      	beq.n	80276c6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8027664:	2f00      	cmp	r7, #0
 8027666:	db29      	blt.n	80276bc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8027668:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 802766c:	42bb      	cmp	r3, r7
 802766e:	dd25      	ble.n	80276bc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8027670:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8027674:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8027678:	f7ff ff76 	bl	8027568 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 802767c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802767e:	fb10 f003 	smulbb	r0, r0, r3
 8027682:	b280      	uxth	r0, r0
 8027684:	1c41      	adds	r1, r0, #1
 8027686:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802768a:	1209      	asrs	r1, r1, #8
 802768c:	f011 0fff 	tst.w	r1, #255	; 0xff
 8027690:	d014      	beq.n	80276bc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8027692:	9808      	ldr	r0, [sp, #32]
 8027694:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8027696:	b2c9      	uxtb	r1, r1
 8027698:	b2ba      	uxth	r2, r7
 802769a:	9102      	str	r1, [sp, #8]
 802769c:	2101      	movs	r1, #1
 802769e:	4413      	add	r3, r2
 80276a0:	9101      	str	r1, [sp, #4]
 80276a2:	4402      	add	r2, r0
 80276a4:	fa0f f18b 	sxth.w	r1, fp
 80276a8:	f8da 0000 	ldr.w	r0, [sl]
 80276ac:	9100      	str	r1, [sp, #0]
 80276ae:	6941      	ldr	r1, [r0, #20]
 80276b0:	b21b      	sxth	r3, r3
 80276b2:	460d      	mov	r5, r1
 80276b4:	b212      	sxth	r2, r2
 80276b6:	9905      	ldr	r1, [sp, #20]
 80276b8:	4650      	mov	r0, sl
 80276ba:	47a8      	blx	r5
 80276bc:	9b04      	ldr	r3, [sp, #16]
 80276be:	3301      	adds	r3, #1
 80276c0:	f107 0201 	add.w	r2, r7, #1
 80276c4:	d0c8      	beq.n	8027658 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80276c6:	f9b4 7000 	ldrsh.w	r7, [r4]
 80276ca:	1abb      	subs	r3, r7, r2
 80276cc:	2b00      	cmp	r3, #0
 80276ce:	dd31      	ble.n	8027734 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80276d0:	2a00      	cmp	r2, #0
 80276d2:	dabb      	bge.n	802764c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 80276d4:	2f00      	cmp	r7, #0
 80276d6:	dd2d      	ble.n	8027734 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80276d8:	2200      	movs	r2, #0
 80276da:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 80276de:	19d1      	adds	r1, r2, r7
 80276e0:	4299      	cmp	r1, r3
 80276e2:	db02      	blt.n	80276ea <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 80276e4:	1a9f      	subs	r7, r3, r2
 80276e6:	2f00      	cmp	r7, #0
 80276e8:	dd24      	ble.n	8027734 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80276ea:	ea4f 1188 	mov.w	r1, r8, lsl #6
 80276ee:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80276f2:	f7ff ff39 	bl	8027568 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 80276f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80276f8:	fb10 f003 	smulbb	r0, r0, r3
 80276fc:	b280      	uxth	r0, r0
 80276fe:	1c41      	adds	r1, r0, #1
 8027700:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8027704:	1209      	asrs	r1, r1, #8
 8027706:	f011 0fff 	tst.w	r1, #255	; 0xff
 802770a:	d013      	beq.n	8027734 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802770c:	9808      	ldr	r0, [sp, #32]
 802770e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8027710:	b292      	uxth	r2, r2
 8027712:	b2c9      	uxtb	r1, r1
 8027714:	4413      	add	r3, r2
 8027716:	9102      	str	r1, [sp, #8]
 8027718:	4402      	add	r2, r0
 802771a:	b23f      	sxth	r7, r7
 802771c:	f8da 0000 	ldr.w	r0, [sl]
 8027720:	9701      	str	r7, [sp, #4]
 8027722:	fa0f f18b 	sxth.w	r1, fp
 8027726:	9100      	str	r1, [sp, #0]
 8027728:	6947      	ldr	r7, [r0, #20]
 802772a:	9905      	ldr	r1, [sp, #20]
 802772c:	b21b      	sxth	r3, r3
 802772e:	b212      	sxth	r2, r2
 8027730:	4650      	mov	r0, sl
 8027732:	47b8      	blx	r7
 8027734:	464b      	mov	r3, r9
 8027736:	e75c      	b.n	80275f2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8027738:	2f00      	cmp	r7, #0
 802773a:	da95      	bge.n	8027668 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 802773c:	e78c      	b.n	8027658 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802773e:	2900      	cmp	r1, #0
 8027740:	d0f8      	beq.n	8027734 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027742:	e78f      	b.n	8027664 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08027744 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8027744:	4b4b      	ldr	r3, [pc, #300]	; (8027874 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8027746:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 802774a:	2500      	movs	r5, #0
 802774c:	f100 0620 	add.w	r6, r0, #32
 8027750:	4604      	mov	r4, r0
 8027752:	e9c0 3100 	strd	r3, r1, [r0]
 8027756:	e9c0 5502 	strd	r5, r5, [r0, #8]
 802775a:	e9c0 5504 	strd	r5, r5, [r0, #16]
 802775e:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8027762:	f100 0718 	add.w	r7, r0, #24
 8027766:	4630      	mov	r0, r6
 8027768:	4690      	mov	r8, r2
 802776a:	f7ec fb03 	bl	8013d74 <_ZN8touchgfx7OutlineC1Ev>
 802776e:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8027772:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8027776:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 802777a:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 802777e:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8027782:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8027786:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 802778a:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 802778e:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8027792:	f9b8 2000 	ldrsh.w	r2, [r8]
 8027796:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 802779a:	f8d4 c004 	ldr.w	ip, [r4, #4]
 802779e:	9500      	str	r5, [sp, #0]
 80277a0:	4410      	add	r0, r2
 80277a2:	b280      	uxth	r0, r0
 80277a4:	fa0f fa80 	sxth.w	sl, r0
 80277a8:	45aa      	cmp	sl, r5
 80277aa:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 80277ae:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 80277b2:	dd5c      	ble.n	802786e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80277b4:	4591      	cmp	r9, r2
 80277b6:	dd5a      	ble.n	802786e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80277b8:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 80277bc:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80277c0:	440b      	add	r3, r1
 80277c2:	b29b      	uxth	r3, r3
 80277c4:	b21d      	sxth	r5, r3
 80277c6:	2d00      	cmp	r5, #0
 80277c8:	dd51      	ble.n	802786e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80277ca:	458e      	cmp	lr, r1
 80277cc:	dd4f      	ble.n	802786e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80277ce:	45d1      	cmp	r9, sl
 80277d0:	bfb8      	it	lt
 80277d2:	fa1f f089 	uxthlt.w	r0, r9
 80277d6:	45ae      	cmp	lr, r5
 80277d8:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 80277dc:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 80277e0:	bfb8      	it	lt
 80277e2:	fa1f f38e 	uxthlt.w	r3, lr
 80277e6:	1a80      	subs	r0, r0, r2
 80277e8:	1a5b      	subs	r3, r3, r1
 80277ea:	f8ad 0004 	strh.w	r0, [sp, #4]
 80277ee:	f8ad 3006 	strh.w	r3, [sp, #6]
 80277f2:	f8ad 2000 	strh.w	r2, [sp]
 80277f6:	f8ad 1002 	strh.w	r1, [sp, #2]
 80277fa:	466d      	mov	r5, sp
 80277fc:	e895 0003 	ldmia.w	r5, {r0, r1}
 8027800:	e887 0003 	stmia.w	r7, {r0, r1}
 8027804:	f8dc 3000 	ldr.w	r3, [ip]
 8027808:	4660      	mov	r0, ip
 802780a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802780c:	4639      	mov	r1, r7
 802780e:	4798      	blx	r3
 8027810:	6861      	ldr	r1, [r4, #4]
 8027812:	4628      	mov	r0, r5
 8027814:	3104      	adds	r1, #4
 8027816:	f7ee fcb3 	bl	8016180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802781a:	4638      	mov	r0, r7
 802781c:	f7ee fc6c 	bl	80160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027820:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8027824:	f8bd 2000 	ldrh.w	r2, [sp]
 8027828:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 802782c:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8027830:	4630      	mov	r0, r6
 8027832:	f7ec fa83 	bl	8013d3c <_ZN8touchgfx7Outline5resetEv>
 8027836:	f9bd 3000 	ldrsh.w	r3, [sp]
 802783a:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 802783e:	015b      	lsls	r3, r3, #5
 8027840:	60a3      	str	r3, [r4, #8]
 8027842:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8027846:	015b      	lsls	r3, r3, #5
 8027848:	60e3      	str	r3, [r4, #12]
 802784a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 802784e:	015b      	lsls	r3, r3, #5
 8027850:	6123      	str	r3, [r4, #16]
 8027852:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8027856:	015b      	lsls	r3, r3, #5
 8027858:	6163      	str	r3, [r4, #20]
 802785a:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 802785e:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8027862:	4620      	mov	r0, r4
 8027864:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8027868:	b002      	add	sp, #8
 802786a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802786e:	2300      	movs	r3, #0
 8027870:	9301      	str	r3, [sp, #4]
 8027872:	e7c2      	b.n	80277fa <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8027874:	0802fa78 	.word	0x0802fa78

08027878 <_ZN8touchgfx6Canvas5closeEv>:
 8027878:	b538      	push	{r3, r4, r5, lr}
 802787a:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802787e:	4604      	mov	r4, r0
 8027880:	b193      	cbz	r3, 80278a8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8027882:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8027886:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 802788a:	4213      	tst	r3, r2
 802788c:	d10c      	bne.n	80278a8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802788e:	f100 0520 	add.w	r5, r0, #32
 8027892:	b123      	cbz	r3, 802789e <_ZN8touchgfx6Canvas5closeEv+0x26>
 8027894:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8027898:	4628      	mov	r0, r5
 802789a:	f7ff fe79 	bl	8027590 <_ZN8touchgfx10Rasterizer6lineToEii>
 802789e:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 80278a2:	4628      	mov	r0, r5
 80278a4:	f7ff fe74 	bl	8027590 <_ZN8touchgfx10Rasterizer6lineToEii>
 80278a8:	2300      	movs	r3, #0
 80278aa:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80278ae:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 80278b2:	4298      	cmp	r0, r3
 80278b4:	bf34      	ite	cc
 80278b6:	2000      	movcc	r0, #0
 80278b8:	2001      	movcs	r0, #1
 80278ba:	bd38      	pop	{r3, r4, r5, pc}

080278bc <_ZN8touchgfx6Canvas6renderEh>:
 80278bc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80278c0:	4604      	mov	r4, r0
 80278c2:	6840      	ldr	r0, [r0, #4]
 80278c4:	6803      	ldr	r3, [r0, #0]
 80278c6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80278c8:	460d      	mov	r5, r1
 80278ca:	4798      	blx	r3
 80278cc:	fb10 f105 	smulbb	r1, r0, r5
 80278d0:	b289      	uxth	r1, r1
 80278d2:	1c4d      	adds	r5, r1, #1
 80278d4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80278d8:	122d      	asrs	r5, r5, #8
 80278da:	f000 809d 	beq.w	8027a18 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 80278de:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 80278e2:	2b00      	cmp	r3, #0
 80278e4:	f000 8098 	beq.w	8027a18 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 80278e8:	4620      	mov	r0, r4
 80278ea:	f7ff ffc5 	bl	8027878 <_ZN8touchgfx6Canvas5closeEv>
 80278ee:	4607      	mov	r7, r0
 80278f0:	2800      	cmp	r0, #0
 80278f2:	d048      	beq.n	8027986 <_ZN8touchgfx6Canvas6renderEh+0xca>
 80278f4:	6863      	ldr	r3, [r4, #4]
 80278f6:	4e49      	ldr	r6, [pc, #292]	; (8027a1c <_ZN8touchgfx6Canvas6renderEh+0x160>)
 80278f8:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80278fa:	6837      	ldr	r7, [r6, #0]
 80278fc:	6803      	ldr	r3, [r0, #0]
 80278fe:	689b      	ldr	r3, [r3, #8]
 8027900:	4798      	blx	r3
 8027902:	4601      	mov	r1, r0
 8027904:	4638      	mov	r0, r7
 8027906:	f7ea f9bb 	bl	8011c80 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 802790a:	4607      	mov	r7, r0
 802790c:	f7dc fde2 	bl	80044d4 <_ZN8touchgfx3HAL3lcdEv>
 8027910:	6803      	ldr	r3, [r0, #0]
 8027912:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8027914:	4798      	blx	r3
 8027916:	4680      	mov	r8, r0
 8027918:	f7dc fddc 	bl	80044d4 <_ZN8touchgfx3HAL3lcdEv>
 802791c:	6803      	ldr	r3, [r0, #0]
 802791e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027920:	4798      	blx	r3
 8027922:	280b      	cmp	r0, #11
 8027924:	d85d      	bhi.n	80279e2 <_ZN8touchgfx6Canvas6renderEh+0x126>
 8027926:	e8df f000 	tbb	[pc, r0]
 802792a:	5e53      	.short	0x5e53
 802792c:	325c066e 	.word	0x325c066e
 8027930:	67676742 	.word	0x67676742
 8027934:	6767      	.short	0x6767
 8027936:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802793a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802793e:	2208      	movs	r2, #8
 8027940:	fb91 f2f2 	sdiv	r2, r1, r2
 8027944:	fb08 2303 	mla	r3, r8, r3, r2
 8027948:	441f      	add	r7, r3
 802794a:	424b      	negs	r3, r1
 802794c:	f003 0307 	and.w	r3, r3, #7
 8027950:	f001 0107 	and.w	r1, r1, #7
 8027954:	bf58      	it	pl
 8027956:	4259      	negpl	r1, r3
 8027958:	b2c9      	uxtb	r1, r1
 802795a:	b2ed      	uxtb	r5, r5
 802795c:	e9cd 1500 	strd	r1, r5, [sp]
 8027960:	6860      	ldr	r0, [r4, #4]
 8027962:	463a      	mov	r2, r7
 8027964:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8027966:	fa0f f388 	sxth.w	r3, r8
 802796a:	f104 0020 	add.w	r0, r4, #32
 802796e:	f7ff fe1b 	bl	80275a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8027972:	6863      	ldr	r3, [r4, #4]
 8027974:	4607      	mov	r7, r0
 8027976:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8027978:	6803      	ldr	r3, [r0, #0]
 802797a:	691b      	ldr	r3, [r3, #16]
 802797c:	4798      	blx	r3
 802797e:	6830      	ldr	r0, [r6, #0]
 8027980:	6803      	ldr	r3, [r0, #0]
 8027982:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027984:	4798      	blx	r3
 8027986:	4638      	mov	r0, r7
 8027988:	b002      	add	sp, #8
 802798a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802798e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027992:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8027996:	2204      	movs	r2, #4
 8027998:	fb91 f2f2 	sdiv	r2, r1, r2
 802799c:	fb08 2303 	mla	r3, r8, r3, r2
 80279a0:	441f      	add	r7, r3
 80279a2:	424b      	negs	r3, r1
 80279a4:	f003 0303 	and.w	r3, r3, #3
 80279a8:	f001 0103 	and.w	r1, r1, #3
 80279ac:	e7d2      	b.n	8027954 <_ZN8touchgfx6Canvas6renderEh+0x98>
 80279ae:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80279b2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80279b6:	2900      	cmp	r1, #0
 80279b8:	f04f 0202 	mov.w	r2, #2
 80279bc:	fb91 f2f2 	sdiv	r2, r1, r2
 80279c0:	f001 0101 	and.w	r1, r1, #1
 80279c4:	fb08 2303 	mla	r3, r8, r3, r2
 80279c8:	441f      	add	r7, r3
 80279ca:	bfb8      	it	lt
 80279cc:	4249      	neglt	r1, r1
 80279ce:	e7c3      	b.n	8027958 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 80279d0:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80279d4:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80279d8:	fb08 f303 	mul.w	r3, r8, r3
 80279dc:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80279e0:	441f      	add	r7, r3
 80279e2:	2100      	movs	r1, #0
 80279e4:	e7b9      	b.n	802795a <_ZN8touchgfx6Canvas6renderEh+0x9e>
 80279e6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80279ea:	fb08 f203 	mul.w	r2, r8, r3
 80279ee:	8b23      	ldrh	r3, [r4, #24]
 80279f0:	2103      	movs	r1, #3
 80279f2:	fb13 2301 	smlabb	r3, r3, r1, r2
 80279f6:	e7f3      	b.n	80279e0 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80279f8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80279fc:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8027a00:	fb08 2303 	mla	r3, r8, r3, r2
 8027a04:	e7ec      	b.n	80279e0 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8027a06:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027a0a:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8027a0e:	fb08 f303 	mul.w	r3, r8, r3
 8027a12:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8027a16:	e7e3      	b.n	80279e0 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8027a18:	2701      	movs	r7, #1
 8027a1a:	e7b4      	b.n	8027986 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8027a1c:	2001381c 	.word	0x2001381c

08027a20 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8027a20:	b510      	push	{r4, lr}
 8027a22:	4b07      	ldr	r3, [pc, #28]	; (8027a40 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8027a24:	781b      	ldrb	r3, [r3, #0]
 8027a26:	2b01      	cmp	r3, #1
 8027a28:	d108      	bne.n	8027a3c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8027a2a:	6843      	ldr	r3, [r0, #4]
 8027a2c:	6814      	ldr	r4, [r2, #0]
 8027a2e:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8027a32:	680b      	ldr	r3, [r1, #0]
 8027a34:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8027a38:	6013      	str	r3, [r2, #0]
 8027a3a:	600c      	str	r4, [r1, #0]
 8027a3c:	bd10      	pop	{r4, pc}
 8027a3e:	bf00      	nop
 8027a40:	20013814 	.word	0x20013814

08027a44 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8027a44:	b513      	push	{r0, r1, r4, lr}
 8027a46:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8027a4a:	4604      	mov	r4, r0
 8027a4c:	e9cd 2100 	strd	r2, r1, [sp]
 8027a50:	b9a3      	cbnz	r3, 8027a7c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8027a52:	466a      	mov	r2, sp
 8027a54:	a901      	add	r1, sp, #4
 8027a56:	4620      	mov	r0, r4
 8027a58:	f7ff ffe2 	bl	8027a20 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8027a5c:	68a3      	ldr	r3, [r4, #8]
 8027a5e:	9901      	ldr	r1, [sp, #4]
 8027a60:	9a00      	ldr	r2, [sp, #0]
 8027a62:	1ac9      	subs	r1, r1, r3
 8027a64:	68e3      	ldr	r3, [r4, #12]
 8027a66:	9101      	str	r1, [sp, #4]
 8027a68:	1ad2      	subs	r2, r2, r3
 8027a6a:	2a00      	cmp	r2, #0
 8027a6c:	9200      	str	r2, [sp, #0]
 8027a6e:	da0b      	bge.n	8027a88 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8027a70:	2301      	movs	r3, #1
 8027a72:	2900      	cmp	r1, #0
 8027a74:	da0e      	bge.n	8027a94 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8027a76:	f043 0304 	orr.w	r3, r3, #4
 8027a7a:	e013      	b.n	8027aa4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8027a7c:	f7ff fefc 	bl	8027878 <_ZN8touchgfx6Canvas5closeEv>
 8027a80:	2800      	cmp	r0, #0
 8027a82:	d1e6      	bne.n	8027a52 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8027a84:	b002      	add	sp, #8
 8027a86:	bd10      	pop	{r4, pc}
 8027a88:	6963      	ldr	r3, [r4, #20]
 8027a8a:	429a      	cmp	r2, r3
 8027a8c:	bfac      	ite	ge
 8027a8e:	2302      	movge	r3, #2
 8027a90:	2300      	movlt	r3, #0
 8027a92:	e7ee      	b.n	8027a72 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8027a94:	6920      	ldr	r0, [r4, #16]
 8027a96:	4281      	cmp	r1, r0
 8027a98:	bfac      	ite	ge
 8027a9a:	2008      	movge	r0, #8
 8027a9c:	2000      	movlt	r0, #0
 8027a9e:	4318      	orrs	r0, r3
 8027aa0:	b2c3      	uxtb	r3, r0
 8027aa2:	b158      	cbz	r0, 8027abc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8027aa4:	2200      	movs	r2, #0
 8027aa6:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8027aaa:	9901      	ldr	r1, [sp, #4]
 8027aac:	9a00      	ldr	r2, [sp, #0]
 8027aae:	66a1      	str	r1, [r4, #104]	; 0x68
 8027ab0:	66e2      	str	r2, [r4, #108]	; 0x6c
 8027ab2:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8027ab6:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8027aba:	e7e3      	b.n	8027a84 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8027abc:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8027ac0:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8027ac4:	4298      	cmp	r0, r3
 8027ac6:	d803      	bhi.n	8027ad0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8027ac8:	f104 0020 	add.w	r0, r4, #32
 8027acc:	f7ec fe34 	bl	8014738 <_ZN8touchgfx7Outline6moveToEii>
 8027ad0:	2301      	movs	r3, #1
 8027ad2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8027ad6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8027ada:	2300      	movs	r3, #0
 8027adc:	e7e5      	b.n	8027aaa <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08027ade <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8027ade:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8027ae0:	ab02      	add	r3, sp, #8
 8027ae2:	4604      	mov	r4, r0
 8027ae4:	f843 2d08 	str.w	r2, [r3, #-8]!
 8027ae8:	9101      	str	r1, [sp, #4]
 8027aea:	461a      	mov	r2, r3
 8027aec:	a901      	add	r1, sp, #4
 8027aee:	f7ff ff97 	bl	8027a20 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8027af2:	68a3      	ldr	r3, [r4, #8]
 8027af4:	9901      	ldr	r1, [sp, #4]
 8027af6:	9a00      	ldr	r2, [sp, #0]
 8027af8:	1ac9      	subs	r1, r1, r3
 8027afa:	68e3      	ldr	r3, [r4, #12]
 8027afc:	9101      	str	r1, [sp, #4]
 8027afe:	1ad2      	subs	r2, r2, r3
 8027b00:	2a00      	cmp	r2, #0
 8027b02:	9200      	str	r2, [sp, #0]
 8027b04:	db1c      	blt.n	8027b40 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8027b06:	6963      	ldr	r3, [r4, #20]
 8027b08:	429a      	cmp	r2, r3
 8027b0a:	bfac      	ite	ge
 8027b0c:	2002      	movge	r0, #2
 8027b0e:	2000      	movlt	r0, #0
 8027b10:	2900      	cmp	r1, #0
 8027b12:	db17      	blt.n	8027b44 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8027b14:	6923      	ldr	r3, [r4, #16]
 8027b16:	4299      	cmp	r1, r3
 8027b18:	bfac      	ite	ge
 8027b1a:	2308      	movge	r3, #8
 8027b1c:	2300      	movlt	r3, #0
 8027b1e:	4303      	orrs	r3, r0
 8027b20:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8027b24:	b2dd      	uxtb	r5, r3
 8027b26:	b978      	cbnz	r0, 8027b48 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8027b28:	f104 0020 	add.w	r0, r4, #32
 8027b2c:	f7ff fd30 	bl	8027590 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027b30:	9b01      	ldr	r3, [sp, #4]
 8027b32:	65e3      	str	r3, [r4, #92]	; 0x5c
 8027b34:	9b00      	ldr	r3, [sp, #0]
 8027b36:	6623      	str	r3, [r4, #96]	; 0x60
 8027b38:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8027b3c:	b002      	add	sp, #8
 8027b3e:	bd70      	pop	{r4, r5, r6, pc}
 8027b40:	2001      	movs	r0, #1
 8027b42:	e7e5      	b.n	8027b10 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8027b44:	2304      	movs	r3, #4
 8027b46:	e7ea      	b.n	8027b1e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8027b48:	b113      	cbz	r3, 8027b50 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8027b4a:	ea10 0305 	ands.w	r3, r0, r5
 8027b4e:	d11c      	bne.n	8027b8a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8027b50:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8027b54:	f104 0620 	add.w	r6, r4, #32
 8027b58:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8027b5c:	b98b      	cbnz	r3, 8027b82 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8027b5e:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8027b62:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8027b66:	4298      	cmp	r0, r3
 8027b68:	d802      	bhi.n	8027b70 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8027b6a:	4630      	mov	r0, r6
 8027b6c:	f7ec fde4 	bl	8014738 <_ZN8touchgfx7Outline6moveToEii>
 8027b70:	2301      	movs	r3, #1
 8027b72:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8027b76:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8027b7a:	e9dd 2100 	ldrd	r2, r1, [sp]
 8027b7e:	4630      	mov	r0, r6
 8027b80:	e7d4      	b.n	8027b2c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8027b82:	4630      	mov	r0, r6
 8027b84:	f7ff fd04 	bl	8027590 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027b88:	e7f7      	b.n	8027b7a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8027b8a:	461d      	mov	r5, r3
 8027b8c:	e7d0      	b.n	8027b30 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08027b90 <_ZN8touchgfx6CanvasD1Ev>:
 8027b90:	b510      	push	{r4, lr}
 8027b92:	4b04      	ldr	r3, [pc, #16]	; (8027ba4 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8027b94:	4604      	mov	r4, r0
 8027b96:	f840 3b20 	str.w	r3, [r0], #32
 8027b9a:	f7ec f8c7 	bl	8013d2c <_ZN8touchgfx7OutlineD1Ev>
 8027b9e:	4620      	mov	r0, r4
 8027ba0:	bd10      	pop	{r4, pc}
 8027ba2:	bf00      	nop
 8027ba4:	0802fa78 	.word	0x0802fa78

08027ba8 <_ZN8touchgfx6CanvasD0Ev>:
 8027ba8:	b510      	push	{r4, lr}
 8027baa:	4604      	mov	r4, r0
 8027bac:	f7ff fff0 	bl	8027b90 <_ZN8touchgfx6CanvasD1Ev>
 8027bb0:	4620      	mov	r0, r4
 8027bb2:	2170      	movs	r1, #112	; 0x70
 8027bb4:	f002 fd09 	bl	802a5ca <_ZdlPvj>
 8027bb8:	4620      	mov	r0, r4
 8027bba:	bd10      	pop	{r4, pc}

08027bbc <_ZN8touchgfx6CircleD1Ev>:
 8027bbc:	4770      	bx	lr

08027bbe <_ZN8touchgfx6CircleD0Ev>:
 8027bbe:	b510      	push	{r4, lr}
 8027bc0:	2148      	movs	r1, #72	; 0x48
 8027bc2:	4604      	mov	r4, r0
 8027bc4:	f002 fd01 	bl	802a5ca <_ZdlPvj>
 8027bc8:	4620      	mov	r0, r4
 8027bca:	bd10      	pop	{r4, pc}

08027bcc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8027bcc:	b508      	push	{r3, lr}
 8027bce:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8027bd2:	f7ea fbab 	bl	801232c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027bd6:	bd08      	pop	{r3, pc}

08027bd8 <_ZN8touchgfx6CircleC1Ev>:
 8027bd8:	b510      	push	{r4, lr}
 8027bda:	4604      	mov	r4, r0
 8027bdc:	f7ea fa42 	bl	8012064 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8027be0:	4b08      	ldr	r3, [pc, #32]	; (8027c04 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8027be2:	6023      	str	r3, [r4, #0]
 8027be4:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8027be8:	2300      	movs	r3, #0
 8027bea:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 8027bee:	f24b 4205 	movw	r2, #46085	; 0xb405
 8027bf2:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8027bf6:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8027bfa:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8027bfe:	60a3      	str	r3, [r4, #8]
 8027c00:	4620      	mov	r0, r4
 8027c02:	bd10      	pop	{r4, pc}
 8027c04:	0802fa8c 	.word	0x0802fa8c

08027c08 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8027c08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027c0c:	428a      	cmp	r2, r1
 8027c0e:	4680      	mov	r8, r0
 8027c10:	4610      	mov	r0, r2
 8027c12:	4699      	mov	r9, r3
 8027c14:	bfa6      	itte	ge
 8027c16:	460a      	movge	r2, r1
 8027c18:	4603      	movge	r3, r0
 8027c1a:	460b      	movlt	r3, r1
 8027c1c:	1a99      	subs	r1, r3, r2
 8027c1e:	b085      	sub	sp, #20
 8027c20:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8027c24:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 8027c28:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027c2a:	bfa4      	itt	ge
 8027c2c:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8027c30:	2200      	movge	r2, #0
 8027c32:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 8027c36:	9300      	str	r3, [sp, #0]
 8027c38:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 8027c3c:	f102 0b01 	add.w	fp, r2, #1
 8027c40:	2c00      	cmp	r4, #0
 8027c42:	f040 80af 	bne.w	8027da4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8027c46:	4610      	mov	r0, r2
 8027c48:	9201      	str	r2, [sp, #4]
 8027c4a:	f7ea fb6f 	bl	801232c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027c4e:	a903      	add	r1, sp, #12
 8027c50:	9003      	str	r0, [sp, #12]
 8027c52:	4650      	mov	r0, sl
 8027c54:	f7ea fa32 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c58:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8027c5c:	9a01      	ldr	r2, [sp, #4]
 8027c5e:	4408      	add	r0, r1
 8027c60:	f8d9 1000 	ldr.w	r1, [r9]
 8027c64:	4281      	cmp	r1, r0
 8027c66:	bfc8      	it	gt
 8027c68:	f8c9 0000 	strgt.w	r0, [r9]
 8027c6c:	6839      	ldr	r1, [r7, #0]
 8027c6e:	4288      	cmp	r0, r1
 8027c70:	bfc8      	it	gt
 8027c72:	6038      	strgt	r0, [r7, #0]
 8027c74:	4610      	mov	r0, r2
 8027c76:	f7ff ffa9 	bl	8027bcc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027c7a:	a903      	add	r1, sp, #12
 8027c7c:	9003      	str	r0, [sp, #12]
 8027c7e:	4650      	mov	r0, sl
 8027c80:	f7ea fa1c 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c84:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8027c88:	1a10      	subs	r0, r2, r0
 8027c8a:	6832      	ldr	r2, [r6, #0]
 8027c8c:	4282      	cmp	r2, r0
 8027c8e:	bfc8      	it	gt
 8027c90:	6030      	strgt	r0, [r6, #0]
 8027c92:	682a      	ldr	r2, [r5, #0]
 8027c94:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8027c98:	4290      	cmp	r0, r2
 8027c9a:	fb9b f2f1 	sdiv	r2, fp, r1
 8027c9e:	fb01 b212 	mls	r2, r1, r2, fp
 8027ca2:	eba1 0202 	sub.w	r2, r1, r2
 8027ca6:	bfc8      	it	gt
 8027ca8:	6028      	strgt	r0, [r5, #0]
 8027caa:	fb92 f0f1 	sdiv	r0, r2, r1
 8027cae:	fb01 2210 	mls	r2, r1, r0, r2
 8027cb2:	4493      	add	fp, r2
 8027cb4:	9b00      	ldr	r3, [sp, #0]
 8027cb6:	455b      	cmp	r3, fp
 8027cb8:	db2a      	blt.n	8027d10 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 8027cba:	4658      	mov	r0, fp
 8027cbc:	f7ea fb36 	bl	801232c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027cc0:	a903      	add	r1, sp, #12
 8027cc2:	9003      	str	r0, [sp, #12]
 8027cc4:	4650      	mov	r0, sl
 8027cc6:	f7ea f9f9 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027cca:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027cce:	4410      	add	r0, r2
 8027cd0:	f8d9 2000 	ldr.w	r2, [r9]
 8027cd4:	4282      	cmp	r2, r0
 8027cd6:	bfc8      	it	gt
 8027cd8:	f8c9 0000 	strgt.w	r0, [r9]
 8027cdc:	683a      	ldr	r2, [r7, #0]
 8027cde:	4290      	cmp	r0, r2
 8027ce0:	bfc8      	it	gt
 8027ce2:	6038      	strgt	r0, [r7, #0]
 8027ce4:	4658      	mov	r0, fp
 8027ce6:	f7ff ff71 	bl	8027bcc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027cea:	a903      	add	r1, sp, #12
 8027cec:	9003      	str	r0, [sp, #12]
 8027cee:	4650      	mov	r0, sl
 8027cf0:	f7ea f9e4 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027cf4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8027cf8:	1a10      	subs	r0, r2, r0
 8027cfa:	6832      	ldr	r2, [r6, #0]
 8027cfc:	4282      	cmp	r2, r0
 8027cfe:	bfc8      	it	gt
 8027d00:	6030      	strgt	r0, [r6, #0]
 8027d02:	682a      	ldr	r2, [r5, #0]
 8027d04:	4290      	cmp	r0, r2
 8027d06:	bfc8      	it	gt
 8027d08:	6028      	strgt	r0, [r5, #0]
 8027d0a:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8027d0e:	e7d1      	b.n	8027cb4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8027d10:	9b00      	ldr	r3, [sp, #0]
 8027d12:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8027d16:	455b      	cmp	r3, fp
 8027d18:	dd27      	ble.n	8027d6a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 8027d1a:	4618      	mov	r0, r3
 8027d1c:	f7ea fb06 	bl	801232c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027d20:	a903      	add	r1, sp, #12
 8027d22:	9003      	str	r0, [sp, #12]
 8027d24:	4650      	mov	r0, sl
 8027d26:	f7ea f9c9 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d2a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027d2e:	4410      	add	r0, r2
 8027d30:	f8d9 2000 	ldr.w	r2, [r9]
 8027d34:	4282      	cmp	r2, r0
 8027d36:	bfc8      	it	gt
 8027d38:	f8c9 0000 	strgt.w	r0, [r9]
 8027d3c:	683a      	ldr	r2, [r7, #0]
 8027d3e:	4290      	cmp	r0, r2
 8027d40:	bfc8      	it	gt
 8027d42:	6038      	strgt	r0, [r7, #0]
 8027d44:	9800      	ldr	r0, [sp, #0]
 8027d46:	f7ff ff41 	bl	8027bcc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027d4a:	a903      	add	r1, sp, #12
 8027d4c:	9003      	str	r0, [sp, #12]
 8027d4e:	4650      	mov	r0, sl
 8027d50:	f7ea f9b4 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d54:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8027d58:	1a10      	subs	r0, r2, r0
 8027d5a:	6832      	ldr	r2, [r6, #0]
 8027d5c:	4282      	cmp	r2, r0
 8027d5e:	bfc8      	it	gt
 8027d60:	6030      	strgt	r0, [r6, #0]
 8027d62:	682a      	ldr	r2, [r5, #0]
 8027d64:	4290      	cmp	r0, r2
 8027d66:	bfc8      	it	gt
 8027d68:	6028      	strgt	r0, [r5, #0]
 8027d6a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027d6e:	f8d9 1000 	ldr.w	r1, [r9]
 8027d72:	4291      	cmp	r1, r2
 8027d74:	bfc8      	it	gt
 8027d76:	f8c9 2000 	strgt.w	r2, [r9]
 8027d7a:	683a      	ldr	r2, [r7, #0]
 8027d7c:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 8027d80:	429a      	cmp	r2, r3
 8027d82:	bfb8      	it	lt
 8027d84:	603b      	strlt	r3, [r7, #0]
 8027d86:	6832      	ldr	r2, [r6, #0]
 8027d88:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8027d8c:	429a      	cmp	r2, r3
 8027d8e:	bfc8      	it	gt
 8027d90:	6033      	strgt	r3, [r6, #0]
 8027d92:	682a      	ldr	r2, [r5, #0]
 8027d94:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8027d98:	429a      	cmp	r2, r3
 8027d9a:	da00      	bge.n	8027d9e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8027d9c:	602b      	str	r3, [r5, #0]
 8027d9e:	b005      	add	sp, #20
 8027da0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027da4:	2002      	movs	r0, #2
 8027da6:	3401      	adds	r4, #1
 8027da8:	fb94 f4f0 	sdiv	r4, r4, r0
 8027dac:	4610      	mov	r0, r2
 8027dae:	9201      	str	r2, [sp, #4]
 8027db0:	f7ea fabc 	bl	801232c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027db4:	a903      	add	r1, sp, #12
 8027db6:	9003      	str	r0, [sp, #12]
 8027db8:	4650      	mov	r0, sl
 8027dba:	f7ea f97f 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027dbe:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8027dc2:	9a01      	ldr	r2, [sp, #4]
 8027dc4:	4408      	add	r0, r1
 8027dc6:	f8d9 1000 	ldr.w	r1, [r9]
 8027dca:	1b03      	subs	r3, r0, r4
 8027dcc:	4299      	cmp	r1, r3
 8027dce:	bfc8      	it	gt
 8027dd0:	f8c9 3000 	strgt.w	r3, [r9]
 8027dd4:	6839      	ldr	r1, [r7, #0]
 8027dd6:	428b      	cmp	r3, r1
 8027dd8:	bfc8      	it	gt
 8027dda:	603b      	strgt	r3, [r7, #0]
 8027ddc:	f8d9 1000 	ldr.w	r1, [r9]
 8027de0:	4420      	add	r0, r4
 8027de2:	4281      	cmp	r1, r0
 8027de4:	bfc8      	it	gt
 8027de6:	f8c9 0000 	strgt.w	r0, [r9]
 8027dea:	6839      	ldr	r1, [r7, #0]
 8027dec:	4288      	cmp	r0, r1
 8027dee:	bfc8      	it	gt
 8027df0:	6038      	strgt	r0, [r7, #0]
 8027df2:	4610      	mov	r0, r2
 8027df4:	f7ff feea 	bl	8027bcc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027df8:	a903      	add	r1, sp, #12
 8027dfa:	9003      	str	r0, [sp, #12]
 8027dfc:	4650      	mov	r0, sl
 8027dfe:	f7ea f95d 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027e02:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8027e06:	1a10      	subs	r0, r2, r0
 8027e08:	6832      	ldr	r2, [r6, #0]
 8027e0a:	1b01      	subs	r1, r0, r4
 8027e0c:	428a      	cmp	r2, r1
 8027e0e:	bfc8      	it	gt
 8027e10:	6031      	strgt	r1, [r6, #0]
 8027e12:	682a      	ldr	r2, [r5, #0]
 8027e14:	4291      	cmp	r1, r2
 8027e16:	bfc8      	it	gt
 8027e18:	6029      	strgt	r1, [r5, #0]
 8027e1a:	6832      	ldr	r2, [r6, #0]
 8027e1c:	4420      	add	r0, r4
 8027e1e:	4282      	cmp	r2, r0
 8027e20:	bfc8      	it	gt
 8027e22:	6030      	strgt	r0, [r6, #0]
 8027e24:	682a      	ldr	r2, [r5, #0]
 8027e26:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8027e2a:	4290      	cmp	r0, r2
 8027e2c:	fb9b f2f1 	sdiv	r2, fp, r1
 8027e30:	fb01 b212 	mls	r2, r1, r2, fp
 8027e34:	eba1 0202 	sub.w	r2, r1, r2
 8027e38:	bfc8      	it	gt
 8027e3a:	6028      	strgt	r0, [r5, #0]
 8027e3c:	fb92 f0f1 	sdiv	r0, r2, r1
 8027e40:	fb01 2210 	mls	r2, r1, r0, r2
 8027e44:	4493      	add	fp, r2
 8027e46:	9b00      	ldr	r3, [sp, #0]
 8027e48:	455b      	cmp	r3, fp
 8027e4a:	db40      	blt.n	8027ece <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8027e4c:	4658      	mov	r0, fp
 8027e4e:	f7ea fa6d 	bl	801232c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027e52:	a903      	add	r1, sp, #12
 8027e54:	9003      	str	r0, [sp, #12]
 8027e56:	4650      	mov	r0, sl
 8027e58:	f7ea f930 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027e5c:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027e60:	4410      	add	r0, r2
 8027e62:	f8d9 2000 	ldr.w	r2, [r9]
 8027e66:	1b01      	subs	r1, r0, r4
 8027e68:	428a      	cmp	r2, r1
 8027e6a:	bfc8      	it	gt
 8027e6c:	f8c9 1000 	strgt.w	r1, [r9]
 8027e70:	683a      	ldr	r2, [r7, #0]
 8027e72:	4291      	cmp	r1, r2
 8027e74:	bfc8      	it	gt
 8027e76:	6039      	strgt	r1, [r7, #0]
 8027e78:	f8d9 2000 	ldr.w	r2, [r9]
 8027e7c:	4420      	add	r0, r4
 8027e7e:	4282      	cmp	r2, r0
 8027e80:	bfc8      	it	gt
 8027e82:	f8c9 0000 	strgt.w	r0, [r9]
 8027e86:	683a      	ldr	r2, [r7, #0]
 8027e88:	4290      	cmp	r0, r2
 8027e8a:	bfc8      	it	gt
 8027e8c:	6038      	strgt	r0, [r7, #0]
 8027e8e:	4658      	mov	r0, fp
 8027e90:	f7ff fe9c 	bl	8027bcc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027e94:	a903      	add	r1, sp, #12
 8027e96:	9003      	str	r0, [sp, #12]
 8027e98:	4650      	mov	r0, sl
 8027e9a:	f7ea f90f 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027e9e:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8027ea2:	1a10      	subs	r0, r2, r0
 8027ea4:	6832      	ldr	r2, [r6, #0]
 8027ea6:	1b01      	subs	r1, r0, r4
 8027ea8:	428a      	cmp	r2, r1
 8027eaa:	bfc8      	it	gt
 8027eac:	6031      	strgt	r1, [r6, #0]
 8027eae:	682a      	ldr	r2, [r5, #0]
 8027eb0:	4291      	cmp	r1, r2
 8027eb2:	bfc8      	it	gt
 8027eb4:	6029      	strgt	r1, [r5, #0]
 8027eb6:	6832      	ldr	r2, [r6, #0]
 8027eb8:	4420      	add	r0, r4
 8027eba:	4282      	cmp	r2, r0
 8027ebc:	bfc8      	it	gt
 8027ebe:	6030      	strgt	r0, [r6, #0]
 8027ec0:	682a      	ldr	r2, [r5, #0]
 8027ec2:	4290      	cmp	r0, r2
 8027ec4:	bfc8      	it	gt
 8027ec6:	6028      	strgt	r0, [r5, #0]
 8027ec8:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8027ecc:	e7bb      	b.n	8027e46 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 8027ece:	9b00      	ldr	r3, [sp, #0]
 8027ed0:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8027ed4:	455b      	cmp	r3, fp
 8027ed6:	f77f af62 	ble.w	8027d9e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8027eda:	4618      	mov	r0, r3
 8027edc:	f7ea fa26 	bl	801232c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027ee0:	a903      	add	r1, sp, #12
 8027ee2:	9003      	str	r0, [sp, #12]
 8027ee4:	4650      	mov	r0, sl
 8027ee6:	f7ea f8e9 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027eea:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027eee:	4410      	add	r0, r2
 8027ef0:	f8d9 2000 	ldr.w	r2, [r9]
 8027ef4:	1b01      	subs	r1, r0, r4
 8027ef6:	428a      	cmp	r2, r1
 8027ef8:	bfc8      	it	gt
 8027efa:	f8c9 1000 	strgt.w	r1, [r9]
 8027efe:	683a      	ldr	r2, [r7, #0]
 8027f00:	4291      	cmp	r1, r2
 8027f02:	bfc8      	it	gt
 8027f04:	6039      	strgt	r1, [r7, #0]
 8027f06:	f8d9 2000 	ldr.w	r2, [r9]
 8027f0a:	4420      	add	r0, r4
 8027f0c:	4282      	cmp	r2, r0
 8027f0e:	bfc8      	it	gt
 8027f10:	f8c9 0000 	strgt.w	r0, [r9]
 8027f14:	683b      	ldr	r3, [r7, #0]
 8027f16:	4298      	cmp	r0, r3
 8027f18:	bfc8      	it	gt
 8027f1a:	6038      	strgt	r0, [r7, #0]
 8027f1c:	9800      	ldr	r0, [sp, #0]
 8027f1e:	f7ff fe55 	bl	8027bcc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027f22:	a903      	add	r1, sp, #12
 8027f24:	9003      	str	r0, [sp, #12]
 8027f26:	4650      	mov	r0, sl
 8027f28:	f7ea f8c8 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027f2c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8027f30:	6832      	ldr	r2, [r6, #0]
 8027f32:	1a18      	subs	r0, r3, r0
 8027f34:	1b03      	subs	r3, r0, r4
 8027f36:	429a      	cmp	r2, r3
 8027f38:	bfc8      	it	gt
 8027f3a:	6033      	strgt	r3, [r6, #0]
 8027f3c:	682a      	ldr	r2, [r5, #0]
 8027f3e:	4293      	cmp	r3, r2
 8027f40:	bfc8      	it	gt
 8027f42:	602b      	strgt	r3, [r5, #0]
 8027f44:	6833      	ldr	r3, [r6, #0]
 8027f46:	4404      	add	r4, r0
 8027f48:	42a3      	cmp	r3, r4
 8027f4a:	bfc8      	it	gt
 8027f4c:	6034      	strgt	r4, [r6, #0]
 8027f4e:	682b      	ldr	r3, [r5, #0]
 8027f50:	429c      	cmp	r4, r3
 8027f52:	bfc8      	it	gt
 8027f54:	602c      	strgt	r4, [r5, #0]
 8027f56:	e722      	b.n	8027d9e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08027f58 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8027f58:	b530      	push	{r4, r5, lr}
 8027f5a:	4604      	mov	r4, r0
 8027f5c:	4608      	mov	r0, r1
 8027f5e:	4611      	mov	r1, r2
 8027f60:	461a      	mov	r2, r3
 8027f62:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8027f66:	b089      	sub	sp, #36	; 0x24
 8027f68:	015b      	lsls	r3, r3, #5
 8027f6a:	9304      	str	r3, [sp, #16]
 8027f6c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8027f70:	2500      	movs	r5, #0
 8027f72:	015b      	lsls	r3, r3, #5
 8027f74:	e9cd 3506 	strd	r3, r5, [sp, #24]
 8027f78:	ab07      	add	r3, sp, #28
 8027f7a:	9302      	str	r3, [sp, #8]
 8027f7c:	ab06      	add	r3, sp, #24
 8027f7e:	9301      	str	r3, [sp, #4]
 8027f80:	ab05      	add	r3, sp, #20
 8027f82:	9300      	str	r3, [sp, #0]
 8027f84:	ab04      	add	r3, sp, #16
 8027f86:	9505      	str	r5, [sp, #20]
 8027f88:	f7ff fe3e 	bl	8027c08 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8027f8c:	2520      	movs	r5, #32
 8027f8e:	9a04      	ldr	r2, [sp, #16]
 8027f90:	9805      	ldr	r0, [sp, #20]
 8027f92:	fb92 f2f5 	sdiv	r2, r2, r5
 8027f96:	fb90 f0f5 	sdiv	r0, r0, r5
 8027f9a:	b292      	uxth	r2, r2
 8027f9c:	3002      	adds	r0, #2
 8027f9e:	1a80      	subs	r0, r0, r2
 8027fa0:	9b06      	ldr	r3, [sp, #24]
 8027fa2:	9907      	ldr	r1, [sp, #28]
 8027fa4:	fb93 f3f5 	sdiv	r3, r3, r5
 8027fa8:	fb91 f1f5 	sdiv	r1, r1, r5
 8027fac:	b29b      	uxth	r3, r3
 8027fae:	3102      	adds	r1, #2
 8027fb0:	1ac9      	subs	r1, r1, r3
 8027fb2:	3a01      	subs	r2, #1
 8027fb4:	3b01      	subs	r3, #1
 8027fb6:	80a0      	strh	r0, [r4, #4]
 8027fb8:	4620      	mov	r0, r4
 8027fba:	8022      	strh	r2, [r4, #0]
 8027fbc:	8063      	strh	r3, [r4, #2]
 8027fbe:	80e1      	strh	r1, [r4, #6]
 8027fc0:	b009      	add	sp, #36	; 0x24
 8027fc2:	bd30      	pop	{r4, r5, pc}

08027fc4 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8027fc4:	b510      	push	{r4, lr}
 8027fc6:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 8027fca:	4604      	mov	r4, r0
 8027fcc:	f7ff ffc4 	bl	8027f58 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8027fd0:	4620      	mov	r0, r4
 8027fd2:	bd10      	pop	{r4, pc}

08027fd4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8027fd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8027fd6:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 8027fda:	4606      	mov	r6, r0
 8027fdc:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 8027fe0:	6813      	ldr	r3, [r2, #0]
 8027fe2:	42a5      	cmp	r5, r4
 8027fe4:	ea4f 1040 	mov.w	r0, r0, lsl #5
 8027fe8:	da2b      	bge.n	8028042 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 8027fea:	42a3      	cmp	r3, r4
 8027fec:	dd14      	ble.n	8028018 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 8027fee:	b168      	cbz	r0, 802800c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027ff0:	4267      	negs	r7, r4
 8027ff2:	fb97 f2f0 	sdiv	r2, r7, r0
 8027ff6:	fb00 7212 	mls	r2, r0, r2, r7
 8027ffa:	1a82      	subs	r2, r0, r2
 8027ffc:	fb92 f7f0 	sdiv	r7, r2, r0
 8028000:	fb00 2017 	mls	r0, r0, r7, r2
 8028004:	1a24      	subs	r4, r4, r0
 8028006:	42ac      	cmp	r4, r5
 8028008:	bfb8      	it	lt
 802800a:	462c      	movlt	r4, r5
 802800c:	4630      	mov	r0, r6
 802800e:	4622      	mov	r2, r4
 8028010:	f7ff ffa2 	bl	8027f58 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8028014:	4630      	mov	r0, r6
 8028016:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8028018:	42ab      	cmp	r3, r5
 802801a:	dd0e      	ble.n	802803a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802801c:	b168      	cbz	r0, 802803a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802801e:	425f      	negs	r7, r3
 8028020:	fb97 f2f0 	sdiv	r2, r7, r0
 8028024:	fb00 7212 	mls	r2, r0, r2, r7
 8028028:	1a82      	subs	r2, r0, r2
 802802a:	fb92 f7f0 	sdiv	r7, r2, r0
 802802e:	fb00 2017 	mls	r0, r0, r7, r2
 8028032:	1a1b      	subs	r3, r3, r0
 8028034:	42ab      	cmp	r3, r5
 8028036:	bfb8      	it	lt
 8028038:	462b      	movlt	r3, r5
 802803a:	4622      	mov	r2, r4
 802803c:	461c      	mov	r4, r3
 802803e:	4613      	mov	r3, r2
 8028040:	e7e4      	b.n	802800c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8028042:	42a3      	cmp	r3, r4
 8028044:	da10      	bge.n	8028068 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 8028046:	b148      	cbz	r0, 802805c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 8028048:	fb94 f2f0 	sdiv	r2, r4, r0
 802804c:	fb00 4212 	mls	r2, r0, r2, r4
 8028050:	1a82      	subs	r2, r0, r2
 8028052:	fb92 f7f0 	sdiv	r7, r2, r0
 8028056:	fb00 2017 	mls	r0, r0, r7, r2
 802805a:	4404      	add	r4, r0
 802805c:	42a5      	cmp	r5, r4
 802805e:	bfa8      	it	ge
 8028060:	4625      	movge	r5, r4
 8028062:	461c      	mov	r4, r3
 8028064:	462b      	mov	r3, r5
 8028066:	e7d1      	b.n	802800c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8028068:	42ab      	cmp	r3, r5
 802806a:	dacf      	bge.n	802800c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802806c:	2800      	cmp	r0, #0
 802806e:	d0cd      	beq.n	802800c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8028070:	fb93 f2f0 	sdiv	r2, r3, r0
 8028074:	fb00 3212 	mls	r2, r0, r2, r3
 8028078:	1a82      	subs	r2, r0, r2
 802807a:	fb92 f7f0 	sdiv	r7, r2, r0
 802807e:	fb00 2017 	mls	r0, r0, r7, r2
 8028082:	4403      	add	r3, r0
 8028084:	42ab      	cmp	r3, r5
 8028086:	bfa8      	it	ge
 8028088:	462b      	movge	r3, r5
 802808a:	e7bf      	b.n	802800c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

0802808c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 802808c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028090:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8028094:	42ae      	cmp	r6, r5
 8028096:	bfa2      	ittt	ge
 8028098:	4633      	movge	r3, r6
 802809a:	462e      	movge	r6, r5
 802809c:	461d      	movge	r5, r3
 802809e:	1bab      	subs	r3, r5, r6
 80280a0:	468b      	mov	fp, r1
 80280a2:	6c01      	ldr	r1, [r0, #64]	; 0x40
 80280a4:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 80280a8:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 80280ac:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80280b0:	f04f 0220 	mov.w	r2, #32
 80280b4:	b0ab      	sub	sp, #172	; 0xac
 80280b6:	4604      	mov	r4, r0
 80280b8:	bfa4      	itt	ge
 80280ba:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 80280be:	2600      	movge	r6, #0
 80280c0:	fb99 f9f2 	sdiv	r9, r9, r2
 80280c4:	fb9a faf2 	sdiv	sl, sl, r2
 80280c8:	6b43      	ldr	r3, [r0, #52]	; 0x34
 80280ca:	2900      	cmp	r1, #0
 80280cc:	f000 80f5 	beq.w	80282ba <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 80280d0:	f9bb 0000 	ldrsh.w	r0, [fp]
 80280d4:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 80280d8:	eba9 0700 	sub.w	r7, r9, r0
 80280dc:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 80280e0:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 80280e4:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 80280e8:	ebaa 0802 	sub.w	r8, sl, r2
 80280ec:	4407      	add	r7, r0
 80280ee:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 80280f2:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 80280f6:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 80280fa:	b23f      	sxth	r7, r7
 80280fc:	4490      	add	r8, r2
 80280fe:	eba9 0707 	sub.w	r7, r9, r7
 8028102:	fa0f f888 	sxth.w	r8, r8
 8028106:	ebaa 0808 	sub.w	r8, sl, r8
 802810a:	2f00      	cmp	r7, #0
 802810c:	bfb8      	it	lt
 802810e:	427f      	neglt	r7, r7
 8028110:	f1b8 0f00 	cmp.w	r8, #0
 8028114:	bfb8      	it	lt
 8028116:	f1c8 0800 	rsblt	r8, r8, #0
 802811a:	45bc      	cmp	ip, r7
 802811c:	bfcc      	ite	gt
 802811e:	f10c 0701 	addgt.w	r7, ip, #1
 8028122:	3701      	addle	r7, #1
 8028124:	4540      	cmp	r0, r8
 8028126:	bfc8      	it	gt
 8028128:	f100 0801 	addgt.w	r8, r0, #1
 802812c:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8028130:	f100 0001 	add.w	r0, r0, #1
 8028134:	ea4f 0060 	mov.w	r0, r0, asr #1
 8028138:	f04f 0202 	mov.w	r2, #2
 802813c:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8028140:	fb91 f1f2 	sdiv	r1, r1, r2
 8028144:	eba3 0301 	sub.w	r3, r3, r1
 8028148:	bfd8      	it	le
 802814a:	f108 0801 	addle.w	r8, r8, #1
 802814e:	9201      	str	r2, [sp, #4]
 8028150:	930d      	str	r3, [sp, #52]	; 0x34
 8028152:	f7ea f8cb 	bl	80122ec <_ZN8touchgfx7CWRUtil4sineEi>
 8028156:	a92a      	add	r1, sp, #168	; 0xa8
 8028158:	fb08 f808 	mul.w	r8, r8, r8
 802815c:	f841 0d70 	str.w	r0, [r1, #-112]!
 8028160:	a80d      	add	r0, sp, #52	; 0x34
 8028162:	f7e9 ffab 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028166:	fb07 8707 	mla	r7, r7, r7, r8
 802816a:	f04f 0c20 	mov.w	ip, #32
 802816e:	fb90 f0fc 	sdiv	r0, r0, ip
 8028172:	4340      	muls	r0, r0
 8028174:	4287      	cmp	r7, r0
 8028176:	9a01      	ldr	r2, [sp, #4]
 8028178:	da04      	bge.n	8028184 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 802817a:	2401      	movs	r4, #1
 802817c:	4620      	mov	r0, r4
 802817e:	b02b      	add	sp, #172	; 0xac
 8028180:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028184:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8028186:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8028188:	fb91 f3f2 	sdiv	r3, r1, r2
 802818c:	4403      	add	r3, r0
 802818e:	fb93 f3fc 	sdiv	r3, r3, ip
 8028192:	f9bb 1000 	ldrsh.w	r1, [fp]
 8028196:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 802819a:	440a      	add	r2, r1
 802819c:	b212      	sxth	r2, r2
 802819e:	454a      	cmp	r2, r9
 80281a0:	bfa8      	it	ge
 80281a2:	464a      	movge	r2, r9
 80281a4:	428a      	cmp	r2, r1
 80281a6:	bfac      	ite	ge
 80281a8:	eba9 0902 	subge.w	r9, r9, r2
 80281ac:	eba9 0901 	sublt.w	r9, r9, r1
 80281b0:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 80281b4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80281b8:	440a      	add	r2, r1
 80281ba:	b212      	sxth	r2, r2
 80281bc:	4552      	cmp	r2, sl
 80281be:	bfa8      	it	ge
 80281c0:	4652      	movge	r2, sl
 80281c2:	428a      	cmp	r2, r1
 80281c4:	bfac      	ite	ge
 80281c6:	ebaa 0a02 	subge.w	sl, sl, r2
 80281ca:	ebaa 0a01 	sublt.w	sl, sl, r1
 80281ce:	3301      	adds	r3, #1
 80281d0:	fb0a fa0a 	mul.w	sl, sl, sl
 80281d4:	fb09 a909 	mla	r9, r9, r9, sl
 80281d8:	435b      	muls	r3, r3
 80281da:	4599      	cmp	r9, r3
 80281dc:	dccd      	bgt.n	802817a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 80281de:	465a      	mov	r2, fp
 80281e0:	4621      	mov	r1, r4
 80281e2:	a80e      	add	r0, sp, #56	; 0x38
 80281e4:	f7ff faae 	bl	8027744 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 80281e8:	6b62      	ldr	r2, [r4, #52]	; 0x34
 80281ea:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80281ec:	9209      	str	r2, [sp, #36]	; 0x24
 80281ee:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 80281f2:	930a      	str	r3, [sp, #40]	; 0x28
 80281f4:	dd07      	ble.n	8028206 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 80281f6:	2102      	movs	r1, #2
 80281f8:	fb93 f3f1 	sdiv	r3, r3, r1
 80281fc:	4413      	add	r3, r2
 80281fe:	930a      	str	r3, [sp, #40]	; 0x28
 8028200:	fb93 f3f1 	sdiv	r3, r3, r1
 8028204:	9309      	str	r3, [sp, #36]	; 0x24
 8028206:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802820a:	4630      	mov	r0, r6
 802820c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8028210:	930b      	str	r3, [sp, #44]	; 0x2c
 8028212:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8028216:	f7ea f889 	bl	801232c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802821a:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 802821e:	f04f 0a02 	mov.w	sl, #2
 8028222:	f849 0d74 	str.w	r0, [r9, #-116]!
 8028226:	a80b      	add	r0, sp, #44	; 0x2c
 8028228:	4649      	mov	r1, r9
 802822a:	f7e9 ff47 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802822e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028230:	fb90 f0fa 	sdiv	r0, r0, sl
 8028234:	eb00 0b03 	add.w	fp, r0, r3
 8028238:	4630      	mov	r0, r6
 802823a:	f7ff fcc7 	bl	8027bcc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802823e:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 8028242:	017f      	lsls	r7, r7, #5
 8028244:	f848 0d78 	str.w	r0, [r8, #-120]!
 8028248:	a80b      	add	r0, sp, #44	; 0x2c
 802824a:	4641      	mov	r1, r8
 802824c:	f7e9 ff36 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028250:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028252:	fb90 f0fa 	sdiv	r0, r0, sl
 8028256:	4659      	mov	r1, fp
 8028258:	1a12      	subs	r2, r2, r0
 802825a:	a80e      	add	r0, sp, #56	; 0x38
 802825c:	f7ff fbf2 	bl	8027a44 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8028260:	f106 0a20 	add.w	sl, r6, #32
 8028264:	bb67      	cbnz	r7, 80282c0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 8028266:	46b3      	mov	fp, r6
 8028268:	45aa      	cmp	sl, r5
 802826a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802826c:	dc33      	bgt.n	80282d6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 802826e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8028270:	4650      	mov	r0, sl
 8028272:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8028276:	920b      	str	r2, [sp, #44]	; 0x2c
 8028278:	f7ea f858 	bl	801232c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802827c:	4641      	mov	r1, r8
 802827e:	900c      	str	r0, [sp, #48]	; 0x30
 8028280:	a80b      	add	r0, sp, #44	; 0x2c
 8028282:	f7e9 ff1b 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028286:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8028288:	2302      	movs	r3, #2
 802828a:	fb90 f0f3 	sdiv	r0, r0, r3
 802828e:	eb00 0b02 	add.w	fp, r0, r2
 8028292:	4650      	mov	r0, sl
 8028294:	f7ff fc9a 	bl	8027bcc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028298:	4649      	mov	r1, r9
 802829a:	900d      	str	r0, [sp, #52]	; 0x34
 802829c:	a80b      	add	r0, sp, #44	; 0x2c
 802829e:	f7e9 ff0d 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80282a2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80282a4:	2302      	movs	r3, #2
 80282a6:	4659      	mov	r1, fp
 80282a8:	fb90 f0f3 	sdiv	r0, r0, r3
 80282ac:	1a12      	subs	r2, r2, r0
 80282ae:	a80e      	add	r0, sp, #56	; 0x38
 80282b0:	46d3      	mov	fp, sl
 80282b2:	f7ff fc14 	bl	8027ade <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80282b6:	44ba      	add	sl, r7
 80282b8:	e7d6      	b.n	8028268 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 80282ba:	fb93 f3f2 	sdiv	r3, r3, r2
 80282be:	e768      	b.n	8028192 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 80282c0:	fb9a f2f7 	sdiv	r2, sl, r7
 80282c4:	fb07 a212 	mls	r2, r7, r2, sl
 80282c8:	1aba      	subs	r2, r7, r2
 80282ca:	fb92 f1f7 	sdiv	r1, r2, r7
 80282ce:	fb07 2211 	mls	r2, r7, r1, r2
 80282d2:	4492      	add	sl, r2
 80282d4:	e7c7      	b.n	8028266 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 80282d6:	45ab      	cmp	fp, r5
 80282d8:	da23      	bge.n	8028322 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 80282da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80282dc:	4628      	mov	r0, r5
 80282de:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 80282e2:	920b      	str	r2, [sp, #44]	; 0x2c
 80282e4:	f7ea f822 	bl	801232c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80282e8:	4641      	mov	r1, r8
 80282ea:	900c      	str	r0, [sp, #48]	; 0x30
 80282ec:	a80b      	add	r0, sp, #44	; 0x2c
 80282ee:	f7e9 fee5 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80282f2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80282f4:	f04f 0a02 	mov.w	sl, #2
 80282f8:	fb90 f0fa 	sdiv	r0, r0, sl
 80282fc:	4403      	add	r3, r0
 80282fe:	4628      	mov	r0, r5
 8028300:	9301      	str	r3, [sp, #4]
 8028302:	f7ff fc63 	bl	8027bcc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028306:	4649      	mov	r1, r9
 8028308:	900d      	str	r0, [sp, #52]	; 0x34
 802830a:	a80b      	add	r0, sp, #44	; 0x2c
 802830c:	f7e9 fed6 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028310:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028312:	9b01      	ldr	r3, [sp, #4]
 8028314:	fb90 f0fa 	sdiv	r0, r0, sl
 8028318:	4619      	mov	r1, r3
 802831a:	1a12      	subs	r2, r2, r0
 802831c:	a80e      	add	r0, sp, #56	; 0x38
 802831e:	f7ff fbde 	bl	8027ade <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028322:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8028324:	b99b      	cbnz	r3, 802834e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8028326:	1bad      	subs	r5, r5, r6
 8028328:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 802832c:	da04      	bge.n	8028338 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802832e:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 8028332:	a80e      	add	r0, sp, #56	; 0x38
 8028334:	f7ff fbd3 	bl	8027ade <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028338:	21ff      	movs	r1, #255	; 0xff
 802833a:	a80e      	add	r0, sp, #56	; 0x38
 802833c:	f7ff fabe 	bl	80278bc <_ZN8touchgfx6Canvas6renderEh>
 8028340:	4604      	mov	r4, r0
 8028342:	4b8a      	ldr	r3, [pc, #552]	; (802856c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8028344:	930e      	str	r3, [sp, #56]	; 0x38
 8028346:	a816      	add	r0, sp, #88	; 0x58
 8028348:	f7eb fcf0 	bl	8013d2c <_ZN8touchgfx7OutlineD1Ev>
 802834c:	e716      	b.n	802817c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 802834e:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 8028352:	429a      	cmp	r2, r3
 8028354:	f0c0 8107 	bcc.w	8028566 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8028358:	1bab      	subs	r3, r5, r6
 802835a:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 802835e:	9301      	str	r3, [sp, #4]
 8028360:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8028364:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8028368:	da43      	bge.n	80283f2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 802836a:	4628      	mov	r0, r5
 802836c:	f7e9 ffde 	bl	801232c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028370:	4649      	mov	r1, r9
 8028372:	900d      	str	r0, [sp, #52]	; 0x34
 8028374:	a809      	add	r0, sp, #36	; 0x24
 8028376:	f7e9 fea1 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802837a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802837c:	18c3      	adds	r3, r0, r3
 802837e:	4628      	mov	r0, r5
 8028380:	9303      	str	r3, [sp, #12]
 8028382:	f7ff fc23 	bl	8027bcc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028386:	4649      	mov	r1, r9
 8028388:	900d      	str	r0, [sp, #52]	; 0x34
 802838a:	a809      	add	r0, sp, #36	; 0x24
 802838c:	f7e9 fe96 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028390:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8028392:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8028396:	1a1b      	subs	r3, r3, r0
 8028398:	9302      	str	r3, [sp, #8]
 802839a:	9204      	str	r2, [sp, #16]
 802839c:	eb0a 0305 	add.w	r3, sl, r5
 80283a0:	9a04      	ldr	r2, [sp, #16]
 80283a2:	4293      	cmp	r3, r2
 80283a4:	da25      	bge.n	80283f2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 80283a6:	4618      	mov	r0, r3
 80283a8:	9306      	str	r3, [sp, #24]
 80283aa:	f7e9 ffbf 	bl	801232c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80283ae:	4649      	mov	r1, r9
 80283b0:	900d      	str	r0, [sp, #52]	; 0x34
 80283b2:	a80a      	add	r0, sp, #40	; 0x28
 80283b4:	f7e9 fe82 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80283b8:	9b03      	ldr	r3, [sp, #12]
 80283ba:	2202      	movs	r2, #2
 80283bc:	fb90 f0f2 	sdiv	r0, r0, r2
 80283c0:	18c3      	adds	r3, r0, r3
 80283c2:	9305      	str	r3, [sp, #20]
 80283c4:	9b06      	ldr	r3, [sp, #24]
 80283c6:	9207      	str	r2, [sp, #28]
 80283c8:	4618      	mov	r0, r3
 80283ca:	f7ff fbff 	bl	8027bcc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80283ce:	a92a      	add	r1, sp, #168	; 0xa8
 80283d0:	f841 0d78 	str.w	r0, [r1, #-120]!
 80283d4:	a80a      	add	r0, sp, #40	; 0x28
 80283d6:	f7e9 fe71 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80283da:	9b02      	ldr	r3, [sp, #8]
 80283dc:	9a07      	ldr	r2, [sp, #28]
 80283de:	9905      	ldr	r1, [sp, #20]
 80283e0:	fb90 f2f2 	sdiv	r2, r0, r2
 80283e4:	a80e      	add	r0, sp, #56	; 0x38
 80283e6:	1a9a      	subs	r2, r3, r2
 80283e8:	f7ff fb79 	bl	8027ade <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80283ec:	9b06      	ldr	r3, [sp, #24]
 80283ee:	4453      	add	r3, sl
 80283f0:	e7d6      	b.n	80283a0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 80283f2:	45ab      	cmp	fp, r5
 80283f4:	da25      	bge.n	8028442 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 80283f6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80283fa:	4628      	mov	r0, r5
 80283fc:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8028400:	930b      	str	r3, [sp, #44]	; 0x2c
 8028402:	f7e9 ff93 	bl	801232c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028406:	4641      	mov	r1, r8
 8028408:	900c      	str	r0, [sp, #48]	; 0x30
 802840a:	a80b      	add	r0, sp, #44	; 0x2c
 802840c:	f7e9 fe56 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028410:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028412:	2202      	movs	r2, #2
 8028414:	fb90 f0f2 	sdiv	r0, r0, r2
 8028418:	eb00 0903 	add.w	r9, r0, r3
 802841c:	4628      	mov	r0, r5
 802841e:	9202      	str	r2, [sp, #8]
 8028420:	f7ff fbd4 	bl	8027bcc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028424:	a92a      	add	r1, sp, #168	; 0xa8
 8028426:	f841 0d74 	str.w	r0, [r1, #-116]!
 802842a:	a80b      	add	r0, sp, #44	; 0x2c
 802842c:	f7e9 fe46 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028430:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8028432:	9a02      	ldr	r2, [sp, #8]
 8028434:	fb90 f2f2 	sdiv	r2, r0, r2
 8028438:	4649      	mov	r1, r9
 802843a:	1a9a      	subs	r2, r3, r2
 802843c:	a80e      	add	r0, sp, #56	; 0x38
 802843e:	f7ff fb4e 	bl	8027ade <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028442:	46d9      	mov	r9, fp
 8028444:	2502      	movs	r5, #2
 8028446:	45b1      	cmp	r9, r6
 8028448:	db25      	blt.n	8028496 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 802844a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802844e:	4648      	mov	r0, r9
 8028450:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8028454:	930b      	str	r3, [sp, #44]	; 0x2c
 8028456:	f7e9 ff69 	bl	801232c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802845a:	4641      	mov	r1, r8
 802845c:	900c      	str	r0, [sp, #48]	; 0x30
 802845e:	a80b      	add	r0, sp, #44	; 0x2c
 8028460:	f7e9 fe2c 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028464:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028466:	fb90 f0f5 	sdiv	r0, r0, r5
 802846a:	eb00 0b03 	add.w	fp, r0, r3
 802846e:	4648      	mov	r0, r9
 8028470:	f7ff fbac 	bl	8027bcc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028474:	a90d      	add	r1, sp, #52	; 0x34
 8028476:	900d      	str	r0, [sp, #52]	; 0x34
 8028478:	a80b      	add	r0, sp, #44	; 0x2c
 802847a:	f7e9 fe1f 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802847e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028480:	fb90 f0f5 	sdiv	r0, r0, r5
 8028484:	4659      	mov	r1, fp
 8028486:	1a12      	subs	r2, r2, r0
 8028488:	a80e      	add	r0, sp, #56	; 0x38
 802848a:	46cb      	mov	fp, r9
 802848c:	f7ff fb27 	bl	8027ade <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028490:	eba9 0907 	sub.w	r9, r9, r7
 8028494:	e7d7      	b.n	8028446 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8028496:	455e      	cmp	r6, fp
 8028498:	da22      	bge.n	80284e0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 802849a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802849e:	4630      	mov	r0, r6
 80284a0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80284a4:	930b      	str	r3, [sp, #44]	; 0x2c
 80284a6:	f7e9 ff41 	bl	801232c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80284aa:	4641      	mov	r1, r8
 80284ac:	900c      	str	r0, [sp, #48]	; 0x30
 80284ae:	a80b      	add	r0, sp, #44	; 0x2c
 80284b0:	f7e9 fe04 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80284b4:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80284b6:	2502      	movs	r5, #2
 80284b8:	fb90 f0f5 	sdiv	r0, r0, r5
 80284bc:	4407      	add	r7, r0
 80284be:	4630      	mov	r0, r6
 80284c0:	f7ff fb84 	bl	8027bcc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80284c4:	a92a      	add	r1, sp, #168	; 0xa8
 80284c6:	f841 0d74 	str.w	r0, [r1, #-116]!
 80284ca:	a80b      	add	r0, sp, #44	; 0x2c
 80284cc:	f7e9 fdf6 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80284d0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80284d2:	fb90 f0f5 	sdiv	r0, r0, r5
 80284d6:	4639      	mov	r1, r7
 80284d8:	1a12      	subs	r2, r2, r0
 80284da:	a80e      	add	r0, sp, #56	; 0x38
 80284dc:	f7ff faff 	bl	8027ade <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80284e0:	9b01      	ldr	r3, [sp, #4]
 80284e2:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80284e6:	f6bf af27 	bge.w	8028338 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 80284ea:	4630      	mov	r0, r6
 80284ec:	f7e9 ff1e 	bl	801232c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80284f0:	ad2a      	add	r5, sp, #168	; 0xa8
 80284f2:	f04f 0b02 	mov.w	fp, #2
 80284f6:	f845 0d74 	str.w	r0, [r5, #-116]!
 80284fa:	a809      	add	r0, sp, #36	; 0x24
 80284fc:	4629      	mov	r1, r5
 80284fe:	f7e9 fddd 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028502:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028504:	eb00 0903 	add.w	r9, r0, r3
 8028508:	4630      	mov	r0, r6
 802850a:	f7ff fb5f 	bl	8027bcc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802850e:	4629      	mov	r1, r5
 8028510:	900d      	str	r0, [sp, #52]	; 0x34
 8028512:	a809      	add	r0, sp, #36	; 0x24
 8028514:	f7e9 fdd2 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028518:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802851a:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 802851e:	eba3 0800 	sub.w	r8, r3, r0
 8028522:	4454      	add	r4, sl
 8028524:	42a6      	cmp	r6, r4
 8028526:	f77f af07 	ble.w	8028338 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802852a:	4620      	mov	r0, r4
 802852c:	f7e9 fefe 	bl	801232c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028530:	4629      	mov	r1, r5
 8028532:	900d      	str	r0, [sp, #52]	; 0x34
 8028534:	a80a      	add	r0, sp, #40	; 0x28
 8028536:	f7e9 fdc1 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802853a:	fb90 f0fb 	sdiv	r0, r0, fp
 802853e:	eb00 0709 	add.w	r7, r0, r9
 8028542:	4620      	mov	r0, r4
 8028544:	f7ff fb42 	bl	8027bcc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028548:	a90c      	add	r1, sp, #48	; 0x30
 802854a:	900c      	str	r0, [sp, #48]	; 0x30
 802854c:	a80a      	add	r0, sp, #40	; 0x28
 802854e:	f7e9 fdb5 	bl	80120bc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028552:	4639      	mov	r1, r7
 8028554:	fb90 f2fb 	sdiv	r2, r0, fp
 8028558:	a80e      	add	r0, sp, #56	; 0x38
 802855a:	eba8 0202 	sub.w	r2, r8, r2
 802855e:	f7ff fabe 	bl	8027ade <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028562:	4454      	add	r4, sl
 8028564:	e7de      	b.n	8028524 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8028566:	2400      	movs	r4, #0
 8028568:	e6eb      	b.n	8028342 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 802856a:	bf00      	nop
 802856c:	0802fa78 	.word	0x0802fa78

08028570 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8028570:	b570      	push	{r4, r5, r6, lr}
 8028572:	790b      	ldrb	r3, [r1, #4]
 8028574:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8028578:	2b00      	cmp	r3, #0
 802857a:	bf0c      	ite	eq
 802857c:	2301      	moveq	r3, #1
 802857e:	2300      	movne	r3, #0
 8028580:	4604      	mov	r4, r0
 8028582:	460e      	mov	r6, r1
 8028584:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8028588:	d109      	bne.n	802859e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 802858a:	b14d      	cbz	r5, 80285a0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 802858c:	7933      	ldrb	r3, [r6, #4]
 802858e:	2b01      	cmp	r3, #1
 8028590:	d10c      	bne.n	80285ac <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8028592:	6823      	ldr	r3, [r4, #0]
 8028594:	4620      	mov	r0, r4
 8028596:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8028598:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802859c:	4718      	bx	r3
 802859e:	b12d      	cbz	r5, 80285ac <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80285a0:	6823      	ldr	r3, [r4, #0]
 80285a2:	4620      	mov	r0, r4
 80285a4:	695b      	ldr	r3, [r3, #20]
 80285a6:	4798      	blx	r3
 80285a8:	2d00      	cmp	r5, #0
 80285aa:	d1ef      	bne.n	802858c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 80285ac:	bd70      	pop	{r4, r5, r6, pc}

080285ae <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 80285ae:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80285b2:	4770      	bx	lr

080285b4 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 80285b4:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 80285b8:	4770      	bx	lr

080285ba <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 80285ba:	6802      	ldr	r2, [r0, #0]
 80285bc:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 80285c0:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 80285c2:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80285c6:	4710      	bx	r2

080285c8 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 80285c8:	6802      	ldr	r2, [r0, #0]
 80285ca:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 80285ce:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 80285d0:	eef0 0a40 	vmov.f32	s1, s0
 80285d4:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80285d8:	4710      	bx	r2

080285da <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 80285da:	6802      	ldr	r2, [r0, #0]
 80285dc:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80285e0:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 80285e2:	eeb0 1a40 	vmov.f32	s2, s0
 80285e6:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80285ea:	4710      	bx	r2

080285ec <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 80285ec:	6802      	ldr	r2, [r0, #0]
 80285ee:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 80285f2:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 80285f4:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80285f8:	4710      	bx	r2

080285fa <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 80285fa:	6802      	ldr	r2, [r0, #0]
 80285fc:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028600:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8028602:	eef0 0a40 	vmov.f32	s1, s0
 8028606:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802860a:	4710      	bx	r2

0802860c <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 802860c:	6802      	ldr	r2, [r0, #0]
 802860e:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028612:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8028614:	eeb0 1a40 	vmov.f32	s2, s0
 8028618:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802861c:	4710      	bx	r2

0802861e <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 802861e:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028622:	4770      	bx	lr

08028624 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8028624:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8028628:	4770      	bx	lr

0802862a <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 802862a:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 802862e:	4770      	bx	lr

08028630 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8028630:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8028634:	4770      	bx	lr

08028636 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8028636:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 802863a:	4770      	bx	lr

0802863c <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 802863c:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8028640:	4770      	bx	lr

08028642 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8028642:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8028646:	4770      	bx	lr

08028648 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8028648:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 802864c:	4770      	bx	lr

0802864e <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 802864e:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8028652:	4770      	bx	lr

08028654 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8028654:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8028658:	4770      	bx	lr

0802865a <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 802865a:	ee07 2a90 	vmov	s15, r2
 802865e:	6803      	ldr	r3, [r0, #0]
 8028660:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8028664:	ee07 1a90 	vmov	s15, r1
 8028668:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 802866c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8028670:	4718      	bx	r3

08028672 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8028672:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8028676:	4770      	bx	lr

08028678 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8028678:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 802867c:	4770      	bx	lr

0802867e <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 802867e:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8028682:	4770      	bx	lr

08028684 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8028684:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8028688:	4770      	bx	lr

0802868a <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 802868a:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 802868e:	4770      	bx	lr

08028690 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8028690:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8028694:	4770      	bx	lr

08028696 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8028696:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 802869a:	4770      	bx	lr

0802869c <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 802869c:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 80286a0:	4770      	bx	lr

080286a2 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 80286a2:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 80286a6:	4770      	bx	lr

080286a8 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 80286a8:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 80286ac:	4770      	bx	lr

080286ae <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 80286ae:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 80286b2:	4770      	bx	lr

080286b4 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 80286b4:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 80286b8:	4770      	bx	lr

080286ba <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 80286ba:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 80286be:	4770      	bx	lr

080286c0 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 80286c0:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 80286c4:	4770      	bx	lr

080286c6 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 80286c6:	b510      	push	{r4, lr}
 80286c8:	ed2d 8b04 	vpush	{d8-d9}
 80286cc:	6803      	ldr	r3, [r0, #0]
 80286ce:	4604      	mov	r4, r0
 80286d0:	699b      	ldr	r3, [r3, #24]
 80286d2:	eeb0 8a40 	vmov.f32	s16, s0
 80286d6:	eef0 8a60 	vmov.f32	s17, s1
 80286da:	eeb0 9a41 	vmov.f32	s18, s2
 80286de:	4798      	blx	r3
 80286e0:	6823      	ldr	r3, [r4, #0]
 80286e2:	4620      	mov	r0, r4
 80286e4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80286e6:	eeb0 1a49 	vmov.f32	s2, s18
 80286ea:	eef0 0a68 	vmov.f32	s1, s17
 80286ee:	eeb0 0a48 	vmov.f32	s0, s16
 80286f2:	4798      	blx	r3
 80286f4:	ecbd 8b04 	vpop	{d8-d9}
 80286f8:	6823      	ldr	r3, [r4, #0]
 80286fa:	4620      	mov	r0, r4
 80286fc:	699b      	ldr	r3, [r3, #24]
 80286fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028702:	4718      	bx	r3

08028704 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8028704:	b510      	push	{r4, lr}
 8028706:	ed2d 8b02 	vpush	{d8}
 802870a:	6803      	ldr	r3, [r0, #0]
 802870c:	4604      	mov	r4, r0
 802870e:	699b      	ldr	r3, [r3, #24]
 8028710:	eeb0 8a40 	vmov.f32	s16, s0
 8028714:	4798      	blx	r3
 8028716:	6823      	ldr	r3, [r4, #0]
 8028718:	4620      	mov	r0, r4
 802871a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 802871e:	eeb0 0a48 	vmov.f32	s0, s16
 8028722:	4798      	blx	r3
 8028724:	ecbd 8b02 	vpop	{d8}
 8028728:	6823      	ldr	r3, [r4, #0]
 802872a:	4620      	mov	r0, r4
 802872c:	699b      	ldr	r3, [r3, #24]
 802872e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028732:	4718      	bx	r3

08028734 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8028734:	2200      	movs	r2, #0
 8028736:	8002      	strh	r2, [r0, #0]
 8028738:	8042      	strh	r2, [r0, #2]
 802873a:	8082      	strh	r2, [r0, #4]
 802873c:	80c2      	strh	r2, [r0, #6]
 802873e:	4770      	bx	lr

08028740 <_ZN8touchgfx13TextureMapperD1Ev>:
 8028740:	4770      	bx	lr

08028742 <_ZN8touchgfx13TextureMapperD0Ev>:
 8028742:	b510      	push	{r4, lr}
 8028744:	2190      	movs	r1, #144	; 0x90
 8028746:	4604      	mov	r4, r0
 8028748:	f001 ff3f 	bl	802a5ca <_ZdlPvj>
 802874c:	4620      	mov	r0, r4
 802874e:	bd10      	pop	{r4, pc}

08028750 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8028750:	b538      	push	{r3, r4, r5, lr}
 8028752:	2500      	movs	r5, #0
 8028754:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8028758:	2301      	movs	r3, #1
 802875a:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 802875e:	4b1f      	ldr	r3, [pc, #124]	; (80287dc <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8028760:	8085      	strh	r5, [r0, #4]
 8028762:	80c5      	strh	r5, [r0, #6]
 8028764:	8105      	strh	r5, [r0, #8]
 8028766:	8145      	strh	r5, [r0, #10]
 8028768:	8185      	strh	r5, [r0, #12]
 802876a:	81c5      	strh	r5, [r0, #14]
 802876c:	8205      	strh	r5, [r0, #16]
 802876e:	8245      	strh	r5, [r0, #18]
 8028770:	61c5      	str	r5, [r0, #28]
 8028772:	8405      	strh	r5, [r0, #32]
 8028774:	8445      	strh	r5, [r0, #34]	; 0x22
 8028776:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 802877a:	6003      	str	r3, [r0, #0]
 802877c:	880b      	ldrh	r3, [r1, #0]
 802877e:	84c3      	strh	r3, [r0, #38]	; 0x26
 8028780:	23ff      	movs	r3, #255	; 0xff
 8028782:	4604      	mov	r4, r0
 8028784:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8028788:	f7eb f96b 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 802878c:	4b14      	ldr	r3, [pc, #80]	; (80287e0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 802878e:	6023      	str	r3, [r4, #0]
 8028790:	2300      	movs	r3, #0
 8028792:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8028796:	4913      	ldr	r1, [pc, #76]	; (80287e4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8028798:	62e3      	str	r3, [r4, #44]	; 0x2c
 802879a:	6323      	str	r3, [r4, #48]	; 0x30
 802879c:	6363      	str	r3, [r4, #52]	; 0x34
 802879e:	63a3      	str	r3, [r4, #56]	; 0x38
 80287a0:	63e3      	str	r3, [r4, #60]	; 0x3c
 80287a2:	6463      	str	r3, [r4, #68]	; 0x44
 80287a4:	64a3      	str	r3, [r4, #72]	; 0x48
 80287a6:	6523      	str	r3, [r4, #80]	; 0x50
 80287a8:	6563      	str	r3, [r4, #84]	; 0x54
 80287aa:	65e3      	str	r3, [r4, #92]	; 0x5c
 80287ac:	6623      	str	r3, [r4, #96]	; 0x60
 80287ae:	66a3      	str	r3, [r4, #104]	; 0x68
 80287b0:	66e3      	str	r3, [r4, #108]	; 0x6c
 80287b2:	6763      	str	r3, [r4, #116]	; 0x74
 80287b4:	67a3      	str	r3, [r4, #120]	; 0x78
 80287b6:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 80287ba:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 80287be:	230c      	movs	r3, #12
 80287c0:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 80287c4:	6422      	str	r2, [r4, #64]	; 0x40
 80287c6:	64e1      	str	r1, [r4, #76]	; 0x4c
 80287c8:	65a1      	str	r1, [r4, #88]	; 0x58
 80287ca:	6662      	str	r2, [r4, #100]	; 0x64
 80287cc:	6722      	str	r2, [r4, #112]	; 0x70
 80287ce:	67e2      	str	r2, [r4, #124]	; 0x7c
 80287d0:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 80287d4:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 80287d8:	4620      	mov	r0, r4
 80287da:	bd38      	pop	{r3, r4, r5, pc}
 80287dc:	0802f520 	.word	0x0802f520
 80287e0:	0802fb04 	.word	0x0802fb04
 80287e4:	447a0000 	.word	0x447a0000

080287e8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 80287e8:	b570      	push	{r4, r5, r6, lr}
 80287ea:	ed2d 8b04 	vpush	{d8-d9}
 80287ee:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 80287f2:	add0      	add	r5, sp, #832	; 0x340
 80287f4:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 80287f6:	f825 3d40 	strh.w	r3, [r5, #-64]!
 80287fa:	4604      	mov	r4, r0
 80287fc:	4628      	mov	r0, r5
 80287fe:	f7f1 fa7f 	bl	8019d00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028802:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8028804:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8028808:	4606      	mov	r6, r0
 802880a:	4628      	mov	r0, r5
 802880c:	f7f1 faac 	bl	8019d68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8028810:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8028814:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8028818:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802881a:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 802881e:	9312      	str	r3, [sp, #72]	; 0x48
 8028820:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028824:	1c72      	adds	r2, r6, #1
 8028826:	3001      	adds	r0, #1
 8028828:	ee76 5ac7 	vsub.f32	s11, s13, s14
 802882c:	ee07 2a90 	vmov	s15, r2
 8028830:	ee06 0a90 	vmov	s13, r0
 8028834:	ee36 6a47 	vsub.f32	s12, s12, s14
 8028838:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802883c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8028840:	ee77 7a86 	vadd.f32	s15, s15, s12
 8028844:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8028848:	9316      	str	r3, [sp, #88]	; 0x58
 802884a:	931a      	str	r3, [sp, #104]	; 0x68
 802884c:	931e      	str	r3, [sp, #120]	; 0x78
 802884e:	2300      	movs	r3, #0
 8028850:	9320      	str	r3, [sp, #128]	; 0x80
 8028852:	9321      	str	r3, [sp, #132]	; 0x84
 8028854:	9322      	str	r3, [sp, #136]	; 0x88
 8028856:	9324      	str	r3, [sp, #144]	; 0x90
 8028858:	9325      	str	r3, [sp, #148]	; 0x94
 802885a:	9326      	str	r3, [sp, #152]	; 0x98
 802885c:	9328      	str	r3, [sp, #160]	; 0xa0
 802885e:	9329      	str	r3, [sp, #164]	; 0xa4
 8028860:	932a      	str	r3, [sp, #168]	; 0xa8
 8028862:	932c      	str	r3, [sp, #176]	; 0xb0
 8028864:	932d      	str	r3, [sp, #180]	; 0xb4
 8028866:	932e      	str	r3, [sp, #184]	; 0xb8
 8028868:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 802886c:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8028870:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8028874:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8028878:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 802887c:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8028880:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8028884:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 8028888:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 802888c:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8028890:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8028894:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 8028898:	a830      	add	r0, sp, #192	; 0xc0
 802889a:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 802889e:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 80288a2:	f000 fc43 	bl	802912c <_ZN8touchgfx9Matrix4x4C1Ev>
 80288a6:	eeb1 0a49 	vneg.f32	s0, s18
 80288aa:	a830      	add	r0, sp, #192	; 0xc0
 80288ac:	f000 fd12 	bl	80292d4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80288b0:	eeb1 0a68 	vneg.f32	s0, s17
 80288b4:	f000 fd1c 	bl	80292f0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80288b8:	eeb1 0a48 	vneg.f32	s0, s16
 80288bc:	f000 fd27 	bl	802930e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 80288c0:	a840      	add	r0, sp, #256	; 0x100
 80288c2:	f000 fc33 	bl	802912c <_ZN8touchgfx9Matrix4x4C1Ev>
 80288c6:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 80288ca:	a840      	add	r0, sp, #256	; 0x100
 80288cc:	f000 fc86 	bl	80291dc <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 80288d0:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 80288d4:	f000 fcac 	bl	8029230 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 80288d8:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 80288dc:	f000 fcd1 	bl	8029282 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 80288e0:	a850      	add	r0, sp, #320	; 0x140
 80288e2:	f000 fc23 	bl	802912c <_ZN8touchgfx9Matrix4x4C1Ev>
 80288e6:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80288ea:	a850      	add	r0, sp, #320	; 0x140
 80288ec:	f000 fd1e 	bl	802932c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 80288f0:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80288f4:	f000 fd26 	bl	8029344 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 80288f8:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80288fc:	f000 fd2f 	bl	802935e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8028900:	a860      	add	r0, sp, #384	; 0x180
 8028902:	f000 fc13 	bl	802912c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028906:	eeb0 0a49 	vmov.f32	s0, s18
 802890a:	a860      	add	r0, sp, #384	; 0x180
 802890c:	f000 fce2 	bl	80292d4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028910:	eeb0 0a68 	vmov.f32	s0, s17
 8028914:	f000 fcec 	bl	80292f0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028918:	eeb0 0a48 	vmov.f32	s0, s16
 802891c:	f000 fcf7 	bl	802930e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8028920:	aa50      	add	r2, sp, #320	; 0x140
 8028922:	a960      	add	r1, sp, #384	; 0x180
 8028924:	a8b0      	add	r0, sp, #704	; 0x2c0
 8028926:	f000 fc1b 	bl	8029160 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802892a:	4628      	mov	r0, r5
 802892c:	aa40      	add	r2, sp, #256	; 0x100
 802892e:	a9b0      	add	r1, sp, #704	; 0x2c0
 8028930:	f000 fc16 	bl	8029160 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028934:	4629      	mov	r1, r5
 8028936:	aa30      	add	r2, sp, #192	; 0xc0
 8028938:	a870      	add	r0, sp, #448	; 0x1c0
 802893a:	f000 fc11 	bl	8029160 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802893e:	a880      	add	r0, sp, #512	; 0x200
 8028940:	f000 fbf4 	bl	802912c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028944:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8028948:	a880      	add	r0, sp, #512	; 0x200
 802894a:	eeb1 0a40 	vneg.f32	s0, s0
 802894e:	f000 fcc1 	bl	80292d4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028952:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8028956:	a880      	add	r0, sp, #512	; 0x200
 8028958:	eeb1 0a40 	vneg.f32	s0, s0
 802895c:	f000 fcc8 	bl	80292f0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028960:	a890      	add	r0, sp, #576	; 0x240
 8028962:	f000 fbe3 	bl	802912c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028966:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 802896a:	a890      	add	r0, sp, #576	; 0x240
 802896c:	f000 fc26 	bl	80291bc <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8028970:	a8a0      	add	r0, sp, #640	; 0x280
 8028972:	f000 fbdb 	bl	802912c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028976:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802897a:	a8a0      	add	r0, sp, #640	; 0x280
 802897c:	f000 fcaa 	bl	80292d4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028980:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8028984:	f000 fcb4 	bl	80292f0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028988:	aa90      	add	r2, sp, #576	; 0x240
 802898a:	a9a0      	add	r1, sp, #640	; 0x280
 802898c:	a8b0      	add	r0, sp, #704	; 0x2c0
 802898e:	f000 fbe7 	bl	8029160 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028992:	4628      	mov	r0, r5
 8028994:	aa80      	add	r2, sp, #512	; 0x200
 8028996:	a9b0      	add	r1, sp, #704	; 0x2c0
 8028998:	f000 fbe2 	bl	8029160 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802899c:	4629      	mov	r1, r5
 802899e:	aa70      	add	r2, sp, #448	; 0x1c0
 80289a0:	4668      	mov	r0, sp
 80289a2:	466d      	mov	r5, sp
 80289a4:	f000 fbdc 	bl	8029160 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80289a8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80289aa:	ae70      	add	r6, sp, #448	; 0x1c0
 80289ac:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80289ae:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80289b0:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80289b2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80289b4:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80289b6:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 80289ba:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 80289be:	2500      	movs	r5, #0
 80289c0:	0129      	lsls	r1, r5, #4
 80289c2:	ab20      	add	r3, sp, #128	; 0x80
 80289c4:	185e      	adds	r6, r3, r1
 80289c6:	ab10      	add	r3, sp, #64	; 0x40
 80289c8:	4419      	add	r1, r3
 80289ca:	a870      	add	r0, sp, #448	; 0x1c0
 80289cc:	f000 fb7e 	bl	80290cc <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 80289d0:	3501      	adds	r5, #1
 80289d2:	2d04      	cmp	r5, #4
 80289d4:	ed86 0a00 	vstr	s0, [r6]
 80289d8:	edc6 0a01 	vstr	s1, [r6, #4]
 80289dc:	ed86 1a02 	vstr	s2, [r6, #8]
 80289e0:	edc6 1a03 	vstr	s3, [r6, #12]
 80289e4:	d1ec      	bne.n	80289c0 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 80289e6:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 80289ea:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 80289ee:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 80289f2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80289f6:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 80289fa:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80289fe:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8028a02:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 8028a06:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028a0a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028a0e:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 8028a12:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8028a16:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 8028a1a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028a1e:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8028a22:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028a26:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 8028a2a:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 8028a2e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028a32:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028a36:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 8028a3a:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 8028a3e:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 8028a42:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028a46:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 8028a4a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028a4e:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 8028a52:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 8028a56:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028a5a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028a5e:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 8028a62:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 8028a66:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 8028a6a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028a6e:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 8028a72:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028a76:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 8028a7a:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 8028a7e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8028a82:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8028a86:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 8028a8a:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 8028a8e:	ecbd 8b04 	vpop	{d8-d9}
 8028a92:	bd70      	pop	{r4, r5, r6, pc}

08028a94 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8028a94:	b510      	push	{r4, lr}
 8028a96:	4604      	mov	r4, r0
 8028a98:	f7ea ffe3 	bl	8013a62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8028a9c:	4620      	mov	r0, r4
 8028a9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028aa2:	f7ff bea1 	b.w	80287e8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028aa6 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 8028aa6:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 8028aaa:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 8028aae:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8028ab2:	f7ff be99 	b.w	80287e8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028ab6 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 8028ab6:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 8028aba:	f7ff be95 	b.w	80287e8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028abe <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 8028abe:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8028ac2:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 8028ac6:	f7ff be8f 	b.w	80287e8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028aca <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 8028aca:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028ace:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028ad2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ad6:	bfd8      	it	le
 8028ad8:	eeb0 0a67 	vmovle.f32	s0, s15
 8028adc:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8028ae0:	f7ff be82 	b.w	80287e8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028ae4 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8028ae4:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 8028ae8:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8028aec:	f7ff be7c 	b.w	80287e8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028af0 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8028af0:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8028af4:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8028af8:	f7ff be76 	b.w	80287e8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028afc <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 8028afc:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8028b00:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8028b04:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 8028b08:	f7ff be6e 	b.w	80287e8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028b0c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 8028b0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028b10:	ed2d 8b04 	vpush	{d8-d9}
 8028b14:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 8028b18:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 8028b1c:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8028b20:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8028b24:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028b28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028b2c:	bf54      	ite	pl
 8028b2e:	eeb0 0a69 	vmovpl.f32	s0, s19
 8028b32:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028b36:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8028b3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028b3e:	bfd8      	it	le
 8028b40:	eeb0 0a49 	vmovle.f32	s0, s18
 8028b44:	eef4 8ac0 	vcmpe.f32	s17, s0
 8028b48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028b4c:	bfd8      	it	le
 8028b4e:	eeb0 0a68 	vmovle.f32	s0, s17
 8028b52:	460c      	mov	r4, r1
 8028b54:	4607      	mov	r7, r0
 8028b56:	f001 fe4f 	bl	802a7f8 <floorf>
 8028b5a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028b5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028b62:	bf58      	it	pl
 8028b64:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8028b68:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028b6c:	bf56      	itet	pl
 8028b6e:	ee10 3a10 	vmovpl	r3, s0
 8028b72:	2600      	movmi	r6, #0
 8028b74:	b21e      	sxthpl	r6, r3
 8028b76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028b7a:	bfd8      	it	le
 8028b7c:	eeb0 8a69 	vmovle.f32	s16, s19
 8028b80:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8028b84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028b88:	bf58      	it	pl
 8028b8a:	eeb0 8a49 	vmovpl.f32	s16, s18
 8028b8e:	eef4 8ac8 	vcmpe.f32	s17, s16
 8028b92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028b96:	bf54      	ite	pl
 8028b98:	eeb0 0a68 	vmovpl.f32	s0, s17
 8028b9c:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028ba0:	f001 fde8 	bl	802a774 <ceilf>
 8028ba4:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8028ba8:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8028bac:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8028bb0:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8028bb4:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 8028bb8:	ee07 8a90 	vmov	s15, r8
 8028bbc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028bc0:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028bc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028bc8:	bfd8      	it	le
 8028bca:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8028bce:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028bd2:	bfdc      	itt	le
 8028bd4:	ee10 3a10 	vmovle	r3, s0
 8028bd8:	fa0f f883 	sxthle.w	r8, r3
 8028bdc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028be0:	bf54      	ite	pl
 8028be2:	eeb0 0a69 	vmovpl.f32	s0, s19
 8028be6:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028bea:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8028bee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028bf2:	bfd8      	it	le
 8028bf4:	eeb0 0a49 	vmovle.f32	s0, s18
 8028bf8:	eef4 8ac0 	vcmpe.f32	s17, s0
 8028bfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028c00:	bfd8      	it	le
 8028c02:	eeb0 0a68 	vmovle.f32	s0, s17
 8028c06:	f001 fdf7 	bl	802a7f8 <floorf>
 8028c0a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028c0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028c12:	bf58      	it	pl
 8028c14:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8028c18:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028c1c:	bf56      	itet	pl
 8028c1e:	ee10 3a10 	vmovpl	r3, s0
 8028c22:	2500      	movmi	r5, #0
 8028c24:	b21d      	sxthpl	r5, r3
 8028c26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028c2a:	bfd8      	it	le
 8028c2c:	eeb0 8a69 	vmovle.f32	s16, s19
 8028c30:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8028c34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028c38:	bf58      	it	pl
 8028c3a:	eeb0 8a49 	vmovpl.f32	s16, s18
 8028c3e:	eef4 8ac8 	vcmpe.f32	s17, s16
 8028c42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028c46:	bf54      	ite	pl
 8028c48:	eeb0 0a68 	vmovpl.f32	s0, s17
 8028c4c:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028c50:	f001 fd90 	bl	802a774 <ceilf>
 8028c54:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8028c58:	803e      	strh	r6, [r7, #0]
 8028c5a:	ee07 3a90 	vmov	s15, r3
 8028c5e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028c62:	807d      	strh	r5, [r7, #2]
 8028c64:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028c68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028c6c:	bfd8      	it	le
 8028c6e:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8028c72:	eba8 0606 	sub.w	r6, r8, r6
 8028c76:	bfdc      	itt	le
 8028c78:	ee10 3a10 	vmovle	r3, s0
 8028c7c:	b21b      	sxthle	r3, r3
 8028c7e:	1b5d      	subs	r5, r3, r5
 8028c80:	80be      	strh	r6, [r7, #4]
 8028c82:	80fd      	strh	r5, [r7, #6]
 8028c84:	ecbd 8b04 	vpop	{d8-d9}
 8028c88:	4638      	mov	r0, r7
 8028c8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08028c8e <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 8028c8e:	b513      	push	{r0, r1, r4, lr}
 8028c90:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8028c94:	4604      	mov	r4, r0
 8028c96:	b143      	cbz	r3, 8028caa <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 8028c98:	4601      	mov	r1, r0
 8028c9a:	4668      	mov	r0, sp
 8028c9c:	f7ff ff36 	bl	8028b0c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 8028ca0:	6823      	ldr	r3, [r4, #0]
 8028ca2:	4669      	mov	r1, sp
 8028ca4:	691b      	ldr	r3, [r3, #16]
 8028ca6:	4620      	mov	r0, r4
 8028ca8:	4798      	blx	r3
 8028caa:	b002      	add	sp, #8
 8028cac:	bd10      	pop	{r4, pc}

08028cae <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 8028cae:	4603      	mov	r3, r0
 8028cb0:	3026      	adds	r0, #38	; 0x26
 8028cb2:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8028cb6:	b90b      	cbnz	r3, 8028cbc <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 8028cb8:	f7ee bdfa 	b.w	80178b0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8028cbc:	f7ee be08 	b.w	80178d0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08028cc0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8028cc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028cc4:	ed2d 8b04 	vpush	{d8-d9}
 8028cc8:	4604      	mov	r4, r0
 8028cca:	469b      	mov	fp, r3
 8028ccc:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8028cd0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8028cd4:	f9b1 6000 	ldrsh.w	r6, [r1]
 8028cd8:	8888      	ldrh	r0, [r1, #4]
 8028cda:	b0b3      	sub	sp, #204	; 0xcc
 8028cdc:	4430      	add	r0, r6
 8028cde:	b280      	uxth	r0, r0
 8028ce0:	9206      	str	r2, [sp, #24]
 8028ce2:	fa0f fe80 	sxth.w	lr, r0
 8028ce6:	2200      	movs	r2, #0
 8028ce8:	4596      	cmp	lr, r2
 8028cea:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 8028cee:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 8028cf2:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 8028cf6:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 8028cf8:	9211      	str	r2, [sp, #68]	; 0x44
 8028cfa:	f340 8129 	ble.w	8028f50 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8028cfe:	45b4      	cmp	ip, r6
 8028d00:	f340 8126 	ble.w	8028f50 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8028d04:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8028d08:	88ca      	ldrh	r2, [r1, #6]
 8028d0a:	442a      	add	r2, r5
 8028d0c:	b292      	uxth	r2, r2
 8028d0e:	b211      	sxth	r1, r2
 8028d10:	2900      	cmp	r1, #0
 8028d12:	f340 811d 	ble.w	8028f50 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8028d16:	42ab      	cmp	r3, r5
 8028d18:	f340 811a 	ble.w	8028f50 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8028d1c:	45f4      	cmp	ip, lr
 8028d1e:	bfb8      	it	lt
 8028d20:	fa1f f08c 	uxthlt.w	r0, ip
 8028d24:	428b      	cmp	r3, r1
 8028d26:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8028d2a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8028d2e:	bfb8      	it	lt
 8028d30:	b29a      	uxthlt	r2, r3
 8028d32:	1b80      	subs	r0, r0, r6
 8028d34:	1b52      	subs	r2, r2, r5
 8028d36:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 8028d3a:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 8028d3e:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8028d42:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 8028d46:	ab11      	add	r3, sp, #68	; 0x44
 8028d48:	e893 0003 	ldmia.w	r3, {r0, r1}
 8028d4c:	6822      	ldr	r2, [r4, #0]
 8028d4e:	9307      	str	r3, [sp, #28]
 8028d50:	ad13      	add	r5, sp, #76	; 0x4c
 8028d52:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8028d54:	e885 0003 	stmia.w	r5, {r0, r1}
 8028d58:	4629      	mov	r1, r5
 8028d5a:	4620      	mov	r0, r4
 8028d5c:	4790      	blx	r2
 8028d5e:	4621      	mov	r1, r4
 8028d60:	a815      	add	r0, sp, #84	; 0x54
 8028d62:	f7ee fd01 	bl	8017768 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8028d66:	a815      	add	r0, sp, #84	; 0x54
 8028d68:	f7ed f9c6 	bl	80160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028d6c:	9b07      	ldr	r3, [sp, #28]
 8028d6e:	1d26      	adds	r6, r4, #4
 8028d70:	4618      	mov	r0, r3
 8028d72:	4631      	mov	r1, r6
 8028d74:	f7ed fa04 	bl	8016180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028d78:	4628      	mov	r0, r5
 8028d7a:	f104 0526 	add.w	r5, r4, #38	; 0x26
 8028d7e:	f7ed f9bb 	bl	80160f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028d82:	4628      	mov	r0, r5
 8028d84:	f7f1 f8a8 	bl	8019ed8 <_ZNK8touchgfx6Bitmap7getDataEv>
 8028d88:	9007      	str	r0, [sp, #28]
 8028d8a:	2800      	cmp	r0, #0
 8028d8c:	f000 80db 	beq.w	8028f46 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 8028d90:	f8db 2000 	ldr.w	r2, [fp]
 8028d94:	9209      	str	r2, [sp, #36]	; 0x24
 8028d96:	f8db 2004 	ldr.w	r2, [fp, #4]
 8028d9a:	920a      	str	r2, [sp, #40]	; 0x28
 8028d9c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8028da0:	920b      	str	r2, [sp, #44]	; 0x2c
 8028da2:	f8db 200c 	ldr.w	r2, [fp, #12]
 8028da6:	920c      	str	r2, [sp, #48]	; 0x30
 8028da8:	f8da 2000 	ldr.w	r2, [sl]
 8028dac:	920d      	str	r2, [sp, #52]	; 0x34
 8028dae:	f8da 2004 	ldr.w	r2, [sl, #4]
 8028db2:	920e      	str	r2, [sp, #56]	; 0x38
 8028db4:	f8da 2008 	ldr.w	r2, [sl, #8]
 8028db8:	920f      	str	r2, [sp, #60]	; 0x3c
 8028dba:	f8da 200c 	ldr.w	r2, [sl, #12]
 8028dbe:	9210      	str	r2, [sp, #64]	; 0x40
 8028dc0:	a90d      	add	r1, sp, #52	; 0x34
 8028dc2:	4632      	mov	r2, r6
 8028dc4:	a809      	add	r0, sp, #36	; 0x24
 8028dc6:	f7ed f9bf 	bl	8016148 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8028dca:	4632      	mov	r2, r6
 8028dcc:	a90e      	add	r1, sp, #56	; 0x38
 8028dce:	a80a      	add	r0, sp, #40	; 0x28
 8028dd0:	f7ed f9ba 	bl	8016148 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8028dd4:	4632      	mov	r2, r6
 8028dd6:	a90f      	add	r1, sp, #60	; 0x3c
 8028dd8:	a80b      	add	r0, sp, #44	; 0x2c
 8028dda:	f7ed f9b5 	bl	8016148 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8028dde:	4632      	mov	r2, r6
 8028de0:	a910      	add	r1, sp, #64	; 0x40
 8028de2:	a80c      	add	r0, sp, #48	; 0x30
 8028de4:	f7ed f9b0 	bl	8016148 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8028de8:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8028dec:	edd7 4a00 	vldr	s9, [r7]
 8028df0:	edd7 5a01 	vldr	s11, [r7, #4]
 8028df4:	ed98 4a00 	vldr	s8, [r8]
 8028df8:	ed98 5a01 	vldr	s10, [r8, #4]
 8028dfc:	ed99 9a00 	vldr	s18, [r9]
 8028e00:	ed99 8a01 	vldr	s16, [r9, #4]
 8028e04:	edd9 8a02 	vldr	s17, [r9, #8]
 8028e08:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8028e0c:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8028e10:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8028e14:	eef0 6a67 	vmov.f32	s13, s15
 8028e18:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8028e1c:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 8028e20:	eeb0 7a67 	vmov.f32	s14, s15
 8028e24:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8028e28:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 8028e2c:	eeb0 6a67 	vmov.f32	s12, s15
 8028e30:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028e34:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8028e38:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 8028e3c:	ee16 6a10 	vmov	r6, s12
 8028e40:	eeb0 6a67 	vmov.f32	s12, s15
 8028e44:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028e48:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8028e4c:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8028e50:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8028e54:	68ff      	ldr	r7, [r7, #12]
 8028e56:	9624      	str	r6, [sp, #144]	; 0x90
 8028e58:	ee16 0a10 	vmov	r0, s12
 8028e5c:	eeb0 6a67 	vmov.f32	s12, s15
 8028e60:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028e64:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8028e68:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 8028e6c:	ee16 1a10 	vmov	r1, s12
 8028e70:	eeb0 6a67 	vmov.f32	s12, s15
 8028e74:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028e78:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8028e7c:	ee16 2a10 	vmov	r2, s12
 8028e80:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8028e84:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 8028e88:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8028e8c:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8028e90:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028e94:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 8028e98:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8028e9c:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8028ea0:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8028ea4:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 8028ea8:	922d      	str	r2, [sp, #180]	; 0xb4
 8028eaa:	4a2b      	ldr	r2, [pc, #172]	; (8028f58 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 8028eac:	9b06      	ldr	r3, [sp, #24]
 8028eae:	8812      	ldrh	r2, [r2, #0]
 8028eb0:	9317      	str	r3, [sp, #92]	; 0x5c
 8028eb2:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8028eb6:	9b07      	ldr	r3, [sp, #28]
 8028eb8:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8028ebc:	4628      	mov	r0, r5
 8028ebe:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8028ec2:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 8028ec6:	9218      	str	r2, [sp, #96]	; 0x60
 8028ec8:	9319      	str	r3, [sp, #100]	; 0x64
 8028eca:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 8028ece:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8028ed2:	9731      	str	r7, [sp, #196]	; 0xc4
 8028ed4:	f7f1 f830 	bl	8019f38 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8028ed8:	901a      	str	r0, [sp, #104]	; 0x68
 8028eda:	4628      	mov	r0, r5
 8028edc:	f7f0 ff10 	bl	8019d00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028ee0:	901b      	str	r0, [sp, #108]	; 0x6c
 8028ee2:	4628      	mov	r0, r5
 8028ee4:	f7f0 ff40 	bl	8019d68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8028ee8:	901c      	str	r0, [sp, #112]	; 0x70
 8028eea:	4628      	mov	r0, r5
 8028eec:	f7f0 ff08 	bl	8019d00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028ef0:	eeb4 9a48 	vcmp.f32	s18, s16
 8028ef4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ef8:	901d      	str	r0, [sp, #116]	; 0x74
 8028efa:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 8028efe:	d107      	bne.n	8028f10 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 8028f00:	eeb4 8a68 	vcmp.f32	s16, s17
 8028f04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028f08:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8028f0c:	bf08      	it	eq
 8028f0e:	461e      	moveq	r6, r3
 8028f10:	4b12      	ldr	r3, [pc, #72]	; (8028f5c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 8028f12:	681b      	ldr	r3, [r3, #0]
 8028f14:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8028f18:	b10a      	cbz	r2, 8028f1e <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 8028f1a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8028f1c:	b905      	cbnz	r5, 8028f20 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 8028f1e:	689d      	ldr	r5, [r3, #8]
 8028f20:	682b      	ldr	r3, [r5, #0]
 8028f22:	4620      	mov	r0, r4
 8028f24:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8028f26:	f7ff fec2 	bl	8028cae <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 8028f2a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8028f2e:	9604      	str	r6, [sp, #16]
 8028f30:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8028f34:	ab13      	add	r3, sp, #76	; 0x4c
 8028f36:	9301      	str	r3, [sp, #4]
 8028f38:	ab15      	add	r3, sp, #84	; 0x54
 8028f3a:	9300      	str	r3, [sp, #0]
 8028f3c:	aa1e      	add	r2, sp, #120	; 0x78
 8028f3e:	ab19      	add	r3, sp, #100	; 0x64
 8028f40:	a917      	add	r1, sp, #92	; 0x5c
 8028f42:	4628      	mov	r0, r5
 8028f44:	47b8      	blx	r7
 8028f46:	b033      	add	sp, #204	; 0xcc
 8028f48:	ecbd 8b04 	vpop	{d8-d9}
 8028f4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028f50:	2300      	movs	r3, #0
 8028f52:	9312      	str	r3, [sp, #72]	; 0x48
 8028f54:	e6f7      	b.n	8028d46 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 8028f56:	bf00      	nop
 8028f58:	20013816 	.word	0x20013816
 8028f5c:	2001381c 	.word	0x2001381c

08028f60 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 8028f60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028f64:	ed2d 8b02 	vpush	{d8}
 8028f68:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8028f6c:	b098      	sub	sp, #96	; 0x60
 8028f6e:	4604      	mov	r4, r0
 8028f70:	4688      	mov	r8, r1
 8028f72:	2b00      	cmp	r3, #0
 8028f74:	d077      	beq.n	8029066 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 8028f76:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8028f7a:	4628      	mov	r0, r5
 8028f7c:	f7f0 fec0 	bl	8019d00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028f80:	ee07 0a90 	vmov	s15, r0
 8028f84:	4628      	mov	r0, r5
 8028f86:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 8028f8a:	f7f0 feed 	bl	8019d68 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8028f8e:	4b4e      	ldr	r3, [pc, #312]	; (80290c8 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 8028f90:	781b      	ldrb	r3, [r3, #0]
 8028f92:	ee07 0a90 	vmov	s15, r0
 8028f96:	2b01      	cmp	r3, #1
 8028f98:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8028f9c:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8028fa0:	d066      	beq.n	8029070 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 8028fa2:	eeb0 6a47 	vmov.f32	s12, s14
 8028fa6:	ee17 3a10 	vmov	r3, s14
 8028faa:	eeb0 4a48 	vmov.f32	s8, s16
 8028fae:	eeb0 7a48 	vmov.f32	s14, s16
 8028fb2:	eef0 4a67 	vmov.f32	s9, s15
 8028fb6:	eeb0 8a67 	vmov.f32	s16, s15
 8028fba:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 8028fbe:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8028fc2:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 8028fc6:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 8028fca:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 8028fce:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8028fd2:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8028fd4:	6e66      	ldr	r6, [r4, #100]	; 0x64
 8028fd6:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8028fd8:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 8028fdc:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8028fe0:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8028fe4:	ee73 1a65 	vsub.f32	s3, s6, s11
 8028fe8:	ee72 6ac5 	vsub.f32	s13, s5, s10
 8028fec:	ee32 1a45 	vsub.f32	s2, s4, s10
 8028ff0:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8028ff4:	ee73 1ae5 	vsub.f32	s3, s7, s11
 8028ff8:	eee1 6a21 	vfma.f32	s13, s2, s3
 8028ffc:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8029000:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029004:	dd3d      	ble.n	8029082 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 8029006:	ed8d 5a04 	vstr	s10, [sp, #16]
 802900a:	ed8d 2a05 	vstr	s4, [sp, #20]
 802900e:	edcd 2a06 	vstr	s5, [sp, #24]
 8029012:	f8cd c01c 	str.w	ip, [sp, #28]
 8029016:	edcd 5a08 	vstr	s11, [sp, #32]
 802901a:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 802901e:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 8029022:	970b      	str	r7, [sp, #44]	; 0x2c
 8029024:	960c      	str	r6, [sp, #48]	; 0x30
 8029026:	950d      	str	r5, [sp, #52]	; 0x34
 8029028:	920e      	str	r2, [sp, #56]	; 0x38
 802902a:	900f      	str	r0, [sp, #60]	; 0x3c
 802902c:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8029030:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8029034:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 8029038:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 802903c:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 8029040:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8029044:	9316      	str	r3, [sp, #88]	; 0x58
 8029046:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 802904a:	ab14      	add	r3, sp, #80	; 0x50
 802904c:	9303      	str	r3, [sp, #12]
 802904e:	ab10      	add	r3, sp, #64	; 0x40
 8029050:	9302      	str	r3, [sp, #8]
 8029052:	ab0c      	add	r3, sp, #48	; 0x30
 8029054:	9301      	str	r3, [sp, #4]
 8029056:	ab08      	add	r3, sp, #32
 8029058:	9300      	str	r3, [sp, #0]
 802905a:	2200      	movs	r2, #0
 802905c:	ab04      	add	r3, sp, #16
 802905e:	4641      	mov	r1, r8
 8029060:	4620      	mov	r0, r4
 8029062:	f7ff fe2d 	bl	8028cc0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8029066:	b018      	add	sp, #96	; 0x60
 8029068:	ecbd 8b02 	vpop	{d8}
 802906c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029070:	eeb0 6a48 	vmov.f32	s12, s16
 8029074:	eef0 4a47 	vmov.f32	s9, s14
 8029078:	ee17 3a90 	vmov	r3, s15
 802907c:	eeb0 4a67 	vmov.f32	s8, s15
 8029080:	e79b      	b.n	8028fba <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 8029082:	ed8d 5a05 	vstr	s10, [sp, #20]
 8029086:	ed8d 2a04 	vstr	s4, [sp, #16]
 802908a:	f8cd c018 	str.w	ip, [sp, #24]
 802908e:	edcd 2a07 	vstr	s5, [sp, #28]
 8029092:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 8029096:	ed8d 3a08 	vstr	s6, [sp, #32]
 802909a:	970a      	str	r7, [sp, #40]	; 0x28
 802909c:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 80290a0:	960d      	str	r6, [sp, #52]	; 0x34
 80290a2:	950c      	str	r5, [sp, #48]	; 0x30
 80290a4:	900e      	str	r0, [sp, #56]	; 0x38
 80290a6:	920f      	str	r2, [sp, #60]	; 0x3c
 80290a8:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 80290ac:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 80290b0:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 80290b4:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 80290b8:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 80290bc:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 80290c0:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 80290c4:	9317      	str	r3, [sp, #92]	; 0x5c
 80290c6:	e7c0      	b.n	802904a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 80290c8:	20013814 	.word	0x20013814

080290cc <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 80290cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80290ce:	b08d      	sub	sp, #52	; 0x34
 80290d0:	2300      	movs	r3, #0
 80290d2:	9304      	str	r3, [sp, #16]
 80290d4:	9305      	str	r3, [sp, #20]
 80290d6:	9306      	str	r3, [sp, #24]
 80290d8:	aa04      	add	r2, sp, #16
 80290da:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 80290de:	9307      	str	r3, [sp, #28]
 80290e0:	f100 0640 	add.w	r6, r0, #64	; 0x40
 80290e4:	4613      	mov	r3, r2
 80290e6:	f101 0710 	add.w	r7, r1, #16
 80290ea:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8029128 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 80290ee:	460c      	mov	r4, r1
 80290f0:	4605      	mov	r5, r0
 80290f2:	ecb4 7a01 	vldmia	r4!, {s14}
 80290f6:	ecf5 6a01 	vldmia	r5!, {s13}
 80290fa:	42bc      	cmp	r4, r7
 80290fc:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029100:	d1f7      	bne.n	80290f2 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 8029102:	3010      	adds	r0, #16
 8029104:	42b0      	cmp	r0, r6
 8029106:	ece2 7a01 	vstmia	r2!, {s15}
 802910a:	d1ee      	bne.n	80290ea <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 802910c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802910e:	ac0c      	add	r4, sp, #48	; 0x30
 8029110:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8029114:	ed9d 0a08 	vldr	s0, [sp, #32]
 8029118:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 802911c:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 8029120:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8029124:	b00d      	add	sp, #52	; 0x34
 8029126:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029128:	00000000 	.word	0x00000000

0802912c <_ZN8touchgfx9Matrix4x4C1Ev>:
 802912c:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 802915c <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 8029130:	2300      	movs	r3, #0
 8029132:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8029136:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 802913a:	2200      	movs	r2, #0
 802913c:	4293      	cmp	r3, r2
 802913e:	f102 0201 	add.w	r2, r2, #1
 8029142:	bf14      	ite	ne
 8029144:	eef0 6a47 	vmovne.f32	s13, s14
 8029148:	eef0 6a67 	vmoveq.f32	s13, s15
 802914c:	2a04      	cmp	r2, #4
 802914e:	ece1 6a01 	vstmia	r1!, {s13}
 8029152:	d1f3      	bne.n	802913c <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8029154:	3301      	adds	r3, #1
 8029156:	2b04      	cmp	r3, #4
 8029158:	d1ed      	bne.n	8029136 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 802915a:	4770      	bx	lr
 802915c:	00000000 	.word	0x00000000

08029160 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 8029160:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029164:	460c      	mov	r4, r1
 8029166:	4605      	mov	r5, r0
 8029168:	4690      	mov	r8, r2
 802916a:	f7ff ffdf 	bl	802912c <_ZN8touchgfx9Matrix4x4C1Ev>
 802916e:	4628      	mov	r0, r5
 8029170:	4621      	mov	r1, r4
 8029172:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 8029176:	2300      	movs	r3, #0
 8029178:	eddf 7a0f 	vldr	s15, [pc, #60]	; 80291b8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 802917c:	eb08 0603 	add.w	r6, r8, r3
 8029180:	460f      	mov	r7, r1
 8029182:	2400      	movs	r4, #0
 8029184:	4632      	mov	r2, r6
 8029186:	ecf7 6a01 	vldmia	r7!, {s13}
 802918a:	ed92 7a00 	vldr	s14, [r2]
 802918e:	3401      	adds	r4, #1
 8029190:	2c04      	cmp	r4, #4
 8029192:	f106 0610 	add.w	r6, r6, #16
 8029196:	eee6 7a87 	vfma.f32	s15, s13, s14
 802919a:	d1f3      	bne.n	8029184 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 802919c:	18c2      	adds	r2, r0, r3
 802919e:	3304      	adds	r3, #4
 80291a0:	2b10      	cmp	r3, #16
 80291a2:	edc2 7a00 	vstr	s15, [r2]
 80291a6:	d1e7      	bne.n	8029178 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 80291a8:	3110      	adds	r1, #16
 80291aa:	4561      	cmp	r1, ip
 80291ac:	f100 0010 	add.w	r0, r0, #16
 80291b0:	d1e1      	bne.n	8029176 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 80291b2:	4628      	mov	r0, r5
 80291b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80291b8:	00000000 	.word	0x00000000

080291bc <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 80291bc:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80291c0:	ee87 0a80 	vdiv.f32	s0, s15, s0
 80291c4:	f100 0320 	add.w	r3, r0, #32
 80291c8:	3030      	adds	r0, #48	; 0x30
 80291ca:	ecf3 7a01 	vldmia	r3!, {s15}
 80291ce:	ee60 7a27 	vmul.f32	s15, s0, s15
 80291d2:	4283      	cmp	r3, r0
 80291d4:	edc3 7a03 	vstr	s15, [r3, #12]
 80291d8:	d1f7      	bne.n	80291ca <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 80291da:	4770      	bx	lr

080291dc <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 80291dc:	b510      	push	{r4, lr}
 80291de:	ed2d 8b02 	vpush	{d8}
 80291e2:	4604      	mov	r4, r0
 80291e4:	eef0 8a40 	vmov.f32	s17, s0
 80291e8:	f001 fa7a 	bl	802a6e0 <sinf>
 80291ec:	eeb0 8a40 	vmov.f32	s16, s0
 80291f0:	eeb0 0a68 	vmov.f32	s0, s17
 80291f4:	f001 fa30 	bl	802a658 <cosf>
 80291f8:	f104 0310 	add.w	r3, r4, #16
 80291fc:	f104 0220 	add.w	r2, r4, #32
 8029200:	eeb1 6a48 	vneg.f32	s12, s16
 8029204:	edd3 7a04 	vldr	s15, [r3, #16]
 8029208:	edd3 6a00 	vldr	s13, [r3]
 802920c:	ee26 7a27 	vmul.f32	s14, s12, s15
 8029210:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029214:	eea6 7a80 	vfma.f32	s14, s13, s0
 8029218:	eee6 7a88 	vfma.f32	s15, s13, s16
 802921c:	eca3 7a01 	vstmia	r3!, {s14}
 8029220:	429a      	cmp	r2, r3
 8029222:	edc3 7a03 	vstr	s15, [r3, #12]
 8029226:	d1ed      	bne.n	8029204 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8029228:	ecbd 8b02 	vpop	{d8}
 802922c:	4620      	mov	r0, r4
 802922e:	bd10      	pop	{r4, pc}

08029230 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 8029230:	b510      	push	{r4, lr}
 8029232:	ed2d 8b02 	vpush	{d8}
 8029236:	4604      	mov	r4, r0
 8029238:	eef0 8a40 	vmov.f32	s17, s0
 802923c:	f001 fa50 	bl	802a6e0 <sinf>
 8029240:	eeb0 8a40 	vmov.f32	s16, s0
 8029244:	eeb0 0a68 	vmov.f32	s0, s17
 8029248:	f001 fa06 	bl	802a658 <cosf>
 802924c:	4623      	mov	r3, r4
 802924e:	f104 0210 	add.w	r2, r4, #16
 8029252:	eeb1 6a48 	vneg.f32	s12, s16
 8029256:	edd3 7a08 	vldr	s15, [r3, #32]
 802925a:	edd3 6a00 	vldr	s13, [r3]
 802925e:	ee27 7a88 	vmul.f32	s14, s15, s16
 8029262:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029266:	eea6 7a80 	vfma.f32	s14, s13, s0
 802926a:	eee6 7a26 	vfma.f32	s15, s12, s13
 802926e:	eca3 7a01 	vstmia	r3!, {s14}
 8029272:	429a      	cmp	r2, r3
 8029274:	edc3 7a07 	vstr	s15, [r3, #28]
 8029278:	d1ed      	bne.n	8029256 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 802927a:	ecbd 8b02 	vpop	{d8}
 802927e:	4620      	mov	r0, r4
 8029280:	bd10      	pop	{r4, pc}

08029282 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 8029282:	b510      	push	{r4, lr}
 8029284:	ed2d 8b02 	vpush	{d8}
 8029288:	4604      	mov	r4, r0
 802928a:	eef0 8a40 	vmov.f32	s17, s0
 802928e:	f001 fa27 	bl	802a6e0 <sinf>
 8029292:	eeb0 8a40 	vmov.f32	s16, s0
 8029296:	eeb0 0a68 	vmov.f32	s0, s17
 802929a:	f001 f9dd 	bl	802a658 <cosf>
 802929e:	4623      	mov	r3, r4
 80292a0:	f104 0210 	add.w	r2, r4, #16
 80292a4:	eeb1 6a48 	vneg.f32	s12, s16
 80292a8:	edd3 7a04 	vldr	s15, [r3, #16]
 80292ac:	edd3 6a00 	vldr	s13, [r3]
 80292b0:	ee26 7a27 	vmul.f32	s14, s12, s15
 80292b4:	ee67 7a80 	vmul.f32	s15, s15, s0
 80292b8:	eea6 7a80 	vfma.f32	s14, s13, s0
 80292bc:	eee6 7a88 	vfma.f32	s15, s13, s16
 80292c0:	eca3 7a01 	vstmia	r3!, {s14}
 80292c4:	429a      	cmp	r2, r3
 80292c6:	edc3 7a03 	vstr	s15, [r3, #12]
 80292ca:	d1ed      	bne.n	80292a8 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 80292cc:	ecbd 8b02 	vpop	{d8}
 80292d0:	4620      	mov	r0, r4
 80292d2:	bd10      	pop	{r4, pc}

080292d4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 80292d4:	4603      	mov	r3, r0
 80292d6:	f100 0210 	add.w	r2, r0, #16
 80292da:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 80292de:	edd3 7a00 	vldr	s15, [r3]
 80292e2:	eee7 7a00 	vfma.f32	s15, s14, s0
 80292e6:	ece3 7a01 	vstmia	r3!, {s15}
 80292ea:	4293      	cmp	r3, r2
 80292ec:	d1f5      	bne.n	80292da <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 80292ee:	4770      	bx	lr

080292f0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 80292f0:	f100 0310 	add.w	r3, r0, #16
 80292f4:	f100 0220 	add.w	r2, r0, #32
 80292f8:	ed93 7a08 	vldr	s14, [r3, #32]
 80292fc:	edd3 7a00 	vldr	s15, [r3]
 8029300:	eee7 7a00 	vfma.f32	s15, s14, s0
 8029304:	ece3 7a01 	vstmia	r3!, {s15}
 8029308:	4293      	cmp	r3, r2
 802930a:	d1f5      	bne.n	80292f8 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 802930c:	4770      	bx	lr

0802930e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 802930e:	f100 0320 	add.w	r3, r0, #32
 8029312:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8029316:	ed93 7a04 	vldr	s14, [r3, #16]
 802931a:	edd3 7a00 	vldr	s15, [r3]
 802931e:	eee7 7a00 	vfma.f32	s15, s14, s0
 8029322:	ece3 7a01 	vstmia	r3!, {s15}
 8029326:	4293      	cmp	r3, r2
 8029328:	d1f5      	bne.n	8029316 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 802932a:	4770      	bx	lr

0802932c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 802932c:	4603      	mov	r3, r0
 802932e:	f100 0210 	add.w	r2, r0, #16
 8029332:	edd3 7a00 	vldr	s15, [r3]
 8029336:	ee67 7a80 	vmul.f32	s15, s15, s0
 802933a:	ece3 7a01 	vstmia	r3!, {s15}
 802933e:	4293      	cmp	r3, r2
 8029340:	d1f7      	bne.n	8029332 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8029342:	4770      	bx	lr

08029344 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8029344:	f100 0310 	add.w	r3, r0, #16
 8029348:	f100 0220 	add.w	r2, r0, #32
 802934c:	edd3 7a00 	vldr	s15, [r3]
 8029350:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029354:	ece3 7a01 	vstmia	r3!, {s15}
 8029358:	4293      	cmp	r3, r2
 802935a:	d1f7      	bne.n	802934c <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 802935c:	4770      	bx	lr

0802935e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 802935e:	f100 0320 	add.w	r3, r0, #32
 8029362:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8029366:	edd3 7a00 	vldr	s15, [r3]
 802936a:	ee67 7a80 	vmul.f32	s15, s15, s0
 802936e:	ece3 7a01 	vstmia	r3!, {s15}
 8029372:	4293      	cmp	r3, r2
 8029374:	d1f7      	bne.n	8029366 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 8029376:	4770      	bx	lr

08029378 <arm_max_f32>:
 8029378:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802937c:	1e4f      	subs	r7, r1, #1
 802937e:	ea5f 0897 	movs.w	r8, r7, lsr #2
 8029382:	f100 0e04 	add.w	lr, r0, #4
 8029386:	edd0 7a00 	vldr	s15, [r0]
 802938a:	d058      	beq.n	802943e <arm_max_f32+0xc6>
 802938c:	3014      	adds	r0, #20
 802938e:	46c4      	mov	ip, r8
 8029390:	2604      	movs	r6, #4
 8029392:	2400      	movs	r4, #0
 8029394:	ed10 6a04 	vldr	s12, [r0, #-16]
 8029398:	ed50 6a03 	vldr	s13, [r0, #-12]
 802939c:	ed10 7a02 	vldr	s14, [r0, #-8]
 80293a0:	ed50 5a01 	vldr	s11, [r0, #-4]
 80293a4:	eeb4 6ae7 	vcmpe.f32	s12, s15
 80293a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80293ac:	bfc8      	it	gt
 80293ae:	eef0 7a46 	vmovgt.f32	s15, s12
 80293b2:	f1a6 0503 	sub.w	r5, r6, #3
 80293b6:	eef4 7ae6 	vcmpe.f32	s15, s13
 80293ba:	bfc8      	it	gt
 80293bc:	462c      	movgt	r4, r5
 80293be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80293c2:	bf48      	it	mi
 80293c4:	eef0 7a66 	vmovmi.f32	s15, s13
 80293c8:	f1a6 0502 	sub.w	r5, r6, #2
 80293cc:	eef4 7ac7 	vcmpe.f32	s15, s14
 80293d0:	bf48      	it	mi
 80293d2:	462c      	movmi	r4, r5
 80293d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80293d8:	bf48      	it	mi
 80293da:	eef0 7a47 	vmovmi.f32	s15, s14
 80293de:	f106 35ff 	add.w	r5, r6, #4294967295
 80293e2:	eef4 7ae5 	vcmpe.f32	s15, s11
 80293e6:	bf48      	it	mi
 80293e8:	462c      	movmi	r4, r5
 80293ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80293ee:	bf48      	it	mi
 80293f0:	4634      	movmi	r4, r6
 80293f2:	bf48      	it	mi
 80293f4:	eef0 7a65 	vmovmi.f32	s15, s11
 80293f8:	f1bc 0c01 	subs.w	ip, ip, #1
 80293fc:	f106 0604 	add.w	r6, r6, #4
 8029400:	f100 0010 	add.w	r0, r0, #16
 8029404:	d1c6      	bne.n	8029394 <arm_max_f32+0x1c>
 8029406:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 802940a:	f017 0003 	ands.w	r0, r7, #3
 802940e:	d018      	beq.n	8029442 <arm_max_f32+0xca>
 8029410:	1a08      	subs	r0, r1, r0
 8029412:	ecbe 7a01 	vldmia	lr!, {s14}
 8029416:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802941a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802941e:	bfc8      	it	gt
 8029420:	4604      	movgt	r4, r0
 8029422:	f100 0001 	add.w	r0, r0, #1
 8029426:	bfd8      	it	le
 8029428:	eeb0 7a67 	vmovle.f32	s14, s15
 802942c:	4288      	cmp	r0, r1
 802942e:	eef0 7a47 	vmov.f32	s15, s14
 8029432:	d1ee      	bne.n	8029412 <arm_max_f32+0x9a>
 8029434:	ed82 7a00 	vstr	s14, [r2]
 8029438:	601c      	str	r4, [r3, #0]
 802943a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802943e:	4644      	mov	r4, r8
 8029440:	e7e3      	b.n	802940a <arm_max_f32+0x92>
 8029442:	eeb0 7a67 	vmov.f32	s14, s15
 8029446:	e7f5      	b.n	8029434 <arm_max_f32+0xbc>

08029448 <arm_rfft_fast_init_f32>:
 8029448:	084b      	lsrs	r3, r1, #1
 802944a:	2b80      	cmp	r3, #128	; 0x80
 802944c:	b410      	push	{r4}
 802944e:	8201      	strh	r1, [r0, #16]
 8029450:	8003      	strh	r3, [r0, #0]
 8029452:	d047      	beq.n	80294e4 <arm_rfft_fast_init_f32+0x9c>
 8029454:	d917      	bls.n	8029486 <arm_rfft_fast_init_f32+0x3e>
 8029456:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802945a:	d03d      	beq.n	80294d8 <arm_rfft_fast_init_f32+0x90>
 802945c:	d929      	bls.n	80294b2 <arm_rfft_fast_init_f32+0x6a>
 802945e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8029462:	d020      	beq.n	80294a6 <arm_rfft_fast_init_f32+0x5e>
 8029464:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8029468:	d113      	bne.n	8029492 <arm_rfft_fast_init_f32+0x4a>
 802946a:	4921      	ldr	r1, [pc, #132]	; (80294f0 <arm_rfft_fast_init_f32+0xa8>)
 802946c:	4a21      	ldr	r2, [pc, #132]	; (80294f4 <arm_rfft_fast_init_f32+0xac>)
 802946e:	4b22      	ldr	r3, [pc, #136]	; (80294f8 <arm_rfft_fast_init_f32+0xb0>)
 8029470:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 8029474:	8184      	strh	r4, [r0, #12]
 8029476:	6081      	str	r1, [r0, #8]
 8029478:	6042      	str	r2, [r0, #4]
 802947a:	6143      	str	r3, [r0, #20]
 802947c:	2000      	movs	r0, #0
 802947e:	b240      	sxtb	r0, r0
 8029480:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029484:	4770      	bx	lr
 8029486:	2b20      	cmp	r3, #32
 8029488:	d01c      	beq.n	80294c4 <arm_rfft_fast_init_f32+0x7c>
 802948a:	2b40      	cmp	r3, #64	; 0x40
 802948c:	d006      	beq.n	802949c <arm_rfft_fast_init_f32+0x54>
 802948e:	2b10      	cmp	r3, #16
 8029490:	d01d      	beq.n	80294ce <arm_rfft_fast_init_f32+0x86>
 8029492:	20ff      	movs	r0, #255	; 0xff
 8029494:	b240      	sxtb	r0, r0
 8029496:	f85d 4b04 	ldr.w	r4, [sp], #4
 802949a:	4770      	bx	lr
 802949c:	2438      	movs	r4, #56	; 0x38
 802949e:	4917      	ldr	r1, [pc, #92]	; (80294fc <arm_rfft_fast_init_f32+0xb4>)
 80294a0:	4a17      	ldr	r2, [pc, #92]	; (8029500 <arm_rfft_fast_init_f32+0xb8>)
 80294a2:	4b18      	ldr	r3, [pc, #96]	; (8029504 <arm_rfft_fast_init_f32+0xbc>)
 80294a4:	e7e6      	b.n	8029474 <arm_rfft_fast_init_f32+0x2c>
 80294a6:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 80294aa:	4917      	ldr	r1, [pc, #92]	; (8029508 <arm_rfft_fast_init_f32+0xc0>)
 80294ac:	4a17      	ldr	r2, [pc, #92]	; (802950c <arm_rfft_fast_init_f32+0xc4>)
 80294ae:	4b18      	ldr	r3, [pc, #96]	; (8029510 <arm_rfft_fast_init_f32+0xc8>)
 80294b0:	e7e0      	b.n	8029474 <arm_rfft_fast_init_f32+0x2c>
 80294b2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80294b6:	d1ec      	bne.n	8029492 <arm_rfft_fast_init_f32+0x4a>
 80294b8:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 80294bc:	4915      	ldr	r1, [pc, #84]	; (8029514 <arm_rfft_fast_init_f32+0xcc>)
 80294be:	4a16      	ldr	r2, [pc, #88]	; (8029518 <arm_rfft_fast_init_f32+0xd0>)
 80294c0:	4b16      	ldr	r3, [pc, #88]	; (802951c <arm_rfft_fast_init_f32+0xd4>)
 80294c2:	e7d7      	b.n	8029474 <arm_rfft_fast_init_f32+0x2c>
 80294c4:	2430      	movs	r4, #48	; 0x30
 80294c6:	4916      	ldr	r1, [pc, #88]	; (8029520 <arm_rfft_fast_init_f32+0xd8>)
 80294c8:	4a16      	ldr	r2, [pc, #88]	; (8029524 <arm_rfft_fast_init_f32+0xdc>)
 80294ca:	4b17      	ldr	r3, [pc, #92]	; (8029528 <arm_rfft_fast_init_f32+0xe0>)
 80294cc:	e7d2      	b.n	8029474 <arm_rfft_fast_init_f32+0x2c>
 80294ce:	2414      	movs	r4, #20
 80294d0:	4916      	ldr	r1, [pc, #88]	; (802952c <arm_rfft_fast_init_f32+0xe4>)
 80294d2:	4a17      	ldr	r2, [pc, #92]	; (8029530 <arm_rfft_fast_init_f32+0xe8>)
 80294d4:	4b17      	ldr	r3, [pc, #92]	; (8029534 <arm_rfft_fast_init_f32+0xec>)
 80294d6:	e7cd      	b.n	8029474 <arm_rfft_fast_init_f32+0x2c>
 80294d8:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 80294dc:	4916      	ldr	r1, [pc, #88]	; (8029538 <arm_rfft_fast_init_f32+0xf0>)
 80294de:	4a17      	ldr	r2, [pc, #92]	; (802953c <arm_rfft_fast_init_f32+0xf4>)
 80294e0:	4b17      	ldr	r3, [pc, #92]	; (8029540 <arm_rfft_fast_init_f32+0xf8>)
 80294e2:	e7c7      	b.n	8029474 <arm_rfft_fast_init_f32+0x2c>
 80294e4:	24d0      	movs	r4, #208	; 0xd0
 80294e6:	4917      	ldr	r1, [pc, #92]	; (8029544 <arm_rfft_fast_init_f32+0xfc>)
 80294e8:	4a17      	ldr	r2, [pc, #92]	; (8029548 <arm_rfft_fast_init_f32+0x100>)
 80294ea:	4b18      	ldr	r3, [pc, #96]	; (802954c <arm_rfft_fast_init_f32+0x104>)
 80294ec:	e7c2      	b.n	8029474 <arm_rfft_fast_init_f32+0x2c>
 80294ee:	bf00      	nop
 80294f0:	0803ea18 	.word	0x0803ea18
 80294f4:	0802fc10 	.word	0x0802fc10
 80294f8:	08035d80 	.word	0x08035d80
 80294fc:	08033d10 	.word	0x08033d10
 8029500:	080407d8 	.word	0x080407d8
 8029504:	08042cc8 	.word	0x08042cc8
 8029508:	0803c700 	.word	0x0803c700
 802950c:	0803a600 	.word	0x0803a600
 8029510:	08033d80 	.word	0x08033d80
 8029514:	08042958 	.word	0x08042958
 8029518:	08039d80 	.word	0x08039d80
 802951c:	080409d8 	.word	0x080409d8
 8029520:	0803d5b8 	.word	0x0803d5b8
 8029524:	0803c600 	.word	0x0803c600
 8029528:	08033c10 	.word	0x08033c10
 802952c:	0803d510 	.word	0x0803d510
 8029530:	0803a580 	.word	0x0803a580
 8029534:	0803d538 	.word	0x0803d538
 8029538:	080411d8 	.word	0x080411d8
 802953c:	0803da18 	.word	0x0803da18
 8029540:	08041558 	.word	0x08041558
 8029544:	08042ec8 	.word	0x08042ec8
 8029548:	0803d618 	.word	0x0803d618
 802954c:	08042558 	.word	0x08042558

08029550 <arm_rfft_fast_f32>:
 8029550:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029554:	8a06      	ldrh	r6, [r0, #16]
 8029556:	0876      	lsrs	r6, r6, #1
 8029558:	4607      	mov	r7, r0
 802955a:	4615      	mov	r5, r2
 802955c:	8006      	strh	r6, [r0, #0]
 802955e:	460c      	mov	r4, r1
 8029560:	2b00      	cmp	r3, #0
 8029562:	d15c      	bne.n	802961e <arm_rfft_fast_f32+0xce>
 8029564:	461a      	mov	r2, r3
 8029566:	2301      	movs	r3, #1
 8029568:	f000 fbe6 	bl	8029d38 <arm_cfft_f32>
 802956c:	edd4 7a00 	vldr	s15, [r4]
 8029570:	ed94 7a01 	vldr	s14, [r4, #4]
 8029574:	883e      	ldrh	r6, [r7, #0]
 8029576:	6978      	ldr	r0, [r7, #20]
 8029578:	ee37 7a07 	vadd.f32	s14, s14, s14
 802957c:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8029580:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8029584:	ee77 6a87 	vadd.f32	s13, s15, s14
 8029588:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802958c:	3e01      	subs	r6, #1
 802958e:	ee26 7aa3 	vmul.f32	s14, s13, s7
 8029592:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8029596:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 802959a:	ed85 7a00 	vstr	s14, [r5]
 802959e:	edc5 7a01 	vstr	s15, [r5, #4]
 80295a2:	3010      	adds	r0, #16
 80295a4:	f105 0210 	add.w	r2, r5, #16
 80295a8:	3b08      	subs	r3, #8
 80295aa:	f104 0110 	add.w	r1, r4, #16
 80295ae:	ed51 4a02 	vldr	s9, [r1, #-8]
 80295b2:	ed93 5a02 	vldr	s10, [r3, #8]
 80295b6:	ed11 7a01 	vldr	s14, [r1, #-4]
 80295ba:	ed10 6a02 	vldr	s12, [r0, #-8]
 80295be:	edd3 5a03 	vldr	s11, [r3, #12]
 80295c2:	ed50 6a01 	vldr	s13, [r0, #-4]
 80295c6:	ee75 7a64 	vsub.f32	s15, s10, s9
 80295ca:	ee35 4a87 	vadd.f32	s8, s11, s14
 80295ce:	ee35 5a24 	vadd.f32	s10, s10, s9
 80295d2:	ee77 5a65 	vsub.f32	s11, s14, s11
 80295d6:	ee66 4a27 	vmul.f32	s9, s12, s15
 80295da:	ee26 7aa7 	vmul.f32	s14, s13, s15
 80295de:	ee34 5a85 	vadd.f32	s10, s9, s10
 80295e2:	ee26 6a04 	vmul.f32	s12, s12, s8
 80295e6:	ee66 6a84 	vmul.f32	s13, s13, s8
 80295ea:	ee77 7a25 	vadd.f32	s15, s14, s11
 80295ee:	ee76 6a85 	vadd.f32	s13, s13, s10
 80295f2:	ee77 7ac6 	vsub.f32	s15, s15, s12
 80295f6:	ee66 6aa3 	vmul.f32	s13, s13, s7
 80295fa:	ee67 7aa3 	vmul.f32	s15, s15, s7
 80295fe:	3e01      	subs	r6, #1
 8029600:	ed42 6a02 	vstr	s13, [r2, #-8]
 8029604:	ed42 7a01 	vstr	s15, [r2, #-4]
 8029608:	f1a3 0308 	sub.w	r3, r3, #8
 802960c:	f101 0108 	add.w	r1, r1, #8
 8029610:	f100 0008 	add.w	r0, r0, #8
 8029614:	f102 0208 	add.w	r2, r2, #8
 8029618:	d1c9      	bne.n	80295ae <arm_rfft_fast_f32+0x5e>
 802961a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802961e:	edd1 7a00 	vldr	s15, [r1]
 8029622:	edd1 6a01 	vldr	s13, [r1, #4]
 8029626:	6941      	ldr	r1, [r0, #20]
 8029628:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802962c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8029630:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8029634:	ee27 7a23 	vmul.f32	s14, s14, s7
 8029638:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802963c:	3e01      	subs	r6, #1
 802963e:	ed82 7a00 	vstr	s14, [r2]
 8029642:	edc2 7a01 	vstr	s15, [r2, #4]
 8029646:	00f0      	lsls	r0, r6, #3
 8029648:	b3ee      	cbz	r6, 80296c6 <arm_rfft_fast_f32+0x176>
 802964a:	3808      	subs	r0, #8
 802964c:	f101 0e10 	add.w	lr, r1, #16
 8029650:	4420      	add	r0, r4
 8029652:	f104 0110 	add.w	r1, r4, #16
 8029656:	f102 0c10 	add.w	ip, r2, #16
 802965a:	ed90 7a02 	vldr	s14, [r0, #8]
 802965e:	ed51 6a02 	vldr	s13, [r1, #-8]
 8029662:	ed1e 6a02 	vldr	s12, [lr, #-8]
 8029666:	ed90 4a03 	vldr	s8, [r0, #12]
 802966a:	ed11 5a01 	vldr	s10, [r1, #-4]
 802966e:	ed5e 5a01 	vldr	s11, [lr, #-4]
 8029672:	ee76 7ac7 	vsub.f32	s15, s13, s14
 8029676:	ee74 4a05 	vadd.f32	s9, s8, s10
 802967a:	ee26 3a27 	vmul.f32	s6, s12, s15
 802967e:	ee77 6a26 	vadd.f32	s13, s14, s13
 8029682:	ee35 5a44 	vsub.f32	s10, s10, s8
 8029686:	ee25 7aa7 	vmul.f32	s14, s11, s15
 802968a:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802968e:	ee77 7a05 	vadd.f32	s15, s14, s10
 8029692:	ee26 6a24 	vmul.f32	s12, s12, s9
 8029696:	ee65 5aa4 	vmul.f32	s11, s11, s9
 802969a:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802969e:	ee36 7ae5 	vsub.f32	s14, s13, s11
 80296a2:	ee67 7aa3 	vmul.f32	s15, s15, s7
 80296a6:	ee27 7a23 	vmul.f32	s14, s14, s7
 80296aa:	3e01      	subs	r6, #1
 80296ac:	ed0c 7a02 	vstr	s14, [ip, #-8]
 80296b0:	ed4c 7a01 	vstr	s15, [ip, #-4]
 80296b4:	f1a0 0008 	sub.w	r0, r0, #8
 80296b8:	f101 0108 	add.w	r1, r1, #8
 80296bc:	f10e 0e08 	add.w	lr, lr, #8
 80296c0:	f10c 0c08 	add.w	ip, ip, #8
 80296c4:	d1c9      	bne.n	802965a <arm_rfft_fast_f32+0x10a>
 80296c6:	4638      	mov	r0, r7
 80296c8:	4629      	mov	r1, r5
 80296ca:	461a      	mov	r2, r3
 80296cc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80296d0:	2301      	movs	r3, #1
 80296d2:	f000 bb31 	b.w	8029d38 <arm_cfft_f32>
 80296d6:	bf00      	nop

080296d8 <arm_cfft_radix8by2_f32>:
 80296d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80296dc:	ed2d 8b08 	vpush	{d8-d11}
 80296e0:	f8b0 e000 	ldrh.w	lr, [r0]
 80296e4:	6842      	ldr	r2, [r0, #4]
 80296e6:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80296ea:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 80296ee:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 80296f2:	4607      	mov	r7, r0
 80296f4:	ea4f 038c 	mov.w	r3, ip, lsl #2
 80296f8:	f000 80af 	beq.w	802985a <arm_cfft_radix8by2_f32+0x182>
 80296fc:	3310      	adds	r3, #16
 80296fe:	18ce      	adds	r6, r1, r3
 8029700:	3210      	adds	r2, #16
 8029702:	4443      	add	r3, r8
 8029704:	f101 0510 	add.w	r5, r1, #16
 8029708:	f108 0410 	add.w	r4, r8, #16
 802970c:	ed54 1a04 	vldr	s3, [r4, #-16]
 8029710:	ed13 4a04 	vldr	s8, [r3, #-16]
 8029714:	ed53 3a03 	vldr	s7, [r3, #-12]
 8029718:	ed53 5a02 	vldr	s11, [r3, #-8]
 802971c:	ed13 5a01 	vldr	s10, [r3, #-4]
 8029720:	ed54 6a03 	vldr	s13, [r4, #-12]
 8029724:	ed14 0a02 	vldr	s0, [r4, #-8]
 8029728:	ed16 2a04 	vldr	s4, [r6, #-16]
 802972c:	ed56 2a03 	vldr	s5, [r6, #-12]
 8029730:	ed15 6a03 	vldr	s12, [r5, #-12]
 8029734:	ed15 7a01 	vldr	s14, [r5, #-4]
 8029738:	ed15 3a04 	vldr	s6, [r5, #-16]
 802973c:	ed54 7a01 	vldr	s15, [r4, #-4]
 8029740:	ed56 0a02 	vldr	s1, [r6, #-8]
 8029744:	ed16 1a01 	vldr	s2, [r6, #-4]
 8029748:	ed55 4a02 	vldr	s9, [r5, #-8]
 802974c:	ee73 ba21 	vadd.f32	s23, s6, s3
 8029750:	ee36 ba26 	vadd.f32	s22, s12, s13
 8029754:	ee37 aa27 	vadd.f32	s20, s14, s15
 8029758:	ee72 9a04 	vadd.f32	s19, s4, s8
 802975c:	ee32 9aa3 	vadd.f32	s18, s5, s7
 8029760:	ee31 8a05 	vadd.f32	s16, s2, s10
 8029764:	ee74 aa80 	vadd.f32	s21, s9, s0
 8029768:	ee70 8aa5 	vadd.f32	s17, s1, s11
 802976c:	ed45 ba04 	vstr	s23, [r5, #-16]
 8029770:	ed05 ba03 	vstr	s22, [r5, #-12]
 8029774:	ed45 aa02 	vstr	s21, [r5, #-8]
 8029778:	ed05 aa01 	vstr	s20, [r5, #-4]
 802977c:	ed06 8a01 	vstr	s16, [r6, #-4]
 8029780:	ed46 9a04 	vstr	s19, [r6, #-16]
 8029784:	ed06 9a03 	vstr	s18, [r6, #-12]
 8029788:	ed46 8a02 	vstr	s17, [r6, #-8]
 802978c:	ee76 6a66 	vsub.f32	s13, s12, s13
 8029790:	ee73 3ae2 	vsub.f32	s7, s7, s5
 8029794:	ed12 6a03 	vldr	s12, [r2, #-12]
 8029798:	ed52 2a04 	vldr	s5, [r2, #-16]
 802979c:	ee33 3a61 	vsub.f32	s6, s6, s3
 80297a0:	ee34 4a42 	vsub.f32	s8, s8, s4
 80297a4:	ee26 8a86 	vmul.f32	s16, s13, s12
 80297a8:	ee24 2a06 	vmul.f32	s4, s8, s12
 80297ac:	ee63 1a22 	vmul.f32	s3, s6, s5
 80297b0:	ee24 4a22 	vmul.f32	s8, s8, s5
 80297b4:	ee23 3a06 	vmul.f32	s6, s6, s12
 80297b8:	ee66 6aa2 	vmul.f32	s13, s13, s5
 80297bc:	ee23 6a86 	vmul.f32	s12, s7, s12
 80297c0:	ee63 3aa2 	vmul.f32	s7, s7, s5
 80297c4:	ee36 6a04 	vadd.f32	s12, s12, s8
 80297c8:	ee76 6ac3 	vsub.f32	s13, s13, s6
 80297cc:	ee72 3a63 	vsub.f32	s7, s4, s7
 80297d0:	ee71 2a88 	vadd.f32	s5, s3, s16
 80297d4:	ed44 6a03 	vstr	s13, [r4, #-12]
 80297d8:	ed44 2a04 	vstr	s5, [r4, #-16]
 80297dc:	ed43 3a04 	vstr	s7, [r3, #-16]
 80297e0:	ed03 6a03 	vstr	s12, [r3, #-12]
 80297e4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80297e8:	ee75 6ae0 	vsub.f32	s13, s11, s1
 80297ec:	ed12 7a01 	vldr	s14, [r2, #-4]
 80297f0:	ed52 5a02 	vldr	s11, [r2, #-8]
 80297f4:	ee35 6a41 	vsub.f32	s12, s10, s2
 80297f8:	ee74 4ac0 	vsub.f32	s9, s9, s0
 80297fc:	ee67 3a87 	vmul.f32	s7, s15, s14
 8029800:	ee26 5a87 	vmul.f32	s10, s13, s14
 8029804:	ee24 4aa5 	vmul.f32	s8, s9, s11
 8029808:	ee67 7aa5 	vmul.f32	s15, s15, s11
 802980c:	ee64 4a87 	vmul.f32	s9, s9, s14
 8029810:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8029814:	ee26 7a07 	vmul.f32	s14, s12, s14
 8029818:	ee26 6a25 	vmul.f32	s12, s12, s11
 802981c:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8029820:	ee74 5a23 	vadd.f32	s11, s8, s7
 8029824:	ee35 6a46 	vsub.f32	s12, s10, s12
 8029828:	ee37 7a26 	vadd.f32	s14, s14, s13
 802982c:	f1be 0e01 	subs.w	lr, lr, #1
 8029830:	ed44 5a02 	vstr	s11, [r4, #-8]
 8029834:	f105 0510 	add.w	r5, r5, #16
 8029838:	ed44 7a01 	vstr	s15, [r4, #-4]
 802983c:	f106 0610 	add.w	r6, r6, #16
 8029840:	ed03 6a02 	vstr	s12, [r3, #-8]
 8029844:	ed03 7a01 	vstr	s14, [r3, #-4]
 8029848:	f102 0210 	add.w	r2, r2, #16
 802984c:	f104 0410 	add.w	r4, r4, #16
 8029850:	f103 0310 	add.w	r3, r3, #16
 8029854:	f47f af5a 	bne.w	802970c <arm_cfft_radix8by2_f32+0x34>
 8029858:	687a      	ldr	r2, [r7, #4]
 802985a:	fa1f f48c 	uxth.w	r4, ip
 802985e:	4608      	mov	r0, r1
 8029860:	2302      	movs	r3, #2
 8029862:	4621      	mov	r1, r4
 8029864:	f000 fbca 	bl	8029ffc <arm_radix8_butterfly_f32>
 8029868:	ecbd 8b08 	vpop	{d8-d11}
 802986c:	4640      	mov	r0, r8
 802986e:	4621      	mov	r1, r4
 8029870:	687a      	ldr	r2, [r7, #4]
 8029872:	2302      	movs	r3, #2
 8029874:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8029878:	f000 bbc0 	b.w	8029ffc <arm_radix8_butterfly_f32>

0802987c <arm_cfft_radix8by4_f32>:
 802987c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029880:	ed2d 8b0a 	vpush	{d8-d12}
 8029884:	8802      	ldrh	r2, [r0, #0]
 8029886:	ed91 6a00 	vldr	s12, [r1]
 802988a:	b08f      	sub	sp, #60	; 0x3c
 802988c:	460f      	mov	r7, r1
 802988e:	0852      	lsrs	r2, r2, #1
 8029890:	0093      	lsls	r3, r2, #2
 8029892:	900c      	str	r0, [sp, #48]	; 0x30
 8029894:	9103      	str	r1, [sp, #12]
 8029896:	6841      	ldr	r1, [r0, #4]
 8029898:	ed97 7a01 	vldr	s14, [r7, #4]
 802989c:	4638      	mov	r0, r7
 802989e:	4418      	add	r0, r3
 80298a0:	4606      	mov	r6, r0
 80298a2:	9009      	str	r0, [sp, #36]	; 0x24
 80298a4:	4418      	add	r0, r3
 80298a6:	edd0 6a00 	vldr	s13, [r0]
 80298aa:	edd6 3a00 	vldr	s7, [r6]
 80298ae:	edd6 2a01 	vldr	s5, [r6, #4]
 80298b2:	edd0 7a01 	vldr	s15, [r0, #4]
 80298b6:	900a      	str	r0, [sp, #40]	; 0x28
 80298b8:	ee76 5a26 	vadd.f32	s11, s12, s13
 80298bc:	4604      	mov	r4, r0
 80298be:	4625      	mov	r5, r4
 80298c0:	441c      	add	r4, r3
 80298c2:	ed94 4a00 	vldr	s8, [r4]
 80298c6:	ed94 5a01 	vldr	s10, [r4, #4]
 80298ca:	9401      	str	r4, [sp, #4]
 80298cc:	ee75 4aa3 	vadd.f32	s9, s11, s7
 80298d0:	4630      	mov	r0, r6
 80298d2:	ee74 4a24 	vadd.f32	s9, s8, s9
 80298d6:	463e      	mov	r6, r7
 80298d8:	ee14 ea90 	vmov	lr, s9
 80298dc:	ee76 6a66 	vsub.f32	s13, s12, s13
 80298e0:	f846 eb08 	str.w	lr, [r6], #8
 80298e4:	ee37 6a27 	vadd.f32	s12, s14, s15
 80298e8:	edd0 4a01 	vldr	s9, [r0, #4]
 80298ec:	9604      	str	r6, [sp, #16]
 80298ee:	ee77 7a67 	vsub.f32	s15, s14, s15
 80298f2:	9e01      	ldr	r6, [sp, #4]
 80298f4:	ee32 3aa6 	vadd.f32	s6, s5, s13
 80298f8:	ed96 2a01 	vldr	s4, [r6, #4]
 80298fc:	ee36 7a24 	vadd.f32	s14, s12, s9
 8029900:	ee75 5ae3 	vsub.f32	s11, s11, s7
 8029904:	ee77 4ae3 	vsub.f32	s9, s15, s7
 8029908:	ee36 6a62 	vsub.f32	s12, s12, s5
 802990c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8029910:	ee76 6ae2 	vsub.f32	s13, s13, s5
 8029914:	ee73 3a45 	vsub.f32	s7, s6, s10
 8029918:	4604      	mov	r4, r0
 802991a:	ee36 6a45 	vsub.f32	s12, s12, s10
 802991e:	ee75 6a26 	vadd.f32	s13, s10, s13
 8029922:	46a3      	mov	fp, r4
 8029924:	ee37 7a02 	vadd.f32	s14, s14, s4
 8029928:	ee34 5a84 	vadd.f32	s10, s9, s8
 802992c:	ee13 8a90 	vmov	r8, s7
 8029930:	46a4      	mov	ip, r4
 8029932:	ee75 5ac4 	vsub.f32	s11, s11, s8
 8029936:	ed87 7a01 	vstr	s14, [r7, #4]
 802993a:	f84b 8b08 	str.w	r8, [fp], #8
 802993e:	f1ac 0704 	sub.w	r7, ip, #4
 8029942:	ed8c 5a01 	vstr	s10, [ip, #4]
 8029946:	f101 0c08 	add.w	ip, r1, #8
 802994a:	462c      	mov	r4, r5
 802994c:	f8cd c014 	str.w	ip, [sp, #20]
 8029950:	ee15 ca90 	vmov	ip, s11
 8029954:	f844 cb08 	str.w	ip, [r4], #8
 8029958:	9407      	str	r4, [sp, #28]
 802995a:	f101 0410 	add.w	r4, r1, #16
 802995e:	ed85 6a01 	vstr	s12, [r5, #4]
 8029962:	0852      	lsrs	r2, r2, #1
 8029964:	9402      	str	r4, [sp, #8]
 8029966:	462c      	mov	r4, r5
 8029968:	f101 0518 	add.w	r5, r1, #24
 802996c:	920b      	str	r2, [sp, #44]	; 0x2c
 802996e:	46b2      	mov	sl, r6
 8029970:	9506      	str	r5, [sp, #24]
 8029972:	ee77 7ac4 	vsub.f32	s15, s15, s8
 8029976:	3a02      	subs	r2, #2
 8029978:	ee16 5a90 	vmov	r5, s13
 802997c:	46b6      	mov	lr, r6
 802997e:	4630      	mov	r0, r6
 8029980:	0852      	lsrs	r2, r2, #1
 8029982:	f84a 5b08 	str.w	r5, [sl], #8
 8029986:	f1a0 0604 	sub.w	r6, r0, #4
 802998a:	edce 7a01 	vstr	s15, [lr, #4]
 802998e:	9208      	str	r2, [sp, #32]
 8029990:	f000 8130 	beq.w	8029bf4 <arm_cfft_radix8by4_f32+0x378>
 8029994:	4691      	mov	r9, r2
 8029996:	9a03      	ldr	r2, [sp, #12]
 8029998:	f8dd 8008 	ldr.w	r8, [sp, #8]
 802999c:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 80299a0:	3b08      	subs	r3, #8
 80299a2:	f102 0510 	add.w	r5, r2, #16
 80299a6:	f101 0c20 	add.w	ip, r1, #32
 80299aa:	f1a4 020c 	sub.w	r2, r4, #12
 80299ae:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 80299b2:	4433      	add	r3, r6
 80299b4:	3410      	adds	r4, #16
 80299b6:	4650      	mov	r0, sl
 80299b8:	4659      	mov	r1, fp
 80299ba:	ed55 3a02 	vldr	s7, [r5, #-8]
 80299be:	ed14 5a02 	vldr	s10, [r4, #-8]
 80299c2:	ed91 7a00 	vldr	s14, [r1]
 80299c6:	edd0 7a00 	vldr	s15, [r0]
 80299ca:	ed15 4a01 	vldr	s8, [r5, #-4]
 80299ce:	ed54 5a01 	vldr	s11, [r4, #-4]
 80299d2:	edd0 6a01 	vldr	s13, [r0, #4]
 80299d6:	ed91 6a01 	vldr	s12, [r1, #4]
 80299da:	ee33 8a85 	vadd.f32	s16, s7, s10
 80299de:	ee34 0a25 	vadd.f32	s0, s8, s11
 80299e2:	ee78 4a07 	vadd.f32	s9, s16, s14
 80299e6:	ee74 5a65 	vsub.f32	s11, s8, s11
 80299ea:	ee77 4aa4 	vadd.f32	s9, s15, s9
 80299ee:	ee33 5ac5 	vsub.f32	s10, s7, s10
 80299f2:	ed45 4a02 	vstr	s9, [r5, #-8]
 80299f6:	edd1 4a01 	vldr	s9, [r1, #4]
 80299fa:	ed90 4a01 	vldr	s8, [r0, #4]
 80299fe:	ee70 4a24 	vadd.f32	s9, s0, s9
 8029a02:	ee76 aa05 	vadd.f32	s21, s12, s10
 8029a06:	ee74 4a84 	vadd.f32	s9, s9, s8
 8029a0a:	ee35 aac7 	vsub.f32	s20, s11, s14
 8029a0e:	ed45 4a01 	vstr	s9, [r5, #-4]
 8029a12:	edd6 1a00 	vldr	s3, [r6]
 8029a16:	edd7 0a00 	vldr	s1, [r7]
 8029a1a:	ed92 4a02 	vldr	s8, [r2, #8]
 8029a1e:	edd3 3a02 	vldr	s7, [r3, #8]
 8029a22:	ed93 2a01 	vldr	s4, [r3, #4]
 8029a26:	ed16 1a01 	vldr	s2, [r6, #-4]
 8029a2a:	edd2 2a01 	vldr	s5, [r2, #4]
 8029a2e:	ed57 9a01 	vldr	s19, [r7, #-4]
 8029a32:	ee70 4aa1 	vadd.f32	s9, s1, s3
 8029a36:	ee39 3a81 	vadd.f32	s6, s19, s2
 8029a3a:	ee74 8a84 	vadd.f32	s17, s9, s8
 8029a3e:	ee70 1ae1 	vsub.f32	s3, s1, s3
 8029a42:	ee73 8aa8 	vadd.f32	s17, s7, s17
 8029a46:	ee7a aae6 	vsub.f32	s21, s21, s13
 8029a4a:	ee18 aa90 	vmov	sl, s17
 8029a4e:	f847 a908 	str.w	sl, [r7], #-8
 8029a52:	edd2 8a01 	vldr	s17, [r2, #4]
 8029a56:	ed93 9a01 	vldr	s18, [r3, #4]
 8029a5a:	ee73 8a28 	vadd.f32	s17, s6, s17
 8029a5e:	ee3a aa27 	vadd.f32	s20, s20, s15
 8029a62:	ee78 8a89 	vadd.f32	s17, s17, s18
 8029a66:	ee74 0a63 	vsub.f32	s1, s8, s7
 8029a6a:	edc7 8a01 	vstr	s17, [r7, #4]
 8029a6e:	ed18 ba02 	vldr	s22, [r8, #-8]
 8029a72:	ed58 8a01 	vldr	s17, [r8, #-4]
 8029a76:	ee39 1ac1 	vsub.f32	s2, s19, s2
 8029a7a:	ee6a ba28 	vmul.f32	s23, s20, s17
 8029a7e:	ee2a ca8b 	vmul.f32	s24, s21, s22
 8029a82:	ee71 9ae2 	vsub.f32	s19, s3, s5
 8029a86:	ee30 9a81 	vadd.f32	s18, s1, s2
 8029a8a:	ee79 9a82 	vadd.f32	s19, s19, s4
 8029a8e:	ee3c ca2b 	vadd.f32	s24, s24, s23
 8029a92:	ee6a aaa8 	vmul.f32	s21, s21, s17
 8029a96:	ee69 baa8 	vmul.f32	s23, s19, s17
 8029a9a:	ee2a aa0b 	vmul.f32	s20, s20, s22
 8029a9e:	ee69 9a8b 	vmul.f32	s19, s19, s22
 8029aa2:	ee69 8a28 	vmul.f32	s17, s18, s17
 8029aa6:	ee29 ba0b 	vmul.f32	s22, s18, s22
 8029aaa:	ee1c aa10 	vmov	sl, s24
 8029aae:	ee78 8aa9 	vadd.f32	s17, s17, s19
 8029ab2:	f841 ab08 	str.w	sl, [r1], #8
 8029ab6:	ee3a aa6a 	vsub.f32	s20, s20, s21
 8029aba:	ee3b bacb 	vsub.f32	s22, s23, s22
 8029abe:	ee34 4ac4 	vsub.f32	s8, s9, s8
 8029ac2:	ee33 3a62 	vsub.f32	s6, s6, s5
 8029ac6:	ed01 aa01 	vstr	s20, [r1, #-4]
 8029aca:	edc2 8a01 	vstr	s17, [r2, #4]
 8029ace:	ed82 ba02 	vstr	s22, [r2, #8]
 8029ad2:	ed5c 4a04 	vldr	s9, [ip, #-16]
 8029ad6:	ee74 3a63 	vsub.f32	s7, s8, s7
 8029ada:	ee38 8a47 	vsub.f32	s16, s16, s14
 8029ade:	ed1c 4a03 	vldr	s8, [ip, #-12]
 8029ae2:	ee30 0a46 	vsub.f32	s0, s0, s12
 8029ae6:	ee33 3a42 	vsub.f32	s6, s6, s4
 8029aea:	ee38 8a67 	vsub.f32	s16, s16, s15
 8029aee:	ee30 0a66 	vsub.f32	s0, s0, s13
 8029af2:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 8029af6:	ee63 8a04 	vmul.f32	s17, s6, s8
 8029afa:	ee28 aa24 	vmul.f32	s20, s16, s9
 8029afe:	ee60 9a04 	vmul.f32	s19, s0, s8
 8029b02:	ee28 8a04 	vmul.f32	s16, s16, s8
 8029b06:	ee20 0a24 	vmul.f32	s0, s0, s9
 8029b0a:	ee63 3a84 	vmul.f32	s7, s7, s8
 8029b0e:	ee39 4a68 	vsub.f32	s8, s18, s17
 8029b12:	ee7a 9a29 	vadd.f32	s19, s20, s19
 8029b16:	ee14 aa10 	vmov	sl, s8
 8029b1a:	ee30 0a48 	vsub.f32	s0, s0, s16
 8029b1e:	ee63 4a24 	vmul.f32	s9, s6, s9
 8029b22:	ed44 9a02 	vstr	s19, [r4, #-8]
 8029b26:	ee73 3ae4 	vsub.f32	s7, s7, s9
 8029b2a:	ed04 0a01 	vstr	s0, [r4, #-4]
 8029b2e:	f846 a908 	str.w	sl, [r6], #-8
 8029b32:	ee35 6a46 	vsub.f32	s12, s10, s12
 8029b36:	ee35 7a87 	vadd.f32	s14, s11, s14
 8029b3a:	edc6 3a01 	vstr	s7, [r6, #4]
 8029b3e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8029b42:	ee77 7a67 	vsub.f32	s15, s14, s15
 8029b46:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 8029b4a:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 8029b4e:	ee67 5a86 	vmul.f32	s11, s15, s12
 8029b52:	ee26 5a87 	vmul.f32	s10, s13, s14
 8029b56:	ee72 2a62 	vsub.f32	s5, s4, s5
 8029b5a:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8029b5e:	ee72 2ae1 	vsub.f32	s5, s5, s3
 8029b62:	ee75 5a25 	vadd.f32	s11, s10, s11
 8029b66:	ee62 0a86 	vmul.f32	s1, s5, s12
 8029b6a:	ee66 6a86 	vmul.f32	s13, s13, s12
 8029b6e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8029b72:	ee21 6a06 	vmul.f32	s12, s2, s12
 8029b76:	ee62 2a87 	vmul.f32	s5, s5, s14
 8029b7a:	ee21 1a07 	vmul.f32	s2, s2, s14
 8029b7e:	ee15 aa90 	vmov	sl, s11
 8029b82:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8029b86:	f840 ab08 	str.w	sl, [r0], #8
 8029b8a:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8029b8e:	ee76 2a22 	vadd.f32	s5, s12, s5
 8029b92:	f1b9 0901 	subs.w	r9, r9, #1
 8029b96:	ed40 7a01 	vstr	s15, [r0, #-4]
 8029b9a:	f105 0508 	add.w	r5, r5, #8
 8029b9e:	ed83 1a02 	vstr	s2, [r3, #8]
 8029ba2:	edc3 2a01 	vstr	s5, [r3, #4]
 8029ba6:	f108 0808 	add.w	r8, r8, #8
 8029baa:	f1a2 0208 	sub.w	r2, r2, #8
 8029bae:	f10c 0c10 	add.w	ip, ip, #16
 8029bb2:	f104 0408 	add.w	r4, r4, #8
 8029bb6:	f10e 0e18 	add.w	lr, lr, #24
 8029bba:	f1a3 0308 	sub.w	r3, r3, #8
 8029bbe:	f47f aefc 	bne.w	80299ba <arm_cfft_radix8by4_f32+0x13e>
 8029bc2:	9908      	ldr	r1, [sp, #32]
 8029bc4:	9802      	ldr	r0, [sp, #8]
 8029bc6:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 8029bca:	00cb      	lsls	r3, r1, #3
 8029bcc:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 8029bd0:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8029bd4:	9102      	str	r1, [sp, #8]
 8029bd6:	9904      	ldr	r1, [sp, #16]
 8029bd8:	4419      	add	r1, r3
 8029bda:	9104      	str	r1, [sp, #16]
 8029bdc:	9905      	ldr	r1, [sp, #20]
 8029bde:	4419      	add	r1, r3
 8029be0:	9105      	str	r1, [sp, #20]
 8029be2:	9907      	ldr	r1, [sp, #28]
 8029be4:	449b      	add	fp, r3
 8029be6:	4419      	add	r1, r3
 8029be8:	449a      	add	sl, r3
 8029bea:	9b06      	ldr	r3, [sp, #24]
 8029bec:	9107      	str	r1, [sp, #28]
 8029bee:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8029bf2:	9306      	str	r3, [sp, #24]
 8029bf4:	9a04      	ldr	r2, [sp, #16]
 8029bf6:	9807      	ldr	r0, [sp, #28]
 8029bf8:	edd2 3a00 	vldr	s7, [r2]
 8029bfc:	ed90 4a00 	vldr	s8, [r0]
 8029c00:	eddb 7a00 	vldr	s15, [fp]
 8029c04:	ed9a 3a00 	vldr	s6, [sl]
 8029c08:	edd2 4a01 	vldr	s9, [r2, #4]
 8029c0c:	ed90 7a01 	vldr	s14, [r0, #4]
 8029c10:	ed9b 2a01 	vldr	s4, [fp, #4]
 8029c14:	edda 5a01 	vldr	s11, [sl, #4]
 8029c18:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8029c1c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8029c1e:	ee73 6a84 	vadd.f32	s13, s7, s8
 8029c22:	ee34 6a87 	vadd.f32	s12, s9, s14
 8029c26:	ee36 5aa7 	vadd.f32	s10, s13, s15
 8029c2a:	ee34 7ac7 	vsub.f32	s14, s9, s14
 8029c2e:	ee33 5a05 	vadd.f32	s10, s6, s10
 8029c32:	ee33 4ac4 	vsub.f32	s8, s7, s8
 8029c36:	ed82 5a00 	vstr	s10, [r2]
 8029c3a:	ed9b 5a01 	vldr	s10, [fp, #4]
 8029c3e:	edda 4a01 	vldr	s9, [sl, #4]
 8029c42:	ee36 5a05 	vadd.f32	s10, s12, s10
 8029c46:	ee72 3a04 	vadd.f32	s7, s4, s8
 8029c4a:	ee35 5a24 	vadd.f32	s10, s10, s9
 8029c4e:	ee77 4a67 	vsub.f32	s9, s14, s15
 8029c52:	ed82 5a01 	vstr	s10, [r2, #4]
 8029c56:	9a05      	ldr	r2, [sp, #20]
 8029c58:	ee34 5a83 	vadd.f32	s10, s9, s6
 8029c5c:	edd2 1a00 	vldr	s3, [r2]
 8029c60:	edd2 2a01 	vldr	s5, [r2, #4]
 8029c64:	9a02      	ldr	r2, [sp, #8]
 8029c66:	ee73 3ae5 	vsub.f32	s7, s7, s11
 8029c6a:	ee36 6a42 	vsub.f32	s12, s12, s4
 8029c6e:	ee63 4aa1 	vmul.f32	s9, s7, s3
 8029c72:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8029c76:	ee65 2a22 	vmul.f32	s5, s10, s5
 8029c7a:	ee25 5a21 	vmul.f32	s10, s10, s3
 8029c7e:	ee74 2aa2 	vadd.f32	s5, s9, s5
 8029c82:	ee35 5a63 	vsub.f32	s10, s10, s7
 8029c86:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8029c8a:	edcb 2a00 	vstr	s5, [fp]
 8029c8e:	ed8b 5a01 	vstr	s10, [fp, #4]
 8029c92:	edd2 3a01 	vldr	s7, [r2, #4]
 8029c96:	ed92 5a00 	vldr	s10, [r2]
 8029c9a:	9a06      	ldr	r2, [sp, #24]
 8029c9c:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8029ca0:	ee36 6a65 	vsub.f32	s12, s12, s11
 8029ca4:	ee66 4a85 	vmul.f32	s9, s13, s10
 8029ca8:	ee26 5a05 	vmul.f32	s10, s12, s10
 8029cac:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8029cb0:	ee26 6a23 	vmul.f32	s12, s12, s7
 8029cb4:	ee75 6a66 	vsub.f32	s13, s10, s13
 8029cb8:	ee34 6a86 	vadd.f32	s12, s9, s12
 8029cbc:	ee34 4a42 	vsub.f32	s8, s8, s4
 8029cc0:	ee37 7a27 	vadd.f32	s14, s14, s15
 8029cc4:	edc0 6a01 	vstr	s13, [r0, #4]
 8029cc8:	ed80 6a00 	vstr	s12, [r0]
 8029ccc:	ed92 6a01 	vldr	s12, [r2, #4]
 8029cd0:	9803      	ldr	r0, [sp, #12]
 8029cd2:	ee77 7a43 	vsub.f32	s15, s14, s6
 8029cd6:	ee75 5a84 	vadd.f32	s11, s11, s8
 8029cda:	ed92 7a00 	vldr	s14, [r2]
 8029cde:	ee65 6a87 	vmul.f32	s13, s11, s14
 8029ce2:	ee27 7a87 	vmul.f32	s14, s15, s14
 8029ce6:	ee65 5a86 	vmul.f32	s11, s11, s12
 8029cea:	ee67 7a86 	vmul.f32	s15, s15, s12
 8029cee:	ee77 5a65 	vsub.f32	s11, s14, s11
 8029cf2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8029cf6:	edca 5a01 	vstr	s11, [sl, #4]
 8029cfa:	edca 7a00 	vstr	s15, [sl]
 8029cfe:	6872      	ldr	r2, [r6, #4]
 8029d00:	4621      	mov	r1, r4
 8029d02:	2304      	movs	r3, #4
 8029d04:	f000 f97a 	bl	8029ffc <arm_radix8_butterfly_f32>
 8029d08:	9809      	ldr	r0, [sp, #36]	; 0x24
 8029d0a:	6872      	ldr	r2, [r6, #4]
 8029d0c:	4621      	mov	r1, r4
 8029d0e:	2304      	movs	r3, #4
 8029d10:	f000 f974 	bl	8029ffc <arm_radix8_butterfly_f32>
 8029d14:	980a      	ldr	r0, [sp, #40]	; 0x28
 8029d16:	6872      	ldr	r2, [r6, #4]
 8029d18:	4621      	mov	r1, r4
 8029d1a:	2304      	movs	r3, #4
 8029d1c:	f000 f96e 	bl	8029ffc <arm_radix8_butterfly_f32>
 8029d20:	9801      	ldr	r0, [sp, #4]
 8029d22:	6872      	ldr	r2, [r6, #4]
 8029d24:	4621      	mov	r1, r4
 8029d26:	2304      	movs	r3, #4
 8029d28:	b00f      	add	sp, #60	; 0x3c
 8029d2a:	ecbd 8b0a 	vpop	{d8-d12}
 8029d2e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029d32:	f000 b963 	b.w	8029ffc <arm_radix8_butterfly_f32>
 8029d36:	bf00      	nop

08029d38 <arm_cfft_f32>:
 8029d38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029d3c:	2a01      	cmp	r2, #1
 8029d3e:	4606      	mov	r6, r0
 8029d40:	4617      	mov	r7, r2
 8029d42:	460c      	mov	r4, r1
 8029d44:	4698      	mov	r8, r3
 8029d46:	8805      	ldrh	r5, [r0, #0]
 8029d48:	d054      	beq.n	8029df4 <arm_cfft_f32+0xbc>
 8029d4a:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 8029d4e:	d04c      	beq.n	8029dea <arm_cfft_f32+0xb2>
 8029d50:	d916      	bls.n	8029d80 <arm_cfft_f32+0x48>
 8029d52:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 8029d56:	d01a      	beq.n	8029d8e <arm_cfft_f32+0x56>
 8029d58:	d95c      	bls.n	8029e14 <arm_cfft_f32+0xdc>
 8029d5a:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 8029d5e:	d044      	beq.n	8029dea <arm_cfft_f32+0xb2>
 8029d60:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 8029d64:	d105      	bne.n	8029d72 <arm_cfft_f32+0x3a>
 8029d66:	4620      	mov	r0, r4
 8029d68:	4629      	mov	r1, r5
 8029d6a:	6872      	ldr	r2, [r6, #4]
 8029d6c:	2301      	movs	r3, #1
 8029d6e:	f000 f945 	bl	8029ffc <arm_radix8_butterfly_f32>
 8029d72:	f1b8 0f00 	cmp.w	r8, #0
 8029d76:	d111      	bne.n	8029d9c <arm_cfft_f32+0x64>
 8029d78:	2f01      	cmp	r7, #1
 8029d7a:	d016      	beq.n	8029daa <arm_cfft_f32+0x72>
 8029d7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029d80:	2d20      	cmp	r5, #32
 8029d82:	d032      	beq.n	8029dea <arm_cfft_f32+0xb2>
 8029d84:	d94a      	bls.n	8029e1c <arm_cfft_f32+0xe4>
 8029d86:	2d40      	cmp	r5, #64	; 0x40
 8029d88:	d0ed      	beq.n	8029d66 <arm_cfft_f32+0x2e>
 8029d8a:	2d80      	cmp	r5, #128	; 0x80
 8029d8c:	d1f1      	bne.n	8029d72 <arm_cfft_f32+0x3a>
 8029d8e:	4630      	mov	r0, r6
 8029d90:	4621      	mov	r1, r4
 8029d92:	f7ff fca1 	bl	80296d8 <arm_cfft_radix8by2_f32>
 8029d96:	f1b8 0f00 	cmp.w	r8, #0
 8029d9a:	d0ed      	beq.n	8029d78 <arm_cfft_f32+0x40>
 8029d9c:	4620      	mov	r0, r4
 8029d9e:	89b1      	ldrh	r1, [r6, #12]
 8029da0:	68b2      	ldr	r2, [r6, #8]
 8029da2:	f7d6 fa25 	bl	80001f0 <arm_bitreversal_32>
 8029da6:	2f01      	cmp	r7, #1
 8029da8:	d1e8      	bne.n	8029d7c <arm_cfft_f32+0x44>
 8029daa:	ee07 5a90 	vmov	s15, r5
 8029dae:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8029db2:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8029db6:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 8029dba:	2d00      	cmp	r5, #0
 8029dbc:	d0de      	beq.n	8029d7c <arm_cfft_f32+0x44>
 8029dbe:	f104 0108 	add.w	r1, r4, #8
 8029dc2:	2300      	movs	r3, #0
 8029dc4:	3301      	adds	r3, #1
 8029dc6:	429d      	cmp	r5, r3
 8029dc8:	f101 0108 	add.w	r1, r1, #8
 8029dcc:	ed11 7a04 	vldr	s14, [r1, #-16]
 8029dd0:	ed51 7a03 	vldr	s15, [r1, #-12]
 8029dd4:	ee27 7a26 	vmul.f32	s14, s14, s13
 8029dd8:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8029ddc:	ed01 7a04 	vstr	s14, [r1, #-16]
 8029de0:	ed41 7a03 	vstr	s15, [r1, #-12]
 8029de4:	d1ee      	bne.n	8029dc4 <arm_cfft_f32+0x8c>
 8029de6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029dea:	4630      	mov	r0, r6
 8029dec:	4621      	mov	r1, r4
 8029dee:	f7ff fd45 	bl	802987c <arm_cfft_radix8by4_f32>
 8029df2:	e7be      	b.n	8029d72 <arm_cfft_f32+0x3a>
 8029df4:	b1ad      	cbz	r5, 8029e22 <arm_cfft_f32+0xea>
 8029df6:	f101 030c 	add.w	r3, r1, #12
 8029dfa:	2200      	movs	r2, #0
 8029dfc:	ed53 7a02 	vldr	s15, [r3, #-8]
 8029e00:	3201      	adds	r2, #1
 8029e02:	eef1 7a67 	vneg.f32	s15, s15
 8029e06:	4295      	cmp	r5, r2
 8029e08:	ed43 7a02 	vstr	s15, [r3, #-8]
 8029e0c:	f103 0308 	add.w	r3, r3, #8
 8029e10:	d1f4      	bne.n	8029dfc <arm_cfft_f32+0xc4>
 8029e12:	e79a      	b.n	8029d4a <arm_cfft_f32+0x12>
 8029e14:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8029e18:	d0a5      	beq.n	8029d66 <arm_cfft_f32+0x2e>
 8029e1a:	e7aa      	b.n	8029d72 <arm_cfft_f32+0x3a>
 8029e1c:	2d10      	cmp	r5, #16
 8029e1e:	d0b6      	beq.n	8029d8e <arm_cfft_f32+0x56>
 8029e20:	e7a7      	b.n	8029d72 <arm_cfft_f32+0x3a>
 8029e22:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 8029e26:	d894      	bhi.n	8029d52 <arm_cfft_f32+0x1a>
 8029e28:	e7aa      	b.n	8029d80 <arm_cfft_f32+0x48>
 8029e2a:	bf00      	nop

08029e2c <arm_cmplx_mag_f32>:
 8029e2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029e30:	ea5f 0892 	movs.w	r8, r2, lsr #2
 8029e34:	b084      	sub	sp, #16
 8029e36:	d07f      	beq.n	8029f38 <arm_cmplx_mag_f32+0x10c>
 8029e38:	2700      	movs	r7, #0
 8029e3a:	f100 0420 	add.w	r4, r0, #32
 8029e3e:	f101 0510 	add.w	r5, r1, #16
 8029e42:	4646      	mov	r6, r8
 8029e44:	e05a      	b.n	8029efc <arm_cmplx_mag_f32+0xd0>
 8029e46:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8029e4a:	eeb4 0a40 	vcmp.f32	s0, s0
 8029e4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029e52:	f040 80a4 	bne.w	8029f9e <arm_cmplx_mag_f32+0x172>
 8029e56:	ed05 0a04 	vstr	s0, [r5, #-16]
 8029e5a:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 8029e5e:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 8029e62:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029e66:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029e6a:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029e6e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8029e72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029e76:	f2c0 808f 	blt.w	8029f98 <arm_cmplx_mag_f32+0x16c>
 8029e7a:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8029e7e:	eeb4 0a40 	vcmp.f32	s0, s0
 8029e82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029e86:	f040 80af 	bne.w	8029fe8 <arm_cmplx_mag_f32+0x1bc>
 8029e8a:	ed05 0a03 	vstr	s0, [r5, #-12]
 8029e8e:	ed54 7a04 	vldr	s15, [r4, #-16]
 8029e92:	ed14 0a03 	vldr	s0, [r4, #-12]
 8029e96:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029e9a:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029e9e:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029ea2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8029ea6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029eaa:	db72      	blt.n	8029f92 <arm_cmplx_mag_f32+0x166>
 8029eac:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8029eb0:	eeb4 0a40 	vcmp.f32	s0, s0
 8029eb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029eb8:	f040 808c 	bne.w	8029fd4 <arm_cmplx_mag_f32+0x1a8>
 8029ebc:	ed05 0a02 	vstr	s0, [r5, #-8]
 8029ec0:	ed54 7a02 	vldr	s15, [r4, #-8]
 8029ec4:	ed14 0a01 	vldr	s0, [r4, #-4]
 8029ec8:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029ecc:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029ed0:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029ed4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8029ed8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029edc:	db20      	blt.n	8029f20 <arm_cmplx_mag_f32+0xf4>
 8029ede:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8029ee2:	eeb4 0a40 	vcmp.f32	s0, s0
 8029ee6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029eea:	d169      	bne.n	8029fc0 <arm_cmplx_mag_f32+0x194>
 8029eec:	3e01      	subs	r6, #1
 8029eee:	ed05 0a01 	vstr	s0, [r5, #-4]
 8029ef2:	f104 0420 	add.w	r4, r4, #32
 8029ef6:	f105 0510 	add.w	r5, r5, #16
 8029efa:	d019      	beq.n	8029f30 <arm_cmplx_mag_f32+0x104>
 8029efc:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 8029f00:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 8029f04:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029f08:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029f0c:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029f10:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8029f14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029f18:	da95      	bge.n	8029e46 <arm_cmplx_mag_f32+0x1a>
 8029f1a:	f845 7c10 	str.w	r7, [r5, #-16]
 8029f1e:	e79c      	b.n	8029e5a <arm_cmplx_mag_f32+0x2e>
 8029f20:	3e01      	subs	r6, #1
 8029f22:	f845 7c04 	str.w	r7, [r5, #-4]
 8029f26:	f104 0420 	add.w	r4, r4, #32
 8029f2a:	f105 0510 	add.w	r5, r5, #16
 8029f2e:	d1e5      	bne.n	8029efc <arm_cmplx_mag_f32+0xd0>
 8029f30:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 8029f34:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 8029f38:	f012 0503 	ands.w	r5, r2, #3
 8029f3c:	d026      	beq.n	8029f8c <arm_cmplx_mag_f32+0x160>
 8029f3e:	2600      	movs	r6, #0
 8029f40:	f100 0408 	add.w	r4, r0, #8
 8029f44:	e00c      	b.n	8029f60 <arm_cmplx_mag_f32+0x134>
 8029f46:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8029f4a:	eeb4 0a40 	vcmp.f32	s0, s0
 8029f4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029f52:	d12e      	bne.n	8029fb2 <arm_cmplx_mag_f32+0x186>
 8029f54:	3d01      	subs	r5, #1
 8029f56:	ed01 0a01 	vstr	s0, [r1, #-4]
 8029f5a:	f104 0408 	add.w	r4, r4, #8
 8029f5e:	d015      	beq.n	8029f8c <arm_cmplx_mag_f32+0x160>
 8029f60:	ed54 7a02 	vldr	s15, [r4, #-8]
 8029f64:	ed14 0a01 	vldr	s0, [r4, #-4]
 8029f68:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029f6c:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029f70:	3104      	adds	r1, #4
 8029f72:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029f76:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8029f7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029f7e:	dae2      	bge.n	8029f46 <arm_cmplx_mag_f32+0x11a>
 8029f80:	3d01      	subs	r5, #1
 8029f82:	f841 6c04 	str.w	r6, [r1, #-4]
 8029f86:	f104 0408 	add.w	r4, r4, #8
 8029f8a:	d1e9      	bne.n	8029f60 <arm_cmplx_mag_f32+0x134>
 8029f8c:	b004      	add	sp, #16
 8029f8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029f92:	f845 7c08 	str.w	r7, [r5, #-8]
 8029f96:	e793      	b.n	8029ec0 <arm_cmplx_mag_f32+0x94>
 8029f98:	f845 7c0c 	str.w	r7, [r5, #-12]
 8029f9c:	e777      	b.n	8029e8e <arm_cmplx_mag_f32+0x62>
 8029f9e:	eeb0 0a67 	vmov.f32	s0, s15
 8029fa2:	9203      	str	r2, [sp, #12]
 8029fa4:	9102      	str	r1, [sp, #8]
 8029fa6:	9001      	str	r0, [sp, #4]
 8029fa8:	f000 fb38 	bl	802a61c <sqrtf>
 8029fac:	a801      	add	r0, sp, #4
 8029fae:	c807      	ldmia	r0, {r0, r1, r2}
 8029fb0:	e751      	b.n	8029e56 <arm_cmplx_mag_f32+0x2a>
 8029fb2:	eeb0 0a67 	vmov.f32	s0, s15
 8029fb6:	9101      	str	r1, [sp, #4]
 8029fb8:	f000 fb30 	bl	802a61c <sqrtf>
 8029fbc:	9901      	ldr	r1, [sp, #4]
 8029fbe:	e7c9      	b.n	8029f54 <arm_cmplx_mag_f32+0x128>
 8029fc0:	eeb0 0a67 	vmov.f32	s0, s15
 8029fc4:	9203      	str	r2, [sp, #12]
 8029fc6:	9102      	str	r1, [sp, #8]
 8029fc8:	9001      	str	r0, [sp, #4]
 8029fca:	f000 fb27 	bl	802a61c <sqrtf>
 8029fce:	a801      	add	r0, sp, #4
 8029fd0:	c807      	ldmia	r0, {r0, r1, r2}
 8029fd2:	e78b      	b.n	8029eec <arm_cmplx_mag_f32+0xc0>
 8029fd4:	eeb0 0a67 	vmov.f32	s0, s15
 8029fd8:	9203      	str	r2, [sp, #12]
 8029fda:	9102      	str	r1, [sp, #8]
 8029fdc:	9001      	str	r0, [sp, #4]
 8029fde:	f000 fb1d 	bl	802a61c <sqrtf>
 8029fe2:	a801      	add	r0, sp, #4
 8029fe4:	c807      	ldmia	r0, {r0, r1, r2}
 8029fe6:	e769      	b.n	8029ebc <arm_cmplx_mag_f32+0x90>
 8029fe8:	eeb0 0a67 	vmov.f32	s0, s15
 8029fec:	9203      	str	r2, [sp, #12]
 8029fee:	9102      	str	r1, [sp, #8]
 8029ff0:	9001      	str	r0, [sp, #4]
 8029ff2:	f000 fb13 	bl	802a61c <sqrtf>
 8029ff6:	a801      	add	r0, sp, #4
 8029ff8:	c807      	ldmia	r0, {r0, r1, r2}
 8029ffa:	e746      	b.n	8029e8a <arm_cmplx_mag_f32+0x5e>

08029ffc <arm_radix8_butterfly_f32>:
 8029ffc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a000:	ed2d 8b10 	vpush	{d8-d15}
 802a004:	b09d      	sub	sp, #116	; 0x74
 802a006:	461c      	mov	r4, r3
 802a008:	ed9f bac8 	vldr	s22, [pc, #800]	; 802a32c <arm_radix8_butterfly_f32+0x330>
 802a00c:	921a      	str	r2, [sp, #104]	; 0x68
 802a00e:	1d03      	adds	r3, r0, #4
 802a010:	4682      	mov	sl, r0
 802a012:	4689      	mov	r9, r1
 802a014:	468b      	mov	fp, r1
 802a016:	931b      	str	r3, [sp, #108]	; 0x6c
 802a018:	9400      	str	r4, [sp, #0]
 802a01a:	469e      	mov	lr, r3
 802a01c:	ea4f 03db 	mov.w	r3, fp, lsr #3
 802a020:	005a      	lsls	r2, r3, #1
 802a022:	18d6      	adds	r6, r2, r3
 802a024:	18f5      	adds	r5, r6, r3
 802a026:	9203      	str	r2, [sp, #12]
 802a028:	195a      	adds	r2, r3, r5
 802a02a:	18d0      	adds	r0, r2, r3
 802a02c:	00df      	lsls	r7, r3, #3
 802a02e:	1819      	adds	r1, r3, r0
 802a030:	463c      	mov	r4, r7
 802a032:	9701      	str	r7, [sp, #4]
 802a034:	4457      	add	r7, sl
 802a036:	930c      	str	r3, [sp, #48]	; 0x30
 802a038:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 802a03c:	011b      	lsls	r3, r3, #4
 802a03e:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 802a042:	eb07 0c04 	add.w	ip, r7, r4
 802a046:	9c00      	ldr	r4, [sp, #0]
 802a048:	9302      	str	r3, [sp, #8]
 802a04a:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 802a04e:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 802a052:	3204      	adds	r2, #4
 802a054:	3104      	adds	r1, #4
 802a056:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 802a05a:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 802a05e:	f04f 0800 	mov.w	r8, #0
 802a062:	eddc 7a00 	vldr	s15, [ip]
 802a066:	edd7 6a00 	vldr	s13, [r7]
 802a06a:	edd6 3a00 	vldr	s7, [r6]
 802a06e:	ed5e aa01 	vldr	s21, [lr, #-4]
 802a072:	edd5 4a00 	vldr	s9, [r5]
 802a076:	ed90 2a00 	vldr	s4, [r0]
 802a07a:	ed12 7a01 	vldr	s14, [r2, #-4]
 802a07e:	ed51 0a01 	vldr	s1, [r1, #-4]
 802a082:	ee77 8a82 	vadd.f32	s17, s15, s4
 802a086:	ee33 4aa0 	vadd.f32	s8, s7, s1
 802a08a:	ee76 1a87 	vadd.f32	s3, s13, s14
 802a08e:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 802a092:	ee31 6a84 	vadd.f32	s12, s3, s8
 802a096:	ee33 5a28 	vadd.f32	s10, s6, s17
 802a09a:	ee36 7ac7 	vsub.f32	s14, s13, s14
 802a09e:	ee75 6a06 	vadd.f32	s13, s10, s12
 802a0a2:	ee35 5a46 	vsub.f32	s10, s10, s12
 802a0a6:	ed4e 6a01 	vstr	s13, [lr, #-4]
 802a0aa:	ed85 5a00 	vstr	s10, [r5]
 802a0ae:	ed96 1a01 	vldr	s2, [r6, #4]
 802a0b2:	edd7 5a01 	vldr	s11, [r7, #4]
 802a0b6:	ed92 aa00 	vldr	s20, [r2]
 802a0ba:	ed91 6a00 	vldr	s12, [r1]
 802a0be:	ed9e 9a00 	vldr	s18, [lr]
 802a0c2:	ed95 5a01 	vldr	s10, [r5, #4]
 802a0c6:	eddc 6a01 	vldr	s13, [ip, #4]
 802a0ca:	edd0 9a01 	vldr	s19, [r0, #4]
 802a0ce:	ee73 0ae0 	vsub.f32	s1, s7, s1
 802a0d2:	ee71 2a46 	vsub.f32	s5, s2, s12
 802a0d6:	ee75 3aca 	vsub.f32	s7, s11, s20
 802a0da:	ee37 0a60 	vsub.f32	s0, s14, s1
 802a0de:	ee33 8aa2 	vadd.f32	s16, s7, s5
 802a0e2:	ee37 7a20 	vadd.f32	s14, s14, s1
 802a0e6:	ee73 2ae2 	vsub.f32	s5, s7, s5
 802a0ea:	ee37 2ac2 	vsub.f32	s4, s15, s4
 802a0ee:	ee79 3a05 	vadd.f32	s7, s18, s10
 802a0f2:	ee60 0a0b 	vmul.f32	s1, s0, s22
 802a0f6:	ee39 5a45 	vsub.f32	s10, s18, s10
 802a0fa:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 802a0fe:	ee36 9aa9 	vadd.f32	s18, s13, s19
 802a102:	ee75 5a8a 	vadd.f32	s11, s11, s20
 802a106:	ee31 6a06 	vadd.f32	s12, s2, s12
 802a10a:	ee76 6ae9 	vsub.f32	s13, s13, s19
 802a10e:	ee28 8a0b 	vmul.f32	s16, s16, s22
 802a112:	ee62 2a8b 	vmul.f32	s5, s5, s22
 802a116:	ee67 7a0b 	vmul.f32	s15, s14, s22
 802a11a:	ee33 3a68 	vsub.f32	s6, s6, s17
 802a11e:	ee36 0a88 	vadd.f32	s0, s13, s16
 802a122:	ee75 8a86 	vadd.f32	s17, s11, s12
 802a126:	ee36 7ac8 	vsub.f32	s14, s13, s16
 802a12a:	ee71 1ac4 	vsub.f32	s3, s3, s8
 802a12e:	ee75 6a62 	vsub.f32	s13, s10, s5
 802a132:	ee33 4ac9 	vsub.f32	s8, s7, s18
 802a136:	ee35 6ac6 	vsub.f32	s12, s11, s12
 802a13a:	ee33 1a89 	vadd.f32	s2, s7, s18
 802a13e:	ee74 5ae0 	vsub.f32	s11, s9, s1
 802a142:	ee74 3aa0 	vadd.f32	s7, s9, s1
 802a146:	ee75 4a22 	vadd.f32	s9, s10, s5
 802a14a:	ee32 5a27 	vadd.f32	s10, s4, s15
 802a14e:	ee72 7a67 	vsub.f32	s15, s4, s15
 802a152:	ee33 8a06 	vadd.f32	s16, s6, s12
 802a156:	ee75 2a87 	vadd.f32	s5, s11, s14
 802a15a:	ee31 9a28 	vadd.f32	s18, s2, s17
 802a15e:	ee33 6a46 	vsub.f32	s12, s6, s12
 802a162:	ee74 0a61 	vsub.f32	s1, s8, s3
 802a166:	ee33 2a80 	vadd.f32	s4, s7, s0
 802a16a:	ee35 7ac7 	vsub.f32	s14, s11, s14
 802a16e:	ee34 3ac5 	vsub.f32	s6, s9, s10
 802a172:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802a176:	ee31 1a68 	vsub.f32	s2, s2, s17
 802a17a:	ee34 4a21 	vadd.f32	s8, s8, s3
 802a17e:	ee73 3ac0 	vsub.f32	s7, s7, s0
 802a182:	ee74 4a85 	vadd.f32	s9, s9, s10
 802a186:	ee76 6aa7 	vadd.f32	s13, s13, s15
 802a18a:	44d8      	add	r8, fp
 802a18c:	45c1      	cmp	r9, r8
 802a18e:	ed8e 9a00 	vstr	s18, [lr]
 802a192:	ed85 1a01 	vstr	s2, [r5, #4]
 802a196:	449e      	add	lr, r3
 802a198:	ed8c 8a00 	vstr	s16, [ip]
 802a19c:	441d      	add	r5, r3
 802a19e:	ed80 6a00 	vstr	s12, [r0]
 802a1a2:	edcc 0a01 	vstr	s1, [ip, #4]
 802a1a6:	ed80 4a01 	vstr	s8, [r0, #4]
 802a1aa:	449c      	add	ip, r3
 802a1ac:	ed87 2a00 	vstr	s4, [r7]
 802a1b0:	4418      	add	r0, r3
 802a1b2:	ed41 3a01 	vstr	s7, [r1, #-4]
 802a1b6:	ed42 2a01 	vstr	s5, [r2, #-4]
 802a1ba:	ed86 7a00 	vstr	s14, [r6]
 802a1be:	ed87 3a01 	vstr	s6, [r7, #4]
 802a1c2:	edc1 4a00 	vstr	s9, [r1]
 802a1c6:	441f      	add	r7, r3
 802a1c8:	edc2 5a00 	vstr	s11, [r2]
 802a1cc:	4419      	add	r1, r3
 802a1ce:	edc6 6a01 	vstr	s13, [r6, #4]
 802a1d2:	441a      	add	r2, r3
 802a1d4:	441e      	add	r6, r3
 802a1d6:	f63f af44 	bhi.w	802a062 <arm_radix8_butterfly_f32+0x66>
 802a1da:	990c      	ldr	r1, [sp, #48]	; 0x30
 802a1dc:	2907      	cmp	r1, #7
 802a1de:	4620      	mov	r0, r4
 802a1e0:	f240 81e9 	bls.w	802a5b6 <arm_radix8_butterfly_f32+0x5ba>
 802a1e4:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 802a1e8:	193e      	adds	r6, r7, r4
 802a1ea:	1935      	adds	r5, r6, r4
 802a1ec:	9c03      	ldr	r4, [sp, #12]
 802a1ee:	9000      	str	r0, [sp, #0]
 802a1f0:	4622      	mov	r2, r4
 802a1f2:	3201      	adds	r2, #1
 802a1f4:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 802a1f8:	9900      	ldr	r1, [sp, #0]
 802a1fa:	1828      	adds	r0, r5, r0
 802a1fc:	eb00 0e01 	add.w	lr, r0, r1
 802a200:	990c      	ldr	r1, [sp, #48]	; 0x30
 802a202:	440a      	add	r2, r1
 802a204:	eb04 0c01 	add.w	ip, r4, r1
 802a208:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 802a20c:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 802a210:	9a00      	ldr	r2, [sp, #0]
 802a212:	940f      	str	r4, [sp, #60]	; 0x3c
 802a214:	00ed      	lsls	r5, r5, #3
 802a216:	9511      	str	r5, [sp, #68]	; 0x44
 802a218:	00d5      	lsls	r5, r2, #3
 802a21a:	950d      	str	r5, [sp, #52]	; 0x34
 802a21c:	9d01      	ldr	r5, [sp, #4]
 802a21e:	3508      	adds	r5, #8
 802a220:	9516      	str	r5, [sp, #88]	; 0x58
 802a222:	9d02      	ldr	r5, [sp, #8]
 802a224:	3508      	adds	r5, #8
 802a226:	0114      	lsls	r4, r2, #4
 802a228:	9517      	str	r5, [sp, #92]	; 0x5c
 802a22a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802a22c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802a22e:	940e      	str	r4, [sp, #56]	; 0x38
 802a230:	00c0      	lsls	r0, r0, #3
 802a232:	9010      	str	r0, [sp, #64]	; 0x40
 802a234:	18aa      	adds	r2, r5, r2
 802a236:	9207      	str	r2, [sp, #28]
 802a238:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802a23a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802a23c:	18aa      	adds	r2, r5, r2
 802a23e:	9208      	str	r2, [sp, #32]
 802a240:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802a242:	18aa      	adds	r2, r5, r2
 802a244:	9209      	str	r2, [sp, #36]	; 0x24
 802a246:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802a24a:	f10e 0204 	add.w	r2, lr, #4
 802a24e:	920a      	str	r2, [sp, #40]	; 0x28
 802a250:	00c9      	lsls	r1, r1, #3
 802a252:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802a254:	310c      	adds	r1, #12
 802a256:	00f6      	lsls	r6, r6, #3
 802a258:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 802a25c:	9114      	str	r1, [sp, #80]	; 0x50
 802a25e:	18a9      	adds	r1, r5, r2
 802a260:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802a262:	9612      	str	r6, [sp, #72]	; 0x48
 802a264:	00ff      	lsls	r7, r7, #3
 802a266:	19ae      	adds	r6, r5, r6
 802a268:	3008      	adds	r0, #8
 802a26a:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 802a26e:	9606      	str	r6, [sp, #24]
 802a270:	9019      	str	r0, [sp, #100]	; 0x64
 802a272:	18aa      	adds	r2, r5, r2
 802a274:	0164      	lsls	r4, r4, #5
 802a276:	19ee      	adds	r6, r5, r7
 802a278:	f10c 000c 	add.w	r0, ip, #12
 802a27c:	9713      	str	r7, [sp, #76]	; 0x4c
 802a27e:	9604      	str	r6, [sp, #16]
 802a280:	9015      	str	r0, [sp, #84]	; 0x54
 802a282:	9103      	str	r1, [sp, #12]
 802a284:	9205      	str	r2, [sp, #20]
 802a286:	f104 0208 	add.w	r2, r4, #8
 802a28a:	9218      	str	r2, [sp, #96]	; 0x60
 802a28c:	f04f 0801 	mov.w	r8, #1
 802a290:	2200      	movs	r2, #0
 802a292:	f102 0108 	add.w	r1, r2, #8
 802a296:	460f      	mov	r7, r1
 802a298:	910b      	str	r1, [sp, #44]	; 0x2c
 802a29a:	9918      	ldr	r1, [sp, #96]	; 0x60
 802a29c:	188e      	adds	r6, r1, r2
 802a29e:	9916      	ldr	r1, [sp, #88]	; 0x58
 802a2a0:	188d      	adds	r5, r1, r2
 802a2a2:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802a2a4:	188c      	adds	r4, r1, r2
 802a2a6:	9919      	ldr	r1, [sp, #100]	; 0x64
 802a2a8:	1888      	adds	r0, r1, r2
 802a2aa:	9914      	ldr	r1, [sp, #80]	; 0x50
 802a2ac:	eb01 0c02 	add.w	ip, r1, r2
 802a2b0:	9915      	ldr	r1, [sp, #84]	; 0x54
 802a2b2:	440a      	add	r2, r1
 802a2b4:	9903      	ldr	r1, [sp, #12]
 802a2b6:	edd1 fa00 	vldr	s31, [r1]
 802a2ba:	9905      	ldr	r1, [sp, #20]
 802a2bc:	ed91 fa00 	vldr	s30, [r1]
 802a2c0:	9904      	ldr	r1, [sp, #16]
 802a2c2:	edd1 ea00 	vldr	s29, [r1]
 802a2c6:	9906      	ldr	r1, [sp, #24]
 802a2c8:	ed91 ea00 	vldr	s28, [r1]
 802a2cc:	9909      	ldr	r1, [sp, #36]	; 0x24
 802a2ce:	edd1 da00 	vldr	s27, [r1]
 802a2d2:	9908      	ldr	r1, [sp, #32]
 802a2d4:	ed91 da00 	vldr	s26, [r1]
 802a2d8:	9907      	ldr	r1, [sp, #28]
 802a2da:	edd1 ca00 	vldr	s25, [r1]
 802a2de:	9903      	ldr	r1, [sp, #12]
 802a2e0:	ed91 ca01 	vldr	s24, [r1, #4]
 802a2e4:	9905      	ldr	r1, [sp, #20]
 802a2e6:	edd1 ba01 	vldr	s23, [r1, #4]
 802a2ea:	9904      	ldr	r1, [sp, #16]
 802a2ec:	edd1 aa01 	vldr	s21, [r1, #4]
 802a2f0:	9906      	ldr	r1, [sp, #24]
 802a2f2:	ed91 aa01 	vldr	s20, [r1, #4]
 802a2f6:	9909      	ldr	r1, [sp, #36]	; 0x24
 802a2f8:	edd1 7a01 	vldr	s15, [r1, #4]
 802a2fc:	9908      	ldr	r1, [sp, #32]
 802a2fe:	edcd 7a00 	vstr	s15, [sp]
 802a302:	edd1 7a01 	vldr	s15, [r1, #4]
 802a306:	9907      	ldr	r1, [sp, #28]
 802a308:	edcd 7a01 	vstr	s15, [sp, #4]
 802a30c:	edd1 7a01 	vldr	s15, [r1, #4]
 802a310:	eb0a 0e07 	add.w	lr, sl, r7
 802a314:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802a316:	edcd 7a02 	vstr	s15, [sp, #8]
 802a31a:	eb0c 010a 	add.w	r1, ip, sl
 802a31e:	4456      	add	r6, sl
 802a320:	4455      	add	r5, sl
 802a322:	4454      	add	r4, sl
 802a324:	4450      	add	r0, sl
 802a326:	4452      	add	r2, sl
 802a328:	46c4      	mov	ip, r8
 802a32a:	e001      	b.n	802a330 <arm_radix8_butterfly_f32+0x334>
 802a32c:	3f3504f3 	.word	0x3f3504f3
 802a330:	ed96 5a00 	vldr	s10, [r6]
 802a334:	ed52 9a01 	vldr	s19, [r2, #-4]
 802a338:	ed11 6a01 	vldr	s12, [r1, #-4]
 802a33c:	edd0 7a00 	vldr	s15, [r0]
 802a340:	ed17 7a01 	vldr	s14, [r7, #-4]
 802a344:	edde 3a00 	vldr	s7, [lr]
 802a348:	ed94 3a00 	vldr	s6, [r4]
 802a34c:	ed95 2a00 	vldr	s4, [r5]
 802a350:	ed9e 0a01 	vldr	s0, [lr, #4]
 802a354:	ee33 8a85 	vadd.f32	s16, s7, s10
 802a358:	ee32 1a06 	vadd.f32	s2, s4, s12
 802a35c:	ee33 4a29 	vadd.f32	s8, s6, s19
 802a360:	ee77 4a87 	vadd.f32	s9, s15, s14
 802a364:	ee78 1a04 	vadd.f32	s3, s16, s8
 802a368:	ee71 6a24 	vadd.f32	s13, s2, s9
 802a36c:	ee32 2a46 	vsub.f32	s4, s4, s12
 802a370:	ee31 6aa6 	vadd.f32	s12, s3, s13
 802a374:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a378:	ed8e 6a00 	vstr	s12, [lr]
 802a37c:	edd0 8a01 	vldr	s17, [r0, #4]
 802a380:	ed95 9a01 	vldr	s18, [r5, #4]
 802a384:	edd1 2a00 	vldr	s5, [r1]
 802a388:	ed97 7a00 	vldr	s14, [r7]
 802a38c:	edd4 0a01 	vldr	s1, [r4, #4]
 802a390:	ed96 6a01 	vldr	s12, [r6, #4]
 802a394:	edd2 5a00 	vldr	s11, [r2]
 802a398:	ee73 3ac5 	vsub.f32	s7, s7, s10
 802a39c:	ee33 3a69 	vsub.f32	s6, s6, s19
 802a3a0:	ee39 5a62 	vsub.f32	s10, s18, s5
 802a3a4:	ee78 9ac7 	vsub.f32	s19, s17, s14
 802a3a8:	ee38 4a44 	vsub.f32	s8, s16, s8
 802a3ac:	ee38 7a87 	vadd.f32	s14, s17, s14
 802a3b0:	ee30 8aa5 	vadd.f32	s16, s1, s11
 802a3b4:	ee79 2a22 	vadd.f32	s5, s18, s5
 802a3b8:	ee75 8a69 	vsub.f32	s17, s10, s19
 802a3bc:	ee32 9a27 	vadd.f32	s18, s4, s15
 802a3c0:	ee35 5a29 	vadd.f32	s10, s10, s19
 802a3c4:	ee72 7a67 	vsub.f32	s15, s4, s15
 802a3c8:	ee30 2a06 	vadd.f32	s4, s0, s12
 802a3cc:	ee69 9a0b 	vmul.f32	s19, s18, s22
 802a3d0:	ee70 5ae5 	vsub.f32	s11, s1, s11
 802a3d4:	ee32 9a08 	vadd.f32	s18, s4, s16
 802a3d8:	ee68 8a8b 	vmul.f32	s17, s17, s22
 802a3dc:	ee32 2a48 	vsub.f32	s4, s4, s16
 802a3e0:	ee71 4a64 	vsub.f32	s9, s2, s9
 802a3e4:	ee25 5a0b 	vmul.f32	s10, s10, s22
 802a3e8:	ee32 1a87 	vadd.f32	s2, s5, s14
 802a3ec:	ee67 7a8b 	vmul.f32	s15, s15, s22
 802a3f0:	ee72 2ac7 	vsub.f32	s5, s5, s14
 802a3f4:	ee30 6a46 	vsub.f32	s12, s0, s12
 802a3f8:	ee73 0a29 	vadd.f32	s1, s6, s19
 802a3fc:	ee36 0a28 	vadd.f32	s0, s12, s17
 802a400:	ee33 3a69 	vsub.f32	s6, s6, s19
 802a404:	ee32 7a64 	vsub.f32	s14, s4, s9
 802a408:	ee73 9aa7 	vadd.f32	s19, s7, s15
 802a40c:	ee36 6a68 	vsub.f32	s12, s12, s17
 802a410:	ee73 7ae7 	vsub.f32	s15, s7, s15
 802a414:	ee75 8a85 	vadd.f32	s17, s11, s10
 802a418:	ee74 3a22 	vadd.f32	s7, s8, s5
 802a41c:	ee35 5ac5 	vsub.f32	s10, s11, s10
 802a420:	ee71 6ae6 	vsub.f32	s13, s3, s13
 802a424:	ee79 1a41 	vsub.f32	s3, s18, s2
 802a428:	ee39 8aa8 	vadd.f32	s16, s19, s17
 802a42c:	ee76 5a43 	vsub.f32	s11, s12, s6
 802a430:	ee74 2a62 	vsub.f32	s5, s8, s5
 802a434:	ee72 4a24 	vadd.f32	s9, s4, s9
 802a438:	ee30 4a60 	vsub.f32	s8, s0, s1
 802a43c:	ee79 8ae8 	vsub.f32	s17, s19, s17
 802a440:	ee30 0a20 	vadd.f32	s0, s0, s1
 802a444:	ee77 9a85 	vadd.f32	s19, s15, s10
 802a448:	ee36 6a03 	vadd.f32	s12, s12, s6
 802a44c:	ee77 7ac5 	vsub.f32	s15, s15, s10
 802a450:	ee2e 2a21 	vmul.f32	s4, s28, s3
 802a454:	ee2e 5a26 	vmul.f32	s10, s28, s13
 802a458:	ee6f 0a23 	vmul.f32	s1, s30, s7
 802a45c:	ee2a 3a21 	vmul.f32	s6, s20, s3
 802a460:	ee39 1a01 	vadd.f32	s2, s18, s2
 802a464:	ee6a 6a26 	vmul.f32	s13, s20, s13
 802a468:	ee2b 9a87 	vmul.f32	s18, s23, s14
 802a46c:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 802a470:	ee2f 7a07 	vmul.f32	s14, s30, s14
 802a474:	ee6f 1a84 	vmul.f32	s3, s31, s8
 802a478:	ee35 3a03 	vadd.f32	s6, s10, s6
 802a47c:	ee72 6a66 	vsub.f32	s13, s4, s13
 802a480:	ee2c 5a04 	vmul.f32	s10, s24, s8
 802a484:	ee2f 2a88 	vmul.f32	s4, s31, s16
 802a488:	ed9d 4a02 	vldr	s8, [sp, #8]
 802a48c:	ed8e 1a01 	vstr	s2, [lr, #4]
 802a490:	ee77 3a63 	vsub.f32	s7, s14, s7
 802a494:	ee2c 8a08 	vmul.f32	s16, s24, s16
 802a498:	ed9d 7a01 	vldr	s14, [sp, #4]
 802a49c:	ed86 3a00 	vstr	s6, [r6]
 802a4a0:	ee30 9a89 	vadd.f32	s18, s1, s18
 802a4a4:	ee32 2a05 	vadd.f32	s4, s4, s10
 802a4a8:	ee6d 0a22 	vmul.f32	s1, s26, s5
 802a4ac:	ee31 8ac8 	vsub.f32	s16, s3, s16
 802a4b0:	ee67 2a22 	vmul.f32	s5, s14, s5
 802a4b4:	ee64 1a00 	vmul.f32	s3, s8, s0
 802a4b8:	ee27 7a24 	vmul.f32	s14, s14, s9
 802a4bc:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 802a4c0:	ee6d 4a24 	vmul.f32	s9, s26, s9
 802a4c4:	ee64 8a28 	vmul.f32	s17, s8, s17
 802a4c8:	ed9d 4a00 	vldr	s8, [sp]
 802a4cc:	edc6 6a01 	vstr	s13, [r6, #4]
 802a4d0:	ee74 2ae2 	vsub.f32	s5, s9, s5
 802a4d4:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 802a4d8:	ee64 9a29 	vmul.f32	s19, s8, s19
 802a4dc:	ee24 4a25 	vmul.f32	s8, s8, s11
 802a4e0:	ee30 7a87 	vadd.f32	s14, s1, s14
 802a4e4:	ee74 4a84 	vadd.f32	s9, s9, s8
 802a4e8:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 802a4ec:	ee2a 4a86 	vmul.f32	s8, s21, s12
 802a4f0:	ee2c 0a80 	vmul.f32	s0, s25, s0
 802a4f4:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 802a4f8:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 802a4fc:	ee2e 6a86 	vmul.f32	s12, s29, s12
 802a500:	ee75 1a21 	vadd.f32	s3, s10, s3
 802a504:	ee30 0a68 	vsub.f32	s0, s0, s17
 802a508:	ee75 9ae9 	vsub.f32	s19, s11, s19
 802a50c:	ee70 0a84 	vadd.f32	s1, s1, s8
 802a510:	ee36 6a67 	vsub.f32	s12, s12, s15
 802a514:	44dc      	add	ip, fp
 802a516:	45e1      	cmp	r9, ip
 802a518:	ed84 9a00 	vstr	s18, [r4]
 802a51c:	edc4 3a01 	vstr	s7, [r4, #4]
 802a520:	449e      	add	lr, r3
 802a522:	ed02 7a01 	vstr	s14, [r2, #-4]
 802a526:	edc2 2a00 	vstr	s5, [r2]
 802a52a:	441e      	add	r6, r3
 802a52c:	ed85 2a00 	vstr	s4, [r5]
 802a530:	ed85 8a01 	vstr	s16, [r5, #4]
 802a534:	441c      	add	r4, r3
 802a536:	ed47 1a01 	vstr	s3, [r7, #-4]
 802a53a:	ed87 0a00 	vstr	s0, [r7]
 802a53e:	441a      	add	r2, r3
 802a540:	ed41 4a01 	vstr	s9, [r1, #-4]
 802a544:	edc1 9a00 	vstr	s19, [r1]
 802a548:	441d      	add	r5, r3
 802a54a:	edc0 0a00 	vstr	s1, [r0]
 802a54e:	441f      	add	r7, r3
 802a550:	ed80 6a01 	vstr	s12, [r0, #4]
 802a554:	4419      	add	r1, r3
 802a556:	4418      	add	r0, r3
 802a558:	f63f aeea 	bhi.w	802a330 <arm_radix8_butterfly_f32+0x334>
 802a55c:	9a03      	ldr	r2, [sp, #12]
 802a55e:	990d      	ldr	r1, [sp, #52]	; 0x34
 802a560:	440a      	add	r2, r1
 802a562:	9203      	str	r2, [sp, #12]
 802a564:	990e      	ldr	r1, [sp, #56]	; 0x38
 802a566:	9a05      	ldr	r2, [sp, #20]
 802a568:	440a      	add	r2, r1
 802a56a:	9205      	str	r2, [sp, #20]
 802a56c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 802a56e:	9a04      	ldr	r2, [sp, #16]
 802a570:	440a      	add	r2, r1
 802a572:	9204      	str	r2, [sp, #16]
 802a574:	9912      	ldr	r1, [sp, #72]	; 0x48
 802a576:	9a06      	ldr	r2, [sp, #24]
 802a578:	440a      	add	r2, r1
 802a57a:	9206      	str	r2, [sp, #24]
 802a57c:	9911      	ldr	r1, [sp, #68]	; 0x44
 802a57e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802a580:	440a      	add	r2, r1
 802a582:	9209      	str	r2, [sp, #36]	; 0x24
 802a584:	9910      	ldr	r1, [sp, #64]	; 0x40
 802a586:	9a08      	ldr	r2, [sp, #32]
 802a588:	440a      	add	r2, r1
 802a58a:	9208      	str	r2, [sp, #32]
 802a58c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802a58e:	9a07      	ldr	r2, [sp, #28]
 802a590:	440a      	add	r2, r1
 802a592:	9207      	str	r2, [sp, #28]
 802a594:	990c      	ldr	r1, [sp, #48]	; 0x30
 802a596:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802a598:	f108 0801 	add.w	r8, r8, #1
 802a59c:	3208      	adds	r2, #8
 802a59e:	4588      	cmp	r8, r1
 802a5a0:	920a      	str	r2, [sp, #40]	; 0x28
 802a5a2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802a5a4:	f47f ae75 	bne.w	802a292 <arm_radix8_butterfly_f32+0x296>
 802a5a8:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 802a5ac:	9300      	str	r3, [sp, #0]
 802a5ae:	46c3      	mov	fp, r8
 802a5b0:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 802a5b4:	e532      	b.n	802a01c <arm_radix8_butterfly_f32+0x20>
 802a5b6:	b01d      	add	sp, #116	; 0x74
 802a5b8:	ecbd 8b10 	vpop	{d8-d15}
 802a5bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802a5c0 <__aeabi_atexit>:
 802a5c0:	460b      	mov	r3, r1
 802a5c2:	4601      	mov	r1, r0
 802a5c4:	4618      	mov	r0, r3
 802a5c6:	f000 bef3 	b.w	802b3b0 <__cxa_atexit>

0802a5ca <_ZdlPvj>:
 802a5ca:	f000 b812 	b.w	802a5f2 <_ZdlPv>

0802a5ce <__cxa_guard_acquire>:
 802a5ce:	6803      	ldr	r3, [r0, #0]
 802a5d0:	07db      	lsls	r3, r3, #31
 802a5d2:	d406      	bmi.n	802a5e2 <__cxa_guard_acquire+0x14>
 802a5d4:	7843      	ldrb	r3, [r0, #1]
 802a5d6:	b103      	cbz	r3, 802a5da <__cxa_guard_acquire+0xc>
 802a5d8:	deff      	udf	#255	; 0xff
 802a5da:	2301      	movs	r3, #1
 802a5dc:	7043      	strb	r3, [r0, #1]
 802a5de:	4618      	mov	r0, r3
 802a5e0:	4770      	bx	lr
 802a5e2:	2000      	movs	r0, #0
 802a5e4:	4770      	bx	lr

0802a5e6 <__cxa_guard_release>:
 802a5e6:	2301      	movs	r3, #1
 802a5e8:	6003      	str	r3, [r0, #0]
 802a5ea:	4770      	bx	lr

0802a5ec <__cxa_pure_virtual>:
 802a5ec:	b508      	push	{r3, lr}
 802a5ee:	f000 f80f 	bl	802a610 <_ZSt9terminatev>

0802a5f2 <_ZdlPv>:
 802a5f2:	f000 be29 	b.w	802b248 <free>

0802a5f6 <_ZN10__cxxabiv111__terminateEPFvvE>:
 802a5f6:	b508      	push	{r3, lr}
 802a5f8:	4780      	blx	r0
 802a5fa:	f000 fdf1 	bl	802b1e0 <abort>
	...

0802a600 <_ZSt13get_terminatev>:
 802a600:	4b02      	ldr	r3, [pc, #8]	; (802a60c <_ZSt13get_terminatev+0xc>)
 802a602:	6818      	ldr	r0, [r3, #0]
 802a604:	f3bf 8f5b 	dmb	ish
 802a608:	4770      	bx	lr
 802a60a:	bf00      	nop
 802a60c:	20000104 	.word	0x20000104

0802a610 <_ZSt9terminatev>:
 802a610:	b508      	push	{r3, lr}
 802a612:	f7ff fff5 	bl	802a600 <_ZSt13get_terminatev>
 802a616:	f7ff ffee 	bl	802a5f6 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0802a61c <sqrtf>:
 802a61c:	b508      	push	{r3, lr}
 802a61e:	ed2d 8b02 	vpush	{d8}
 802a622:	eeb0 8a40 	vmov.f32	s16, s0
 802a626:	f000 f8a1 	bl	802a76c <__ieee754_sqrtf>
 802a62a:	eeb4 8a48 	vcmp.f32	s16, s16
 802a62e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a632:	d60c      	bvs.n	802a64e <sqrtf+0x32>
 802a634:	eddf 8a07 	vldr	s17, [pc, #28]	; 802a654 <sqrtf+0x38>
 802a638:	eeb4 8ae8 	vcmpe.f32	s16, s17
 802a63c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a640:	d505      	bpl.n	802a64e <sqrtf+0x32>
 802a642:	f001 f8d3 	bl	802b7ec <__errno>
 802a646:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802a64a:	2321      	movs	r3, #33	; 0x21
 802a64c:	6003      	str	r3, [r0, #0]
 802a64e:	ecbd 8b02 	vpop	{d8}
 802a652:	bd08      	pop	{r3, pc}
 802a654:	00000000 	.word	0x00000000

0802a658 <cosf>:
 802a658:	ee10 3a10 	vmov	r3, s0
 802a65c:	b507      	push	{r0, r1, r2, lr}
 802a65e:	4a1e      	ldr	r2, [pc, #120]	; (802a6d8 <cosf+0x80>)
 802a660:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a664:	4293      	cmp	r3, r2
 802a666:	dc06      	bgt.n	802a676 <cosf+0x1e>
 802a668:	eddf 0a1c 	vldr	s1, [pc, #112]	; 802a6dc <cosf+0x84>
 802a66c:	b003      	add	sp, #12
 802a66e:	f85d eb04 	ldr.w	lr, [sp], #4
 802a672:	f000 b903 	b.w	802a87c <__kernel_cosf>
 802a676:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802a67a:	db04      	blt.n	802a686 <cosf+0x2e>
 802a67c:	ee30 0a40 	vsub.f32	s0, s0, s0
 802a680:	b003      	add	sp, #12
 802a682:	f85d fb04 	ldr.w	pc, [sp], #4
 802a686:	4668      	mov	r0, sp
 802a688:	f000 f99e 	bl	802a9c8 <__ieee754_rem_pio2f>
 802a68c:	f000 0003 	and.w	r0, r0, #3
 802a690:	2801      	cmp	r0, #1
 802a692:	d009      	beq.n	802a6a8 <cosf+0x50>
 802a694:	2802      	cmp	r0, #2
 802a696:	d010      	beq.n	802a6ba <cosf+0x62>
 802a698:	b9b0      	cbnz	r0, 802a6c8 <cosf+0x70>
 802a69a:	eddd 0a01 	vldr	s1, [sp, #4]
 802a69e:	ed9d 0a00 	vldr	s0, [sp]
 802a6a2:	f000 f8eb 	bl	802a87c <__kernel_cosf>
 802a6a6:	e7eb      	b.n	802a680 <cosf+0x28>
 802a6a8:	eddd 0a01 	vldr	s1, [sp, #4]
 802a6ac:	ed9d 0a00 	vldr	s0, [sp]
 802a6b0:	f000 f942 	bl	802a938 <__kernel_sinf>
 802a6b4:	eeb1 0a40 	vneg.f32	s0, s0
 802a6b8:	e7e2      	b.n	802a680 <cosf+0x28>
 802a6ba:	eddd 0a01 	vldr	s1, [sp, #4]
 802a6be:	ed9d 0a00 	vldr	s0, [sp]
 802a6c2:	f000 f8db 	bl	802a87c <__kernel_cosf>
 802a6c6:	e7f5      	b.n	802a6b4 <cosf+0x5c>
 802a6c8:	eddd 0a01 	vldr	s1, [sp, #4]
 802a6cc:	ed9d 0a00 	vldr	s0, [sp]
 802a6d0:	2001      	movs	r0, #1
 802a6d2:	f000 f931 	bl	802a938 <__kernel_sinf>
 802a6d6:	e7d3      	b.n	802a680 <cosf+0x28>
 802a6d8:	3f490fd8 	.word	0x3f490fd8
 802a6dc:	00000000 	.word	0x00000000

0802a6e0 <sinf>:
 802a6e0:	ee10 3a10 	vmov	r3, s0
 802a6e4:	b507      	push	{r0, r1, r2, lr}
 802a6e6:	4a1f      	ldr	r2, [pc, #124]	; (802a764 <sinf+0x84>)
 802a6e8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a6ec:	4293      	cmp	r3, r2
 802a6ee:	dc07      	bgt.n	802a700 <sinf+0x20>
 802a6f0:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802a768 <sinf+0x88>
 802a6f4:	2000      	movs	r0, #0
 802a6f6:	b003      	add	sp, #12
 802a6f8:	f85d eb04 	ldr.w	lr, [sp], #4
 802a6fc:	f000 b91c 	b.w	802a938 <__kernel_sinf>
 802a700:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802a704:	db04      	blt.n	802a710 <sinf+0x30>
 802a706:	ee30 0a40 	vsub.f32	s0, s0, s0
 802a70a:	b003      	add	sp, #12
 802a70c:	f85d fb04 	ldr.w	pc, [sp], #4
 802a710:	4668      	mov	r0, sp
 802a712:	f000 f959 	bl	802a9c8 <__ieee754_rem_pio2f>
 802a716:	f000 0003 	and.w	r0, r0, #3
 802a71a:	2801      	cmp	r0, #1
 802a71c:	d00a      	beq.n	802a734 <sinf+0x54>
 802a71e:	2802      	cmp	r0, #2
 802a720:	d00f      	beq.n	802a742 <sinf+0x62>
 802a722:	b9c0      	cbnz	r0, 802a756 <sinf+0x76>
 802a724:	eddd 0a01 	vldr	s1, [sp, #4]
 802a728:	ed9d 0a00 	vldr	s0, [sp]
 802a72c:	2001      	movs	r0, #1
 802a72e:	f000 f903 	bl	802a938 <__kernel_sinf>
 802a732:	e7ea      	b.n	802a70a <sinf+0x2a>
 802a734:	eddd 0a01 	vldr	s1, [sp, #4]
 802a738:	ed9d 0a00 	vldr	s0, [sp]
 802a73c:	f000 f89e 	bl	802a87c <__kernel_cosf>
 802a740:	e7e3      	b.n	802a70a <sinf+0x2a>
 802a742:	eddd 0a01 	vldr	s1, [sp, #4]
 802a746:	ed9d 0a00 	vldr	s0, [sp]
 802a74a:	2001      	movs	r0, #1
 802a74c:	f000 f8f4 	bl	802a938 <__kernel_sinf>
 802a750:	eeb1 0a40 	vneg.f32	s0, s0
 802a754:	e7d9      	b.n	802a70a <sinf+0x2a>
 802a756:	eddd 0a01 	vldr	s1, [sp, #4]
 802a75a:	ed9d 0a00 	vldr	s0, [sp]
 802a75e:	f000 f88d 	bl	802a87c <__kernel_cosf>
 802a762:	e7f5      	b.n	802a750 <sinf+0x70>
 802a764:	3f490fd8 	.word	0x3f490fd8
 802a768:	00000000 	.word	0x00000000

0802a76c <__ieee754_sqrtf>:
 802a76c:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802a770:	4770      	bx	lr
	...

0802a774 <ceilf>:
 802a774:	ee10 3a10 	vmov	r3, s0
 802a778:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a77c:	3a7f      	subs	r2, #127	; 0x7f
 802a77e:	2a16      	cmp	r2, #22
 802a780:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a784:	dc2a      	bgt.n	802a7dc <ceilf+0x68>
 802a786:	2a00      	cmp	r2, #0
 802a788:	da11      	bge.n	802a7ae <ceilf+0x3a>
 802a78a:	eddf 7a19 	vldr	s15, [pc, #100]	; 802a7f0 <ceilf+0x7c>
 802a78e:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a792:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a796:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a79a:	dd05      	ble.n	802a7a8 <ceilf+0x34>
 802a79c:	2b00      	cmp	r3, #0
 802a79e:	db23      	blt.n	802a7e8 <ceilf+0x74>
 802a7a0:	2900      	cmp	r1, #0
 802a7a2:	bf18      	it	ne
 802a7a4:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802a7a8:	ee00 3a10 	vmov	s0, r3
 802a7ac:	4770      	bx	lr
 802a7ae:	4911      	ldr	r1, [pc, #68]	; (802a7f4 <ceilf+0x80>)
 802a7b0:	4111      	asrs	r1, r2
 802a7b2:	420b      	tst	r3, r1
 802a7b4:	d0fa      	beq.n	802a7ac <ceilf+0x38>
 802a7b6:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a7f0 <ceilf+0x7c>
 802a7ba:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a7be:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a7c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a7c6:	ddef      	ble.n	802a7a8 <ceilf+0x34>
 802a7c8:	2b00      	cmp	r3, #0
 802a7ca:	bfc2      	ittt	gt
 802a7cc:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802a7d0:	fa40 f202 	asrgt.w	r2, r0, r2
 802a7d4:	189b      	addgt	r3, r3, r2
 802a7d6:	ea23 0301 	bic.w	r3, r3, r1
 802a7da:	e7e5      	b.n	802a7a8 <ceilf+0x34>
 802a7dc:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a7e0:	d3e4      	bcc.n	802a7ac <ceilf+0x38>
 802a7e2:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a7e6:	4770      	bx	lr
 802a7e8:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802a7ec:	e7dc      	b.n	802a7a8 <ceilf+0x34>
 802a7ee:	bf00      	nop
 802a7f0:	7149f2ca 	.word	0x7149f2ca
 802a7f4:	007fffff 	.word	0x007fffff

0802a7f8 <floorf>:
 802a7f8:	ee10 3a10 	vmov	r3, s0
 802a7fc:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a800:	3a7f      	subs	r2, #127	; 0x7f
 802a802:	2a16      	cmp	r2, #22
 802a804:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a808:	dc2a      	bgt.n	802a860 <floorf+0x68>
 802a80a:	2a00      	cmp	r2, #0
 802a80c:	da11      	bge.n	802a832 <floorf+0x3a>
 802a80e:	eddf 7a18 	vldr	s15, [pc, #96]	; 802a870 <floorf+0x78>
 802a812:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a816:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a81a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a81e:	dd05      	ble.n	802a82c <floorf+0x34>
 802a820:	2b00      	cmp	r3, #0
 802a822:	da23      	bge.n	802a86c <floorf+0x74>
 802a824:	4a13      	ldr	r2, [pc, #76]	; (802a874 <floorf+0x7c>)
 802a826:	2900      	cmp	r1, #0
 802a828:	bf18      	it	ne
 802a82a:	4613      	movne	r3, r2
 802a82c:	ee00 3a10 	vmov	s0, r3
 802a830:	4770      	bx	lr
 802a832:	4911      	ldr	r1, [pc, #68]	; (802a878 <floorf+0x80>)
 802a834:	4111      	asrs	r1, r2
 802a836:	420b      	tst	r3, r1
 802a838:	d0fa      	beq.n	802a830 <floorf+0x38>
 802a83a:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802a870 <floorf+0x78>
 802a83e:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a842:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a846:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a84a:	ddef      	ble.n	802a82c <floorf+0x34>
 802a84c:	2b00      	cmp	r3, #0
 802a84e:	bfbe      	ittt	lt
 802a850:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802a854:	fa40 f202 	asrlt.w	r2, r0, r2
 802a858:	189b      	addlt	r3, r3, r2
 802a85a:	ea23 0301 	bic.w	r3, r3, r1
 802a85e:	e7e5      	b.n	802a82c <floorf+0x34>
 802a860:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a864:	d3e4      	bcc.n	802a830 <floorf+0x38>
 802a866:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a86a:	4770      	bx	lr
 802a86c:	2300      	movs	r3, #0
 802a86e:	e7dd      	b.n	802a82c <floorf+0x34>
 802a870:	7149f2ca 	.word	0x7149f2ca
 802a874:	bf800000 	.word	0xbf800000
 802a878:	007fffff 	.word	0x007fffff

0802a87c <__kernel_cosf>:
 802a87c:	ee10 3a10 	vmov	r3, s0
 802a880:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a884:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a888:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802a88c:	da05      	bge.n	802a89a <__kernel_cosf+0x1e>
 802a88e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a892:	ee17 2a90 	vmov	r2, s15
 802a896:	2a00      	cmp	r2, #0
 802a898:	d03b      	beq.n	802a912 <__kernel_cosf+0x96>
 802a89a:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a89e:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802a918 <__kernel_cosf+0x9c>
 802a8a2:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802a91c <__kernel_cosf+0xa0>
 802a8a6:	4a1e      	ldr	r2, [pc, #120]	; (802a920 <__kernel_cosf+0xa4>)
 802a8a8:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a8ac:	4293      	cmp	r3, r2
 802a8ae:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802a924 <__kernel_cosf+0xa8>
 802a8b2:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a8b6:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802a928 <__kernel_cosf+0xac>
 802a8ba:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a8be:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802a92c <__kernel_cosf+0xb0>
 802a8c2:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a8c6:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802a930 <__kernel_cosf+0xb4>
 802a8ca:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a8ce:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802a8d2:	ee26 6a07 	vmul.f32	s12, s12, s14
 802a8d6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a8da:	eee7 0a06 	vfma.f32	s1, s14, s12
 802a8de:	ee67 7a27 	vmul.f32	s15, s14, s15
 802a8e2:	dc04      	bgt.n	802a8ee <__kernel_cosf+0x72>
 802a8e4:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802a8e8:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802a8ec:	4770      	bx	lr
 802a8ee:	4a11      	ldr	r2, [pc, #68]	; (802a934 <__kernel_cosf+0xb8>)
 802a8f0:	4293      	cmp	r3, r2
 802a8f2:	bfda      	itte	le
 802a8f4:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802a8f8:	ee07 3a10 	vmovle	s14, r3
 802a8fc:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802a900:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a904:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802a908:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802a90c:	ee30 0a67 	vsub.f32	s0, s0, s15
 802a910:	4770      	bx	lr
 802a912:	eeb0 0a66 	vmov.f32	s0, s13
 802a916:	4770      	bx	lr
 802a918:	ad47d74e 	.word	0xad47d74e
 802a91c:	310f74f6 	.word	0x310f74f6
 802a920:	3e999999 	.word	0x3e999999
 802a924:	b493f27c 	.word	0xb493f27c
 802a928:	37d00d01 	.word	0x37d00d01
 802a92c:	bab60b61 	.word	0xbab60b61
 802a930:	3d2aaaab 	.word	0x3d2aaaab
 802a934:	3f480000 	.word	0x3f480000

0802a938 <__kernel_sinf>:
 802a938:	ee10 3a10 	vmov	r3, s0
 802a93c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a940:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a944:	da04      	bge.n	802a950 <__kernel_sinf+0x18>
 802a946:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a94a:	ee17 3a90 	vmov	r3, s15
 802a94e:	b35b      	cbz	r3, 802a9a8 <__kernel_sinf+0x70>
 802a950:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a954:	eddf 7a15 	vldr	s15, [pc, #84]	; 802a9ac <__kernel_sinf+0x74>
 802a958:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802a9b0 <__kernel_sinf+0x78>
 802a95c:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a960:	eddf 7a14 	vldr	s15, [pc, #80]	; 802a9b4 <__kernel_sinf+0x7c>
 802a964:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a968:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802a9b8 <__kernel_sinf+0x80>
 802a96c:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a970:	eddf 7a12 	vldr	s15, [pc, #72]	; 802a9bc <__kernel_sinf+0x84>
 802a974:	ee60 6a07 	vmul.f32	s13, s0, s14
 802a978:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a97c:	b930      	cbnz	r0, 802a98c <__kernel_sinf+0x54>
 802a97e:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802a9c0 <__kernel_sinf+0x88>
 802a982:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a986:	eea6 0a26 	vfma.f32	s0, s12, s13
 802a98a:	4770      	bx	lr
 802a98c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802a990:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802a994:	eee0 7a86 	vfma.f32	s15, s1, s12
 802a998:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802a99c:	eddf 7a09 	vldr	s15, [pc, #36]	; 802a9c4 <__kernel_sinf+0x8c>
 802a9a0:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802a9a4:	ee30 0a60 	vsub.f32	s0, s0, s1
 802a9a8:	4770      	bx	lr
 802a9aa:	bf00      	nop
 802a9ac:	2f2ec9d3 	.word	0x2f2ec9d3
 802a9b0:	b2d72f34 	.word	0xb2d72f34
 802a9b4:	3638ef1b 	.word	0x3638ef1b
 802a9b8:	b9500d01 	.word	0xb9500d01
 802a9bc:	3c088889 	.word	0x3c088889
 802a9c0:	be2aaaab 	.word	0xbe2aaaab
 802a9c4:	3e2aaaab 	.word	0x3e2aaaab

0802a9c8 <__ieee754_rem_pio2f>:
 802a9c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 802a9ca:	ee10 6a10 	vmov	r6, s0
 802a9ce:	4b86      	ldr	r3, [pc, #536]	; (802abe8 <__ieee754_rem_pio2f+0x220>)
 802a9d0:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802a9d4:	429d      	cmp	r5, r3
 802a9d6:	b087      	sub	sp, #28
 802a9d8:	4604      	mov	r4, r0
 802a9da:	dc05      	bgt.n	802a9e8 <__ieee754_rem_pio2f+0x20>
 802a9dc:	2300      	movs	r3, #0
 802a9de:	ed80 0a00 	vstr	s0, [r0]
 802a9e2:	6043      	str	r3, [r0, #4]
 802a9e4:	2000      	movs	r0, #0
 802a9e6:	e020      	b.n	802aa2a <__ieee754_rem_pio2f+0x62>
 802a9e8:	4b80      	ldr	r3, [pc, #512]	; (802abec <__ieee754_rem_pio2f+0x224>)
 802a9ea:	429d      	cmp	r5, r3
 802a9ec:	dc38      	bgt.n	802aa60 <__ieee754_rem_pio2f+0x98>
 802a9ee:	2e00      	cmp	r6, #0
 802a9f0:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802abf0 <__ieee754_rem_pio2f+0x228>
 802a9f4:	4b7f      	ldr	r3, [pc, #508]	; (802abf4 <__ieee754_rem_pio2f+0x22c>)
 802a9f6:	f025 050f 	bic.w	r5, r5, #15
 802a9fa:	dd18      	ble.n	802aa2e <__ieee754_rem_pio2f+0x66>
 802a9fc:	429d      	cmp	r5, r3
 802a9fe:	ee70 7a47 	vsub.f32	s15, s0, s14
 802aa02:	bf09      	itett	eq
 802aa04:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802abf8 <__ieee754_rem_pio2f+0x230>
 802aa08:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802abfc <__ieee754_rem_pio2f+0x234>
 802aa0c:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802aa10:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802ac00 <__ieee754_rem_pio2f+0x238>
 802aa14:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802aa18:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802aa1c:	edc0 6a00 	vstr	s13, [r0]
 802aa20:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802aa24:	edc0 7a01 	vstr	s15, [r0, #4]
 802aa28:	2001      	movs	r0, #1
 802aa2a:	b007      	add	sp, #28
 802aa2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802aa2e:	429d      	cmp	r5, r3
 802aa30:	ee70 7a07 	vadd.f32	s15, s0, s14
 802aa34:	bf09      	itett	eq
 802aa36:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802abf8 <__ieee754_rem_pio2f+0x230>
 802aa3a:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802abfc <__ieee754_rem_pio2f+0x234>
 802aa3e:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802aa42:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802ac00 <__ieee754_rem_pio2f+0x238>
 802aa46:	ee77 6a87 	vadd.f32	s13, s15, s14
 802aa4a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802aa4e:	edc0 6a00 	vstr	s13, [r0]
 802aa52:	ee77 7a87 	vadd.f32	s15, s15, s14
 802aa56:	edc0 7a01 	vstr	s15, [r0, #4]
 802aa5a:	f04f 30ff 	mov.w	r0, #4294967295
 802aa5e:	e7e4      	b.n	802aa2a <__ieee754_rem_pio2f+0x62>
 802aa60:	4b68      	ldr	r3, [pc, #416]	; (802ac04 <__ieee754_rem_pio2f+0x23c>)
 802aa62:	429d      	cmp	r5, r3
 802aa64:	dc71      	bgt.n	802ab4a <__ieee754_rem_pio2f+0x182>
 802aa66:	f000 f8db 	bl	802ac20 <fabsf>
 802aa6a:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802ac08 <__ieee754_rem_pio2f+0x240>
 802aa6e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802aa72:	eee0 7a07 	vfma.f32	s15, s0, s14
 802aa76:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802aa7a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802aa7e:	ee17 0a90 	vmov	r0, s15
 802aa82:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802abf0 <__ieee754_rem_pio2f+0x228>
 802aa86:	eea7 0a67 	vfms.f32	s0, s14, s15
 802aa8a:	281f      	cmp	r0, #31
 802aa8c:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802abfc <__ieee754_rem_pio2f+0x234>
 802aa90:	ee67 7a27 	vmul.f32	s15, s14, s15
 802aa94:	eeb1 6a47 	vneg.f32	s12, s14
 802aa98:	ee70 6a67 	vsub.f32	s13, s0, s15
 802aa9c:	ee16 2a90 	vmov	r2, s13
 802aaa0:	dc1c      	bgt.n	802aadc <__ieee754_rem_pio2f+0x114>
 802aaa2:	495a      	ldr	r1, [pc, #360]	; (802ac0c <__ieee754_rem_pio2f+0x244>)
 802aaa4:	1e47      	subs	r7, r0, #1
 802aaa6:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802aaaa:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802aaae:	428b      	cmp	r3, r1
 802aab0:	d014      	beq.n	802aadc <__ieee754_rem_pio2f+0x114>
 802aab2:	6022      	str	r2, [r4, #0]
 802aab4:	ed94 7a00 	vldr	s14, [r4]
 802aab8:	ee30 0a47 	vsub.f32	s0, s0, s14
 802aabc:	2e00      	cmp	r6, #0
 802aabe:	ee30 0a67 	vsub.f32	s0, s0, s15
 802aac2:	ed84 0a01 	vstr	s0, [r4, #4]
 802aac6:	dab0      	bge.n	802aa2a <__ieee754_rem_pio2f+0x62>
 802aac8:	eeb1 7a47 	vneg.f32	s14, s14
 802aacc:	eeb1 0a40 	vneg.f32	s0, s0
 802aad0:	ed84 7a00 	vstr	s14, [r4]
 802aad4:	ed84 0a01 	vstr	s0, [r4, #4]
 802aad8:	4240      	negs	r0, r0
 802aada:	e7a6      	b.n	802aa2a <__ieee754_rem_pio2f+0x62>
 802aadc:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802aae0:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802aae4:	2908      	cmp	r1, #8
 802aae6:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802aaea:	dde2      	ble.n	802aab2 <__ieee754_rem_pio2f+0xea>
 802aaec:	eddf 5a42 	vldr	s11, [pc, #264]	; 802abf8 <__ieee754_rem_pio2f+0x230>
 802aaf0:	eef0 6a40 	vmov.f32	s13, s0
 802aaf4:	eee6 6a25 	vfma.f32	s13, s12, s11
 802aaf8:	ee70 7a66 	vsub.f32	s15, s0, s13
 802aafc:	eee6 7a25 	vfma.f32	s15, s12, s11
 802ab00:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802ac00 <__ieee754_rem_pio2f+0x238>
 802ab04:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802ab08:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802ab0c:	ee15 2a90 	vmov	r2, s11
 802ab10:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802ab14:	1a5b      	subs	r3, r3, r1
 802ab16:	2b19      	cmp	r3, #25
 802ab18:	dc04      	bgt.n	802ab24 <__ieee754_rem_pio2f+0x15c>
 802ab1a:	edc4 5a00 	vstr	s11, [r4]
 802ab1e:	eeb0 0a66 	vmov.f32	s0, s13
 802ab22:	e7c7      	b.n	802aab4 <__ieee754_rem_pio2f+0xec>
 802ab24:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802ac10 <__ieee754_rem_pio2f+0x248>
 802ab28:	eeb0 0a66 	vmov.f32	s0, s13
 802ab2c:	eea6 0a25 	vfma.f32	s0, s12, s11
 802ab30:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802ab34:	eddf 6a37 	vldr	s13, [pc, #220]	; 802ac14 <__ieee754_rem_pio2f+0x24c>
 802ab38:	eee6 7a25 	vfma.f32	s15, s12, s11
 802ab3c:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802ab40:	ee30 7a67 	vsub.f32	s14, s0, s15
 802ab44:	ed84 7a00 	vstr	s14, [r4]
 802ab48:	e7b4      	b.n	802aab4 <__ieee754_rem_pio2f+0xec>
 802ab4a:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802ab4e:	db06      	blt.n	802ab5e <__ieee754_rem_pio2f+0x196>
 802ab50:	ee70 7a40 	vsub.f32	s15, s0, s0
 802ab54:	edc0 7a01 	vstr	s15, [r0, #4]
 802ab58:	edc0 7a00 	vstr	s15, [r0]
 802ab5c:	e742      	b.n	802a9e4 <__ieee754_rem_pio2f+0x1c>
 802ab5e:	15ea      	asrs	r2, r5, #23
 802ab60:	3a86      	subs	r2, #134	; 0x86
 802ab62:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802ab66:	ee07 3a90 	vmov	s15, r3
 802ab6a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802ab6e:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802ac18 <__ieee754_rem_pio2f+0x250>
 802ab72:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802ab76:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ab7a:	ed8d 7a03 	vstr	s14, [sp, #12]
 802ab7e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802ab82:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802ab86:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802ab8a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ab8e:	ed8d 7a04 	vstr	s14, [sp, #16]
 802ab92:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802ab96:	eef5 7a40 	vcmp.f32	s15, #0.0
 802ab9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ab9e:	edcd 7a05 	vstr	s15, [sp, #20]
 802aba2:	d11e      	bne.n	802abe2 <__ieee754_rem_pio2f+0x21a>
 802aba4:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802aba8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802abac:	bf14      	ite	ne
 802abae:	2302      	movne	r3, #2
 802abb0:	2301      	moveq	r3, #1
 802abb2:	491a      	ldr	r1, [pc, #104]	; (802ac1c <__ieee754_rem_pio2f+0x254>)
 802abb4:	9101      	str	r1, [sp, #4]
 802abb6:	2102      	movs	r1, #2
 802abb8:	9100      	str	r1, [sp, #0]
 802abba:	a803      	add	r0, sp, #12
 802abbc:	4621      	mov	r1, r4
 802abbe:	f000 f89d 	bl	802acfc <__kernel_rem_pio2f>
 802abc2:	2e00      	cmp	r6, #0
 802abc4:	f6bf af31 	bge.w	802aa2a <__ieee754_rem_pio2f+0x62>
 802abc8:	edd4 7a00 	vldr	s15, [r4]
 802abcc:	eef1 7a67 	vneg.f32	s15, s15
 802abd0:	edc4 7a00 	vstr	s15, [r4]
 802abd4:	edd4 7a01 	vldr	s15, [r4, #4]
 802abd8:	eef1 7a67 	vneg.f32	s15, s15
 802abdc:	edc4 7a01 	vstr	s15, [r4, #4]
 802abe0:	e77a      	b.n	802aad8 <__ieee754_rem_pio2f+0x110>
 802abe2:	2303      	movs	r3, #3
 802abe4:	e7e5      	b.n	802abb2 <__ieee754_rem_pio2f+0x1ea>
 802abe6:	bf00      	nop
 802abe8:	3f490fd8 	.word	0x3f490fd8
 802abec:	4016cbe3 	.word	0x4016cbe3
 802abf0:	3fc90f80 	.word	0x3fc90f80
 802abf4:	3fc90fd0 	.word	0x3fc90fd0
 802abf8:	37354400 	.word	0x37354400
 802abfc:	37354443 	.word	0x37354443
 802ac00:	2e85a308 	.word	0x2e85a308
 802ac04:	43490f80 	.word	0x43490f80
 802ac08:	3f22f984 	.word	0x3f22f984
 802ac0c:	08043068 	.word	0x08043068
 802ac10:	2e85a300 	.word	0x2e85a300
 802ac14:	248d3132 	.word	0x248d3132
 802ac18:	43800000 	.word	0x43800000
 802ac1c:	080430e8 	.word	0x080430e8

0802ac20 <fabsf>:
 802ac20:	ee10 3a10 	vmov	r3, s0
 802ac24:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802ac28:	ee00 3a10 	vmov	s0, r3
 802ac2c:	4770      	bx	lr
	...

0802ac30 <scalbnf>:
 802ac30:	ee10 3a10 	vmov	r3, s0
 802ac34:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802ac38:	d02b      	beq.n	802ac92 <scalbnf+0x62>
 802ac3a:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802ac3e:	d302      	bcc.n	802ac46 <scalbnf+0x16>
 802ac40:	ee30 0a00 	vadd.f32	s0, s0, s0
 802ac44:	4770      	bx	lr
 802ac46:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802ac4a:	d123      	bne.n	802ac94 <scalbnf+0x64>
 802ac4c:	4b24      	ldr	r3, [pc, #144]	; (802ace0 <scalbnf+0xb0>)
 802ac4e:	eddf 7a25 	vldr	s15, [pc, #148]	; 802ace4 <scalbnf+0xb4>
 802ac52:	4298      	cmp	r0, r3
 802ac54:	ee20 0a27 	vmul.f32	s0, s0, s15
 802ac58:	db17      	blt.n	802ac8a <scalbnf+0x5a>
 802ac5a:	ee10 3a10 	vmov	r3, s0
 802ac5e:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802ac62:	3a19      	subs	r2, #25
 802ac64:	f24c 3150 	movw	r1, #50000	; 0xc350
 802ac68:	4288      	cmp	r0, r1
 802ac6a:	dd15      	ble.n	802ac98 <scalbnf+0x68>
 802ac6c:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802ace8 <scalbnf+0xb8>
 802ac70:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802acec <scalbnf+0xbc>
 802ac74:	ee10 3a10 	vmov	r3, s0
 802ac78:	eeb0 7a67 	vmov.f32	s14, s15
 802ac7c:	2b00      	cmp	r3, #0
 802ac7e:	bfb8      	it	lt
 802ac80:	eef0 7a66 	vmovlt.f32	s15, s13
 802ac84:	ee27 0a87 	vmul.f32	s0, s15, s14
 802ac88:	4770      	bx	lr
 802ac8a:	eddf 7a19 	vldr	s15, [pc, #100]	; 802acf0 <scalbnf+0xc0>
 802ac8e:	ee27 0a80 	vmul.f32	s0, s15, s0
 802ac92:	4770      	bx	lr
 802ac94:	0dd2      	lsrs	r2, r2, #23
 802ac96:	e7e5      	b.n	802ac64 <scalbnf+0x34>
 802ac98:	4410      	add	r0, r2
 802ac9a:	28fe      	cmp	r0, #254	; 0xfe
 802ac9c:	dce6      	bgt.n	802ac6c <scalbnf+0x3c>
 802ac9e:	2800      	cmp	r0, #0
 802aca0:	dd06      	ble.n	802acb0 <scalbnf+0x80>
 802aca2:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802aca6:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802acaa:	ee00 3a10 	vmov	s0, r3
 802acae:	4770      	bx	lr
 802acb0:	f110 0f16 	cmn.w	r0, #22
 802acb4:	da09      	bge.n	802acca <scalbnf+0x9a>
 802acb6:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802acf0 <scalbnf+0xc0>
 802acba:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802acf4 <scalbnf+0xc4>
 802acbe:	ee10 3a10 	vmov	r3, s0
 802acc2:	eeb0 7a67 	vmov.f32	s14, s15
 802acc6:	2b00      	cmp	r3, #0
 802acc8:	e7d9      	b.n	802ac7e <scalbnf+0x4e>
 802acca:	3019      	adds	r0, #25
 802accc:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802acd0:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802acd4:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802acf8 <scalbnf+0xc8>
 802acd8:	ee07 3a90 	vmov	s15, r3
 802acdc:	e7d7      	b.n	802ac8e <scalbnf+0x5e>
 802acde:	bf00      	nop
 802ace0:	ffff3cb0 	.word	0xffff3cb0
 802ace4:	4c000000 	.word	0x4c000000
 802ace8:	7149f2ca 	.word	0x7149f2ca
 802acec:	f149f2ca 	.word	0xf149f2ca
 802acf0:	0da24260 	.word	0x0da24260
 802acf4:	8da24260 	.word	0x8da24260
 802acf8:	33000000 	.word	0x33000000

0802acfc <__kernel_rem_pio2f>:
 802acfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ad00:	ed2d 8b04 	vpush	{d8-d9}
 802ad04:	b0d9      	sub	sp, #356	; 0x164
 802ad06:	4688      	mov	r8, r1
 802ad08:	9002      	str	r0, [sp, #8]
 802ad0a:	49b8      	ldr	r1, [pc, #736]	; (802afec <__kernel_rem_pio2f+0x2f0>)
 802ad0c:	9866      	ldr	r0, [sp, #408]	; 0x198
 802ad0e:	9301      	str	r3, [sp, #4]
 802ad10:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802ad14:	9901      	ldr	r1, [sp, #4]
 802ad16:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802ad18:	f101 3bff 	add.w	fp, r1, #4294967295
 802ad1c:	1d11      	adds	r1, r2, #4
 802ad1e:	db25      	blt.n	802ad6c <__kernel_rem_pio2f+0x70>
 802ad20:	1ed0      	subs	r0, r2, #3
 802ad22:	bf48      	it	mi
 802ad24:	1d10      	addmi	r0, r2, #4
 802ad26:	10c0      	asrs	r0, r0, #3
 802ad28:	1c45      	adds	r5, r0, #1
 802ad2a:	00e9      	lsls	r1, r5, #3
 802ad2c:	eba0 070b 	sub.w	r7, r0, fp
 802ad30:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802affc <__kernel_rem_pio2f+0x300>
 802ad34:	9103      	str	r1, [sp, #12]
 802ad36:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802ad3a:	eb0a 0c0b 	add.w	ip, sl, fp
 802ad3e:	ae1c      	add	r6, sp, #112	; 0x70
 802ad40:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802ad44:	2400      	movs	r4, #0
 802ad46:	4564      	cmp	r4, ip
 802ad48:	dd12      	ble.n	802ad70 <__kernel_rem_pio2f+0x74>
 802ad4a:	9901      	ldr	r1, [sp, #4]
 802ad4c:	ac1c      	add	r4, sp, #112	; 0x70
 802ad4e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802ad52:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802ad56:	f04f 0c00 	mov.w	ip, #0
 802ad5a:	45d4      	cmp	ip, sl
 802ad5c:	dc27      	bgt.n	802adae <__kernel_rem_pio2f+0xb2>
 802ad5e:	f8dd e008 	ldr.w	lr, [sp, #8]
 802ad62:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802affc <__kernel_rem_pio2f+0x300>
 802ad66:	4627      	mov	r7, r4
 802ad68:	2600      	movs	r6, #0
 802ad6a:	e016      	b.n	802ad9a <__kernel_rem_pio2f+0x9e>
 802ad6c:	2000      	movs	r0, #0
 802ad6e:	e7db      	b.n	802ad28 <__kernel_rem_pio2f+0x2c>
 802ad70:	42e7      	cmn	r7, r4
 802ad72:	bf5d      	ittte	pl
 802ad74:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802ad78:	ee07 1a90 	vmovpl	s15, r1
 802ad7c:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802ad80:	eef0 7a47 	vmovmi.f32	s15, s14
 802ad84:	ece6 7a01 	vstmia	r6!, {s15}
 802ad88:	3401      	adds	r4, #1
 802ad8a:	e7dc      	b.n	802ad46 <__kernel_rem_pio2f+0x4a>
 802ad8c:	ecfe 6a01 	vldmia	lr!, {s13}
 802ad90:	ed97 7a00 	vldr	s14, [r7]
 802ad94:	eee6 7a87 	vfma.f32	s15, s13, s14
 802ad98:	3601      	adds	r6, #1
 802ad9a:	455e      	cmp	r6, fp
 802ad9c:	f1a7 0704 	sub.w	r7, r7, #4
 802ada0:	ddf4      	ble.n	802ad8c <__kernel_rem_pio2f+0x90>
 802ada2:	ece9 7a01 	vstmia	r9!, {s15}
 802ada6:	f10c 0c01 	add.w	ip, ip, #1
 802adaa:	3404      	adds	r4, #4
 802adac:	e7d5      	b.n	802ad5a <__kernel_rem_pio2f+0x5e>
 802adae:	a908      	add	r1, sp, #32
 802adb0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802adb4:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802adb8:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802aff8 <__kernel_rem_pio2f+0x2fc>
 802adbc:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802aff4 <__kernel_rem_pio2f+0x2f8>
 802adc0:	9105      	str	r1, [sp, #20]
 802adc2:	9304      	str	r3, [sp, #16]
 802adc4:	4656      	mov	r6, sl
 802adc6:	00b3      	lsls	r3, r6, #2
 802adc8:	9306      	str	r3, [sp, #24]
 802adca:	ab58      	add	r3, sp, #352	; 0x160
 802adcc:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802add0:	ac08      	add	r4, sp, #32
 802add2:	ab44      	add	r3, sp, #272	; 0x110
 802add4:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802add8:	46a4      	mov	ip, r4
 802adda:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802adde:	4637      	mov	r7, r6
 802ade0:	2f00      	cmp	r7, #0
 802ade2:	f1a0 0004 	sub.w	r0, r0, #4
 802ade6:	dc4a      	bgt.n	802ae7e <__kernel_rem_pio2f+0x182>
 802ade8:	4628      	mov	r0, r5
 802adea:	9207      	str	r2, [sp, #28]
 802adec:	f7ff ff20 	bl	802ac30 <scalbnf>
 802adf0:	eeb0 8a40 	vmov.f32	s16, s0
 802adf4:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802adf8:	ee28 0a00 	vmul.f32	s0, s16, s0
 802adfc:	f7ff fcfc 	bl	802a7f8 <floorf>
 802ae00:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802ae04:	eea0 8a67 	vfms.f32	s16, s0, s15
 802ae08:	2d00      	cmp	r5, #0
 802ae0a:	9a07      	ldr	r2, [sp, #28]
 802ae0c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802ae10:	ee17 9a90 	vmov	r9, s15
 802ae14:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802ae18:	ee38 8a67 	vsub.f32	s16, s16, s15
 802ae1c:	dd41      	ble.n	802aea2 <__kernel_rem_pio2f+0x1a6>
 802ae1e:	f106 3cff 	add.w	ip, r6, #4294967295
 802ae22:	ab08      	add	r3, sp, #32
 802ae24:	f1c5 0e08 	rsb	lr, r5, #8
 802ae28:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802ae2c:	fa47 f00e 	asr.w	r0, r7, lr
 802ae30:	4481      	add	r9, r0
 802ae32:	fa00 f00e 	lsl.w	r0, r0, lr
 802ae36:	1a3f      	subs	r7, r7, r0
 802ae38:	f1c5 0007 	rsb	r0, r5, #7
 802ae3c:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802ae40:	4107      	asrs	r7, r0
 802ae42:	2f00      	cmp	r7, #0
 802ae44:	dd3c      	ble.n	802aec0 <__kernel_rem_pio2f+0x1c4>
 802ae46:	f04f 0e00 	mov.w	lr, #0
 802ae4a:	f109 0901 	add.w	r9, r9, #1
 802ae4e:	4671      	mov	r1, lr
 802ae50:	4576      	cmp	r6, lr
 802ae52:	dc67      	bgt.n	802af24 <__kernel_rem_pio2f+0x228>
 802ae54:	2d00      	cmp	r5, #0
 802ae56:	dd03      	ble.n	802ae60 <__kernel_rem_pio2f+0x164>
 802ae58:	2d01      	cmp	r5, #1
 802ae5a:	d074      	beq.n	802af46 <__kernel_rem_pio2f+0x24a>
 802ae5c:	2d02      	cmp	r5, #2
 802ae5e:	d07b      	beq.n	802af58 <__kernel_rem_pio2f+0x25c>
 802ae60:	2f02      	cmp	r7, #2
 802ae62:	d12d      	bne.n	802aec0 <__kernel_rem_pio2f+0x1c4>
 802ae64:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802ae68:	ee30 8a48 	vsub.f32	s16, s0, s16
 802ae6c:	b341      	cbz	r1, 802aec0 <__kernel_rem_pio2f+0x1c4>
 802ae6e:	4628      	mov	r0, r5
 802ae70:	9207      	str	r2, [sp, #28]
 802ae72:	f7ff fedd 	bl	802ac30 <scalbnf>
 802ae76:	9a07      	ldr	r2, [sp, #28]
 802ae78:	ee38 8a40 	vsub.f32	s16, s16, s0
 802ae7c:	e020      	b.n	802aec0 <__kernel_rem_pio2f+0x1c4>
 802ae7e:	ee60 7a28 	vmul.f32	s15, s0, s17
 802ae82:	3f01      	subs	r7, #1
 802ae84:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802ae88:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802ae8c:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802ae90:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802ae94:	ecac 0a01 	vstmia	ip!, {s0}
 802ae98:	ed90 0a00 	vldr	s0, [r0]
 802ae9c:	ee37 0a80 	vadd.f32	s0, s15, s0
 802aea0:	e79e      	b.n	802ade0 <__kernel_rem_pio2f+0xe4>
 802aea2:	d105      	bne.n	802aeb0 <__kernel_rem_pio2f+0x1b4>
 802aea4:	1e70      	subs	r0, r6, #1
 802aea6:	ab08      	add	r3, sp, #32
 802aea8:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802aeac:	11ff      	asrs	r7, r7, #7
 802aeae:	e7c8      	b.n	802ae42 <__kernel_rem_pio2f+0x146>
 802aeb0:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802aeb4:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802aeb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802aebc:	da30      	bge.n	802af20 <__kernel_rem_pio2f+0x224>
 802aebe:	2700      	movs	r7, #0
 802aec0:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802aec4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802aec8:	f040 809a 	bne.w	802b000 <__kernel_rem_pio2f+0x304>
 802aecc:	1e74      	subs	r4, r6, #1
 802aece:	46a4      	mov	ip, r4
 802aed0:	2100      	movs	r1, #0
 802aed2:	45d4      	cmp	ip, sl
 802aed4:	da47      	bge.n	802af66 <__kernel_rem_pio2f+0x26a>
 802aed6:	2900      	cmp	r1, #0
 802aed8:	d063      	beq.n	802afa2 <__kernel_rem_pio2f+0x2a6>
 802aeda:	ab08      	add	r3, sp, #32
 802aedc:	3d08      	subs	r5, #8
 802aede:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802aee2:	2b00      	cmp	r3, #0
 802aee4:	d07f      	beq.n	802afe6 <__kernel_rem_pio2f+0x2ea>
 802aee6:	4628      	mov	r0, r5
 802aee8:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802aeec:	f7ff fea0 	bl	802ac30 <scalbnf>
 802aef0:	1c63      	adds	r3, r4, #1
 802aef2:	aa44      	add	r2, sp, #272	; 0x110
 802aef4:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802aff8 <__kernel_rem_pio2f+0x2fc>
 802aef8:	0099      	lsls	r1, r3, #2
 802aefa:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802aefe:	4623      	mov	r3, r4
 802af00:	2b00      	cmp	r3, #0
 802af02:	f280 80ad 	bge.w	802b060 <__kernel_rem_pio2f+0x364>
 802af06:	4623      	mov	r3, r4
 802af08:	2b00      	cmp	r3, #0
 802af0a:	f2c0 80cb 	blt.w	802b0a4 <__kernel_rem_pio2f+0x3a8>
 802af0e:	aa44      	add	r2, sp, #272	; 0x110
 802af10:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802af14:	4e36      	ldr	r6, [pc, #216]	; (802aff0 <__kernel_rem_pio2f+0x2f4>)
 802af16:	eddf 7a39 	vldr	s15, [pc, #228]	; 802affc <__kernel_rem_pio2f+0x300>
 802af1a:	2000      	movs	r0, #0
 802af1c:	1ae2      	subs	r2, r4, r3
 802af1e:	e0b6      	b.n	802b08e <__kernel_rem_pio2f+0x392>
 802af20:	2702      	movs	r7, #2
 802af22:	e790      	b.n	802ae46 <__kernel_rem_pio2f+0x14a>
 802af24:	6820      	ldr	r0, [r4, #0]
 802af26:	b949      	cbnz	r1, 802af3c <__kernel_rem_pio2f+0x240>
 802af28:	b118      	cbz	r0, 802af32 <__kernel_rem_pio2f+0x236>
 802af2a:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802af2e:	6020      	str	r0, [r4, #0]
 802af30:	2001      	movs	r0, #1
 802af32:	f10e 0e01 	add.w	lr, lr, #1
 802af36:	3404      	adds	r4, #4
 802af38:	4601      	mov	r1, r0
 802af3a:	e789      	b.n	802ae50 <__kernel_rem_pio2f+0x154>
 802af3c:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802af40:	6020      	str	r0, [r4, #0]
 802af42:	4608      	mov	r0, r1
 802af44:	e7f5      	b.n	802af32 <__kernel_rem_pio2f+0x236>
 802af46:	1e74      	subs	r4, r6, #1
 802af48:	ab08      	add	r3, sp, #32
 802af4a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802af4e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802af52:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802af56:	e783      	b.n	802ae60 <__kernel_rem_pio2f+0x164>
 802af58:	1e74      	subs	r4, r6, #1
 802af5a:	ab08      	add	r3, sp, #32
 802af5c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802af60:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802af64:	e7f5      	b.n	802af52 <__kernel_rem_pio2f+0x256>
 802af66:	ab08      	add	r3, sp, #32
 802af68:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802af6c:	f10c 3cff 	add.w	ip, ip, #4294967295
 802af70:	4301      	orrs	r1, r0
 802af72:	e7ae      	b.n	802aed2 <__kernel_rem_pio2f+0x1d6>
 802af74:	3001      	adds	r0, #1
 802af76:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802af7a:	2f00      	cmp	r7, #0
 802af7c:	d0fa      	beq.n	802af74 <__kernel_rem_pio2f+0x278>
 802af7e:	9b06      	ldr	r3, [sp, #24]
 802af80:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802af84:	eb0d 0403 	add.w	r4, sp, r3
 802af88:	9b01      	ldr	r3, [sp, #4]
 802af8a:	18f7      	adds	r7, r6, r3
 802af8c:	ab1c      	add	r3, sp, #112	; 0x70
 802af8e:	f106 0c01 	add.w	ip, r6, #1
 802af92:	3c4c      	subs	r4, #76	; 0x4c
 802af94:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802af98:	4430      	add	r0, r6
 802af9a:	4560      	cmp	r0, ip
 802af9c:	da04      	bge.n	802afa8 <__kernel_rem_pio2f+0x2ac>
 802af9e:	4606      	mov	r6, r0
 802afa0:	e711      	b.n	802adc6 <__kernel_rem_pio2f+0xca>
 802afa2:	9c05      	ldr	r4, [sp, #20]
 802afa4:	2001      	movs	r0, #1
 802afa6:	e7e6      	b.n	802af76 <__kernel_rem_pio2f+0x27a>
 802afa8:	9b04      	ldr	r3, [sp, #16]
 802afaa:	f8dd e008 	ldr.w	lr, [sp, #8]
 802afae:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802afb2:	9306      	str	r3, [sp, #24]
 802afb4:	ee07 3a90 	vmov	s15, r3
 802afb8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802afbc:	2600      	movs	r6, #0
 802afbe:	ece7 7a01 	vstmia	r7!, {s15}
 802afc2:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802affc <__kernel_rem_pio2f+0x300>
 802afc6:	46b9      	mov	r9, r7
 802afc8:	455e      	cmp	r6, fp
 802afca:	dd04      	ble.n	802afd6 <__kernel_rem_pio2f+0x2da>
 802afcc:	ece4 7a01 	vstmia	r4!, {s15}
 802afd0:	f10c 0c01 	add.w	ip, ip, #1
 802afd4:	e7e1      	b.n	802af9a <__kernel_rem_pio2f+0x29e>
 802afd6:	ecfe 6a01 	vldmia	lr!, {s13}
 802afda:	ed39 7a01 	vldmdb	r9!, {s14}
 802afde:	3601      	adds	r6, #1
 802afe0:	eee6 7a87 	vfma.f32	s15, s13, s14
 802afe4:	e7f0      	b.n	802afc8 <__kernel_rem_pio2f+0x2cc>
 802afe6:	3c01      	subs	r4, #1
 802afe8:	e777      	b.n	802aeda <__kernel_rem_pio2f+0x1de>
 802afea:	bf00      	nop
 802afec:	0804342c 	.word	0x0804342c
 802aff0:	08043400 	.word	0x08043400
 802aff4:	43800000 	.word	0x43800000
 802aff8:	3b800000 	.word	0x3b800000
 802affc:	00000000 	.word	0x00000000
 802b000:	9b03      	ldr	r3, [sp, #12]
 802b002:	eeb0 0a48 	vmov.f32	s0, s16
 802b006:	1a98      	subs	r0, r3, r2
 802b008:	f7ff fe12 	bl	802ac30 <scalbnf>
 802b00c:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802aff4 <__kernel_rem_pio2f+0x2f8>
 802b010:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802b014:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b018:	db19      	blt.n	802b04e <__kernel_rem_pio2f+0x352>
 802b01a:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802aff8 <__kernel_rem_pio2f+0x2fc>
 802b01e:	ee60 7a27 	vmul.f32	s15, s0, s15
 802b022:	aa08      	add	r2, sp, #32
 802b024:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b028:	1c74      	adds	r4, r6, #1
 802b02a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b02e:	3508      	adds	r5, #8
 802b030:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802b034:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b038:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b03c:	ee10 3a10 	vmov	r3, s0
 802b040:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802b044:	ee17 3a90 	vmov	r3, s15
 802b048:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802b04c:	e74b      	b.n	802aee6 <__kernel_rem_pio2f+0x1ea>
 802b04e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b052:	aa08      	add	r2, sp, #32
 802b054:	ee10 3a10 	vmov	r3, s0
 802b058:	4634      	mov	r4, r6
 802b05a:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802b05e:	e742      	b.n	802aee6 <__kernel_rem_pio2f+0x1ea>
 802b060:	a808      	add	r0, sp, #32
 802b062:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802b066:	9001      	str	r0, [sp, #4]
 802b068:	ee07 0a90 	vmov	s15, r0
 802b06c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b070:	3b01      	subs	r3, #1
 802b072:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b076:	ee20 0a07 	vmul.f32	s0, s0, s14
 802b07a:	ed62 7a01 	vstmdb	r2!, {s15}
 802b07e:	e73f      	b.n	802af00 <__kernel_rem_pio2f+0x204>
 802b080:	ecf6 6a01 	vldmia	r6!, {s13}
 802b084:	ecb5 7a01 	vldmia	r5!, {s14}
 802b088:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b08c:	3001      	adds	r0, #1
 802b08e:	4550      	cmp	r0, sl
 802b090:	dc01      	bgt.n	802b096 <__kernel_rem_pio2f+0x39a>
 802b092:	4290      	cmp	r0, r2
 802b094:	ddf4      	ble.n	802b080 <__kernel_rem_pio2f+0x384>
 802b096:	a858      	add	r0, sp, #352	; 0x160
 802b098:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802b09c:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802b0a0:	3b01      	subs	r3, #1
 802b0a2:	e731      	b.n	802af08 <__kernel_rem_pio2f+0x20c>
 802b0a4:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802b0a6:	2b02      	cmp	r3, #2
 802b0a8:	dc09      	bgt.n	802b0be <__kernel_rem_pio2f+0x3c2>
 802b0aa:	2b00      	cmp	r3, #0
 802b0ac:	dc2b      	bgt.n	802b106 <__kernel_rem_pio2f+0x40a>
 802b0ae:	d044      	beq.n	802b13a <__kernel_rem_pio2f+0x43e>
 802b0b0:	f009 0007 	and.w	r0, r9, #7
 802b0b4:	b059      	add	sp, #356	; 0x164
 802b0b6:	ecbd 8b04 	vpop	{d8-d9}
 802b0ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b0be:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802b0c0:	2b03      	cmp	r3, #3
 802b0c2:	d1f5      	bne.n	802b0b0 <__kernel_rem_pio2f+0x3b4>
 802b0c4:	aa30      	add	r2, sp, #192	; 0xc0
 802b0c6:	1f0b      	subs	r3, r1, #4
 802b0c8:	4413      	add	r3, r2
 802b0ca:	461a      	mov	r2, r3
 802b0cc:	4620      	mov	r0, r4
 802b0ce:	2800      	cmp	r0, #0
 802b0d0:	f1a2 0204 	sub.w	r2, r2, #4
 802b0d4:	dc52      	bgt.n	802b17c <__kernel_rem_pio2f+0x480>
 802b0d6:	4622      	mov	r2, r4
 802b0d8:	2a01      	cmp	r2, #1
 802b0da:	f1a3 0304 	sub.w	r3, r3, #4
 802b0de:	dc5d      	bgt.n	802b19c <__kernel_rem_pio2f+0x4a0>
 802b0e0:	ab30      	add	r3, sp, #192	; 0xc0
 802b0e2:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802affc <__kernel_rem_pio2f+0x300>
 802b0e6:	440b      	add	r3, r1
 802b0e8:	2c01      	cmp	r4, #1
 802b0ea:	dc67      	bgt.n	802b1bc <__kernel_rem_pio2f+0x4c0>
 802b0ec:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802b0f0:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802b0f4:	2f00      	cmp	r7, #0
 802b0f6:	d167      	bne.n	802b1c8 <__kernel_rem_pio2f+0x4cc>
 802b0f8:	edc8 6a00 	vstr	s13, [r8]
 802b0fc:	ed88 7a01 	vstr	s14, [r8, #4]
 802b100:	edc8 7a02 	vstr	s15, [r8, #8]
 802b104:	e7d4      	b.n	802b0b0 <__kernel_rem_pio2f+0x3b4>
 802b106:	ab30      	add	r3, sp, #192	; 0xc0
 802b108:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802affc <__kernel_rem_pio2f+0x300>
 802b10c:	440b      	add	r3, r1
 802b10e:	4622      	mov	r2, r4
 802b110:	2a00      	cmp	r2, #0
 802b112:	da24      	bge.n	802b15e <__kernel_rem_pio2f+0x462>
 802b114:	b34f      	cbz	r7, 802b16a <__kernel_rem_pio2f+0x46e>
 802b116:	eef1 7a47 	vneg.f32	s15, s14
 802b11a:	edc8 7a00 	vstr	s15, [r8]
 802b11e:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802b122:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b126:	aa31      	add	r2, sp, #196	; 0xc4
 802b128:	2301      	movs	r3, #1
 802b12a:	429c      	cmp	r4, r3
 802b12c:	da20      	bge.n	802b170 <__kernel_rem_pio2f+0x474>
 802b12e:	b10f      	cbz	r7, 802b134 <__kernel_rem_pio2f+0x438>
 802b130:	eef1 7a67 	vneg.f32	s15, s15
 802b134:	edc8 7a01 	vstr	s15, [r8, #4]
 802b138:	e7ba      	b.n	802b0b0 <__kernel_rem_pio2f+0x3b4>
 802b13a:	ab30      	add	r3, sp, #192	; 0xc0
 802b13c:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802affc <__kernel_rem_pio2f+0x300>
 802b140:	440b      	add	r3, r1
 802b142:	2c00      	cmp	r4, #0
 802b144:	da05      	bge.n	802b152 <__kernel_rem_pio2f+0x456>
 802b146:	b10f      	cbz	r7, 802b14c <__kernel_rem_pio2f+0x450>
 802b148:	eef1 7a67 	vneg.f32	s15, s15
 802b14c:	edc8 7a00 	vstr	s15, [r8]
 802b150:	e7ae      	b.n	802b0b0 <__kernel_rem_pio2f+0x3b4>
 802b152:	ed33 7a01 	vldmdb	r3!, {s14}
 802b156:	3c01      	subs	r4, #1
 802b158:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b15c:	e7f1      	b.n	802b142 <__kernel_rem_pio2f+0x446>
 802b15e:	ed73 7a01 	vldmdb	r3!, {s15}
 802b162:	3a01      	subs	r2, #1
 802b164:	ee37 7a27 	vadd.f32	s14, s14, s15
 802b168:	e7d2      	b.n	802b110 <__kernel_rem_pio2f+0x414>
 802b16a:	eef0 7a47 	vmov.f32	s15, s14
 802b16e:	e7d4      	b.n	802b11a <__kernel_rem_pio2f+0x41e>
 802b170:	ecb2 7a01 	vldmia	r2!, {s14}
 802b174:	3301      	adds	r3, #1
 802b176:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b17a:	e7d6      	b.n	802b12a <__kernel_rem_pio2f+0x42e>
 802b17c:	edd2 7a00 	vldr	s15, [r2]
 802b180:	edd2 6a01 	vldr	s13, [r2, #4]
 802b184:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802b188:	3801      	subs	r0, #1
 802b18a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b18e:	ed82 7a00 	vstr	s14, [r2]
 802b192:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802b196:	edc2 7a01 	vstr	s15, [r2, #4]
 802b19a:	e798      	b.n	802b0ce <__kernel_rem_pio2f+0x3d2>
 802b19c:	edd3 7a00 	vldr	s15, [r3]
 802b1a0:	edd3 6a01 	vldr	s13, [r3, #4]
 802b1a4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802b1a8:	3a01      	subs	r2, #1
 802b1aa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b1ae:	ed83 7a00 	vstr	s14, [r3]
 802b1b2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802b1b6:	edc3 7a01 	vstr	s15, [r3, #4]
 802b1ba:	e78d      	b.n	802b0d8 <__kernel_rem_pio2f+0x3dc>
 802b1bc:	ed33 7a01 	vldmdb	r3!, {s14}
 802b1c0:	3c01      	subs	r4, #1
 802b1c2:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b1c6:	e78f      	b.n	802b0e8 <__kernel_rem_pio2f+0x3ec>
 802b1c8:	eef1 6a66 	vneg.f32	s13, s13
 802b1cc:	eeb1 7a47 	vneg.f32	s14, s14
 802b1d0:	edc8 6a00 	vstr	s13, [r8]
 802b1d4:	ed88 7a01 	vstr	s14, [r8, #4]
 802b1d8:	eef1 7a67 	vneg.f32	s15, s15
 802b1dc:	e790      	b.n	802b100 <__kernel_rem_pio2f+0x404>
 802b1de:	bf00      	nop

0802b1e0 <abort>:
 802b1e0:	b508      	push	{r3, lr}
 802b1e2:	2006      	movs	r0, #6
 802b1e4:	f000 fa3a 	bl	802b65c <raise>
 802b1e8:	2001      	movs	r0, #1
 802b1ea:	f7d6 fcb3 	bl	8001b54 <_exit>
	...

0802b1f0 <__assert_func>:
 802b1f0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802b1f2:	4614      	mov	r4, r2
 802b1f4:	461a      	mov	r2, r3
 802b1f6:	4b09      	ldr	r3, [pc, #36]	; (802b21c <__assert_func+0x2c>)
 802b1f8:	681b      	ldr	r3, [r3, #0]
 802b1fa:	4605      	mov	r5, r0
 802b1fc:	68d8      	ldr	r0, [r3, #12]
 802b1fe:	b14c      	cbz	r4, 802b214 <__assert_func+0x24>
 802b200:	4b07      	ldr	r3, [pc, #28]	; (802b220 <__assert_func+0x30>)
 802b202:	9100      	str	r1, [sp, #0]
 802b204:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802b208:	4906      	ldr	r1, [pc, #24]	; (802b224 <__assert_func+0x34>)
 802b20a:	462b      	mov	r3, r5
 802b20c:	f000 f982 	bl	802b514 <fiprintf>
 802b210:	f7ff ffe6 	bl	802b1e0 <abort>
 802b214:	4b04      	ldr	r3, [pc, #16]	; (802b228 <__assert_func+0x38>)
 802b216:	461c      	mov	r4, r3
 802b218:	e7f3      	b.n	802b202 <__assert_func+0x12>
 802b21a:	bf00      	nop
 802b21c:	20000160 	.word	0x20000160
 802b220:	08043438 	.word	0x08043438
 802b224:	08043445 	.word	0x08043445
 802b228:	08043473 	.word	0x08043473

0802b22c <atexit>:
 802b22c:	2300      	movs	r3, #0
 802b22e:	4601      	mov	r1, r0
 802b230:	461a      	mov	r2, r3
 802b232:	4618      	mov	r0, r3
 802b234:	f000 bb16 	b.w	802b864 <__register_exitproc>

0802b238 <malloc>:
 802b238:	4b02      	ldr	r3, [pc, #8]	; (802b244 <malloc+0xc>)
 802b23a:	4601      	mov	r1, r0
 802b23c:	6818      	ldr	r0, [r3, #0]
 802b23e:	f000 b82b 	b.w	802b298 <_malloc_r>
 802b242:	bf00      	nop
 802b244:	20000160 	.word	0x20000160

0802b248 <free>:
 802b248:	4b02      	ldr	r3, [pc, #8]	; (802b254 <free+0xc>)
 802b24a:	4601      	mov	r1, r0
 802b24c:	6818      	ldr	r0, [r3, #0]
 802b24e:	f000 bb67 	b.w	802b920 <_free_r>
 802b252:	bf00      	nop
 802b254:	20000160 	.word	0x20000160

0802b258 <sbrk_aligned>:
 802b258:	b570      	push	{r4, r5, r6, lr}
 802b25a:	4e0e      	ldr	r6, [pc, #56]	; (802b294 <sbrk_aligned+0x3c>)
 802b25c:	460c      	mov	r4, r1
 802b25e:	6831      	ldr	r1, [r6, #0]
 802b260:	4605      	mov	r5, r0
 802b262:	b911      	cbnz	r1, 802b26a <sbrk_aligned+0x12>
 802b264:	f000 faa0 	bl	802b7a8 <_sbrk_r>
 802b268:	6030      	str	r0, [r6, #0]
 802b26a:	4621      	mov	r1, r4
 802b26c:	4628      	mov	r0, r5
 802b26e:	f000 fa9b 	bl	802b7a8 <_sbrk_r>
 802b272:	1c43      	adds	r3, r0, #1
 802b274:	d00a      	beq.n	802b28c <sbrk_aligned+0x34>
 802b276:	1cc4      	adds	r4, r0, #3
 802b278:	f024 0403 	bic.w	r4, r4, #3
 802b27c:	42a0      	cmp	r0, r4
 802b27e:	d007      	beq.n	802b290 <sbrk_aligned+0x38>
 802b280:	1a21      	subs	r1, r4, r0
 802b282:	4628      	mov	r0, r5
 802b284:	f000 fa90 	bl	802b7a8 <_sbrk_r>
 802b288:	3001      	adds	r0, #1
 802b28a:	d101      	bne.n	802b290 <sbrk_aligned+0x38>
 802b28c:	f04f 34ff 	mov.w	r4, #4294967295
 802b290:	4620      	mov	r0, r4
 802b292:	bd70      	pop	{r4, r5, r6, pc}
 802b294:	20014174 	.word	0x20014174

0802b298 <_malloc_r>:
 802b298:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b29c:	1ccd      	adds	r5, r1, #3
 802b29e:	f025 0503 	bic.w	r5, r5, #3
 802b2a2:	3508      	adds	r5, #8
 802b2a4:	2d0c      	cmp	r5, #12
 802b2a6:	bf38      	it	cc
 802b2a8:	250c      	movcc	r5, #12
 802b2aa:	2d00      	cmp	r5, #0
 802b2ac:	4607      	mov	r7, r0
 802b2ae:	db01      	blt.n	802b2b4 <_malloc_r+0x1c>
 802b2b0:	42a9      	cmp	r1, r5
 802b2b2:	d905      	bls.n	802b2c0 <_malloc_r+0x28>
 802b2b4:	230c      	movs	r3, #12
 802b2b6:	603b      	str	r3, [r7, #0]
 802b2b8:	2600      	movs	r6, #0
 802b2ba:	4630      	mov	r0, r6
 802b2bc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b2c0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802b394 <_malloc_r+0xfc>
 802b2c4:	f000 f868 	bl	802b398 <__malloc_lock>
 802b2c8:	f8d8 3000 	ldr.w	r3, [r8]
 802b2cc:	461c      	mov	r4, r3
 802b2ce:	bb5c      	cbnz	r4, 802b328 <_malloc_r+0x90>
 802b2d0:	4629      	mov	r1, r5
 802b2d2:	4638      	mov	r0, r7
 802b2d4:	f7ff ffc0 	bl	802b258 <sbrk_aligned>
 802b2d8:	1c43      	adds	r3, r0, #1
 802b2da:	4604      	mov	r4, r0
 802b2dc:	d155      	bne.n	802b38a <_malloc_r+0xf2>
 802b2de:	f8d8 4000 	ldr.w	r4, [r8]
 802b2e2:	4626      	mov	r6, r4
 802b2e4:	2e00      	cmp	r6, #0
 802b2e6:	d145      	bne.n	802b374 <_malloc_r+0xdc>
 802b2e8:	2c00      	cmp	r4, #0
 802b2ea:	d048      	beq.n	802b37e <_malloc_r+0xe6>
 802b2ec:	6823      	ldr	r3, [r4, #0]
 802b2ee:	4631      	mov	r1, r6
 802b2f0:	4638      	mov	r0, r7
 802b2f2:	eb04 0903 	add.w	r9, r4, r3
 802b2f6:	f000 fa57 	bl	802b7a8 <_sbrk_r>
 802b2fa:	4581      	cmp	r9, r0
 802b2fc:	d13f      	bne.n	802b37e <_malloc_r+0xe6>
 802b2fe:	6821      	ldr	r1, [r4, #0]
 802b300:	1a6d      	subs	r5, r5, r1
 802b302:	4629      	mov	r1, r5
 802b304:	4638      	mov	r0, r7
 802b306:	f7ff ffa7 	bl	802b258 <sbrk_aligned>
 802b30a:	3001      	adds	r0, #1
 802b30c:	d037      	beq.n	802b37e <_malloc_r+0xe6>
 802b30e:	6823      	ldr	r3, [r4, #0]
 802b310:	442b      	add	r3, r5
 802b312:	6023      	str	r3, [r4, #0]
 802b314:	f8d8 3000 	ldr.w	r3, [r8]
 802b318:	2b00      	cmp	r3, #0
 802b31a:	d038      	beq.n	802b38e <_malloc_r+0xf6>
 802b31c:	685a      	ldr	r2, [r3, #4]
 802b31e:	42a2      	cmp	r2, r4
 802b320:	d12b      	bne.n	802b37a <_malloc_r+0xe2>
 802b322:	2200      	movs	r2, #0
 802b324:	605a      	str	r2, [r3, #4]
 802b326:	e00f      	b.n	802b348 <_malloc_r+0xb0>
 802b328:	6822      	ldr	r2, [r4, #0]
 802b32a:	1b52      	subs	r2, r2, r5
 802b32c:	d41f      	bmi.n	802b36e <_malloc_r+0xd6>
 802b32e:	2a0b      	cmp	r2, #11
 802b330:	d917      	bls.n	802b362 <_malloc_r+0xca>
 802b332:	1961      	adds	r1, r4, r5
 802b334:	42a3      	cmp	r3, r4
 802b336:	6025      	str	r5, [r4, #0]
 802b338:	bf18      	it	ne
 802b33a:	6059      	strne	r1, [r3, #4]
 802b33c:	6863      	ldr	r3, [r4, #4]
 802b33e:	bf08      	it	eq
 802b340:	f8c8 1000 	streq.w	r1, [r8]
 802b344:	5162      	str	r2, [r4, r5]
 802b346:	604b      	str	r3, [r1, #4]
 802b348:	4638      	mov	r0, r7
 802b34a:	f104 060b 	add.w	r6, r4, #11
 802b34e:	f000 f829 	bl	802b3a4 <__malloc_unlock>
 802b352:	f026 0607 	bic.w	r6, r6, #7
 802b356:	1d23      	adds	r3, r4, #4
 802b358:	1af2      	subs	r2, r6, r3
 802b35a:	d0ae      	beq.n	802b2ba <_malloc_r+0x22>
 802b35c:	1b9b      	subs	r3, r3, r6
 802b35e:	50a3      	str	r3, [r4, r2]
 802b360:	e7ab      	b.n	802b2ba <_malloc_r+0x22>
 802b362:	42a3      	cmp	r3, r4
 802b364:	6862      	ldr	r2, [r4, #4]
 802b366:	d1dd      	bne.n	802b324 <_malloc_r+0x8c>
 802b368:	f8c8 2000 	str.w	r2, [r8]
 802b36c:	e7ec      	b.n	802b348 <_malloc_r+0xb0>
 802b36e:	4623      	mov	r3, r4
 802b370:	6864      	ldr	r4, [r4, #4]
 802b372:	e7ac      	b.n	802b2ce <_malloc_r+0x36>
 802b374:	4634      	mov	r4, r6
 802b376:	6876      	ldr	r6, [r6, #4]
 802b378:	e7b4      	b.n	802b2e4 <_malloc_r+0x4c>
 802b37a:	4613      	mov	r3, r2
 802b37c:	e7cc      	b.n	802b318 <_malloc_r+0x80>
 802b37e:	230c      	movs	r3, #12
 802b380:	603b      	str	r3, [r7, #0]
 802b382:	4638      	mov	r0, r7
 802b384:	f000 f80e 	bl	802b3a4 <__malloc_unlock>
 802b388:	e797      	b.n	802b2ba <_malloc_r+0x22>
 802b38a:	6025      	str	r5, [r4, #0]
 802b38c:	e7dc      	b.n	802b348 <_malloc_r+0xb0>
 802b38e:	605b      	str	r3, [r3, #4]
 802b390:	deff      	udf	#255	; 0xff
 802b392:	bf00      	nop
 802b394:	20014170 	.word	0x20014170

0802b398 <__malloc_lock>:
 802b398:	4801      	ldr	r0, [pc, #4]	; (802b3a0 <__malloc_lock+0x8>)
 802b39a:	f000 ba52 	b.w	802b842 <__retarget_lock_acquire_recursive>
 802b39e:	bf00      	nop
 802b3a0:	200142b9 	.word	0x200142b9

0802b3a4 <__malloc_unlock>:
 802b3a4:	4801      	ldr	r0, [pc, #4]	; (802b3ac <__malloc_unlock+0x8>)
 802b3a6:	f000 ba4d 	b.w	802b844 <__retarget_lock_release_recursive>
 802b3aa:	bf00      	nop
 802b3ac:	200142b9 	.word	0x200142b9

0802b3b0 <__cxa_atexit>:
 802b3b0:	b510      	push	{r4, lr}
 802b3b2:	4c05      	ldr	r4, [pc, #20]	; (802b3c8 <__cxa_atexit+0x18>)
 802b3b4:	4613      	mov	r3, r2
 802b3b6:	b12c      	cbz	r4, 802b3c4 <__cxa_atexit+0x14>
 802b3b8:	460a      	mov	r2, r1
 802b3ba:	4601      	mov	r1, r0
 802b3bc:	2002      	movs	r0, #2
 802b3be:	f000 fa51 	bl	802b864 <__register_exitproc>
 802b3c2:	bd10      	pop	{r4, pc}
 802b3c4:	4620      	mov	r0, r4
 802b3c6:	e7fc      	b.n	802b3c2 <__cxa_atexit+0x12>
 802b3c8:	0802b865 	.word	0x0802b865

0802b3cc <std>:
 802b3cc:	2300      	movs	r3, #0
 802b3ce:	b510      	push	{r4, lr}
 802b3d0:	4604      	mov	r4, r0
 802b3d2:	e9c0 3300 	strd	r3, r3, [r0]
 802b3d6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802b3da:	6083      	str	r3, [r0, #8]
 802b3dc:	8181      	strh	r1, [r0, #12]
 802b3de:	6643      	str	r3, [r0, #100]	; 0x64
 802b3e0:	81c2      	strh	r2, [r0, #14]
 802b3e2:	6183      	str	r3, [r0, #24]
 802b3e4:	4619      	mov	r1, r3
 802b3e6:	2208      	movs	r2, #8
 802b3e8:	305c      	adds	r0, #92	; 0x5c
 802b3ea:	f000 f906 	bl	802b5fa <memset>
 802b3ee:	4b0d      	ldr	r3, [pc, #52]	; (802b424 <std+0x58>)
 802b3f0:	6263      	str	r3, [r4, #36]	; 0x24
 802b3f2:	4b0d      	ldr	r3, [pc, #52]	; (802b428 <std+0x5c>)
 802b3f4:	62a3      	str	r3, [r4, #40]	; 0x28
 802b3f6:	4b0d      	ldr	r3, [pc, #52]	; (802b42c <std+0x60>)
 802b3f8:	62e3      	str	r3, [r4, #44]	; 0x2c
 802b3fa:	4b0d      	ldr	r3, [pc, #52]	; (802b430 <std+0x64>)
 802b3fc:	6323      	str	r3, [r4, #48]	; 0x30
 802b3fe:	4b0d      	ldr	r3, [pc, #52]	; (802b434 <std+0x68>)
 802b400:	6224      	str	r4, [r4, #32]
 802b402:	429c      	cmp	r4, r3
 802b404:	d006      	beq.n	802b414 <std+0x48>
 802b406:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802b40a:	4294      	cmp	r4, r2
 802b40c:	d002      	beq.n	802b414 <std+0x48>
 802b40e:	33d0      	adds	r3, #208	; 0xd0
 802b410:	429c      	cmp	r4, r3
 802b412:	d105      	bne.n	802b420 <std+0x54>
 802b414:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802b418:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b41c:	f000 ba10 	b.w	802b840 <__retarget_lock_init_recursive>
 802b420:	bd10      	pop	{r4, pc}
 802b422:	bf00      	nop
 802b424:	0802b575 	.word	0x0802b575
 802b428:	0802b597 	.word	0x0802b597
 802b42c:	0802b5cf 	.word	0x0802b5cf
 802b430:	0802b5f3 	.word	0x0802b5f3
 802b434:	20014178 	.word	0x20014178

0802b438 <stdio_exit_handler>:
 802b438:	4a02      	ldr	r2, [pc, #8]	; (802b444 <stdio_exit_handler+0xc>)
 802b43a:	4903      	ldr	r1, [pc, #12]	; (802b448 <stdio_exit_handler+0x10>)
 802b43c:	4803      	ldr	r0, [pc, #12]	; (802b44c <stdio_exit_handler+0x14>)
 802b43e:	f000 b87b 	b.w	802b538 <_fwalk_sglue>
 802b442:	bf00      	nop
 802b444:	20000108 	.word	0x20000108
 802b448:	0802c06d 	.word	0x0802c06d
 802b44c:	20000114 	.word	0x20000114

0802b450 <cleanup_stdio>:
 802b450:	6841      	ldr	r1, [r0, #4]
 802b452:	4b0c      	ldr	r3, [pc, #48]	; (802b484 <cleanup_stdio+0x34>)
 802b454:	4299      	cmp	r1, r3
 802b456:	b510      	push	{r4, lr}
 802b458:	4604      	mov	r4, r0
 802b45a:	d001      	beq.n	802b460 <cleanup_stdio+0x10>
 802b45c:	f000 fe06 	bl	802c06c <_fflush_r>
 802b460:	68a1      	ldr	r1, [r4, #8]
 802b462:	4b09      	ldr	r3, [pc, #36]	; (802b488 <cleanup_stdio+0x38>)
 802b464:	4299      	cmp	r1, r3
 802b466:	d002      	beq.n	802b46e <cleanup_stdio+0x1e>
 802b468:	4620      	mov	r0, r4
 802b46a:	f000 fdff 	bl	802c06c <_fflush_r>
 802b46e:	68e1      	ldr	r1, [r4, #12]
 802b470:	4b06      	ldr	r3, [pc, #24]	; (802b48c <cleanup_stdio+0x3c>)
 802b472:	4299      	cmp	r1, r3
 802b474:	d004      	beq.n	802b480 <cleanup_stdio+0x30>
 802b476:	4620      	mov	r0, r4
 802b478:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b47c:	f000 bdf6 	b.w	802c06c <_fflush_r>
 802b480:	bd10      	pop	{r4, pc}
 802b482:	bf00      	nop
 802b484:	20014178 	.word	0x20014178
 802b488:	200141e0 	.word	0x200141e0
 802b48c:	20014248 	.word	0x20014248

0802b490 <global_stdio_init.part.0>:
 802b490:	b510      	push	{r4, lr}
 802b492:	4b0b      	ldr	r3, [pc, #44]	; (802b4c0 <global_stdio_init.part.0+0x30>)
 802b494:	4c0b      	ldr	r4, [pc, #44]	; (802b4c4 <global_stdio_init.part.0+0x34>)
 802b496:	4a0c      	ldr	r2, [pc, #48]	; (802b4c8 <global_stdio_init.part.0+0x38>)
 802b498:	601a      	str	r2, [r3, #0]
 802b49a:	4620      	mov	r0, r4
 802b49c:	2200      	movs	r2, #0
 802b49e:	2104      	movs	r1, #4
 802b4a0:	f7ff ff94 	bl	802b3cc <std>
 802b4a4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802b4a8:	2201      	movs	r2, #1
 802b4aa:	2109      	movs	r1, #9
 802b4ac:	f7ff ff8e 	bl	802b3cc <std>
 802b4b0:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802b4b4:	2202      	movs	r2, #2
 802b4b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b4ba:	2112      	movs	r1, #18
 802b4bc:	f7ff bf86 	b.w	802b3cc <std>
 802b4c0:	200142b0 	.word	0x200142b0
 802b4c4:	20014178 	.word	0x20014178
 802b4c8:	0802b439 	.word	0x0802b439

0802b4cc <__sfp_lock_acquire>:
 802b4cc:	4801      	ldr	r0, [pc, #4]	; (802b4d4 <__sfp_lock_acquire+0x8>)
 802b4ce:	f000 b9b8 	b.w	802b842 <__retarget_lock_acquire_recursive>
 802b4d2:	bf00      	nop
 802b4d4:	200142ba 	.word	0x200142ba

0802b4d8 <__sfp_lock_release>:
 802b4d8:	4801      	ldr	r0, [pc, #4]	; (802b4e0 <__sfp_lock_release+0x8>)
 802b4da:	f000 b9b3 	b.w	802b844 <__retarget_lock_release_recursive>
 802b4de:	bf00      	nop
 802b4e0:	200142ba 	.word	0x200142ba

0802b4e4 <__sinit>:
 802b4e4:	b510      	push	{r4, lr}
 802b4e6:	4604      	mov	r4, r0
 802b4e8:	f7ff fff0 	bl	802b4cc <__sfp_lock_acquire>
 802b4ec:	6a23      	ldr	r3, [r4, #32]
 802b4ee:	b11b      	cbz	r3, 802b4f8 <__sinit+0x14>
 802b4f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b4f4:	f7ff bff0 	b.w	802b4d8 <__sfp_lock_release>
 802b4f8:	4b04      	ldr	r3, [pc, #16]	; (802b50c <__sinit+0x28>)
 802b4fa:	6223      	str	r3, [r4, #32]
 802b4fc:	4b04      	ldr	r3, [pc, #16]	; (802b510 <__sinit+0x2c>)
 802b4fe:	681b      	ldr	r3, [r3, #0]
 802b500:	2b00      	cmp	r3, #0
 802b502:	d1f5      	bne.n	802b4f0 <__sinit+0xc>
 802b504:	f7ff ffc4 	bl	802b490 <global_stdio_init.part.0>
 802b508:	e7f2      	b.n	802b4f0 <__sinit+0xc>
 802b50a:	bf00      	nop
 802b50c:	0802b451 	.word	0x0802b451
 802b510:	200142b0 	.word	0x200142b0

0802b514 <fiprintf>:
 802b514:	b40e      	push	{r1, r2, r3}
 802b516:	b503      	push	{r0, r1, lr}
 802b518:	4601      	mov	r1, r0
 802b51a:	ab03      	add	r3, sp, #12
 802b51c:	4805      	ldr	r0, [pc, #20]	; (802b534 <fiprintf+0x20>)
 802b51e:	f853 2b04 	ldr.w	r2, [r3], #4
 802b522:	6800      	ldr	r0, [r0, #0]
 802b524:	9301      	str	r3, [sp, #4]
 802b526:	f000 fa71 	bl	802ba0c <_vfiprintf_r>
 802b52a:	b002      	add	sp, #8
 802b52c:	f85d eb04 	ldr.w	lr, [sp], #4
 802b530:	b003      	add	sp, #12
 802b532:	4770      	bx	lr
 802b534:	20000160 	.word	0x20000160

0802b538 <_fwalk_sglue>:
 802b538:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b53c:	4607      	mov	r7, r0
 802b53e:	4688      	mov	r8, r1
 802b540:	4614      	mov	r4, r2
 802b542:	2600      	movs	r6, #0
 802b544:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802b548:	f1b9 0901 	subs.w	r9, r9, #1
 802b54c:	d505      	bpl.n	802b55a <_fwalk_sglue+0x22>
 802b54e:	6824      	ldr	r4, [r4, #0]
 802b550:	2c00      	cmp	r4, #0
 802b552:	d1f7      	bne.n	802b544 <_fwalk_sglue+0xc>
 802b554:	4630      	mov	r0, r6
 802b556:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b55a:	89ab      	ldrh	r3, [r5, #12]
 802b55c:	2b01      	cmp	r3, #1
 802b55e:	d907      	bls.n	802b570 <_fwalk_sglue+0x38>
 802b560:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802b564:	3301      	adds	r3, #1
 802b566:	d003      	beq.n	802b570 <_fwalk_sglue+0x38>
 802b568:	4629      	mov	r1, r5
 802b56a:	4638      	mov	r0, r7
 802b56c:	47c0      	blx	r8
 802b56e:	4306      	orrs	r6, r0
 802b570:	3568      	adds	r5, #104	; 0x68
 802b572:	e7e9      	b.n	802b548 <_fwalk_sglue+0x10>

0802b574 <__sread>:
 802b574:	b510      	push	{r4, lr}
 802b576:	460c      	mov	r4, r1
 802b578:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b57c:	f000 f8ee 	bl	802b75c <_read_r>
 802b580:	2800      	cmp	r0, #0
 802b582:	bfab      	itete	ge
 802b584:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802b586:	89a3      	ldrhlt	r3, [r4, #12]
 802b588:	181b      	addge	r3, r3, r0
 802b58a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802b58e:	bfac      	ite	ge
 802b590:	6563      	strge	r3, [r4, #84]	; 0x54
 802b592:	81a3      	strhlt	r3, [r4, #12]
 802b594:	bd10      	pop	{r4, pc}

0802b596 <__swrite>:
 802b596:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b59a:	461f      	mov	r7, r3
 802b59c:	898b      	ldrh	r3, [r1, #12]
 802b59e:	05db      	lsls	r3, r3, #23
 802b5a0:	4605      	mov	r5, r0
 802b5a2:	460c      	mov	r4, r1
 802b5a4:	4616      	mov	r6, r2
 802b5a6:	d505      	bpl.n	802b5b4 <__swrite+0x1e>
 802b5a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b5ac:	2302      	movs	r3, #2
 802b5ae:	2200      	movs	r2, #0
 802b5b0:	f000 f8c2 	bl	802b738 <_lseek_r>
 802b5b4:	89a3      	ldrh	r3, [r4, #12]
 802b5b6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802b5ba:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802b5be:	81a3      	strh	r3, [r4, #12]
 802b5c0:	4632      	mov	r2, r6
 802b5c2:	463b      	mov	r3, r7
 802b5c4:	4628      	mov	r0, r5
 802b5c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802b5ca:	f000 b8fd 	b.w	802b7c8 <_write_r>

0802b5ce <__sseek>:
 802b5ce:	b510      	push	{r4, lr}
 802b5d0:	460c      	mov	r4, r1
 802b5d2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b5d6:	f000 f8af 	bl	802b738 <_lseek_r>
 802b5da:	1c43      	adds	r3, r0, #1
 802b5dc:	89a3      	ldrh	r3, [r4, #12]
 802b5de:	bf15      	itete	ne
 802b5e0:	6560      	strne	r0, [r4, #84]	; 0x54
 802b5e2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802b5e6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802b5ea:	81a3      	strheq	r3, [r4, #12]
 802b5ec:	bf18      	it	ne
 802b5ee:	81a3      	strhne	r3, [r4, #12]
 802b5f0:	bd10      	pop	{r4, pc}

0802b5f2 <__sclose>:
 802b5f2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b5f6:	f000 b839 	b.w	802b66c <_close_r>

0802b5fa <memset>:
 802b5fa:	4402      	add	r2, r0
 802b5fc:	4603      	mov	r3, r0
 802b5fe:	4293      	cmp	r3, r2
 802b600:	d100      	bne.n	802b604 <memset+0xa>
 802b602:	4770      	bx	lr
 802b604:	f803 1b01 	strb.w	r1, [r3], #1
 802b608:	e7f9      	b.n	802b5fe <memset+0x4>

0802b60a <_raise_r>:
 802b60a:	291f      	cmp	r1, #31
 802b60c:	b538      	push	{r3, r4, r5, lr}
 802b60e:	4604      	mov	r4, r0
 802b610:	460d      	mov	r5, r1
 802b612:	d904      	bls.n	802b61e <_raise_r+0x14>
 802b614:	2316      	movs	r3, #22
 802b616:	6003      	str	r3, [r0, #0]
 802b618:	f04f 30ff 	mov.w	r0, #4294967295
 802b61c:	bd38      	pop	{r3, r4, r5, pc}
 802b61e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802b620:	b112      	cbz	r2, 802b628 <_raise_r+0x1e>
 802b622:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802b626:	b94b      	cbnz	r3, 802b63c <_raise_r+0x32>
 802b628:	4620      	mov	r0, r4
 802b62a:	f000 f8bb 	bl	802b7a4 <_getpid_r>
 802b62e:	462a      	mov	r2, r5
 802b630:	4601      	mov	r1, r0
 802b632:	4620      	mov	r0, r4
 802b634:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802b638:	f000 b8a2 	b.w	802b780 <_kill_r>
 802b63c:	2b01      	cmp	r3, #1
 802b63e:	d00a      	beq.n	802b656 <_raise_r+0x4c>
 802b640:	1c59      	adds	r1, r3, #1
 802b642:	d103      	bne.n	802b64c <_raise_r+0x42>
 802b644:	2316      	movs	r3, #22
 802b646:	6003      	str	r3, [r0, #0]
 802b648:	2001      	movs	r0, #1
 802b64a:	e7e7      	b.n	802b61c <_raise_r+0x12>
 802b64c:	2400      	movs	r4, #0
 802b64e:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802b652:	4628      	mov	r0, r5
 802b654:	4798      	blx	r3
 802b656:	2000      	movs	r0, #0
 802b658:	e7e0      	b.n	802b61c <_raise_r+0x12>
	...

0802b65c <raise>:
 802b65c:	4b02      	ldr	r3, [pc, #8]	; (802b668 <raise+0xc>)
 802b65e:	4601      	mov	r1, r0
 802b660:	6818      	ldr	r0, [r3, #0]
 802b662:	f7ff bfd2 	b.w	802b60a <_raise_r>
 802b666:	bf00      	nop
 802b668:	20000160 	.word	0x20000160

0802b66c <_close_r>:
 802b66c:	b538      	push	{r3, r4, r5, lr}
 802b66e:	4d06      	ldr	r5, [pc, #24]	; (802b688 <_close_r+0x1c>)
 802b670:	2300      	movs	r3, #0
 802b672:	4604      	mov	r4, r0
 802b674:	4608      	mov	r0, r1
 802b676:	602b      	str	r3, [r5, #0]
 802b678:	f7d6 fa8e 	bl	8001b98 <_close>
 802b67c:	1c43      	adds	r3, r0, #1
 802b67e:	d102      	bne.n	802b686 <_close_r+0x1a>
 802b680:	682b      	ldr	r3, [r5, #0]
 802b682:	b103      	cbz	r3, 802b686 <_close_r+0x1a>
 802b684:	6023      	str	r3, [r4, #0]
 802b686:	bd38      	pop	{r3, r4, r5, pc}
 802b688:	200142b4 	.word	0x200142b4

0802b68c <_reclaim_reent>:
 802b68c:	4b29      	ldr	r3, [pc, #164]	; (802b734 <_reclaim_reent+0xa8>)
 802b68e:	681b      	ldr	r3, [r3, #0]
 802b690:	4283      	cmp	r3, r0
 802b692:	b570      	push	{r4, r5, r6, lr}
 802b694:	4604      	mov	r4, r0
 802b696:	d04b      	beq.n	802b730 <_reclaim_reent+0xa4>
 802b698:	69c3      	ldr	r3, [r0, #28]
 802b69a:	b143      	cbz	r3, 802b6ae <_reclaim_reent+0x22>
 802b69c:	68db      	ldr	r3, [r3, #12]
 802b69e:	2b00      	cmp	r3, #0
 802b6a0:	d144      	bne.n	802b72c <_reclaim_reent+0xa0>
 802b6a2:	69e3      	ldr	r3, [r4, #28]
 802b6a4:	6819      	ldr	r1, [r3, #0]
 802b6a6:	b111      	cbz	r1, 802b6ae <_reclaim_reent+0x22>
 802b6a8:	4620      	mov	r0, r4
 802b6aa:	f000 f939 	bl	802b920 <_free_r>
 802b6ae:	6961      	ldr	r1, [r4, #20]
 802b6b0:	b111      	cbz	r1, 802b6b8 <_reclaim_reent+0x2c>
 802b6b2:	4620      	mov	r0, r4
 802b6b4:	f000 f934 	bl	802b920 <_free_r>
 802b6b8:	69e1      	ldr	r1, [r4, #28]
 802b6ba:	b111      	cbz	r1, 802b6c2 <_reclaim_reent+0x36>
 802b6bc:	4620      	mov	r0, r4
 802b6be:	f000 f92f 	bl	802b920 <_free_r>
 802b6c2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802b6c4:	b111      	cbz	r1, 802b6cc <_reclaim_reent+0x40>
 802b6c6:	4620      	mov	r0, r4
 802b6c8:	f000 f92a 	bl	802b920 <_free_r>
 802b6cc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802b6ce:	b111      	cbz	r1, 802b6d6 <_reclaim_reent+0x4a>
 802b6d0:	4620      	mov	r0, r4
 802b6d2:	f000 f925 	bl	802b920 <_free_r>
 802b6d6:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802b6d8:	b111      	cbz	r1, 802b6e0 <_reclaim_reent+0x54>
 802b6da:	4620      	mov	r0, r4
 802b6dc:	f000 f920 	bl	802b920 <_free_r>
 802b6e0:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802b6e2:	b111      	cbz	r1, 802b6ea <_reclaim_reent+0x5e>
 802b6e4:	4620      	mov	r0, r4
 802b6e6:	f000 f91b 	bl	802b920 <_free_r>
 802b6ea:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802b6ec:	b111      	cbz	r1, 802b6f4 <_reclaim_reent+0x68>
 802b6ee:	4620      	mov	r0, r4
 802b6f0:	f000 f916 	bl	802b920 <_free_r>
 802b6f4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802b6f6:	b111      	cbz	r1, 802b6fe <_reclaim_reent+0x72>
 802b6f8:	4620      	mov	r0, r4
 802b6fa:	f000 f911 	bl	802b920 <_free_r>
 802b6fe:	6a23      	ldr	r3, [r4, #32]
 802b700:	b1b3      	cbz	r3, 802b730 <_reclaim_reent+0xa4>
 802b702:	4620      	mov	r0, r4
 802b704:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802b708:	4718      	bx	r3
 802b70a:	5949      	ldr	r1, [r1, r5]
 802b70c:	b941      	cbnz	r1, 802b720 <_reclaim_reent+0x94>
 802b70e:	3504      	adds	r5, #4
 802b710:	69e3      	ldr	r3, [r4, #28]
 802b712:	2d80      	cmp	r5, #128	; 0x80
 802b714:	68d9      	ldr	r1, [r3, #12]
 802b716:	d1f8      	bne.n	802b70a <_reclaim_reent+0x7e>
 802b718:	4620      	mov	r0, r4
 802b71a:	f000 f901 	bl	802b920 <_free_r>
 802b71e:	e7c0      	b.n	802b6a2 <_reclaim_reent+0x16>
 802b720:	680e      	ldr	r6, [r1, #0]
 802b722:	4620      	mov	r0, r4
 802b724:	f000 f8fc 	bl	802b920 <_free_r>
 802b728:	4631      	mov	r1, r6
 802b72a:	e7ef      	b.n	802b70c <_reclaim_reent+0x80>
 802b72c:	2500      	movs	r5, #0
 802b72e:	e7ef      	b.n	802b710 <_reclaim_reent+0x84>
 802b730:	bd70      	pop	{r4, r5, r6, pc}
 802b732:	bf00      	nop
 802b734:	20000160 	.word	0x20000160

0802b738 <_lseek_r>:
 802b738:	b538      	push	{r3, r4, r5, lr}
 802b73a:	4d07      	ldr	r5, [pc, #28]	; (802b758 <_lseek_r+0x20>)
 802b73c:	4604      	mov	r4, r0
 802b73e:	4608      	mov	r0, r1
 802b740:	4611      	mov	r1, r2
 802b742:	2200      	movs	r2, #0
 802b744:	602a      	str	r2, [r5, #0]
 802b746:	461a      	mov	r2, r3
 802b748:	f7d6 fa32 	bl	8001bb0 <_lseek>
 802b74c:	1c43      	adds	r3, r0, #1
 802b74e:	d102      	bne.n	802b756 <_lseek_r+0x1e>
 802b750:	682b      	ldr	r3, [r5, #0]
 802b752:	b103      	cbz	r3, 802b756 <_lseek_r+0x1e>
 802b754:	6023      	str	r3, [r4, #0]
 802b756:	bd38      	pop	{r3, r4, r5, pc}
 802b758:	200142b4 	.word	0x200142b4

0802b75c <_read_r>:
 802b75c:	b538      	push	{r3, r4, r5, lr}
 802b75e:	4d07      	ldr	r5, [pc, #28]	; (802b77c <_read_r+0x20>)
 802b760:	4604      	mov	r4, r0
 802b762:	4608      	mov	r0, r1
 802b764:	4611      	mov	r1, r2
 802b766:	2200      	movs	r2, #0
 802b768:	602a      	str	r2, [r5, #0]
 802b76a:	461a      	mov	r2, r3
 802b76c:	f7d6 f9f8 	bl	8001b60 <_read>
 802b770:	1c43      	adds	r3, r0, #1
 802b772:	d102      	bne.n	802b77a <_read_r+0x1e>
 802b774:	682b      	ldr	r3, [r5, #0]
 802b776:	b103      	cbz	r3, 802b77a <_read_r+0x1e>
 802b778:	6023      	str	r3, [r4, #0]
 802b77a:	bd38      	pop	{r3, r4, r5, pc}
 802b77c:	200142b4 	.word	0x200142b4

0802b780 <_kill_r>:
 802b780:	b538      	push	{r3, r4, r5, lr}
 802b782:	4d07      	ldr	r5, [pc, #28]	; (802b7a0 <_kill_r+0x20>)
 802b784:	2300      	movs	r3, #0
 802b786:	4604      	mov	r4, r0
 802b788:	4608      	mov	r0, r1
 802b78a:	4611      	mov	r1, r2
 802b78c:	602b      	str	r3, [r5, #0]
 802b78e:	f7d6 f9d9 	bl	8001b44 <_kill>
 802b792:	1c43      	adds	r3, r0, #1
 802b794:	d102      	bne.n	802b79c <_kill_r+0x1c>
 802b796:	682b      	ldr	r3, [r5, #0]
 802b798:	b103      	cbz	r3, 802b79c <_kill_r+0x1c>
 802b79a:	6023      	str	r3, [r4, #0]
 802b79c:	bd38      	pop	{r3, r4, r5, pc}
 802b79e:	bf00      	nop
 802b7a0:	200142b4 	.word	0x200142b4

0802b7a4 <_getpid_r>:
 802b7a4:	f7d6 b9cc 	b.w	8001b40 <_getpid>

0802b7a8 <_sbrk_r>:
 802b7a8:	b538      	push	{r3, r4, r5, lr}
 802b7aa:	4d06      	ldr	r5, [pc, #24]	; (802b7c4 <_sbrk_r+0x1c>)
 802b7ac:	2300      	movs	r3, #0
 802b7ae:	4604      	mov	r4, r0
 802b7b0:	4608      	mov	r0, r1
 802b7b2:	602b      	str	r3, [r5, #0]
 802b7b4:	f7d6 f9fe 	bl	8001bb4 <_sbrk>
 802b7b8:	1c43      	adds	r3, r0, #1
 802b7ba:	d102      	bne.n	802b7c2 <_sbrk_r+0x1a>
 802b7bc:	682b      	ldr	r3, [r5, #0]
 802b7be:	b103      	cbz	r3, 802b7c2 <_sbrk_r+0x1a>
 802b7c0:	6023      	str	r3, [r4, #0]
 802b7c2:	bd38      	pop	{r3, r4, r5, pc}
 802b7c4:	200142b4 	.word	0x200142b4

0802b7c8 <_write_r>:
 802b7c8:	b538      	push	{r3, r4, r5, lr}
 802b7ca:	4d07      	ldr	r5, [pc, #28]	; (802b7e8 <_write_r+0x20>)
 802b7cc:	4604      	mov	r4, r0
 802b7ce:	4608      	mov	r0, r1
 802b7d0:	4611      	mov	r1, r2
 802b7d2:	2200      	movs	r2, #0
 802b7d4:	602a      	str	r2, [r5, #0]
 802b7d6:	461a      	mov	r2, r3
 802b7d8:	f7d6 f9d0 	bl	8001b7c <_write>
 802b7dc:	1c43      	adds	r3, r0, #1
 802b7de:	d102      	bne.n	802b7e6 <_write_r+0x1e>
 802b7e0:	682b      	ldr	r3, [r5, #0]
 802b7e2:	b103      	cbz	r3, 802b7e6 <_write_r+0x1e>
 802b7e4:	6023      	str	r3, [r4, #0]
 802b7e6:	bd38      	pop	{r3, r4, r5, pc}
 802b7e8:	200142b4 	.word	0x200142b4

0802b7ec <__errno>:
 802b7ec:	4b01      	ldr	r3, [pc, #4]	; (802b7f4 <__errno+0x8>)
 802b7ee:	6818      	ldr	r0, [r3, #0]
 802b7f0:	4770      	bx	lr
 802b7f2:	bf00      	nop
 802b7f4:	20000160 	.word	0x20000160

0802b7f8 <__libc_init_array>:
 802b7f8:	b570      	push	{r4, r5, r6, lr}
 802b7fa:	4d0d      	ldr	r5, [pc, #52]	; (802b830 <__libc_init_array+0x38>)
 802b7fc:	4c0d      	ldr	r4, [pc, #52]	; (802b834 <__libc_init_array+0x3c>)
 802b7fe:	1b64      	subs	r4, r4, r5
 802b800:	10a4      	asrs	r4, r4, #2
 802b802:	2600      	movs	r6, #0
 802b804:	42a6      	cmp	r6, r4
 802b806:	d109      	bne.n	802b81c <__libc_init_array+0x24>
 802b808:	4d0b      	ldr	r5, [pc, #44]	; (802b838 <__libc_init_array+0x40>)
 802b80a:	4c0c      	ldr	r4, [pc, #48]	; (802b83c <__libc_init_array+0x44>)
 802b80c:	f000 fd70 	bl	802c2f0 <_init>
 802b810:	1b64      	subs	r4, r4, r5
 802b812:	10a4      	asrs	r4, r4, #2
 802b814:	2600      	movs	r6, #0
 802b816:	42a6      	cmp	r6, r4
 802b818:	d105      	bne.n	802b826 <__libc_init_array+0x2e>
 802b81a:	bd70      	pop	{r4, r5, r6, pc}
 802b81c:	f855 3b04 	ldr.w	r3, [r5], #4
 802b820:	4798      	blx	r3
 802b822:	3601      	adds	r6, #1
 802b824:	e7ee      	b.n	802b804 <__libc_init_array+0xc>
 802b826:	f855 3b04 	ldr.w	r3, [r5], #4
 802b82a:	4798      	blx	r3
 802b82c:	3601      	adds	r6, #1
 802b82e:	e7f2      	b.n	802b816 <__libc_init_array+0x1e>
 802b830:	080ccb9c 	.word	0x080ccb9c
 802b834:	080ccb9c 	.word	0x080ccb9c
 802b838:	080ccb9c 	.word	0x080ccb9c
 802b83c:	080ccbb0 	.word	0x080ccbb0

0802b840 <__retarget_lock_init_recursive>:
 802b840:	4770      	bx	lr

0802b842 <__retarget_lock_acquire_recursive>:
 802b842:	4770      	bx	lr

0802b844 <__retarget_lock_release_recursive>:
 802b844:	4770      	bx	lr

0802b846 <memcpy>:
 802b846:	440a      	add	r2, r1
 802b848:	4291      	cmp	r1, r2
 802b84a:	f100 33ff 	add.w	r3, r0, #4294967295
 802b84e:	d100      	bne.n	802b852 <memcpy+0xc>
 802b850:	4770      	bx	lr
 802b852:	b510      	push	{r4, lr}
 802b854:	f811 4b01 	ldrb.w	r4, [r1], #1
 802b858:	f803 4f01 	strb.w	r4, [r3, #1]!
 802b85c:	4291      	cmp	r1, r2
 802b85e:	d1f9      	bne.n	802b854 <memcpy+0xe>
 802b860:	bd10      	pop	{r4, pc}
	...

0802b864 <__register_exitproc>:
 802b864:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b868:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802b91c <__register_exitproc+0xb8>
 802b86c:	4606      	mov	r6, r0
 802b86e:	f8d8 0000 	ldr.w	r0, [r8]
 802b872:	461f      	mov	r7, r3
 802b874:	460d      	mov	r5, r1
 802b876:	4691      	mov	r9, r2
 802b878:	f7ff ffe3 	bl	802b842 <__retarget_lock_acquire_recursive>
 802b87c:	4b23      	ldr	r3, [pc, #140]	; (802b90c <__register_exitproc+0xa8>)
 802b87e:	681c      	ldr	r4, [r3, #0]
 802b880:	b934      	cbnz	r4, 802b890 <__register_exitproc+0x2c>
 802b882:	4c23      	ldr	r4, [pc, #140]	; (802b910 <__register_exitproc+0xac>)
 802b884:	601c      	str	r4, [r3, #0]
 802b886:	4b23      	ldr	r3, [pc, #140]	; (802b914 <__register_exitproc+0xb0>)
 802b888:	b113      	cbz	r3, 802b890 <__register_exitproc+0x2c>
 802b88a:	681b      	ldr	r3, [r3, #0]
 802b88c:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802b890:	6863      	ldr	r3, [r4, #4]
 802b892:	2b1f      	cmp	r3, #31
 802b894:	dd07      	ble.n	802b8a6 <__register_exitproc+0x42>
 802b896:	f8d8 0000 	ldr.w	r0, [r8]
 802b89a:	f7ff ffd3 	bl	802b844 <__retarget_lock_release_recursive>
 802b89e:	f04f 30ff 	mov.w	r0, #4294967295
 802b8a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b8a6:	b32e      	cbz	r6, 802b8f4 <__register_exitproc+0x90>
 802b8a8:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802b8ac:	b968      	cbnz	r0, 802b8ca <__register_exitproc+0x66>
 802b8ae:	4b1a      	ldr	r3, [pc, #104]	; (802b918 <__register_exitproc+0xb4>)
 802b8b0:	2b00      	cmp	r3, #0
 802b8b2:	d0f0      	beq.n	802b896 <__register_exitproc+0x32>
 802b8b4:	f44f 7084 	mov.w	r0, #264	; 0x108
 802b8b8:	f7ff fcbe 	bl	802b238 <malloc>
 802b8bc:	2800      	cmp	r0, #0
 802b8be:	d0ea      	beq.n	802b896 <__register_exitproc+0x32>
 802b8c0:	2300      	movs	r3, #0
 802b8c2:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802b8c6:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802b8ca:	6863      	ldr	r3, [r4, #4]
 802b8cc:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802b8d0:	2201      	movs	r2, #1
 802b8d2:	409a      	lsls	r2, r3
 802b8d4:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802b8d8:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802b8dc:	4313      	orrs	r3, r2
 802b8de:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802b8e2:	2e02      	cmp	r6, #2
 802b8e4:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802b8e8:	bf02      	ittt	eq
 802b8ea:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802b8ee:	4313      	orreq	r3, r2
 802b8f0:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802b8f4:	6863      	ldr	r3, [r4, #4]
 802b8f6:	f8d8 0000 	ldr.w	r0, [r8]
 802b8fa:	1c5a      	adds	r2, r3, #1
 802b8fc:	3302      	adds	r3, #2
 802b8fe:	6062      	str	r2, [r4, #4]
 802b900:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802b904:	f7ff ff9e 	bl	802b844 <__retarget_lock_release_recursive>
 802b908:	2000      	movs	r0, #0
 802b90a:	e7ca      	b.n	802b8a2 <__register_exitproc+0x3e>
 802b90c:	20014348 	.word	0x20014348
 802b910:	200142bc 	.word	0x200142bc
 802b914:	08043474 	.word	0x08043474
 802b918:	0802b239 	.word	0x0802b239
 802b91c:	20000164 	.word	0x20000164

0802b920 <_free_r>:
 802b920:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802b922:	2900      	cmp	r1, #0
 802b924:	d044      	beq.n	802b9b0 <_free_r+0x90>
 802b926:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802b92a:	9001      	str	r0, [sp, #4]
 802b92c:	2b00      	cmp	r3, #0
 802b92e:	f1a1 0404 	sub.w	r4, r1, #4
 802b932:	bfb8      	it	lt
 802b934:	18e4      	addlt	r4, r4, r3
 802b936:	f7ff fd2f 	bl	802b398 <__malloc_lock>
 802b93a:	4a1e      	ldr	r2, [pc, #120]	; (802b9b4 <_free_r+0x94>)
 802b93c:	9801      	ldr	r0, [sp, #4]
 802b93e:	6813      	ldr	r3, [r2, #0]
 802b940:	b933      	cbnz	r3, 802b950 <_free_r+0x30>
 802b942:	6063      	str	r3, [r4, #4]
 802b944:	6014      	str	r4, [r2, #0]
 802b946:	b003      	add	sp, #12
 802b948:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802b94c:	f7ff bd2a 	b.w	802b3a4 <__malloc_unlock>
 802b950:	42a3      	cmp	r3, r4
 802b952:	d908      	bls.n	802b966 <_free_r+0x46>
 802b954:	6825      	ldr	r5, [r4, #0]
 802b956:	1961      	adds	r1, r4, r5
 802b958:	428b      	cmp	r3, r1
 802b95a:	bf01      	itttt	eq
 802b95c:	6819      	ldreq	r1, [r3, #0]
 802b95e:	685b      	ldreq	r3, [r3, #4]
 802b960:	1949      	addeq	r1, r1, r5
 802b962:	6021      	streq	r1, [r4, #0]
 802b964:	e7ed      	b.n	802b942 <_free_r+0x22>
 802b966:	461a      	mov	r2, r3
 802b968:	685b      	ldr	r3, [r3, #4]
 802b96a:	b10b      	cbz	r3, 802b970 <_free_r+0x50>
 802b96c:	42a3      	cmp	r3, r4
 802b96e:	d9fa      	bls.n	802b966 <_free_r+0x46>
 802b970:	6811      	ldr	r1, [r2, #0]
 802b972:	1855      	adds	r5, r2, r1
 802b974:	42a5      	cmp	r5, r4
 802b976:	d10b      	bne.n	802b990 <_free_r+0x70>
 802b978:	6824      	ldr	r4, [r4, #0]
 802b97a:	4421      	add	r1, r4
 802b97c:	1854      	adds	r4, r2, r1
 802b97e:	42a3      	cmp	r3, r4
 802b980:	6011      	str	r1, [r2, #0]
 802b982:	d1e0      	bne.n	802b946 <_free_r+0x26>
 802b984:	681c      	ldr	r4, [r3, #0]
 802b986:	685b      	ldr	r3, [r3, #4]
 802b988:	6053      	str	r3, [r2, #4]
 802b98a:	440c      	add	r4, r1
 802b98c:	6014      	str	r4, [r2, #0]
 802b98e:	e7da      	b.n	802b946 <_free_r+0x26>
 802b990:	d902      	bls.n	802b998 <_free_r+0x78>
 802b992:	230c      	movs	r3, #12
 802b994:	6003      	str	r3, [r0, #0]
 802b996:	e7d6      	b.n	802b946 <_free_r+0x26>
 802b998:	6825      	ldr	r5, [r4, #0]
 802b99a:	1961      	adds	r1, r4, r5
 802b99c:	428b      	cmp	r3, r1
 802b99e:	bf04      	itt	eq
 802b9a0:	6819      	ldreq	r1, [r3, #0]
 802b9a2:	685b      	ldreq	r3, [r3, #4]
 802b9a4:	6063      	str	r3, [r4, #4]
 802b9a6:	bf04      	itt	eq
 802b9a8:	1949      	addeq	r1, r1, r5
 802b9aa:	6021      	streq	r1, [r4, #0]
 802b9ac:	6054      	str	r4, [r2, #4]
 802b9ae:	e7ca      	b.n	802b946 <_free_r+0x26>
 802b9b0:	b003      	add	sp, #12
 802b9b2:	bd30      	pop	{r4, r5, pc}
 802b9b4:	20014170 	.word	0x20014170

0802b9b8 <__sfputc_r>:
 802b9b8:	6893      	ldr	r3, [r2, #8]
 802b9ba:	3b01      	subs	r3, #1
 802b9bc:	2b00      	cmp	r3, #0
 802b9be:	b410      	push	{r4}
 802b9c0:	6093      	str	r3, [r2, #8]
 802b9c2:	da08      	bge.n	802b9d6 <__sfputc_r+0x1e>
 802b9c4:	6994      	ldr	r4, [r2, #24]
 802b9c6:	42a3      	cmp	r3, r4
 802b9c8:	db01      	blt.n	802b9ce <__sfputc_r+0x16>
 802b9ca:	290a      	cmp	r1, #10
 802b9cc:	d103      	bne.n	802b9d6 <__sfputc_r+0x1e>
 802b9ce:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b9d2:	f000 bb73 	b.w	802c0bc <__swbuf_r>
 802b9d6:	6813      	ldr	r3, [r2, #0]
 802b9d8:	1c58      	adds	r0, r3, #1
 802b9da:	6010      	str	r0, [r2, #0]
 802b9dc:	7019      	strb	r1, [r3, #0]
 802b9de:	4608      	mov	r0, r1
 802b9e0:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b9e4:	4770      	bx	lr

0802b9e6 <__sfputs_r>:
 802b9e6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b9e8:	4606      	mov	r6, r0
 802b9ea:	460f      	mov	r7, r1
 802b9ec:	4614      	mov	r4, r2
 802b9ee:	18d5      	adds	r5, r2, r3
 802b9f0:	42ac      	cmp	r4, r5
 802b9f2:	d101      	bne.n	802b9f8 <__sfputs_r+0x12>
 802b9f4:	2000      	movs	r0, #0
 802b9f6:	e007      	b.n	802ba08 <__sfputs_r+0x22>
 802b9f8:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b9fc:	463a      	mov	r2, r7
 802b9fe:	4630      	mov	r0, r6
 802ba00:	f7ff ffda 	bl	802b9b8 <__sfputc_r>
 802ba04:	1c43      	adds	r3, r0, #1
 802ba06:	d1f3      	bne.n	802b9f0 <__sfputs_r+0xa>
 802ba08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802ba0c <_vfiprintf_r>:
 802ba0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ba10:	460d      	mov	r5, r1
 802ba12:	b09d      	sub	sp, #116	; 0x74
 802ba14:	4614      	mov	r4, r2
 802ba16:	4698      	mov	r8, r3
 802ba18:	4606      	mov	r6, r0
 802ba1a:	b118      	cbz	r0, 802ba24 <_vfiprintf_r+0x18>
 802ba1c:	6a03      	ldr	r3, [r0, #32]
 802ba1e:	b90b      	cbnz	r3, 802ba24 <_vfiprintf_r+0x18>
 802ba20:	f7ff fd60 	bl	802b4e4 <__sinit>
 802ba24:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802ba26:	07d9      	lsls	r1, r3, #31
 802ba28:	d405      	bmi.n	802ba36 <_vfiprintf_r+0x2a>
 802ba2a:	89ab      	ldrh	r3, [r5, #12]
 802ba2c:	059a      	lsls	r2, r3, #22
 802ba2e:	d402      	bmi.n	802ba36 <_vfiprintf_r+0x2a>
 802ba30:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802ba32:	f7ff ff06 	bl	802b842 <__retarget_lock_acquire_recursive>
 802ba36:	89ab      	ldrh	r3, [r5, #12]
 802ba38:	071b      	lsls	r3, r3, #28
 802ba3a:	d501      	bpl.n	802ba40 <_vfiprintf_r+0x34>
 802ba3c:	692b      	ldr	r3, [r5, #16]
 802ba3e:	b99b      	cbnz	r3, 802ba68 <_vfiprintf_r+0x5c>
 802ba40:	4629      	mov	r1, r5
 802ba42:	4630      	mov	r0, r6
 802ba44:	f000 fb78 	bl	802c138 <__swsetup_r>
 802ba48:	b170      	cbz	r0, 802ba68 <_vfiprintf_r+0x5c>
 802ba4a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802ba4c:	07dc      	lsls	r4, r3, #31
 802ba4e:	d504      	bpl.n	802ba5a <_vfiprintf_r+0x4e>
 802ba50:	f04f 30ff 	mov.w	r0, #4294967295
 802ba54:	b01d      	add	sp, #116	; 0x74
 802ba56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802ba5a:	89ab      	ldrh	r3, [r5, #12]
 802ba5c:	0598      	lsls	r0, r3, #22
 802ba5e:	d4f7      	bmi.n	802ba50 <_vfiprintf_r+0x44>
 802ba60:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802ba62:	f7ff feef 	bl	802b844 <__retarget_lock_release_recursive>
 802ba66:	e7f3      	b.n	802ba50 <_vfiprintf_r+0x44>
 802ba68:	2300      	movs	r3, #0
 802ba6a:	9309      	str	r3, [sp, #36]	; 0x24
 802ba6c:	2320      	movs	r3, #32
 802ba6e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802ba72:	f8cd 800c 	str.w	r8, [sp, #12]
 802ba76:	2330      	movs	r3, #48	; 0x30
 802ba78:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802bc2c <_vfiprintf_r+0x220>
 802ba7c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802ba80:	f04f 0901 	mov.w	r9, #1
 802ba84:	4623      	mov	r3, r4
 802ba86:	469a      	mov	sl, r3
 802ba88:	f813 2b01 	ldrb.w	r2, [r3], #1
 802ba8c:	b10a      	cbz	r2, 802ba92 <_vfiprintf_r+0x86>
 802ba8e:	2a25      	cmp	r2, #37	; 0x25
 802ba90:	d1f9      	bne.n	802ba86 <_vfiprintf_r+0x7a>
 802ba92:	ebba 0b04 	subs.w	fp, sl, r4
 802ba96:	d00b      	beq.n	802bab0 <_vfiprintf_r+0xa4>
 802ba98:	465b      	mov	r3, fp
 802ba9a:	4622      	mov	r2, r4
 802ba9c:	4629      	mov	r1, r5
 802ba9e:	4630      	mov	r0, r6
 802baa0:	f7ff ffa1 	bl	802b9e6 <__sfputs_r>
 802baa4:	3001      	adds	r0, #1
 802baa6:	f000 80a9 	beq.w	802bbfc <_vfiprintf_r+0x1f0>
 802baaa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802baac:	445a      	add	r2, fp
 802baae:	9209      	str	r2, [sp, #36]	; 0x24
 802bab0:	f89a 3000 	ldrb.w	r3, [sl]
 802bab4:	2b00      	cmp	r3, #0
 802bab6:	f000 80a1 	beq.w	802bbfc <_vfiprintf_r+0x1f0>
 802baba:	2300      	movs	r3, #0
 802babc:	f04f 32ff 	mov.w	r2, #4294967295
 802bac0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802bac4:	f10a 0a01 	add.w	sl, sl, #1
 802bac8:	9304      	str	r3, [sp, #16]
 802baca:	9307      	str	r3, [sp, #28]
 802bacc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802bad0:	931a      	str	r3, [sp, #104]	; 0x68
 802bad2:	4654      	mov	r4, sl
 802bad4:	2205      	movs	r2, #5
 802bad6:	f814 1b01 	ldrb.w	r1, [r4], #1
 802bada:	4854      	ldr	r0, [pc, #336]	; (802bc2c <_vfiprintf_r+0x220>)
 802badc:	f7d4 fbe8 	bl	80002b0 <memchr>
 802bae0:	9a04      	ldr	r2, [sp, #16]
 802bae2:	b9d8      	cbnz	r0, 802bb1c <_vfiprintf_r+0x110>
 802bae4:	06d1      	lsls	r1, r2, #27
 802bae6:	bf44      	itt	mi
 802bae8:	2320      	movmi	r3, #32
 802baea:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802baee:	0713      	lsls	r3, r2, #28
 802baf0:	bf44      	itt	mi
 802baf2:	232b      	movmi	r3, #43	; 0x2b
 802baf4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802baf8:	f89a 3000 	ldrb.w	r3, [sl]
 802bafc:	2b2a      	cmp	r3, #42	; 0x2a
 802bafe:	d015      	beq.n	802bb2c <_vfiprintf_r+0x120>
 802bb00:	9a07      	ldr	r2, [sp, #28]
 802bb02:	4654      	mov	r4, sl
 802bb04:	2000      	movs	r0, #0
 802bb06:	f04f 0c0a 	mov.w	ip, #10
 802bb0a:	4621      	mov	r1, r4
 802bb0c:	f811 3b01 	ldrb.w	r3, [r1], #1
 802bb10:	3b30      	subs	r3, #48	; 0x30
 802bb12:	2b09      	cmp	r3, #9
 802bb14:	d94d      	bls.n	802bbb2 <_vfiprintf_r+0x1a6>
 802bb16:	b1b0      	cbz	r0, 802bb46 <_vfiprintf_r+0x13a>
 802bb18:	9207      	str	r2, [sp, #28]
 802bb1a:	e014      	b.n	802bb46 <_vfiprintf_r+0x13a>
 802bb1c:	eba0 0308 	sub.w	r3, r0, r8
 802bb20:	fa09 f303 	lsl.w	r3, r9, r3
 802bb24:	4313      	orrs	r3, r2
 802bb26:	9304      	str	r3, [sp, #16]
 802bb28:	46a2      	mov	sl, r4
 802bb2a:	e7d2      	b.n	802bad2 <_vfiprintf_r+0xc6>
 802bb2c:	9b03      	ldr	r3, [sp, #12]
 802bb2e:	1d19      	adds	r1, r3, #4
 802bb30:	681b      	ldr	r3, [r3, #0]
 802bb32:	9103      	str	r1, [sp, #12]
 802bb34:	2b00      	cmp	r3, #0
 802bb36:	bfbb      	ittet	lt
 802bb38:	425b      	neglt	r3, r3
 802bb3a:	f042 0202 	orrlt.w	r2, r2, #2
 802bb3e:	9307      	strge	r3, [sp, #28]
 802bb40:	9307      	strlt	r3, [sp, #28]
 802bb42:	bfb8      	it	lt
 802bb44:	9204      	strlt	r2, [sp, #16]
 802bb46:	7823      	ldrb	r3, [r4, #0]
 802bb48:	2b2e      	cmp	r3, #46	; 0x2e
 802bb4a:	d10c      	bne.n	802bb66 <_vfiprintf_r+0x15a>
 802bb4c:	7863      	ldrb	r3, [r4, #1]
 802bb4e:	2b2a      	cmp	r3, #42	; 0x2a
 802bb50:	d134      	bne.n	802bbbc <_vfiprintf_r+0x1b0>
 802bb52:	9b03      	ldr	r3, [sp, #12]
 802bb54:	1d1a      	adds	r2, r3, #4
 802bb56:	681b      	ldr	r3, [r3, #0]
 802bb58:	9203      	str	r2, [sp, #12]
 802bb5a:	2b00      	cmp	r3, #0
 802bb5c:	bfb8      	it	lt
 802bb5e:	f04f 33ff 	movlt.w	r3, #4294967295
 802bb62:	3402      	adds	r4, #2
 802bb64:	9305      	str	r3, [sp, #20]
 802bb66:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802bc3c <_vfiprintf_r+0x230>
 802bb6a:	7821      	ldrb	r1, [r4, #0]
 802bb6c:	2203      	movs	r2, #3
 802bb6e:	4650      	mov	r0, sl
 802bb70:	f7d4 fb9e 	bl	80002b0 <memchr>
 802bb74:	b138      	cbz	r0, 802bb86 <_vfiprintf_r+0x17a>
 802bb76:	9b04      	ldr	r3, [sp, #16]
 802bb78:	eba0 000a 	sub.w	r0, r0, sl
 802bb7c:	2240      	movs	r2, #64	; 0x40
 802bb7e:	4082      	lsls	r2, r0
 802bb80:	4313      	orrs	r3, r2
 802bb82:	3401      	adds	r4, #1
 802bb84:	9304      	str	r3, [sp, #16]
 802bb86:	f814 1b01 	ldrb.w	r1, [r4], #1
 802bb8a:	4829      	ldr	r0, [pc, #164]	; (802bc30 <_vfiprintf_r+0x224>)
 802bb8c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802bb90:	2206      	movs	r2, #6
 802bb92:	f7d4 fb8d 	bl	80002b0 <memchr>
 802bb96:	2800      	cmp	r0, #0
 802bb98:	d03f      	beq.n	802bc1a <_vfiprintf_r+0x20e>
 802bb9a:	4b26      	ldr	r3, [pc, #152]	; (802bc34 <_vfiprintf_r+0x228>)
 802bb9c:	bb1b      	cbnz	r3, 802bbe6 <_vfiprintf_r+0x1da>
 802bb9e:	9b03      	ldr	r3, [sp, #12]
 802bba0:	3307      	adds	r3, #7
 802bba2:	f023 0307 	bic.w	r3, r3, #7
 802bba6:	3308      	adds	r3, #8
 802bba8:	9303      	str	r3, [sp, #12]
 802bbaa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802bbac:	443b      	add	r3, r7
 802bbae:	9309      	str	r3, [sp, #36]	; 0x24
 802bbb0:	e768      	b.n	802ba84 <_vfiprintf_r+0x78>
 802bbb2:	fb0c 3202 	mla	r2, ip, r2, r3
 802bbb6:	460c      	mov	r4, r1
 802bbb8:	2001      	movs	r0, #1
 802bbba:	e7a6      	b.n	802bb0a <_vfiprintf_r+0xfe>
 802bbbc:	2300      	movs	r3, #0
 802bbbe:	3401      	adds	r4, #1
 802bbc0:	9305      	str	r3, [sp, #20]
 802bbc2:	4619      	mov	r1, r3
 802bbc4:	f04f 0c0a 	mov.w	ip, #10
 802bbc8:	4620      	mov	r0, r4
 802bbca:	f810 2b01 	ldrb.w	r2, [r0], #1
 802bbce:	3a30      	subs	r2, #48	; 0x30
 802bbd0:	2a09      	cmp	r2, #9
 802bbd2:	d903      	bls.n	802bbdc <_vfiprintf_r+0x1d0>
 802bbd4:	2b00      	cmp	r3, #0
 802bbd6:	d0c6      	beq.n	802bb66 <_vfiprintf_r+0x15a>
 802bbd8:	9105      	str	r1, [sp, #20]
 802bbda:	e7c4      	b.n	802bb66 <_vfiprintf_r+0x15a>
 802bbdc:	fb0c 2101 	mla	r1, ip, r1, r2
 802bbe0:	4604      	mov	r4, r0
 802bbe2:	2301      	movs	r3, #1
 802bbe4:	e7f0      	b.n	802bbc8 <_vfiprintf_r+0x1bc>
 802bbe6:	ab03      	add	r3, sp, #12
 802bbe8:	9300      	str	r3, [sp, #0]
 802bbea:	462a      	mov	r2, r5
 802bbec:	4b12      	ldr	r3, [pc, #72]	; (802bc38 <_vfiprintf_r+0x22c>)
 802bbee:	a904      	add	r1, sp, #16
 802bbf0:	4630      	mov	r0, r6
 802bbf2:	f3af 8000 	nop.w
 802bbf6:	4607      	mov	r7, r0
 802bbf8:	1c78      	adds	r0, r7, #1
 802bbfa:	d1d6      	bne.n	802bbaa <_vfiprintf_r+0x19e>
 802bbfc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802bbfe:	07d9      	lsls	r1, r3, #31
 802bc00:	d405      	bmi.n	802bc0e <_vfiprintf_r+0x202>
 802bc02:	89ab      	ldrh	r3, [r5, #12]
 802bc04:	059a      	lsls	r2, r3, #22
 802bc06:	d402      	bmi.n	802bc0e <_vfiprintf_r+0x202>
 802bc08:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802bc0a:	f7ff fe1b 	bl	802b844 <__retarget_lock_release_recursive>
 802bc0e:	89ab      	ldrh	r3, [r5, #12]
 802bc10:	065b      	lsls	r3, r3, #25
 802bc12:	f53f af1d 	bmi.w	802ba50 <_vfiprintf_r+0x44>
 802bc16:	9809      	ldr	r0, [sp, #36]	; 0x24
 802bc18:	e71c      	b.n	802ba54 <_vfiprintf_r+0x48>
 802bc1a:	ab03      	add	r3, sp, #12
 802bc1c:	9300      	str	r3, [sp, #0]
 802bc1e:	462a      	mov	r2, r5
 802bc20:	4b05      	ldr	r3, [pc, #20]	; (802bc38 <_vfiprintf_r+0x22c>)
 802bc22:	a904      	add	r1, sp, #16
 802bc24:	4630      	mov	r0, r6
 802bc26:	f000 f879 	bl	802bd1c <_printf_i>
 802bc2a:	e7e4      	b.n	802bbf6 <_vfiprintf_r+0x1ea>
 802bc2c:	08043478 	.word	0x08043478
 802bc30:	08043482 	.word	0x08043482
 802bc34:	00000000 	.word	0x00000000
 802bc38:	0802b9e7 	.word	0x0802b9e7
 802bc3c:	0804347e 	.word	0x0804347e

0802bc40 <_printf_common>:
 802bc40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802bc44:	4616      	mov	r6, r2
 802bc46:	4699      	mov	r9, r3
 802bc48:	688a      	ldr	r2, [r1, #8]
 802bc4a:	690b      	ldr	r3, [r1, #16]
 802bc4c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802bc50:	4293      	cmp	r3, r2
 802bc52:	bfb8      	it	lt
 802bc54:	4613      	movlt	r3, r2
 802bc56:	6033      	str	r3, [r6, #0]
 802bc58:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802bc5c:	4607      	mov	r7, r0
 802bc5e:	460c      	mov	r4, r1
 802bc60:	b10a      	cbz	r2, 802bc66 <_printf_common+0x26>
 802bc62:	3301      	adds	r3, #1
 802bc64:	6033      	str	r3, [r6, #0]
 802bc66:	6823      	ldr	r3, [r4, #0]
 802bc68:	0699      	lsls	r1, r3, #26
 802bc6a:	bf42      	ittt	mi
 802bc6c:	6833      	ldrmi	r3, [r6, #0]
 802bc6e:	3302      	addmi	r3, #2
 802bc70:	6033      	strmi	r3, [r6, #0]
 802bc72:	6825      	ldr	r5, [r4, #0]
 802bc74:	f015 0506 	ands.w	r5, r5, #6
 802bc78:	d106      	bne.n	802bc88 <_printf_common+0x48>
 802bc7a:	f104 0a19 	add.w	sl, r4, #25
 802bc7e:	68e3      	ldr	r3, [r4, #12]
 802bc80:	6832      	ldr	r2, [r6, #0]
 802bc82:	1a9b      	subs	r3, r3, r2
 802bc84:	42ab      	cmp	r3, r5
 802bc86:	dc26      	bgt.n	802bcd6 <_printf_common+0x96>
 802bc88:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802bc8c:	1e13      	subs	r3, r2, #0
 802bc8e:	6822      	ldr	r2, [r4, #0]
 802bc90:	bf18      	it	ne
 802bc92:	2301      	movne	r3, #1
 802bc94:	0692      	lsls	r2, r2, #26
 802bc96:	d42b      	bmi.n	802bcf0 <_printf_common+0xb0>
 802bc98:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802bc9c:	4649      	mov	r1, r9
 802bc9e:	4638      	mov	r0, r7
 802bca0:	47c0      	blx	r8
 802bca2:	3001      	adds	r0, #1
 802bca4:	d01e      	beq.n	802bce4 <_printf_common+0xa4>
 802bca6:	6823      	ldr	r3, [r4, #0]
 802bca8:	6922      	ldr	r2, [r4, #16]
 802bcaa:	f003 0306 	and.w	r3, r3, #6
 802bcae:	2b04      	cmp	r3, #4
 802bcb0:	bf02      	ittt	eq
 802bcb2:	68e5      	ldreq	r5, [r4, #12]
 802bcb4:	6833      	ldreq	r3, [r6, #0]
 802bcb6:	1aed      	subeq	r5, r5, r3
 802bcb8:	68a3      	ldr	r3, [r4, #8]
 802bcba:	bf0c      	ite	eq
 802bcbc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802bcc0:	2500      	movne	r5, #0
 802bcc2:	4293      	cmp	r3, r2
 802bcc4:	bfc4      	itt	gt
 802bcc6:	1a9b      	subgt	r3, r3, r2
 802bcc8:	18ed      	addgt	r5, r5, r3
 802bcca:	2600      	movs	r6, #0
 802bccc:	341a      	adds	r4, #26
 802bcce:	42b5      	cmp	r5, r6
 802bcd0:	d11a      	bne.n	802bd08 <_printf_common+0xc8>
 802bcd2:	2000      	movs	r0, #0
 802bcd4:	e008      	b.n	802bce8 <_printf_common+0xa8>
 802bcd6:	2301      	movs	r3, #1
 802bcd8:	4652      	mov	r2, sl
 802bcda:	4649      	mov	r1, r9
 802bcdc:	4638      	mov	r0, r7
 802bcde:	47c0      	blx	r8
 802bce0:	3001      	adds	r0, #1
 802bce2:	d103      	bne.n	802bcec <_printf_common+0xac>
 802bce4:	f04f 30ff 	mov.w	r0, #4294967295
 802bce8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802bcec:	3501      	adds	r5, #1
 802bcee:	e7c6      	b.n	802bc7e <_printf_common+0x3e>
 802bcf0:	18e1      	adds	r1, r4, r3
 802bcf2:	1c5a      	adds	r2, r3, #1
 802bcf4:	2030      	movs	r0, #48	; 0x30
 802bcf6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802bcfa:	4422      	add	r2, r4
 802bcfc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802bd00:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802bd04:	3302      	adds	r3, #2
 802bd06:	e7c7      	b.n	802bc98 <_printf_common+0x58>
 802bd08:	2301      	movs	r3, #1
 802bd0a:	4622      	mov	r2, r4
 802bd0c:	4649      	mov	r1, r9
 802bd0e:	4638      	mov	r0, r7
 802bd10:	47c0      	blx	r8
 802bd12:	3001      	adds	r0, #1
 802bd14:	d0e6      	beq.n	802bce4 <_printf_common+0xa4>
 802bd16:	3601      	adds	r6, #1
 802bd18:	e7d9      	b.n	802bcce <_printf_common+0x8e>
	...

0802bd1c <_printf_i>:
 802bd1c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802bd20:	7e0f      	ldrb	r7, [r1, #24]
 802bd22:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802bd24:	2f78      	cmp	r7, #120	; 0x78
 802bd26:	4691      	mov	r9, r2
 802bd28:	4680      	mov	r8, r0
 802bd2a:	460c      	mov	r4, r1
 802bd2c:	469a      	mov	sl, r3
 802bd2e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802bd32:	d807      	bhi.n	802bd44 <_printf_i+0x28>
 802bd34:	2f62      	cmp	r7, #98	; 0x62
 802bd36:	d80a      	bhi.n	802bd4e <_printf_i+0x32>
 802bd38:	2f00      	cmp	r7, #0
 802bd3a:	f000 80d4 	beq.w	802bee6 <_printf_i+0x1ca>
 802bd3e:	2f58      	cmp	r7, #88	; 0x58
 802bd40:	f000 80c0 	beq.w	802bec4 <_printf_i+0x1a8>
 802bd44:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802bd48:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802bd4c:	e03a      	b.n	802bdc4 <_printf_i+0xa8>
 802bd4e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802bd52:	2b15      	cmp	r3, #21
 802bd54:	d8f6      	bhi.n	802bd44 <_printf_i+0x28>
 802bd56:	a101      	add	r1, pc, #4	; (adr r1, 802bd5c <_printf_i+0x40>)
 802bd58:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802bd5c:	0802bdb5 	.word	0x0802bdb5
 802bd60:	0802bdc9 	.word	0x0802bdc9
 802bd64:	0802bd45 	.word	0x0802bd45
 802bd68:	0802bd45 	.word	0x0802bd45
 802bd6c:	0802bd45 	.word	0x0802bd45
 802bd70:	0802bd45 	.word	0x0802bd45
 802bd74:	0802bdc9 	.word	0x0802bdc9
 802bd78:	0802bd45 	.word	0x0802bd45
 802bd7c:	0802bd45 	.word	0x0802bd45
 802bd80:	0802bd45 	.word	0x0802bd45
 802bd84:	0802bd45 	.word	0x0802bd45
 802bd88:	0802becd 	.word	0x0802becd
 802bd8c:	0802bdf5 	.word	0x0802bdf5
 802bd90:	0802be87 	.word	0x0802be87
 802bd94:	0802bd45 	.word	0x0802bd45
 802bd98:	0802bd45 	.word	0x0802bd45
 802bd9c:	0802beef 	.word	0x0802beef
 802bda0:	0802bd45 	.word	0x0802bd45
 802bda4:	0802bdf5 	.word	0x0802bdf5
 802bda8:	0802bd45 	.word	0x0802bd45
 802bdac:	0802bd45 	.word	0x0802bd45
 802bdb0:	0802be8f 	.word	0x0802be8f
 802bdb4:	682b      	ldr	r3, [r5, #0]
 802bdb6:	1d1a      	adds	r2, r3, #4
 802bdb8:	681b      	ldr	r3, [r3, #0]
 802bdba:	602a      	str	r2, [r5, #0]
 802bdbc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802bdc0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802bdc4:	2301      	movs	r3, #1
 802bdc6:	e09f      	b.n	802bf08 <_printf_i+0x1ec>
 802bdc8:	6820      	ldr	r0, [r4, #0]
 802bdca:	682b      	ldr	r3, [r5, #0]
 802bdcc:	0607      	lsls	r7, r0, #24
 802bdce:	f103 0104 	add.w	r1, r3, #4
 802bdd2:	6029      	str	r1, [r5, #0]
 802bdd4:	d501      	bpl.n	802bdda <_printf_i+0xbe>
 802bdd6:	681e      	ldr	r6, [r3, #0]
 802bdd8:	e003      	b.n	802bde2 <_printf_i+0xc6>
 802bdda:	0646      	lsls	r6, r0, #25
 802bddc:	d5fb      	bpl.n	802bdd6 <_printf_i+0xba>
 802bdde:	f9b3 6000 	ldrsh.w	r6, [r3]
 802bde2:	2e00      	cmp	r6, #0
 802bde4:	da03      	bge.n	802bdee <_printf_i+0xd2>
 802bde6:	232d      	movs	r3, #45	; 0x2d
 802bde8:	4276      	negs	r6, r6
 802bdea:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802bdee:	485a      	ldr	r0, [pc, #360]	; (802bf58 <_printf_i+0x23c>)
 802bdf0:	230a      	movs	r3, #10
 802bdf2:	e012      	b.n	802be1a <_printf_i+0xfe>
 802bdf4:	682b      	ldr	r3, [r5, #0]
 802bdf6:	6820      	ldr	r0, [r4, #0]
 802bdf8:	1d19      	adds	r1, r3, #4
 802bdfa:	6029      	str	r1, [r5, #0]
 802bdfc:	0605      	lsls	r5, r0, #24
 802bdfe:	d501      	bpl.n	802be04 <_printf_i+0xe8>
 802be00:	681e      	ldr	r6, [r3, #0]
 802be02:	e002      	b.n	802be0a <_printf_i+0xee>
 802be04:	0641      	lsls	r1, r0, #25
 802be06:	d5fb      	bpl.n	802be00 <_printf_i+0xe4>
 802be08:	881e      	ldrh	r6, [r3, #0]
 802be0a:	4853      	ldr	r0, [pc, #332]	; (802bf58 <_printf_i+0x23c>)
 802be0c:	2f6f      	cmp	r7, #111	; 0x6f
 802be0e:	bf0c      	ite	eq
 802be10:	2308      	moveq	r3, #8
 802be12:	230a      	movne	r3, #10
 802be14:	2100      	movs	r1, #0
 802be16:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802be1a:	6865      	ldr	r5, [r4, #4]
 802be1c:	60a5      	str	r5, [r4, #8]
 802be1e:	2d00      	cmp	r5, #0
 802be20:	bfa2      	ittt	ge
 802be22:	6821      	ldrge	r1, [r4, #0]
 802be24:	f021 0104 	bicge.w	r1, r1, #4
 802be28:	6021      	strge	r1, [r4, #0]
 802be2a:	b90e      	cbnz	r6, 802be30 <_printf_i+0x114>
 802be2c:	2d00      	cmp	r5, #0
 802be2e:	d04b      	beq.n	802bec8 <_printf_i+0x1ac>
 802be30:	4615      	mov	r5, r2
 802be32:	fbb6 f1f3 	udiv	r1, r6, r3
 802be36:	fb03 6711 	mls	r7, r3, r1, r6
 802be3a:	5dc7      	ldrb	r7, [r0, r7]
 802be3c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802be40:	4637      	mov	r7, r6
 802be42:	42bb      	cmp	r3, r7
 802be44:	460e      	mov	r6, r1
 802be46:	d9f4      	bls.n	802be32 <_printf_i+0x116>
 802be48:	2b08      	cmp	r3, #8
 802be4a:	d10b      	bne.n	802be64 <_printf_i+0x148>
 802be4c:	6823      	ldr	r3, [r4, #0]
 802be4e:	07de      	lsls	r6, r3, #31
 802be50:	d508      	bpl.n	802be64 <_printf_i+0x148>
 802be52:	6923      	ldr	r3, [r4, #16]
 802be54:	6861      	ldr	r1, [r4, #4]
 802be56:	4299      	cmp	r1, r3
 802be58:	bfde      	ittt	le
 802be5a:	2330      	movle	r3, #48	; 0x30
 802be5c:	f805 3c01 	strble.w	r3, [r5, #-1]
 802be60:	f105 35ff 	addle.w	r5, r5, #4294967295
 802be64:	1b52      	subs	r2, r2, r5
 802be66:	6122      	str	r2, [r4, #16]
 802be68:	f8cd a000 	str.w	sl, [sp]
 802be6c:	464b      	mov	r3, r9
 802be6e:	aa03      	add	r2, sp, #12
 802be70:	4621      	mov	r1, r4
 802be72:	4640      	mov	r0, r8
 802be74:	f7ff fee4 	bl	802bc40 <_printf_common>
 802be78:	3001      	adds	r0, #1
 802be7a:	d14a      	bne.n	802bf12 <_printf_i+0x1f6>
 802be7c:	f04f 30ff 	mov.w	r0, #4294967295
 802be80:	b004      	add	sp, #16
 802be82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802be86:	6823      	ldr	r3, [r4, #0]
 802be88:	f043 0320 	orr.w	r3, r3, #32
 802be8c:	6023      	str	r3, [r4, #0]
 802be8e:	4833      	ldr	r0, [pc, #204]	; (802bf5c <_printf_i+0x240>)
 802be90:	2778      	movs	r7, #120	; 0x78
 802be92:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802be96:	6823      	ldr	r3, [r4, #0]
 802be98:	6829      	ldr	r1, [r5, #0]
 802be9a:	061f      	lsls	r7, r3, #24
 802be9c:	f851 6b04 	ldr.w	r6, [r1], #4
 802bea0:	d402      	bmi.n	802bea8 <_printf_i+0x18c>
 802bea2:	065f      	lsls	r7, r3, #25
 802bea4:	bf48      	it	mi
 802bea6:	b2b6      	uxthmi	r6, r6
 802bea8:	07df      	lsls	r7, r3, #31
 802beaa:	bf48      	it	mi
 802beac:	f043 0320 	orrmi.w	r3, r3, #32
 802beb0:	6029      	str	r1, [r5, #0]
 802beb2:	bf48      	it	mi
 802beb4:	6023      	strmi	r3, [r4, #0]
 802beb6:	b91e      	cbnz	r6, 802bec0 <_printf_i+0x1a4>
 802beb8:	6823      	ldr	r3, [r4, #0]
 802beba:	f023 0320 	bic.w	r3, r3, #32
 802bebe:	6023      	str	r3, [r4, #0]
 802bec0:	2310      	movs	r3, #16
 802bec2:	e7a7      	b.n	802be14 <_printf_i+0xf8>
 802bec4:	4824      	ldr	r0, [pc, #144]	; (802bf58 <_printf_i+0x23c>)
 802bec6:	e7e4      	b.n	802be92 <_printf_i+0x176>
 802bec8:	4615      	mov	r5, r2
 802beca:	e7bd      	b.n	802be48 <_printf_i+0x12c>
 802becc:	682b      	ldr	r3, [r5, #0]
 802bece:	6826      	ldr	r6, [r4, #0]
 802bed0:	6961      	ldr	r1, [r4, #20]
 802bed2:	1d18      	adds	r0, r3, #4
 802bed4:	6028      	str	r0, [r5, #0]
 802bed6:	0635      	lsls	r5, r6, #24
 802bed8:	681b      	ldr	r3, [r3, #0]
 802beda:	d501      	bpl.n	802bee0 <_printf_i+0x1c4>
 802bedc:	6019      	str	r1, [r3, #0]
 802bede:	e002      	b.n	802bee6 <_printf_i+0x1ca>
 802bee0:	0670      	lsls	r0, r6, #25
 802bee2:	d5fb      	bpl.n	802bedc <_printf_i+0x1c0>
 802bee4:	8019      	strh	r1, [r3, #0]
 802bee6:	2300      	movs	r3, #0
 802bee8:	6123      	str	r3, [r4, #16]
 802beea:	4615      	mov	r5, r2
 802beec:	e7bc      	b.n	802be68 <_printf_i+0x14c>
 802beee:	682b      	ldr	r3, [r5, #0]
 802bef0:	1d1a      	adds	r2, r3, #4
 802bef2:	602a      	str	r2, [r5, #0]
 802bef4:	681d      	ldr	r5, [r3, #0]
 802bef6:	6862      	ldr	r2, [r4, #4]
 802bef8:	2100      	movs	r1, #0
 802befa:	4628      	mov	r0, r5
 802befc:	f7d4 f9d8 	bl	80002b0 <memchr>
 802bf00:	b108      	cbz	r0, 802bf06 <_printf_i+0x1ea>
 802bf02:	1b40      	subs	r0, r0, r5
 802bf04:	6060      	str	r0, [r4, #4]
 802bf06:	6863      	ldr	r3, [r4, #4]
 802bf08:	6123      	str	r3, [r4, #16]
 802bf0a:	2300      	movs	r3, #0
 802bf0c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802bf10:	e7aa      	b.n	802be68 <_printf_i+0x14c>
 802bf12:	6923      	ldr	r3, [r4, #16]
 802bf14:	462a      	mov	r2, r5
 802bf16:	4649      	mov	r1, r9
 802bf18:	4640      	mov	r0, r8
 802bf1a:	47d0      	blx	sl
 802bf1c:	3001      	adds	r0, #1
 802bf1e:	d0ad      	beq.n	802be7c <_printf_i+0x160>
 802bf20:	6823      	ldr	r3, [r4, #0]
 802bf22:	079b      	lsls	r3, r3, #30
 802bf24:	d413      	bmi.n	802bf4e <_printf_i+0x232>
 802bf26:	68e0      	ldr	r0, [r4, #12]
 802bf28:	9b03      	ldr	r3, [sp, #12]
 802bf2a:	4298      	cmp	r0, r3
 802bf2c:	bfb8      	it	lt
 802bf2e:	4618      	movlt	r0, r3
 802bf30:	e7a6      	b.n	802be80 <_printf_i+0x164>
 802bf32:	2301      	movs	r3, #1
 802bf34:	4632      	mov	r2, r6
 802bf36:	4649      	mov	r1, r9
 802bf38:	4640      	mov	r0, r8
 802bf3a:	47d0      	blx	sl
 802bf3c:	3001      	adds	r0, #1
 802bf3e:	d09d      	beq.n	802be7c <_printf_i+0x160>
 802bf40:	3501      	adds	r5, #1
 802bf42:	68e3      	ldr	r3, [r4, #12]
 802bf44:	9903      	ldr	r1, [sp, #12]
 802bf46:	1a5b      	subs	r3, r3, r1
 802bf48:	42ab      	cmp	r3, r5
 802bf4a:	dcf2      	bgt.n	802bf32 <_printf_i+0x216>
 802bf4c:	e7eb      	b.n	802bf26 <_printf_i+0x20a>
 802bf4e:	2500      	movs	r5, #0
 802bf50:	f104 0619 	add.w	r6, r4, #25
 802bf54:	e7f5      	b.n	802bf42 <_printf_i+0x226>
 802bf56:	bf00      	nop
 802bf58:	08043489 	.word	0x08043489
 802bf5c:	0804349a 	.word	0x0804349a

0802bf60 <__sflush_r>:
 802bf60:	898a      	ldrh	r2, [r1, #12]
 802bf62:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802bf66:	4605      	mov	r5, r0
 802bf68:	0710      	lsls	r0, r2, #28
 802bf6a:	460c      	mov	r4, r1
 802bf6c:	d458      	bmi.n	802c020 <__sflush_r+0xc0>
 802bf6e:	684b      	ldr	r3, [r1, #4]
 802bf70:	2b00      	cmp	r3, #0
 802bf72:	dc05      	bgt.n	802bf80 <__sflush_r+0x20>
 802bf74:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802bf76:	2b00      	cmp	r3, #0
 802bf78:	dc02      	bgt.n	802bf80 <__sflush_r+0x20>
 802bf7a:	2000      	movs	r0, #0
 802bf7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802bf80:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802bf82:	2e00      	cmp	r6, #0
 802bf84:	d0f9      	beq.n	802bf7a <__sflush_r+0x1a>
 802bf86:	2300      	movs	r3, #0
 802bf88:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802bf8c:	682f      	ldr	r7, [r5, #0]
 802bf8e:	6a21      	ldr	r1, [r4, #32]
 802bf90:	602b      	str	r3, [r5, #0]
 802bf92:	d032      	beq.n	802bffa <__sflush_r+0x9a>
 802bf94:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802bf96:	89a3      	ldrh	r3, [r4, #12]
 802bf98:	075a      	lsls	r2, r3, #29
 802bf9a:	d505      	bpl.n	802bfa8 <__sflush_r+0x48>
 802bf9c:	6863      	ldr	r3, [r4, #4]
 802bf9e:	1ac0      	subs	r0, r0, r3
 802bfa0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802bfa2:	b10b      	cbz	r3, 802bfa8 <__sflush_r+0x48>
 802bfa4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802bfa6:	1ac0      	subs	r0, r0, r3
 802bfa8:	2300      	movs	r3, #0
 802bfaa:	4602      	mov	r2, r0
 802bfac:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802bfae:	6a21      	ldr	r1, [r4, #32]
 802bfb0:	4628      	mov	r0, r5
 802bfb2:	47b0      	blx	r6
 802bfb4:	1c43      	adds	r3, r0, #1
 802bfb6:	89a3      	ldrh	r3, [r4, #12]
 802bfb8:	d106      	bne.n	802bfc8 <__sflush_r+0x68>
 802bfba:	6829      	ldr	r1, [r5, #0]
 802bfbc:	291d      	cmp	r1, #29
 802bfbe:	d82b      	bhi.n	802c018 <__sflush_r+0xb8>
 802bfc0:	4a29      	ldr	r2, [pc, #164]	; (802c068 <__sflush_r+0x108>)
 802bfc2:	410a      	asrs	r2, r1
 802bfc4:	07d6      	lsls	r6, r2, #31
 802bfc6:	d427      	bmi.n	802c018 <__sflush_r+0xb8>
 802bfc8:	2200      	movs	r2, #0
 802bfca:	6062      	str	r2, [r4, #4]
 802bfcc:	04d9      	lsls	r1, r3, #19
 802bfce:	6922      	ldr	r2, [r4, #16]
 802bfd0:	6022      	str	r2, [r4, #0]
 802bfd2:	d504      	bpl.n	802bfde <__sflush_r+0x7e>
 802bfd4:	1c42      	adds	r2, r0, #1
 802bfd6:	d101      	bne.n	802bfdc <__sflush_r+0x7c>
 802bfd8:	682b      	ldr	r3, [r5, #0]
 802bfda:	b903      	cbnz	r3, 802bfde <__sflush_r+0x7e>
 802bfdc:	6560      	str	r0, [r4, #84]	; 0x54
 802bfde:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802bfe0:	602f      	str	r7, [r5, #0]
 802bfe2:	2900      	cmp	r1, #0
 802bfe4:	d0c9      	beq.n	802bf7a <__sflush_r+0x1a>
 802bfe6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802bfea:	4299      	cmp	r1, r3
 802bfec:	d002      	beq.n	802bff4 <__sflush_r+0x94>
 802bfee:	4628      	mov	r0, r5
 802bff0:	f7ff fc96 	bl	802b920 <_free_r>
 802bff4:	2000      	movs	r0, #0
 802bff6:	6360      	str	r0, [r4, #52]	; 0x34
 802bff8:	e7c0      	b.n	802bf7c <__sflush_r+0x1c>
 802bffa:	2301      	movs	r3, #1
 802bffc:	4628      	mov	r0, r5
 802bffe:	47b0      	blx	r6
 802c000:	1c41      	adds	r1, r0, #1
 802c002:	d1c8      	bne.n	802bf96 <__sflush_r+0x36>
 802c004:	682b      	ldr	r3, [r5, #0]
 802c006:	2b00      	cmp	r3, #0
 802c008:	d0c5      	beq.n	802bf96 <__sflush_r+0x36>
 802c00a:	2b1d      	cmp	r3, #29
 802c00c:	d001      	beq.n	802c012 <__sflush_r+0xb2>
 802c00e:	2b16      	cmp	r3, #22
 802c010:	d101      	bne.n	802c016 <__sflush_r+0xb6>
 802c012:	602f      	str	r7, [r5, #0]
 802c014:	e7b1      	b.n	802bf7a <__sflush_r+0x1a>
 802c016:	89a3      	ldrh	r3, [r4, #12]
 802c018:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802c01c:	81a3      	strh	r3, [r4, #12]
 802c01e:	e7ad      	b.n	802bf7c <__sflush_r+0x1c>
 802c020:	690f      	ldr	r7, [r1, #16]
 802c022:	2f00      	cmp	r7, #0
 802c024:	d0a9      	beq.n	802bf7a <__sflush_r+0x1a>
 802c026:	0793      	lsls	r3, r2, #30
 802c028:	680e      	ldr	r6, [r1, #0]
 802c02a:	bf08      	it	eq
 802c02c:	694b      	ldreq	r3, [r1, #20]
 802c02e:	600f      	str	r7, [r1, #0]
 802c030:	bf18      	it	ne
 802c032:	2300      	movne	r3, #0
 802c034:	eba6 0807 	sub.w	r8, r6, r7
 802c038:	608b      	str	r3, [r1, #8]
 802c03a:	f1b8 0f00 	cmp.w	r8, #0
 802c03e:	dd9c      	ble.n	802bf7a <__sflush_r+0x1a>
 802c040:	6a21      	ldr	r1, [r4, #32]
 802c042:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802c044:	4643      	mov	r3, r8
 802c046:	463a      	mov	r2, r7
 802c048:	4628      	mov	r0, r5
 802c04a:	47b0      	blx	r6
 802c04c:	2800      	cmp	r0, #0
 802c04e:	dc06      	bgt.n	802c05e <__sflush_r+0xfe>
 802c050:	89a3      	ldrh	r3, [r4, #12]
 802c052:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802c056:	81a3      	strh	r3, [r4, #12]
 802c058:	f04f 30ff 	mov.w	r0, #4294967295
 802c05c:	e78e      	b.n	802bf7c <__sflush_r+0x1c>
 802c05e:	4407      	add	r7, r0
 802c060:	eba8 0800 	sub.w	r8, r8, r0
 802c064:	e7e9      	b.n	802c03a <__sflush_r+0xda>
 802c066:	bf00      	nop
 802c068:	dfbffffe 	.word	0xdfbffffe

0802c06c <_fflush_r>:
 802c06c:	b538      	push	{r3, r4, r5, lr}
 802c06e:	690b      	ldr	r3, [r1, #16]
 802c070:	4605      	mov	r5, r0
 802c072:	460c      	mov	r4, r1
 802c074:	b913      	cbnz	r3, 802c07c <_fflush_r+0x10>
 802c076:	2500      	movs	r5, #0
 802c078:	4628      	mov	r0, r5
 802c07a:	bd38      	pop	{r3, r4, r5, pc}
 802c07c:	b118      	cbz	r0, 802c086 <_fflush_r+0x1a>
 802c07e:	6a03      	ldr	r3, [r0, #32]
 802c080:	b90b      	cbnz	r3, 802c086 <_fflush_r+0x1a>
 802c082:	f7ff fa2f 	bl	802b4e4 <__sinit>
 802c086:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802c08a:	2b00      	cmp	r3, #0
 802c08c:	d0f3      	beq.n	802c076 <_fflush_r+0xa>
 802c08e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802c090:	07d0      	lsls	r0, r2, #31
 802c092:	d404      	bmi.n	802c09e <_fflush_r+0x32>
 802c094:	0599      	lsls	r1, r3, #22
 802c096:	d402      	bmi.n	802c09e <_fflush_r+0x32>
 802c098:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802c09a:	f7ff fbd2 	bl	802b842 <__retarget_lock_acquire_recursive>
 802c09e:	4628      	mov	r0, r5
 802c0a0:	4621      	mov	r1, r4
 802c0a2:	f7ff ff5d 	bl	802bf60 <__sflush_r>
 802c0a6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802c0a8:	07da      	lsls	r2, r3, #31
 802c0aa:	4605      	mov	r5, r0
 802c0ac:	d4e4      	bmi.n	802c078 <_fflush_r+0xc>
 802c0ae:	89a3      	ldrh	r3, [r4, #12]
 802c0b0:	059b      	lsls	r3, r3, #22
 802c0b2:	d4e1      	bmi.n	802c078 <_fflush_r+0xc>
 802c0b4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802c0b6:	f7ff fbc5 	bl	802b844 <__retarget_lock_release_recursive>
 802c0ba:	e7dd      	b.n	802c078 <_fflush_r+0xc>

0802c0bc <__swbuf_r>:
 802c0bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c0be:	460e      	mov	r6, r1
 802c0c0:	4614      	mov	r4, r2
 802c0c2:	4605      	mov	r5, r0
 802c0c4:	b118      	cbz	r0, 802c0ce <__swbuf_r+0x12>
 802c0c6:	6a03      	ldr	r3, [r0, #32]
 802c0c8:	b90b      	cbnz	r3, 802c0ce <__swbuf_r+0x12>
 802c0ca:	f7ff fa0b 	bl	802b4e4 <__sinit>
 802c0ce:	69a3      	ldr	r3, [r4, #24]
 802c0d0:	60a3      	str	r3, [r4, #8]
 802c0d2:	89a3      	ldrh	r3, [r4, #12]
 802c0d4:	071a      	lsls	r2, r3, #28
 802c0d6:	d525      	bpl.n	802c124 <__swbuf_r+0x68>
 802c0d8:	6923      	ldr	r3, [r4, #16]
 802c0da:	b31b      	cbz	r3, 802c124 <__swbuf_r+0x68>
 802c0dc:	6823      	ldr	r3, [r4, #0]
 802c0de:	6922      	ldr	r2, [r4, #16]
 802c0e0:	1a98      	subs	r0, r3, r2
 802c0e2:	6963      	ldr	r3, [r4, #20]
 802c0e4:	b2f6      	uxtb	r6, r6
 802c0e6:	4283      	cmp	r3, r0
 802c0e8:	4637      	mov	r7, r6
 802c0ea:	dc04      	bgt.n	802c0f6 <__swbuf_r+0x3a>
 802c0ec:	4621      	mov	r1, r4
 802c0ee:	4628      	mov	r0, r5
 802c0f0:	f7ff ffbc 	bl	802c06c <_fflush_r>
 802c0f4:	b9e0      	cbnz	r0, 802c130 <__swbuf_r+0x74>
 802c0f6:	68a3      	ldr	r3, [r4, #8]
 802c0f8:	3b01      	subs	r3, #1
 802c0fa:	60a3      	str	r3, [r4, #8]
 802c0fc:	6823      	ldr	r3, [r4, #0]
 802c0fe:	1c5a      	adds	r2, r3, #1
 802c100:	6022      	str	r2, [r4, #0]
 802c102:	701e      	strb	r6, [r3, #0]
 802c104:	6962      	ldr	r2, [r4, #20]
 802c106:	1c43      	adds	r3, r0, #1
 802c108:	429a      	cmp	r2, r3
 802c10a:	d004      	beq.n	802c116 <__swbuf_r+0x5a>
 802c10c:	89a3      	ldrh	r3, [r4, #12]
 802c10e:	07db      	lsls	r3, r3, #31
 802c110:	d506      	bpl.n	802c120 <__swbuf_r+0x64>
 802c112:	2e0a      	cmp	r6, #10
 802c114:	d104      	bne.n	802c120 <__swbuf_r+0x64>
 802c116:	4621      	mov	r1, r4
 802c118:	4628      	mov	r0, r5
 802c11a:	f7ff ffa7 	bl	802c06c <_fflush_r>
 802c11e:	b938      	cbnz	r0, 802c130 <__swbuf_r+0x74>
 802c120:	4638      	mov	r0, r7
 802c122:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802c124:	4621      	mov	r1, r4
 802c126:	4628      	mov	r0, r5
 802c128:	f000 f806 	bl	802c138 <__swsetup_r>
 802c12c:	2800      	cmp	r0, #0
 802c12e:	d0d5      	beq.n	802c0dc <__swbuf_r+0x20>
 802c130:	f04f 37ff 	mov.w	r7, #4294967295
 802c134:	e7f4      	b.n	802c120 <__swbuf_r+0x64>
	...

0802c138 <__swsetup_r>:
 802c138:	b538      	push	{r3, r4, r5, lr}
 802c13a:	4b2a      	ldr	r3, [pc, #168]	; (802c1e4 <__swsetup_r+0xac>)
 802c13c:	4605      	mov	r5, r0
 802c13e:	6818      	ldr	r0, [r3, #0]
 802c140:	460c      	mov	r4, r1
 802c142:	b118      	cbz	r0, 802c14c <__swsetup_r+0x14>
 802c144:	6a03      	ldr	r3, [r0, #32]
 802c146:	b90b      	cbnz	r3, 802c14c <__swsetup_r+0x14>
 802c148:	f7ff f9cc 	bl	802b4e4 <__sinit>
 802c14c:	89a3      	ldrh	r3, [r4, #12]
 802c14e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802c152:	0718      	lsls	r0, r3, #28
 802c154:	d422      	bmi.n	802c19c <__swsetup_r+0x64>
 802c156:	06d9      	lsls	r1, r3, #27
 802c158:	d407      	bmi.n	802c16a <__swsetup_r+0x32>
 802c15a:	2309      	movs	r3, #9
 802c15c:	602b      	str	r3, [r5, #0]
 802c15e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802c162:	81a3      	strh	r3, [r4, #12]
 802c164:	f04f 30ff 	mov.w	r0, #4294967295
 802c168:	e034      	b.n	802c1d4 <__swsetup_r+0x9c>
 802c16a:	0758      	lsls	r0, r3, #29
 802c16c:	d512      	bpl.n	802c194 <__swsetup_r+0x5c>
 802c16e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802c170:	b141      	cbz	r1, 802c184 <__swsetup_r+0x4c>
 802c172:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802c176:	4299      	cmp	r1, r3
 802c178:	d002      	beq.n	802c180 <__swsetup_r+0x48>
 802c17a:	4628      	mov	r0, r5
 802c17c:	f7ff fbd0 	bl	802b920 <_free_r>
 802c180:	2300      	movs	r3, #0
 802c182:	6363      	str	r3, [r4, #52]	; 0x34
 802c184:	89a3      	ldrh	r3, [r4, #12]
 802c186:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802c18a:	81a3      	strh	r3, [r4, #12]
 802c18c:	2300      	movs	r3, #0
 802c18e:	6063      	str	r3, [r4, #4]
 802c190:	6923      	ldr	r3, [r4, #16]
 802c192:	6023      	str	r3, [r4, #0]
 802c194:	89a3      	ldrh	r3, [r4, #12]
 802c196:	f043 0308 	orr.w	r3, r3, #8
 802c19a:	81a3      	strh	r3, [r4, #12]
 802c19c:	6923      	ldr	r3, [r4, #16]
 802c19e:	b94b      	cbnz	r3, 802c1b4 <__swsetup_r+0x7c>
 802c1a0:	89a3      	ldrh	r3, [r4, #12]
 802c1a2:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802c1a6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802c1aa:	d003      	beq.n	802c1b4 <__swsetup_r+0x7c>
 802c1ac:	4621      	mov	r1, r4
 802c1ae:	4628      	mov	r0, r5
 802c1b0:	f000 f840 	bl	802c234 <__smakebuf_r>
 802c1b4:	89a0      	ldrh	r0, [r4, #12]
 802c1b6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802c1ba:	f010 0301 	ands.w	r3, r0, #1
 802c1be:	d00a      	beq.n	802c1d6 <__swsetup_r+0x9e>
 802c1c0:	2300      	movs	r3, #0
 802c1c2:	60a3      	str	r3, [r4, #8]
 802c1c4:	6963      	ldr	r3, [r4, #20]
 802c1c6:	425b      	negs	r3, r3
 802c1c8:	61a3      	str	r3, [r4, #24]
 802c1ca:	6923      	ldr	r3, [r4, #16]
 802c1cc:	b943      	cbnz	r3, 802c1e0 <__swsetup_r+0xa8>
 802c1ce:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802c1d2:	d1c4      	bne.n	802c15e <__swsetup_r+0x26>
 802c1d4:	bd38      	pop	{r3, r4, r5, pc}
 802c1d6:	0781      	lsls	r1, r0, #30
 802c1d8:	bf58      	it	pl
 802c1da:	6963      	ldrpl	r3, [r4, #20]
 802c1dc:	60a3      	str	r3, [r4, #8]
 802c1de:	e7f4      	b.n	802c1ca <__swsetup_r+0x92>
 802c1e0:	2000      	movs	r0, #0
 802c1e2:	e7f7      	b.n	802c1d4 <__swsetup_r+0x9c>
 802c1e4:	20000160 	.word	0x20000160

0802c1e8 <__swhatbuf_r>:
 802c1e8:	b570      	push	{r4, r5, r6, lr}
 802c1ea:	460c      	mov	r4, r1
 802c1ec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802c1f0:	2900      	cmp	r1, #0
 802c1f2:	b096      	sub	sp, #88	; 0x58
 802c1f4:	4615      	mov	r5, r2
 802c1f6:	461e      	mov	r6, r3
 802c1f8:	da0d      	bge.n	802c216 <__swhatbuf_r+0x2e>
 802c1fa:	89a3      	ldrh	r3, [r4, #12]
 802c1fc:	f013 0f80 	tst.w	r3, #128	; 0x80
 802c200:	f04f 0100 	mov.w	r1, #0
 802c204:	bf0c      	ite	eq
 802c206:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802c20a:	2340      	movne	r3, #64	; 0x40
 802c20c:	2000      	movs	r0, #0
 802c20e:	6031      	str	r1, [r6, #0]
 802c210:	602b      	str	r3, [r5, #0]
 802c212:	b016      	add	sp, #88	; 0x58
 802c214:	bd70      	pop	{r4, r5, r6, pc}
 802c216:	466a      	mov	r2, sp
 802c218:	f000 f848 	bl	802c2ac <_fstat_r>
 802c21c:	2800      	cmp	r0, #0
 802c21e:	dbec      	blt.n	802c1fa <__swhatbuf_r+0x12>
 802c220:	9901      	ldr	r1, [sp, #4]
 802c222:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802c226:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802c22a:	4259      	negs	r1, r3
 802c22c:	4159      	adcs	r1, r3
 802c22e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802c232:	e7eb      	b.n	802c20c <__swhatbuf_r+0x24>

0802c234 <__smakebuf_r>:
 802c234:	898b      	ldrh	r3, [r1, #12]
 802c236:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802c238:	079d      	lsls	r5, r3, #30
 802c23a:	4606      	mov	r6, r0
 802c23c:	460c      	mov	r4, r1
 802c23e:	d507      	bpl.n	802c250 <__smakebuf_r+0x1c>
 802c240:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802c244:	6023      	str	r3, [r4, #0]
 802c246:	6123      	str	r3, [r4, #16]
 802c248:	2301      	movs	r3, #1
 802c24a:	6163      	str	r3, [r4, #20]
 802c24c:	b002      	add	sp, #8
 802c24e:	bd70      	pop	{r4, r5, r6, pc}
 802c250:	ab01      	add	r3, sp, #4
 802c252:	466a      	mov	r2, sp
 802c254:	f7ff ffc8 	bl	802c1e8 <__swhatbuf_r>
 802c258:	9900      	ldr	r1, [sp, #0]
 802c25a:	4605      	mov	r5, r0
 802c25c:	4630      	mov	r0, r6
 802c25e:	f7ff f81b 	bl	802b298 <_malloc_r>
 802c262:	b948      	cbnz	r0, 802c278 <__smakebuf_r+0x44>
 802c264:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802c268:	059a      	lsls	r2, r3, #22
 802c26a:	d4ef      	bmi.n	802c24c <__smakebuf_r+0x18>
 802c26c:	f023 0303 	bic.w	r3, r3, #3
 802c270:	f043 0302 	orr.w	r3, r3, #2
 802c274:	81a3      	strh	r3, [r4, #12]
 802c276:	e7e3      	b.n	802c240 <__smakebuf_r+0xc>
 802c278:	89a3      	ldrh	r3, [r4, #12]
 802c27a:	6020      	str	r0, [r4, #0]
 802c27c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802c280:	81a3      	strh	r3, [r4, #12]
 802c282:	9b00      	ldr	r3, [sp, #0]
 802c284:	6163      	str	r3, [r4, #20]
 802c286:	9b01      	ldr	r3, [sp, #4]
 802c288:	6120      	str	r0, [r4, #16]
 802c28a:	b15b      	cbz	r3, 802c2a4 <__smakebuf_r+0x70>
 802c28c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802c290:	4630      	mov	r0, r6
 802c292:	f000 f81d 	bl	802c2d0 <_isatty_r>
 802c296:	b128      	cbz	r0, 802c2a4 <__smakebuf_r+0x70>
 802c298:	89a3      	ldrh	r3, [r4, #12]
 802c29a:	f023 0303 	bic.w	r3, r3, #3
 802c29e:	f043 0301 	orr.w	r3, r3, #1
 802c2a2:	81a3      	strh	r3, [r4, #12]
 802c2a4:	89a3      	ldrh	r3, [r4, #12]
 802c2a6:	431d      	orrs	r5, r3
 802c2a8:	81a5      	strh	r5, [r4, #12]
 802c2aa:	e7cf      	b.n	802c24c <__smakebuf_r+0x18>

0802c2ac <_fstat_r>:
 802c2ac:	b538      	push	{r3, r4, r5, lr}
 802c2ae:	4d07      	ldr	r5, [pc, #28]	; (802c2cc <_fstat_r+0x20>)
 802c2b0:	2300      	movs	r3, #0
 802c2b2:	4604      	mov	r4, r0
 802c2b4:	4608      	mov	r0, r1
 802c2b6:	4611      	mov	r1, r2
 802c2b8:	602b      	str	r3, [r5, #0]
 802c2ba:	f7d5 fc71 	bl	8001ba0 <_fstat>
 802c2be:	1c43      	adds	r3, r0, #1
 802c2c0:	d102      	bne.n	802c2c8 <_fstat_r+0x1c>
 802c2c2:	682b      	ldr	r3, [r5, #0]
 802c2c4:	b103      	cbz	r3, 802c2c8 <_fstat_r+0x1c>
 802c2c6:	6023      	str	r3, [r4, #0]
 802c2c8:	bd38      	pop	{r3, r4, r5, pc}
 802c2ca:	bf00      	nop
 802c2cc:	200142b4 	.word	0x200142b4

0802c2d0 <_isatty_r>:
 802c2d0:	b538      	push	{r3, r4, r5, lr}
 802c2d2:	4d06      	ldr	r5, [pc, #24]	; (802c2ec <_isatty_r+0x1c>)
 802c2d4:	2300      	movs	r3, #0
 802c2d6:	4604      	mov	r4, r0
 802c2d8:	4608      	mov	r0, r1
 802c2da:	602b      	str	r3, [r5, #0]
 802c2dc:	f7d5 fc66 	bl	8001bac <_isatty>
 802c2e0:	1c43      	adds	r3, r0, #1
 802c2e2:	d102      	bne.n	802c2ea <_isatty_r+0x1a>
 802c2e4:	682b      	ldr	r3, [r5, #0]
 802c2e6:	b103      	cbz	r3, 802c2ea <_isatty_r+0x1a>
 802c2e8:	6023      	str	r3, [r4, #0]
 802c2ea:	bd38      	pop	{r3, r4, r5, pc}
 802c2ec:	200142b4 	.word	0x200142b4

0802c2f0 <_init>:
 802c2f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c2f2:	bf00      	nop
 802c2f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802c2f6:	bc08      	pop	{r3}
 802c2f8:	469e      	mov	lr, r3
 802c2fa:	4770      	bx	lr

0802c2fc <_fini>:
 802c2fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c2fe:	bf00      	nop
 802c300:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802c302:	bc08      	pop	{r3}
 802c304:	469e      	mov	lr, r3
 802c306:	4770      	bx	lr

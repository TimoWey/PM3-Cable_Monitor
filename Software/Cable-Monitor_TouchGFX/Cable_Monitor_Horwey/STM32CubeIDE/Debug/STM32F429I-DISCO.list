
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00029528  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00004138  080296d8  080296d8  000396d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00002d3e  0802d810  0802d810  0003d810  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000170  08030550  08030550  00040550  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000668  080306c0  080306c0  000406c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00119030  08030d28  08030d28  00040d28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  08149d58  08149d58  00160168  2**0
                  CONTENTS
  8 .ARM          00000008  08149d58  08149d58  00159d58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08149d60  08149d60  00160168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  08149d60  08149d60  00159d60  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  08149d74  08149d74  00159d74  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  08149d7c  00160000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          000142a4  20000168  08149ee4  00160168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  2001440c  08149ee4  0016440c  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00160168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00170000  2**2
                  ALLOC
 17 .comment      000000c2  00000000  00000000  00160198  2**0
                  CONTENTS, READONLY
 18 .debug_line   00099b53  00000000  00000000  0016025a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  001f9dad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   0029653c  00000000  00000000  001f9e40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 000326ba  00000000  00000000  0049037c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 000046f8  00000000  00000000  004c2a38  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0011fd91  00000000  00000000  004c7130  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00007ef6  00000000  00000000  005e6ec1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 00032315  00000000  00000000  005eedb7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003ac04  00000000  00000000  006210cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000d074  00000000  00000000  0065bcd0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080296c0 	.word	0x080296c0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	080296c0 	.word	0x080296c0

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b970 	b.w	8000588 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9e08      	ldr	r6, [sp, #32]
 80002c6:	460d      	mov	r5, r1
 80002c8:	4604      	mov	r4, r0
 80002ca:	460f      	mov	r7, r1
 80002cc:	2b00      	cmp	r3, #0
 80002ce:	d14a      	bne.n	8000366 <__udivmoddi4+0xa6>
 80002d0:	428a      	cmp	r2, r1
 80002d2:	4694      	mov	ip, r2
 80002d4:	d965      	bls.n	80003a2 <__udivmoddi4+0xe2>
 80002d6:	fab2 f382 	clz	r3, r2
 80002da:	b143      	cbz	r3, 80002ee <__udivmoddi4+0x2e>
 80002dc:	fa02 fc03 	lsl.w	ip, r2, r3
 80002e0:	f1c3 0220 	rsb	r2, r3, #32
 80002e4:	409f      	lsls	r7, r3
 80002e6:	fa20 f202 	lsr.w	r2, r0, r2
 80002ea:	4317      	orrs	r7, r2
 80002ec:	409c      	lsls	r4, r3
 80002ee:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80002f2:	fa1f f58c 	uxth.w	r5, ip
 80002f6:	fbb7 f1fe 	udiv	r1, r7, lr
 80002fa:	0c22      	lsrs	r2, r4, #16
 80002fc:	fb0e 7711 	mls	r7, lr, r1, r7
 8000300:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000304:	fb01 f005 	mul.w	r0, r1, r5
 8000308:	4290      	cmp	r0, r2
 800030a:	d90a      	bls.n	8000322 <__udivmoddi4+0x62>
 800030c:	eb1c 0202 	adds.w	r2, ip, r2
 8000310:	f101 37ff 	add.w	r7, r1, #4294967295
 8000314:	f080 811c 	bcs.w	8000550 <__udivmoddi4+0x290>
 8000318:	4290      	cmp	r0, r2
 800031a:	f240 8119 	bls.w	8000550 <__udivmoddi4+0x290>
 800031e:	3902      	subs	r1, #2
 8000320:	4462      	add	r2, ip
 8000322:	1a12      	subs	r2, r2, r0
 8000324:	b2a4      	uxth	r4, r4
 8000326:	fbb2 f0fe 	udiv	r0, r2, lr
 800032a:	fb0e 2210 	mls	r2, lr, r0, r2
 800032e:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000332:	fb00 f505 	mul.w	r5, r0, r5
 8000336:	42a5      	cmp	r5, r4
 8000338:	d90a      	bls.n	8000350 <__udivmoddi4+0x90>
 800033a:	eb1c 0404 	adds.w	r4, ip, r4
 800033e:	f100 32ff 	add.w	r2, r0, #4294967295
 8000342:	f080 8107 	bcs.w	8000554 <__udivmoddi4+0x294>
 8000346:	42a5      	cmp	r5, r4
 8000348:	f240 8104 	bls.w	8000554 <__udivmoddi4+0x294>
 800034c:	4464      	add	r4, ip
 800034e:	3802      	subs	r0, #2
 8000350:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000354:	1b64      	subs	r4, r4, r5
 8000356:	2100      	movs	r1, #0
 8000358:	b11e      	cbz	r6, 8000362 <__udivmoddi4+0xa2>
 800035a:	40dc      	lsrs	r4, r3
 800035c:	2300      	movs	r3, #0
 800035e:	e9c6 4300 	strd	r4, r3, [r6]
 8000362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000366:	428b      	cmp	r3, r1
 8000368:	d908      	bls.n	800037c <__udivmoddi4+0xbc>
 800036a:	2e00      	cmp	r6, #0
 800036c:	f000 80ed 	beq.w	800054a <__udivmoddi4+0x28a>
 8000370:	2100      	movs	r1, #0
 8000372:	e9c6 0500 	strd	r0, r5, [r6]
 8000376:	4608      	mov	r0, r1
 8000378:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037c:	fab3 f183 	clz	r1, r3
 8000380:	2900      	cmp	r1, #0
 8000382:	d149      	bne.n	8000418 <__udivmoddi4+0x158>
 8000384:	42ab      	cmp	r3, r5
 8000386:	d302      	bcc.n	800038e <__udivmoddi4+0xce>
 8000388:	4282      	cmp	r2, r0
 800038a:	f200 80f8 	bhi.w	800057e <__udivmoddi4+0x2be>
 800038e:	1a84      	subs	r4, r0, r2
 8000390:	eb65 0203 	sbc.w	r2, r5, r3
 8000394:	2001      	movs	r0, #1
 8000396:	4617      	mov	r7, r2
 8000398:	2e00      	cmp	r6, #0
 800039a:	d0e2      	beq.n	8000362 <__udivmoddi4+0xa2>
 800039c:	e9c6 4700 	strd	r4, r7, [r6]
 80003a0:	e7df      	b.n	8000362 <__udivmoddi4+0xa2>
 80003a2:	b902      	cbnz	r2, 80003a6 <__udivmoddi4+0xe6>
 80003a4:	deff      	udf	#255	; 0xff
 80003a6:	fab2 f382 	clz	r3, r2
 80003aa:	2b00      	cmp	r3, #0
 80003ac:	f040 8090 	bne.w	80004d0 <__udivmoddi4+0x210>
 80003b0:	1a8a      	subs	r2, r1, r2
 80003b2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003b6:	fa1f fe8c 	uxth.w	lr, ip
 80003ba:	2101      	movs	r1, #1
 80003bc:	fbb2 f5f7 	udiv	r5, r2, r7
 80003c0:	fb07 2015 	mls	r0, r7, r5, r2
 80003c4:	0c22      	lsrs	r2, r4, #16
 80003c6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80003ca:	fb0e f005 	mul.w	r0, lr, r5
 80003ce:	4290      	cmp	r0, r2
 80003d0:	d908      	bls.n	80003e4 <__udivmoddi4+0x124>
 80003d2:	eb1c 0202 	adds.w	r2, ip, r2
 80003d6:	f105 38ff 	add.w	r8, r5, #4294967295
 80003da:	d202      	bcs.n	80003e2 <__udivmoddi4+0x122>
 80003dc:	4290      	cmp	r0, r2
 80003de:	f200 80cb 	bhi.w	8000578 <__udivmoddi4+0x2b8>
 80003e2:	4645      	mov	r5, r8
 80003e4:	1a12      	subs	r2, r2, r0
 80003e6:	b2a4      	uxth	r4, r4
 80003e8:	fbb2 f0f7 	udiv	r0, r2, r7
 80003ec:	fb07 2210 	mls	r2, r7, r0, r2
 80003f0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f4:	fb0e fe00 	mul.w	lr, lr, r0
 80003f8:	45a6      	cmp	lr, r4
 80003fa:	d908      	bls.n	800040e <__udivmoddi4+0x14e>
 80003fc:	eb1c 0404 	adds.w	r4, ip, r4
 8000400:	f100 32ff 	add.w	r2, r0, #4294967295
 8000404:	d202      	bcs.n	800040c <__udivmoddi4+0x14c>
 8000406:	45a6      	cmp	lr, r4
 8000408:	f200 80bb 	bhi.w	8000582 <__udivmoddi4+0x2c2>
 800040c:	4610      	mov	r0, r2
 800040e:	eba4 040e 	sub.w	r4, r4, lr
 8000412:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000416:	e79f      	b.n	8000358 <__udivmoddi4+0x98>
 8000418:	f1c1 0720 	rsb	r7, r1, #32
 800041c:	408b      	lsls	r3, r1
 800041e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000422:	ea4c 0c03 	orr.w	ip, ip, r3
 8000426:	fa05 f401 	lsl.w	r4, r5, r1
 800042a:	fa20 f307 	lsr.w	r3, r0, r7
 800042e:	40fd      	lsrs	r5, r7
 8000430:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000434:	4323      	orrs	r3, r4
 8000436:	fbb5 f8f9 	udiv	r8, r5, r9
 800043a:	fa1f fe8c 	uxth.w	lr, ip
 800043e:	fb09 5518 	mls	r5, r9, r8, r5
 8000442:	0c1c      	lsrs	r4, r3, #16
 8000444:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000448:	fb08 f50e 	mul.w	r5, r8, lr
 800044c:	42a5      	cmp	r5, r4
 800044e:	fa02 f201 	lsl.w	r2, r2, r1
 8000452:	fa00 f001 	lsl.w	r0, r0, r1
 8000456:	d90b      	bls.n	8000470 <__udivmoddi4+0x1b0>
 8000458:	eb1c 0404 	adds.w	r4, ip, r4
 800045c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000460:	f080 8088 	bcs.w	8000574 <__udivmoddi4+0x2b4>
 8000464:	42a5      	cmp	r5, r4
 8000466:	f240 8085 	bls.w	8000574 <__udivmoddi4+0x2b4>
 800046a:	f1a8 0802 	sub.w	r8, r8, #2
 800046e:	4464      	add	r4, ip
 8000470:	1b64      	subs	r4, r4, r5
 8000472:	b29d      	uxth	r5, r3
 8000474:	fbb4 f3f9 	udiv	r3, r4, r9
 8000478:	fb09 4413 	mls	r4, r9, r3, r4
 800047c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000480:	fb03 fe0e 	mul.w	lr, r3, lr
 8000484:	45a6      	cmp	lr, r4
 8000486:	d908      	bls.n	800049a <__udivmoddi4+0x1da>
 8000488:	eb1c 0404 	adds.w	r4, ip, r4
 800048c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000490:	d26c      	bcs.n	800056c <__udivmoddi4+0x2ac>
 8000492:	45a6      	cmp	lr, r4
 8000494:	d96a      	bls.n	800056c <__udivmoddi4+0x2ac>
 8000496:	3b02      	subs	r3, #2
 8000498:	4464      	add	r4, ip
 800049a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800049e:	fba3 9502 	umull	r9, r5, r3, r2
 80004a2:	eba4 040e 	sub.w	r4, r4, lr
 80004a6:	42ac      	cmp	r4, r5
 80004a8:	46c8      	mov	r8, r9
 80004aa:	46ae      	mov	lr, r5
 80004ac:	d356      	bcc.n	800055c <__udivmoddi4+0x29c>
 80004ae:	d053      	beq.n	8000558 <__udivmoddi4+0x298>
 80004b0:	b156      	cbz	r6, 80004c8 <__udivmoddi4+0x208>
 80004b2:	ebb0 0208 	subs.w	r2, r0, r8
 80004b6:	eb64 040e 	sbc.w	r4, r4, lr
 80004ba:	fa04 f707 	lsl.w	r7, r4, r7
 80004be:	40ca      	lsrs	r2, r1
 80004c0:	40cc      	lsrs	r4, r1
 80004c2:	4317      	orrs	r7, r2
 80004c4:	e9c6 7400 	strd	r7, r4, [r6]
 80004c8:	4618      	mov	r0, r3
 80004ca:	2100      	movs	r1, #0
 80004cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004d0:	f1c3 0120 	rsb	r1, r3, #32
 80004d4:	fa02 fc03 	lsl.w	ip, r2, r3
 80004d8:	fa20 f201 	lsr.w	r2, r0, r1
 80004dc:	fa25 f101 	lsr.w	r1, r5, r1
 80004e0:	409d      	lsls	r5, r3
 80004e2:	432a      	orrs	r2, r5
 80004e4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004e8:	fa1f fe8c 	uxth.w	lr, ip
 80004ec:	fbb1 f0f7 	udiv	r0, r1, r7
 80004f0:	fb07 1510 	mls	r5, r7, r0, r1
 80004f4:	0c11      	lsrs	r1, r2, #16
 80004f6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80004fa:	fb00 f50e 	mul.w	r5, r0, lr
 80004fe:	428d      	cmp	r5, r1
 8000500:	fa04 f403 	lsl.w	r4, r4, r3
 8000504:	d908      	bls.n	8000518 <__udivmoddi4+0x258>
 8000506:	eb1c 0101 	adds.w	r1, ip, r1
 800050a:	f100 38ff 	add.w	r8, r0, #4294967295
 800050e:	d22f      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000510:	428d      	cmp	r5, r1
 8000512:	d92d      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000514:	3802      	subs	r0, #2
 8000516:	4461      	add	r1, ip
 8000518:	1b49      	subs	r1, r1, r5
 800051a:	b292      	uxth	r2, r2
 800051c:	fbb1 f5f7 	udiv	r5, r1, r7
 8000520:	fb07 1115 	mls	r1, r7, r5, r1
 8000524:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000528:	fb05 f10e 	mul.w	r1, r5, lr
 800052c:	4291      	cmp	r1, r2
 800052e:	d908      	bls.n	8000542 <__udivmoddi4+0x282>
 8000530:	eb1c 0202 	adds.w	r2, ip, r2
 8000534:	f105 38ff 	add.w	r8, r5, #4294967295
 8000538:	d216      	bcs.n	8000568 <__udivmoddi4+0x2a8>
 800053a:	4291      	cmp	r1, r2
 800053c:	d914      	bls.n	8000568 <__udivmoddi4+0x2a8>
 800053e:	3d02      	subs	r5, #2
 8000540:	4462      	add	r2, ip
 8000542:	1a52      	subs	r2, r2, r1
 8000544:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000548:	e738      	b.n	80003bc <__udivmoddi4+0xfc>
 800054a:	4631      	mov	r1, r6
 800054c:	4630      	mov	r0, r6
 800054e:	e708      	b.n	8000362 <__udivmoddi4+0xa2>
 8000550:	4639      	mov	r1, r7
 8000552:	e6e6      	b.n	8000322 <__udivmoddi4+0x62>
 8000554:	4610      	mov	r0, r2
 8000556:	e6fb      	b.n	8000350 <__udivmoddi4+0x90>
 8000558:	4548      	cmp	r0, r9
 800055a:	d2a9      	bcs.n	80004b0 <__udivmoddi4+0x1f0>
 800055c:	ebb9 0802 	subs.w	r8, r9, r2
 8000560:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000564:	3b01      	subs	r3, #1
 8000566:	e7a3      	b.n	80004b0 <__udivmoddi4+0x1f0>
 8000568:	4645      	mov	r5, r8
 800056a:	e7ea      	b.n	8000542 <__udivmoddi4+0x282>
 800056c:	462b      	mov	r3, r5
 800056e:	e794      	b.n	800049a <__udivmoddi4+0x1da>
 8000570:	4640      	mov	r0, r8
 8000572:	e7d1      	b.n	8000518 <__udivmoddi4+0x258>
 8000574:	46d0      	mov	r8, sl
 8000576:	e77b      	b.n	8000470 <__udivmoddi4+0x1b0>
 8000578:	3d02      	subs	r5, #2
 800057a:	4462      	add	r2, ip
 800057c:	e732      	b.n	80003e4 <__udivmoddi4+0x124>
 800057e:	4608      	mov	r0, r1
 8000580:	e70a      	b.n	8000398 <__udivmoddi4+0xd8>
 8000582:	4464      	add	r4, ip
 8000584:	3802      	subs	r0, #2
 8000586:	e742      	b.n	800040e <__udivmoddi4+0x14e>

08000588 <__aeabi_idiv0>:
 8000588:	4770      	bx	lr
 800058a:	bf00      	nop

0800058c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800058c:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005c4 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000590:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000592:	e003      	b.n	800059c <LoopCopyDataInit>

08000594 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000594:	4b0c      	ldr	r3, [pc, #48]	; (80005c8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000596:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000598:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800059a:	3104      	adds	r1, #4

0800059c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800059c:	480b      	ldr	r0, [pc, #44]	; (80005cc <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800059e:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a0:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005a2:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005a4:	d3f6      	bcc.n	8000594 <CopyDataInit>
  ldr  r2, =_sbss
 80005a6:	4a0b      	ldr	r2, [pc, #44]	; (80005d4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005a8:	e002      	b.n	80005b0 <LoopFillZerobss>

080005aa <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005aa:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005ac:	f842 3b04 	str.w	r3, [r2], #4

080005b0 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b0:	4b09      	ldr	r3, [pc, #36]	; (80005d8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005b2:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005b4:	d3f9      	bcc.n	80005aa <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005b6:	f008 fc05 	bl	8008dc4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005ba:	f028 fb05 	bl	8028bc8 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005be:	f000 ff65 	bl	800148c <main>
  bx  lr    
 80005c2:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005c4:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005c8:	08149d7c 	.word	0x08149d7c
  ldr  r0, =_sdata
 80005cc:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d0:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 80005d4:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 80005d8:	2001440c 	.word	0x2001440c

080005dc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005dc:	e7fe      	b.n	80005dc <ADC_IRQHandler>
	...

080005e0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80005e0:	4770      	bx	lr
 80005e2:	bf00      	nop

080005e4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80005e4:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80005e6:	f000 fd35 	bl	8001054 <touchgfx_components_init>
  touchgfx_init();
}
 80005ea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80005ee:	f000 bcbd 	b.w	8000f6c <touchgfx_init>
 80005f2:	bf00      	nop

080005f4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005f4:	f000 bd30 	b.w	8001058 <touchgfx_taskEntry>

080005f8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005f8:	4770      	bx	lr

080005fa <_ZN20STM32TouchControllerD0Ev>:
 80005fa:	b510      	push	{r4, lr}
 80005fc:	2104      	movs	r1, #4
 80005fe:	4604      	mov	r4, r0
 8000600:	f027 f9ed 	bl	80279de <_ZdlPvj>
 8000604:	4620      	mov	r0, r4
 8000606:	bd10      	pop	{r4, pc}

08000608 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000608:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 800060a:	4b0c      	ldr	r3, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060c:	4c0c      	ldr	r4, [pc, #48]	; (8000640 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 800060e:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000610:	4b0c      	ldr	r3, [pc, #48]	; (8000644 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000612:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000614:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000616:	6863      	ldr	r3, [r4, #4]
 8000618:	4798      	blx	r3
 800061a:	f640 0311 	movw	r3, #2065	; 0x811
 800061e:	4298      	cmp	r0, r3
 8000620:	d10a      	bne.n	8000638 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000622:	4d09      	ldr	r5, [pc, #36]	; (8000648 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000624:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000626:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000628:	2082      	movs	r0, #130	; 0x82
 800062a:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 800062c:	682b      	ldr	r3, [r5, #0]
 800062e:	2082      	movs	r0, #130	; 0x82
 8000630:	68db      	ldr	r3, [r3, #12]
 8000632:	4798      	blx	r3
 8000634:	2000      	movs	r0, #0
    }

    return ret;
}
 8000636:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000638:	2001      	movs	r0, #1
 800063a:	e7fc      	b.n	8000636 <_Z11BSP_TS_Inittt+0x2e>
 800063c:	20000184 	.word	0x20000184
 8000640:	20000050 	.word	0x20000050
 8000644:	20000186 	.word	0x20000186
 8000648:	20000188 	.word	0x20000188

0800064c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 800064c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000650:	20f0      	movs	r0, #240	; 0xf0
 8000652:	f7ff bfd9 	b.w	8000608 <_Z11BSP_TS_Inittt>
	...

08000658 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000658:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800065a:	4d33      	ldr	r5, [pc, #204]	; (8000728 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 800065c:	682b      	ldr	r3, [r5, #0]
{
 800065e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000660:	691b      	ldr	r3, [r3, #16]
 8000662:	2082      	movs	r0, #130	; 0x82
 8000664:	4798      	blx	r3
 8000666:	b280      	uxth	r0, r0
 8000668:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800066a:	2800      	cmp	r0, #0
 800066c:	d04a      	beq.n	8000704 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800066e:	682b      	ldr	r3, [r5, #0]
 8000670:	f10d 0206 	add.w	r2, sp, #6
 8000674:	695b      	ldr	r3, [r3, #20]
 8000676:	a901      	add	r1, sp, #4
 8000678:	2082      	movs	r0, #130	; 0x82
 800067a:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 800067c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000680:	f640 6274 	movw	r2, #3700	; 0xe74
 8000684:	4293      	cmp	r3, r2
 8000686:	d93f      	bls.n	8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8000688:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 800068c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000690:	1ad2      	subs	r2, r2, r3
 8000692:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000694:	2a0a      	cmp	r2, #10
 8000696:	d93d      	bls.n	8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8000698:	230b      	movs	r3, #11
 800069a:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800069e:	4b23      	ldr	r3, [pc, #140]	; (800072c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 80006a0:	881b      	ldrh	r3, [r3, #0]
 80006a2:	429a      	cmp	r2, r3
 80006a4:	d901      	bls.n	80006aa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 80006a6:	3b01      	subs	r3, #1
 80006a8:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 80006aa:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80006ae:	f640 31b8 	movw	r1, #3000	; 0xbb8
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d830      	bhi.n	8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 80006b6:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006ba:	330e      	adds	r3, #14
 80006bc:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006be:	210f      	movs	r1, #15
 80006c0:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006c4:	491a      	ldr	r1, [pc, #104]	; (8000730 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 80006c6:	8809      	ldrh	r1, [r1, #0]
 80006c8:	428b      	cmp	r3, r1
 80006ca:	d901      	bls.n	80006d0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 80006cc:	3901      	subs	r1, #1
 80006ce:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d0:	4e18      	ldr	r6, [pc, #96]	; (8000734 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d2:	4d19      	ldr	r5, [pc, #100]	; (8000738 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d4:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d6:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d8:	4283      	cmp	r3, r0
 80006da:	b281      	uxth	r1, r0
 80006dc:	bf8c      	ite	hi
 80006de:	1a59      	subhi	r1, r3, r1
 80006e0:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006e2:	b2b8      	uxth	r0, r7
 80006e4:	42ba      	cmp	r2, r7
 80006e6:	bf8c      	ite	hi
 80006e8:	1a10      	subhi	r0, r2, r0
 80006ea:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ec:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006ee:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006f0:	4401      	add	r1, r0
 80006f2:	2905      	cmp	r1, #5
        {
            _x = x;
 80006f4:	bfc8      	it	gt
 80006f6:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006f8:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006fa:	bfc8      	it	gt
 80006fc:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006fe:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8000700:	682b      	ldr	r3, [r5, #0]
 8000702:	80a3      	strh	r3, [r4, #4]
    }
}
 8000704:	b003      	add	sp, #12
 8000706:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8000708:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 800070a:	bf9c      	itt	ls
 800070c:	23b4      	movls	r3, #180	; 0xb4
 800070e:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8000712:	e7bb      	b.n	800068c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8000714:	2200      	movs	r2, #0
 8000716:	e7c8      	b.n	80006aa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8000718:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 800071c:	3308      	adds	r3, #8
 800071e:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8000720:	2b0e      	cmp	r3, #14
 8000722:	d8cc      	bhi.n	80006be <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8000724:	2300      	movs	r3, #0
 8000726:	e7d3      	b.n	80006d0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8000728:	20000188 	.word	0x20000188
 800072c:	20000186 	.word	0x20000186
 8000730:	20000184 	.word	0x20000184
 8000734:	2000018c 	.word	0x2000018c
 8000738:	20000190 	.word	0x20000190

0800073c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800073c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800073e:	4668      	mov	r0, sp
{
 8000740:	460d      	mov	r5, r1
 8000742:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000744:	f7ff ff88 	bl	8000658 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000748:	f8bd 0000 	ldrh.w	r0, [sp]
 800074c:	b148      	cbz	r0, 8000762 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 800074e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000752:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000754:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000758:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 800075a:	4b03      	ldr	r3, [pc, #12]	; (8000768 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 800075c:	223c      	movs	r2, #60	; 0x3c
 800075e:	601a      	str	r2, [r3, #0]
        return true;
 8000760:	2001      	movs	r0, #1
}
 8000762:	b003      	add	sp, #12
 8000764:	bd30      	pop	{r4, r5, pc}
 8000766:	bf00      	nop
 8000768:	20000014 	.word	0x20000014

0800076c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 800076c:	b110      	cbz	r0, 8000774 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 800076e:	2802      	cmp	r0, #2
 8000770:	d009      	beq.n	8000786 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8000772:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000774:	4b07      	ldr	r3, [pc, #28]	; (8000794 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000776:	681a      	ldr	r2, [r3, #0]
 8000778:	fab2 f282 	clz	r2, r2
 800077c:	0952      	lsrs	r2, r2, #5
 800077e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000780:	4805      	ldr	r0, [pc, #20]	; (8000798 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000782:	f008 be53 	b.w	800942c <HAL_GPIO_WritePin>
 8000786:	4b03      	ldr	r3, [pc, #12]	; (8000794 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000788:	689a      	ldr	r2, [r3, #8]
 800078a:	fab2 f282 	clz	r2, r2
 800078e:	0952      	lsrs	r2, r2, #5
 8000790:	2110      	movs	r1, #16
 8000792:	e7f5      	b.n	8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8000794:	20000194 	.word	0x20000194
 8000798:	40021000 	.word	0x40021000

0800079c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800079c:	b110      	cbz	r0, 80007a4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800079e:	2802      	cmp	r0, #2
 80007a0:	d009      	beq.n	80007b6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 80007a2:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007a4:	4b07      	ldr	r3, [pc, #28]	; (80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 80007a6:	681a      	ldr	r2, [r3, #0]
 80007a8:	3a00      	subs	r2, #0
 80007aa:	bf18      	it	ne
 80007ac:	2201      	movne	r2, #1
 80007ae:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80007b0:	4805      	ldr	r0, [pc, #20]	; (80007c8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007b2:	f008 be3b 	b.w	800942c <HAL_GPIO_WritePin>
 80007b6:	4b03      	ldr	r3, [pc, #12]	; (80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 80007b8:	689a      	ldr	r2, [r3, #8]
 80007ba:	3a00      	subs	r2, #0
 80007bc:	bf18      	it	ne
 80007be:	2201      	movne	r2, #1
 80007c0:	2110      	movs	r1, #16
 80007c2:	e7f5      	b.n	80007b0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 80007c4:	20000194 	.word	0x20000194
 80007c8:	40021000 	.word	0x40021000

080007cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007cc:	b110      	cbz	r0, 80007d4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 80007ce:	2802      	cmp	r0, #2
 80007d0:	d004      	beq.n	80007dc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80007d2:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007d4:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80007d6:	4802      	ldr	r0, [pc, #8]	; (80007e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 80007d8:	f008 be2c 	b.w	8009434 <HAL_GPIO_TogglePin>
 80007dc:	2110      	movs	r1, #16
 80007de:	e7fa      	b.n	80007d6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 80007e0:	40021000 	.word	0x40021000

080007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80007e4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80007e6:	b130      	cbz	r0, 80007f6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80007e8:	2802      	cmp	r0, #2
 80007ea:	d009      	beq.n	8000800 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80007ec:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80007ee:	1e43      	subs	r3, r0, #1
 80007f0:	4258      	negs	r0, r3
 80007f2:	4158      	adcs	r0, r3
 80007f4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007f6:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80007f8:	4802      	ldr	r0, [pc, #8]	; (8000804 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 80007fa:	f008 fe11 	bl	8009420 <HAL_GPIO_ReadPin>
        break;
 80007fe:	e7f6      	b.n	80007ee <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000800:	2110      	movs	r1, #16
 8000802:	e7f9      	b.n	80007f8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8000804:	40021000 	.word	0x40021000

08000808 <_ZN8touchgfx4GPIO4initEv>:
{
 8000808:	b570      	push	{r4, r5, r6, lr}
 800080a:	4d08      	ldr	r5, [pc, #32]	; (800082c <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 800080c:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 800080e:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000810:	b2e0      	uxtb	r0, r4
 8000812:	f7ff ffe7 	bl	80007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000816:	b118      	cbz	r0, 8000820 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000818:	682b      	ldr	r3, [r5, #0]
 800081a:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 800081c:	bf18      	it	ne
 800081e:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000820:	3401      	adds	r4, #1
 8000822:	2c05      	cmp	r4, #5
 8000824:	f105 0504 	add.w	r5, r5, #4
 8000828:	d1f2      	bne.n	8000810 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 800082a:	bd70      	pop	{r4, r5, r6, pc}
 800082c:	20000194 	.word	0x20000194

08000830 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000830:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000832:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8000836:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 800083a:	4770      	bx	lr

0800083c <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 800083c:	2000      	movs	r0, #0
 800083e:	4770      	bx	lr

08000840 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000840:	4b03      	ldr	r3, [pc, #12]	; (8000850 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000842:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000844:	3900      	subs	r1, #0
 8000846:	bf18      	it	ne
 8000848:	2101      	movne	r1, #1
 800084a:	7019      	strb	r1, [r3, #0]
    }
 800084c:	4770      	bx	lr
 800084e:	bf00      	nop
 8000850:	200137d3 	.word	0x200137d3

08000854 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000854:	2000      	movs	r0, #0
 8000856:	4770      	bx	lr

08000858 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000858:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800085a:	b10b      	cbz	r3, 8000860 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800085c:	4608      	mov	r0, r1
 800085e:	4718      	bx	r3
        }
    }
 8000860:	4770      	bx	lr

08000862 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000862:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000866:	4770      	bx	lr

08000868 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000868:	6840      	ldr	r0, [r0, #4]
 800086a:	6803      	ldr	r3, [r0, #0]
 800086c:	699b      	ldr	r3, [r3, #24]
 800086e:	4718      	bx	r3

08000870 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000870:	4770      	bx	lr

08000872 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000872:	4770      	bx	lr

08000874 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000874:	4770      	bx	lr
	...

08000878 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8000878:	b510      	push	{r4, lr}
 800087a:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800087c:	f000 fcd8 	bl	8001230 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8000880:	6823      	ldr	r3, [r4, #0]
 8000882:	4903      	ldr	r1, [pc, #12]	; (8000890 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8000884:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000888:	4620      	mov	r0, r4
}
 800088a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 800088e:	4718      	bx	r3
 8000890:	d0000000 	.word	0xd0000000

08000894 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8000894:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000896:	6803      	ldr	r3, [r0, #0]
{
 8000898:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 800089a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800089e:	4798      	blx	r3
    enableInterrupts();
 80008a0:	6823      	ldr	r3, [r4, #0]
 80008a2:	4620      	mov	r0, r4
 80008a4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80008a6:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80008a8:	f000 f8ec 	bl	8000a84 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80008ac:	6823      	ldr	r3, [r4, #0]
 80008ae:	4620      	mov	r0, r4
 80008b0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80008b2:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80008b4:	2029      	movs	r0, #41	; 0x29
 80008b6:	f001 f8eb 	bl	8001a90 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80008ba:	f000 f8e3 	bl	8000a84 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80008be:	6823      	ldr	r3, [r4, #0]
 80008c0:	4620      	mov	r0, r4
 80008c2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80008c4:	4798      	blx	r3
    for (;;)
 80008c6:	e7f8      	b.n	80008ba <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080008c8 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80008c8:	b510      	push	{r4, lr}
 80008ca:	4604      	mov	r4, r0
        swapFrameBuffers();
 80008cc:	f010 f8ba 	bl	8010a44 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80008d0:	6823      	ldr	r3, [r4, #0]
 80008d2:	4620      	mov	r0, r4
 80008d4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80008d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80008dc:	4718      	bx	r3

080008de <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80008de:	f000 bc99 	b.w	8001214 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080008e2 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80008e2:	f000 bc9d 	b.w	8001220 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080008e6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80008e6:	f000 bcc1 	b.w	800126c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080008ea <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80008ea:	f000 bc6f 	b.w	80011cc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080008ee <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80008ee:	f000 bcc9 	b.w	8001284 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080008f2 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80008f2:	f000 bcd1 	b.w	8001298 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080008f6 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80008f6:	f000 bc73 	b.w	80011e0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080008fa <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80008fa:	f00f bb0f 	b.w	800ff1c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080008fe <_ZN11TouchGFXHALD0Ev>:
 80008fe:	b510      	push	{r4, lr}
 8000900:	217c      	movs	r1, #124	; 0x7c
 8000902:	4604      	mov	r4, r0
 8000904:	f027 f86b 	bl	80279de <_ZdlPvj>
 8000908:	4620      	mov	r0, r4
 800090a:	bd10      	pop	{r4, pc}

0800090c <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800090c:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8000910:	b11b      	cbz	r3, 800091a <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000912:	6840      	ldr	r0, [r0, #4]
 8000914:	6803      	ldr	r3, [r0, #0]
 8000916:	681b      	ldr	r3, [r3, #0]
 8000918:	4718      	bx	r3
    }
 800091a:	4618      	mov	r0, r3
 800091c:	4770      	bx	lr
	...

08000920 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000920:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000922:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000926:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 800092a:	4b0c      	ldr	r3, [pc, #48]	; (800095c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 800092c:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800092e:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000930:	d009      	beq.n	8000946 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000932:	b93a      	cbnz	r2, 8000944 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000934:	4a0a      	ldr	r2, [pc, #40]	; (8000960 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000936:	490b      	ldr	r1, [pc, #44]	; (8000964 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000938:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 800093a:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 800093c:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800093e:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000940:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000942:	701a      	strb	r2, [r3, #0]
    }
 8000944:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000946:	2a00      	cmp	r2, #0
 8000948:	d0fc      	beq.n	8000944 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800094a:	4a05      	ldr	r2, [pc, #20]	; (8000960 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 800094c:	4905      	ldr	r1, [pc, #20]	; (8000964 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800094e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000950:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000952:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000954:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000956:	2200      	movs	r2, #0
 8000958:	e7f3      	b.n	8000942 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 800095a:	bf00      	nop
 800095c:	200137cc 	.word	0x200137cc
 8000960:	200137c8 	.word	0x200137c8
 8000964:	200137ca 	.word	0x200137ca

08000968 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000968:	b570      	push	{r4, r5, r6, lr}
 800096a:	460d      	mov	r5, r1
 800096c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800096e:	b935      	cbnz	r5, 800097e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000970:	4b09      	ldr	r3, [pc, #36]	; (8000998 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000972:	4a0a      	ldr	r2, [pc, #40]	; (800099c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000974:	480a      	ldr	r0, [pc, #40]	; (80009a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000976:	f240 21d2 	movw	r1, #722	; 0x2d2
 800097a:	f027 fe21 	bl	80285c0 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800097e:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000982:	4b08      	ldr	r3, [pc, #32]	; (80009a4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000984:	3a00      	subs	r2, #0
 8000986:	bf18      	it	ne
 8000988:	2201      	movne	r2, #1
 800098a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800098c:	6803      	ldr	r3, [r0, #0]
    }
 800098e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000992:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000996:	4718      	bx	r3
 8000998:	08029730 	.word	0x08029730
 800099c:	08029768 	.word	0x08029768
 80009a0:	080297b6 	.word	0x080297b6
 80009a4:	200137d2 	.word	0x200137d2

080009a8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80009a8:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80009aa:	4b09      	ldr	r3, [pc, #36]	; (80009d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80009ac:	881b      	ldrh	r3, [r3, #0]
 80009ae:	428b      	cmp	r3, r1
 80009b0:	d803      	bhi.n	80009ba <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80009b2:	4b08      	ldr	r3, [pc, #32]	; (80009d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80009b4:	881b      	ldrh	r3, [r3, #0]
 80009b6:	4293      	cmp	r3, r2
 80009b8:	d905      	bls.n	80009c6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80009ba:	4b07      	ldr	r3, [pc, #28]	; (80009d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80009bc:	4a07      	ldr	r2, [pc, #28]	; (80009dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80009be:	4808      	ldr	r0, [pc, #32]	; (80009e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80009c0:	219e      	movs	r1, #158	; 0x9e
 80009c2:	f027 fdfd 	bl	80285c0 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80009c6:	4b07      	ldr	r3, [pc, #28]	; (80009e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80009c8:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80009ca:	4b07      	ldr	r3, [pc, #28]	; (80009e8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80009cc:	801a      	strh	r2, [r3, #0]
    }
 80009ce:	bd08      	pop	{r3, pc}
 80009d0:	200137c8 	.word	0x200137c8
 80009d4:	200137ca 	.word	0x200137ca
 80009d8:	080297fb 	.word	0x080297fb
 80009dc:	0802985e 	.word	0x0802985e
 80009e0:	080297b6 	.word	0x080297b6
 80009e4:	200137ce 	.word	0x200137ce
 80009e8:	200137d0 	.word	0x200137d0

080009ec <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80009ec:	2101      	movs	r1, #1
{
 80009ee:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80009f0:	2200      	movs	r2, #0
 80009f2:	4608      	mov	r0, r1
 80009f4:	f00c f89e 	bl	800cb34 <osSemaphoreNew>
 80009f8:	4b0a      	ldr	r3, [pc, #40]	; (8000a24 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80009fa:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80009fc:	b928      	cbnz	r0, 8000a0a <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80009fe:	4b0a      	ldr	r3, [pc, #40]	; (8000a28 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000a00:	4a0a      	ldr	r2, [pc, #40]	; (8000a2c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a02:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a04:	480a      	ldr	r0, [pc, #40]	; (8000a30 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000a06:	f027 fddb 	bl	80285c0 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000a0a:	2200      	movs	r2, #0
 8000a0c:	2104      	movs	r1, #4
 8000a0e:	2001      	movs	r0, #1
 8000a10:	f00c f944 	bl	800cc9c <osMessageQueueNew>
 8000a14:	4b07      	ldr	r3, [pc, #28]	; (8000a34 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000a16:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a18:	b918      	cbnz	r0, 8000a22 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000a1a:	4b07      	ldr	r3, [pc, #28]	; (8000a38 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000a1c:	4a03      	ldr	r2, [pc, #12]	; (8000a2c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a1e:	212c      	movs	r1, #44	; 0x2c
 8000a20:	e7f0      	b.n	8000a04 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000a22:	bd08      	pop	{r3, pc}
 8000a24:	200001a8 	.word	0x200001a8
 8000a28:	0802997c 	.word	0x0802997c
 8000a2c:	080299c5 	.word	0x080299c5
 8000a30:	080299f4 	.word	0x080299f4
 8000a34:	200001a4 	.word	0x200001a4
 8000a38:	08029a6e 	.word	0x08029a6e

08000a3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000a3c:	4b02      	ldr	r3, [pc, #8]	; (8000a48 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000a3e:	f04f 31ff 	mov.w	r1, #4294967295
 8000a42:	6818      	ldr	r0, [r3, #0]
 8000a44:	f00c b8ca 	b.w	800cbdc <osSemaphoreAcquire>
 8000a48:	200001a8 	.word	0x200001a8

08000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000a4c:	4b01      	ldr	r3, [pc, #4]	; (8000a54 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000a4e:	6818      	ldr	r0, [r3, #0]
 8000a50:	f00c b8f8 	b.w	800cc44 <osSemaphoreRelease>
 8000a54:	200001a8 	.word	0x200001a8

08000a58 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000a58:	4b02      	ldr	r3, [pc, #8]	; (8000a64 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000a5a:	2100      	movs	r1, #0
 8000a5c:	6818      	ldr	r0, [r3, #0]
 8000a5e:	f00c b8bd 	b.w	800cbdc <osSemaphoreAcquire>
 8000a62:	bf00      	nop
 8000a64:	200001a8 	.word	0x200001a8

08000a68 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000a68:	f7ff bff0 	b.w	8000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000a6c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000a6c:	4803      	ldr	r0, [pc, #12]	; (8000a7c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000a6e:	4904      	ldr	r1, [pc, #16]	; (8000a80 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000a70:	6800      	ldr	r0, [r0, #0]
 8000a72:	2300      	movs	r3, #0
 8000a74:	461a      	mov	r2, r3
 8000a76:	f00c b94b 	b.w	800cd10 <osMessageQueuePut>
 8000a7a:	bf00      	nop
 8000a7c:	200001a4 	.word	0x200001a4
 8000a80:	20000004 	.word	0x20000004

08000a84 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000a84:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000a86:	4c08      	ldr	r4, [pc, #32]	; (8000aa8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000a88:	2300      	movs	r3, #0
 8000a8a:	461a      	mov	r2, r3
 8000a8c:	a901      	add	r1, sp, #4
 8000a8e:	6820      	ldr	r0, [r4, #0]
 8000a90:	f00c f974 	bl	800cd7c <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000a94:	6820      	ldr	r0, [r4, #0]
 8000a96:	f04f 33ff 	mov.w	r3, #4294967295
 8000a9a:	2200      	movs	r2, #0
 8000a9c:	a901      	add	r1, sp, #4
 8000a9e:	f00c f96d 	bl	800cd7c <osMessageQueueGet>
}
 8000aa2:	b002      	add	sp, #8
 8000aa4:	bd10      	pop	{r4, pc}
 8000aa6:	bf00      	nop
 8000aa8:	200001a4 	.word	0x200001a4

08000aac <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000aac:	6803      	ldr	r3, [r0, #0]
 8000aae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000ab0:	4718      	bx	r3

08000ab2 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000ab2:	2001      	movs	r0, #1
 8000ab4:	4770      	bx	lr

08000ab6 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000ab6:	6803      	ldr	r3, [r0, #0]
 8000ab8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000aba:	4718      	bx	r3

08000abc <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8000abc:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000abe:	2300      	movs	r3, #0
 8000ac0:	9301      	str	r3, [sp, #4]
 8000ac2:	4b0d      	ldr	r3, [pc, #52]	; (8000af8 <_ZN8STM32DMA10initializeEv+0x3c>)
 8000ac4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000ac6:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000aca:	631a      	str	r2, [r3, #48]	; 0x30
 8000acc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000ace:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000ad2:	9201      	str	r2, [sp, #4]
 8000ad4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000ad6:	691a      	ldr	r2, [r3, #16]
 8000ad8:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000adc:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000ade:	691a      	ldr	r2, [r3, #16]
 8000ae0:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000ae4:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000ae6:	4b05      	ldr	r3, [pc, #20]	; (8000afc <_ZN8STM32DMA10initializeEv+0x40>)
 8000ae8:	4a05      	ldr	r2, [pc, #20]	; (8000b00 <_ZN8STM32DMA10initializeEv+0x44>)
 8000aea:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000aec:	4b05      	ldr	r3, [pc, #20]	; (8000b04 <_ZN8STM32DMA10initializeEv+0x48>)
 8000aee:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000af2:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000af4:	b002      	add	sp, #8
 8000af6:	4770      	bx	lr
 8000af8:	40023800 	.word	0x40023800
 8000afc:	20002644 	.word	0x20002644
 8000b00:	08000b49 	.word	0x08000b49
 8000b04:	e000e100 	.word	0xe000e100

08000b08 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000b08:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000b0c:	4770      	bx	lr
	...

08000b10 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000b10:	4b05      	ldr	r3, [pc, #20]	; (8000b28 <_ZN8STM32DMAD1Ev+0x18>)
 8000b12:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000b14:	4b05      	ldr	r3, [pc, #20]	; (8000b2c <_ZN8STM32DMAD1Ev+0x1c>)
 8000b16:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000b1a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000b1e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000b22:	f3bf 8f6f 	isb	sy
}
 8000b26:	4770      	bx	lr
 8000b28:	08029c38 	.word	0x08029c38
 8000b2c:	e000e100 	.word	0xe000e100

08000b30 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000b30:	b510      	push	{r4, lr}
 8000b32:	4604      	mov	r4, r0
}
 8000b34:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000b38:	f7ff ffea 	bl	8000b10 <_ZN8STM32DMAD1Ev>
 8000b3c:	4620      	mov	r0, r4
 8000b3e:	f026 ff4e 	bl	80279de <_ZdlPvj>
 8000b42:	4620      	mov	r0, r4
 8000b44:	bd10      	pop	{r4, pc}
	...

08000b48 <DMA2D_XferCpltCallback>:
        return instance;
 8000b48:	4b02      	ldr	r3, [pc, #8]	; (8000b54 <DMA2D_XferCpltCallback+0xc>)
 8000b4a:	681b      	ldr	r3, [r3, #0]
 8000b4c:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000b4e:	6803      	ldr	r3, [r0, #0]
 8000b50:	695b      	ldr	r3, [r3, #20]
 8000b52:	4718      	bx	r3
 8000b54:	200137d4 	.word	0x200137d4

08000b58 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000b58:	b570      	push	{r4, r5, r6, lr}
 8000b5a:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000b5c:	4625      	mov	r5, r4
 8000b5e:	4b0a      	ldr	r3, [pc, #40]	; (8000b88 <_ZN8STM32DMAC1Ev+0x30>)
 8000b60:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000b62:	2600      	movs	r6, #0
 8000b64:	6060      	str	r0, [r4, #4]
 8000b66:	7226      	strb	r6, [r4, #8]
 8000b68:	7266      	strb	r6, [r4, #9]
 8000b6a:	f845 3b20 	str.w	r3, [r5], #32
 8000b6e:	2260      	movs	r2, #96	; 0x60
 8000b70:	4629      	mov	r1, r5
 8000b72:	f010 f8bf 	bl	8010cf4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000b76:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000b7a:	60ee      	str	r6, [r5, #12]
 8000b7c:	3524      	adds	r5, #36	; 0x24
 8000b7e:	42ab      	cmp	r3, r5
 8000b80:	d1fb      	bne.n	8000b7a <_ZN8STM32DMAC1Ev+0x22>
}
 8000b82:	4620      	mov	r0, r4
 8000b84:	bd70      	pop	{r4, r5, r6, pc}
 8000b86:	bf00      	nop
 8000b88:	08029c38 	.word	0x08029c38

08000b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000b8c:	b508      	push	{r3, lr}
    switch (format)
 8000b8e:	290b      	cmp	r1, #11
 8000b90:	d80b      	bhi.n	8000baa <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000b92:	e8df f001 	tbb	[pc, r1]
 8000b96:	0612      	.short	0x0612
 8000b98:	0a0a0a10 	.word	0x0a0a0a10
 8000b9c:	0808080a 	.word	0x0808080a
 8000ba0:	0808      	.short	0x0808
 8000ba2:	2001      	movs	r0, #1
}
 8000ba4:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000ba6:	2005      	movs	r0, #5
        break;
 8000ba8:	e7fc      	b.n	8000ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000baa:	4b05      	ldr	r3, [pc, #20]	; (8000bc0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000bac:	4a05      	ldr	r2, [pc, #20]	; (8000bc4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000bae:	4806      	ldr	r0, [pc, #24]	; (8000bc8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000bb0:	2165      	movs	r1, #101	; 0x65
 8000bb2:	f027 fd05 	bl	80285c0 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000bb6:	2000      	movs	r0, #0
 8000bb8:	e7f4      	b.n	8000ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000bba:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000bbc:	e7f2      	b.n	8000ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000bbe:	bf00      	nop
 8000bc0:	08029ab0 	.word	0x08029ab0
 8000bc4:	08029acb 	.word	0x08029acb
 8000bc8:	08029b15 	.word	0x08029b15

08000bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000bcc:	b508      	push	{r3, lr}
    switch (format)
 8000bce:	290a      	cmp	r1, #10
 8000bd0:	d809      	bhi.n	8000be6 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000bd2:	e8df f001 	tbb	[pc, r1]
 8000bd6:	0610      	.short	0x0610
 8000bd8:	0808080e 	.word	0x0808080e
 8000bdc:	06060608 	.word	0x06060608
 8000be0:	06          	.byte	0x06
 8000be1:	00          	.byte	0x00
 8000be2:	2001      	movs	r0, #1
}
 8000be4:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000be6:	4b05      	ldr	r3, [pc, #20]	; (8000bfc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000be8:	4a05      	ldr	r2, [pc, #20]	; (8000c00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000bea:	4806      	ldr	r0, [pc, #24]	; (8000c04 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000bec:	2186      	movs	r1, #134	; 0x86
 8000bee:	f027 fce7 	bl	80285c0 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000bf2:	2000      	movs	r0, #0
 8000bf4:	e7f6      	b.n	8000be4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000bf6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000bf8:	e7f4      	b.n	8000be4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000bfa:	bf00      	nop
 8000bfc:	08029ab0 	.word	0x08029ab0
 8000c00:	08029b8d 	.word	0x08029b8d
 8000c04:	08029b15 	.word	0x08029b15

08000c08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000c08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c0c:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000c10:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c12:	4641      	mov	r1, r8
{
 8000c14:	4607      	mov	r7, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c16:	f7ff ffb9 	bl	8000b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c1a:	f894 901e 	ldrb.w	r9, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c1e:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c20:	4649      	mov	r1, r9
 8000c22:	4638      	mov	r0, r7
 8000c24:	f7ff ffb2 	bl	8000b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c28:	4649      	mov	r1, r9
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c2a:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c2c:	4638      	mov	r0, r7
 8000c2e:	f7ff ffcd 	bl	8000bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c32:	8aa1      	ldrh	r1, [r4, #20]
 8000c34:	8b62      	ldrh	r2, [r4, #26]
 8000c36:	4b43      	ldr	r3, [pc, #268]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000c38:	1a52      	subs	r2, r2, r1
 8000c3a:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c3c:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000c3e:	8b22      	ldrh	r2, [r4, #24]
 8000c40:	1a52      	subs	r2, r2, r1
 8000c42:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c44:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c46:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c48:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000c4c:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c4e:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000c50:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c52:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000c54:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000c56:	6827      	ldr	r7, [r4, #0]
 8000c58:	2f80      	cmp	r7, #128	; 0x80
 8000c5a:	d028      	beq.n	8000cae <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa6>
 8000c5c:	7f22      	ldrb	r2, [r4, #28]
 8000c5e:	d80f      	bhi.n	8000c80 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x78>
 8000c60:	2f20      	cmp	r7, #32
 8000c62:	d065      	beq.n	8000d30 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000c64:	2f40      	cmp	r7, #64	; 0x40
 8000c66:	d063      	beq.n	8000d30 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000c68:	2f04      	cmp	r7, #4
 8000c6a:	d01a      	beq.n	8000ca2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c6c:	4b35      	ldr	r3, [pc, #212]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000c6e:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000c72:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000c76:	45c8      	cmp	r8, r9
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c78:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000c7a:	d05f      	beq.n	8000d3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000c7c:	4a32      	ldr	r2, [pc, #200]	; (8000d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000c7e:	e044      	b.n	8000d0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
    switch (blitOp.operation)
 8000c80:	f5b7 7f80 	cmp.w	r7, #256	; 0x100
 8000c84:	d004      	beq.n	8000c90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x88>
 8000c86:	f5b7 7f00 	cmp.w	r7, #512	; 0x200
 8000c8a:	d1ef      	bne.n	8000c6c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x64>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c8c:	492f      	ldr	r1, [pc, #188]	; (8000d4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000c8e:	e000      	b.n	8000c92 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8a>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c90:	492f      	ldr	r1, [pc, #188]	; (8000d50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c92:	ea41 6202 	orr.w	r2, r1, r2, lsl #24
 8000c96:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000c98:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c9a:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c9c:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c9e:	6158      	str	r0, [r3, #20]
 8000ca0:	e032      	b.n	8000d08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ca2:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000ca6:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000caa:	61da      	str	r2, [r3, #28]
 8000cac:	e7f6      	b.n	8000c9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000cae:	68a7      	ldr	r7, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000cb0:	1d3a      	adds	r2, r7, #4
 8000cb2:	62da      	str	r2, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cb4:	7f21      	ldrb	r1, [r4, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000cb6:	783a      	ldrb	r2, [r7, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cb8:	ea45 6501 	orr.w	r5, r5, r1, lsl #24
 8000cbc:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
 8000cc0:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000cc2:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cc4:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000cc6:	b142      	cbz	r2, 8000cda <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
 8000cc8:	2a01      	cmp	r2, #1
 8000cca:	d021      	beq.n	8000d10 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x108>
                assert(0 && "Unsupported format");
 8000ccc:	4b21      	ldr	r3, [pc, #132]	; (8000d54 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8000cce:	4a22      	ldr	r2, [pc, #136]	; (8000d58 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 8000cd0:	4822      	ldr	r0, [pc, #136]	; (8000d5c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000cd2:	f44f 7188 	mov.w	r1, #272	; 0x110
 8000cd6:	f027 fc73 	bl	80285c0 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000cda:	69da      	ldr	r2, [r3, #28]
 8000cdc:	8879      	ldrh	r1, [r7, #2]
 8000cde:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000ce2:	3901      	subs	r1, #1
 8000ce4:	f022 0210 	bic.w	r2, r2, #16
 8000ce8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000cec:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000cee:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000cf0:	4b14      	ldr	r3, [pc, #80]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000cf2:	69da      	ldr	r2, [r3, #28]
 8000cf4:	f042 0220 	orr.w	r2, r2, #32
 8000cf8:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000cfa:	69da      	ldr	r2, [r3, #28]
 8000cfc:	0692      	lsls	r2, r2, #26
 8000cfe:	d4fc      	bmi.n	8000cfa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000d00:	2210      	movs	r2, #16
 8000d02:	609a      	str	r2, [r3, #8]
            if (blend)
 8000d04:	2900      	cmp	r1, #0
 8000d06:	d0b9      	beq.n	8000c7c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x74>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000d08:	4a15      	ldr	r2, [pc, #84]	; (8000d60 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000d0a:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000d0c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d10:	69da      	ldr	r2, [r3, #28]
 8000d12:	8878      	ldrh	r0, [r7, #2]
 8000d14:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000d18:	3801      	subs	r0, #1
 8000d1a:	f022 0210 	bic.w	r2, r2, #16
 8000d1e:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
                if (blitOp.alpha == 255)
 8000d22:	39ff      	subs	r1, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d24:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8000d28:	bf18      	it	ne
 8000d2a:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d2c:	61da      	str	r2, [r3, #28]
                break;
 8000d2e:	e7df      	b.n	8000cf0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d30:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000d34:	4b03      	ldr	r3, [pc, #12]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000d36:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000d3a:	e7b6      	b.n	8000caa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000d3c:	f240 2201 	movw	r2, #513	; 0x201
 8000d40:	e7e3      	b.n	8000d0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
 8000d42:	bf00      	nop
 8000d44:	4002b000 	.word	0x4002b000
 8000d48:	00010201 	.word	0x00010201
 8000d4c:	00020009 	.word	0x00020009
 8000d50:	0002000a 	.word	0x0002000a
 8000d54:	08029bd8 	.word	0x08029bd8
 8000d58:	08029bf2 	.word	0x08029bf2
 8000d5c:	08029b15 	.word	0x08029b15
 8000d60:	00020201 	.word	0x00020201

08000d64 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000d64:	b538      	push	{r3, r4, r5, lr}
 8000d66:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000d68:	7f89      	ldrb	r1, [r1, #30]
 8000d6a:	f7ff ff2f 	bl	8000bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000d6e:	8aa5      	ldrh	r5, [r4, #20]
 8000d70:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000d72:	4b16      	ldr	r3, [pc, #88]	; (8000dcc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d74:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000d76:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000d78:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8000d7c:	645a      	str	r2, [r3, #68]	; 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d7e:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d80:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d82:	1b52      	subs	r2, r2, r5
 8000d84:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000d86:	6825      	ldr	r5, [r4, #0]
 8000d88:	2d08      	cmp	r5, #8
 8000d8a:	d10e      	bne.n	8000daa <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d8c:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d8e:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d90:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d92:	7f20      	ldrb	r0, [r4, #28]
 8000d94:	4a0e      	ldr	r2, [pc, #56]	; (8000dd0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000d96:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000d9a:	61da      	str	r2, [r3, #28]
 8000d9c:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000d9e:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000da0:	4a0c      	ldr	r2, [pc, #48]	; (8000dd4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000da2:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000da4:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000da6:	601a      	str	r2, [r3, #0]
    }
}
 8000da8:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000daa:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000dac:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000dae:	611a      	str	r2, [r3, #16]
 8000db0:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000db2:	0a0a      	lsrs	r2, r1, #8
 8000db4:	0948      	lsrs	r0, r1, #5
 8000db6:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000dba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000dbe:	4302      	orrs	r2, r0
 8000dc0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000dc4:	430a      	orrs	r2, r1
 8000dc6:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000dc8:	4a03      	ldr	r2, [pc, #12]	; (8000dd8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000dca:	e7ec      	b.n	8000da6 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000dcc:	4002b000 	.word	0x4002b000
 8000dd0:	00010009 	.word	0x00010009
 8000dd4:	00020201 	.word	0x00020201
 8000dd8:	00030201 	.word	0x00030201

08000ddc <_ZN8touchgfx5paint8tearDownEv>:
* @brief Waits until previous DMA drawing operation has finished
*/
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ddc:	4b03      	ldr	r3, [pc, #12]	; (8000dec <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8000dde:	681a      	ldr	r2, [r3, #0]
 8000de0:	07d2      	lsls	r2, r2, #31
 8000de2:	d4fc      	bmi.n	8000dde <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000de4:	2223      	movs	r2, #35	; 0x23
 8000de6:	609a      	str	r2, [r3, #8]
}
 8000de8:	4770      	bx	lr
 8000dea:	bf00      	nop
 8000dec:	4002b000 	.word	0x4002b000

08000df0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
*
* @brief Renders Canvas Widget chunks using DMA.
* This functions will not generate an interrupt, and will not affect the DMA queue.
*/
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8000df0:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000df2:	4c0f      	ldr	r4, [pc, #60]	; (8000e30 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000df4:	6825      	ldr	r5, [r4, #0]
 8000df6:	07ed      	lsls	r5, r5, #31
 8000df8:	d4fc      	bmi.n	8000df4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000dfa:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000dfc:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000dfe:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000e00:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000e04:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8000e06:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000e08:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000e0a:	6461      	str	r1, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000e0c:	63e0      	str	r0, [r4, #60]	; 0x3c
    if (alpha < 0xFF)
 8000e0e:	d00a      	beq.n	8000e26 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000e10:	4908      	ldr	r1, [pc, #32]	; (8000e34 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000e12:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000e14:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000e18:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000e1a:	4b07      	ldr	r3, [pc, #28]	; (8000e38 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8000e1c:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000e1e:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000e20:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000e22:	6023      	str	r3, [r4, #0]
    }
}
 8000e24:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000e26:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8000e28:	9b03      	ldr	r3, [sp, #12]
 8000e2a:	63a3      	str	r3, [r4, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000e2c:	4b03      	ldr	r3, [pc, #12]	; (8000e3c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000e2e:	e7f8      	b.n	8000e22 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000e30:	4002b000 	.word	0x4002b000
 8000e34:	00010009 	.word	0x00010009
 8000e38:	00020001 	.word	0x00020001
 8000e3c:	00030001 	.word	0x00030001

08000e40 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000e40:	2001      	movs	r0, #1
 8000e42:	4770      	bx	lr

08000e44 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000e44:	2038      	movs	r0, #56	; 0x38
 8000e46:	4770      	bx	lr

08000e48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000e48:	2338      	movs	r3, #56	; 0x38
 8000e4a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e4e:	3008      	adds	r0, #8
 8000e50:	4770      	bx	lr

08000e52 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000e52:	2338      	movs	r3, #56	; 0x38
 8000e54:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e58:	3008      	adds	r0, #8
 8000e5a:	4770      	bx	lr

08000e5c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e5c:	2001      	movs	r0, #1
 8000e5e:	4770      	bx	lr

08000e60 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e60:	f241 30f4 	movw	r0, #5108	; 0x13f4
 8000e64:	4770      	bx	lr

08000e66 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e66:	f241 33f4 	movw	r3, #5108	; 0x13f4
 8000e6a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e6e:	3008      	adds	r0, #8
 8000e70:	4770      	bx	lr

08000e72 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e72:	f241 33f4 	movw	r3, #5108	; 0x13f4
 8000e76:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e7a:	3008      	adds	r0, #8
 8000e7c:	4770      	bx	lr

08000e7e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e7e:	2001      	movs	r0, #1
 8000e80:	4770      	bx	lr

08000e82 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e82:	2010      	movs	r0, #16
 8000e84:	4770      	bx	lr

08000e86 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e86:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e8a:	3008      	adds	r0, #8
 8000e8c:	4770      	bx	lr

08000e8e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e8e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e92:	3008      	adds	r0, #8
 8000e94:	4770      	bx	lr

08000e96 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8000e96:	4608      	mov	r0, r1
 8000e98:	f002 bc48 	b.w	800372c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08000e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000e9c:	b510      	push	{r4, lr}
 8000e9e:	4b03      	ldr	r3, [pc, #12]	; (8000eac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000ea0:	6003      	str	r3, [r0, #0]
 8000ea2:	4604      	mov	r4, r0
 8000ea4:	f00e fbc3 	bl	800f62e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ea8:	4620      	mov	r0, r4
 8000eaa:	bd10      	pop	{r4, pc}
 8000eac:	08029cf0 	.word	0x08029cf0

08000eb0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000eb0:	b510      	push	{r4, lr}
 8000eb2:	4604      	mov	r4, r0
 8000eb4:	f7ff fff2 	bl	8000e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000eb8:	4620      	mov	r0, r4
 8000eba:	2140      	movs	r1, #64	; 0x40
 8000ebc:	f026 fd8f 	bl	80279de <_ZdlPvj>
 8000ec0:	4620      	mov	r0, r4
 8000ec2:	bd10      	pop	{r4, pc}

08000ec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000ec4:	b510      	push	{r4, lr}
 8000ec6:	4b03      	ldr	r3, [pc, #12]	; (8000ed4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ec8:	6003      	str	r3, [r0, #0]
 8000eca:	4604      	mov	r4, r0
 8000ecc:	f00e fbaf 	bl	800f62e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ed0:	4620      	mov	r0, r4
 8000ed2:	bd10      	pop	{r4, pc}
 8000ed4:	08029cbc 	.word	0x08029cbc

08000ed8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000ed8:	b510      	push	{r4, lr}
 8000eda:	4604      	mov	r4, r0
 8000edc:	f7ff fff2 	bl	8000ec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ee0:	4620      	mov	r0, r4
 8000ee2:	f241 31fc 	movw	r1, #5116	; 0x13fc
 8000ee6:	f026 fd7a 	bl	80279de <_ZdlPvj>
 8000eea:	4620      	mov	r0, r4
 8000eec:	bd10      	pop	{r4, pc}
	...

08000ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000ef0:	b510      	push	{r4, lr}
 8000ef2:	4b03      	ldr	r3, [pc, #12]	; (8000f00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ef4:	6003      	str	r3, [r0, #0]
 8000ef6:	4604      	mov	r4, r0
 8000ef8:	f00e fb99 	bl	800f62e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000efc:	4620      	mov	r0, r4
 8000efe:	bd10      	pop	{r4, pc}
 8000f00:	08029c88 	.word	0x08029c88

08000f04 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000f04:	b510      	push	{r4, lr}
 8000f06:	4604      	mov	r4, r0
 8000f08:	f7ff fff2 	bl	8000ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f0c:	4620      	mov	r0, r4
 8000f0e:	2118      	movs	r1, #24
 8000f10:	f026 fd65 	bl	80279de <_ZdlPvj>
 8000f14:	4620      	mov	r0, r4
 8000f16:	bd10      	pop	{r4, pc}

08000f18 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000f18:	b510      	push	{r4, lr}
 8000f1a:	4b09      	ldr	r3, [pc, #36]	; (8000f40 <_ZN12FrontendHeapD1Ev+0x28>)
 8000f1c:	6003      	str	r3, [r0, #0]
 8000f1e:	4604      	mov	r4, r0
 8000f20:	f500 50a1 	add.w	r0, r0, #5152	; 0x1420
 8000f24:	3008      	adds	r0, #8
 8000f26:	f7ff ffb9 	bl	8000e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000f2a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000f2e:	f7ff ffc9 	bl	8000ec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f32:	f104 0014 	add.w	r0, r4, #20
 8000f36:	f7ff ffdb 	bl	8000ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f3a:	4620      	mov	r0, r4
 8000f3c:	bd10      	pop	{r4, pc}
 8000f3e:	bf00      	nop
 8000f40:	08029d24 	.word	0x08029d24

08000f44 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000f44:	b508      	push	{r3, lr}
 8000f46:	4802      	ldr	r0, [pc, #8]	; (8000f50 <__tcf_0+0xc>)
 8000f48:	f7ff ffe6 	bl	8000f18 <_ZN12FrontendHeapD1Ev>
 8000f4c:	bd08      	pop	{r3, pc}
 8000f4e:	bf00      	nop
 8000f50:	200001b0 	.word	0x200001b0

08000f54 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000f54:	b510      	push	{r4, lr}
 8000f56:	4604      	mov	r4, r0
 8000f58:	f7ff ffde 	bl	8000f18 <_ZN12FrontendHeapD1Ev>
 8000f5c:	4620      	mov	r0, r4
 8000f5e:	f241 51cc 	movw	r1, #5580	; 0x15cc
 8000f62:	f026 fd3c 	bl	80279de <_ZdlPvj>
 8000f66:	4620      	mov	r0, r4
 8000f68:	bd10      	pop	{r4, pc}
	...

08000f6c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000f6c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000f70:	f001 f9ce 	bl	8002310 <_ZN14BitmapDatabase11getInstanceEv>
 8000f74:	4605      	mov	r5, r0
 8000f76:	f001 f9cf 	bl	8002318 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000f7a:	2400      	movs	r4, #0
 8000f7c:	4601      	mov	r1, r0
 8000f7e:	4623      	mov	r3, r4
 8000f80:	4628      	mov	r0, r5
 8000f82:	4622      	mov	r2, r4
 8000f84:	9400      	str	r4, [sp, #0]
 8000f86:	f017 f9d5 	bl	8018334 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000f8a:	4b26      	ldr	r3, [pc, #152]	; (8001024 <touchgfx_init+0xb8>)
 8000f8c:	4a26      	ldr	r2, [pc, #152]	; (8001028 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000f8e:	4d27      	ldr	r5, [pc, #156]	; (800102c <touchgfx_init+0xc0>)
 8000f90:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000f92:	4620      	mov	r0, r4
 8000f94:	f006 ff92 	bl	8007ebc <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000f98:	4825      	ldr	r0, [pc, #148]	; (8001030 <touchgfx_init+0xc4>)
 8000f9a:	f017 f933 	bl	8018204 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000f9e:	682b      	ldr	r3, [r5, #0]
 8000fa0:	f3bf 8f5b 	dmb	ish
 8000fa4:	07db      	lsls	r3, r3, #31
 8000fa6:	d436      	bmi.n	8001016 <touchgfx_init+0xaa>
 8000fa8:	4628      	mov	r0, r5
 8000faa:	f026 fd1a 	bl	80279e2 <__cxa_guard_acquire>
 8000fae:	b390      	cbz	r0, 8001016 <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8000fb0:	4c20      	ldr	r4, [pc, #128]	; (8001034 <touchgfx_init+0xc8>)
          screenStorage(scr),
          transitionStorage(tra),
 8000fb2:	4f21      	ldr	r7, [pc, #132]	; (8001038 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000fb4:	4b21      	ldr	r3, [pc, #132]	; (800103c <touchgfx_init+0xd0>)
 8000fb6:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8000fb8:	f107 0648 	add.w	r6, r7, #72	; 0x48
        : presenterStorage(pres),
 8000fbc:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8000fc0:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8000fc4:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8000fc6:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8000fca:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8000fcc:	6126      	str	r6, [r4, #16]
 8000fce:	f00e fb2f 	bl	800f630 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fd2:	4b1b      	ldr	r3, [pc, #108]	; (8001040 <touchgfx_init+0xd4>)
 8000fd4:	6163      	str	r3, [r4, #20]
 8000fd6:	4640      	mov	r0, r8
 8000fd8:	f00e fb2a 	bl	800f630 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fdc:	4b19      	ldr	r3, [pc, #100]	; (8001044 <touchgfx_init+0xd8>)
 8000fde:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000fe0:	4638      	mov	r0, r7
 8000fe2:	f00e fb25 	bl	800f630 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fe6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8000fea:	4a17      	ldr	r2, [pc, #92]	; (8001048 <touchgfx_init+0xdc>)
 8000fec:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
 8000ff0:	f503 608d 	add.w	r0, r3, #1128	; 0x468
 8000ff4:	f007 fba6 	bl	8008744 <_ZN5ModelC1Ev>
 8000ff8:	4622      	mov	r2, r4
 8000ffa:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8000ffe:	4630      	mov	r0, r6
 8001000:	f007 f8b6 	bl	8008170 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001004:	4630      	mov	r0, r6
 8001006:	f002 fb91 	bl	800372c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 800100a:	4810      	ldr	r0, [pc, #64]	; (800104c <touchgfx_init+0xe0>)
 800100c:	f027 faf6 	bl	80285fc <atexit>
 8001010:	4628      	mov	r0, r5
 8001012:	f026 fcf2 	bl	80279fa <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001016:	480e      	ldr	r0, [pc, #56]	; (8001050 <touchgfx_init+0xe4>)
}
 8001018:	b002      	add	sp, #8
 800101a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 800101e:	f7ff bc2b 	b.w	8000878 <_ZN11TouchGFXHAL10initializeEv>
 8001022:	bf00      	nop
 8001024:	20013838 	.word	0x20013838
 8001028:	2000259c 	.word	0x2000259c
 800102c:	200001ac 	.word	0x200001ac
 8001030:	20000008 	.word	0x20000008
 8001034:	200001b0 	.word	0x200001b0
 8001038:	200015d8 	.word	0x200015d8
 800103c:	08029d24 	.word	0x08029d24
 8001040:	08029c88 	.word	0x08029c88
 8001044:	08029cbc 	.word	0x08029cbc
 8001048:	08029cf0 	.word	0x08029cf0
 800104c:	08000f45 	.word	0x08000f45
 8001050:	20002520 	.word	0x20002520

08001054 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001054:	4770      	bx	lr
	...

08001058 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001058:	4801      	ldr	r0, [pc, #4]	; (8001060 <touchgfx_taskEntry+0x8>)
 800105a:	f7ff bc1b 	b.w	8000894 <_ZN11TouchGFXHAL9taskEntryEv>
 800105e:	bf00      	nop
 8001060:	20002520 	.word	0x20002520

08001064 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001064:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001066:	4e22      	ldr	r6, [pc, #136]	; (80010f0 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8001068:	4c22      	ldr	r4, [pc, #136]	; (80010f4 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 800106a:	4d23      	ldr	r5, [pc, #140]	; (80010f8 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 800106c:	4b23      	ldr	r3, [pc, #140]	; (80010fc <_GLOBAL__sub_I_touchgfx_init+0x98>)
 800106e:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001070:	4630      	mov	r0, r6
 8001072:	f7ff fd71 	bl	8000b58 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001076:	4628      	mov	r0, r5
 8001078:	f01b fc28 	bl	801c8cc <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 800107c:	4b20      	ldr	r3, [pc, #128]	; (8001100 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800107e:	4821      	ldr	r0, [pc, #132]	; (8001104 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8001080:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001082:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001084:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8001088:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 800108c:	491e      	ldr	r1, [pc, #120]	; (8001108 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 800108e:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8001090:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8001094:	491d      	ldr	r1, [pc, #116]	; (800110c <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8001096:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8001098:	491d      	ldr	r1, [pc, #116]	; (8001110 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 800109a:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 800109e:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80010a0:	21f0      	movs	r1, #240	; 0xf0
 80010a2:	8001      	strh	r1, [r0, #0]
 80010a4:	481b      	ldr	r0, [pc, #108]	; (8001114 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 80010a6:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80010a8:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010aa:	481b      	ldr	r0, [pc, #108]	; (8001118 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 80010ac:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010b0:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 80010b4:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80010b8:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80010bc:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80010c0:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 80010c4:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 80010c8:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80010cc:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 80010d0:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 80010d4:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 80010d6:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010da:	8001      	strh	r1, [r0, #0]
 80010dc:	480f      	ldr	r0, [pc, #60]	; (800111c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 80010de:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80010e0:	490f      	ldr	r1, [pc, #60]	; (8001120 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80010e2:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80010e4:	2201      	movs	r2, #1
 80010e6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80010ea:	4a0e      	ldr	r2, [pc, #56]	; (8001124 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80010ec:	601a      	str	r2, [r3, #0]
}
 80010ee:	bd70      	pop	{r4, r5, r6, pc}
 80010f0:	20001780 	.word	0x20001780
 80010f4:	2000177c 	.word	0x2000177c
 80010f8:	200025a0 	.word	0x200025a0
 80010fc:	08029720 	.word	0x08029720
 8001100:	20002520 	.word	0x20002520
 8001104:	200137c8 	.word	0x200137c8
 8001108:	01000001 	.word	0x01000001
 800110c:	01010000 	.word	0x01010000
 8001110:	200137d4 	.word	0x200137d4
 8001114:	200137ce 	.word	0x200137ce
 8001118:	200137ca 	.word	0x200137ca
 800111c:	200137d0 	.word	0x200137d0
 8001120:	200137cc 	.word	0x200137cc
 8001124:	080298ac 	.word	0x080298ac

08001128 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001128:	4801      	ldr	r0, [pc, #4]	; (8001130 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800112a:	f7ff bcf1 	b.w	8000b10 <_ZN8STM32DMAD1Ev>
 800112e:	bf00      	nop
 8001130:	20001780 	.word	0x20001780

08001134 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001134:	2000      	movs	r0, #0
 8001136:	4770      	bx	lr

08001138 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001138:	8081      	strh	r1, [r0, #4]
    }
 800113a:	4770      	bx	lr

0800113c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800113c:	80c1      	strh	r1, [r0, #6]
    }
 800113e:	4770      	bx	lr

08001140 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001140:	8101      	strh	r1, [r0, #8]
    }
 8001142:	4770      	bx	lr

08001144 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001144:	8141      	strh	r1, [r0, #10]
    }
 8001146:	4770      	bx	lr

08001148 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001148:	4770      	bx	lr

0800114a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800114a:	4770      	bx	lr

0800114c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 800114c:	4770      	bx	lr

0800114e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800114e:	4770      	bx	lr

08001150 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001150:	4770      	bx	lr

08001152 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001152:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001154:	88c4      	ldrh	r4, [r0, #6]
 8001156:	6803      	ldr	r3, [r0, #0]
 8001158:	1b12      	subs	r2, r2, r4
 800115a:	8884      	ldrh	r4, [r0, #4]
 800115c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800115e:	1b09      	subs	r1, r1, r4
 8001160:	b212      	sxth	r2, r2
    }
 8001162:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001166:	b209      	sxth	r1, r1
 8001168:	4718      	bx	r3

0800116a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800116a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800116e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001170:	f04f 33ff 	mov.w	r3, #4294967295
 8001174:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001176:	6813      	ldr	r3, [r2, #0]
 8001178:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800117a:	6010      	str	r0, [r2, #0]
    }
 800117c:	4770      	bx	lr

0800117e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800117e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001182:	b11a      	cbz	r2, 800118c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8001184:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8001188:	b102      	cbz	r2, 800118c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800118a:	6018      	str	r0, [r3, #0]
        }
    }
 800118c:	4770      	bx	lr

0800118e <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800118e:	2000      	movs	r0, #0
 8001190:	4770      	bx	lr

08001192 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8001192:	888b      	ldrh	r3, [r1, #4]
 8001194:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8001196:	2001      	movs	r0, #1
 8001198:	4770      	bx	lr

0800119a <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800119a:	4770      	bx	lr

0800119c <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800119c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 80011a0:	4770      	bx	lr

080011a2 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 80011a2:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 80011a6:	4770      	bx	lr

080011a8 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 80011a8:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80011aa:	2200      	movs	r2, #0
        return rect.width;
 80011ac:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80011b0:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80011b4:	8002      	strh	r2, [r0, #0]
 80011b6:	8042      	strh	r2, [r0, #2]
 80011b8:	8084      	strh	r4, [r0, #4]
 80011ba:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80011bc:	bd10      	pop	{r4, pc}

080011be <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80011be:	2200      	movs	r2, #0
 80011c0:	8002      	strh	r2, [r0, #0]
 80011c2:	8042      	strh	r2, [r0, #2]
 80011c4:	8082      	strh	r2, [r0, #4]
 80011c6:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80011c8:	4770      	bx	lr
	...

080011cc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011cc:	4b03      	ldr	r3, [pc, #12]	; (80011dc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80011ce:	2290      	movs	r2, #144	; 0x90
 80011d0:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 80011d4:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80011d8:	4770      	bx	lr
 80011da:	bf00      	nop
 80011dc:	e000e100 	.word	0xe000e100

080011e0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80011e0:	4a09      	ldr	r2, [pc, #36]	; (8001208 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80011e2:	490a      	ldr	r1, [pc, #40]	; (800120c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80011e4:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80011e6:	480a      	ldr	r0, [pc, #40]	; (8001210 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80011e8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80011ec:	3b01      	subs	r3, #1
 80011ee:	b29b      	uxth	r3, r3
 80011f0:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80011f2:	6911      	ldr	r1, [r2, #16]
 80011f4:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80011f8:	3901      	subs	r1, #1
 80011fa:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80011fc:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80011fe:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001200:	f043 0301 	orr.w	r3, r3, #1
 8001204:	6353      	str	r3, [r2, #52]	; 0x34
}
 8001206:	4770      	bx	lr
 8001208:	40016800 	.word	0x40016800
 800120c:	20002626 	.word	0x20002626
 8001210:	20002624 	.word	0x20002624

08001214 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001214:	4b01      	ldr	r3, [pc, #4]	; (800121c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001216:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800121a:	4770      	bx	lr
 800121c:	40016800 	.word	0x40016800

08001220 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001220:	4b02      	ldr	r3, [pc, #8]	; (800122c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001222:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001224:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001228:	625a      	str	r2, [r3, #36]	; 0x24
}
 800122a:	4770      	bx	lr
 800122c:	40016800 	.word	0x40016800

08001230 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001230:	b570      	push	{r4, r5, r6, lr}
 8001232:	4604      	mov	r4, r0
    HAL::initialize();
 8001234:	f00e fec7 	bl	800ffc6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001238:	6823      	ldr	r3, [r4, #0]
 800123a:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 800123c:	f013 fe70 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
 8001240:	4601      	mov	r1, r0
 8001242:	4620      	mov	r0, r4
 8001244:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001246:	6823      	ldr	r3, [r4, #0]
 8001248:	4a05      	ldr	r2, [pc, #20]	; (8001260 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800124a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800124e:	4620      	mov	r0, r4
 8001250:	46ac      	mov	ip, r5
 8001252:	2300      	movs	r3, #0
}
 8001254:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001258:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 800125c:	4760      	bx	ip
 800125e:	bf00      	nop
 8001260:	d004b000 	.word	0xd004b000

08001264 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001264:	f00e be96 	b.w	800ff94 <_ZN8touchgfx3HAL10beginFrameEv>

08001268 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8001268:	f00e bea0 	b.w	800ffac <_ZN8touchgfx3HAL8endFrameEv>

0800126c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 800126c:	f00e be5c 	b.w	800ff28 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001270 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001270:	f00e bfbd 	b.w	80101ee <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001274 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001274:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001278:	b112      	cbz	r2, 8001280 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800127a:	6803      	ldr	r3, [r0, #0]
 800127c:	695b      	ldr	r3, [r3, #20]
 800127e:	4718      	bx	r3
    }
 8001280:	4770      	bx	lr
	...

08001284 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001284:	4b03      	ldr	r3, [pc, #12]	; (8001294 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8001286:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800128a:	609a      	str	r2, [r3, #8]
 800128c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001290:	609a      	str	r2, [r3, #8]
}
 8001292:	4770      	bx	lr
 8001294:	e000e100 	.word	0xe000e100

08001298 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001298:	4b08      	ldr	r3, [pc, #32]	; (80012bc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 800129a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800129e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80012a2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80012a6:	f3bf 8f6f 	isb	sy
 80012aa:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80012ae:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80012b2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80012b6:	f3bf 8f6f 	isb	sy
}
 80012ba:	4770      	bx	lr
 80012bc:	e000e100 	.word	0xe000e100

080012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80012c0:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80012c2:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80012c4:	4e12      	ldr	r6, [pc, #72]	; (8001310 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80012c6:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80012c8:	4b12      	ldr	r3, [pc, #72]	; (8001314 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80012ca:	6003      	str	r3, [r0, #0]
 80012cc:	6833      	ldr	r3, [r6, #0]
 80012ce:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 80012d2:	4605      	mov	r5, r0
 80012d4:	b10a      	cbz	r2, 80012da <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80012d6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80012d8:	b900      	cbnz	r0, 80012dc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80012da:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80012dc:	6803      	ldr	r3, [r0, #0]
 80012de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80012e0:	4798      	blx	r3
        return auxiliaryLCD;
 80012e2:	6833      	ldr	r3, [r6, #0]
 80012e4:	fab0 f480 	clz	r4, r0
 80012e8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80012ea:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80012ec:	b130      	cbz	r0, 80012fc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80012ee:	6803      	ldr	r3, [r0, #0]
 80012f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80012f2:	4798      	blx	r3
 80012f4:	2800      	cmp	r0, #0
 80012f6:	bf08      	it	eq
 80012f8:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 80012fc:	b92c      	cbnz	r4, 800130a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 80012fe:	4b06      	ldr	r3, [pc, #24]	; (8001318 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001300:	4a06      	ldr	r2, [pc, #24]	; (800131c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001302:	4807      	ldr	r0, [pc, #28]	; (8001320 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001304:	212c      	movs	r1, #44	; 0x2c
 8001306:	f027 f95b 	bl	80285c0 <__assert_func>
    }
 800130a:	4628      	mov	r0, r5
 800130c:	bd70      	pop	{r4, r5, r6, pc}
 800130e:	bf00      	nop
 8001310:	200137d4 	.word	0x200137d4
 8001314:	08029e34 	.word	0x08029e34
 8001318:	08029d30 	.word	0x08029d30
 800131c:	08029d8e 	.word	0x08029d8e
 8001320:	08029dc7 	.word	0x08029dc7

08001324 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001324:	b510      	push	{r4, lr}
        return instance;
 8001326:	4c14      	ldr	r4, [pc, #80]	; (8001378 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001328:	6823      	ldr	r3, [r4, #0]
 800132a:	b323      	cbz	r3, 8001376 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800132c:	4b13      	ldr	r3, [pc, #76]	; (800137c <HAL_LTDC_LineEventCallback+0x58>)
 800132e:	4a14      	ldr	r2, [pc, #80]	; (8001380 <HAL_LTDC_LineEventCallback+0x5c>)
 8001330:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001332:	8811      	ldrh	r1, [r2, #0]
 8001334:	428b      	cmp	r3, r1
 8001336:	d113      	bne.n	8001360 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001338:	4b12      	ldr	r3, [pc, #72]	; (8001384 <HAL_LTDC_LineEventCallback+0x60>)
 800133a:	8819      	ldrh	r1, [r3, #0]
 800133c:	f009 fe92 	bl	800b064 <HAL_LTDC_ProgramLineEvent>
 8001340:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001342:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8001346:	3301      	adds	r3, #1
 8001348:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800134c:	f7ff fb8e 	bl	8000a6c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001350:	6820      	ldr	r0, [r4, #0]
 8001352:	f00f fb77 	bl	8010a44 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001356:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800135a:	2000      	movs	r0, #0
 800135c:	f7ff ba06 	b.w	800076c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001360:	f009 fe80 	bl	800b064 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001364:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001366:	6803      	ldr	r3, [r0, #0]
 8001368:	6a1b      	ldr	r3, [r3, #32]
 800136a:	4798      	blx	r3
    }
 800136c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001370:	2000      	movs	r0, #0
 8001372:	f7ff ba13 	b.w	800079c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001376:	bd10      	pop	{r4, pc}
 8001378:	200137d4 	.word	0x200137d4
 800137c:	40016800 	.word	0x40016800
 8001380:	20002626 	.word	0x20002626
 8001384:	20002624 	.word	0x20002624

08001388 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001388:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800138a:	2064      	movs	r0, #100	; 0x64
 800138c:	f00b fbc4 	bl	800cb18 <osDelay>
  for(;;)
 8001390:	e7fb      	b.n	800138a <StartDefaultTask+0x2>
 8001392:	bf00      	nop

08001394 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 8001394:	b580      	push	{r7, lr}
 8001396:	4c10      	ldr	r4, [pc, #64]	; (80013d8 <StartTimeoutTask+0x44>)
 8001398:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80013e4 <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 800139c:	4f0f      	ldr	r7, [pc, #60]	; (80013dc <StartTimeoutTask+0x48>)
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;


	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800139e:	4e10      	ldr	r6, [pc, #64]	; (80013e0 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 80013a0:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013a2:	2300      	movs	r3, #0
 80013a4:	461a      	mov	r2, r3
 80013a6:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 80013a8:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013aa:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 80013ae:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013b0:	f00b fcae 	bl	800cd10 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 80013b4:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 80013b6:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80013b8:	4638      	mov	r0, r7
 80013ba:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80013bc:	b912      	cbnz	r2, 80013c4 <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80013be:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80013c0:	f008 f834 	bl	800942c <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80013c4:	4630      	mov	r0, r6
 80013c6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80013ca:	f008 f833 	bl	8009434 <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80013ce:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80013d2:	f00b fba1 	bl	800cb18 <osDelay>
	  sleep_timeout_value--;
 80013d6:	e7e3      	b.n	80013a0 <StartTimeoutTask+0xc>
 80013d8:	20000014 	.word	0x20000014
 80013dc:	40021000 	.word	0x40021000
 80013e0:	40021800 	.word	0x40021800
 80013e4:	20002630 	.word	0x20002630

080013e8 <updateGUI_test>:
	return sleep_timeout_value;
 80013e8:	4b01      	ldr	r3, [pc, #4]	; (80013f0 <updateGUI_test+0x8>)
}
 80013ea:	6818      	ldr	r0, [r3, #0]
 80013ec:	4770      	bx	lr
 80013ee:	bf00      	nop
 80013f0:	20000014 	.word	0x20000014

080013f4 <SystemClock_Config>:
{
 80013f4:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80013f6:	2400      	movs	r4, #0
{
 80013f8:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80013fa:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 80013fe:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001402:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8001406:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 800140a:	4a1e      	ldr	r2, [pc, #120]	; (8001484 <SystemClock_Config+0x90>)
 800140c:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800140e:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001410:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001412:	4b1d      	ldr	r3, [pc, #116]	; (8001488 <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8001414:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001418:	6411      	str	r1, [r2, #64]	; 0x40
 800141a:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800141c:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8001420:	9201      	str	r2, [sp, #4]
 8001422:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001424:	9402      	str	r4, [sp, #8]
 8001426:	681a      	ldr	r2, [r3, #0]
 8001428:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800142c:	601a      	str	r2, [r3, #0]
 800142e:	681b      	ldr	r3, [r3, #0]
 8001430:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001434:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001436:	2201      	movs	r2, #1
 8001438:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800143c:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001440:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001442:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001444:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001446:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 800144a:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800144e:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001452:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001454:	2202      	movs	r2, #2
 8001456:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001458:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800145a:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800145e:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001460:	f009 fe22 	bl	800b0a8 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001464:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001466:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800146a:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800146e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001472:	a803      	add	r0, sp, #12
 8001474:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001476:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800147a:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800147c:	f00a f82c 	bl	800b4d8 <HAL_RCC_ClockConfig>
}
 8001480:	b015      	add	sp, #84	; 0x54
 8001482:	bd30      	pop	{r4, r5, pc}
 8001484:	40023800 	.word	0x40023800
 8001488:	40007000 	.word	0x40007000

0800148c <main>:
{
 800148c:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001490:	2400      	movs	r4, #0
{
 8001492:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8001494:	f007 fca4 	bl	8008de0 <HAL_Init>
  SystemClock_Config();
 8001498:	f7ff ffac 	bl	80013f4 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800149c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 80014a0:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014a4:	4bc1      	ldr	r3, [pc, #772]	; (80017ac <main+0x320>)
 80014a6:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014a8:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014aa:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014ac:	48c0      	ldr	r0, [pc, #768]	; (80017b0 <main+0x324>)
  hi2c3.Instance = I2C3;
 80014ae:	4dc1      	ldr	r5, [pc, #772]	; (80017b4 <main+0x328>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014b0:	f041 0110 	orr.w	r1, r1, #16
 80014b4:	6319      	str	r1, [r3, #48]	; 0x30
 80014b6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014b8:	f001 0110 	and.w	r1, r1, #16
 80014bc:	9100      	str	r1, [sp, #0]
 80014be:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80014c0:	9401      	str	r4, [sp, #4]
 80014c2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014c4:	f041 0120 	orr.w	r1, r1, #32
 80014c8:	6319      	str	r1, [r3, #48]	; 0x30
 80014ca:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014cc:	f001 0120 	and.w	r1, r1, #32
 80014d0:	9101      	str	r1, [sp, #4]
 80014d2:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80014d4:	9402      	str	r4, [sp, #8]
 80014d6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014d8:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80014dc:	6319      	str	r1, [r3, #48]	; 0x30
 80014de:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014e0:	f001 0180 	and.w	r1, r1, #128	; 0x80
 80014e4:	9102      	str	r1, [sp, #8]
 80014e6:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80014e8:	9403      	str	r4, [sp, #12]
 80014ea:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014ec:	f041 0104 	orr.w	r1, r1, #4
 80014f0:	6319      	str	r1, [r3, #48]	; 0x30
 80014f2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014f4:	f001 0104 	and.w	r1, r1, #4
 80014f8:	9103      	str	r1, [sp, #12]
 80014fa:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80014fc:	9404      	str	r4, [sp, #16]
 80014fe:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001500:	f041 0101 	orr.w	r1, r1, #1
 8001504:	6319      	str	r1, [r3, #48]	; 0x30
 8001506:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001508:	f001 0101 	and.w	r1, r1, #1
 800150c:	9104      	str	r1, [sp, #16]
 800150e:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001510:	9405      	str	r4, [sp, #20]
 8001512:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001514:	f041 0102 	orr.w	r1, r1, #2
 8001518:	6319      	str	r1, [r3, #48]	; 0x30
 800151a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800151c:	f001 0102 	and.w	r1, r1, #2
 8001520:	9105      	str	r1, [sp, #20]
 8001522:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001524:	9406      	str	r4, [sp, #24]
 8001526:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001528:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800152c:	6319      	str	r1, [r3, #48]	; 0x30
 800152e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001530:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8001534:	9106      	str	r1, [sp, #24]
 8001536:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001538:	9407      	str	r4, [sp, #28]
 800153a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800153c:	f041 0108 	orr.w	r1, r1, #8
 8001540:	6319      	str	r1, [r3, #48]	; 0x30
 8001542:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001544:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001548:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800154a:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800154c:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800154e:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001550:	f007 ff6c 	bl	800942c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8001554:	4896      	ldr	r0, [pc, #600]	; (80017b0 <main+0x324>)
 8001556:	2120      	movs	r1, #32
 8001558:	2201      	movs	r2, #1
 800155a:	f007 ff67 	bl	800942c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800155e:	4896      	ldr	r0, [pc, #600]	; (80017b8 <main+0x32c>)
 8001560:	4622      	mov	r2, r4
 8001562:	2104      	movs	r1, #4
 8001564:	f007 ff62 	bl	800942c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001568:	4894      	ldr	r0, [pc, #592]	; (80017bc <main+0x330>)
 800156a:	4622      	mov	r2, r4
 800156c:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8001570:	f007 ff5c 	bl	800942c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8001574:	2201      	movs	r2, #1
 8001576:	4892      	ldr	r0, [pc, #584]	; (80017c0 <main+0x334>)
 8001578:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800157c:	f007 ff56 	bl	800942c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001580:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001582:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8001586:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001588:	4889      	ldr	r0, [pc, #548]	; (80017b0 <main+0x324>)
 800158a:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 800158c:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001590:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001594:	e9cd 4911 	strd	r4, r9, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001598:	f007 fe04 	bl	80091a4 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800159c:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80015a0:	4883      	ldr	r0, [pc, #524]	; (80017b0 <main+0x324>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 80015a2:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80015a6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80015a8:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015aa:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80015ac:	f007 fdfa 	bl	80091a4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80015b0:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80015b2:	487f      	ldr	r0, [pc, #508]	; (80017b0 <main+0x324>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80015b4:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80015b6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015b8:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80015ba:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015be:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015c2:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80015c4:	f007 fdee 	bl	80091a4 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015c8:	487b      	ldr	r0, [pc, #492]	; (80017b8 <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80015ca:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015ce:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015d0:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015d4:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015d6:	f007 fde5 	bl	80091a4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015da:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015de:	4877      	ldr	r0, [pc, #476]	; (80017bc <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015e0:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015e2:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015e4:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015e8:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015ea:	f007 fddb 	bl	80091a4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80015ee:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015f2:	4874      	ldr	r0, [pc, #464]	; (80017c4 <main+0x338>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80015f4:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015f6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 80015f8:	230f      	movs	r3, #15
 80015fa:	9313      	str	r3, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 80015fc:	f44f 5b00 	mov.w	fp, #8192	; 0x2000
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001600:	e9cd 7410 	strd	r7, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001604:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001606:	f007 fdcd 	bl	80091a4 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 800160a:	486d      	ldr	r0, [pc, #436]	; (80017c0 <main+0x334>)
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 800160c:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 8001610:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001612:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001616:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 8001618:	f007 fdc4 	bl	80091a4 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 800161c:	4622      	mov	r2, r4
 800161e:	2105      	movs	r1, #5
 8001620:	2009      	movs	r0, #9
 8001622:	f007 fc2d 	bl	8008e80 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8001626:	2009      	movs	r0, #9
 8001628:	f007 fc68 	bl	8008efc <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 800162c:	4866      	ldr	r0, [pc, #408]	; (80017c8 <main+0x33c>)
 800162e:	4b67      	ldr	r3, [pc, #412]	; (80017cc <main+0x340>)
 8001630:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001632:	f007 fc71 	bl	8008f18 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001636:	4966      	ldr	r1, [pc, #408]	; (80017d0 <main+0x344>)
 8001638:	4b66      	ldr	r3, [pc, #408]	; (80017d4 <main+0x348>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800163a:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 800163c:	e9c5 1300 	strd	r1, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001640:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001644:	612b      	str	r3, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001646:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 800164a:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800164e:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001652:	f008 f951 	bl	80098f8 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001656:	2110      	movs	r1, #16
 8001658:	4628      	mov	r0, r5
 800165a:	f009 fb19 	bl	800ac90 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 800165e:	4621      	mov	r1, r4
 8001660:	4628      	mov	r0, r5
 8001662:	f009 fb35 	bl	800acd0 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001666:	f8df c184 	ldr.w	ip, [pc, #388]	; 80017ec <main+0x360>
  hspi5.Instance = SPI5;
 800166a:	485b      	ldr	r0, [pc, #364]	; (80017d8 <main+0x34c>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800166c:	4d5b      	ldr	r5, [pc, #364]	; (80017dc <main+0x350>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800166e:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001670:	f44f 7382 	mov.w	r3, #260	; 0x104
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001674:	f44f 7e00 	mov.w	lr, #512	; 0x200
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001678:	e9c0 c300 	strd	ip, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800167c:	2318      	movs	r3, #24
 800167e:	e9c0 e306 	strd	lr, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001682:	230a      	movs	r3, #10
 8001684:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001686:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800168a:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 800168e:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001692:	f00a fa0f 	bl	800bab4 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001696:	2307      	movs	r3, #7
 8001698:	9310      	str	r3, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 800169a:	9312      	str	r3, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800169c:	4b50      	ldr	r3, [pc, #320]	; (80017e0 <main+0x354>)
 800169e:	602b      	str	r3, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80016a0:	2040      	movs	r0, #64	; 0x40
 80016a2:	f44f 73c0 	mov.w	r3, #384	; 0x180
 80016a6:	e9c5 0305 	strd	r0, r3, [r5, #20]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80016aa:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80016ae:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80016b2:	f04f 0b10 	mov.w	fp, #16
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016b6:	a90f      	add	r1, sp, #60	; 0x3c
 80016b8:	4628      	mov	r0, r5
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80016ba:	622b      	str	r3, [r5, #32]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80016bc:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80016c0:	f8c5 a00c 	str.w	sl, [r5, #12]
  SdramTiming.RPDelay = 2;
 80016c4:	e9cd 9713 	strd	r9, r7, [sp, #76]	; 0x4c
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80016c8:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80016ca:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 80016cc:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80016d0:	f8c5 b010 	str.w	fp, [r5, #16]
  SdramTiming.LoadToActiveDelay = 2;
 80016d4:	970f      	str	r7, [sp, #60]	; 0x3c
  SdramTiming.RCDDelay = 2;
 80016d6:	9715      	str	r7, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016d8:	f00a f8fa 	bl	800b8d0 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016dc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016e0:	a90b      	add	r1, sp, #44	; 0x2c
 80016e2:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016e4:	e9cd 680b 	strd	r6, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 80016e8:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 80016ec:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016ee:	f00a f911 	bl	800b914 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80016f2:	4630      	mov	r0, r6
 80016f4:	f007 fba0 	bl	8008e38 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016f8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016fc:	a90b      	add	r1, sp, #44	; 0x2c
 80016fe:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001700:	e9cd 780b 	strd	r7, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8001704:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001708:	f00a f904 	bl	800b914 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800170c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001710:	a90b      	add	r1, sp, #44	; 0x2c
 8001712:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001714:	e9cd 980b 	strd	r9, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8001718:	e9cd a40d 	strd	sl, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800171c:	f00a f8fa 	bl	800b914 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001720:	f44f 730c 	mov.w	r3, #560	; 0x230
 8001724:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001726:	9b08      	ldr	r3, [sp, #32]
 8001728:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800172a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800172e:	a90b      	add	r1, sp, #44	; 0x2c
 8001730:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001732:	e9cd a80b 	strd	sl, r8, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 8001736:	960d      	str	r6, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001738:	f00a f8ec 	bl	800b914 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 800173c:	4628      	mov	r0, r5
 800173e:	f240 516a 	movw	r1, #1386	; 0x56a
  hltdc.Instance = LTDC;
 8001742:	4d28      	ldr	r5, [pc, #160]	; (80017e4 <main+0x358>)
  htim1.Instance = TIM1;
 8001744:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 80017f0 <main+0x364>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001748:	f00a f902 	bl	800b950 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800174c:	2234      	movs	r2, #52	; 0x34
 800174e:	4621      	mov	r1, r4
 8001750:	a80f      	add	r0, sp, #60	; 0x3c
 8001752:	f027 f93a 	bl	80289ca <memset>
  hltdc.Instance = LTDC;
 8001756:	4b24      	ldr	r3, [pc, #144]	; (80017e8 <main+0x35c>)
 8001758:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 9;
 800175a:	2309      	movs	r3, #9
 800175c:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 800175e:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedVBP = 3;
 8001760:	f8c5 9020 	str.w	r9, [r5, #32]
  hltdc.Init.AccumulatedHBP = 29;
 8001764:	61eb      	str	r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001766:	f240 190d 	movw	r9, #269	; 0x10d
 800176a:	f240 1343 	movw	r3, #323	; 0x143
 800176e:	e9c5 9309 	strd	r9, r3, [r5, #36]	; 0x24
  hltdc.Init.Backcolor.Blue = 0;
 8001772:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.TotalHeigh = 327;
 8001774:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001778:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 800177a:	f240 1a17 	movw	sl, #279	; 0x117
 800177e:	e9c5 a30b 	strd	sl, r3, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8001782:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001784:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001788:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.Backcolor.Red = 0;
 800178c:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001790:	f009 fac2 	bl	800ad18 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 8001794:	23f0      	movs	r3, #240	; 0xf0
 8001796:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 8001798:	9319      	str	r3, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 800179a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800179e:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 80017a0:	931a      	str	r3, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 80017a2:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80017a4:	f44f 6c80 	mov.w	ip, #1024	; 0x400
 80017a8:	e024      	b.n	80017f4 <main+0x368>
 80017aa:	bf00      	nop
 80017ac:	40023800 	.word	0x40023800
 80017b0:	40021000 	.word	0x40021000
 80017b4:	20002684 	.word	0x20002684
 80017b8:	40020800 	.word	0x40020800
 80017bc:	40020c00 	.word	0x40020c00
 80017c0:	40021800 	.word	0x40021800
 80017c4:	40020000 	.word	0x40020000
 80017c8:	2000263c 	.word	0x2000263c
 80017cc:	40023000 	.word	0x40023000
 80017d0:	40005c00 	.word	0x40005c00
 80017d4:	000186a0 	.word	0x000186a0
 80017d8:	200027b4 	.word	0x200027b4
 80017dc:	20002780 	.word	0x20002780
 80017e0:	a0000140 	.word	0xa0000140
 80017e4:	200026d8 	.word	0x200026d8
 80017e8:	40016800 	.word	0x40016800
 80017ec:	40015000 	.word	0x40015000
 80017f0:	2000280c 	.word	0x2000280c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80017f4:	4622      	mov	r2, r4
 80017f6:	a90f      	add	r1, sp, #60	; 0x3c
 80017f8:	4628      	mov	r0, r5
  pLayerCfg.Alpha = 255;
 80017fa:	9314      	str	r3, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80017fc:	2305      	movs	r3, #5
 80017fe:	e9cd c316 	strd	ip, r3, [sp, #88]	; 0x58
  LcdDrv = &ili9341_drv;
 8001802:	4d4b      	ldr	r5, [pc, #300]	; (8001930 <main+0x4a4>)
  pLayerCfg.WindowX0 = 0;
 8001804:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.WindowY0 = 0;
 8001806:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001808:	9713      	str	r7, [sp, #76]	; 0x4c
  pLayerCfg.Alpha0 = 0;
 800180a:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 800180c:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 800180e:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8001812:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001816:	f009 fb55 	bl	800aec4 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 800181a:	4b46      	ldr	r3, [pc, #280]	; (8001934 <main+0x4a8>)
 800181c:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 800181e:	681b      	ldr	r3, [r3, #0]
 8001820:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001822:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8001824:	4d44      	ldr	r5, [pc, #272]	; (8001938 <main+0x4ac>)
  LcdDrv->DisplayOff();
 8001826:	68db      	ldr	r3, [r3, #12]
 8001828:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 800182a:	4b44      	ldr	r3, [pc, #272]	; (800193c <main+0x4b0>)
 800182c:	602b      	str	r3, [r5, #0]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 800182e:	e9c5 470a 	strd	r4, r7, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001832:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001836:	4628      	mov	r0, r5
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
 8001838:	e9c5 4701 	strd	r4, r7, [r5, #4]
  hdma2d.Init.OutputOffset = 0;
 800183c:	60ec      	str	r4, [r5, #12]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800183e:	f007 fb95 	bl	8008f6c <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001842:	4631      	mov	r1, r6
 8001844:	4628      	mov	r0, r5
 8001846:	f007 fc57 	bl	80090f8 <HAL_DMA2D_ConfigLayer>
  htim1.Init.Period = 65535;
 800184a:	f64f 76ff 	movw	r6, #65535	; 0xffff
  htim1.Instance = TIM1;
 800184e:	4b3c      	ldr	r3, [pc, #240]	; (8001940 <main+0x4b4>)
  htim3.Instance = TIM3;
 8001850:	4d3c      	ldr	r5, [pc, #240]	; (8001944 <main+0x4b8>)
  htim1.Instance = TIM1;
 8001852:	f8c8 3000 	str.w	r3, [r8]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8001856:	4640      	mov	r0, r8
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001858:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 800185c:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001860:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001864:	e9c8 4401 	strd	r4, r4, [r8, #4]
  htim1.Init.RepetitionCounter = 0;
 8001868:	e9c8 4404 	strd	r4, r4, [r8, #16]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 800186c:	9413      	str	r4, [sp, #76]	; 0x4c
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800186e:	f8c8 4018 	str.w	r4, [r8, #24]
  htim1.Init.Period = 65535;
 8001872:	f8c8 600c 	str.w	r6, [r8, #12]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8001876:	f00a fd0d 	bl	800c294 <HAL_TIM_Base_Init>
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 800187a:	a90f      	add	r1, sp, #60	; 0x3c
 800187c:	4640      	mov	r0, r8
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 800187e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8001882:	f00a fe81 	bl	800c588 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001886:	a90b      	add	r1, sp, #44	; 0x2c
 8001888:	4640      	mov	r0, r8
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800188a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800188e:	f00a ffb9 	bl	800c804 <HAL_TIMEx_MasterConfigSynchronization>
  htim3.Instance = TIM3;
 8001892:	4b2d      	ldr	r3, [pc, #180]	; (8001948 <main+0x4bc>)
 8001894:	602b      	str	r3, [r5, #0]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001896:	4628      	mov	r0, r5
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001898:	e9c5 4401 	strd	r4, r4, [r5, #4]
  htim3.Init.Period = 65535;
 800189c:	60ee      	str	r6, [r5, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800189e:	612c      	str	r4, [r5, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80018a0:	61ac      	str	r4, [r5, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80018a2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80018a6:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 80018aa:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 80018ae:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 80018b2:	9413      	str	r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80018b4:	9409      	str	r4, [sp, #36]	; 0x24
 80018b6:	940a      	str	r4, [sp, #40]	; 0x28
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80018b8:	f00a fcec 	bl	800c294 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80018bc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80018c0:	a90b      	add	r1, sp, #44	; 0x2c
 80018c2:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80018c4:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80018c6:	f00a fdaf 	bl	800c428 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80018ca:	a90f      	add	r1, sp, #60	; 0x3c
 80018cc:	4628      	mov	r0, r5
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 80018ce:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80018d2:	f00a fe59 	bl	800c588 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80018d6:	a909      	add	r1, sp, #36	; 0x24
 80018d8:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80018da:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80018de:	f00a ff91 	bl	800c804 <HAL_TIMEx_MasterConfigSynchronization>
  MX_TouchGFX_Init();
 80018e2:	f7fe fe7f 	bl	80005e4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 80018e6:	f7fe fe7b 	bl	80005e0 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 80018ea:	f00b f89d 	bl	800ca28 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 80018ee:	4a17      	ldr	r2, [pc, #92]	; (800194c <main+0x4c0>)
 80018f0:	4639      	mov	r1, r7
 80018f2:	4658      	mov	r0, fp
 80018f4:	f00b f9d2 	bl	800cc9c <osMessageQueueNew>
 80018f8:	4b15      	ldr	r3, [pc, #84]	; (8001950 <main+0x4c4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018fa:	4a16      	ldr	r2, [pc, #88]	; (8001954 <main+0x4c8>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 80018fc:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018fe:	4621      	mov	r1, r4
 8001900:	4815      	ldr	r0, [pc, #84]	; (8001958 <main+0x4cc>)
 8001902:	f00b f8bd 	bl	800ca80 <osThreadNew>
 8001906:	4b15      	ldr	r3, [pc, #84]	; (800195c <main+0x4d0>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001908:	4a15      	ldr	r2, [pc, #84]	; (8001960 <main+0x4d4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800190a:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800190c:	4621      	mov	r1, r4
 800190e:	4815      	ldr	r0, [pc, #84]	; (8001964 <main+0x4d8>)
 8001910:	f00b f8b6 	bl	800ca80 <osThreadNew>
 8001914:	4b14      	ldr	r3, [pc, #80]	; (8001968 <main+0x4dc>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001916:	4a15      	ldr	r2, [pc, #84]	; (800196c <main+0x4e0>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001918:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800191a:	4621      	mov	r1, r4
 800191c:	4814      	ldr	r0, [pc, #80]	; (8001970 <main+0x4e4>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800191e:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001920:	f00b f8ae 	bl	800ca80 <osThreadNew>
 8001924:	4b13      	ldr	r3, [pc, #76]	; (8001974 <main+0x4e8>)
 8001926:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001928:	f00b f890 	bl	800ca4c <osKernelStart>
  while (1)
 800192c:	e7fe      	b.n	800192c <main+0x4a0>
 800192e:	bf00      	nop
 8001930:	2000262c 	.word	0x2000262c
 8001934:	20000018 	.word	0x20000018
 8001938:	20002644 	.word	0x20002644
 800193c:	4002b000 	.word	0x4002b000
 8001940:	40010000 	.word	0x40010000
 8001944:	20002854 	.word	0x20002854
 8001948:	40000400 	.word	0x40000400
 800194c:	08029ea4 	.word	0x08029ea4
 8001950:	20002630 	.word	0x20002630
 8001954:	08029ee0 	.word	0x08029ee0
 8001958:	08001389 	.word	0x08001389
 800195c:	20002638 	.word	0x20002638
 8001960:	08029e80 	.word	0x08029e80
 8001964:	080005f5 	.word	0x080005f5
 8001968:	20002628 	.word	0x20002628
 800196c:	08029ebc 	.word	0x08029ebc
 8001970:	08001395 	.word	0x08001395
 8001974:	20002634 	.word	0x20002634

08001978 <IOE_Init>:
 8001978:	4770      	bx	lr
 800197a:	bf00      	nop

0800197c <IOE_ITConfig>:
 800197c:	4770      	bx	lr
 800197e:	bf00      	nop

08001980 <IOE_Write>:
{
 8001980:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001982:	4c09      	ldr	r4, [pc, #36]	; (80019a8 <IOE_Write+0x28>)
{
 8001984:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001986:	6824      	ldr	r4, [r4, #0]
 8001988:	9402      	str	r4, [sp, #8]
{
 800198a:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 800198c:	2301      	movs	r3, #1
 800198e:	f88d 4017 	strb.w	r4, [sp, #23]
 8001992:	f10d 0417 	add.w	r4, sp, #23
 8001996:	460a      	mov	r2, r1
 8001998:	9301      	str	r3, [sp, #4]
 800199a:	4601      	mov	r1, r0
 800199c:	9400      	str	r4, [sp, #0]
 800199e:	4803      	ldr	r0, [pc, #12]	; (80019ac <IOE_Write+0x2c>)
 80019a0:	f008 f872 	bl	8009a88 <HAL_I2C_Mem_Write>
}
 80019a4:	b006      	add	sp, #24
 80019a6:	bd10      	pop	{r4, pc}
 80019a8:	2000000c 	.word	0x2000000c
 80019ac:	20002684 	.word	0x20002684

080019b0 <IOE_Read>:
{
 80019b0:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019b2:	4b0b      	ldr	r3, [pc, #44]	; (80019e0 <IOE_Read+0x30>)
{
 80019b4:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019b6:	681b      	ldr	r3, [r3, #0]
 80019b8:	9302      	str	r3, [sp, #8]
{
 80019ba:	4684      	mov	ip, r0
 80019bc:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019be:	2301      	movs	r3, #1
 80019c0:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 80019c4:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019c6:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 80019ca:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019ce:	4661      	mov	r1, ip
 80019d0:	4804      	ldr	r0, [pc, #16]	; (80019e4 <IOE_Read+0x34>)
 80019d2:	f008 f94b 	bl	8009c6c <HAL_I2C_Mem_Read>
}
 80019d6:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80019da:	b007      	add	sp, #28
 80019dc:	f85d fb04 	ldr.w	pc, [sp], #4
 80019e0:	2000000c 	.word	0x2000000c
 80019e4:	20002684 	.word	0x20002684

080019e8 <IOE_ReadMultiple>:
{
 80019e8:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80019ea:	4c09      	ldr	r4, [pc, #36]	; (8001a10 <IOE_ReadMultiple+0x28>)
{
 80019ec:	b084      	sub	sp, #16
 80019ee:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80019f0:	6820      	ldr	r0, [r4, #0]
 80019f2:	9002      	str	r0, [sp, #8]
 80019f4:	e9cd 2300 	strd	r2, r3, [sp]
 80019f8:	4806      	ldr	r0, [pc, #24]	; (8001a14 <IOE_ReadMultiple+0x2c>)
 80019fa:	460a      	mov	r2, r1
 80019fc:	2301      	movs	r3, #1
 80019fe:	4661      	mov	r1, ip
 8001a00:	f008 f934 	bl	8009c6c <HAL_I2C_Mem_Read>
}
 8001a04:	3800      	subs	r0, #0
 8001a06:	bf18      	it	ne
 8001a08:	2001      	movne	r0, #1
 8001a0a:	b004      	add	sp, #16
 8001a0c:	bd10      	pop	{r4, pc}
 8001a0e:	bf00      	nop
 8001a10:	2000000c 	.word	0x2000000c
 8001a14:	20002684 	.word	0x20002684

08001a18 <IOE_Delay>:
 8001a18:	f007 ba0e 	b.w	8008e38 <HAL_Delay>

08001a1c <LCD_IO_Init>:
{
 8001a1c:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a1e:	4806      	ldr	r0, [pc, #24]	; (8001a38 <LCD_IO_Init+0x1c>)
 8001a20:	2200      	movs	r2, #0
 8001a22:	2104      	movs	r1, #4
 8001a24:	f007 fd02 	bl	800942c <HAL_GPIO_WritePin>
}
 8001a28:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a2c:	4802      	ldr	r0, [pc, #8]	; (8001a38 <LCD_IO_Init+0x1c>)
 8001a2e:	2201      	movs	r2, #1
 8001a30:	2104      	movs	r1, #4
 8001a32:	f007 bcfb 	b.w	800942c <HAL_GPIO_WritePin>
 8001a36:	bf00      	nop
 8001a38:	40020800 	.word	0x40020800

08001a3c <LCD_IO_WriteData>:
{
 8001a3c:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a3e:	4d10      	ldr	r5, [pc, #64]	; (8001a80 <LCD_IO_WriteData+0x44>)
{
 8001a40:	b083      	sub	sp, #12
 8001a42:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a44:	2201      	movs	r2, #1
 8001a46:	480f      	ldr	r0, [pc, #60]	; (8001a84 <LCD_IO_WriteData+0x48>)
 8001a48:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a4c:	f007 fcee 	bl	800942c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a50:	4628      	mov	r0, r5
 8001a52:	2200      	movs	r2, #0
 8001a54:	2104      	movs	r1, #4
 8001a56:	f007 fce9 	bl	800942c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a5a:	4b0b      	ldr	r3, [pc, #44]	; (8001a88 <LCD_IO_WriteData+0x4c>)
 8001a5c:	480b      	ldr	r0, [pc, #44]	; (8001a8c <LCD_IO_WriteData+0x50>)
 8001a5e:	681b      	ldr	r3, [r3, #0]
 8001a60:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001a64:	f10d 0106 	add.w	r1, sp, #6
 8001a68:	2201      	movs	r2, #1
 8001a6a:	f00a f885 	bl	800bb78 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a6e:	2201      	movs	r2, #1
 8001a70:	2104      	movs	r1, #4
 8001a72:	4628      	mov	r0, r5
}
 8001a74:	b003      	add	sp, #12
 8001a76:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a7a:	f007 bcd7 	b.w	800942c <HAL_GPIO_WritePin>
 8001a7e:	bf00      	nop
 8001a80:	40020800 	.word	0x40020800
 8001a84:	40020c00 	.word	0x40020c00
 8001a88:	20000010 	.word	0x20000010
 8001a8c:	200027b4 	.word	0x200027b4

08001a90 <LCD_IO_WriteReg>:
{
 8001a90:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a92:	4d10      	ldr	r5, [pc, #64]	; (8001ad4 <LCD_IO_WriteReg+0x44>)
{
 8001a94:	b083      	sub	sp, #12
 8001a96:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a98:	2200      	movs	r2, #0
 8001a9a:	480f      	ldr	r0, [pc, #60]	; (8001ad8 <LCD_IO_WriteReg+0x48>)
 8001a9c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001aa0:	f007 fcc4 	bl	800942c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001aa4:	4628      	mov	r0, r5
 8001aa6:	2200      	movs	r2, #0
 8001aa8:	2104      	movs	r1, #4
 8001aaa:	f007 fcbf 	bl	800942c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001aae:	4b0b      	ldr	r3, [pc, #44]	; (8001adc <LCD_IO_WriteReg+0x4c>)
 8001ab0:	480b      	ldr	r0, [pc, #44]	; (8001ae0 <LCD_IO_WriteReg+0x50>)
 8001ab2:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001ab4:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001ab8:	f10d 0106 	add.w	r1, sp, #6
 8001abc:	2201      	movs	r2, #1
 8001abe:	f00a f85b 	bl	800bb78 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ac2:	2201      	movs	r2, #1
 8001ac4:	2104      	movs	r1, #4
 8001ac6:	4628      	mov	r0, r5
}
 8001ac8:	b003      	add	sp, #12
 8001aca:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ace:	f007 bcad 	b.w	800942c <HAL_GPIO_WritePin>
 8001ad2:	bf00      	nop
 8001ad4:	40020800 	.word	0x40020800
 8001ad8:	40020c00 	.word	0x40020c00
 8001adc:	20000010 	.word	0x20000010
 8001ae0:	200027b4 	.word	0x200027b4

08001ae4 <LCD_IO_ReadData>:
{
 8001ae4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001ae8:	4e19      	ldr	r6, [pc, #100]	; (8001b50 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001aea:	4f1a      	ldr	r7, [pc, #104]	; (8001b54 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001aec:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001b58 <LCD_IO_ReadData+0x74>
 8001af0:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001b5c <LCD_IO_ReadData+0x78>
{
 8001af4:	b083      	sub	sp, #12
 8001af6:	460c      	mov	r4, r1
 8001af8:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001afa:	2200      	movs	r2, #0
 8001afc:	4630      	mov	r0, r6
 8001afe:	2104      	movs	r1, #4
 8001b00:	f007 fc94 	bl	800942c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001b04:	4638      	mov	r0, r7
 8001b06:	2200      	movs	r2, #0
 8001b08:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001b0c:	f007 fc8e 	bl	800942c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001b10:	f8d9 3000 	ldr.w	r3, [r9]
 8001b14:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001b18:	a901      	add	r1, sp, #4
 8001b1a:	2201      	movs	r2, #1
 8001b1c:	4640      	mov	r0, r8
 8001b1e:	f00a f82b 	bl	800bb78 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001b22:	f8d9 3000 	ldr.w	r3, [r9]
 8001b26:	4622      	mov	r2, r4
 8001b28:	a901      	add	r1, sp, #4
 8001b2a:	4640      	mov	r0, r8
 8001b2c:	f00a facc 	bl	800c0c8 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b30:	4638      	mov	r0, r7
 8001b32:	2201      	movs	r2, #1
 8001b34:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001b38:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b3a:	f007 fc77 	bl	800942c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001b3e:	4630      	mov	r0, r6
 8001b40:	2201      	movs	r2, #1
 8001b42:	2104      	movs	r1, #4
 8001b44:	f007 fc72 	bl	800942c <HAL_GPIO_WritePin>
}
 8001b48:	4620      	mov	r0, r4
 8001b4a:	b003      	add	sp, #12
 8001b4c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001b50:	40020800 	.word	0x40020800
 8001b54:	40020c00 	.word	0x40020c00
 8001b58:	20000010 	.word	0x20000010
 8001b5c:	200027b4 	.word	0x200027b4

08001b60 <LCD_Delay>:
  HAL_Delay(Delay);
 8001b60:	f007 b96a 	b.w	8008e38 <HAL_Delay>

08001b64 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001b64:	4b03      	ldr	r3, [pc, #12]	; (8001b74 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001b66:	6802      	ldr	r2, [r0, #0]
 8001b68:	429a      	cmp	r2, r3
 8001b6a:	d000      	beq.n	8001b6e <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001b6c:	4770      	bx	lr
    HAL_IncTick();
 8001b6e:	f007 b951 	b.w	8008e14 <HAL_IncTick>
 8001b72:	bf00      	nop
 8001b74:	40001000 	.word	0x40001000

08001b78 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001b78:	4770      	bx	lr
 8001b7a:	bf00      	nop

08001b7c <DMA2_Stream1_IRQHandler>:
 *
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void) {
    if (DMA2->LISR & DMA_LISR_TCIF1) {  // Stream1 transfer compl. interrupt f.
 8001b7c:	4b1e      	ldr	r3, [pc, #120]	; (8001bf8 <DMA2_Stream1_IRQHandler+0x7c>)
 8001b7e:	681a      	ldr	r2, [r3, #0]
 8001b80:	0511      	lsls	r1, r2, #20
 8001b82:	d400      	bmi.n	8001b86 <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
        // copy data from DMA buffer to ADC_samples
        MEAS_ADC_reset();
        MEAS_data_ready = true;
    }
}
 8001b84:	4770      	bx	lr
 8001b86:	4a1d      	ldr	r2, [pc, #116]	; (8001bfc <DMA2_Stream1_IRQHandler+0x80>)
 8001b88:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8001b8c:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8001b90:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001b94:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001b98:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8001b9c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001b9e:	f022 0201 	bic.w	r2, r2, #1
 8001ba2:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN) {
 8001ba4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001ba6:	07d2      	lsls	r2, r2, #31
 8001ba8:	d4fc      	bmi.n	8001ba4 <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |=
 8001baa:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001bac:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |=
 8001bb0:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8001bb4:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001bb6:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001bb8:	4911      	ldr	r1, [pc, #68]	; (8001c00 <DMA2_Stream1_IRQHandler+0x84>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001bba:	f023 0301 	bic.w	r3, r3, #1
 8001bbe:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001bc0:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001bc2:	4b10      	ldr	r3, [pc, #64]	; (8001c04 <DMA2_Stream1_IRQHandler+0x88>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001bc4:	f020 0001 	bic.w	r0, r0, #1
 8001bc8:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 8001bca:	6888      	ldr	r0, [r1, #8]
 8001bcc:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 8001bd0:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001bd2:	6a59      	ldr	r1, [r3, #36]	; 0x24
        MEAS_data_ready = true;
 8001bd4:	480c      	ldr	r0, [pc, #48]	; (8001c08 <DMA2_Stream1_IRQHandler+0x8c>)
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001bd6:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8001bda:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 8001bdc:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001bde:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 8001be2:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8001be4:	6813      	ldr	r3, [r2, #0]
        MEAS_data_ready = true;
 8001be6:	f04f 0c01 	mov.w	ip, #1
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8001bea:	f023 0301 	bic.w	r3, r3, #1
 8001bee:	6013      	str	r3, [r2, #0]
        MEAS_data_ready = true;
 8001bf0:	f880 c000 	strb.w	ip, [r0]
}
 8001bf4:	4770      	bx	lr
 8001bf6:	bf00      	nop
 8001bf8:	40026400 	.word	0x40026400
 8001bfc:	e000e100 	.word	0xe000e100
 8001c00:	40012200 	.word	0x40012200
 8001c04:	40023800 	.word	0x40023800
 8001c08:	2000289c 	.word	0x2000289c

08001c0c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001c0c:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001c0e:	4b0e      	ldr	r3, [pc, #56]	; (8001c48 <HAL_MspInit+0x3c>)
 8001c10:	2200      	movs	r2, #0
 8001c12:	9200      	str	r2, [sp, #0]
 8001c14:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001c16:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001c1a:	6459      	str	r1, [r3, #68]	; 0x44
 8001c1c:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001c1e:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8001c22:	9000      	str	r0, [sp, #0]
 8001c24:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001c26:	9201      	str	r2, [sp, #4]
 8001c28:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8001c2a:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001c2e:	6418      	str	r0, [r3, #64]	; 0x40
 8001c30:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c32:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001c36:	9301      	str	r3, [sp, #4]
 8001c38:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001c3a:	210f      	movs	r1, #15
 8001c3c:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001c40:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001c42:	f007 b91d 	b.w	8008e80 <HAL_NVIC_SetPriority>
 8001c46:	bf00      	nop
 8001c48:	40023800 	.word	0x40023800

08001c4c <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001c4c:	4b0b      	ldr	r3, [pc, #44]	; (8001c7c <HAL_CRC_MspInit+0x30>)
 8001c4e:	6802      	ldr	r2, [r0, #0]
 8001c50:	429a      	cmp	r2, r3
 8001c52:	d000      	beq.n	8001c56 <HAL_CRC_MspInit+0xa>
 8001c54:	4770      	bx	lr
{
 8001c56:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001c58:	2200      	movs	r2, #0
 8001c5a:	9201      	str	r2, [sp, #4]
 8001c5c:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001c60:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001c64:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8001c68:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8001c6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c6e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001c72:	9301      	str	r3, [sp, #4]
 8001c74:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001c76:	b002      	add	sp, #8
 8001c78:	4770      	bx	lr
 8001c7a:	bf00      	nop
 8001c7c:	40023000 	.word	0x40023000

08001c80 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8001c80:	4b0e      	ldr	r3, [pc, #56]	; (8001cbc <HAL_DMA2D_MspInit+0x3c>)
 8001c82:	6802      	ldr	r2, [r0, #0]
 8001c84:	429a      	cmp	r2, r3
 8001c86:	d000      	beq.n	8001c8a <HAL_DMA2D_MspInit+0xa>
 8001c88:	4770      	bx	lr
{
 8001c8a:	b500      	push	{lr}
 8001c8c:	b083      	sub	sp, #12
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001c8e:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001c92:	2200      	movs	r2, #0
 8001c94:	9201      	str	r2, [sp, #4]
 8001c96:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001c98:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001c9c:	6319      	str	r1, [r3, #48]	; 0x30
 8001c9e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ca0:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001ca4:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001ca6:	205a      	movs	r0, #90	; 0x5a
 8001ca8:	2105      	movs	r1, #5
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001caa:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001cac:	f007 f8e8 	bl	8008e80 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001cb0:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001cb2:	b003      	add	sp, #12
 8001cb4:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001cb8:	f007 b920 	b.w	8008efc <HAL_NVIC_EnableIRQ>
 8001cbc:	4002b000 	.word	0x4002b000

08001cc0 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001cc0:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8001cc4:	4b2e      	ldr	r3, [pc, #184]	; (8001d80 <HAL_I2C_MspInit+0xc0>)
 8001cc6:	6802      	ldr	r2, [r0, #0]
{
 8001cc8:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cca:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8001ccc:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cce:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001cd2:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8001cd6:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8001cd8:	d002      	beq.n	8001ce0 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001cda:	b00a      	add	sp, #40	; 0x28
 8001cdc:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001ce0:	4d28      	ldr	r5, [pc, #160]	; (8001d84 <HAL_I2C_MspInit+0xc4>)
 8001ce2:	9401      	str	r4, [sp, #4]
 8001ce4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ce6:	4828      	ldr	r0, [pc, #160]	; (8001d88 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001ce8:	f043 0304 	orr.w	r3, r3, #4
 8001cec:	632b      	str	r3, [r5, #48]	; 0x30
 8001cee:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001cf0:	f003 0304 	and.w	r3, r3, #4
 8001cf4:	9301      	str	r3, [sp, #4]
 8001cf6:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001cf8:	9402      	str	r4, [sp, #8]
 8001cfa:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001cfc:	f043 0301 	orr.w	r3, r3, #1
 8001d00:	632b      	str	r3, [r5, #48]	; 0x30
 8001d02:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001d04:	f003 0301 	and.w	r3, r3, #1
 8001d08:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001d0a:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001d0e:	f04f 0801 	mov.w	r8, #1
 8001d12:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001d16:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d18:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001d1a:	2312      	movs	r3, #18
 8001d1c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001d20:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d24:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001d26:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d28:	f007 fa3c 	bl	80091a4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d2c:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001d2e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001d32:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d34:	4815      	ldr	r0, [pc, #84]	; (8001d8c <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001d36:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001d38:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001d3c:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d40:	f007 fa30 	bl	80091a4 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001d44:	9403      	str	r4, [sp, #12]
 8001d46:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001d48:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001d4c:	642b      	str	r3, [r5, #64]	; 0x40
 8001d4e:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001d50:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001d54:	4622      	mov	r2, r4
 8001d56:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001d58:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001d5a:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001d5c:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001d5e:	f007 f88f 	bl	8008e80 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8001d62:	2048      	movs	r0, #72	; 0x48
 8001d64:	f007 f8ca 	bl	8008efc <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001d68:	6a2b      	ldr	r3, [r5, #32]
 8001d6a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001d6e:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001d70:	6a2b      	ldr	r3, [r5, #32]
 8001d72:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001d76:	622b      	str	r3, [r5, #32]
}
 8001d78:	b00a      	add	sp, #40	; 0x28
 8001d7a:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8001d7e:	bf00      	nop
 8001d80:	40005c00 	.word	0x40005c00
 8001d84:	40023800 	.word	0x40023800
 8001d88:	40020800 	.word	0x40020800
 8001d8c:	40020000 	.word	0x40020000

08001d90 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001d90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001d94:	4604      	mov	r4, r0
 8001d96:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d98:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001d9a:	2230      	movs	r2, #48	; 0x30
 8001d9c:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d9e:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8001da2:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8001da6:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001da8:	f026 fe0f 	bl	80289ca <memset>
  if(hltdc->Instance==LTDC)
 8001dac:	4b67      	ldr	r3, [pc, #412]	; (8001f4c <HAL_LTDC_MspInit+0x1bc>)
 8001dae:	6822      	ldr	r2, [r4, #0]
 8001db0:	429a      	cmp	r2, r3
 8001db2:	d002      	beq.n	8001dba <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001db4:	b01a      	add	sp, #104	; 0x68
 8001db6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001dba:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001dbc:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001dbe:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001dc0:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001dc2:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001dc4:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001dc8:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001dca:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001dcc:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001dce:	f009 fc53 	bl	800b678 <HAL_RCCEx_PeriphCLKConfig>
 8001dd2:	2800      	cmp	r0, #0
 8001dd4:	f040 80b7 	bne.w	8001f46 <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001dd8:	4b5d      	ldr	r3, [pc, #372]	; (8001f50 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dda:	485e      	ldr	r0, [pc, #376]	; (8001f54 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001ddc:	2400      	movs	r4, #0
 8001dde:	9401      	str	r4, [sp, #4]
 8001de0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001de2:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001de6:	645a      	str	r2, [r3, #68]	; 0x44
 8001de8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001dea:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001dee:	9201      	str	r2, [sp, #4]
 8001df0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001df2:	9402      	str	r4, [sp, #8]
 8001df4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001df6:	f042 0220 	orr.w	r2, r2, #32
 8001dfa:	631a      	str	r2, [r3, #48]	; 0x30
 8001dfc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dfe:	f002 0220 	and.w	r2, r2, #32
 8001e02:	9202      	str	r2, [sp, #8]
 8001e04:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e06:	9403      	str	r4, [sp, #12]
 8001e08:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e0a:	f042 0201 	orr.w	r2, r2, #1
 8001e0e:	631a      	str	r2, [r3, #48]	; 0x30
 8001e10:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e12:	f002 0201 	and.w	r2, r2, #1
 8001e16:	9203      	str	r2, [sp, #12]
 8001e18:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001e1a:	9404      	str	r4, [sp, #16]
 8001e1c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e1e:	f042 0202 	orr.w	r2, r2, #2
 8001e22:	631a      	str	r2, [r3, #48]	; 0x30
 8001e24:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e26:	f002 0202 	and.w	r2, r2, #2
 8001e2a:	9204      	str	r2, [sp, #16]
 8001e2c:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001e2e:	9405      	str	r4, [sp, #20]
 8001e30:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e32:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001e36:	631a      	str	r2, [r3, #48]	; 0x30
 8001e38:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e3a:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001e3e:	9205      	str	r2, [sp, #20]
 8001e40:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001e42:	9406      	str	r4, [sp, #24]
 8001e44:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e46:	f042 0204 	orr.w	r2, r2, #4
 8001e4a:	631a      	str	r2, [r3, #48]	; 0x30
 8001e4c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e4e:	f002 0204 	and.w	r2, r2, #4
 8001e52:	9206      	str	r2, [sp, #24]
 8001e54:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001e56:	9407      	str	r4, [sp, #28]
 8001e58:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e5a:	f042 0208 	orr.w	r2, r2, #8
 8001e5e:	631a      	str	r2, [r3, #48]	; 0x30
 8001e60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e62:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001e66:	2600      	movs	r6, #0
 8001e68:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e6a:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001e6c:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e6e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001e70:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001e74:	2302      	movs	r3, #2
 8001e76:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e7a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001e7e:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e80:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e82:	f007 f98f 	bl	80091a4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e86:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001e88:	f641 0258 	movw	r2, #6232	; 0x1858
 8001e8c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e8e:	4832      	ldr	r0, [pc, #200]	; (8001f58 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e90:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001e92:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e96:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001e9a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e9e:	f007 f981 	bl	80091a4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ea2:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001ea4:	2203      	movs	r2, #3
 8001ea6:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ea8:	482c      	ldr	r0, [pc, #176]	; (8001f5c <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001eaa:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001eae:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001eb2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001eb6:	f007 f975 	bl	80091a4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001eba:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001ebc:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8001ec0:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ec2:	4826      	ldr	r0, [pc, #152]	; (8001f5c <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001ec4:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001ec6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001eca:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ece:	f007 f969 	bl	80091a4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ed2:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001ed4:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 8001ed8:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001eda:	4821      	ldr	r0, [pc, #132]	; (8001f60 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001edc:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001ede:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001ee2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ee6:	f007 f95d 	bl	80091a4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001eea:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001eec:	22c0      	movs	r2, #192	; 0xc0
 8001eee:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ef0:	481c      	ldr	r0, [pc, #112]	; (8001f64 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001ef2:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001ef4:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001ef8:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001efc:	f007 f952 	bl	80091a4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f00:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001f02:	2208      	movs	r2, #8
 8001f04:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f06:	4818      	ldr	r0, [pc, #96]	; (8001f68 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f08:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001f0a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001f0e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f12:	f007 f947 	bl	80091a4 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001f16:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f18:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001f1a:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f1e:	4810      	ldr	r0, [pc, #64]	; (8001f60 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001f20:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001f24:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001f28:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f2c:	f007 f93a 	bl	80091a4 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001f30:	4622      	mov	r2, r4
 8001f32:	2105      	movs	r1, #5
 8001f34:	2058      	movs	r0, #88	; 0x58
 8001f36:	f006 ffa3 	bl	8008e80 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001f3a:	2058      	movs	r0, #88	; 0x58
 8001f3c:	f006 ffde 	bl	8008efc <HAL_NVIC_EnableIRQ>
}
 8001f40:	b01a      	add	sp, #104	; 0x68
 8001f42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 8001f46:	f7ff fe17 	bl	8001b78 <Error_Handler>
 8001f4a:	e745      	b.n	8001dd8 <HAL_LTDC_MspInit+0x48>
 8001f4c:	40016800 	.word	0x40016800
 8001f50:	40023800 	.word	0x40023800
 8001f54:	40021400 	.word	0x40021400
 8001f58:	40020000 	.word	0x40020000
 8001f5c:	40020400 	.word	0x40020400
 8001f60:	40021800 	.word	0x40021800
 8001f64:	40020800 	.word	0x40020800
 8001f68:	40020c00 	.word	0x40020c00
 8001f6c:	00000000 	.word	0x00000000

08001f70 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001f70:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 8001f72:	4a1b      	ldr	r2, [pc, #108]	; (8001fe0 <HAL_SPI_MspInit+0x70>)
 8001f74:	6801      	ldr	r1, [r0, #0]
{
 8001f76:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f78:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 8001f7a:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f7c:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001f80:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8001f84:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 8001f86:	d001      	beq.n	8001f8c <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001f88:	b008      	add	sp, #32
 8001f8a:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001f8c:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8001f90:	9300      	str	r3, [sp, #0]
 8001f92:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001f94:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8001f98:	6450      	str	r0, [r2, #68]	; 0x44
 8001f9a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001f9c:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8001fa0:	9000      	str	r0, [sp, #0]
 8001fa2:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001fa4:	9301      	str	r3, [sp, #4]
 8001fa6:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fa8:	480e      	ldr	r0, [pc, #56]	; (8001fe4 <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001faa:	f043 0320 	orr.w	r3, r3, #32
 8001fae:	6313      	str	r3, [r2, #48]	; 0x30
 8001fb0:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001fb2:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8001fd8 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001fb6:	f003 0320 	and.w	r3, r3, #32
 8001fba:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fbc:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001fbe:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fc0:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001fc2:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001fc6:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001fca:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fcc:	f007 f8ea 	bl	80091a4 <HAL_GPIO_Init>
}
 8001fd0:	b008      	add	sp, #32
 8001fd2:	bd10      	pop	{r4, pc}
 8001fd4:	f3af 8000 	nop.w
 8001fd8:	00000380 	.word	0x00000380
 8001fdc:	00000002 	.word	0x00000002
 8001fe0:	40015000 	.word	0x40015000
 8001fe4:	40021400 	.word	0x40021400

08001fe8 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM1)
 8001fe8:	4a12      	ldr	r2, [pc, #72]	; (8002034 <HAL_TIM_Base_MspInit+0x4c>)
 8001fea:	6803      	ldr	r3, [r0, #0]
 8001fec:	4293      	cmp	r3, r2
{
 8001fee:	b082      	sub	sp, #8
  if(htim_base->Instance==TIM1)
 8001ff0:	d012      	beq.n	8002018 <HAL_TIM_Base_MspInit+0x30>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 8001ff2:	4a11      	ldr	r2, [pc, #68]	; (8002038 <HAL_TIM_Base_MspInit+0x50>)
 8001ff4:	4293      	cmp	r3, r2
 8001ff6:	d001      	beq.n	8001ffc <HAL_TIM_Base_MspInit+0x14>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8001ff8:	b002      	add	sp, #8
 8001ffa:	4770      	bx	lr
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001ffc:	4b0f      	ldr	r3, [pc, #60]	; (800203c <HAL_TIM_Base_MspInit+0x54>)
 8001ffe:	2200      	movs	r2, #0
 8002000:	9201      	str	r2, [sp, #4]
 8002002:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002004:	f042 0202 	orr.w	r2, r2, #2
 8002008:	641a      	str	r2, [r3, #64]	; 0x40
 800200a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800200c:	f003 0302 	and.w	r3, r3, #2
 8002010:	9301      	str	r3, [sp, #4]
 8002012:	9b01      	ldr	r3, [sp, #4]
}
 8002014:	b002      	add	sp, #8
 8002016:	4770      	bx	lr
    __HAL_RCC_TIM1_CLK_ENABLE();
 8002018:	4b08      	ldr	r3, [pc, #32]	; (800203c <HAL_TIM_Base_MspInit+0x54>)
 800201a:	2200      	movs	r2, #0
 800201c:	9200      	str	r2, [sp, #0]
 800201e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002020:	f042 0201 	orr.w	r2, r2, #1
 8002024:	645a      	str	r2, [r3, #68]	; 0x44
 8002026:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002028:	f003 0301 	and.w	r3, r3, #1
 800202c:	9300      	str	r3, [sp, #0]
 800202e:	9b00      	ldr	r3, [sp, #0]
}
 8002030:	b002      	add	sp, #8
 8002032:	4770      	bx	lr
 8002034:	40010000 	.word	0x40010000
 8002038:	40000400 	.word	0x40000400
 800203c:	40023800 	.word	0x40023800

08002040 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002040:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8002042:	4b2b      	ldr	r3, [pc, #172]	; (80020f0 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002044:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8002046:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002048:	2200      	movs	r2, #0
 800204a:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 800204c:	2c00      	cmp	r4, #0
 800204e:	d14c      	bne.n	80020ea <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8002050:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 8002052:	4a28      	ldr	r2, [pc, #160]	; (80020f4 <HAL_SDRAM_MspInit+0xb4>)
 8002054:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8002056:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002058:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800205a:	4827      	ldr	r0, [pc, #156]	; (80020f8 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 800205c:	433b      	orrs	r3, r7
 800205e:	6393      	str	r3, [r2, #56]	; 0x38
 8002060:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8002062:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002064:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002066:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002068:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 800206c:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800206e:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002070:	2302      	movs	r3, #2
 8002072:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002076:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 800207a:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800207c:	f007 f892 	bl	80091a4 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002080:	481e      	ldr	r0, [pc, #120]	; (80020fc <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8002082:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002084:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002086:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002088:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800208c:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002090:	f007 f888 	bl	80091a4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002094:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002098:	4819      	ldr	r0, [pc, #100]	; (8002100 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 800209a:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800209c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800209e:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80020a2:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020a6:	f007 f87d 	bl	80091a4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80020aa:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80020ae:	4815      	ldr	r0, [pc, #84]	; (8002104 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80020b0:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80020b2:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80020b4:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80020b8:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80020bc:	f007 f872 	bl	80091a4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80020c0:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80020c4:	4810      	ldr	r0, [pc, #64]	; (8002108 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80020c6:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80020c8:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80020ca:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80020ce:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80020d2:	f007 f867 	bl	80091a4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80020d6:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80020d8:	480c      	ldr	r0, [pc, #48]	; (800210c <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80020da:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80020dc:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80020de:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80020e2:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80020e4:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80020e6:	f007 f85d 	bl	80091a4 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80020ea:	b009      	add	sp, #36	; 0x24
 80020ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80020ee:	bf00      	nop
 80020f0:	200028a0 	.word	0x200028a0
 80020f4:	40023800 	.word	0x40023800
 80020f8:	40021400 	.word	0x40021400
 80020fc:	40020800 	.word	0x40020800
 8002100:	40021800 	.word	0x40021800
 8002104:	40021000 	.word	0x40021000
 8002108:	40020c00 	.word	0x40020c00
 800210c:	40020400 	.word	0x40020400

08002110 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002110:	b570      	push	{r4, r5, r6, lr}
 8002112:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002114:	4b23      	ldr	r3, [pc, #140]	; (80021a4 <HAL_InitTick+0x94>)
 8002116:	2200      	movs	r2, #0
 8002118:	9202      	str	r2, [sp, #8]
 800211a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800211c:	f042 0210 	orr.w	r2, r2, #16
 8002120:	641a      	str	r2, [r3, #64]	; 0x40
 8002122:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002124:	f003 0310 	and.w	r3, r3, #16
 8002128:	9302      	str	r3, [sp, #8]
{
 800212a:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800212c:	a901      	add	r1, sp, #4
 800212e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002130:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002132:	f009 fa7f 	bl	800b634 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002136:	9b06      	ldr	r3, [sp, #24]
 8002138:	b9d3      	cbnz	r3, 8002170 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 800213a:	f009 fa6b 	bl	800b614 <HAL_RCC_GetPCLK1Freq>
 800213e:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002140:	4a19      	ldr	r2, [pc, #100]	; (80021a8 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002142:	4c1a      	ldr	r4, [pc, #104]	; (80021ac <HAL_InitTick+0x9c>)
 8002144:	491a      	ldr	r1, [pc, #104]	; (80021b0 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002146:	fba2 2303 	umull	r2, r3, r2, r3
 800214a:	0c9b      	lsrs	r3, r3, #18
 800214c:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 800214e:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8002150:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002154:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002156:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 800215a:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 800215c:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800215e:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002160:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 8002162:	f00a f897 	bl	800c294 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002166:	4606      	mov	r6, r0
 8002168:	b130      	cbz	r0, 8002178 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 800216a:	4630      	mov	r0, r6
 800216c:	b008      	add	sp, #32
 800216e:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8002170:	f009 fa50 	bl	800b614 <HAL_RCC_GetPCLK1Freq>
 8002174:	0043      	lsls	r3, r0, #1
 8002176:	e7e3      	b.n	8002140 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 8002178:	4620      	mov	r0, r4
 800217a:	f00a f919 	bl	800c3b0 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 800217e:	4606      	mov	r6, r0
 8002180:	2800      	cmp	r0, #0
 8002182:	d1f2      	bne.n	800216a <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002184:	2036      	movs	r0, #54	; 0x36
 8002186:	f006 feb9 	bl	8008efc <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800218a:	2d0f      	cmp	r5, #15
 800218c:	d901      	bls.n	8002192 <HAL_InitTick+0x82>
        status = HAL_ERROR;
 800218e:	2601      	movs	r6, #1
 8002190:	e7eb      	b.n	800216a <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8002192:	4632      	mov	r2, r6
 8002194:	4629      	mov	r1, r5
 8002196:	2036      	movs	r0, #54	; 0x36
 8002198:	f006 fe72 	bl	8008e80 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 800219c:	4b05      	ldr	r3, [pc, #20]	; (80021b4 <HAL_InitTick+0xa4>)
 800219e:	601d      	str	r5, [r3, #0]
 80021a0:	e7e3      	b.n	800216a <HAL_InitTick+0x5a>
 80021a2:	bf00      	nop
 80021a4:	40023800 	.word	0x40023800
 80021a8:	431bde83 	.word	0x431bde83
 80021ac:	200028a4 	.word	0x200028a4
 80021b0:	40001000 	.word	0x40001000
 80021b4:	20000080 	.word	0x20000080

080021b8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80021b8:	4770      	bx	lr
 80021ba:	bf00      	nop

080021bc <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80021bc:	e7fe      	b.n	80021bc <HardFault_Handler>
 80021be:	bf00      	nop

080021c0 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80021c0:	e7fe      	b.n	80021c0 <MemManage_Handler>
 80021c2:	bf00      	nop

080021c4 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80021c4:	e7fe      	b.n	80021c4 <BusFault_Handler>
 80021c6:	bf00      	nop

080021c8 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80021c8:	e7fe      	b.n	80021c8 <UsageFault_Handler>
 80021ca:	bf00      	nop

080021cc <DebugMon_Handler>:
 80021cc:	4770      	bx	lr
 80021ce:	bf00      	nop

080021d0 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 80021d0:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 80021d2:	20c8      	movs	r0, #200	; 0xc8
 80021d4:	f006 fe30 	bl	8008e38 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80021d8:	4804      	ldr	r0, [pc, #16]	; (80021ec <EXTI3_IRQHandler+0x1c>)
 80021da:	2200      	movs	r2, #0
 80021dc:	2120      	movs	r1, #32
 80021de:	f007 f925 	bl	800942c <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 80021e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 80021e6:	2008      	movs	r0, #8
 80021e8:	f007 b930 	b.w	800944c <HAL_GPIO_EXTI_IRQHandler>
 80021ec:	40021000 	.word	0x40021000

080021f0 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80021f0:	4801      	ldr	r0, [pc, #4]	; (80021f8 <TIM6_DAC_IRQHandler+0x8>)
 80021f2:	f00a ba5d 	b.w	800c6b0 <HAL_TIM_IRQHandler>
 80021f6:	bf00      	nop
 80021f8:	200028a4 	.word	0x200028a4

080021fc <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 80021fc:	4801      	ldr	r0, [pc, #4]	; (8002204 <I2C3_EV_IRQHandler+0x8>)
 80021fe:	f008 b885 	b.w	800a30c <HAL_I2C_EV_IRQHandler>
 8002202:	bf00      	nop
 8002204:	20002684 	.word	0x20002684

08002208 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002208:	4801      	ldr	r0, [pc, #4]	; (8002210 <LTDC_IRQHandler+0x8>)
 800220a:	f008 bdf9 	b.w	800ae00 <HAL_LTDC_IRQHandler>
 800220e:	bf00      	nop
 8002210:	200026d8 	.word	0x200026d8

08002214 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002214:	4801      	ldr	r0, [pc, #4]	; (800221c <DMA2D_IRQHandler+0x8>)
 8002216:	f006 bedb 	b.w	8008fd0 <HAL_DMA2D_IRQHandler>
 800221a:	bf00      	nop
 800221c:	20002644 	.word	0x20002644

08002220 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002220:	2001      	movs	r0, #1
 8002222:	4770      	bx	lr

08002224 <_kill>:

int _kill(int pid, int sig)
{
 8002224:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002226:	f026 fcc9 	bl	8028bbc <__errno>
 800222a:	2316      	movs	r3, #22
 800222c:	6003      	str	r3, [r0, #0]
	return -1;
}
 800222e:	f04f 30ff 	mov.w	r0, #4294967295
 8002232:	bd08      	pop	{r3, pc}

08002234 <_exit>:

void _exit (int status)
{
 8002234:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002236:	f026 fcc1 	bl	8028bbc <__errno>
 800223a:	2316      	movs	r3, #22
 800223c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800223e:	e7fe      	b.n	800223e <_exit+0xa>

08002240 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002240:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002242:	1e16      	subs	r6, r2, #0
 8002244:	dd07      	ble.n	8002256 <_read+0x16>
 8002246:	460c      	mov	r4, r1
 8002248:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 800224a:	f3af 8000 	nop.w
 800224e:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002252:	42a5      	cmp	r5, r4
 8002254:	d1f9      	bne.n	800224a <_read+0xa>
	}

return len;
}
 8002256:	4630      	mov	r0, r6
 8002258:	bd70      	pop	{r4, r5, r6, pc}
 800225a:	bf00      	nop

0800225c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800225c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800225e:	1e16      	subs	r6, r2, #0
 8002260:	dd07      	ble.n	8002272 <_write+0x16>
 8002262:	460c      	mov	r4, r1
 8002264:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 8002266:	f814 0b01 	ldrb.w	r0, [r4], #1
 800226a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800226e:	42ac      	cmp	r4, r5
 8002270:	d1f9      	bne.n	8002266 <_write+0xa>
	}
	return len;
}
 8002272:	4630      	mov	r0, r6
 8002274:	bd70      	pop	{r4, r5, r6, pc}
 8002276:	bf00      	nop

08002278 <_close>:

int _close(int file)
{
	return -1;
}
 8002278:	f04f 30ff 	mov.w	r0, #4294967295
 800227c:	4770      	bx	lr
 800227e:	bf00      	nop

08002280 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002280:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002284:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002286:	2000      	movs	r0, #0
 8002288:	4770      	bx	lr
 800228a:	bf00      	nop

0800228c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 800228c:	2001      	movs	r0, #1
 800228e:	4770      	bx	lr

08002290 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002290:	2000      	movs	r0, #0
 8002292:	4770      	bx	lr

08002294 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002294:	4a0b      	ldr	r2, [pc, #44]	; (80022c4 <_sbrk+0x30>)
{
 8002296:	b508      	push	{r3, lr}
 8002298:	4603      	mov	r3, r0
	if (heap_end == 0)
 800229a:	6810      	ldr	r0, [r2, #0]
 800229c:	b128      	cbz	r0, 80022aa <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 800229e:	4403      	add	r3, r0
 80022a0:	4669      	mov	r1, sp
 80022a2:	428b      	cmp	r3, r1
 80022a4:	d807      	bhi.n	80022b6 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 80022a6:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 80022a8:	bd08      	pop	{r3, pc}
		heap_end = &end;
 80022aa:	4807      	ldr	r0, [pc, #28]	; (80022c8 <_sbrk+0x34>)
 80022ac:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80022ae:	4403      	add	r3, r0
 80022b0:	4669      	mov	r1, sp
 80022b2:	428b      	cmp	r3, r1
 80022b4:	d9f7      	bls.n	80022a6 <_sbrk+0x12>
		errno = ENOMEM;
 80022b6:	f026 fc81 	bl	8028bbc <__errno>
 80022ba:	230c      	movs	r3, #12
 80022bc:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80022be:	f04f 30ff 	mov.w	r0, #4294967295
}
 80022c2:	bd08      	pop	{r3, pc}
 80022c4:	200028ec 	.word	0x200028ec
 80022c8:	20014410 	.word	0x20014410

080022cc <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80022cc:	4770      	bx	lr

080022ce <_ZN23ApplicationFontProviderD0Ev>:
 80022ce:	b510      	push	{r4, lr}
 80022d0:	2104      	movs	r1, #4
 80022d2:	4604      	mov	r4, r0
 80022d4:	f025 fb83 	bl	80279de <_ZdlPvj>
 80022d8:	4620      	mov	r0, r4
 80022da:	bd10      	pop	{r4, pc}

080022dc <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80022dc:	b508      	push	{r3, lr}
    switch (typography)
 80022de:	2903      	cmp	r1, #3
 80022e0:	d813      	bhi.n	800230a <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 80022e2:	e8df f001 	tbb	[pc, r1]
 80022e6:	0602      	.short	0x0602
 80022e8:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80022ea:	f005 fe33 	bl	8007f54 <_ZN17TypedTextDatabase8getFontsEv>
 80022ee:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 80022f0:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80022f2:	f005 fe2f 	bl	8007f54 <_ZN17TypedTextDatabase8getFontsEv>
 80022f6:	6840      	ldr	r0, [r0, #4]
 80022f8:	e7fa      	b.n	80022f0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80022fa:	f005 fe2b 	bl	8007f54 <_ZN17TypedTextDatabase8getFontsEv>
 80022fe:	6880      	ldr	r0, [r0, #8]
 8002300:	e7f6      	b.n	80022f0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002302:	f005 fe27 	bl	8007f54 <_ZN17TypedTextDatabase8getFontsEv>
 8002306:	68c0      	ldr	r0, [r0, #12]
 8002308:	e7f2      	b.n	80022f0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 800230a:	2000      	movs	r0, #0
 800230c:	e7f0      	b.n	80022f0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002310 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002310:	4800      	ldr	r0, [pc, #0]	; (8002314 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002312:	4770      	bx	lr
 8002314:	08029f18 	.word	0x08029f18

08002318 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002318:	200d      	movs	r0, #13
 800231a:	4770      	bx	lr

0800231c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800231c:	b513      	push	{r0, r1, r4, lr}
 800231e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002320:	b151      	cbz	r1, 8002338 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002322:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002324:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002326:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800232a:	aa01      	add	r2, sp, #4
 800232c:	689c      	ldr	r4, [r3, #8]
 800232e:	f10d 0303 	add.w	r3, sp, #3
 8002332:	47a0      	blx	r4
        return glyph;
    }
 8002334:	b002      	add	sp, #8
 8002336:	bd10      	pop	{r4, pc}
            return 0;
 8002338:	4608      	mov	r0, r1
 800233a:	e7fb      	b.n	8002334 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800233c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800233c:	89c0      	ldrh	r0, [r0, #14]
 800233e:	4770      	bx	lr

08002340 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002340:	8a00      	ldrh	r0, [r0, #16]
 8002342:	4770      	bx	lr

08002344 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002344:	88c0      	ldrh	r0, [r0, #6]
 8002346:	4770      	bx	lr

08002348 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002348:	8880      	ldrh	r0, [r0, #4]
 800234a:	4770      	bx	lr

0800234c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800234c:	7a80      	ldrb	r0, [r0, #10]
    }
 800234e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002352:	4770      	bx	lr

08002354 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002354:	7a80      	ldrb	r0, [r0, #10]
    }
 8002356:	09c0      	lsrs	r0, r0, #7
 8002358:	4770      	bx	lr

0800235a <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800235a:	4770      	bx	lr

0800235c <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 800235c:	4770      	bx	lr

0800235e <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800235e:	4770      	bx	lr

08002360 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002360:	4770      	bx	lr

08002362 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002362:	4770      	bx	lr

08002364 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002364:	4770      	bx	lr

08002366 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002366:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002368:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 800236a:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 800236c:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800236e:	466d      	mov	r5, sp
 8002370:	4601      	mov	r1, r0
 8002372:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8002376:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002378:	4628      	mov	r0, r5
 800237a:	4798      	blx	r3
 800237c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002380:	343c      	adds	r4, #60	; 0x3c
 8002382:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002386:	b005      	add	sp, #20
 8002388:	bd30      	pop	{r4, r5, pc}

0800238a <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800238a:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 800238c:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 800238e:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002390:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002392:	466d      	mov	r5, sp
 8002394:	4601      	mov	r1, r0
 8002396:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 800239a:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 800239c:	4628      	mov	r0, r5
 800239e:	4798      	blx	r3
 80023a0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80023a4:	343c      	adds	r4, #60	; 0x3c
 80023a6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80023aa:	b005      	add	sp, #20
 80023ac:	bd30      	pop	{r4, r5, pc}

080023ae <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80023ae:	2200      	movs	r2, #0
 80023b0:	8002      	strh	r2, [r0, #0]
 80023b2:	8042      	strh	r2, [r0, #2]
 80023b4:	8082      	strh	r2, [r0, #4]
 80023b6:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80023b8:	4770      	bx	lr

080023ba <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80023ba:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 80023be:	4770      	bx	lr

080023c0 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80023c0:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80023c2:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80023c4:	4604      	mov	r4, r0
        setX(x);
 80023c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80023c8:	4615      	mov	r5, r2
        setX(x);
 80023ca:	4798      	blx	r3
        setBaselineY(baselineY);
 80023cc:	6823      	ldr	r3, [r4, #0]
 80023ce:	4629      	mov	r1, r5
 80023d0:	4620      	mov	r0, r4
 80023d2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80023d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80023d8:	4718      	bx	r3

080023da <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80023da:	2000      	movs	r0, #0
 80023dc:	4770      	bx	lr

080023de <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80023de:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80023e0:	4770      	bx	lr

080023e2 <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 80023e2:	4770      	bx	lr

080023e4 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80023e4:	4770      	bx	lr

080023e6 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80023e6:	4770      	bx	lr

080023e8 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 80023e8:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 80023ea:	68c2      	ldr	r2, [r0, #12]
 80023ec:	6844      	ldr	r4, [r0, #4]
 80023ee:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80023f0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80023f2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80023f6:	07d2      	lsls	r2, r2, #31
 80023f8:	bf48      	it	mi
 80023fa:	5962      	ldrmi	r2, [r4, r5]
 80023fc:	689b      	ldr	r3, [r3, #8]
    }
 80023fe:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002400:	bf48      	it	mi
 8002402:	58d3      	ldrmi	r3, [r2, r3]
 8002404:	4718      	bx	r3

08002406 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002406:	6843      	ldr	r3, [r0, #4]
 8002408:	b12b      	cbz	r3, 8002416 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800240a:	6883      	ldr	r3, [r0, #8]
 800240c:	b92b      	cbnz	r3, 800241a <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800240e:	68c0      	ldr	r0, [r0, #12]
 8002410:	f000 0001 	and.w	r0, r0, #1
 8002414:	4770      	bx	lr
 8002416:	4618      	mov	r0, r3
 8002418:	4770      	bx	lr
 800241a:	2001      	movs	r0, #1
    }
 800241c:	4770      	bx	lr

0800241e <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800241e:	b510      	push	{r4, lr}
    }
 8002420:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002422:	4604      	mov	r4, r0
    }
 8002424:	f025 fadb 	bl	80279de <_ZdlPvj>
 8002428:	4620      	mov	r0, r4
 800242a:	bd10      	pop	{r4, pc}

0800242c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800242c:	b510      	push	{r4, lr}
 800242e:	214c      	movs	r1, #76	; 0x4c
 8002430:	4604      	mov	r4, r0
 8002432:	f025 fad4 	bl	80279de <_ZdlPvj>
 8002436:	4620      	mov	r0, r4
 8002438:	bd10      	pop	{r4, pc}

0800243a <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800243a:	b510      	push	{r4, lr}
 800243c:	2110      	movs	r1, #16
 800243e:	4604      	mov	r4, r0
 8002440:	f025 facd 	bl	80279de <_ZdlPvj>
 8002444:	4620      	mov	r0, r4
 8002446:	bd10      	pop	{r4, pc}

08002448 <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002448:	b510      	push	{r4, lr}
 800244a:	4b03      	ldr	r3, [pc, #12]	; (8002458 <_ZN19CalibrationViewBaseD1Ev+0x10>)
 800244c:	6003      	str	r3, [r0, #0]
 800244e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002450:	f011 f864 	bl	801351c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002454:	4620      	mov	r0, r4
 8002456:	bd10      	pop	{r4, pc}
 8002458:	0802a284 	.word	0x0802a284

0800245c <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 800245c:	b507      	push	{r0, r1, r2, lr}
 800245e:	4b07      	ldr	r3, [pc, #28]	; (800247c <_ZN19CalibrationViewBaseD0Ev+0x20>)
 8002460:	6003      	str	r3, [r0, #0]
 8002462:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002464:	f011 f85a 	bl	801351c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002468:	9801      	ldr	r0, [sp, #4]
 800246a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800246e:	f025 fab6 	bl	80279de <_ZdlPvj>
 8002472:	9801      	ldr	r0, [sp, #4]
 8002474:	b003      	add	sp, #12
 8002476:	f85d fb04 	ldr.w	pc, [sp], #4
 800247a:	bf00      	nop
 800247c:	0802a284 	.word	0x0802a284

08002480 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8002480:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8002482:	f7fe fef7 	bl	8001274 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8002486:	bd08      	pop	{r3, pc}

08002488 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002488:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 800248a:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800248c:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800248e:	4b12      	ldr	r3, [pc, #72]	; (80024d8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002490:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002492:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002494:	b28d      	uxth	r5, r1
 8002496:	b92b      	cbnz	r3, 80024a4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002498:	4b10      	ldr	r3, [pc, #64]	; (80024dc <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800249a:	4a11      	ldr	r2, [pc, #68]	; (80024e0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800249c:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800249e:	4811      	ldr	r0, [pc, #68]	; (80024e4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80024a0:	f026 f88e 	bl	80285c0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80024a4:	4910      	ldr	r1, [pc, #64]	; (80024e8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80024a6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80024a8:	8809      	ldrh	r1, [r1, #0]
 80024aa:	4291      	cmp	r1, r2
 80024ac:	d803      	bhi.n	80024b6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80024ae:	4b0f      	ldr	r3, [pc, #60]	; (80024ec <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80024b0:	4a0b      	ldr	r2, [pc, #44]	; (80024e0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80024b2:	216d      	movs	r1, #109	; 0x6d
 80024b4:	e7f3      	b.n	800249e <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80024b6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80024ba:	4b0d      	ldr	r3, [pc, #52]	; (80024f0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80024bc:	681b      	ldr	r3, [r3, #0]
 80024be:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80024c2:	6803      	ldr	r3, [r0, #0]
 80024c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80024c6:	4798      	blx	r3
 80024c8:	1a28      	subs	r0, r5, r0
 80024ca:	b201      	sxth	r1, r0
 80024cc:	4633      	mov	r3, r6
 80024ce:	4620      	mov	r0, r4
    }
 80024d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80024d4:	4718      	bx	r3
 80024d6:	bf00      	nop
 80024d8:	2001382c 	.word	0x2001382c
 80024dc:	0802a01c 	.word	0x0802a01c
 80024e0:	0802a05e 	.word	0x0802a05e
 80024e4:	0802a099 	.word	0x0802a099
 80024e8:	20013830 	.word	0x20013830
 80024ec:	0802a0e0 	.word	0x0802a0e0
 80024f0:	20013834 	.word	0x20013834

080024f4 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80024f4:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80024f6:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80024fa:	4299      	cmp	r1, r3
{
 80024fc:	4604      	mov	r4, r0
 80024fe:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8002500:	d103      	bne.n	800250a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002502:	f012 fd0d 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8002506:	f001 f921 	bl	800374c <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 800250a:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800250e:	429d      	cmp	r5, r3
 8002510:	d103      	bne.n	800251a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8002512:	f012 fd05 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 8002516:	f001 f9d9 	bl	80038cc <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800251a:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800251e:	42a5      	cmp	r5, r4
 8002520:	d105      	bne.n	800252e <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8002522:	f012 fcfd 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Calibration_Hall
        //Go to Calibration_Hall with screen transition towards East
        application().gotoCalibration_HallScreenWipeTransitionEast();
    }
}
 8002526:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCalibration_HallScreenWipeTransitionEast();
 800252a:	f001 b9df 	b.w	80038ec <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>
}
 800252e:	bd38      	pop	{r3, r4, r5, pc}

08002530 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002530:	2200      	movs	r2, #0
 8002532:	f04f 31ff 	mov.w	r1, #4294967295
 8002536:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 800253a:	6082      	str	r2, [r0, #8]
    }
 800253c:	4770      	bx	lr

0800253e <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800253e:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002540:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002542:	4604      	mov	r4, r0
        setX(x);
 8002544:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002546:	4615      	mov	r5, r2
        setX(x);
 8002548:	4798      	blx	r3
        setY(y);
 800254a:	6823      	ldr	r3, [r4, #0]
 800254c:	4629      	mov	r1, r5
 800254e:	4620      	mov	r0, r4
 8002550:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002552:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002556:	4718      	bx	r3

08002558 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002558:	b570      	push	{r4, r5, r6, lr}
 800255a:	4604      	mov	r4, r0
 800255c:	461d      	mov	r5, r3
 800255e:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002562:	f7ff ffec 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002566:	6823      	ldr	r3, [r4, #0]
 8002568:	4629      	mov	r1, r5
 800256a:	4620      	mov	r0, r4
 800256c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800256e:	4798      	blx	r3
        setHeight(height);
 8002570:	6823      	ldr	r3, [r4, #0]
 8002572:	4631      	mov	r1, r6
 8002574:	4620      	mov	r0, r4
 8002576:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002578:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 800257c:	4718      	bx	r3
	...

08002580 <_ZN8touchgfx6WidgetC1Ev>:
 8002580:	2200      	movs	r2, #0
 8002582:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002586:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 800258a:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 800258e:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8002592:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002596:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002598:	4a01      	ldr	r2, [pc, #4]	; (80025a0 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800259a:	6002      	str	r2, [r0, #0]
 800259c:	4770      	bx	lr
 800259e:	bf00      	nop
 80025a0:	0802a164 	.word	0x0802a164

080025a4 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 80025a4:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80025a6:	2226      	movs	r2, #38	; 0x26
    TextArea()
 80025a8:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80025aa:	2100      	movs	r1, #0
 80025ac:	f026 fa0d 	bl	80289ca <memset>
 80025b0:	4620      	mov	r0, r4
 80025b2:	f7ff ffe5 	bl	8002580 <_ZN8touchgfx6WidgetC1Ev>
 80025b6:	4b0a      	ldr	r3, [pc, #40]	; (80025e0 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80025b8:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80025ba:	4b0a      	ldr	r3, [pc, #40]	; (80025e4 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 80025bc:	62a3      	str	r3, [r4, #40]	; 0x28
 80025be:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80025c2:	85a3      	strh	r3, [r4, #44]	; 0x2c
 80025c4:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80025c8:	2300      	movs	r3, #0
 80025ca:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80025ce:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 80025d2:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80025d6:	8723      	strh	r3, [r4, #56]	; 0x38
 80025d8:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 80025da:	4620      	mov	r0, r4
 80025dc:	bd10      	pop	{r4, pc}
 80025de:	bf00      	nop
 80025e0:	0802ca84 	.word	0x0802ca84
 80025e4:	0802a1cc 	.word	0x0802a1cc

080025e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 80025e8:	4b1a      	ldr	r3, [pc, #104]	; (8002654 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 80025ea:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 80025ec:	881b      	ldrh	r3, [r3, #0]
 80025ee:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80025f0:	428b      	cmp	r3, r1
    void updateTextPosition()
 80025f2:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 80025f4:	d92b      	bls.n	800264e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80025f6:	4b18      	ldr	r3, [pc, #96]	; (8002658 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 80025f8:	681b      	ldr	r3, [r3, #0]
 80025fa:	b92b      	cbnz	r3, 8002608 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 80025fc:	4b17      	ldr	r3, [pc, #92]	; (800265c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 80025fe:	4a18      	ldr	r2, [pc, #96]	; (8002660 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002600:	4818      	ldr	r0, [pc, #96]	; (8002664 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002602:	216c      	movs	r1, #108	; 0x6c
 8002604:	f025 ffdc 	bl	80285c0 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002608:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800260c:	4b16      	ldr	r3, [pc, #88]	; (8002668 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800260e:	681b      	ldr	r3, [r3, #0]
 8002610:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002614:	4b15      	ldr	r3, [pc, #84]	; (800266c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002616:	6818      	ldr	r0, [r3, #0]
 8002618:	f005 fc8c 	bl	8007f34 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800261c:	682b      	ldr	r3, [r5, #0]
 800261e:	9001      	str	r0, [sp, #4]
 8002620:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002622:	4628      	mov	r0, r5
 8002624:	4798      	blx	r3
 8002626:	682b      	ldr	r3, [r5, #0]
 8002628:	9901      	ldr	r1, [sp, #4]
 800262a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800262c:	4604      	mov	r4, r0
 800262e:	4628      	mov	r0, r5
 8002630:	4798      	blx	r3
 8002632:	682b      	ldr	r3, [r5, #0]
 8002634:	9901      	ldr	r1, [sp, #4]
 8002636:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002638:	fb14 f400 	smulbb	r4, r4, r0
 800263c:	4628      	mov	r0, r5
 800263e:	4798      	blx	r3
 8002640:	b2a4      	uxth	r4, r4
 8002642:	1823      	adds	r3, r4, r0
 8002644:	b21b      	sxth	r3, r3
 8002646:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 800264a:	b002      	add	sp, #8
 800264c:	bd70      	pop	{r4, r5, r6, pc}
 800264e:	2300      	movs	r3, #0
 8002650:	e7f9      	b.n	8002646 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8002652:	bf00      	nop
 8002654:	20013830 	.word	0x20013830
 8002658:	2001382c 	.word	0x2001382c
 800265c:	0802a01c 	.word	0x0802a01c
 8002660:	0802a05e 	.word	0x0802a05e
 8002664:	0802a099 	.word	0x0802a099
 8002668:	20013834 	.word	0x20013834
 800266c:	20013838 	.word	0x20013838

08002670 <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 8002670:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002674:	ed2d 8b06 	vpush	{d8-d10}
 8002678:	4604      	mov	r4, r0
 800267a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 800267c:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 800267e:	2500      	movs	r5, #0
 8002680:	f014 f8ce 	bl	8016820 <_ZN8touchgfx6ScreenC1Ev>
 8002684:	4b66      	ldr	r3, [pc, #408]	; (8002820 <_ZN19CalibrationViewBaseC1Ev+0x1b0>)
 8002686:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002688:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 800268c:	2226      	movs	r2, #38	; 0x26
 800268e:	4629      	mov	r1, r5
 8002690:	4658      	mov	r0, fp
 8002692:	f026 f99a 	bl	80289ca <memset>
 8002696:	4658      	mov	r0, fp
 8002698:	f7ff ff72 	bl	8002580 <_ZN8touchgfx6WidgetC1Ev>
 800269c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80026a0:	26ff      	movs	r6, #255	; 0xff
 80026a2:	4b60      	ldr	r3, [pc, #384]	; (8002824 <_ZN19CalibrationViewBaseC1Ev+0x1b4>)
 80026a4:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 80026a6:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80026a8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80026ac:	4629      	mov	r1, r5
 80026ae:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80026b2:	4650      	mov	r0, sl
        : color(col)
 80026b4:	66a5      	str	r5, [r4, #104]	; 0x68
 80026b6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80026ba:	f026 f986 	bl	80289ca <memset>
 80026be:	4650      	mov	r0, sl
 80026c0:	f7ff ff5e 	bl	8002580 <_ZN8touchgfx6WidgetC1Ev>
 80026c4:	4b58      	ldr	r3, [pc, #352]	; (8002828 <_ZN19CalibrationViewBaseC1Ev+0x1b8>)
 80026c6:	66e3      	str	r3, [r4, #108]	; 0x6c
 80026c8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80026cc:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 80026d0:	a90a      	add	r1, sp, #40	; 0x28
 80026d2:	4650      	mov	r0, sl
 80026d4:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80026d8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80026dc:	f00f ff17 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80026e0:	4648      	mov	r0, r9
 80026e2:	f7ff ff5f 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 80026e6:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80026ea:	4b50      	ldr	r3, [pc, #320]	; (800282c <_ZN19CalibrationViewBaseC1Ev+0x1bc>)
 80026ec:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80026f0:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80026f4:	4638      	mov	r0, r7
 80026f6:	f00e fdd3 	bl	80112a0 <_ZN8touchgfx4LineC1Ev>
 80026fa:	f504 73aa 	add.w	r3, r4, #340	; 0x154
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80026fe:	4618      	mov	r0, r3
 8002700:	9303      	str	r3, [sp, #12]
 8002702:	f7fe fddd 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002706:	4b4a      	ldr	r3, [pc, #296]	; (8002830 <_ZN19CalibrationViewBaseC1Ev+0x1c0>)
 8002708:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800270c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8002710:	3324      	adds	r3, #36	; 0x24
 8002712:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8002716:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800271a:	4640      	mov	r0, r8
 800271c:	f7ff ff42 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8002720:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8002724:	4618      	mov	r0, r3
 8002726:	ee08 3a10 	vmov	s16, r3
 800272a:	f7ff ff3b 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 800272e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8002732:	4618      	mov	r0, r3
 8002734:	ee08 3a90 	vmov	s17, r3
 8002738:	f7ff ff34 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 800273c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8002740:	4618      	mov	r0, r3
 8002742:	ee09 3a10 	vmov	s18, r3
 8002746:	f010 f823 	bl	8012790 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800274a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800274e:	4618      	mov	r0, r3
 8002750:	ee09 3a90 	vmov	s19, r3
 8002754:	f010 f81c 	bl	8012790 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002758:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800275c:	4618      	mov	r0, r3
 800275e:	ee0a 3a10 	vmov	s20, r3
 8002762:	f010 f815 	bl	8012790 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002766:	4a33      	ldr	r2, [pc, #204]	; (8002834 <_ZN19CalibrationViewBaseC1Ev+0x1c4>)
 8002768:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800276c:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8002770:	4a31      	ldr	r2, [pc, #196]	; (8002838 <_ZN19CalibrationViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002772:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002776:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 800277a:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800277e:	f010 fec3 	bl	8013508 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002782:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002786:	462a      	mov	r2, r5
 8002788:	4658      	mov	r0, fp
 800278a:	9300      	str	r3, [sp, #0]
 800278c:	4629      	mov	r1, r5
 800278e:	23f0      	movs	r3, #240	; 0xf0
 8002790:	f7ff fee2 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002794:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002796:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800279a:	66a3      	str	r3, [r4, #104]	; 0x68
 800279c:	4659      	mov	r1, fp
 800279e:	4630      	mov	r0, r6
 80027a0:	f00d f926 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80027a4:	462a      	mov	r2, r5
 80027a6:	4650      	mov	r0, sl
 80027a8:	4629      	mov	r1, r5
 80027aa:	f7ff fec8 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 80027ae:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80027b0:	4650      	mov	r0, sl
 80027b2:	a90a      	add	r1, sp, #40	; 0x28
 80027b4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80027b8:	f00f fea9 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80027bc:	4651      	mov	r1, sl
 80027be:	4630      	mov	r0, r6
 80027c0:	f00d f916 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(89, 308);
 80027c4:	f44f 729a 	mov.w	r2, #308	; 0x134
 80027c8:	2159      	movs	r1, #89	; 0x59
 80027ca:	4648      	mov	r0, r9
 80027cc:	f7ff feb7 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80027d0:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80027d4:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80027d8:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80027dc:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80027e0:	4650      	mov	r0, sl
 80027e2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80027e6:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80027ea:	4649      	mov	r1, r9
 80027ec:	4798      	blx	r3
 80027ee:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80027f2:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80027f6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80027fa:	4b10      	ldr	r3, [pc, #64]	; (800283c <_ZN19CalibrationViewBaseC1Ev+0x1cc>)
 80027fc:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8KB).getText());
 80027fe:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8002802:	b92b      	cbnz	r3, 8002810 <_ZN19CalibrationViewBaseC1Ev+0x1a0>
 8002804:	4b0e      	ldr	r3, [pc, #56]	; (8002840 <_ZN19CalibrationViewBaseC1Ev+0x1d0>)
 8002806:	4a0f      	ldr	r2, [pc, #60]	; (8002844 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8002808:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800280a:	480f      	ldr	r0, [pc, #60]	; (8002848 <_ZN19CalibrationViewBaseC1Ev+0x1d8>)
 800280c:	f025 fed8 	bl	80285c0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002810:	4b0e      	ldr	r3, [pc, #56]	; (800284c <_ZN19CalibrationViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002812:	881b      	ldrh	r3, [r3, #0]
 8002814:	2b14      	cmp	r3, #20
 8002816:	d81d      	bhi.n	8002854 <_ZN19CalibrationViewBaseC1Ev+0x1e4>
 8002818:	4b0d      	ldr	r3, [pc, #52]	; (8002850 <_ZN19CalibrationViewBaseC1Ev+0x1e0>)
 800281a:	4a0a      	ldr	r2, [pc, #40]	; (8002844 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 800281c:	2161      	movs	r1, #97	; 0x61
 800281e:	e7f4      	b.n	800280a <_ZN19CalibrationViewBaseC1Ev+0x19a>
 8002820:	0802a284 	.word	0x0802a284
 8002824:	0802cb14 	.word	0x0802cb14
 8002828:	0802ccdc 	.word	0x0802ccdc
 800282c:	0802a1dc 	.word	0x0802a1dc
 8002830:	0802c848 	.word	0x0802c848
 8002834:	0802a26c 	.word	0x0802a26c
 8002838:	080024f5 	.word	0x080024f5
 800283c:	2001382c 	.word	0x2001382c
 8002840:	0802a01c 	.word	0x0802a01c
 8002844:	0802a11e 	.word	0x0802a11e
 8002848:	0802a099 	.word	0x0802a099
 800284c:	20013830 	.word	0x20013830
 8002850:	0802a0e0 	.word	0x0802a0e0
        return texts->getText(typedTextId);
 8002854:	4b93      	ldr	r3, [pc, #588]	; (8002aa4 <_ZN19CalibrationViewBaseC1Ev+0x434>)
 8002856:	2114      	movs	r1, #20
 8002858:	6818      	ldr	r0, [r3, #0]
 800285a:	f005 fb6b 	bl	8007f34 <_ZNK8touchgfx5Texts7getTextEt>
 800285e:	4a92      	ldr	r2, [pc, #584]	; (8002aa8 <_ZN19CalibrationViewBaseC1Ev+0x438>)
 8002860:	4603      	mov	r3, r0
 8002862:	2104      	movs	r1, #4
 8002864:	4650      	mov	r0, sl
 8002866:	f015 fcbf 	bl	80181e8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 800286a:	4648      	mov	r0, r9
        wc1 = value;
 800286c:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8002870:	f00f fa52 	bl	8011d18 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002874:	4b8d      	ldr	r3, [pc, #564]	; (8002aac <_ZN19CalibrationViewBaseC1Ev+0x43c>)
 8002876:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBVT));
 8002878:	a90a      	add	r1, sp, #40	; 0x28
 800287a:	2315      	movs	r3, #21
 800287c:	4648      	mov	r0, r9
 800287e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002882:	f00f fa69 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002886:	4649      	mov	r1, r9
 8002888:	4630      	mov	r0, r6
 800288a:	f00d f8b1 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800288e:	230a      	movs	r3, #10
 8002890:	9300      	str	r3, [sp, #0]
 8002892:	2232      	movs	r2, #50	; 0x32
 8002894:	23f0      	movs	r3, #240	; 0xf0
 8002896:	4629      	mov	r1, r5
 8002898:	4638      	mov	r0, r7
 800289a:	f7ff fe5d 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 800289e:	9b03      	ldr	r3, [sp, #12]
 80028a0:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80028a4:	22a0      	movs	r2, #160	; 0xa0
 80028a6:	4611      	mov	r1, r2
 80028a8:	4638      	mov	r0, r7
 80028aa:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80028ae:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80028b2:	f00e fe0b 	bl	80114cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80028b6:	22a0      	movs	r2, #160	; 0xa0
 80028b8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80028bc:	4638      	mov	r0, r7
 80028be:	f00e fe10 	bl	80114e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 80028c2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80028c6:	2b20      	cmp	r3, #32
 80028c8:	d005      	beq.n	80028d6 <_ZN19CalibrationViewBaseC1Ev+0x266>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 80028ca:	2320      	movs	r3, #32
 80028cc:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120

        updateCachedShape();
 80028d0:	4638      	mov	r0, r7
 80028d2:	f00e fd05 	bl	80112e0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80028d6:	4638      	mov	r0, r7
 80028d8:	2101      	movs	r1, #1
 80028da:	f00e fe0d 	bl	80114f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80028de:	4639      	mov	r1, r7
 80028e0:	4630      	mov	r0, r6
 80028e2:	ad04      	add	r5, sp, #16
        color = newColor;
 80028e4:	f04f 37ff 	mov.w	r7, #4294967295
 80028e8:	f00d f882 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80028ec:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(70, 60);
 80028f0:	223c      	movs	r2, #60	; 0x3c
 80028f2:	4640      	mov	r0, r8
 80028f4:	2146      	movs	r1, #70	; 0x46
 80028f6:	f7ff fe22 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80028fa:	4641      	mov	r1, r8
 80028fc:	4628      	mov	r0, r5
        color = newColor;
 80028fe:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8002902:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8002906:	f00e ff8d 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800290a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800290e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8002912:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002916:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8002aac <_ZN19CalibrationViewBaseC1Ev+0x43c>
 800291a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800291e:	230d      	movs	r3, #13
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05WF));
 8002920:	a90a      	add	r1, sp, #40	; 0x28
 8002922:	4640      	mov	r0, r8
 8002924:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002928:	f00f fa16 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800292c:	4641      	mov	r1, r8
 800292e:	4630      	mov	r0, r6
 8002930:	f00d f85e 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8002934:	ee18 0a10 	vmov	r0, s16
 8002938:	2223      	movs	r2, #35	; 0x23
 800293a:	2145      	movs	r1, #69	; 0x45
 800293c:	f7ff fdff 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8002940:	ee18 1a10 	vmov	r1, s16
 8002944:	4628      	mov	r0, r5
        color = newColor;
 8002946:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 800294a:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 800294e:	f00e ff69 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002952:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002956:	ee18 3a10 	vmov	r3, s16
 800295a:	333c      	adds	r3, #60	; 0x3c
 800295c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002960:	234a      	movs	r3, #74	; 0x4a
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 8002962:	ee18 0a10 	vmov	r0, s16
 8002966:	a90a      	add	r1, sp, #40	; 0x28
 8002968:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800296c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002970:	f00f f9f2 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002974:	ee18 1a10 	vmov	r1, s16
 8002978:	4630      	mov	r0, r6
 800297a:	f00d f839 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800297e:	ee18 0a90 	vmov	r0, s17
 8002982:	220c      	movs	r2, #12
 8002984:	2136      	movs	r1, #54	; 0x36
 8002986:	f7ff fdda 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 800298a:	ee18 1a90 	vmov	r1, s17
 800298e:	4628      	mov	r0, r5
        color = newColor;
 8002990:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8002994:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8002998:	f00e ff44 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800299c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80029a0:	ee18 3a90 	vmov	r3, s17
 80029a4:	333c      	adds	r3, #60	; 0x3c
 80029a6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80029aa:	2349      	movs	r3, #73	; 0x49
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 80029ac:	ee18 0a90 	vmov	r0, s17
 80029b0:	a90a      	add	r1, sp, #40	; 0x28
 80029b2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80029b6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80029ba:	f00f f9cd 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80029be:	ee18 1a90 	vmov	r1, s17
 80029c2:	4630      	mov	r0, r6
 80029c4:	f00d f814 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80029c8:	ee19 0a10 	vmov	r0, s18
 80029cc:	22f0      	movs	r2, #240	; 0xf0
 80029ce:	2121      	movs	r1, #33	; 0x21
 80029d0:	f7ff fdb5 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 80029d4:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80029d8:	aa0a      	add	r2, sp, #40	; 0x28
 80029da:	f04f 0802 	mov.w	r8, #2
 80029de:	a909      	add	r1, sp, #36	; 0x24
 80029e0:	ee19 0a10 	vmov	r0, s18
 80029e4:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80029e8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 80029ec:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80029f0:	f00f fb97 	bl	8012122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80029f4:	2348      	movs	r3, #72	; 0x48
 80029f6:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80029fa:	3510      	adds	r5, #16
        updateTextPosition();
 80029fc:	ee19 0a10 	vmov	r0, s18
 8002a00:	f7ff fdf2 	bl	80025e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002a04:	ee19 1a10 	vmov	r1, s18
 8002a08:	4630      	mov	r0, r6
        colorPressed = col;
 8002a0a:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002a0e:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8002a12:	f00c ffed 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8002a16:	ee19 0a90 	vmov	r0, s19
 8002a1a:	22aa      	movs	r2, #170	; 0xaa
 8002a1c:	2121      	movs	r1, #33	; 0x21
 8002a1e:	f7ff fd8e 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002a22:	aa0a      	add	r2, sp, #40	; 0x28
 8002a24:	a909      	add	r1, sp, #36	; 0x24
 8002a26:	ee19 0a90 	vmov	r0, s19
 8002a2a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002a2e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002a32:	f00f fb76 	bl	8012122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002a36:	2347      	movs	r3, #71	; 0x47
 8002a38:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8002a3c:	ee19 0a90 	vmov	r0, s19
 8002a40:	f7ff fdd2 	bl	80025e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002a44:	ee19 1a90 	vmov	r1, s19
 8002a48:	4630      	mov	r0, r6
        colorPressed = col;
 8002a4a:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8002a4e:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8002a52:	f00c ffcd 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8002a56:	ee1a 0a10 	vmov	r0, s20
 8002a5a:	2264      	movs	r2, #100	; 0x64
 8002a5c:	2121      	movs	r1, #33	; 0x21
 8002a5e:	f7ff fd6e 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002a62:	aa0a      	add	r2, sp, #40	; 0x28
 8002a64:	a909      	add	r1, sp, #36	; 0x24
 8002a66:	ee1a 0a10 	vmov	r0, s20
 8002a6a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002a6e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002a72:	f00f fb56 	bl	8012122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002a76:	2346      	movs	r3, #70	; 0x46
        updateTextPosition();
 8002a78:	ee1a 0a10 	vmov	r0, s20
 8002a7c:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8002a80:	f7ff fdb2 	bl	80025e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002a84:	4630      	mov	r0, r6
        colorPressed = col;
 8002a86:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8002a8a:	ee1a 1a10 	vmov	r1, s20
 8002a8e:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8002a92:	f00c ffad 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002a96:	4620      	mov	r0, r4
 8002a98:	b00d      	add	sp, #52	; 0x34
 8002a9a:	ecbd 8b06 	vpop	{d8-d10}
 8002a9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002aa2:	bf00      	nop
 8002aa4:	20013838 	.word	0x20013838
 8002aa8:	0802a156 	.word	0x0802a156
 8002aac:	0802a1cc 	.word	0x0802a1cc

08002ab0 <_ZN24Calibration_HallViewBase11setupScreenEv>:
}

void Calibration_HallViewBase::setupScreen()
{

}
 8002ab0:	4770      	bx	lr

08002ab2 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002ab2:	4770      	bx	lr

08002ab4 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002ab4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002ab6:	68c2      	ldr	r2, [r0, #12]
 8002ab8:	6844      	ldr	r4, [r0, #4]
 8002aba:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002abc:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002abe:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002ac2:	07d2      	lsls	r2, r2, #31
 8002ac4:	bf48      	it	mi
 8002ac6:	5962      	ldrmi	r2, [r4, r5]
 8002ac8:	689b      	ldr	r3, [r3, #8]
    }
 8002aca:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002acc:	bf48      	it	mi
 8002ace:	58d3      	ldrmi	r3, [r2, r3]
 8002ad0:	4718      	bx	r3

08002ad2 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002ad2:	6843      	ldr	r3, [r0, #4]
 8002ad4:	b12b      	cbz	r3, 8002ae2 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002ad6:	6883      	ldr	r3, [r0, #8]
 8002ad8:	b92b      	cbnz	r3, 8002ae6 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002ada:	68c0      	ldr	r0, [r0, #12]
 8002adc:	f000 0001 	and.w	r0, r0, #1
 8002ae0:	4770      	bx	lr
 8002ae2:	4618      	mov	r0, r3
 8002ae4:	4770      	bx	lr
 8002ae6:	2001      	movs	r0, #1
    }
 8002ae8:	4770      	bx	lr

08002aea <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002aea:	b510      	push	{r4, lr}
 8002aec:	2110      	movs	r1, #16
 8002aee:	4604      	mov	r4, r0
 8002af0:	f024 ff75 	bl	80279de <_ZdlPvj>
 8002af4:	4620      	mov	r0, r4
 8002af6:	bd10      	pop	{r4, pc}

08002af8 <_ZN24Calibration_HallViewBaseD1Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002af8:	b510      	push	{r4, lr}
 8002afa:	4b03      	ldr	r3, [pc, #12]	; (8002b08 <_ZN24Calibration_HallViewBaseD1Ev+0x10>)
 8002afc:	6003      	str	r3, [r0, #0]
 8002afe:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002b00:	f010 fd0c 	bl	801351c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002b04:	4620      	mov	r0, r4
 8002b06:	bd10      	pop	{r4, pc}
 8002b08:	0802a2d0 	.word	0x0802a2d0

08002b0c <_ZN24Calibration_HallViewBaseD0Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002b0c:	b507      	push	{r0, r1, r2, lr}
 8002b0e:	4b07      	ldr	r3, [pc, #28]	; (8002b2c <_ZN24Calibration_HallViewBaseD0Ev+0x20>)
 8002b10:	6003      	str	r3, [r0, #0]
 8002b12:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002b14:	f010 fd02 	bl	801351c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002b18:	9801      	ldr	r0, [sp, #4]
 8002b1a:	f241 015c 	movw	r1, #4188	; 0x105c
 8002b1e:	f024 ff5e 	bl	80279de <_ZdlPvj>
 8002b22:	9801      	ldr	r0, [sp, #4]
 8002b24:	b003      	add	sp, #12
 8002b26:	f85d fb04 	ldr.w	pc, [sp], #4
 8002b2a:	bf00      	nop
 8002b2c:	0802a2d0 	.word	0x0802a2d0

08002b30 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_HallViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002b30:	3098      	adds	r0, #152	; 0x98
 8002b32:	4288      	cmp	r0, r1
{
 8002b34:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8002b36:	d105      	bne.n	8002b44 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_HallViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002b38:	f012 f9f2 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8002b3c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8002b40:	f000 beb4 	b.w	80038ac <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8002b44:	bd08      	pop	{r3, pc}
	...

08002b48 <_ZN24Calibration_HallViewBaseC1Ev>:
Calibration_HallViewBase::Calibration_HallViewBase() :
 8002b48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002b4c:	ed2d 8b02 	vpush	{d8}
 8002b50:	4604      	mov	r4, r0
 8002b52:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_HallViewBase::buttonCallbackHandler)
 8002b54:	46a1      	mov	r9, r4
 8002b56:	2500      	movs	r5, #0
 8002b58:	f013 fe62 	bl	8016820 <_ZN8touchgfx6ScreenC1Ev>
 8002b5c:	4ba5      	ldr	r3, [pc, #660]	; (8002df4 <_ZN24Calibration_HallViewBaseC1Ev+0x2ac>)
 8002b5e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002b60:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8002b64:	2226      	movs	r2, #38	; 0x26
 8002b66:	4629      	mov	r1, r5
 8002b68:	4648      	mov	r0, r9
 8002b6a:	f025 ff2e 	bl	80289ca <memset>
 8002b6e:	4648      	mov	r0, r9
 8002b70:	f7ff fd06 	bl	8002580 <_ZN8touchgfx6WidgetC1Ev>
 8002b74:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002b78:	26ff      	movs	r6, #255	; 0xff
 8002b7a:	4b9f      	ldr	r3, [pc, #636]	; (8002df8 <_ZN24Calibration_HallViewBaseC1Ev+0x2b0>)
 8002b7c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8002b7e:	2226      	movs	r2, #38	; 0x26
 8002b80:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002b84:	4629      	mov	r1, r5
 8002b86:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002b8a:	4640      	mov	r0, r8
 8002b8c:	66a5      	str	r5, [r4, #104]	; 0x68
 8002b8e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002b92:	f025 ff1a 	bl	80289ca <memset>
 8002b96:	4640      	mov	r0, r8
 8002b98:	f7ff fcf2 	bl	8002580 <_ZN8touchgfx6WidgetC1Ev>
 8002b9c:	4b97      	ldr	r3, [pc, #604]	; (8002dfc <_ZN24Calibration_HallViewBaseC1Ev+0x2b4>)
 8002b9e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002ba0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002ba4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8002ba8:	a90a      	add	r1, sp, #40	; 0x28
 8002baa:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8002bae:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8002bb0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002bb4:	f00f fcab 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002bb8:	4658      	mov	r0, fp
 8002bba:	f00f fde9 	bl	8012790 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002bbe:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8002bc2:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8002bc6:	4618      	mov	r0, r3
 8002bc8:	ee08 3a90 	vmov	s17, r3
 8002bcc:	f7ff fcea 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8002bd0:	4638      	mov	r0, r7
 8002bd2:	f00e fb65 	bl	80112a0 <_ZN8touchgfx4LineC1Ev>
 8002bd6:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002bda:	4618      	mov	r0, r3
 8002bdc:	9303      	str	r3, [sp, #12]
 8002bde:	f7fe fb6f 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002be2:	4b87      	ldr	r3, [pc, #540]	; (8002e00 <_ZN24Calibration_HallViewBaseC1Ev+0x2b8>)
 8002be4:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8002be8:	3324      	adds	r3, #36	; 0x24
 8002bea:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8002bee:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8002bf2:	4618      	mov	r0, r3
 8002bf4:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8002bf8:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8002bfc:	ee08 3a10 	vmov	s16, r3
 8002c00:	f7ff fcd0 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8002c04:	4650      	mov	r0, sl
 8002c06:	f7ff fccd 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002c0a:	4a7e      	ldr	r2, [pc, #504]	; (8002e04 <_ZN24Calibration_HallViewBaseC1Ev+0x2bc>)
 8002c0c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002c10:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8002c14:	4a7c      	ldr	r2, [pc, #496]	; (8002e08 <_ZN24Calibration_HallViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002c16:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002c1a:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8002c1e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8002c22:	f010 fc71 	bl	8013508 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002c26:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002c2a:	462a      	mov	r2, r5
 8002c2c:	4648      	mov	r0, r9
 8002c2e:	9300      	str	r3, [sp, #0]
 8002c30:	4629      	mov	r1, r5
 8002c32:	23f0      	movs	r3, #240	; 0xf0
 8002c34:	f7ff fc90 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002c38:	1d26      	adds	r6, r4, #4
        color = newColor;
 8002c3a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002c3e:	66a3      	str	r3, [r4, #104]	; 0x68
 8002c40:	4649      	mov	r1, r9
 8002c42:	4630      	mov	r0, r6
 8002c44:	f00c fed4 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002c48:	462a      	mov	r2, r5
 8002c4a:	4640      	mov	r0, r8
 8002c4c:	4629      	mov	r1, r5
 8002c4e:	f7ff fc76 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8002c52:	f04f 0909 	mov.w	r9, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002c56:	4640      	mov	r0, r8
 8002c58:	a90a      	add	r1, sp, #40	; 0x28
 8002c5a:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8002c5e:	f00f fc56 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002c62:	4641      	mov	r1, r8
 8002c64:	4630      	mov	r0, r6
 8002c66:	f00c fec3 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8002c6a:	4658      	mov	r0, fp
 8002c6c:	f240 1201 	movw	r2, #257	; 0x101
 8002c70:	2121      	movs	r1, #33	; 0x21
 8002c72:	f7ff fc64 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8002c76:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002c78:	aa0a      	add	r2, sp, #40	; 0x28
 8002c7a:	a909      	add	r1, sp, #36	; 0x24
 8002c7c:	4658      	mov	r0, fp
 8002c7e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002c82:	2302      	movs	r3, #2
 8002c84:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002c88:	f00f fa4b 	bl	8012122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 8002c8c:	4658      	mov	r0, fp
 8002c8e:	f8a4 90d0 	strh.w	r9, [r4, #208]	; 0xd0
 8002c92:	f7ff fca9 	bl	80025e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8002c96:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8002c9a:	330c      	adds	r3, #12
        color = col;
 8002c9c:	f04f 39ff 	mov.w	r9, #4294967295
 8002ca0:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8002ca4:	4659      	mov	r1, fp
 8002ca6:	4630      	mov	r0, r6
        colorPressed = col;
 8002ca8:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8002cac:	f00c fea0 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002cb0:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(32, 60);
 8002cb4:	223c      	movs	r2, #60	; 0x3c
 8002cb6:	ee18 0a90 	vmov	r0, s17
 8002cba:	2120      	movs	r1, #32
 8002cbc:	f7ff fc3f 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8002cc0:	ee18 1a90 	vmov	r1, s17
 8002cc4:	4640      	mov	r0, r8
        color = newColor;
 8002cc6:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8002cca:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8002cce:	f00e fda9 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002cd2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002cd6:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8002cda:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8002cde:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8002e0c <_ZN24Calibration_HallViewBaseC1Ev+0x2c4>
 8002ce2:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002ce6:	230a      	movs	r3, #10
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AQKY));
 8002ce8:	ee18 0a90 	vmov	r0, s17
 8002cec:	a90a      	add	r1, sp, #40	; 0x28
 8002cee:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002cf2:	f00f f831 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002cf6:	ee18 1a90 	vmov	r1, s17
 8002cfa:	4630      	mov	r0, r6
 8002cfc:	f00c fe78 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002d00:	230a      	movs	r3, #10
 8002d02:	9300      	str	r3, [sp, #0]
 8002d04:	2232      	movs	r2, #50	; 0x32
 8002d06:	23f0      	movs	r3, #240	; 0xf0
 8002d08:	4629      	mov	r1, r5
 8002d0a:	4638      	mov	r0, r7
 8002d0c:	f7ff fc24 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002d10:	9b03      	ldr	r3, [sp, #12]
 8002d12:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002d16:	22a0      	movs	r2, #160	; 0xa0
 8002d18:	4611      	mov	r1, r2
 8002d1a:	4638      	mov	r0, r7
 8002d1c:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002d20:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8002d24:	f00e fbd2 	bl	80114cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002d28:	22a0      	movs	r2, #160	; 0xa0
 8002d2a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002d2e:	4638      	mov	r0, r7
 8002d30:	f00e fbd7 	bl	80114e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8002d34:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8002d38:	2b20      	cmp	r3, #32
 8002d3a:	d005      	beq.n	8002d48 <_ZN24Calibration_HallViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8002d3c:	2320      	movs	r3, #32
 8002d3e:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8002d42:	4638      	mov	r0, r7
 8002d44:	f00e facc 	bl	80112e0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002d48:	4638      	mov	r0, r7
 8002d4a:	2101      	movs	r1, #1
 8002d4c:	f00e fbd4 	bl	80114f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8002d50:	4639      	mov	r1, r7
 8002d52:	4630      	mov	r0, r6
 8002d54:	f00c fe4c 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8002d58:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8002d5c:	ee18 0a10 	vmov	r0, s16
 8002d60:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8002d62:	2500      	movs	r5, #0
 8002d64:	2145      	movs	r1, #69	; 0x45
 8002d66:	f7ff fbea 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002d6a:	ee18 1a10 	vmov	r1, s16
 8002d6e:	4640      	mov	r0, r8
        color = newColor;
 8002d70:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8002d74:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8002d78:	f00e fd54 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002d7c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002d80:	ee18 3a10 	vmov	r3, s16
 8002d84:	333c      	adds	r3, #60	; 0x3c
 8002d86:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002d8a:	230b      	movs	r3, #11
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4V7Y));
 8002d8c:	ee18 0a10 	vmov	r0, s16
 8002d90:	a90a      	add	r1, sp, #40	; 0x28
 8002d92:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002d96:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002d9a:	f00e ffdd 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002d9e:	ee18 1a10 	vmov	r1, s16
 8002da2:	4630      	mov	r0, r6
 8002da4:	f00c fe24 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8002da8:	220c      	movs	r2, #12
 8002daa:	4650      	mov	r0, sl
 8002dac:	2136      	movs	r1, #54	; 0x36
 8002dae:	f7ff fbc6 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8002db2:	4651      	mov	r1, sl
 8002db4:	4640      	mov	r0, r8
        color = newColor;
 8002db6:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8002dba:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8002dbe:	f00e fd31 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002dc2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002dc6:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8002dca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002dce:	230c      	movs	r3, #12
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TVZ0));
 8002dd0:	a90a      	add	r1, sp, #40	; 0x28
 8002dd2:	4650      	mov	r0, sl
 8002dd4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002dd8:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002ddc:	f00e ffbc 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002de0:	4630      	mov	r0, r6
 8002de2:	4651      	mov	r1, sl
 8002de4:	f00c fe04 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002de8:	4620      	mov	r0, r4
 8002dea:	b00d      	add	sp, #52	; 0x34
 8002dec:	ecbd 8b02 	vpop	{d8}
 8002df0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002df4:	0802a2d0 	.word	0x0802a2d0
 8002df8:	0802cb14 	.word	0x0802cb14
 8002dfc:	0802ccdc 	.word	0x0802ccdc
 8002e00:	0802c848 	.word	0x0802c848
 8002e04:	0802a2b8 	.word	0x0802a2b8
 8002e08:	08002b31 	.word	0x08002b31
 8002e0c:	0802a1cc 	.word	0x0802a1cc

08002e10 <_ZN23Calibration_PadViewBase11setupScreenEv>:
}

void Calibration_PadViewBase::setupScreen()
{

}
 8002e10:	4770      	bx	lr

08002e12 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002e12:	4770      	bx	lr

08002e14 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002e14:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002e16:	68c2      	ldr	r2, [r0, #12]
 8002e18:	6844      	ldr	r4, [r0, #4]
 8002e1a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002e1c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002e1e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002e22:	07d2      	lsls	r2, r2, #31
 8002e24:	bf48      	it	mi
 8002e26:	5962      	ldrmi	r2, [r4, r5]
 8002e28:	689b      	ldr	r3, [r3, #8]
    }
 8002e2a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002e2c:	bf48      	it	mi
 8002e2e:	58d3      	ldrmi	r3, [r2, r3]
 8002e30:	4718      	bx	r3

08002e32 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002e32:	6843      	ldr	r3, [r0, #4]
 8002e34:	b12b      	cbz	r3, 8002e42 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002e36:	6883      	ldr	r3, [r0, #8]
 8002e38:	b92b      	cbnz	r3, 8002e46 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002e3a:	68c0      	ldr	r0, [r0, #12]
 8002e3c:	f000 0001 	and.w	r0, r0, #1
 8002e40:	4770      	bx	lr
 8002e42:	4618      	mov	r0, r3
 8002e44:	4770      	bx	lr
 8002e46:	2001      	movs	r0, #1
    }
 8002e48:	4770      	bx	lr

08002e4a <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002e4a:	b510      	push	{r4, lr}
 8002e4c:	2110      	movs	r1, #16
 8002e4e:	4604      	mov	r4, r0
 8002e50:	f024 fdc5 	bl	80279de <_ZdlPvj>
 8002e54:	4620      	mov	r0, r4
 8002e56:	bd10      	pop	{r4, pc}

08002e58 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002e58:	b510      	push	{r4, lr}
 8002e5a:	4b03      	ldr	r3, [pc, #12]	; (8002e68 <_ZN23Calibration_PadViewBaseD1Ev+0x10>)
 8002e5c:	6003      	str	r3, [r0, #0]
 8002e5e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002e60:	f010 fb5c 	bl	801351c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002e64:	4620      	mov	r0, r4
 8002e66:	bd10      	pop	{r4, pc}
 8002e68:	0802a31c 	.word	0x0802a31c

08002e6c <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002e6c:	b507      	push	{r0, r1, r2, lr}
 8002e6e:	4b07      	ldr	r3, [pc, #28]	; (8002e8c <_ZN23Calibration_PadViewBaseD0Ev+0x20>)
 8002e70:	6003      	str	r3, [r0, #0]
 8002e72:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002e74:	f010 fb52 	bl	801351c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002e78:	9801      	ldr	r0, [sp, #4]
 8002e7a:	f241 015c 	movw	r1, #4188	; 0x105c
 8002e7e:	f024 fdae 	bl	80279de <_ZdlPvj>
 8002e82:	9801      	ldr	r0, [sp, #4]
 8002e84:	b003      	add	sp, #12
 8002e86:	f85d fb04 	ldr.w	pc, [sp], #4
 8002e8a:	bf00      	nop
 8002e8c:	0802a31c 	.word	0x0802a31c

08002e90 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_PadViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002e90:	3098      	adds	r0, #152	; 0x98
 8002e92:	4288      	cmp	r0, r1
{
 8002e94:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8002e96:	d105      	bne.n	8002ea4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_PadViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002e98:	f012 f842 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8002e9c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8002ea0:	f000 bd04 	b.w	80038ac <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8002ea4:	bd08      	pop	{r3, pc}
	...

08002ea8 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8002ea8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002eac:	ed2d 8b02 	vpush	{d8}
 8002eb0:	4604      	mov	r4, r0
 8002eb2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 8002eb4:	46a1      	mov	r9, r4
 8002eb6:	2500      	movs	r5, #0
 8002eb8:	f013 fcb2 	bl	8016820 <_ZN8touchgfx6ScreenC1Ev>
 8002ebc:	4ba5      	ldr	r3, [pc, #660]	; (8003154 <_ZN23Calibration_PadViewBaseC1Ev+0x2ac>)
 8002ebe:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002ec0:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8002ec4:	2226      	movs	r2, #38	; 0x26
 8002ec6:	4629      	mov	r1, r5
 8002ec8:	4648      	mov	r0, r9
 8002eca:	f025 fd7e 	bl	80289ca <memset>
 8002ece:	4648      	mov	r0, r9
 8002ed0:	f7ff fb56 	bl	8002580 <_ZN8touchgfx6WidgetC1Ev>
 8002ed4:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002ed8:	26ff      	movs	r6, #255	; 0xff
 8002eda:	4b9f      	ldr	r3, [pc, #636]	; (8003158 <_ZN23Calibration_PadViewBaseC1Ev+0x2b0>)
 8002edc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8002ede:	2226      	movs	r2, #38	; 0x26
 8002ee0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002ee4:	4629      	mov	r1, r5
 8002ee6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002eea:	4640      	mov	r0, r8
 8002eec:	66a5      	str	r5, [r4, #104]	; 0x68
 8002eee:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002ef2:	f025 fd6a 	bl	80289ca <memset>
 8002ef6:	4640      	mov	r0, r8
 8002ef8:	f7ff fb42 	bl	8002580 <_ZN8touchgfx6WidgetC1Ev>
 8002efc:	4b97      	ldr	r3, [pc, #604]	; (800315c <_ZN23Calibration_PadViewBaseC1Ev+0x2b4>)
 8002efe:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002f00:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002f04:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8002f08:	a90a      	add	r1, sp, #40	; 0x28
 8002f0a:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8002f0e:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8002f10:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002f14:	f00f fafb 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002f18:	4658      	mov	r0, fp
 8002f1a:	f00f fc39 	bl	8012790 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002f1e:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8002f22:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8002f26:	4618      	mov	r0, r3
 8002f28:	ee08 3a90 	vmov	s17, r3
 8002f2c:	f7ff fb3a 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8002f30:	4638      	mov	r0, r7
 8002f32:	f00e f9b5 	bl	80112a0 <_ZN8touchgfx4LineC1Ev>
 8002f36:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002f3a:	4618      	mov	r0, r3
 8002f3c:	9303      	str	r3, [sp, #12]
 8002f3e:	f7fe f9bf 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002f42:	4b87      	ldr	r3, [pc, #540]	; (8003160 <_ZN23Calibration_PadViewBaseC1Ev+0x2b8>)
 8002f44:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8002f48:	3324      	adds	r3, #36	; 0x24
 8002f4a:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8002f4e:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8002f52:	4618      	mov	r0, r3
 8002f54:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8002f58:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8002f5c:	ee08 3a10 	vmov	s16, r3
 8002f60:	f7ff fb20 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8002f64:	4650      	mov	r0, sl
 8002f66:	f7ff fb1d 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002f6a:	4a7e      	ldr	r2, [pc, #504]	; (8003164 <_ZN23Calibration_PadViewBaseC1Ev+0x2bc>)
 8002f6c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002f70:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8002f74:	4a7c      	ldr	r2, [pc, #496]	; (8003168 <_ZN23Calibration_PadViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002f76:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002f7a:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8002f7e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8002f82:	f010 fac1 	bl	8013508 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002f86:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002f8a:	462a      	mov	r2, r5
 8002f8c:	4648      	mov	r0, r9
 8002f8e:	9300      	str	r3, [sp, #0]
 8002f90:	4629      	mov	r1, r5
 8002f92:	23f0      	movs	r3, #240	; 0xf0
 8002f94:	f7ff fae0 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002f98:	1d26      	adds	r6, r4, #4
        color = newColor;
 8002f9a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002f9e:	66a3      	str	r3, [r4, #104]	; 0x68
 8002fa0:	4649      	mov	r1, r9
 8002fa2:	4630      	mov	r0, r6
 8002fa4:	f00c fd24 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002fa8:	462a      	mov	r2, r5
 8002faa:	4640      	mov	r0, r8
 8002fac:	4629      	mov	r1, r5
 8002fae:	f7ff fac6 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8002fb2:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002fb4:	4640      	mov	r0, r8
 8002fb6:	a90a      	add	r1, sp, #40	; 0x28
 8002fb8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002fbc:	f00f faa7 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002fc0:	4641      	mov	r1, r8
 8002fc2:	4630      	mov	r0, r6
 8002fc4:	f00c fd14 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8002fc8:	4658      	mov	r0, fp
 8002fca:	f240 1201 	movw	r2, #257	; 0x101
 8002fce:	2121      	movs	r1, #33	; 0x21
 8002fd0:	f7ff fab5 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8002fd4:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002fd6:	aa0a      	add	r2, sp, #40	; 0x28
 8002fd8:	a909      	add	r1, sp, #36	; 0x24
 8002fda:	4658      	mov	r0, fp
 8002fdc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002fe0:	2302      	movs	r3, #2
 8002fe2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002fe6:	f00f f89c 	bl	8012122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002fea:	230f      	movs	r3, #15
        updateTextPosition();
 8002fec:	4658      	mov	r0, fp
 8002fee:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8002ff2:	f7ff faf9 	bl	80025e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8002ff6:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8002ffa:	330c      	adds	r3, #12
        color = col;
 8002ffc:	f04f 39ff 	mov.w	r9, #4294967295
 8003000:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8003004:	4659      	mov	r1, fp
 8003006:	4630      	mov	r0, r6
        colorPressed = col;
 8003008:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 800300c:	f00c fcf0 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003010:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(58, 60);
 8003014:	223c      	movs	r2, #60	; 0x3c
 8003016:	ee18 0a90 	vmov	r0, s17
 800301a:	213a      	movs	r1, #58	; 0x3a
 800301c:	f7ff fa8f 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8003020:	ee18 1a90 	vmov	r1, s17
 8003024:	4640      	mov	r0, r8
        color = newColor;
 8003026:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 800302a:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800302e:	f00e fbf9 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003032:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003036:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 800303a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800303e:	f8df b12c 	ldr.w	fp, [pc, #300]	; 800316c <_ZN23Calibration_PadViewBaseC1Ev+0x2c4>
 8003042:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003046:	230e      	movs	r3, #14
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8003048:	ee18 0a90 	vmov	r0, s17
 800304c:	a90a      	add	r1, sp, #40	; 0x28
 800304e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003052:	f00e fe81 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003056:	ee18 1a90 	vmov	r1, s17
 800305a:	4630      	mov	r0, r6
 800305c:	f00c fcc8 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8003060:	230a      	movs	r3, #10
 8003062:	9300      	str	r3, [sp, #0]
 8003064:	2232      	movs	r2, #50	; 0x32
 8003066:	23f0      	movs	r3, #240	; 0xf0
 8003068:	4629      	mov	r1, r5
 800306a:	4638      	mov	r0, r7
 800306c:	f7ff fa74 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003070:	9b03      	ldr	r3, [sp, #12]
 8003072:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003076:	22a0      	movs	r2, #160	; 0xa0
 8003078:	4611      	mov	r1, r2
 800307a:	4638      	mov	r0, r7
 800307c:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003080:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8003084:	f00e fa22 	bl	80114cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003088:	22a0      	movs	r2, #160	; 0xa0
 800308a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800308e:	4638      	mov	r0, r7
 8003090:	f00e fa27 	bl	80114e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8003094:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8003098:	2b20      	cmp	r3, #32
 800309a:	d005      	beq.n	80030a8 <_ZN23Calibration_PadViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 800309c:	2320      	movs	r3, #32
 800309e:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 80030a2:	4638      	mov	r0, r7
 80030a4:	f00e f91c 	bl	80112e0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80030a8:	4638      	mov	r0, r7
 80030aa:	2101      	movs	r1, #1
 80030ac:	f00e fa24 	bl	80114f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80030b0:	4639      	mov	r1, r7
 80030b2:	4630      	mov	r0, r6
 80030b4:	f00c fc9c 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80030b8:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 80030bc:	ee18 0a10 	vmov	r0, s16
 80030c0:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80030c2:	2500      	movs	r5, #0
 80030c4:	2145      	movs	r1, #69	; 0x45
 80030c6:	f7ff fa3a 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80030ca:	ee18 1a10 	vmov	r1, s16
 80030ce:	4640      	mov	r0, r8
        color = newColor;
 80030d0:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 80030d4:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80030d8:	f00e fba4 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80030dc:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80030e0:	ee18 3a10 	vmov	r3, s16
 80030e4:	333c      	adds	r3, #60	; 0x3c
 80030e6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80030ea:	2310      	movs	r3, #16
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 80030ec:	ee18 0a10 	vmov	r0, s16
 80030f0:	a90a      	add	r1, sp, #40	; 0x28
 80030f2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80030f6:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80030fa:	f00e fe2d 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80030fe:	ee18 1a10 	vmov	r1, s16
 8003102:	4630      	mov	r0, r6
 8003104:	f00c fc74 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8003108:	220c      	movs	r2, #12
 800310a:	4650      	mov	r0, sl
 800310c:	2136      	movs	r1, #54	; 0x36
 800310e:	f7ff fa16 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8003112:	4651      	mov	r1, sl
 8003114:	4640      	mov	r0, r8
        color = newColor;
 8003116:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 800311a:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 800311e:	f00e fb81 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003122:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003126:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800312a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800312e:	2311      	movs	r3, #17
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 8003130:	a90a      	add	r1, sp, #40	; 0x28
 8003132:	4650      	mov	r0, sl
 8003134:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003138:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800313c:	f00e fe0c 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003140:	4630      	mov	r0, r6
 8003142:	4651      	mov	r1, sl
 8003144:	f00c fc54 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003148:	4620      	mov	r0, r4
 800314a:	b00d      	add	sp, #52	; 0x34
 800314c:	ecbd 8b02 	vpop	{d8}
 8003150:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003154:	0802a31c 	.word	0x0802a31c
 8003158:	0802cb14 	.word	0x0802cb14
 800315c:	0802ccdc 	.word	0x0802ccdc
 8003160:	0802c848 	.word	0x0802c848
 8003164:	0802a304 	.word	0x0802a304
 8003168:	08002e91 	.word	0x08002e91
 800316c:	0802a1cc 	.word	0x0802a1cc

08003170 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8003170:	4770      	bx	lr

08003172 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8003172:	4770      	bx	lr

08003174 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8003174:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8003178:	6808      	ldr	r0, [r1, #0]
 800317a:	6849      	ldr	r1, [r1, #4]
 800317c:	c303      	stmia	r3!, {r0, r1}
    }
 800317e:	4770      	bx	lr

08003180 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8003180:	4770      	bx	lr

08003182 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8003182:	4770      	bx	lr

08003184 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8003184:	6041      	str	r1, [r0, #4]
    }
 8003186:	4770      	bx	lr

08003188 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8003188:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800318a:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 800318c:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8003190:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003194:	8002      	strh	r2, [r0, #0]
 8003196:	8042      	strh	r2, [r0, #2]
 8003198:	8084      	strh	r4, [r0, #4]
 800319a:	80c1      	strh	r1, [r0, #6]
        }
 800319c:	bd10      	pop	{r4, pc}

0800319e <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 800319e:	4770      	bx	lr

080031a0 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80031a0:	4770      	bx	lr
	...

080031a4 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80031a4:	4b06      	ldr	r3, [pc, #24]	; (80031c0 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80031a6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80031aa:	2300      	movs	r3, #0
 80031ac:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80031b0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80031b4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80031b8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 80031bc:	4770      	bx	lr
 80031be:	bf00      	nop
 80031c0:	08003561 	.word	0x08003561

080031c4 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80031c4:	2301      	movs	r3, #1
 80031c6:	7203      	strb	r3, [r0, #8]
    }
 80031c8:	4770      	bx	lr

080031ca <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 80031ca:	4770      	bx	lr

080031cc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 80031cc:	4770      	bx	lr

080031ce <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 80031ce:	4770      	bx	lr

080031d0 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80031d0:	4770      	bx	lr

080031d2 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80031d2:	4770      	bx	lr

080031d4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 80031d4:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 80031d6:	6840      	ldr	r0, [r0, #4]
 80031d8:	6803      	ldr	r3, [r0, #0]
 80031da:	3110      	adds	r1, #16
 80031dc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80031de:	4718      	bx	r3

080031e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 80031e0:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 80031e2:	6840      	ldr	r0, [r0, #4]
 80031e4:	6803      	ldr	r3, [r0, #0]
 80031e6:	3110      	adds	r1, #16
 80031e8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80031ea:	4718      	bx	r3

080031ec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 80031ec:	4770      	bx	lr

080031ee <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 80031ee:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 80031f0:	6840      	ldr	r0, [r0, #4]
 80031f2:	6803      	ldr	r3, [r0, #0]
 80031f4:	3110      	adds	r1, #16
 80031f6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80031f8:	4718      	bx	r3

080031fa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 80031fa:	4601      	mov	r1, r0
        screenContainer->add(solid);
 80031fc:	6840      	ldr	r0, [r0, #4]
 80031fe:	6803      	ldr	r3, [r0, #0]
 8003200:	3110      	adds	r1, #16
 8003202:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003204:	4718      	bx	r3

08003206 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8003206:	4770      	bx	lr

08003208 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8003208:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800320a:	68c2      	ldr	r2, [r0, #12]
 800320c:	6841      	ldr	r1, [r0, #4]
 800320e:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8003210:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8003212:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8003216:	07d2      	lsls	r2, r2, #31
 8003218:	bf48      	it	mi
 800321a:	590a      	ldrmi	r2, [r1, r4]
 800321c:	689b      	ldr	r3, [r3, #8]
    }
 800321e:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8003222:	bf48      	it	mi
 8003224:	58d3      	ldrmi	r3, [r2, r3]
 8003226:	4718      	bx	r3

08003228 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8003228:	6843      	ldr	r3, [r0, #4]
 800322a:	b12b      	cbz	r3, 8003238 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 800322c:	6883      	ldr	r3, [r0, #8]
 800322e:	b92b      	cbnz	r3, 800323c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8003230:	68c0      	ldr	r0, [r0, #12]
 8003232:	f000 0001 	and.w	r0, r0, #1
 8003236:	4770      	bx	lr
 8003238:	4618      	mov	r0, r3
 800323a:	4770      	bx	lr
 800323c:	2001      	movs	r0, #1
    }
 800323e:	4770      	bx	lr

08003240 <_ZN8touchgfx12NoTransitionD0Ev>:
 8003240:	b510      	push	{r4, lr}
 8003242:	210c      	movs	r1, #12
 8003244:	4604      	mov	r4, r0
 8003246:	f024 fbca 	bl	80279de <_ZdlPvj>
 800324a:	4620      	mov	r0, r4
 800324c:	bd10      	pop	{r4, pc}

0800324e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800324e:	b510      	push	{r4, lr}
 8003250:	2110      	movs	r1, #16
 8003252:	4604      	mov	r4, r0
 8003254:	f024 fbc3 	bl	80279de <_ZdlPvj>
 8003258:	4620      	mov	r0, r4
 800325a:	bd10      	pop	{r4, pc}

0800325c <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 800325c:	b510      	push	{r4, lr}
 800325e:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8003262:	4604      	mov	r4, r0
 8003264:	f024 fbbb 	bl	80279de <_ZdlPvj>
 8003268:	4620      	mov	r0, r4
 800326a:	bd10      	pop	{r4, pc}

0800326c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 800326c:	b510      	push	{r4, lr}
 800326e:	2138      	movs	r1, #56	; 0x38
 8003270:	4604      	mov	r4, r0
 8003272:	f024 fbb4 	bl	80279de <_ZdlPvj>
 8003276:	4620      	mov	r0, r4
 8003278:	bd10      	pop	{r4, pc}

0800327a <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 800327a:	b510      	push	{r4, lr}
 800327c:	2128      	movs	r1, #40	; 0x28
 800327e:	4604      	mov	r4, r0
 8003280:	f024 fbad 	bl	80279de <_ZdlPvj>
 8003284:	4620      	mov	r0, r4
 8003286:	bd10      	pop	{r4, pc}

08003288 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 8003288:	b510      	push	{r4, lr}
 800328a:	2138      	movs	r1, #56	; 0x38
 800328c:	4604      	mov	r4, r0
 800328e:	f024 fba6 	bl	80279de <_ZdlPvj>
 8003292:	4620      	mov	r0, r4
 8003294:	bd10      	pop	{r4, pc}

08003296 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8003296:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8003298:	f011 fe42 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
 800329c:	6803      	ldr	r3, [r0, #0]
    }
 800329e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80032a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80032a4:	4718      	bx	r3
	...

080032a8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80032a8:	b513      	push	{r0, r1, r4, lr}
 80032aa:	4604      	mov	r4, r0
        animationCounter++;
 80032ac:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80032ae:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80032b0:	3001      	adds	r0, #1
 80032b2:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80032b4:	4298      	cmp	r0, r3
        animationCounter++;
 80032b6:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80032b8:	d905      	bls.n	80032c6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 80032ba:	2301      	movs	r3, #1
 80032bc:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80032be:	2300      	movs	r3, #0
 80032c0:	72a3      	strb	r3, [r4, #10]
    }
 80032c2:	b002      	add	sp, #8
 80032c4:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80032c6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80032ca:	2100      	movs	r1, #0
 80032cc:	f013 fc5a 	bl	8016b84 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 80032d0:	f010 0201 	ands.w	r2, r0, #1
 80032d4:	b283      	uxth	r3, r0
 80032d6:	d12a      	bne.n	800332e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80032d8:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80032da:	4a19      	ldr	r2, [pc, #100]	; (8003340 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 80032dc:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 80032e0:	89e3      	ldrh	r3, [r4, #14]
 80032e2:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 80032e4:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 80032e8:	82a0      	strh	r0, [r4, #20]
 80032ea:	2000      	movs	r0, #0
 80032ec:	1ad2      	subs	r2, r2, r3
 80032ee:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 80032f2:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 80032f4:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 80032f6:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 80032f8:	4a12      	ldr	r2, [pc, #72]	; (8003344 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 80032fa:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 80032fe:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8003300:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 8003304:	691b      	ldr	r3, [r3, #16]
 8003306:	f8ad 1000 	strh.w	r1, [sp]
 800330a:	f8ad 2006 	strh.w	r2, [sp, #6]
 800330e:	4669      	mov	r1, sp
 8003310:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8003312:	7aa3      	ldrb	r3, [r4, #10]
 8003314:	2b01      	cmp	r3, #1
 8003316:	d1d4      	bne.n	80032c2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8003318:	4b0b      	ldr	r3, [pc, #44]	; (8003348 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 800331a:	781b      	ldrb	r3, [r3, #0]
 800331c:	2b00      	cmp	r3, #0
 800331e:	d0d0      	beq.n	80032c2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003320:	f011 fdfe 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003324:	b002      	add	sp, #8
 8003326:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800332a:	f011 bdff 	b.w	8014f2c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800332e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8003332:	2800      	cmp	r0, #0
 8003334:	bfd8      	it	le
 8003336:	460a      	movle	r2, r1
 8003338:	4413      	add	r3, r2
 800333a:	81e3      	strh	r3, [r4, #14]
 800333c:	e7cd      	b.n	80032da <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 800333e:	bf00      	nop
 8003340:	200137c8 	.word	0x200137c8
 8003344:	200137ca 	.word	0x200137ca
 8003348:	200137d2 	.word	0x200137d2

0800334c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800334c:	b510      	push	{r4, lr}
 800334e:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8003350:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8003354:	b158      	cbz	r0, 800336e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8003356:	6803      	ldr	r3, [r0, #0]
 8003358:	68db      	ldr	r3, [r3, #12]
 800335a:	4798      	blx	r3
 800335c:	b138      	cbz	r0, 800336e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800335e:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 8003362:	6803      	ldr	r3, [r0, #0]
 8003364:	689b      	ldr	r3, [r3, #8]
 8003366:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8003368:	2300      	movs	r3, #0
 800336a:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 800336e:	bd10      	pop	{r4, pc}

08003370 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 8003370:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003374:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8003378:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800337a:	68a8      	ldr	r0, [r5, #8]
 800337c:	6803      	ldr	r3, [r0, #0]
 800337e:	6a1b      	ldr	r3, [r3, #32]
 8003380:	4798      	blx	r3
 8003382:	2897      	cmp	r0, #151	; 0x97
 8003384:	d805      	bhi.n	8003392 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 8003386:	4b46      	ldr	r3, [pc, #280]	; (80034a0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 8003388:	4a46      	ldr	r2, [pc, #280]	; (80034a4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 800338a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800338c:	4846      	ldr	r0, [pc, #280]	; (80034a8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 800338e:	f025 f917 	bl	80285c0 <__assert_func>
 8003392:	6868      	ldr	r0, [r5, #4]
 8003394:	6803      	ldr	r3, [r0, #0]
 8003396:	6a1b      	ldr	r3, [r3, #32]
 8003398:	4798      	blx	r3
 800339a:	280f      	cmp	r0, #15
 800339c:	d803      	bhi.n	80033a6 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 800339e:	4b43      	ldr	r3, [pc, #268]	; (80034ac <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 80033a0:	4a40      	ldr	r2, [pc, #256]	; (80034a4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80033a2:	21a4      	movs	r1, #164	; 0xa4
 80033a4:	e7f2      	b.n	800338c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80033a6:	68e8      	ldr	r0, [r5, #12]
 80033a8:	6803      	ldr	r3, [r0, #0]
 80033aa:	6a1b      	ldr	r3, [r3, #32]
 80033ac:	4798      	blx	r3
 80033ae:	280b      	cmp	r0, #11
 80033b0:	d803      	bhi.n	80033ba <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 80033b2:	4b3f      	ldr	r3, [pc, #252]	; (80034b0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 80033b4:	4a3b      	ldr	r2, [pc, #236]	; (80034a4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80033b6:	21a5      	movs	r1, #165	; 0xa5
 80033b8:	e7e8      	b.n	800338c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 80033ba:	f011 fdb1 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80033be:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80034b8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80033c2:	3004      	adds	r0, #4
 80033c4:	f011 fe12 	bl	8014fec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80033c8:	f8d9 0000 	ldr.w	r0, [r9]
 80033cc:	b110      	cbz	r0, 80033d4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80033ce:	6803      	ldr	r3, [r0, #0]
 80033d0:	68db      	ldr	r3, [r3, #12]
 80033d2:	4798      	blx	r3
    if (*currentTrans)
 80033d4:	f8d9 0000 	ldr.w	r0, [r9]
 80033d8:	b110      	cbz	r0, 80033e0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80033da:	6803      	ldr	r3, [r0, #0]
 80033dc:	681b      	ldr	r3, [r3, #0]
 80033de:	4798      	blx	r3
    if (*currentScreen)
 80033e0:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80034bc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 80033e4:	f8d8 0000 	ldr.w	r0, [r8]
 80033e8:	b110      	cbz	r0, 80033f0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80033ea:	6803      	ldr	r3, [r0, #0]
 80033ec:	695b      	ldr	r3, [r3, #20]
 80033ee:	4798      	blx	r3
    if (*currentPresenter)
 80033f0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80033f4:	b110      	cbz	r0, 80033fc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80033f6:	6803      	ldr	r3, [r0, #0]
 80033f8:	685b      	ldr	r3, [r3, #4]
 80033fa:	4798      	blx	r3
    if (*currentScreen)
 80033fc:	f8d8 0000 	ldr.w	r0, [r8]
 8003400:	b110      	cbz	r0, 8003408 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8003402:	6803      	ldr	r3, [r0, #0]
 8003404:	681b      	ldr	r3, [r3, #0]
 8003406:	4798      	blx	r3
    if (*currentPresenter)
 8003408:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800340c:	b110      	cbz	r0, 8003414 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800340e:	6803      	ldr	r3, [r0, #0]
 8003410:	689b      	ldr	r3, [r3, #8]
 8003412:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003414:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8003416:	6803      	ldr	r3, [r0, #0]
 8003418:	2100      	movs	r1, #0
 800341a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800341c:	4798      	blx	r3
        : screenContainer(0), done(false)
 800341e:	f04f 0b00 	mov.w	fp, #0
 8003422:	4b24      	ldr	r3, [pc, #144]	; (80034b4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 8003424:	6003      	str	r3, [r0, #0]
 8003426:	4604      	mov	r4, r0
 8003428:	f8c0 b004 	str.w	fp, [r0, #4]
 800342c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003430:	68a8      	ldr	r0, [r5, #8]
 8003432:	6803      	ldr	r3, [r0, #0]
 8003434:	4659      	mov	r1, fp
 8003436:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003438:	4798      	blx	r3
 800343a:	4606      	mov	r6, r0
 800343c:	f005 fa34 	bl	80088a8 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003440:	6868      	ldr	r0, [r5, #4]
 8003442:	6803      	ldr	r3, [r0, #0]
 8003444:	4659      	mov	r1, fp
 8003446:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003448:	4798      	blx	r3
 800344a:	4631      	mov	r1, r6
 800344c:	4605      	mov	r5, r0
 800344e:	f005 fa07 	bl	8008860 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 8003452:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003456:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800345a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800345e:	b1e5      	cbz	r5, 800349a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 8003460:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8003462:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003466:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8003468:	f8c5 a008 	str.w	sl, [r5, #8]
 800346c:	4630      	mov	r0, r6
 800346e:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8003470:	63f5      	str	r5, [r6, #60]	; 0x3c
 8003472:	4798      	blx	r3
    newPresenter->activate();
 8003474:	682b      	ldr	r3, [r5, #0]
 8003476:	4628      	mov	r0, r5
 8003478:	681b      	ldr	r3, [r3, #0]
 800347a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800347c:	4621      	mov	r1, r4
 800347e:	4630      	mov	r0, r6
 8003480:	f013 fb7a 	bl	8016b78 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003484:	6823      	ldr	r3, [r4, #0]
 8003486:	4620      	mov	r0, r4
 8003488:	691b      	ldr	r3, [r3, #16]
 800348a:	4798      	blx	r3
    newTransition->invalidate();
 800348c:	6823      	ldr	r3, [r4, #0]
 800348e:	695b      	ldr	r3, [r3, #20]
 8003490:	4620      	mov	r0, r4
}
 8003492:	b001      	add	sp, #4
 8003494:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003498:	4718      	bx	r3
    model->bind(newPresenter);
 800349a:	462b      	mov	r3, r5
 800349c:	e7e1      	b.n	8003462 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 800349e:	bf00      	nop
 80034a0:	0802a348 	.word	0x0802a348
 80034a4:	0802a3d6 	.word	0x0802a3d6
 80034a8:	0802a4e4 	.word	0x0802a4e4
 80034ac:	0802a52b 	.word	0x0802a52b
 80034b0:	0802a5ce 	.word	0x0802a5ce
 80034b4:	0802b9ec 	.word	0x0802b9ec
 80034b8:	2001381c 	.word	0x2001381c
 80034bc:	20013818 	.word	0x20013818

080034c0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80034c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80034c2:	4604      	mov	r4, r0
        animationCounter++;
 80034c4:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80034c6:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80034c8:	3001      	adds	r0, #1
 80034ca:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80034cc:	4298      	cmp	r0, r3
        animationCounter++;
 80034ce:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80034d0:	d905      	bls.n	80034de <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 80034d2:	2301      	movs	r3, #1
 80034d4:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80034d6:	2300      	movs	r3, #0
 80034d8:	72a3      	strb	r3, [r4, #10]
    }
 80034da:	b003      	add	sp, #12
 80034dc:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80034de:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80034e2:	2100      	movs	r1, #0
 80034e4:	f013 fb4e 	bl	8016b84 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 80034e8:	f010 0201 	ands.w	r2, r0, #1
 80034ec:	b283      	uxth	r3, r0
 80034ee:	d128      	bne.n	8003542 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80034f0:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80034f2:	4b18      	ldr	r3, [pc, #96]	; (8003554 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80034f4:	4818      	ldr	r0, [pc, #96]	; (8003558 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80034f6:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 80034f8:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80034fa:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80034fc:	f9b0 0000 	ldrsh.w	r0, [r0]
 8003500:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003504:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8003506:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8003508:	442b      	add	r3, r5
 800350a:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800350c:	b212      	sxth	r2, r2
 800350e:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8003512:	6803      	ldr	r3, [r0, #0]
 8003514:	8322      	strh	r2, [r4, #24]
 8003516:	f8ad 2000 	strh.w	r2, [sp]
 800351a:	2200      	movs	r2, #0
 800351c:	691b      	ldr	r3, [r3, #16]
 800351e:	f8ad 2002 	strh.w	r2, [sp, #2]
 8003522:	4669      	mov	r1, sp
 8003524:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8003526:	7aa3      	ldrb	r3, [r4, #10]
 8003528:	2b01      	cmp	r3, #1
 800352a:	d1d6      	bne.n	80034da <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 800352c:	4b0b      	ldr	r3, [pc, #44]	; (800355c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 800352e:	781b      	ldrb	r3, [r3, #0]
 8003530:	2b00      	cmp	r3, #0
 8003532:	d0d2      	beq.n	80034da <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003534:	f011 fcf4 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003538:	b003      	add	sp, #12
 800353a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800353e:	f011 bcf5 	b.w	8014f2c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8003542:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8003546:	2800      	cmp	r0, #0
 8003548:	bfd8      	it	le
 800354a:	460a      	movle	r2, r1
 800354c:	4413      	add	r3, r2
 800354e:	81e3      	strh	r3, [r4, #14]
 8003550:	e7cf      	b.n	80034f2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 8003552:	bf00      	nop
 8003554:	200137c8 	.word	0x200137c8
 8003558:	200137ca 	.word	0x200137ca
 800355c:	200137d2 	.word	0x200137d2

08003560 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 8003560:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003564:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8003568:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800356a:	68a8      	ldr	r0, [r5, #8]
 800356c:	6803      	ldr	r3, [r0, #0]
 800356e:	6a1b      	ldr	r3, [r3, #32]
 8003570:	4798      	blx	r3
 8003572:	f241 137b 	movw	r3, #4475	; 0x117b
 8003576:	4298      	cmp	r0, r3
 8003578:	d805      	bhi.n	8003586 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 800357a:	4b46      	ldr	r3, [pc, #280]	; (8003694 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 800357c:	4a46      	ldr	r2, [pc, #280]	; (8003698 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 800357e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003580:	4846      	ldr	r0, [pc, #280]	; (800369c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 8003582:	f025 f81d 	bl	80285c0 <__assert_func>
 8003586:	6868      	ldr	r0, [r5, #4]
 8003588:	6803      	ldr	r3, [r0, #0]
 800358a:	6a1b      	ldr	r3, [r3, #32]
 800358c:	4798      	blx	r3
 800358e:	280f      	cmp	r0, #15
 8003590:	d803      	bhi.n	800359a <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 8003592:	4b43      	ldr	r3, [pc, #268]	; (80036a0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 8003594:	4a40      	ldr	r2, [pc, #256]	; (8003698 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8003596:	21a4      	movs	r1, #164	; 0xa4
 8003598:	e7f2      	b.n	8003580 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800359a:	68e8      	ldr	r0, [r5, #12]
 800359c:	6803      	ldr	r3, [r0, #0]
 800359e:	6a1b      	ldr	r3, [r3, #32]
 80035a0:	4798      	blx	r3
 80035a2:	280b      	cmp	r0, #11
 80035a4:	d803      	bhi.n	80035ae <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 80035a6:	4b3f      	ldr	r3, [pc, #252]	; (80036a4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 80035a8:	4a3b      	ldr	r2, [pc, #236]	; (8003698 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80035aa:	21a5      	movs	r1, #165	; 0xa5
 80035ac:	e7e8      	b.n	8003580 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80035ae:	f011 fcb7 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80035b2:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80036ac <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 80035b6:	3004      	adds	r0, #4
 80035b8:	f011 fd18 	bl	8014fec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80035bc:	f8d9 0000 	ldr.w	r0, [r9]
 80035c0:	b110      	cbz	r0, 80035c8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 80035c2:	6803      	ldr	r3, [r0, #0]
 80035c4:	68db      	ldr	r3, [r3, #12]
 80035c6:	4798      	blx	r3
    if (*currentTrans)
 80035c8:	f8d9 0000 	ldr.w	r0, [r9]
 80035cc:	b110      	cbz	r0, 80035d4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 80035ce:	6803      	ldr	r3, [r0, #0]
 80035d0:	681b      	ldr	r3, [r3, #0]
 80035d2:	4798      	blx	r3
    if (*currentScreen)
 80035d4:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80036b0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 80035d8:	f8d8 0000 	ldr.w	r0, [r8]
 80035dc:	b110      	cbz	r0, 80035e4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80035de:	6803      	ldr	r3, [r0, #0]
 80035e0:	695b      	ldr	r3, [r3, #20]
 80035e2:	4798      	blx	r3
    if (*currentPresenter)
 80035e4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80035e8:	b110      	cbz	r0, 80035f0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 80035ea:	6803      	ldr	r3, [r0, #0]
 80035ec:	685b      	ldr	r3, [r3, #4]
 80035ee:	4798      	blx	r3
    if (*currentScreen)
 80035f0:	f8d8 0000 	ldr.w	r0, [r8]
 80035f4:	b110      	cbz	r0, 80035fc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 80035f6:	6803      	ldr	r3, [r0, #0]
 80035f8:	681b      	ldr	r3, [r3, #0]
 80035fa:	4798      	blx	r3
    if (*currentPresenter)
 80035fc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003600:	b110      	cbz	r0, 8003608 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003602:	6803      	ldr	r3, [r0, #0]
 8003604:	689b      	ldr	r3, [r3, #8]
 8003606:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003608:	68e8      	ldr	r0, [r5, #12]
 800360a:	6803      	ldr	r3, [r0, #0]
 800360c:	2100      	movs	r1, #0
 800360e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003610:	4798      	blx	r3
 8003612:	f04f 0b00 	mov.w	fp, #0
 8003616:	4b24      	ldr	r3, [pc, #144]	; (80036a8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 8003618:	6003      	str	r3, [r0, #0]
 800361a:	4604      	mov	r4, r0
 800361c:	f8c0 b004 	str.w	fp, [r0, #4]
 8003620:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003624:	68a8      	ldr	r0, [r5, #8]
 8003626:	6803      	ldr	r3, [r0, #0]
 8003628:	4659      	mov	r1, fp
 800362a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800362c:	4798      	blx	r3
 800362e:	4606      	mov	r6, r0
 8003630:	f004 fe06 	bl	8008240 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003634:	6868      	ldr	r0, [r5, #4]
 8003636:	6803      	ldr	r3, [r0, #0]
 8003638:	4659      	mov	r1, fp
 800363a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800363c:	4798      	blx	r3
 800363e:	4631      	mov	r1, r6
 8003640:	4605      	mov	r5, r0
 8003642:	f004 fdd7 	bl	80081f4 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8003646:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800364a:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800364e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003652:	b1e5      	cbz	r5, 800368e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 8003654:	1d2b      	adds	r3, r5, #4
 8003656:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800365a:	6833      	ldr	r3, [r6, #0]
 800365c:	f8c5 a008 	str.w	sl, [r5, #8]
 8003660:	4630      	mov	r0, r6
 8003662:	68db      	ldr	r3, [r3, #12]
 8003664:	63f5      	str	r5, [r6, #60]	; 0x3c
 8003666:	4798      	blx	r3
    newPresenter->activate();
 8003668:	682b      	ldr	r3, [r5, #0]
 800366a:	4628      	mov	r0, r5
 800366c:	681b      	ldr	r3, [r3, #0]
 800366e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003670:	4621      	mov	r1, r4
 8003672:	4630      	mov	r0, r6
 8003674:	f013 fa80 	bl	8016b78 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003678:	6823      	ldr	r3, [r4, #0]
 800367a:	4620      	mov	r0, r4
 800367c:	691b      	ldr	r3, [r3, #16]
 800367e:	4798      	blx	r3
    newTransition->invalidate();
 8003680:	6823      	ldr	r3, [r4, #0]
 8003682:	695b      	ldr	r3, [r3, #20]
 8003684:	4620      	mov	r0, r4
}
 8003686:	b001      	add	sp, #4
 8003688:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800368c:	4718      	bx	r3
    model->bind(newPresenter);
 800368e:	462b      	mov	r3, r5
 8003690:	e7e1      	b.n	8003656 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 8003692:	bf00      	nop
 8003694:	0802a348 	.word	0x0802a348
 8003698:	0802a671 	.word	0x0802a671
 800369c:	0802a4e4 	.word	0x0802a4e4
 80036a0:	0802a52b 	.word	0x0802a52b
 80036a4:	0802a5ce 	.word	0x0802a5ce
 80036a8:	0802b9ec 	.word	0x0802b9ec
 80036ac:	2001381c 	.word	0x2001381c
 80036b0:	20013818 	.word	0x20013818

080036b4 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80036b4:	4b04      	ldr	r3, [pc, #16]	; (80036c8 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80036b6:	681b      	ldr	r3, [r3, #0]
 80036b8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80036bc:	b10a      	cbz	r2, 80036c2 <_ZN8touchgfx3HAL3lcdEv+0xe>
 80036be:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80036c0:	b900      	cbnz	r0, 80036c4 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80036c2:	6898      	ldr	r0, [r3, #8]
    }
 80036c4:	4770      	bx	lr
 80036c6:	bf00      	nop
 80036c8:	200137d4 	.word	0x200137d4

080036cc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80036cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80036ce:	4604      	mov	r4, r0
 80036d0:	4617      	mov	r7, r2
 80036d2:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80036d4:	f011 fd58 	bl	8015188 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80036d8:	4b10      	ldr	r3, [pc, #64]	; (800371c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 80036da:	601c      	str	r4, [r3, #0]
      model(m)
 80036dc:	4b10      	ldr	r3, [pc, #64]	; (8003720 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80036de:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 80036e0:	4b10      	ldr	r3, [pc, #64]	; (8003724 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 80036e2:	2500      	movs	r5, #0
 80036e4:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 80036e8:	4b0f      	ldr	r3, [pc, #60]	; (8003728 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 80036ea:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 80036ee:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 80036f0:	6803      	ldr	r3, [r0, #0]
 80036f2:	2101      	movs	r1, #1
 80036f4:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 80036f6:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 80036fa:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 80036fe:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8003700:	4628      	mov	r0, r5
 8003702:	f004 fbdb 	bl	8007ebc <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8003706:	f7ff ffd5 	bl	80036b4 <_ZN8touchgfx3HAL3lcdEv>
 800370a:	f01a ff0e 	bl	801e52a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800370e:	f7ff ffd1 	bl	80036b4 <_ZN8touchgfx3HAL3lcdEv>
 8003712:	f01a ff85 	bl	801e620 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8003716:	4620      	mov	r0, r4
 8003718:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800371a:	bf00      	nop
 800371c:	20013828 	.word	0x20013828
 8003720:	0802b998 	.word	0x0802b998
 8003724:	0802b980 	.word	0x0802b980
 8003728:	200137d4 	.word	0x200137d4

0800372c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800372c:	4b06      	ldr	r3, [pc, #24]	; (8003748 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 800372e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003732:	2300      	movs	r3, #0
 8003734:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003738:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800373c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003740:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003744:	4770      	bx	lr
 8003746:	bf00      	nop
 8003748:	08003561 	.word	0x08003561

0800374c <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 800374c:	4b06      	ldr	r3, [pc, #24]	; (8003768 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 800374e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003752:	2300      	movs	r3, #0
 8003754:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003758:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800375c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003760:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003764:	4770      	bx	lr
 8003766:	bf00      	nop
 8003768:	08003d71 	.word	0x08003d71

0800376c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 800376c:	4b06      	ldr	r3, [pc, #24]	; (8003788 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 800376e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003772:	2300      	movs	r3, #0
 8003774:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003778:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800377c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003780:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003784:	4770      	bx	lr
 8003786:	bf00      	nop
 8003788:	08004b95 	.word	0x08004b95

0800378c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 800378c:	4b06      	ldr	r3, [pc, #24]	; (80037a8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 800378e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003792:	2300      	movs	r3, #0
 8003794:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003798:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800379c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80037a0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80037a4:	4770      	bx	lr
 80037a6:	bf00      	nop
 80037a8:	08003c31 	.word	0x08003c31

080037ac <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 80037ac:	4b06      	ldr	r3, [pc, #24]	; (80037c8 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 80037ae:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80037b2:	2300      	movs	r3, #0
 80037b4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80037b8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80037bc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80037c0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80037c4:	4770      	bx	lr
 80037c6:	bf00      	nop
 80037c8:	08004a55 	.word	0x08004a55

080037cc <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 80037cc:	4b06      	ldr	r3, [pc, #24]	; (80037e8 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 80037ce:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80037d2:	2300      	movs	r3, #0
 80037d4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80037d8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80037dc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80037e0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80037e4:	4770      	bx	lr
 80037e6:	bf00      	nop
 80037e8:	08004915 	.word	0x08004915

080037ec <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 80037ec:	4b06      	ldr	r3, [pc, #24]	; (8003808 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 80037ee:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80037f2:	2300      	movs	r3, #0
 80037f4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80037f8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80037fc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003800:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003804:	4770      	bx	lr
 8003806:	bf00      	nop
 8003808:	080047d5 	.word	0x080047d5

0800380c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 800380c:	4b06      	ldr	r3, [pc, #24]	; (8003828 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 800380e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003812:	2300      	movs	r3, #0
 8003814:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003818:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800381c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003820:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003824:	4770      	bx	lr
 8003826:	bf00      	nop
 8003828:	08004695 	.word	0x08004695

0800382c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 800382c:	4b06      	ldr	r3, [pc, #24]	; (8003848 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 800382e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003832:	2300      	movs	r3, #0
 8003834:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003838:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800383c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003840:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003844:	4770      	bx	lr
 8003846:	bf00      	nop
 8003848:	08003af1 	.word	0x08003af1

0800384c <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 800384c:	4b06      	ldr	r3, [pc, #24]	; (8003868 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 800384e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003852:	2300      	movs	r3, #0
 8003854:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003858:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800385c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003860:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003864:	4770      	bx	lr
 8003866:	bf00      	nop
 8003868:	08004555 	.word	0x08004555

0800386c <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 800386c:	4b06      	ldr	r3, [pc, #24]	; (8003888 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 800386e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003872:	2300      	movs	r3, #0
 8003874:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003878:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800387c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003880:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003884:	4770      	bx	lr
 8003886:	bf00      	nop
 8003888:	08004415 	.word	0x08004415

0800388c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 800388c:	4b06      	ldr	r3, [pc, #24]	; (80038a8 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 800388e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003892:	2300      	movs	r3, #0
 8003894:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003898:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800389c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80038a0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80038a4:	4770      	bx	lr
 80038a6:	bf00      	nop
 80038a8:	080042d5 	.word	0x080042d5

080038ac <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>:
 80038ac:	4b06      	ldr	r3, [pc, #24]	; (80038c8 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv+0x1c>)
 80038ae:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80038b2:	2300      	movs	r3, #0
 80038b4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80038b8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80038bc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80038c0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80038c4:	4770      	bx	lr
 80038c6:	bf00      	nop
 80038c8:	080039b1 	.word	0x080039b1

080038cc <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 80038cc:	4b06      	ldr	r3, [pc, #24]	; (80038e8 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 80038ce:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80038d2:	2300      	movs	r3, #0
 80038d4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80038d8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80038dc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80038e0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80038e4:	4770      	bx	lr
 80038e6:	bf00      	nop
 80038e8:	08004195 	.word	0x08004195

080038ec <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>:
 80038ec:	4b06      	ldr	r3, [pc, #24]	; (8003908 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv+0x1c>)
 80038ee:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80038f2:	2300      	movs	r3, #0
 80038f4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80038f8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80038fc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003900:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003904:	4770      	bx	lr
 8003906:	bf00      	nop
 8003908:	08004055 	.word	0x08004055

0800390c <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 800390c:	4b06      	ldr	r3, [pc, #24]	; (8003928 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 800390e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003912:	2300      	movs	r3, #0
 8003914:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003918:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800391c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003920:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003924:	4770      	bx	lr
 8003926:	bf00      	nop
 8003928:	08003f15 	.word	0x08003f15

0800392c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 800392c:	4b06      	ldr	r3, [pc, #24]	; (8003948 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 800392e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003932:	2300      	movs	r3, #0
 8003934:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003938:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800393c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003940:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003944:	4770      	bx	lr
 8003946:	bf00      	nop
 8003948:	08003371 	.word	0x08003371

0800394c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 800394c:	6803      	ldr	r3, [r0, #0]
 800394e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003950:	4718      	bx	r3
	...

08003954 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8003954:	4b12      	ldr	r3, [pc, #72]	; (80039a0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8003956:	b513      	push	{r0, r1, r4, lr}
          solid()
 8003958:	6003      	str	r3, [r0, #0]
 800395a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800395e:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8003960:	4b10      	ldr	r3, [pc, #64]	; (80039a4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8003962:	7241      	strb	r1, [r0, #9]
 8003964:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003966:	4910      	ldr	r1, [pc, #64]	; (80039a8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8003968:	4b10      	ldr	r3, [pc, #64]	; (80039ac <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800396a:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 800396e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003972:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8003974:	2200      	movs	r2, #0
 8003976:	6042      	str	r2, [r0, #4]
 8003978:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 800397a:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 800397c:	81c2      	strh	r2, [r0, #14]
          solid()
 800397e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003982:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003986:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 800398a:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 800398e:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003990:	9100      	str	r1, [sp, #0]
 8003992:	3010      	adds	r0, #16
 8003994:	4611      	mov	r1, r2
 8003996:	f7fe fddf 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800399a:	4620      	mov	r0, r4
 800399c:	b002      	add	sp, #8
 800399e:	bd10      	pop	{r4, pc}
 80039a0:	0802ba34 	.word	0x0802ba34
 80039a4:	0802b918 	.word	0x0802b918
 80039a8:	200137ca 	.word	0x200137ca
 80039ac:	200137c8 	.word	0x200137c8

080039b0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv>:
{
 80039b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80039b4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80039b8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80039ba:	68a0      	ldr	r0, [r4, #8]
 80039bc:	6803      	ldr	r3, [r0, #0]
 80039be:	6a1b      	ldr	r3, [r3, #32]
 80039c0:	4798      	blx	r3
 80039c2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80039c6:	d205      	bcs.n	80039d4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x24>
 80039c8:	4b42      	ldr	r3, [pc, #264]	; (8003ad4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x124>)
 80039ca:	4a43      	ldr	r2, [pc, #268]	; (8003ad8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 80039cc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80039ce:	4843      	ldr	r0, [pc, #268]	; (8003adc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x12c>)
 80039d0:	f024 fdf6 	bl	80285c0 <__assert_func>
 80039d4:	6860      	ldr	r0, [r4, #4]
 80039d6:	6803      	ldr	r3, [r0, #0]
 80039d8:	6a1b      	ldr	r3, [r3, #32]
 80039da:	4798      	blx	r3
 80039dc:	280f      	cmp	r0, #15
 80039de:	d803      	bhi.n	80039e8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x38>
 80039e0:	4b3f      	ldr	r3, [pc, #252]	; (8003ae0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x130>)
 80039e2:	4a3d      	ldr	r2, [pc, #244]	; (8003ad8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 80039e4:	21a4      	movs	r1, #164	; 0xa4
 80039e6:	e7f2      	b.n	80039ce <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80039e8:	68e0      	ldr	r0, [r4, #12]
 80039ea:	6803      	ldr	r3, [r0, #0]
 80039ec:	6a1b      	ldr	r3, [r3, #32]
 80039ee:	4798      	blx	r3
 80039f0:	2837      	cmp	r0, #55	; 0x37
 80039f2:	d803      	bhi.n	80039fc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x4c>
 80039f4:	4b3b      	ldr	r3, [pc, #236]	; (8003ae4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x134>)
 80039f6:	4a38      	ldr	r2, [pc, #224]	; (8003ad8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 80039f8:	21a5      	movs	r1, #165	; 0xa5
 80039fa:	e7e8      	b.n	80039ce <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80039fc:	f011 fa90 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003a00:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003ae8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x138>
 8003a04:	3004      	adds	r0, #4
 8003a06:	f011 faf1 	bl	8014fec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003a0a:	f8d9 0000 	ldr.w	r0, [r9]
 8003a0e:	b110      	cbz	r0, 8003a16 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003a10:	6803      	ldr	r3, [r0, #0]
 8003a12:	68db      	ldr	r3, [r3, #12]
 8003a14:	4798      	blx	r3
    if (*currentTrans)
 8003a16:	f8d9 0000 	ldr.w	r0, [r9]
 8003a1a:	b110      	cbz	r0, 8003a22 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003a1c:	6803      	ldr	r3, [r0, #0]
 8003a1e:	681b      	ldr	r3, [r3, #0]
 8003a20:	4798      	blx	r3
    if (*currentScreen)
 8003a22:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003aec <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x13c>
 8003a26:	f8d8 0000 	ldr.w	r0, [r8]
 8003a2a:	b110      	cbz	r0, 8003a32 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003a2c:	6803      	ldr	r3, [r0, #0]
 8003a2e:	695b      	ldr	r3, [r3, #20]
 8003a30:	4798      	blx	r3
    if (*currentPresenter)
 8003a32:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003a36:	b110      	cbz	r0, 8003a3e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003a38:	6803      	ldr	r3, [r0, #0]
 8003a3a:	685b      	ldr	r3, [r3, #4]
 8003a3c:	4798      	blx	r3
    if (*currentScreen)
 8003a3e:	f8d8 0000 	ldr.w	r0, [r8]
 8003a42:	b110      	cbz	r0, 8003a4a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003a44:	6803      	ldr	r3, [r0, #0]
 8003a46:	681b      	ldr	r3, [r3, #0]
 8003a48:	4798      	blx	r3
    if (*currentPresenter)
 8003a4a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003a4e:	b110      	cbz	r0, 8003a56 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003a50:	6803      	ldr	r3, [r0, #0]
 8003a52:	689b      	ldr	r3, [r3, #8]
 8003a54:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003a56:	68e0      	ldr	r0, [r4, #12]
 8003a58:	2100      	movs	r1, #0
 8003a5a:	f7ff ff77 	bl	800394c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003a5e:	2114      	movs	r1, #20
 8003a60:	4605      	mov	r5, r0
 8003a62:	f7ff ff77 	bl	8003954 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003a66:	68a0      	ldr	r0, [r4, #8]
 8003a68:	6803      	ldr	r3, [r0, #0]
 8003a6a:	2100      	movs	r1, #0
 8003a6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a6e:	4798      	blx	r3
 8003a70:	4606      	mov	r6, r0
 8003a72:	f004 fac1 	bl	8007ff8 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003a76:	6860      	ldr	r0, [r4, #4]
 8003a78:	6803      	ldr	r3, [r0, #0]
 8003a7a:	2100      	movs	r1, #0
 8003a7c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a7e:	4798      	blx	r3
 8003a80:	4631      	mov	r1, r6
 8003a82:	4604      	mov	r4, r0
 8003a84:	f004 fa92 	bl	8007fac <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 8003a88:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003a8c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003a90:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003a94:	b1dc      	cbz	r4, 8003ace <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x11e>
 8003a96:	1d23      	adds	r3, r4, #4
 8003a98:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003a9c:	6833      	ldr	r3, [r6, #0]
 8003a9e:	f8c4 a008 	str.w	sl, [r4, #8]
 8003aa2:	4630      	mov	r0, r6
 8003aa4:	68db      	ldr	r3, [r3, #12]
 8003aa6:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003aa8:	4798      	blx	r3
    newPresenter->activate();
 8003aaa:	6823      	ldr	r3, [r4, #0]
 8003aac:	4620      	mov	r0, r4
 8003aae:	681b      	ldr	r3, [r3, #0]
 8003ab0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003ab2:	4629      	mov	r1, r5
 8003ab4:	4630      	mov	r0, r6
 8003ab6:	f013 f85f 	bl	8016b78 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003aba:	682b      	ldr	r3, [r5, #0]
 8003abc:	4628      	mov	r0, r5
 8003abe:	691b      	ldr	r3, [r3, #16]
 8003ac0:	4798      	blx	r3
    newTransition->invalidate();
 8003ac2:	682b      	ldr	r3, [r5, #0]
 8003ac4:	4628      	mov	r0, r5
 8003ac6:	695b      	ldr	r3, [r3, #20]
}
 8003ac8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003acc:	4718      	bx	r3
    model->bind(newPresenter);
 8003ace:	4623      	mov	r3, r4
 8003ad0:	e7e2      	b.n	8003a98 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xe8>
 8003ad2:	bf00      	nop
 8003ad4:	0802a348 	.word	0x0802a348
 8003ad8:	0802a779 	.word	0x0802a779
 8003adc:	0802a4e4 	.word	0x0802a4e4
 8003ae0:	0802a52b 	.word	0x0802a52b
 8003ae4:	0802a5ce 	.word	0x0802a5ce
 8003ae8:	2001381c 	.word	0x2001381c
 8003aec:	20013818 	.word	0x20013818

08003af0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8003af0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003af4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003af8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003afa:	68a0      	ldr	r0, [r4, #8]
 8003afc:	6803      	ldr	r3, [r0, #0]
 8003afe:	6a1b      	ldr	r3, [r3, #32]
 8003b00:	4798      	blx	r3
 8003b02:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003b06:	d205      	bcs.n	8003b14 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8003b08:	4b42      	ldr	r3, [pc, #264]	; (8003c14 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8003b0a:	4a43      	ldr	r2, [pc, #268]	; (8003c18 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003b0c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003b0e:	4843      	ldr	r0, [pc, #268]	; (8003c1c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8003b10:	f024 fd56 	bl	80285c0 <__assert_func>
 8003b14:	6860      	ldr	r0, [r4, #4]
 8003b16:	6803      	ldr	r3, [r0, #0]
 8003b18:	6a1b      	ldr	r3, [r3, #32]
 8003b1a:	4798      	blx	r3
 8003b1c:	280f      	cmp	r0, #15
 8003b1e:	d803      	bhi.n	8003b28 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8003b20:	4b3f      	ldr	r3, [pc, #252]	; (8003c20 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8003b22:	4a3d      	ldr	r2, [pc, #244]	; (8003c18 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003b24:	21a4      	movs	r1, #164	; 0xa4
 8003b26:	e7f2      	b.n	8003b0e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003b28:	68e0      	ldr	r0, [r4, #12]
 8003b2a:	6803      	ldr	r3, [r0, #0]
 8003b2c:	6a1b      	ldr	r3, [r3, #32]
 8003b2e:	4798      	blx	r3
 8003b30:	2837      	cmp	r0, #55	; 0x37
 8003b32:	d803      	bhi.n	8003b3c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 8003b34:	4b3b      	ldr	r3, [pc, #236]	; (8003c24 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8003b36:	4a38      	ldr	r2, [pc, #224]	; (8003c18 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003b38:	21a5      	movs	r1, #165	; 0xa5
 8003b3a:	e7e8      	b.n	8003b0e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003b3c:	f011 f9f0 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003b40:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003c28 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8003b44:	3004      	adds	r0, #4
 8003b46:	f011 fa51 	bl	8014fec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003b4a:	f8d9 0000 	ldr.w	r0, [r9]
 8003b4e:	b110      	cbz	r0, 8003b56 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003b50:	6803      	ldr	r3, [r0, #0]
 8003b52:	68db      	ldr	r3, [r3, #12]
 8003b54:	4798      	blx	r3
    if (*currentTrans)
 8003b56:	f8d9 0000 	ldr.w	r0, [r9]
 8003b5a:	b110      	cbz	r0, 8003b62 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003b5c:	6803      	ldr	r3, [r0, #0]
 8003b5e:	681b      	ldr	r3, [r3, #0]
 8003b60:	4798      	blx	r3
    if (*currentScreen)
 8003b62:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003c2c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8003b66:	f8d8 0000 	ldr.w	r0, [r8]
 8003b6a:	b110      	cbz	r0, 8003b72 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003b6c:	6803      	ldr	r3, [r0, #0]
 8003b6e:	695b      	ldr	r3, [r3, #20]
 8003b70:	4798      	blx	r3
    if (*currentPresenter)
 8003b72:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003b76:	b110      	cbz	r0, 8003b7e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003b78:	6803      	ldr	r3, [r0, #0]
 8003b7a:	685b      	ldr	r3, [r3, #4]
 8003b7c:	4798      	blx	r3
    if (*currentScreen)
 8003b7e:	f8d8 0000 	ldr.w	r0, [r8]
 8003b82:	b110      	cbz	r0, 8003b8a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003b84:	6803      	ldr	r3, [r0, #0]
 8003b86:	681b      	ldr	r3, [r3, #0]
 8003b88:	4798      	blx	r3
    if (*currentPresenter)
 8003b8a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003b8e:	b110      	cbz	r0, 8003b96 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003b90:	6803      	ldr	r3, [r0, #0]
 8003b92:	689b      	ldr	r3, [r3, #8]
 8003b94:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003b96:	68e0      	ldr	r0, [r4, #12]
 8003b98:	2100      	movs	r1, #0
 8003b9a:	f7ff fed7 	bl	800394c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003b9e:	2114      	movs	r1, #20
 8003ba0:	4605      	mov	r5, r0
 8003ba2:	f7ff fed7 	bl	8003954 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003ba6:	68a0      	ldr	r0, [r4, #8]
 8003ba8:	6803      	ldr	r3, [r0, #0]
 8003baa:	2100      	movs	r1, #0
 8003bac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003bae:	4798      	blx	r3
 8003bb0:	4606      	mov	r6, r0
 8003bb2:	f004 fc05 	bl	80083c0 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003bb6:	6860      	ldr	r0, [r4, #4]
 8003bb8:	6803      	ldr	r3, [r0, #0]
 8003bba:	2100      	movs	r1, #0
 8003bbc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003bbe:	4798      	blx	r3
 8003bc0:	4631      	mov	r1, r6
 8003bc2:	4604      	mov	r4, r0
 8003bc4:	f004 fbd6 	bl	8008374 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8003bc8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003bcc:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003bd0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003bd4:	b1dc      	cbz	r4, 8003c0e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8003bd6:	1d23      	adds	r3, r4, #4
 8003bd8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003bdc:	6833      	ldr	r3, [r6, #0]
 8003bde:	f8c4 a008 	str.w	sl, [r4, #8]
 8003be2:	4630      	mov	r0, r6
 8003be4:	68db      	ldr	r3, [r3, #12]
 8003be6:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003be8:	4798      	blx	r3
    newPresenter->activate();
 8003bea:	6823      	ldr	r3, [r4, #0]
 8003bec:	4620      	mov	r0, r4
 8003bee:	681b      	ldr	r3, [r3, #0]
 8003bf0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003bf2:	4629      	mov	r1, r5
 8003bf4:	4630      	mov	r0, r6
 8003bf6:	f012 ffbf 	bl	8016b78 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003bfa:	682b      	ldr	r3, [r5, #0]
 8003bfc:	4628      	mov	r0, r5
 8003bfe:	691b      	ldr	r3, [r3, #16]
 8003c00:	4798      	blx	r3
    newTransition->invalidate();
 8003c02:	682b      	ldr	r3, [r5, #0]
 8003c04:	4628      	mov	r0, r5
 8003c06:	695b      	ldr	r3, [r3, #20]
}
 8003c08:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003c0c:	4718      	bx	r3
    model->bind(newPresenter);
 8003c0e:	4623      	mov	r3, r4
 8003c10:	e7e2      	b.n	8003bd8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 8003c12:	bf00      	nop
 8003c14:	0802a348 	.word	0x0802a348
 8003c18:	0802a897 	.word	0x0802a897
 8003c1c:	0802a4e4 	.word	0x0802a4e4
 8003c20:	0802a52b 	.word	0x0802a52b
 8003c24:	0802a5ce 	.word	0x0802a5ce
 8003c28:	2001381c 	.word	0x2001381c
 8003c2c:	20013818 	.word	0x20013818

08003c30 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8003c30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003c34:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003c38:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003c3a:	68a0      	ldr	r0, [r4, #8]
 8003c3c:	6803      	ldr	r3, [r0, #0]
 8003c3e:	6a1b      	ldr	r3, [r3, #32]
 8003c40:	4798      	blx	r3
 8003c42:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003c46:	d205      	bcs.n	8003c54 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8003c48:	4b42      	ldr	r3, [pc, #264]	; (8003d54 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8003c4a:	4a43      	ldr	r2, [pc, #268]	; (8003d58 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003c4c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003c4e:	4843      	ldr	r0, [pc, #268]	; (8003d5c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8003c50:	f024 fcb6 	bl	80285c0 <__assert_func>
 8003c54:	6860      	ldr	r0, [r4, #4]
 8003c56:	6803      	ldr	r3, [r0, #0]
 8003c58:	6a1b      	ldr	r3, [r3, #32]
 8003c5a:	4798      	blx	r3
 8003c5c:	280f      	cmp	r0, #15
 8003c5e:	d803      	bhi.n	8003c68 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8003c60:	4b3f      	ldr	r3, [pc, #252]	; (8003d60 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8003c62:	4a3d      	ldr	r2, [pc, #244]	; (8003d58 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003c64:	21a4      	movs	r1, #164	; 0xa4
 8003c66:	e7f2      	b.n	8003c4e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003c68:	68e0      	ldr	r0, [r4, #12]
 8003c6a:	6803      	ldr	r3, [r0, #0]
 8003c6c:	6a1b      	ldr	r3, [r3, #32]
 8003c6e:	4798      	blx	r3
 8003c70:	2837      	cmp	r0, #55	; 0x37
 8003c72:	d803      	bhi.n	8003c7c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8003c74:	4b3b      	ldr	r3, [pc, #236]	; (8003d64 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8003c76:	4a38      	ldr	r2, [pc, #224]	; (8003d58 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003c78:	21a5      	movs	r1, #165	; 0xa5
 8003c7a:	e7e8      	b.n	8003c4e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003c7c:	f011 f950 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003c80:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003d68 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8003c84:	3004      	adds	r0, #4
 8003c86:	f011 f9b1 	bl	8014fec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003c8a:	f8d9 0000 	ldr.w	r0, [r9]
 8003c8e:	b110      	cbz	r0, 8003c96 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003c90:	6803      	ldr	r3, [r0, #0]
 8003c92:	68db      	ldr	r3, [r3, #12]
 8003c94:	4798      	blx	r3
    if (*currentTrans)
 8003c96:	f8d9 0000 	ldr.w	r0, [r9]
 8003c9a:	b110      	cbz	r0, 8003ca2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003c9c:	6803      	ldr	r3, [r0, #0]
 8003c9e:	681b      	ldr	r3, [r3, #0]
 8003ca0:	4798      	blx	r3
    if (*currentScreen)
 8003ca2:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003d6c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8003ca6:	f8d8 0000 	ldr.w	r0, [r8]
 8003caa:	b110      	cbz	r0, 8003cb2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003cac:	6803      	ldr	r3, [r0, #0]
 8003cae:	695b      	ldr	r3, [r3, #20]
 8003cb0:	4798      	blx	r3
    if (*currentPresenter)
 8003cb2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003cb6:	b110      	cbz	r0, 8003cbe <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003cb8:	6803      	ldr	r3, [r0, #0]
 8003cba:	685b      	ldr	r3, [r3, #4]
 8003cbc:	4798      	blx	r3
    if (*currentScreen)
 8003cbe:	f8d8 0000 	ldr.w	r0, [r8]
 8003cc2:	b110      	cbz	r0, 8003cca <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003cc4:	6803      	ldr	r3, [r0, #0]
 8003cc6:	681b      	ldr	r3, [r3, #0]
 8003cc8:	4798      	blx	r3
    if (*currentPresenter)
 8003cca:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003cce:	b110      	cbz	r0, 8003cd6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003cd0:	6803      	ldr	r3, [r0, #0]
 8003cd2:	689b      	ldr	r3, [r3, #8]
 8003cd4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003cd6:	68e0      	ldr	r0, [r4, #12]
 8003cd8:	2100      	movs	r1, #0
 8003cda:	f7ff fe37 	bl	800394c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003cde:	2114      	movs	r1, #20
 8003ce0:	4605      	mov	r5, r0
 8003ce2:	f7ff fe37 	bl	8003954 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003ce6:	68a0      	ldr	r0, [r4, #8]
 8003ce8:	6803      	ldr	r3, [r0, #0]
 8003cea:	2100      	movs	r1, #0
 8003cec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003cee:	4798      	blx	r3
 8003cf0:	4606      	mov	r6, r0
 8003cf2:	f004 fb05 	bl	8008300 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003cf6:	6860      	ldr	r0, [r4, #4]
 8003cf8:	6803      	ldr	r3, [r0, #0]
 8003cfa:	2100      	movs	r1, #0
 8003cfc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003cfe:	4798      	blx	r3
 8003d00:	4631      	mov	r1, r6
 8003d02:	4604      	mov	r4, r0
 8003d04:	f004 fad6 	bl	80082b4 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8003d08:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003d0c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003d10:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003d14:	b1dc      	cbz	r4, 8003d4e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8003d16:	1d23      	adds	r3, r4, #4
 8003d18:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003d1c:	6833      	ldr	r3, [r6, #0]
 8003d1e:	f8c4 a008 	str.w	sl, [r4, #8]
 8003d22:	4630      	mov	r0, r6
 8003d24:	68db      	ldr	r3, [r3, #12]
 8003d26:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003d28:	4798      	blx	r3
    newPresenter->activate();
 8003d2a:	6823      	ldr	r3, [r4, #0]
 8003d2c:	4620      	mov	r0, r4
 8003d2e:	681b      	ldr	r3, [r3, #0]
 8003d30:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003d32:	4629      	mov	r1, r5
 8003d34:	4630      	mov	r0, r6
 8003d36:	f012 ff1f 	bl	8016b78 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003d3a:	682b      	ldr	r3, [r5, #0]
 8003d3c:	4628      	mov	r0, r5
 8003d3e:	691b      	ldr	r3, [r3, #16]
 8003d40:	4798      	blx	r3
    newTransition->invalidate();
 8003d42:	682b      	ldr	r3, [r5, #0]
 8003d44:	4628      	mov	r0, r5
 8003d46:	695b      	ldr	r3, [r3, #20]
}
 8003d48:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003d4c:	4718      	bx	r3
    model->bind(newPresenter);
 8003d4e:	4623      	mov	r3, r4
 8003d50:	e7e2      	b.n	8003d18 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 8003d52:	bf00      	nop
 8003d54:	0802a348 	.word	0x0802a348
 8003d58:	0802a9c7 	.word	0x0802a9c7
 8003d5c:	0802a4e4 	.word	0x0802a4e4
 8003d60:	0802a52b 	.word	0x0802a52b
 8003d64:	0802a5ce 	.word	0x0802a5ce
 8003d68:	2001381c 	.word	0x2001381c
 8003d6c:	20013818 	.word	0x20013818

08003d70 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8003d70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003d74:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003d78:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003d7a:	68a0      	ldr	r0, [r4, #8]
 8003d7c:	6803      	ldr	r3, [r0, #0]
 8003d7e:	6a1b      	ldr	r3, [r3, #32]
 8003d80:	4798      	blx	r3
 8003d82:	f241 137b 	movw	r3, #4475	; 0x117b
 8003d86:	4298      	cmp	r0, r3
 8003d88:	d805      	bhi.n	8003d96 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8003d8a:	4b42      	ldr	r3, [pc, #264]	; (8003e94 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8003d8c:	4a42      	ldr	r2, [pc, #264]	; (8003e98 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003d8e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003d90:	4842      	ldr	r0, [pc, #264]	; (8003e9c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8003d92:	f024 fc15 	bl	80285c0 <__assert_func>
 8003d96:	6860      	ldr	r0, [r4, #4]
 8003d98:	6803      	ldr	r3, [r0, #0]
 8003d9a:	6a1b      	ldr	r3, [r3, #32]
 8003d9c:	4798      	blx	r3
 8003d9e:	280f      	cmp	r0, #15
 8003da0:	d803      	bhi.n	8003daa <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8003da2:	4b3f      	ldr	r3, [pc, #252]	; (8003ea0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8003da4:	4a3c      	ldr	r2, [pc, #240]	; (8003e98 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003da6:	21a4      	movs	r1, #164	; 0xa4
 8003da8:	e7f2      	b.n	8003d90 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003daa:	68e0      	ldr	r0, [r4, #12]
 8003dac:	6803      	ldr	r3, [r0, #0]
 8003dae:	6a1b      	ldr	r3, [r3, #32]
 8003db0:	4798      	blx	r3
 8003db2:	2837      	cmp	r0, #55	; 0x37
 8003db4:	d803      	bhi.n	8003dbe <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8003db6:	4b3b      	ldr	r3, [pc, #236]	; (8003ea4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8003db8:	4a37      	ldr	r2, [pc, #220]	; (8003e98 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003dba:	21a5      	movs	r1, #165	; 0xa5
 8003dbc:	e7e8      	b.n	8003d90 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003dbe:	f011 f8af 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003dc2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003ea8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8003dc6:	3004      	adds	r0, #4
 8003dc8:	f011 f910 	bl	8014fec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003dcc:	f8d9 0000 	ldr.w	r0, [r9]
 8003dd0:	b110      	cbz	r0, 8003dd8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8003dd2:	6803      	ldr	r3, [r0, #0]
 8003dd4:	68db      	ldr	r3, [r3, #12]
 8003dd6:	4798      	blx	r3
    if (*currentTrans)
 8003dd8:	f8d9 0000 	ldr.w	r0, [r9]
 8003ddc:	b110      	cbz	r0, 8003de4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8003dde:	6803      	ldr	r3, [r0, #0]
 8003de0:	681b      	ldr	r3, [r3, #0]
 8003de2:	4798      	blx	r3
    if (*currentScreen)
 8003de4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003eac <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8003de8:	f8d8 0000 	ldr.w	r0, [r8]
 8003dec:	b110      	cbz	r0, 8003df4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003dee:	6803      	ldr	r3, [r0, #0]
 8003df0:	695b      	ldr	r3, [r3, #20]
 8003df2:	4798      	blx	r3
    if (*currentPresenter)
 8003df4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003df8:	b110      	cbz	r0, 8003e00 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003dfa:	6803      	ldr	r3, [r0, #0]
 8003dfc:	685b      	ldr	r3, [r3, #4]
 8003dfe:	4798      	blx	r3
    if (*currentScreen)
 8003e00:	f8d8 0000 	ldr.w	r0, [r8]
 8003e04:	b110      	cbz	r0, 8003e0c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003e06:	6803      	ldr	r3, [r0, #0]
 8003e08:	681b      	ldr	r3, [r3, #0]
 8003e0a:	4798      	blx	r3
    if (*currentPresenter)
 8003e0c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003e10:	b110      	cbz	r0, 8003e18 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003e12:	6803      	ldr	r3, [r0, #0]
 8003e14:	689b      	ldr	r3, [r3, #8]
 8003e16:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003e18:	68e0      	ldr	r0, [r4, #12]
 8003e1a:	2100      	movs	r1, #0
 8003e1c:	f7ff fd96 	bl	800394c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003e20:	2114      	movs	r1, #20
 8003e22:	4605      	mov	r5, r0
 8003e24:	f7ff fd96 	bl	8003954 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003e28:	68a0      	ldr	r0, [r4, #8]
 8003e2a:	6803      	ldr	r3, [r0, #0]
 8003e2c:	2100      	movs	r1, #0
 8003e2e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e30:	4798      	blx	r3
 8003e32:	4606      	mov	r6, r0
 8003e34:	f004 fa04 	bl	8008240 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003e38:	6860      	ldr	r0, [r4, #4]
 8003e3a:	6803      	ldr	r3, [r0, #0]
 8003e3c:	2100      	movs	r1, #0
 8003e3e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e40:	4798      	blx	r3
 8003e42:	4631      	mov	r1, r6
 8003e44:	4604      	mov	r4, r0
 8003e46:	f004 f9d5 	bl	80081f4 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8003e4a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003e4e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003e52:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003e56:	b1dc      	cbz	r4, 8003e90 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8003e58:	1d23      	adds	r3, r4, #4
 8003e5a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003e5e:	6833      	ldr	r3, [r6, #0]
 8003e60:	f8c4 a008 	str.w	sl, [r4, #8]
 8003e64:	4630      	mov	r0, r6
 8003e66:	68db      	ldr	r3, [r3, #12]
 8003e68:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003e6a:	4798      	blx	r3
    newPresenter->activate();
 8003e6c:	6823      	ldr	r3, [r4, #0]
 8003e6e:	4620      	mov	r0, r4
 8003e70:	681b      	ldr	r3, [r3, #0]
 8003e72:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003e74:	4629      	mov	r1, r5
 8003e76:	4630      	mov	r0, r6
 8003e78:	f012 fe7e 	bl	8016b78 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003e7c:	682b      	ldr	r3, [r5, #0]
 8003e7e:	4628      	mov	r0, r5
 8003e80:	691b      	ldr	r3, [r3, #16]
 8003e82:	4798      	blx	r3
    newTransition->invalidate();
 8003e84:	682b      	ldr	r3, [r5, #0]
 8003e86:	4628      	mov	r0, r5
 8003e88:	695b      	ldr	r3, [r3, #20]
}
 8003e8a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003e8e:	4718      	bx	r3
    model->bind(newPresenter);
 8003e90:	4623      	mov	r3, r4
 8003e92:	e7e2      	b.n	8003e5a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8003e94:	0802a348 	.word	0x0802a348
 8003e98:	0802aae5 	.word	0x0802aae5
 8003e9c:	0802a4e4 	.word	0x0802a4e4
 8003ea0:	0802a52b 	.word	0x0802a52b
 8003ea4:	0802a5ce 	.word	0x0802a5ce
 8003ea8:	2001381c 	.word	0x2001381c
 8003eac:	20013818 	.word	0x20013818

08003eb0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8003eb0:	6803      	ldr	r3, [r0, #0]
 8003eb2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003eb4:	4718      	bx	r3
	...

08003eb8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8003eb8:	4b12      	ldr	r3, [pc, #72]	; (8003f04 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8003eba:	b513      	push	{r0, r1, r4, lr}
          solid()
 8003ebc:	6003      	str	r3, [r0, #0]
 8003ebe:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003ec2:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8003ec4:	4b10      	ldr	r3, [pc, #64]	; (8003f08 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8003ec6:	7241      	strb	r1, [r0, #9]
 8003ec8:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003eca:	4910      	ldr	r1, [pc, #64]	; (8003f0c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8003ecc:	4b10      	ldr	r3, [pc, #64]	; (8003f10 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003ece:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8003ed2:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003ed6:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8003ed8:	2200      	movs	r2, #0
 8003eda:	6042      	str	r2, [r0, #4]
 8003edc:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8003ede:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8003ee0:	81c2      	strh	r2, [r0, #14]
          solid()
 8003ee2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003ee6:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003eea:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8003eee:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8003ef2:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003ef4:	9100      	str	r1, [sp, #0]
 8003ef6:	3010      	adds	r0, #16
 8003ef8:	4611      	mov	r1, r2
 8003efa:	f7fe fb2d 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8003efe:	4620      	mov	r0, r4
 8003f00:	b002      	add	sp, #8
 8003f02:	bd10      	pop	{r4, pc}
 8003f04:	0802ba10 	.word	0x0802ba10
 8003f08:	0802b918 	.word	0x0802b918
 8003f0c:	200137ca 	.word	0x200137ca
 8003f10:	200137c8 	.word	0x200137c8

08003f14 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8003f14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003f18:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003f1c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003f1e:	68a0      	ldr	r0, [r4, #8]
 8003f20:	6803      	ldr	r3, [r0, #0]
 8003f22:	6a1b      	ldr	r3, [r3, #32]
 8003f24:	4798      	blx	r3
 8003f26:	f241 03af 	movw	r3, #4271	; 0x10af
 8003f2a:	4298      	cmp	r0, r3
 8003f2c:	d805      	bhi.n	8003f3a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8003f2e:	4b42      	ldr	r3, [pc, #264]	; (8004038 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8003f30:	4a42      	ldr	r2, [pc, #264]	; (800403c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8003f32:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003f34:	4842      	ldr	r0, [pc, #264]	; (8004040 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8003f36:	f024 fb43 	bl	80285c0 <__assert_func>
 8003f3a:	6860      	ldr	r0, [r4, #4]
 8003f3c:	6803      	ldr	r3, [r0, #0]
 8003f3e:	6a1b      	ldr	r3, [r3, #32]
 8003f40:	4798      	blx	r3
 8003f42:	280f      	cmp	r0, #15
 8003f44:	d803      	bhi.n	8003f4e <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8003f46:	4b3f      	ldr	r3, [pc, #252]	; (8004044 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8003f48:	4a3c      	ldr	r2, [pc, #240]	; (800403c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8003f4a:	21a4      	movs	r1, #164	; 0xa4
 8003f4c:	e7f2      	b.n	8003f34 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003f4e:	68e0      	ldr	r0, [r4, #12]
 8003f50:	6803      	ldr	r3, [r0, #0]
 8003f52:	6a1b      	ldr	r3, [r3, #32]
 8003f54:	4798      	blx	r3
 8003f56:	2837      	cmp	r0, #55	; 0x37
 8003f58:	d803      	bhi.n	8003f62 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8003f5a:	4b3b      	ldr	r3, [pc, #236]	; (8004048 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8003f5c:	4a37      	ldr	r2, [pc, #220]	; (800403c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8003f5e:	21a5      	movs	r1, #165	; 0xa5
 8003f60:	e7e8      	b.n	8003f34 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003f62:	f010 ffdd 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003f66:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800404c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8003f6a:	3004      	adds	r0, #4
 8003f6c:	f011 f83e 	bl	8014fec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003f70:	f8d9 0000 	ldr.w	r0, [r9]
 8003f74:	b110      	cbz	r0, 8003f7c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003f76:	6803      	ldr	r3, [r0, #0]
 8003f78:	68db      	ldr	r3, [r3, #12]
 8003f7a:	4798      	blx	r3
    if (*currentTrans)
 8003f7c:	f8d9 0000 	ldr.w	r0, [r9]
 8003f80:	b110      	cbz	r0, 8003f88 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003f82:	6803      	ldr	r3, [r0, #0]
 8003f84:	681b      	ldr	r3, [r3, #0]
 8003f86:	4798      	blx	r3
    if (*currentScreen)
 8003f88:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004050 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8003f8c:	f8d8 0000 	ldr.w	r0, [r8]
 8003f90:	b110      	cbz	r0, 8003f98 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003f92:	6803      	ldr	r3, [r0, #0]
 8003f94:	695b      	ldr	r3, [r3, #20]
 8003f96:	4798      	blx	r3
    if (*currentPresenter)
 8003f98:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003f9c:	b110      	cbz	r0, 8003fa4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003f9e:	6803      	ldr	r3, [r0, #0]
 8003fa0:	685b      	ldr	r3, [r3, #4]
 8003fa2:	4798      	blx	r3
    if (*currentScreen)
 8003fa4:	f8d8 0000 	ldr.w	r0, [r8]
 8003fa8:	b110      	cbz	r0, 8003fb0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003faa:	6803      	ldr	r3, [r0, #0]
 8003fac:	681b      	ldr	r3, [r3, #0]
 8003fae:	4798      	blx	r3
    if (*currentPresenter)
 8003fb0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003fb4:	b110      	cbz	r0, 8003fbc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003fb6:	6803      	ldr	r3, [r0, #0]
 8003fb8:	689b      	ldr	r3, [r3, #8]
 8003fba:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003fbc:	68e0      	ldr	r0, [r4, #12]
 8003fbe:	2100      	movs	r1, #0
 8003fc0:	f7ff ff76 	bl	8003eb0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003fc4:	2114      	movs	r1, #20
 8003fc6:	4605      	mov	r5, r0
 8003fc8:	f7ff ff76 	bl	8003eb8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003fcc:	68a0      	ldr	r0, [r4, #8]
 8003fce:	6803      	ldr	r3, [r0, #0]
 8003fd0:	2100      	movs	r1, #0
 8003fd2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003fd4:	4798      	blx	r3
 8003fd6:	4606      	mov	r6, r0
 8003fd8:	f004 fc0e 	bl	80087f8 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003fdc:	6860      	ldr	r0, [r4, #4]
 8003fde:	6803      	ldr	r3, [r0, #0]
 8003fe0:	2100      	movs	r1, #0
 8003fe2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003fe4:	4798      	blx	r3
 8003fe6:	4631      	mov	r1, r6
 8003fe8:	4604      	mov	r4, r0
 8003fea:	f004 fbdf 	bl	80087ac <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8003fee:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003ff2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003ff6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003ffa:	b1dc      	cbz	r4, 8004034 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8003ffc:	1d23      	adds	r3, r4, #4
 8003ffe:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004002:	6833      	ldr	r3, [r6, #0]
 8004004:	f8c4 a008 	str.w	sl, [r4, #8]
 8004008:	4630      	mov	r0, r6
 800400a:	68db      	ldr	r3, [r3, #12]
 800400c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800400e:	4798      	blx	r3
    newPresenter->activate();
 8004010:	6823      	ldr	r3, [r4, #0]
 8004012:	4620      	mov	r0, r4
 8004014:	681b      	ldr	r3, [r3, #0]
 8004016:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004018:	4629      	mov	r1, r5
 800401a:	4630      	mov	r0, r6
 800401c:	f012 fdac 	bl	8016b78 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004020:	682b      	ldr	r3, [r5, #0]
 8004022:	4628      	mov	r0, r5
 8004024:	691b      	ldr	r3, [r3, #16]
 8004026:	4798      	blx	r3
    newTransition->invalidate();
 8004028:	682b      	ldr	r3, [r5, #0]
 800402a:	4628      	mov	r0, r5
 800402c:	695b      	ldr	r3, [r3, #20]
}
 800402e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004032:	4718      	bx	r3
    model->bind(newPresenter);
 8004034:	4623      	mov	r3, r4
 8004036:	e7e2      	b.n	8003ffe <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8004038:	0802a348 	.word	0x0802a348
 800403c:	0802abff 	.word	0x0802abff
 8004040:	0802a4e4 	.word	0x0802a4e4
 8004044:	0802a52b 	.word	0x0802a52b
 8004048:	0802a5ce 	.word	0x0802a5ce
 800404c:	2001381c 	.word	0x2001381c
 8004050:	20013818 	.word	0x20013818

08004054 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv>:
{
 8004054:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_HallView, Calibration_HallPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004058:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800405c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800405e:	68a0      	ldr	r0, [r4, #8]
 8004060:	6803      	ldr	r3, [r0, #0]
 8004062:	6a1b      	ldr	r3, [r3, #32]
 8004064:	4798      	blx	r3
 8004066:	f241 035b 	movw	r3, #4187	; 0x105b
 800406a:	4298      	cmp	r0, r3
 800406c:	d805      	bhi.n	800407a <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x26>
 800406e:	4b42      	ldr	r3, [pc, #264]	; (8004178 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x124>)
 8004070:	4a42      	ldr	r2, [pc, #264]	; (800417c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8004072:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004074:	4842      	ldr	r0, [pc, #264]	; (8004180 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x12c>)
 8004076:	f024 faa3 	bl	80285c0 <__assert_func>
 800407a:	6860      	ldr	r0, [r4, #4]
 800407c:	6803      	ldr	r3, [r0, #0]
 800407e:	6a1b      	ldr	r3, [r3, #32]
 8004080:	4798      	blx	r3
 8004082:	280f      	cmp	r0, #15
 8004084:	d803      	bhi.n	800408e <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x3a>
 8004086:	4b3f      	ldr	r3, [pc, #252]	; (8004184 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x130>)
 8004088:	4a3c      	ldr	r2, [pc, #240]	; (800417c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 800408a:	21a4      	movs	r1, #164	; 0xa4
 800408c:	e7f2      	b.n	8004074 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800408e:	68e0      	ldr	r0, [r4, #12]
 8004090:	6803      	ldr	r3, [r0, #0]
 8004092:	6a1b      	ldr	r3, [r3, #32]
 8004094:	4798      	blx	r3
 8004096:	2837      	cmp	r0, #55	; 0x37
 8004098:	d803      	bhi.n	80040a2 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x4e>
 800409a:	4b3b      	ldr	r3, [pc, #236]	; (8004188 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x134>)
 800409c:	4a37      	ldr	r2, [pc, #220]	; (800417c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 800409e:	21a5      	movs	r1, #165	; 0xa5
 80040a0:	e7e8      	b.n	8004074 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80040a2:	f010 ff3d 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80040a6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800418c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x138>
 80040aa:	3004      	adds	r0, #4
 80040ac:	f010 ff9e 	bl	8014fec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80040b0:	f8d9 0000 	ldr.w	r0, [r9]
 80040b4:	b110      	cbz	r0, 80040bc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80040b6:	6803      	ldr	r3, [r0, #0]
 80040b8:	68db      	ldr	r3, [r3, #12]
 80040ba:	4798      	blx	r3
    if (*currentTrans)
 80040bc:	f8d9 0000 	ldr.w	r0, [r9]
 80040c0:	b110      	cbz	r0, 80040c8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80040c2:	6803      	ldr	r3, [r0, #0]
 80040c4:	681b      	ldr	r3, [r3, #0]
 80040c6:	4798      	blx	r3
    if (*currentScreen)
 80040c8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004190 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x13c>
 80040cc:	f8d8 0000 	ldr.w	r0, [r8]
 80040d0:	b110      	cbz	r0, 80040d8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80040d2:	6803      	ldr	r3, [r0, #0]
 80040d4:	695b      	ldr	r3, [r3, #20]
 80040d6:	4798      	blx	r3
    if (*currentPresenter)
 80040d8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80040dc:	b110      	cbz	r0, 80040e4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80040de:	6803      	ldr	r3, [r0, #0]
 80040e0:	685b      	ldr	r3, [r3, #4]
 80040e2:	4798      	blx	r3
    if (*currentScreen)
 80040e4:	f8d8 0000 	ldr.w	r0, [r8]
 80040e8:	b110      	cbz	r0, 80040f0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80040ea:	6803      	ldr	r3, [r0, #0]
 80040ec:	681b      	ldr	r3, [r3, #0]
 80040ee:	4798      	blx	r3
    if (*currentPresenter)
 80040f0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80040f4:	b110      	cbz	r0, 80040fc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80040f6:	6803      	ldr	r3, [r0, #0]
 80040f8:	689b      	ldr	r3, [r3, #8]
 80040fa:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80040fc:	68e0      	ldr	r0, [r4, #12]
 80040fe:	2100      	movs	r1, #0
 8004100:	f7ff fed6 	bl	8003eb0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004104:	2114      	movs	r1, #20
 8004106:	4605      	mov	r5, r0
 8004108:	f7ff fed6 	bl	8003eb8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800410c:	68a0      	ldr	r0, [r4, #8]
 800410e:	6803      	ldr	r3, [r0, #0]
 8004110:	2100      	movs	r1, #0
 8004112:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004114:	4798      	blx	r3
 8004116:	4606      	mov	r6, r0
 8004118:	f003 ffc8 	bl	80080ac <_ZN20Calibration_HallViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800411c:	6860      	ldr	r0, [r4, #4]
 800411e:	6803      	ldr	r3, [r0, #0]
 8004120:	2100      	movs	r1, #0
 8004122:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004124:	4798      	blx	r3
 8004126:	4631      	mov	r1, r6
 8004128:	4604      	mov	r4, r0
 800412a:	f003 ff99 	bl	8008060 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>
    *currentTrans = newTransition;
 800412e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004132:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004136:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800413a:	b1dc      	cbz	r4, 8004174 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x120>
 800413c:	1d23      	adds	r3, r4, #4
 800413e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004142:	6833      	ldr	r3, [r6, #0]
 8004144:	f8c4 a008 	str.w	sl, [r4, #8]
 8004148:	4630      	mov	r0, r6
 800414a:	68db      	ldr	r3, [r3, #12]
 800414c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800414e:	4798      	blx	r3
    newPresenter->activate();
 8004150:	6823      	ldr	r3, [r4, #0]
 8004152:	4620      	mov	r0, r4
 8004154:	681b      	ldr	r3, [r3, #0]
 8004156:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004158:	4629      	mov	r1, r5
 800415a:	4630      	mov	r0, r6
 800415c:	f012 fd0c 	bl	8016b78 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004160:	682b      	ldr	r3, [r5, #0]
 8004162:	4628      	mov	r0, r5
 8004164:	691b      	ldr	r3, [r3, #16]
 8004166:	4798      	blx	r3
    newTransition->invalidate();
 8004168:	682b      	ldr	r3, [r5, #0]
 800416a:	4628      	mov	r0, r5
 800416c:	695b      	ldr	r3, [r3, #20]
}
 800416e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004172:	4718      	bx	r3
    model->bind(newPresenter);
 8004174:	4623      	mov	r3, r4
 8004176:	e7e2      	b.n	800413e <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xea>
 8004178:	0802a348 	.word	0x0802a348
 800417c:	0802ad1f 	.word	0x0802ad1f
 8004180:	0802a4e4 	.word	0x0802a4e4
 8004184:	0802a52b 	.word	0x0802a52b
 8004188:	0802a5ce 	.word	0x0802a5ce
 800418c:	2001381c 	.word	0x2001381c
 8004190:	20013818 	.word	0x20013818

08004194 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 8004194:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004198:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800419c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800419e:	68a0      	ldr	r0, [r4, #8]
 80041a0:	6803      	ldr	r3, [r0, #0]
 80041a2:	6a1b      	ldr	r3, [r3, #32]
 80041a4:	4798      	blx	r3
 80041a6:	f241 035b 	movw	r3, #4187	; 0x105b
 80041aa:	4298      	cmp	r0, r3
 80041ac:	d805      	bhi.n	80041ba <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 80041ae:	4b42      	ldr	r3, [pc, #264]	; (80042b8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 80041b0:	4a42      	ldr	r2, [pc, #264]	; (80042bc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 80041b2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80041b4:	4842      	ldr	r0, [pc, #264]	; (80042c0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 80041b6:	f024 fa03 	bl	80285c0 <__assert_func>
 80041ba:	6860      	ldr	r0, [r4, #4]
 80041bc:	6803      	ldr	r3, [r0, #0]
 80041be:	6a1b      	ldr	r3, [r3, #32]
 80041c0:	4798      	blx	r3
 80041c2:	280f      	cmp	r0, #15
 80041c4:	d803      	bhi.n	80041ce <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 80041c6:	4b3f      	ldr	r3, [pc, #252]	; (80042c4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 80041c8:	4a3c      	ldr	r2, [pc, #240]	; (80042bc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 80041ca:	21a4      	movs	r1, #164	; 0xa4
 80041cc:	e7f2      	b.n	80041b4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80041ce:	68e0      	ldr	r0, [r4, #12]
 80041d0:	6803      	ldr	r3, [r0, #0]
 80041d2:	6a1b      	ldr	r3, [r3, #32]
 80041d4:	4798      	blx	r3
 80041d6:	2837      	cmp	r0, #55	; 0x37
 80041d8:	d803      	bhi.n	80041e2 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 80041da:	4b3b      	ldr	r3, [pc, #236]	; (80042c8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 80041dc:	4a37      	ldr	r2, [pc, #220]	; (80042bc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 80041de:	21a5      	movs	r1, #165	; 0xa5
 80041e0:	e7e8      	b.n	80041b4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80041e2:	f010 fe9d 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80041e6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80042cc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 80041ea:	3004      	adds	r0, #4
 80041ec:	f010 fefe 	bl	8014fec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80041f0:	f8d9 0000 	ldr.w	r0, [r9]
 80041f4:	b110      	cbz	r0, 80041fc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80041f6:	6803      	ldr	r3, [r0, #0]
 80041f8:	68db      	ldr	r3, [r3, #12]
 80041fa:	4798      	blx	r3
    if (*currentTrans)
 80041fc:	f8d9 0000 	ldr.w	r0, [r9]
 8004200:	b110      	cbz	r0, 8004208 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004202:	6803      	ldr	r3, [r0, #0]
 8004204:	681b      	ldr	r3, [r3, #0]
 8004206:	4798      	blx	r3
    if (*currentScreen)
 8004208:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80042d0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 800420c:	f8d8 0000 	ldr.w	r0, [r8]
 8004210:	b110      	cbz	r0, 8004218 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004212:	6803      	ldr	r3, [r0, #0]
 8004214:	695b      	ldr	r3, [r3, #20]
 8004216:	4798      	blx	r3
    if (*currentPresenter)
 8004218:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800421c:	b110      	cbz	r0, 8004224 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800421e:	6803      	ldr	r3, [r0, #0]
 8004220:	685b      	ldr	r3, [r3, #4]
 8004222:	4798      	blx	r3
    if (*currentScreen)
 8004224:	f8d8 0000 	ldr.w	r0, [r8]
 8004228:	b110      	cbz	r0, 8004230 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800422a:	6803      	ldr	r3, [r0, #0]
 800422c:	681b      	ldr	r3, [r3, #0]
 800422e:	4798      	blx	r3
    if (*currentPresenter)
 8004230:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004234:	b110      	cbz	r0, 800423c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004236:	6803      	ldr	r3, [r0, #0]
 8004238:	689b      	ldr	r3, [r3, #8]
 800423a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800423c:	68e0      	ldr	r0, [r4, #12]
 800423e:	2100      	movs	r1, #0
 8004240:	f7ff fe36 	bl	8003eb0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004244:	2114      	movs	r1, #20
 8004246:	4605      	mov	r5, r0
 8004248:	f7ff fe36 	bl	8003eb8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800424c:	68a0      	ldr	r0, [r4, #8]
 800424e:	6803      	ldr	r3, [r0, #0]
 8004250:	2100      	movs	r1, #0
 8004252:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004254:	4798      	blx	r3
 8004256:	4606      	mov	r6, r0
 8004258:	f003 ff6a 	bl	8008130 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800425c:	6860      	ldr	r0, [r4, #4]
 800425e:	6803      	ldr	r3, [r0, #0]
 8004260:	2100      	movs	r1, #0
 8004262:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004264:	4798      	blx	r3
 8004266:	4631      	mov	r1, r6
 8004268:	4604      	mov	r4, r0
 800426a:	f003 ff3b 	bl	80080e4 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 800426e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004272:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004276:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800427a:	b1dc      	cbz	r4, 80042b4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 800427c:	1d23      	adds	r3, r4, #4
 800427e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004282:	6833      	ldr	r3, [r6, #0]
 8004284:	f8c4 a008 	str.w	sl, [r4, #8]
 8004288:	4630      	mov	r0, r6
 800428a:	68db      	ldr	r3, [r3, #12]
 800428c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800428e:	4798      	blx	r3
    newPresenter->activate();
 8004290:	6823      	ldr	r3, [r4, #0]
 8004292:	4620      	mov	r0, r4
 8004294:	681b      	ldr	r3, [r3, #0]
 8004296:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004298:	4629      	mov	r1, r5
 800429a:	4630      	mov	r0, r6
 800429c:	f012 fc6c 	bl	8016b78 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80042a0:	682b      	ldr	r3, [r5, #0]
 80042a2:	4628      	mov	r0, r5
 80042a4:	691b      	ldr	r3, [r3, #16]
 80042a6:	4798      	blx	r3
    newTransition->invalidate();
 80042a8:	682b      	ldr	r3, [r5, #0]
 80042aa:	4628      	mov	r0, r5
 80042ac:	695b      	ldr	r3, [r3, #20]
}
 80042ae:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80042b2:	4718      	bx	r3
    model->bind(newPresenter);
 80042b4:	4623      	mov	r3, r4
 80042b6:	e7e2      	b.n	800427e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 80042b8:	0802a348 	.word	0x0802a348
 80042bc:	0802ae47 	.word	0x0802ae47
 80042c0:	0802a4e4 	.word	0x0802a4e4
 80042c4:	0802a52b 	.word	0x0802a52b
 80042c8:	0802a5ce 	.word	0x0802a5ce
 80042cc:	2001381c 	.word	0x2001381c
 80042d0:	20013818 	.word	0x20013818

080042d4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 80042d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80042d8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80042dc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80042de:	68a0      	ldr	r0, [r4, #8]
 80042e0:	6803      	ldr	r3, [r0, #0]
 80042e2:	6a1b      	ldr	r3, [r3, #32]
 80042e4:	4798      	blx	r3
 80042e6:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80042ea:	d205      	bcs.n	80042f8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x24>
 80042ec:	4b42      	ldr	r3, [pc, #264]	; (80043f8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 80042ee:	4a43      	ldr	r2, [pc, #268]	; (80043fc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 80042f0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80042f2:	4843      	ldr	r0, [pc, #268]	; (8004400 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 80042f4:	f024 f964 	bl	80285c0 <__assert_func>
 80042f8:	6860      	ldr	r0, [r4, #4]
 80042fa:	6803      	ldr	r3, [r0, #0]
 80042fc:	6a1b      	ldr	r3, [r3, #32]
 80042fe:	4798      	blx	r3
 8004300:	280f      	cmp	r0, #15
 8004302:	d803      	bhi.n	800430c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x38>
 8004304:	4b3f      	ldr	r3, [pc, #252]	; (8004404 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 8004306:	4a3d      	ldr	r2, [pc, #244]	; (80043fc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004308:	21a4      	movs	r1, #164	; 0xa4
 800430a:	e7f2      	b.n	80042f2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800430c:	68e0      	ldr	r0, [r4, #12]
 800430e:	6803      	ldr	r3, [r0, #0]
 8004310:	6a1b      	ldr	r3, [r3, #32]
 8004312:	4798      	blx	r3
 8004314:	2837      	cmp	r0, #55	; 0x37
 8004316:	d803      	bhi.n	8004320 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4c>
 8004318:	4b3b      	ldr	r3, [pc, #236]	; (8004408 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 800431a:	4a38      	ldr	r2, [pc, #224]	; (80043fc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 800431c:	21a5      	movs	r1, #165	; 0xa5
 800431e:	e7e8      	b.n	80042f2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004320:	f010 fdfe 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004324:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800440c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 8004328:	3004      	adds	r0, #4
 800432a:	f010 fe5f 	bl	8014fec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800432e:	f8d9 0000 	ldr.w	r0, [r9]
 8004332:	b110      	cbz	r0, 800433a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004334:	6803      	ldr	r3, [r0, #0]
 8004336:	68db      	ldr	r3, [r3, #12]
 8004338:	4798      	blx	r3
    if (*currentTrans)
 800433a:	f8d9 0000 	ldr.w	r0, [r9]
 800433e:	b110      	cbz	r0, 8004346 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004340:	6803      	ldr	r3, [r0, #0]
 8004342:	681b      	ldr	r3, [r3, #0]
 8004344:	4798      	blx	r3
    if (*currentScreen)
 8004346:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004410 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 800434a:	f8d8 0000 	ldr.w	r0, [r8]
 800434e:	b110      	cbz	r0, 8004356 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004350:	6803      	ldr	r3, [r0, #0]
 8004352:	695b      	ldr	r3, [r3, #20]
 8004354:	4798      	blx	r3
    if (*currentPresenter)
 8004356:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800435a:	b110      	cbz	r0, 8004362 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800435c:	6803      	ldr	r3, [r0, #0]
 800435e:	685b      	ldr	r3, [r3, #4]
 8004360:	4798      	blx	r3
    if (*currentScreen)
 8004362:	f8d8 0000 	ldr.w	r0, [r8]
 8004366:	b110      	cbz	r0, 800436e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004368:	6803      	ldr	r3, [r0, #0]
 800436a:	681b      	ldr	r3, [r3, #0]
 800436c:	4798      	blx	r3
    if (*currentPresenter)
 800436e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004372:	b110      	cbz	r0, 800437a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004374:	6803      	ldr	r3, [r0, #0]
 8004376:	689b      	ldr	r3, [r3, #8]
 8004378:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800437a:	68e0      	ldr	r0, [r4, #12]
 800437c:	2100      	movs	r1, #0
 800437e:	f7ff fd97 	bl	8003eb0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004382:	2114      	movs	r1, #20
 8004384:	4605      	mov	r5, r0
 8004386:	f7ff fd97 	bl	8003eb8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800438a:	68a0      	ldr	r0, [r4, #8]
 800438c:	6803      	ldr	r3, [r0, #0]
 800438e:	2100      	movs	r1, #0
 8004390:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004392:	4798      	blx	r3
 8004394:	4606      	mov	r6, r0
 8004396:	f003 fe2f 	bl	8007ff8 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800439a:	6860      	ldr	r0, [r4, #4]
 800439c:	6803      	ldr	r3, [r0, #0]
 800439e:	2100      	movs	r1, #0
 80043a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80043a2:	4798      	blx	r3
 80043a4:	4631      	mov	r1, r6
 80043a6:	4604      	mov	r4, r0
 80043a8:	f003 fe00 	bl	8007fac <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 80043ac:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80043b0:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80043b4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80043b8:	b1dc      	cbz	r4, 80043f2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x11e>
 80043ba:	1d23      	adds	r3, r4, #4
 80043bc:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80043c0:	6833      	ldr	r3, [r6, #0]
 80043c2:	f8c4 a008 	str.w	sl, [r4, #8]
 80043c6:	4630      	mov	r0, r6
 80043c8:	68db      	ldr	r3, [r3, #12]
 80043ca:	63f4      	str	r4, [r6, #60]	; 0x3c
 80043cc:	4798      	blx	r3
    newPresenter->activate();
 80043ce:	6823      	ldr	r3, [r4, #0]
 80043d0:	4620      	mov	r0, r4
 80043d2:	681b      	ldr	r3, [r3, #0]
 80043d4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80043d6:	4629      	mov	r1, r5
 80043d8:	4630      	mov	r0, r6
 80043da:	f012 fbcd 	bl	8016b78 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80043de:	682b      	ldr	r3, [r5, #0]
 80043e0:	4628      	mov	r0, r5
 80043e2:	691b      	ldr	r3, [r3, #16]
 80043e4:	4798      	blx	r3
    newTransition->invalidate();
 80043e6:	682b      	ldr	r3, [r5, #0]
 80043e8:	4628      	mov	r0, r5
 80043ea:	695b      	ldr	r3, [r3, #20]
}
 80043ec:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80043f0:	4718      	bx	r3
    model->bind(newPresenter);
 80043f2:	4623      	mov	r3, r4
 80043f4:	e7e2      	b.n	80043bc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xe8>
 80043f6:	bf00      	nop
 80043f8:	0802a348 	.word	0x0802a348
 80043fc:	0802af6d 	.word	0x0802af6d
 8004400:	0802a4e4 	.word	0x0802a4e4
 8004404:	0802a52b 	.word	0x0802a52b
 8004408:	0802a5ce 	.word	0x0802a5ce
 800440c:	2001381c 	.word	0x2001381c
 8004410:	20013818 	.word	0x20013818

08004414 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8004414:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004418:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800441c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800441e:	68a0      	ldr	r0, [r4, #8]
 8004420:	6803      	ldr	r3, [r0, #0]
 8004422:	6a1b      	ldr	r3, [r3, #32]
 8004424:	4798      	blx	r3
 8004426:	f241 33e3 	movw	r3, #5091	; 0x13e3
 800442a:	4298      	cmp	r0, r3
 800442c:	d805      	bhi.n	800443a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 800442e:	4b42      	ldr	r3, [pc, #264]	; (8004538 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8004430:	4a42      	ldr	r2, [pc, #264]	; (800453c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004432:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004434:	4842      	ldr	r0, [pc, #264]	; (8004540 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 8004436:	f024 f8c3 	bl	80285c0 <__assert_func>
 800443a:	6860      	ldr	r0, [r4, #4]
 800443c:	6803      	ldr	r3, [r0, #0]
 800443e:	6a1b      	ldr	r3, [r3, #32]
 8004440:	4798      	blx	r3
 8004442:	280f      	cmp	r0, #15
 8004444:	d803      	bhi.n	800444e <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 8004446:	4b3f      	ldr	r3, [pc, #252]	; (8004544 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8004448:	4a3c      	ldr	r2, [pc, #240]	; (800453c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800444a:	21a4      	movs	r1, #164	; 0xa4
 800444c:	e7f2      	b.n	8004434 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800444e:	68e0      	ldr	r0, [r4, #12]
 8004450:	6803      	ldr	r3, [r0, #0]
 8004452:	6a1b      	ldr	r3, [r3, #32]
 8004454:	4798      	blx	r3
 8004456:	2837      	cmp	r0, #55	; 0x37
 8004458:	d803      	bhi.n	8004462 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 800445a:	4b3b      	ldr	r3, [pc, #236]	; (8004548 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 800445c:	4a37      	ldr	r2, [pc, #220]	; (800453c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800445e:	21a5      	movs	r1, #165	; 0xa5
 8004460:	e7e8      	b.n	8004434 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004462:	f010 fd5d 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004466:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800454c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 800446a:	3004      	adds	r0, #4
 800446c:	f010 fdbe 	bl	8014fec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004470:	f8d9 0000 	ldr.w	r0, [r9]
 8004474:	b110      	cbz	r0, 800447c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004476:	6803      	ldr	r3, [r0, #0]
 8004478:	68db      	ldr	r3, [r3, #12]
 800447a:	4798      	blx	r3
    if (*currentTrans)
 800447c:	f8d9 0000 	ldr.w	r0, [r9]
 8004480:	b110      	cbz	r0, 8004488 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004482:	6803      	ldr	r3, [r0, #0]
 8004484:	681b      	ldr	r3, [r3, #0]
 8004486:	4798      	blx	r3
    if (*currentScreen)
 8004488:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004550 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 800448c:	f8d8 0000 	ldr.w	r0, [r8]
 8004490:	b110      	cbz	r0, 8004498 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004492:	6803      	ldr	r3, [r0, #0]
 8004494:	695b      	ldr	r3, [r3, #20]
 8004496:	4798      	blx	r3
    if (*currentPresenter)
 8004498:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800449c:	b110      	cbz	r0, 80044a4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800449e:	6803      	ldr	r3, [r0, #0]
 80044a0:	685b      	ldr	r3, [r3, #4]
 80044a2:	4798      	blx	r3
    if (*currentScreen)
 80044a4:	f8d8 0000 	ldr.w	r0, [r8]
 80044a8:	b110      	cbz	r0, 80044b0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80044aa:	6803      	ldr	r3, [r0, #0]
 80044ac:	681b      	ldr	r3, [r3, #0]
 80044ae:	4798      	blx	r3
    if (*currentPresenter)
 80044b0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80044b4:	b110      	cbz	r0, 80044bc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80044b6:	6803      	ldr	r3, [r0, #0]
 80044b8:	689b      	ldr	r3, [r3, #8]
 80044ba:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80044bc:	68e0      	ldr	r0, [r4, #12]
 80044be:	2100      	movs	r1, #0
 80044c0:	f7ff fcf6 	bl	8003eb0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80044c4:	2114      	movs	r1, #20
 80044c6:	4605      	mov	r5, r0
 80044c8:	f7ff fcf6 	bl	8003eb8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80044cc:	68a0      	ldr	r0, [r4, #8]
 80044ce:	6803      	ldr	r3, [r0, #0]
 80044d0:	2100      	movs	r1, #0
 80044d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80044d4:	4798      	blx	r3
 80044d6:	4606      	mov	r6, r0
 80044d8:	f004 f80e 	bl	80084f8 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80044dc:	6860      	ldr	r0, [r4, #4]
 80044de:	6803      	ldr	r3, [r0, #0]
 80044e0:	2100      	movs	r1, #0
 80044e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80044e4:	4798      	blx	r3
 80044e6:	4631      	mov	r1, r6
 80044e8:	4604      	mov	r4, r0
 80044ea:	f003 ffdf 	bl	80084ac <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 80044ee:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80044f2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80044f6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80044fa:	b1dc      	cbz	r4, 8004534 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 80044fc:	1d23      	adds	r3, r4, #4
 80044fe:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004502:	6833      	ldr	r3, [r6, #0]
 8004504:	f8c4 a008 	str.w	sl, [r4, #8]
 8004508:	4630      	mov	r0, r6
 800450a:	68db      	ldr	r3, [r3, #12]
 800450c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800450e:	4798      	blx	r3
    newPresenter->activate();
 8004510:	6823      	ldr	r3, [r4, #0]
 8004512:	4620      	mov	r0, r4
 8004514:	681b      	ldr	r3, [r3, #0]
 8004516:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004518:	4629      	mov	r1, r5
 800451a:	4630      	mov	r0, r6
 800451c:	f012 fb2c 	bl	8016b78 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004520:	682b      	ldr	r3, [r5, #0]
 8004522:	4628      	mov	r0, r5
 8004524:	691b      	ldr	r3, [r3, #16]
 8004526:	4798      	blx	r3
    newTransition->invalidate();
 8004528:	682b      	ldr	r3, [r5, #0]
 800452a:	4628      	mov	r0, r5
 800452c:	695b      	ldr	r3, [r3, #20]
}
 800452e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004532:	4718      	bx	r3
    model->bind(newPresenter);
 8004534:	4623      	mov	r3, r4
 8004536:	e7e2      	b.n	80044fe <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8004538:	0802a348 	.word	0x0802a348
 800453c:	0802b08b 	.word	0x0802b08b
 8004540:	0802a4e4 	.word	0x0802a4e4
 8004544:	0802a52b 	.word	0x0802a52b
 8004548:	0802a5ce 	.word	0x0802a5ce
 800454c:	2001381c 	.word	0x2001381c
 8004550:	20013818 	.word	0x20013818

08004554 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 8004554:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004558:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800455c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800455e:	68a0      	ldr	r0, [r4, #8]
 8004560:	6803      	ldr	r3, [r0, #0]
 8004562:	6a1b      	ldr	r3, [r3, #32]
 8004564:	4798      	blx	r3
 8004566:	f241 33e3 	movw	r3, #5091	; 0x13e3
 800456a:	4298      	cmp	r0, r3
 800456c:	d805      	bhi.n	800457a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 800456e:	4b42      	ldr	r3, [pc, #264]	; (8004678 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 8004570:	4a42      	ldr	r2, [pc, #264]	; (800467c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8004572:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004574:	4842      	ldr	r0, [pc, #264]	; (8004680 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 8004576:	f024 f823 	bl	80285c0 <__assert_func>
 800457a:	6860      	ldr	r0, [r4, #4]
 800457c:	6803      	ldr	r3, [r0, #0]
 800457e:	6a1b      	ldr	r3, [r3, #32]
 8004580:	4798      	blx	r3
 8004582:	280f      	cmp	r0, #15
 8004584:	d803      	bhi.n	800458e <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 8004586:	4b3f      	ldr	r3, [pc, #252]	; (8004684 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 8004588:	4a3c      	ldr	r2, [pc, #240]	; (800467c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 800458a:	21a4      	movs	r1, #164	; 0xa4
 800458c:	e7f2      	b.n	8004574 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800458e:	68e0      	ldr	r0, [r4, #12]
 8004590:	6803      	ldr	r3, [r0, #0]
 8004592:	6a1b      	ldr	r3, [r3, #32]
 8004594:	4798      	blx	r3
 8004596:	2837      	cmp	r0, #55	; 0x37
 8004598:	d803      	bhi.n	80045a2 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 800459a:	4b3b      	ldr	r3, [pc, #236]	; (8004688 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 800459c:	4a37      	ldr	r2, [pc, #220]	; (800467c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 800459e:	21a5      	movs	r1, #165	; 0xa5
 80045a0:	e7e8      	b.n	8004574 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80045a2:	f010 fcbd 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80045a6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800468c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 80045aa:	3004      	adds	r0, #4
 80045ac:	f010 fd1e 	bl	8014fec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80045b0:	f8d9 0000 	ldr.w	r0, [r9]
 80045b4:	b110      	cbz	r0, 80045bc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80045b6:	6803      	ldr	r3, [r0, #0]
 80045b8:	68db      	ldr	r3, [r3, #12]
 80045ba:	4798      	blx	r3
    if (*currentTrans)
 80045bc:	f8d9 0000 	ldr.w	r0, [r9]
 80045c0:	b110      	cbz	r0, 80045c8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80045c2:	6803      	ldr	r3, [r0, #0]
 80045c4:	681b      	ldr	r3, [r3, #0]
 80045c6:	4798      	blx	r3
    if (*currentScreen)
 80045c8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004690 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 80045cc:	f8d8 0000 	ldr.w	r0, [r8]
 80045d0:	b110      	cbz	r0, 80045d8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80045d2:	6803      	ldr	r3, [r0, #0]
 80045d4:	695b      	ldr	r3, [r3, #20]
 80045d6:	4798      	blx	r3
    if (*currentPresenter)
 80045d8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80045dc:	b110      	cbz	r0, 80045e4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80045de:	6803      	ldr	r3, [r0, #0]
 80045e0:	685b      	ldr	r3, [r3, #4]
 80045e2:	4798      	blx	r3
    if (*currentScreen)
 80045e4:	f8d8 0000 	ldr.w	r0, [r8]
 80045e8:	b110      	cbz	r0, 80045f0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80045ea:	6803      	ldr	r3, [r0, #0]
 80045ec:	681b      	ldr	r3, [r3, #0]
 80045ee:	4798      	blx	r3
    if (*currentPresenter)
 80045f0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80045f4:	b110      	cbz	r0, 80045fc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80045f6:	6803      	ldr	r3, [r0, #0]
 80045f8:	689b      	ldr	r3, [r3, #8]
 80045fa:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80045fc:	68e0      	ldr	r0, [r4, #12]
 80045fe:	2100      	movs	r1, #0
 8004600:	f7ff fc56 	bl	8003eb0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004604:	2114      	movs	r1, #20
 8004606:	4605      	mov	r5, r0
 8004608:	f7ff fc56 	bl	8003eb8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800460c:	68a0      	ldr	r0, [r4, #8]
 800460e:	6803      	ldr	r3, [r0, #0]
 8004610:	2100      	movs	r1, #0
 8004612:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004614:	4798      	blx	r3
 8004616:	4606      	mov	r6, r0
 8004618:	f003 ff2c 	bl	8008474 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800461c:	6860      	ldr	r0, [r4, #4]
 800461e:	6803      	ldr	r3, [r0, #0]
 8004620:	2100      	movs	r1, #0
 8004622:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004624:	4798      	blx	r3
 8004626:	4631      	mov	r1, r6
 8004628:	4604      	mov	r4, r0
 800462a:	f003 fefd 	bl	8008428 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 800462e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004632:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004636:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800463a:	b1dc      	cbz	r4, 8004674 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 800463c:	1d23      	adds	r3, r4, #4
 800463e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004642:	6833      	ldr	r3, [r6, #0]
 8004644:	f8c4 a008 	str.w	sl, [r4, #8]
 8004648:	4630      	mov	r0, r6
 800464a:	68db      	ldr	r3, [r3, #12]
 800464c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800464e:	4798      	blx	r3
    newPresenter->activate();
 8004650:	6823      	ldr	r3, [r4, #0]
 8004652:	4620      	mov	r0, r4
 8004654:	681b      	ldr	r3, [r3, #0]
 8004656:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004658:	4629      	mov	r1, r5
 800465a:	4630      	mov	r0, r6
 800465c:	f012 fa8c 	bl	8016b78 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004660:	682b      	ldr	r3, [r5, #0]
 8004662:	4628      	mov	r0, r5
 8004664:	691b      	ldr	r3, [r3, #16]
 8004666:	4798      	blx	r3
    newTransition->invalidate();
 8004668:	682b      	ldr	r3, [r5, #0]
 800466a:	4628      	mov	r0, r5
 800466c:	695b      	ldr	r3, [r3, #20]
}
 800466e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004672:	4718      	bx	r3
    model->bind(newPresenter);
 8004674:	4623      	mov	r3, r4
 8004676:	e7e2      	b.n	800463e <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 8004678:	0802a348 	.word	0x0802a348
 800467c:	0802b1cf 	.word	0x0802b1cf
 8004680:	0802a4e4 	.word	0x0802a4e4
 8004684:	0802a52b 	.word	0x0802a52b
 8004688:	0802a5ce 	.word	0x0802a5ce
 800468c:	2001381c 	.word	0x2001381c
 8004690:	20013818 	.word	0x20013818

08004694 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 8004694:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004698:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800469c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800469e:	68a0      	ldr	r0, [r4, #8]
 80046a0:	6803      	ldr	r3, [r0, #0]
 80046a2:	6a1b      	ldr	r3, [r3, #32]
 80046a4:	4798      	blx	r3
 80046a6:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80046aa:	d205      	bcs.n	80046b8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 80046ac:	4b42      	ldr	r3, [pc, #264]	; (80047b8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 80046ae:	4a43      	ldr	r2, [pc, #268]	; (80047bc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80046b0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80046b2:	4843      	ldr	r0, [pc, #268]	; (80047c0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 80046b4:	f023 ff84 	bl	80285c0 <__assert_func>
 80046b8:	6860      	ldr	r0, [r4, #4]
 80046ba:	6803      	ldr	r3, [r0, #0]
 80046bc:	6a1b      	ldr	r3, [r3, #32]
 80046be:	4798      	blx	r3
 80046c0:	280f      	cmp	r0, #15
 80046c2:	d803      	bhi.n	80046cc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 80046c4:	4b3f      	ldr	r3, [pc, #252]	; (80047c4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 80046c6:	4a3d      	ldr	r2, [pc, #244]	; (80047bc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80046c8:	21a4      	movs	r1, #164	; 0xa4
 80046ca:	e7f2      	b.n	80046b2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80046cc:	68e0      	ldr	r0, [r4, #12]
 80046ce:	6803      	ldr	r3, [r0, #0]
 80046d0:	6a1b      	ldr	r3, [r3, #32]
 80046d2:	4798      	blx	r3
 80046d4:	2837      	cmp	r0, #55	; 0x37
 80046d6:	d803      	bhi.n	80046e0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 80046d8:	4b3b      	ldr	r3, [pc, #236]	; (80047c8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 80046da:	4a38      	ldr	r2, [pc, #224]	; (80047bc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80046dc:	21a5      	movs	r1, #165	; 0xa5
 80046de:	e7e8      	b.n	80046b2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80046e0:	f010 fc1e 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80046e4:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80047cc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 80046e8:	3004      	adds	r0, #4
 80046ea:	f010 fc7f 	bl	8014fec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80046ee:	f8d9 0000 	ldr.w	r0, [r9]
 80046f2:	b110      	cbz	r0, 80046fa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80046f4:	6803      	ldr	r3, [r0, #0]
 80046f6:	68db      	ldr	r3, [r3, #12]
 80046f8:	4798      	blx	r3
    if (*currentTrans)
 80046fa:	f8d9 0000 	ldr.w	r0, [r9]
 80046fe:	b110      	cbz	r0, 8004706 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004700:	6803      	ldr	r3, [r0, #0]
 8004702:	681b      	ldr	r3, [r3, #0]
 8004704:	4798      	blx	r3
    if (*currentScreen)
 8004706:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80047d0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 800470a:	f8d8 0000 	ldr.w	r0, [r8]
 800470e:	b110      	cbz	r0, 8004716 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004710:	6803      	ldr	r3, [r0, #0]
 8004712:	695b      	ldr	r3, [r3, #20]
 8004714:	4798      	blx	r3
    if (*currentPresenter)
 8004716:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800471a:	b110      	cbz	r0, 8004722 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800471c:	6803      	ldr	r3, [r0, #0]
 800471e:	685b      	ldr	r3, [r3, #4]
 8004720:	4798      	blx	r3
    if (*currentScreen)
 8004722:	f8d8 0000 	ldr.w	r0, [r8]
 8004726:	b110      	cbz	r0, 800472e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004728:	6803      	ldr	r3, [r0, #0]
 800472a:	681b      	ldr	r3, [r3, #0]
 800472c:	4798      	blx	r3
    if (*currentPresenter)
 800472e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004732:	b110      	cbz	r0, 800473a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004734:	6803      	ldr	r3, [r0, #0]
 8004736:	689b      	ldr	r3, [r3, #8]
 8004738:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800473a:	68e0      	ldr	r0, [r4, #12]
 800473c:	2100      	movs	r1, #0
 800473e:	f7ff fbb7 	bl	8003eb0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004742:	2114      	movs	r1, #20
 8004744:	4605      	mov	r5, r0
 8004746:	f7ff fbb7 	bl	8003eb8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800474a:	68a0      	ldr	r0, [r4, #8]
 800474c:	6803      	ldr	r3, [r0, #0]
 800474e:	2100      	movs	r1, #0
 8004750:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004752:	4798      	blx	r3
 8004754:	4606      	mov	r6, r0
 8004756:	f003 fe33 	bl	80083c0 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800475a:	6860      	ldr	r0, [r4, #4]
 800475c:	6803      	ldr	r3, [r0, #0]
 800475e:	2100      	movs	r1, #0
 8004760:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004762:	4798      	blx	r3
 8004764:	4631      	mov	r1, r6
 8004766:	4604      	mov	r4, r0
 8004768:	f003 fe04 	bl	8008374 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 800476c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004770:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004774:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004778:	b1dc      	cbz	r4, 80047b2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 800477a:	1d23      	adds	r3, r4, #4
 800477c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004780:	6833      	ldr	r3, [r6, #0]
 8004782:	f8c4 a008 	str.w	sl, [r4, #8]
 8004786:	4630      	mov	r0, r6
 8004788:	68db      	ldr	r3, [r3, #12]
 800478a:	63f4      	str	r4, [r6, #60]	; 0x3c
 800478c:	4798      	blx	r3
    newPresenter->activate();
 800478e:	6823      	ldr	r3, [r4, #0]
 8004790:	4620      	mov	r0, r4
 8004792:	681b      	ldr	r3, [r3, #0]
 8004794:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004796:	4629      	mov	r1, r5
 8004798:	4630      	mov	r0, r6
 800479a:	f012 f9ed 	bl	8016b78 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800479e:	682b      	ldr	r3, [r5, #0]
 80047a0:	4628      	mov	r0, r5
 80047a2:	691b      	ldr	r3, [r3, #16]
 80047a4:	4798      	blx	r3
    newTransition->invalidate();
 80047a6:	682b      	ldr	r3, [r5, #0]
 80047a8:	4628      	mov	r0, r5
 80047aa:	695b      	ldr	r3, [r3, #20]
}
 80047ac:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80047b0:	4718      	bx	r3
    model->bind(newPresenter);
 80047b2:	4623      	mov	r3, r4
 80047b4:	e7e2      	b.n	800477c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 80047b6:	bf00      	nop
 80047b8:	0802a348 	.word	0x0802a348
 80047bc:	0802b30f 	.word	0x0802b30f
 80047c0:	0802a4e4 	.word	0x0802a4e4
 80047c4:	0802a52b 	.word	0x0802a52b
 80047c8:	0802a5ce 	.word	0x0802a5ce
 80047cc:	2001381c 	.word	0x2001381c
 80047d0:	20013818 	.word	0x20013818

080047d4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 80047d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80047d8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80047dc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80047de:	68a0      	ldr	r0, [r4, #8]
 80047e0:	6803      	ldr	r3, [r0, #0]
 80047e2:	6a1b      	ldr	r3, [r3, #32]
 80047e4:	4798      	blx	r3
 80047e6:	f241 33e3 	movw	r3, #5091	; 0x13e3
 80047ea:	4298      	cmp	r0, r3
 80047ec:	d805      	bhi.n	80047fa <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 80047ee:	4b42      	ldr	r3, [pc, #264]	; (80048f8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 80047f0:	4a42      	ldr	r2, [pc, #264]	; (80048fc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 80047f2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80047f4:	4842      	ldr	r0, [pc, #264]	; (8004900 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 80047f6:	f023 fee3 	bl	80285c0 <__assert_func>
 80047fa:	6860      	ldr	r0, [r4, #4]
 80047fc:	6803      	ldr	r3, [r0, #0]
 80047fe:	6a1b      	ldr	r3, [r3, #32]
 8004800:	4798      	blx	r3
 8004802:	280f      	cmp	r0, #15
 8004804:	d803      	bhi.n	800480e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 8004806:	4b3f      	ldr	r3, [pc, #252]	; (8004904 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8004808:	4a3c      	ldr	r2, [pc, #240]	; (80048fc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800480a:	21a4      	movs	r1, #164	; 0xa4
 800480c:	e7f2      	b.n	80047f4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800480e:	68e0      	ldr	r0, [r4, #12]
 8004810:	6803      	ldr	r3, [r0, #0]
 8004812:	6a1b      	ldr	r3, [r3, #32]
 8004814:	4798      	blx	r3
 8004816:	2837      	cmp	r0, #55	; 0x37
 8004818:	d803      	bhi.n	8004822 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 800481a:	4b3b      	ldr	r3, [pc, #236]	; (8004908 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 800481c:	4a37      	ldr	r2, [pc, #220]	; (80048fc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800481e:	21a5      	movs	r1, #165	; 0xa5
 8004820:	e7e8      	b.n	80047f4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004822:	f010 fb7d 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004826:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800490c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 800482a:	3004      	adds	r0, #4
 800482c:	f010 fbde 	bl	8014fec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004830:	f8d9 0000 	ldr.w	r0, [r9]
 8004834:	b110      	cbz	r0, 800483c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004836:	6803      	ldr	r3, [r0, #0]
 8004838:	68db      	ldr	r3, [r3, #12]
 800483a:	4798      	blx	r3
    if (*currentTrans)
 800483c:	f8d9 0000 	ldr.w	r0, [r9]
 8004840:	b110      	cbz	r0, 8004848 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004842:	6803      	ldr	r3, [r0, #0]
 8004844:	681b      	ldr	r3, [r3, #0]
 8004846:	4798      	blx	r3
    if (*currentScreen)
 8004848:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004910 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 800484c:	f8d8 0000 	ldr.w	r0, [r8]
 8004850:	b110      	cbz	r0, 8004858 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004852:	6803      	ldr	r3, [r0, #0]
 8004854:	695b      	ldr	r3, [r3, #20]
 8004856:	4798      	blx	r3
    if (*currentPresenter)
 8004858:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800485c:	b110      	cbz	r0, 8004864 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800485e:	6803      	ldr	r3, [r0, #0]
 8004860:	685b      	ldr	r3, [r3, #4]
 8004862:	4798      	blx	r3
    if (*currentScreen)
 8004864:	f8d8 0000 	ldr.w	r0, [r8]
 8004868:	b110      	cbz	r0, 8004870 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800486a:	6803      	ldr	r3, [r0, #0]
 800486c:	681b      	ldr	r3, [r3, #0]
 800486e:	4798      	blx	r3
    if (*currentPresenter)
 8004870:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004874:	b110      	cbz	r0, 800487c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004876:	6803      	ldr	r3, [r0, #0]
 8004878:	689b      	ldr	r3, [r3, #8]
 800487a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800487c:	68e0      	ldr	r0, [r4, #12]
 800487e:	2100      	movs	r1, #0
 8004880:	f7ff fb16 	bl	8003eb0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004884:	2114      	movs	r1, #20
 8004886:	4605      	mov	r5, r0
 8004888:	f7ff fb16 	bl	8003eb8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800488c:	68a0      	ldr	r0, [r4, #8]
 800488e:	6803      	ldr	r3, [r0, #0]
 8004890:	2100      	movs	r1, #0
 8004892:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004894:	4798      	blx	r3
 8004896:	4606      	mov	r6, r0
 8004898:	f003 ff48 	bl	800872c <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800489c:	6860      	ldr	r0, [r4, #4]
 800489e:	6803      	ldr	r3, [r0, #0]
 80048a0:	2100      	movs	r1, #0
 80048a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80048a4:	4798      	blx	r3
 80048a6:	4631      	mov	r1, r6
 80048a8:	4604      	mov	r4, r0
 80048aa:	f003 ff19 	bl	80086e0 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 80048ae:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80048b2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80048b6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80048ba:	b1dc      	cbz	r4, 80048f4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 80048bc:	1d23      	adds	r3, r4, #4
 80048be:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80048c2:	6833      	ldr	r3, [r6, #0]
 80048c4:	f8c4 a008 	str.w	sl, [r4, #8]
 80048c8:	4630      	mov	r0, r6
 80048ca:	68db      	ldr	r3, [r3, #12]
 80048cc:	63f4      	str	r4, [r6, #60]	; 0x3c
 80048ce:	4798      	blx	r3
    newPresenter->activate();
 80048d0:	6823      	ldr	r3, [r4, #0]
 80048d2:	4620      	mov	r0, r4
 80048d4:	681b      	ldr	r3, [r3, #0]
 80048d6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80048d8:	4629      	mov	r1, r5
 80048da:	4630      	mov	r0, r6
 80048dc:	f012 f94c 	bl	8016b78 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80048e0:	682b      	ldr	r3, [r5, #0]
 80048e2:	4628      	mov	r0, r5
 80048e4:	691b      	ldr	r3, [r3, #16]
 80048e6:	4798      	blx	r3
    newTransition->invalidate();
 80048e8:	682b      	ldr	r3, [r5, #0]
 80048ea:	4628      	mov	r0, r5
 80048ec:	695b      	ldr	r3, [r3, #20]
}
 80048ee:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80048f2:	4718      	bx	r3
    model->bind(newPresenter);
 80048f4:	4623      	mov	r3, r4
 80048f6:	e7e2      	b.n	80048be <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 80048f8:	0802a348 	.word	0x0802a348
 80048fc:	0802b43f 	.word	0x0802b43f
 8004900:	0802a4e4 	.word	0x0802a4e4
 8004904:	0802a52b 	.word	0x0802a52b
 8004908:	0802a5ce 	.word	0x0802a5ce
 800490c:	2001381c 	.word	0x2001381c
 8004910:	20013818 	.word	0x20013818

08004914 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8004914:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004918:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800491c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800491e:	68a0      	ldr	r0, [r4, #8]
 8004920:	6803      	ldr	r3, [r0, #0]
 8004922:	6a1b      	ldr	r3, [r3, #32]
 8004924:	4798      	blx	r3
 8004926:	f241 33f3 	movw	r3, #5107	; 0x13f3
 800492a:	4298      	cmp	r0, r3
 800492c:	d805      	bhi.n	800493a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 800492e:	4b42      	ldr	r3, [pc, #264]	; (8004a38 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8004930:	4a42      	ldr	r2, [pc, #264]	; (8004a3c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004932:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004934:	4842      	ldr	r0, [pc, #264]	; (8004a40 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8004936:	f023 fe43 	bl	80285c0 <__assert_func>
 800493a:	6860      	ldr	r0, [r4, #4]
 800493c:	6803      	ldr	r3, [r0, #0]
 800493e:	6a1b      	ldr	r3, [r3, #32]
 8004940:	4798      	blx	r3
 8004942:	280f      	cmp	r0, #15
 8004944:	d803      	bhi.n	800494e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 8004946:	4b3f      	ldr	r3, [pc, #252]	; (8004a44 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8004948:	4a3c      	ldr	r2, [pc, #240]	; (8004a3c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 800494a:	21a4      	movs	r1, #164	; 0xa4
 800494c:	e7f2      	b.n	8004934 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800494e:	68e0      	ldr	r0, [r4, #12]
 8004950:	6803      	ldr	r3, [r0, #0]
 8004952:	6a1b      	ldr	r3, [r3, #32]
 8004954:	4798      	blx	r3
 8004956:	2837      	cmp	r0, #55	; 0x37
 8004958:	d803      	bhi.n	8004962 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 800495a:	4b3b      	ldr	r3, [pc, #236]	; (8004a48 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 800495c:	4a37      	ldr	r2, [pc, #220]	; (8004a3c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 800495e:	21a5      	movs	r1, #165	; 0xa5
 8004960:	e7e8      	b.n	8004934 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004962:	f010 fadd 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004966:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004a4c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 800496a:	3004      	adds	r0, #4
 800496c:	f010 fb3e 	bl	8014fec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004970:	f8d9 0000 	ldr.w	r0, [r9]
 8004974:	b110      	cbz	r0, 800497c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004976:	6803      	ldr	r3, [r0, #0]
 8004978:	68db      	ldr	r3, [r3, #12]
 800497a:	4798      	blx	r3
    if (*currentTrans)
 800497c:	f8d9 0000 	ldr.w	r0, [r9]
 8004980:	b110      	cbz	r0, 8004988 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004982:	6803      	ldr	r3, [r0, #0]
 8004984:	681b      	ldr	r3, [r3, #0]
 8004986:	4798      	blx	r3
    if (*currentScreen)
 8004988:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004a50 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 800498c:	f8d8 0000 	ldr.w	r0, [r8]
 8004990:	b110      	cbz	r0, 8004998 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004992:	6803      	ldr	r3, [r0, #0]
 8004994:	695b      	ldr	r3, [r3, #20]
 8004996:	4798      	blx	r3
    if (*currentPresenter)
 8004998:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800499c:	b110      	cbz	r0, 80049a4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800499e:	6803      	ldr	r3, [r0, #0]
 80049a0:	685b      	ldr	r3, [r3, #4]
 80049a2:	4798      	blx	r3
    if (*currentScreen)
 80049a4:	f8d8 0000 	ldr.w	r0, [r8]
 80049a8:	b110      	cbz	r0, 80049b0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80049aa:	6803      	ldr	r3, [r0, #0]
 80049ac:	681b      	ldr	r3, [r3, #0]
 80049ae:	4798      	blx	r3
    if (*currentPresenter)
 80049b0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80049b4:	b110      	cbz	r0, 80049bc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80049b6:	6803      	ldr	r3, [r0, #0]
 80049b8:	689b      	ldr	r3, [r3, #8]
 80049ba:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80049bc:	68e0      	ldr	r0, [r4, #12]
 80049be:	2100      	movs	r1, #0
 80049c0:	f7ff fa76 	bl	8003eb0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80049c4:	2114      	movs	r1, #20
 80049c6:	4605      	mov	r5, r0
 80049c8:	f7ff fa76 	bl	8003eb8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80049cc:	68a0      	ldr	r0, [r4, #8]
 80049ce:	6803      	ldr	r3, [r0, #0]
 80049d0:	2100      	movs	r1, #0
 80049d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049d4:	4798      	blx	r3
 80049d6:	4606      	mov	r6, r0
 80049d8:	f003 fe30 	bl	800863c <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80049dc:	6860      	ldr	r0, [r4, #4]
 80049de:	6803      	ldr	r3, [r0, #0]
 80049e0:	2100      	movs	r1, #0
 80049e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049e4:	4798      	blx	r3
 80049e6:	4631      	mov	r1, r6
 80049e8:	4604      	mov	r4, r0
 80049ea:	f003 fe01 	bl	80085f0 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 80049ee:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80049f2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80049f6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80049fa:	b1dc      	cbz	r4, 8004a34 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 80049fc:	1d23      	adds	r3, r4, #4
 80049fe:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004a02:	6833      	ldr	r3, [r6, #0]
 8004a04:	f8c4 a008 	str.w	sl, [r4, #8]
 8004a08:	4630      	mov	r0, r6
 8004a0a:	68db      	ldr	r3, [r3, #12]
 8004a0c:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004a0e:	4798      	blx	r3
    newPresenter->activate();
 8004a10:	6823      	ldr	r3, [r4, #0]
 8004a12:	4620      	mov	r0, r4
 8004a14:	681b      	ldr	r3, [r3, #0]
 8004a16:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004a18:	4629      	mov	r1, r5
 8004a1a:	4630      	mov	r0, r6
 8004a1c:	f012 f8ac 	bl	8016b78 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004a20:	682b      	ldr	r3, [r5, #0]
 8004a22:	4628      	mov	r0, r5
 8004a24:	691b      	ldr	r3, [r3, #16]
 8004a26:	4798      	blx	r3
    newTransition->invalidate();
 8004a28:	682b      	ldr	r3, [r5, #0]
 8004a2a:	4628      	mov	r0, r5
 8004a2c:	695b      	ldr	r3, [r3, #20]
}
 8004a2e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004a32:	4718      	bx	r3
    model->bind(newPresenter);
 8004a34:	4623      	mov	r3, r4
 8004a36:	e7e2      	b.n	80049fe <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8004a38:	0802a348 	.word	0x0802a348
 8004a3c:	0802b581 	.word	0x0802b581
 8004a40:	0802a4e4 	.word	0x0802a4e4
 8004a44:	0802a52b 	.word	0x0802a52b
 8004a48:	0802a5ce 	.word	0x0802a5ce
 8004a4c:	2001381c 	.word	0x2001381c
 8004a50:	20013818 	.word	0x20013818

08004a54 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8004a54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004a58:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004a5c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004a5e:	68a0      	ldr	r0, [r4, #8]
 8004a60:	6803      	ldr	r3, [r0, #0]
 8004a62:	6a1b      	ldr	r3, [r3, #32]
 8004a64:	4798      	blx	r3
 8004a66:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004a6a:	d205      	bcs.n	8004a78 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 8004a6c:	4b42      	ldr	r3, [pc, #264]	; (8004b78 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8004a6e:	4a43      	ldr	r2, [pc, #268]	; (8004b7c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004a70:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004a72:	4843      	ldr	r0, [pc, #268]	; (8004b80 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 8004a74:	f023 fda4 	bl	80285c0 <__assert_func>
 8004a78:	6860      	ldr	r0, [r4, #4]
 8004a7a:	6803      	ldr	r3, [r0, #0]
 8004a7c:	6a1b      	ldr	r3, [r3, #32]
 8004a7e:	4798      	blx	r3
 8004a80:	280f      	cmp	r0, #15
 8004a82:	d803      	bhi.n	8004a8c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 8004a84:	4b3f      	ldr	r3, [pc, #252]	; (8004b84 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 8004a86:	4a3d      	ldr	r2, [pc, #244]	; (8004b7c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004a88:	21a4      	movs	r1, #164	; 0xa4
 8004a8a:	e7f2      	b.n	8004a72 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004a8c:	68e0      	ldr	r0, [r4, #12]
 8004a8e:	6803      	ldr	r3, [r0, #0]
 8004a90:	6a1b      	ldr	r3, [r3, #32]
 8004a92:	4798      	blx	r3
 8004a94:	2837      	cmp	r0, #55	; 0x37
 8004a96:	d803      	bhi.n	8004aa0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8004a98:	4b3b      	ldr	r3, [pc, #236]	; (8004b88 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8004a9a:	4a38      	ldr	r2, [pc, #224]	; (8004b7c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004a9c:	21a5      	movs	r1, #165	; 0xa5
 8004a9e:	e7e8      	b.n	8004a72 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004aa0:	f010 fa3e 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004aa4:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004b8c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8004aa8:	3004      	adds	r0, #4
 8004aaa:	f010 fa9f 	bl	8014fec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004aae:	f8d9 0000 	ldr.w	r0, [r9]
 8004ab2:	b110      	cbz	r0, 8004aba <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004ab4:	6803      	ldr	r3, [r0, #0]
 8004ab6:	68db      	ldr	r3, [r3, #12]
 8004ab8:	4798      	blx	r3
    if (*currentTrans)
 8004aba:	f8d9 0000 	ldr.w	r0, [r9]
 8004abe:	b110      	cbz	r0, 8004ac6 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004ac0:	6803      	ldr	r3, [r0, #0]
 8004ac2:	681b      	ldr	r3, [r3, #0]
 8004ac4:	4798      	blx	r3
    if (*currentScreen)
 8004ac6:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004b90 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8004aca:	f8d8 0000 	ldr.w	r0, [r8]
 8004ace:	b110      	cbz	r0, 8004ad6 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004ad0:	6803      	ldr	r3, [r0, #0]
 8004ad2:	695b      	ldr	r3, [r3, #20]
 8004ad4:	4798      	blx	r3
    if (*currentPresenter)
 8004ad6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004ada:	b110      	cbz	r0, 8004ae2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004adc:	6803      	ldr	r3, [r0, #0]
 8004ade:	685b      	ldr	r3, [r3, #4]
 8004ae0:	4798      	blx	r3
    if (*currentScreen)
 8004ae2:	f8d8 0000 	ldr.w	r0, [r8]
 8004ae6:	b110      	cbz	r0, 8004aee <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004ae8:	6803      	ldr	r3, [r0, #0]
 8004aea:	681b      	ldr	r3, [r3, #0]
 8004aec:	4798      	blx	r3
    if (*currentPresenter)
 8004aee:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004af2:	b110      	cbz	r0, 8004afa <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004af4:	6803      	ldr	r3, [r0, #0]
 8004af6:	689b      	ldr	r3, [r3, #8]
 8004af8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004afa:	68e0      	ldr	r0, [r4, #12]
 8004afc:	2100      	movs	r1, #0
 8004afe:	f7ff f9d7 	bl	8003eb0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004b02:	2114      	movs	r1, #20
 8004b04:	4605      	mov	r5, r0
 8004b06:	f7ff f9d7 	bl	8003eb8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004b0a:	68a0      	ldr	r0, [r4, #8]
 8004b0c:	6803      	ldr	r3, [r0, #0]
 8004b0e:	2100      	movs	r1, #0
 8004b10:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b12:	4798      	blx	r3
 8004b14:	4606      	mov	r6, r0
 8004b16:	f003 fd37 	bl	8008588 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004b1a:	6860      	ldr	r0, [r4, #4]
 8004b1c:	6803      	ldr	r3, [r0, #0]
 8004b1e:	2100      	movs	r1, #0
 8004b20:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b22:	4798      	blx	r3
 8004b24:	4631      	mov	r1, r6
 8004b26:	4604      	mov	r4, r0
 8004b28:	f003 fd08 	bl	800853c <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8004b2c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004b30:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004b34:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004b38:	b1dc      	cbz	r4, 8004b72 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8004b3a:	1d23      	adds	r3, r4, #4
 8004b3c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004b40:	6833      	ldr	r3, [r6, #0]
 8004b42:	f8c4 a008 	str.w	sl, [r4, #8]
 8004b46:	4630      	mov	r0, r6
 8004b48:	68db      	ldr	r3, [r3, #12]
 8004b4a:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004b4c:	4798      	blx	r3
    newPresenter->activate();
 8004b4e:	6823      	ldr	r3, [r4, #0]
 8004b50:	4620      	mov	r0, r4
 8004b52:	681b      	ldr	r3, [r3, #0]
 8004b54:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004b56:	4629      	mov	r1, r5
 8004b58:	4630      	mov	r0, r6
 8004b5a:	f012 f80d 	bl	8016b78 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004b5e:	682b      	ldr	r3, [r5, #0]
 8004b60:	4628      	mov	r0, r5
 8004b62:	691b      	ldr	r3, [r3, #16]
 8004b64:	4798      	blx	r3
    newTransition->invalidate();
 8004b66:	682b      	ldr	r3, [r5, #0]
 8004b68:	4628      	mov	r0, r5
 8004b6a:	695b      	ldr	r3, [r3, #20]
}
 8004b6c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004b70:	4718      	bx	r3
    model->bind(newPresenter);
 8004b72:	4623      	mov	r3, r4
 8004b74:	e7e2      	b.n	8004b3c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 8004b76:	bf00      	nop
 8004b78:	0802a348 	.word	0x0802a348
 8004b7c:	0802b6c3 	.word	0x0802b6c3
 8004b80:	0802a4e4 	.word	0x0802a4e4
 8004b84:	0802a52b 	.word	0x0802a52b
 8004b88:	0802a5ce 	.word	0x0802a5ce
 8004b8c:	2001381c 	.word	0x2001381c
 8004b90:	20013818 	.word	0x20013818

08004b94 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8004b94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004b98:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004b9c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004b9e:	68a0      	ldr	r0, [r4, #8]
 8004ba0:	6803      	ldr	r3, [r0, #0]
 8004ba2:	6a1b      	ldr	r3, [r3, #32]
 8004ba4:	4798      	blx	r3
 8004ba6:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004baa:	d205      	bcs.n	8004bb8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8004bac:	4b42      	ldr	r3, [pc, #264]	; (8004cb8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8004bae:	4a43      	ldr	r2, [pc, #268]	; (8004cbc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004bb0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004bb2:	4843      	ldr	r0, [pc, #268]	; (8004cc0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8004bb4:	f023 fd04 	bl	80285c0 <__assert_func>
 8004bb8:	6860      	ldr	r0, [r4, #4]
 8004bba:	6803      	ldr	r3, [r0, #0]
 8004bbc:	6a1b      	ldr	r3, [r3, #32]
 8004bbe:	4798      	blx	r3
 8004bc0:	280f      	cmp	r0, #15
 8004bc2:	d803      	bhi.n	8004bcc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8004bc4:	4b3f      	ldr	r3, [pc, #252]	; (8004cc4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8004bc6:	4a3d      	ldr	r2, [pc, #244]	; (8004cbc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004bc8:	21a4      	movs	r1, #164	; 0xa4
 8004bca:	e7f2      	b.n	8004bb2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004bcc:	68e0      	ldr	r0, [r4, #12]
 8004bce:	6803      	ldr	r3, [r0, #0]
 8004bd0:	6a1b      	ldr	r3, [r3, #32]
 8004bd2:	4798      	blx	r3
 8004bd4:	2837      	cmp	r0, #55	; 0x37
 8004bd6:	d803      	bhi.n	8004be0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8004bd8:	4b3b      	ldr	r3, [pc, #236]	; (8004cc8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8004bda:	4a38      	ldr	r2, [pc, #224]	; (8004cbc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004bdc:	21a5      	movs	r1, #165	; 0xa5
 8004bde:	e7e8      	b.n	8004bb2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004be0:	f010 f99e 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004be4:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004ccc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8004be8:	3004      	adds	r0, #4
 8004bea:	f010 f9ff 	bl	8014fec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004bee:	f8d9 0000 	ldr.w	r0, [r9]
 8004bf2:	b110      	cbz	r0, 8004bfa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004bf4:	6803      	ldr	r3, [r0, #0]
 8004bf6:	68db      	ldr	r3, [r3, #12]
 8004bf8:	4798      	blx	r3
    if (*currentTrans)
 8004bfa:	f8d9 0000 	ldr.w	r0, [r9]
 8004bfe:	b110      	cbz	r0, 8004c06 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004c00:	6803      	ldr	r3, [r0, #0]
 8004c02:	681b      	ldr	r3, [r3, #0]
 8004c04:	4798      	blx	r3
    if (*currentScreen)
 8004c06:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004cd0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8004c0a:	f8d8 0000 	ldr.w	r0, [r8]
 8004c0e:	b110      	cbz	r0, 8004c16 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004c10:	6803      	ldr	r3, [r0, #0]
 8004c12:	695b      	ldr	r3, [r3, #20]
 8004c14:	4798      	blx	r3
    if (*currentPresenter)
 8004c16:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c1a:	b110      	cbz	r0, 8004c22 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004c1c:	6803      	ldr	r3, [r0, #0]
 8004c1e:	685b      	ldr	r3, [r3, #4]
 8004c20:	4798      	blx	r3
    if (*currentScreen)
 8004c22:	f8d8 0000 	ldr.w	r0, [r8]
 8004c26:	b110      	cbz	r0, 8004c2e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004c28:	6803      	ldr	r3, [r0, #0]
 8004c2a:	681b      	ldr	r3, [r3, #0]
 8004c2c:	4798      	blx	r3
    if (*currentPresenter)
 8004c2e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c32:	b110      	cbz	r0, 8004c3a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004c34:	6803      	ldr	r3, [r0, #0]
 8004c36:	689b      	ldr	r3, [r3, #8]
 8004c38:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004c3a:	68e0      	ldr	r0, [r4, #12]
 8004c3c:	2100      	movs	r1, #0
 8004c3e:	f7ff f937 	bl	8003eb0 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004c42:	2114      	movs	r1, #20
 8004c44:	4605      	mov	r5, r0
 8004c46:	f7ff f937 	bl	8003eb8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004c4a:	68a0      	ldr	r0, [r4, #8]
 8004c4c:	6803      	ldr	r3, [r0, #0]
 8004c4e:	2100      	movs	r1, #0
 8004c50:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c52:	4798      	blx	r3
 8004c54:	4606      	mov	r6, r0
 8004c56:	f003 fb53 	bl	8008300 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004c5a:	6860      	ldr	r0, [r4, #4]
 8004c5c:	6803      	ldr	r3, [r0, #0]
 8004c5e:	2100      	movs	r1, #0
 8004c60:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c62:	4798      	blx	r3
 8004c64:	4631      	mov	r1, r6
 8004c66:	4604      	mov	r4, r0
 8004c68:	f003 fb24 	bl	80082b4 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004c6c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004c70:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004c74:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004c78:	b1dc      	cbz	r4, 8004cb2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8004c7a:	1d23      	adds	r3, r4, #4
 8004c7c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004c80:	6833      	ldr	r3, [r6, #0]
 8004c82:	f8c4 a008 	str.w	sl, [r4, #8]
 8004c86:	4630      	mov	r0, r6
 8004c88:	68db      	ldr	r3, [r3, #12]
 8004c8a:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004c8c:	4798      	blx	r3
    newPresenter->activate();
 8004c8e:	6823      	ldr	r3, [r4, #0]
 8004c90:	4620      	mov	r0, r4
 8004c92:	681b      	ldr	r3, [r3, #0]
 8004c94:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004c96:	4629      	mov	r1, r5
 8004c98:	4630      	mov	r0, r6
 8004c9a:	f011 ff6d 	bl	8016b78 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004c9e:	682b      	ldr	r3, [r5, #0]
 8004ca0:	4628      	mov	r0, r5
 8004ca2:	691b      	ldr	r3, [r3, #16]
 8004ca4:	4798      	blx	r3
    newTransition->invalidate();
 8004ca6:	682b      	ldr	r3, [r5, #0]
 8004ca8:	4628      	mov	r0, r5
 8004caa:	695b      	ldr	r3, [r3, #20]
}
 8004cac:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004cb0:	4718      	bx	r3
    model->bind(newPresenter);
 8004cb2:	4623      	mov	r3, r4
 8004cb4:	e7e2      	b.n	8004c7c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8004cb6:	bf00      	nop
 8004cb8:	0802a348 	.word	0x0802a348
 8004cbc:	0802b7ef 	.word	0x0802b7ef
 8004cc0:	0802a4e4 	.word	0x0802a4e4
 8004cc4:	0802a52b 	.word	0x0802a52b
 8004cc8:	0802a5ce 	.word	0x0802a5ce
 8004ccc:	2001381c 	.word	0x2001381c
 8004cd0:	20013818 	.word	0x20013818

08004cd4 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8004cd4:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8004cd6:	4770      	bx	lr

08004cd8 <_ZN21Gauge_with_ValuesBaseD1Ev>:
}

Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
{

}
 8004cd8:	4770      	bx	lr

08004cda <_ZN21Gauge_with_ValuesBase10initializeEv>:

void Gauge_with_ValuesBase::initialize()
{

}
 8004cda:	4770      	bx	lr

08004cdc <_ZN21Gauge_with_ValuesBaseD0Ev>:
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8004cdc:	b510      	push	{r4, lr}
}
 8004cde:	f44f 7162 	mov.w	r1, #904	; 0x388
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8004ce2:	4604      	mov	r4, r0
}
 8004ce4:	f022 fe7b 	bl	80279de <_ZdlPvj>
 8004ce8:	4620      	mov	r0, r4
 8004cea:	bd10      	pop	{r4, pc}

08004cec <_ZN21Gauge_with_ValuesBaseC1Ev>:
Gauge_with_ValuesBase::Gauge_with_ValuesBase()
 8004cec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
          touchable(false),
 8004cf0:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004cf4:	4680      	mov	r8, r0
        : x(0), y(0), width(0), height(0)
 8004cf6:	2600      	movs	r6, #0
 8004cf8:	ed2d 8b02 	vpush	{d8}
 8004cfc:	8483      	strh	r3, [r0, #36]	; 0x24
 8004cfe:	4bb2      	ldr	r3, [pc, #712]	; (8004fc8 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2dc>)
          firstChild(0)
 8004d00:	6286      	str	r6, [r0, #40]	; 0x28
 8004d02:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004d06:	e9c0 6603 	strd	r6, r6, [r0, #12]
          nextSibling(0),
 8004d0a:	e9c0 6605 	strd	r6, r6, [r0, #20]
          cachedAbsX(0),
 8004d0e:	e9c0 6607 	strd	r6, r6, [r0, #28]
 8004d12:	f848 3b2c 	str.w	r3, [r8], #44
 8004d16:	b08b      	sub	sp, #44	; 0x2c
 8004d18:	4604      	mov	r4, r0
 8004d1a:	4640      	mov	r0, r8
 8004d1c:	f7fd fc42 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8004d20:	f104 0374 	add.w	r3, r4, #116	; 0x74
 8004d24:	f104 0bbc 	add.w	fp, r4, #188	; 0xbc
 8004d28:	4618      	mov	r0, r3
 8004d2a:	9303      	str	r3, [sp, #12]
 8004d2c:	f504 7a82 	add.w	sl, r4, #260	; 0x104
 8004d30:	f7fd fc38 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8004d34:	4658      	mov	r0, fp
 8004d36:	f7fd fc35 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8004d3a:	f504 79a8 	add.w	r9, r4, #336	; 0x150
        : TextAreaWithWildcardBase(), wc1(0)
 8004d3e:	4da3      	ldr	r5, [pc, #652]	; (8004fcc <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e0>)
        : TextArea()
 8004d40:	4650      	mov	r0, sl
 8004d42:	f7fd fc2f 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004d46:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8004d4a:	f8c4 614c 	str.w	r6, [r4, #332]	; 0x14c
        : TextArea()
 8004d4e:	4648      	mov	r0, r9
 8004d50:	f7fd fc28 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8004d54:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
 8004d58:	f504 77f4 	add.w	r7, r4, #488	; 0x1e8
 8004d5c:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8004d5e:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8004d62:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198
 8004d66:	ee08 3a10 	vmov	s16, r3
        : TextArea()
 8004d6a:	f7fd fc1b 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004d6e:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
 8004d72:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 8004d76:	4638      	mov	r0, r7
 8004d78:	f00d f88c 	bl	8011e94 <_ZN8touchgfx5GaugeC1Ev>
        rect.width = width;
 8004d7c:	4a94      	ldr	r2, [pc, #592]	; (8004fd0 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e4>)
 8004d7e:	60a2      	str	r2, [r4, #8]
    textArea4_2.setXY(217, 109);
 8004d80:	4640      	mov	r0, r8
 8004d82:	226d      	movs	r2, #109	; 0x6d
 8004d84:	21d9      	movs	r1, #217	; 0xd9
 8004d86:	ad04      	add	r5, sp, #16
 8004d88:	f7fd fbd9 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004d8c:	f04f 33ff 	mov.w	r3, #4294967295
 8004d90:	65e3      	str	r3, [r4, #92]	; 0x5c
        boundingArea = calculateBoundingArea();
 8004d92:	4641      	mov	r1, r8
 8004d94:	4628      	mov	r0, r5
        linespace = space;
 8004d96:	f8a4 6060 	strh.w	r6, [r4, #96]	; 0x60
        boundingArea = calculateBoundingArea();
 8004d9a:	f00c fd43 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004d9e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004da2:	f104 0c68 	add.w	ip, r4, #104	; 0x68
 8004da6:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8004daa:	4b8a      	ldr	r3, [pc, #552]	; (8004fd4 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004dac:	9308      	str	r3, [sp, #32]
 8004dae:	222f      	movs	r2, #47	; 0x2f
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D6CM));
 8004db0:	a908      	add	r1, sp, #32
 8004db2:	4640      	mov	r0, r8
 8004db4:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8004db8:	f00c ffce 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_2);
 8004dbc:	4641      	mov	r1, r8
 8004dbe:	4620      	mov	r0, r4
 8004dc0:	f00a fe16 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 109);
 8004dc4:	9b03      	ldr	r3, [sp, #12]
 8004dc6:	4631      	mov	r1, r6
 8004dc8:	4618      	mov	r0, r3
 8004dca:	226d      	movs	r2, #109	; 0x6d
 8004dcc:	f7fd fbb7 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8004dd0:	9b03      	ldr	r3, [sp, #12]
        linespace = space;
 8004dd2:	f8a4 60a8 	strh.w	r6, [r4, #168]	; 0xa8
        color = newColor;
 8004dd6:	f04f 32ff 	mov.w	r2, #4294967295
 8004dda:	f8c4 20a4 	str.w	r2, [r4, #164]	; 0xa4
        boundingArea = calculateBoundingArea();
 8004dde:	4619      	mov	r1, r3
 8004de0:	4628      	mov	r0, r5
 8004de2:	f00c fd1f 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004de6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004dea:	4b7a      	ldr	r3, [pc, #488]	; (8004fd4 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004dec:	9308      	str	r3, [sp, #32]
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YENI));
 8004dee:	9b03      	ldr	r3, [sp, #12]
 8004df0:	f104 0cb0 	add.w	ip, r4, #176	; 0xb0
 8004df4:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8004df8:	2230      	movs	r2, #48	; 0x30
 8004dfa:	a908      	add	r1, sp, #32
 8004dfc:	4618      	mov	r0, r3
 8004dfe:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8004e02:	f00c ffa9 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_1);
 8004e06:	9b03      	ldr	r3, [sp, #12]
 8004e08:	4620      	mov	r0, r4
 8004e0a:	4619      	mov	r1, r3
 8004e0c:	f00a fdf0 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 0);
 8004e10:	4632      	mov	r2, r6
 8004e12:	4658      	mov	r0, fp
 8004e14:	2171      	movs	r1, #113	; 0x71
 8004e16:	f7fd fb92 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004e1a:	f04f 32ff 	mov.w	r2, #4294967295
 8004e1e:	f8c4 20ec 	str.w	r2, [r4, #236]	; 0xec
        boundingArea = calculateBoundingArea();
 8004e22:	4659      	mov	r1, fp
 8004e24:	4628      	mov	r0, r5
        linespace = space;
 8004e26:	f8a4 60f0 	strh.w	r6, [r4, #240]	; 0xf0
        boundingArea = calculateBoundingArea();
 8004e2a:	f00c fcfb 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004e2e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004e32:	f104 03f8 	add.w	r3, r4, #248	; 0xf8
 8004e36:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004e3a:	4b66      	ldr	r3, [pc, #408]	; (8004fd4 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004e3c:	9308      	str	r3, [sp, #32]
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z8XU));
 8004e3e:	a908      	add	r1, sp, #32
 8004e40:	2331      	movs	r3, #49	; 0x31
 8004e42:	4658      	mov	r0, fp
 8004e44:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004e48:	f00c ff86 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4);
 8004e4c:	4659      	mov	r1, fp
 8004e4e:	4620      	mov	r0, r4
 8004e50:	f00a fdce 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5.setXY(76, 124);
 8004e54:	4650      	mov	r0, sl
 8004e56:	227c      	movs	r2, #124	; 0x7c
 8004e58:	214c      	movs	r1, #76	; 0x4c
 8004e5a:	f7fd fb70 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8004e5e:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
        linespace = space;
 8004e62:	f8a4 6138 	strh.w	r6, [r4, #312]	; 0x138
        color = newColor;
 8004e66:	f04f 32ff 	mov.w	r2, #4294967295
 8004e6a:	f8c4 2134 	str.w	r2, [r4, #308]	; 0x134
        boundingArea = calculateBoundingArea();
 8004e6e:	4651      	mov	r1, sl
 8004e70:	4628      	mov	r0, r5
 8004e72:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004e76:	4798      	blx	r3
 8004e78:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004e7c:	f504 73a0 	add.w	r3, r4, #320	; 0x140
 8004e80:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004e84:	4b53      	ldr	r3, [pc, #332]	; (8004fd4 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004e86:	9308      	str	r3, [sp, #32]
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RQ3J));
 8004e88:	a908      	add	r1, sp, #32
 8004e8a:	232e      	movs	r3, #46	; 0x2e
 8004e8c:	4650      	mov	r0, sl
 8004e8e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004e92:	f00c ff61 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5);
 8004e96:	4651      	mov	r1, sl
 8004e98:	4620      	mov	r0, r4
 8004e9a:	f00a fda9 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1.setXY(86, 139);
 8004e9e:	4648      	mov	r0, r9
 8004ea0:	228b      	movs	r2, #139	; 0x8b
 8004ea2:	2156      	movs	r1, #86	; 0x56
 8004ea4:	f7fd fb4b 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8004ea8:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
        linespace = space;
 8004eac:	f8a4 6184 	strh.w	r6, [r4, #388]	; 0x184
        color = newColor;
 8004eb0:	f04f 32ff 	mov.w	r2, #4294967295
 8004eb4:	f8c4 2180 	str.w	r2, [r4, #384]	; 0x180
        boundingArea = calculateBoundingArea();
 8004eb8:	4649      	mov	r1, r9
 8004eba:	4628      	mov	r0, r5
 8004ebc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004ec0:	4798      	blx	r3
 8004ec2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004ec6:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
 8004eca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004ece:	4b41      	ldr	r3, [pc, #260]	; (8004fd4 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004ed0:	9308      	str	r3, [sp, #32]
    textArea5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_54VS));
 8004ed2:	a908      	add	r1, sp, #32
 8004ed4:	232d      	movs	r3, #45	; 0x2d
 8004ed6:	4648      	mov	r0, r9
 8004ed8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004edc:	f00c ff3c 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_1);
 8004ee0:	4649      	mov	r1, r9
 8004ee2:	4620      	mov	r0, r4
 8004ee4:	f00a fd84 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_2.setXY(86, 154);
 8004ee8:	ee18 0a10 	vmov	r0, s16
 8004eec:	229a      	movs	r2, #154	; 0x9a
 8004eee:	2156      	movs	r1, #86	; 0x56
 8004ef0:	f7fd fb25 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8004ef4:	f8d4 319c 	ldr.w	r3, [r4, #412]	; 0x19c
        linespace = space;
 8004ef8:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        color = newColor;
 8004efc:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8004f00:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 8004f04:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
        boundingArea = calculateBoundingArea();
 8004f08:	4628      	mov	r0, r5
 8004f0a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004f0e:	4798      	blx	r3
 8004f10:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004f14:	f504 73ec 	add.w	r3, r4, #472	; 0x1d8
 8004f18:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004f1c:	4b2d      	ldr	r3, [pc, #180]	; (8004fd4 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004f1e:	9308      	str	r3, [sp, #32]
    textArea5_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UKDF));
 8004f20:	ee18 0a10 	vmov	r0, s16
 8004f24:	232c      	movs	r3, #44	; 0x2c
 8004f26:	a908      	add	r1, sp, #32
 8004f28:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004f2c:	f00c ff14 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_2);
 8004f30:	ee18 1a10 	vmov	r1, s16
 8004f34:	4620      	mov	r0, r4
 8004f36:	f00a fd5b 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004f3a:	2304      	movs	r3, #4
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8004f3c:	a908      	add	r1, sp, #32
 8004f3e:	4638      	mov	r0, r7
 8004f40:	f8ad 3020 	strh.w	r3, [sp, #32]
 8004f44:	f00a fce6 	bl	800f914 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
        setXY(x, y);
 8004f48:	2212      	movs	r2, #18
 8004f4a:	4638      	mov	r0, r7
 8004f4c:	211c      	movs	r1, #28
 8004f4e:	f7fd faf6 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8004f52:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 8004f56:	4638      	mov	r0, r7
 8004f58:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004f5a:	21b8      	movs	r1, #184	; 0xb8
 8004f5c:	4798      	blx	r3
        setHeight(height);
 8004f5e:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 8004f62:	4638      	mov	r0, r7
 8004f64:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004f66:	216a      	movs	r1, #106	; 0x6a
 8004f68:	4798      	blx	r3
    gauge1.setCenter(92, 92);
 8004f6a:	225c      	movs	r2, #92	; 0x5c
 8004f6c:	4611      	mov	r1, r2
 8004f6e:	4638      	mov	r0, r7
 8004f70:	f00d f83b 	bl	8011fea <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-90, 90);
 8004f74:	4638      	mov	r0, r7
 8004f76:	225a      	movs	r2, #90	; 0x5a
 8004f78:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8004f7c:	f00d f8ba 	bl	80120f4 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(-90, 90);
 8004f80:	4633      	mov	r3, r6
 8004f82:	225a      	movs	r2, #90	; 0x5a
 8004f84:	4638      	mov	r0, r7
 8004f86:	9600      	str	r6, [sp, #0]
 8004f88:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8004f8c:	f00a fb6f 	bl	800f66e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(0);
 8004f90:	4631      	mov	r1, r6
 8004f92:	4638      	mov	r0, r7
 8004f94:	f00d f858 	bl	8012048 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8004f98:	2335      	movs	r3, #53	; 0x35
 8004f9a:	2208      	movs	r2, #8
 8004f9c:	4638      	mov	r0, r7
 8004f9e:	2105      	movs	r1, #5
 8004fa0:	f00d f80e 	bl	8011fc0 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8004fa4:	4638      	mov	r0, r7
 8004fa6:	2101      	movs	r1, #1
 8004fa8:	f00c ffac 	bl	8011f04 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8004fac:	4638      	mov	r0, r7
 8004fae:	2101      	movs	r1, #1
 8004fb0:	f00c ffab 	bl	8011f0a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(gauge1);
 8004fb4:	4620      	mov	r0, r4
 8004fb6:	4639      	mov	r1, r7
 8004fb8:	f00a fd1a 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004fbc:	4620      	mov	r0, r4
 8004fbe:	b00b      	add	sp, #44	; 0x2c
 8004fc0:	ecbd 8b02 	vpop	{d8}
 8004fc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004fc8:	0802ba58 	.word	0x0802ba58
 8004fcc:	0802a1dc 	.word	0x0802a1dc
 8004fd0:	00a900f0 	.word	0x00a900f0
 8004fd4:	0802a1cc 	.word	0x0802a1cc

08004fd8 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8004fd8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8004fda:	4770      	bx	lr

08004fdc <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8004fdc:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8004fde:	4770      	bx	lr

08004fe0 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8004fe0:	4770      	bx	lr

08004fe2 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8004fe2:	888b      	ldrh	r3, [r1, #4]
 8004fe4:	69c0      	ldr	r0, [r0, #28]
 8004fe6:	680a      	ldr	r2, [r1, #0]
 8004fe8:	0adb      	lsrs	r3, r3, #11
 8004fea:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8004fee:	4410      	add	r0, r2
 8004ff0:	4770      	bx	lr

08004ff2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8004ff2:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8004ff4:	b1c2      	cbz	r2, 8005028 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8004ff6:	7b13      	ldrb	r3, [r2, #12]
 8004ff8:	b1b3      	cbz	r3, 8005028 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8004ffa:	7b54      	ldrb	r4, [r2, #13]
 8004ffc:	7ad2      	ldrb	r2, [r2, #11]
 8004ffe:	0224      	lsls	r4, r4, #8
 8005000:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005004:	4314      	orrs	r4, r2
 8005006:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005008:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800500a:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800500e:	8813      	ldrh	r3, [r2, #0]
 8005010:	428b      	cmp	r3, r1
 8005012:	d102      	bne.n	800501a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8005014:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8005018:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800501a:	d805      	bhi.n	8005028 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800501c:	3801      	subs	r0, #1
 800501e:	b280      	uxth	r0, r0
 8005020:	3204      	adds	r2, #4
 8005022:	2800      	cmp	r0, #0
 8005024:	d1f3      	bne.n	800500e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8005026:	e7f7      	b.n	8005018 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8005028:	2000      	movs	r0, #0
 800502a:	e7f5      	b.n	8005018 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

0800502c <_ZN8touchgfx13GeneratedFontD0Ev>:
 800502c:	b510      	push	{r4, lr}
 800502e:	212c      	movs	r1, #44	; 0x2c
 8005030:	4604      	mov	r4, r0
 8005032:	f022 fcd4 	bl	80279de <_ZdlPvj>
 8005036:	4620      	mov	r0, r4
 8005038:	bd10      	pop	{r4, pc}
	...

0800503c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800503c:	b530      	push	{r4, r5, lr}
 800503e:	b08b      	sub	sp, #44	; 0x2c
 8005040:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8005042:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8005046:	9508      	str	r5, [sp, #32]
 8005048:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 800504c:	9507      	str	r5, [sp, #28]
 800504e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8005052:	9506      	str	r5, [sp, #24]
 8005054:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8005058:	9505      	str	r5, [sp, #20]
 800505a:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800505e:	9504      	str	r5, [sp, #16]
 8005060:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8005064:	9503      	str	r5, [sp, #12]
 8005066:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800506a:	9502      	str	r5, [sp, #8]
 800506c:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8005070:	9501      	str	r5, [sp, #4]
 8005072:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8005076:	9500      	str	r5, [sp, #0]
 8005078:	f011 f8e8 	bl	801624c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800507c:	4b06      	ldr	r3, [pc, #24]	; (8005098 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 800507e:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8005080:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005082:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8005084:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8005086:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8005088:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800508a:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 800508c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800508e:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8005090:	4620      	mov	r0, r4
 8005092:	b00b      	add	sp, #44	; 0x2c
 8005094:	bd30      	pop	{r4, r5, pc}
 8005096:	bf00      	nop
 8005098:	0802baec 	.word	0x0802baec

0800509c <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 800509c:	4770      	bx	lr

0800509e <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800509e:	4770      	bx	lr

080050a0 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80050a0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80050a2:	68c2      	ldr	r2, [r0, #12]
 80050a4:	6844      	ldr	r4, [r0, #4]
 80050a6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80050a8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80050aa:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80050ae:	07d2      	lsls	r2, r2, #31
 80050b0:	bf48      	it	mi
 80050b2:	5962      	ldrmi	r2, [r4, r5]
 80050b4:	689b      	ldr	r3, [r3, #8]
    }
 80050b6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80050b8:	bf48      	it	mi
 80050ba:	58d3      	ldrmi	r3, [r2, r3]
 80050bc:	4718      	bx	r3

080050be <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80050be:	6843      	ldr	r3, [r0, #4]
 80050c0:	b12b      	cbz	r3, 80050ce <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80050c2:	6883      	ldr	r3, [r0, #8]
 80050c4:	b92b      	cbnz	r3, 80050d2 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80050c6:	68c0      	ldr	r0, [r0, #12]
 80050c8:	f000 0001 	and.w	r0, r0, #1
 80050cc:	4770      	bx	lr
 80050ce:	4618      	mov	r0, r3
 80050d0:	4770      	bx	lr
 80050d2:	2001      	movs	r0, #1
    }
 80050d4:	4770      	bx	lr

080050d6 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80050d6:	b510      	push	{r4, lr}
 80050d8:	2110      	movs	r1, #16
 80050da:	4604      	mov	r4, r0
 80050dc:	f022 fc7f 	bl	80279de <_ZdlPvj>
 80050e0:	4620      	mov	r0, r4
 80050e2:	bd10      	pop	{r4, pc}

080050e4 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 80050e4:	b510      	push	{r4, lr}
 80050e6:	4b03      	ldr	r3, [pc, #12]	; (80050f4 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 80050e8:	6003      	str	r3, [r0, #0]
 80050ea:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80050ec:	f00e fa16 	bl	801351c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80050f0:	4620      	mov	r0, r4
 80050f2:	bd10      	pop	{r4, pc}
 80050f4:	0802bb64 	.word	0x0802bb64

080050f8 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 80050f8:	b507      	push	{r0, r1, r2, lr}
 80050fa:	4b07      	ldr	r3, [pc, #28]	; (8005118 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 80050fc:	6003      	str	r3, [r0, #0]
 80050fe:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005100:	f00e fa0c 	bl	801351c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005104:	9801      	ldr	r0, [sp, #4]
 8005106:	f241 117c 	movw	r1, #4476	; 0x117c
 800510a:	f022 fc68 	bl	80279de <_ZdlPvj>
 800510e:	9801      	ldr	r0, [sp, #4]
 8005110:	b003      	add	sp, #12
 8005112:	f85d fb04 	ldr.w	pc, [sp], #4
 8005116:	bf00      	nop
 8005118:	0802bb64 	.word	0x0802bb64

0800511c <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800511c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 800511e:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 8005122:	4299      	cmp	r1, r3
{
 8005124:	4604      	mov	r4, r0
 8005126:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8005128:	d103      	bne.n	8005132 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800512a:	f00f fef9 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 800512e:	f7fe fb1d 	bl	800376c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8005132:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005136:	429d      	cmp	r5, r3
 8005138:	d103      	bne.n	8005142 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800513a:	f00f fef1 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 800513e:	f7fe fba5 	bl	800388c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 8005142:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005146:	429d      	cmp	r5, r3
 8005148:	d103      	bne.n	8005152 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 800514a:	f00f fee9 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 800514e:	f7fe fbdd 	bl	800390c <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 8005152:	f504 7446 	add.w	r4, r4, #792	; 0x318
 8005156:	42a5      	cmp	r5, r4
 8005158:	d10a      	bne.n	8005170 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 800515a:	4806      	ldr	r0, [pc, #24]	; (8005174 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 800515c:	2200      	movs	r2, #0
 800515e:	2120      	movs	r1, #32
 8005160:	f004 f964 	bl	800942c <HAL_GPIO_WritePin>
 8005164:	f00f fedc 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8005168:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 800516c:	f7fe bbde 	b.w	800392c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8005170:	bd38      	pop	{r3, r4, r5, pc}
 8005172:	bf00      	nop
 8005174:	40021000 	.word	0x40021000

08005178 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8005178:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800517c:	ed2d 8b06 	vpush	{d8-d10}
 8005180:	4604      	mov	r4, r0
 8005182:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 8005184:	46a3      	mov	fp, r4
        : presenter(0)
 8005186:	2500      	movs	r5, #0
 8005188:	f011 fb4a 	bl	8016820 <_ZN8touchgfx6ScreenC1Ev>
 800518c:	4b6a      	ldr	r3, [pc, #424]	; (8005338 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 800518e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005190:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005194:	2226      	movs	r2, #38	; 0x26
 8005196:	4629      	mov	r1, r5
 8005198:	4658      	mov	r0, fp
 800519a:	f023 fc16 	bl	80289ca <memset>
 800519e:	4658      	mov	r0, fp
 80051a0:	f7fd f9ee 	bl	8002580 <_ZN8touchgfx6WidgetC1Ev>
 80051a4:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80051a8:	26ff      	movs	r6, #255	; 0xff
 80051aa:	4b64      	ldr	r3, [pc, #400]	; (800533c <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 80051ac:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80051ae:	2226      	movs	r2, #38	; 0x26
 80051b0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80051b4:	4629      	mov	r1, r5
 80051b6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80051ba:	4650      	mov	r0, sl
        : color(col)
 80051bc:	66a5      	str	r5, [r4, #104]	; 0x68
 80051be:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80051c2:	f023 fc02 	bl	80289ca <memset>
 80051c6:	4650      	mov	r0, sl
 80051c8:	f7fd f9da 	bl	8002580 <_ZN8touchgfx6WidgetC1Ev>
 80051cc:	4b5c      	ldr	r3, [pc, #368]	; (8005340 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 80051ce:	66e3      	str	r3, [r4, #108]	; 0x6c
 80051d0:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 80051d4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80051d8:	a90c      	add	r1, sp, #48	; 0x30
 80051da:	4650      	mov	r0, sl
 80051dc:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80051e0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80051e4:	f00d f993 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80051e8:	4648      	mov	r0, r9
 80051ea:	f7fd f9db 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 80051ee:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80051f2:	4b54      	ldr	r3, [pc, #336]	; (8005344 <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 80051f4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80051f8:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80051fc:	4638      	mov	r0, r7
 80051fe:	f00c f84f 	bl	80112a0 <_ZN8touchgfx4LineC1Ev>
 8005202:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005206:	4618      	mov	r0, r3
 8005208:	9303      	str	r3, [sp, #12]
 800520a:	f7fc f859 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800520e:	4b4e      	ldr	r3, [pc, #312]	; (8005348 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 8005210:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005214:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005218:	3324      	adds	r3, #36	; 0x24
 800521a:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 800521e:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005222:	4640      	mov	r0, r8
 8005224:	f7fd f9be 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8005228:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 800522c:	4618      	mov	r0, r3
 800522e:	ee08 3a10 	vmov	s16, r3
 8005232:	f7fd f9b7 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8005236:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800523a:	4618      	mov	r0, r3
 800523c:	ee08 3a90 	vmov	s17, r3
 8005240:	f7fd f9b0 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8005244:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005248:	4618      	mov	r0, r3
 800524a:	ee09 3a10 	vmov	s18, r3
 800524e:	f00d fa9f 	bl	8012790 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005252:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005256:	4618      	mov	r0, r3
 8005258:	ee09 3a90 	vmov	s19, r3
 800525c:	f00d fa98 	bl	8012790 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005260:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005264:	4618      	mov	r0, r3
 8005266:	ee0a 3a10 	vmov	s20, r3
 800526a:	f00d fa91 	bl	8012790 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800526e:	f504 7346 	add.w	r3, r4, #792	; 0x318
 8005272:	4618      	mov	r0, r3
 8005274:	ee0a 3a90 	vmov	s21, r3
 8005278:	f00d f922 	bl	80124c0 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800527c:	4a33      	ldr	r2, [pc, #204]	; (800534c <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 800527e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005282:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 8005286:	4a32      	ldr	r2, [pc, #200]	; (8005350 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005288:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800528c:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8005290:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8005294:	f00e f938 	bl	8013508 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005298:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800529c:	462a      	mov	r2, r5
 800529e:	4658      	mov	r0, fp
 80052a0:	9300      	str	r3, [sp, #0]
 80052a2:	4629      	mov	r1, r5
 80052a4:	23f0      	movs	r3, #240	; 0xf0
 80052a6:	f7fd f957 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
 80052aa:	1d26      	adds	r6, r4, #4
        color = newColor;
 80052ac:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80052b0:	66a3      	str	r3, [r4, #104]	; 0x68
 80052b2:	4659      	mov	r1, fp
 80052b4:	4630      	mov	r0, r6
 80052b6:	f00a fb9b 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80052ba:	462a      	mov	r2, r5
 80052bc:	4650      	mov	r0, sl
 80052be:	4629      	mov	r1, r5
 80052c0:	f7fd f93d 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 80052c4:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80052c6:	4650      	mov	r0, sl
 80052c8:	a90c      	add	r1, sp, #48	; 0x30
 80052ca:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80052ce:	f00d f91e 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80052d2:	4651      	mov	r1, sl
 80052d4:	4630      	mov	r0, r6
 80052d6:	f00a fb8b 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 80052da:	f44f 729a 	mov.w	r2, #308	; 0x134
 80052de:	2156      	movs	r1, #86	; 0x56
 80052e0:	4648      	mov	r0, r9
 80052e2:	f7fd f92c 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 80052e6:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80052ea:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80052ee:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80052f2:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80052f6:	4650      	mov	r0, sl
 80052f8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80052fc:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005300:	4649      	mov	r1, r9
 8005302:	4798      	blx	r3
 8005304:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005308:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800530c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005310:	4b10      	ldr	r3, [pc, #64]	; (8005354 <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 8005312:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8005314:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8005318:	b92b      	cbnz	r3, 8005326 <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 800531a:	4b0f      	ldr	r3, [pc, #60]	; (8005358 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 800531c:	4a0f      	ldr	r2, [pc, #60]	; (800535c <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 800531e:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005320:	480f      	ldr	r0, [pc, #60]	; (8005360 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 8005322:	f023 f94d 	bl	80285c0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005326:	4b0f      	ldr	r3, [pc, #60]	; (8005364 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005328:	881b      	ldrh	r3, [r3, #0]
 800532a:	2b2a      	cmp	r3, #42	; 0x2a
 800532c:	d81e      	bhi.n	800536c <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 800532e:	4b0e      	ldr	r3, [pc, #56]	; (8005368 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 8005330:	4a0a      	ldr	r2, [pc, #40]	; (800535c <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005332:	2161      	movs	r1, #97	; 0x61
 8005334:	e7f4      	b.n	8005320 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 8005336:	bf00      	nop
 8005338:	0802bb64 	.word	0x0802bb64
 800533c:	0802cb14 	.word	0x0802cb14
 8005340:	0802ccdc 	.word	0x0802ccdc
 8005344:	0802a1dc 	.word	0x0802a1dc
 8005348:	0802c848 	.word	0x0802c848
 800534c:	0802bb4c 	.word	0x0802bb4c
 8005350:	0800511d 	.word	0x0800511d
 8005354:	2001382c 	.word	0x2001382c
 8005358:	0802a01c 	.word	0x0802a01c
 800535c:	0802a11e 	.word	0x0802a11e
 8005360:	0802a099 	.word	0x0802a099
 8005364:	20013830 	.word	0x20013830
 8005368:	0802a0e0 	.word	0x0802a0e0
        return texts->getText(typedTextId);
 800536c:	4ba5      	ldr	r3, [pc, #660]	; (8005604 <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 800536e:	212a      	movs	r1, #42	; 0x2a
 8005370:	6818      	ldr	r0, [r3, #0]
 8005372:	f002 fddf 	bl	8007f34 <_ZNK8touchgfx5Texts7getTextEt>
 8005376:	4aa4      	ldr	r2, [pc, #656]	; (8005608 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 8005378:	4603      	mov	r3, r0
 800537a:	2104      	movs	r1, #4
 800537c:	4650      	mov	r0, sl
 800537e:	f012 ff33 	bl	80181e8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 8005382:	4648      	mov	r0, r9
        wc1 = value;
 8005384:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8005388:	f00c fcc6 	bl	8011d18 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800538c:	4b9f      	ldr	r3, [pc, #636]	; (800560c <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 800538e:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8005390:	a90c      	add	r1, sp, #48	; 0x30
 8005392:	232b      	movs	r3, #43	; 0x2b
 8005394:	4648      	mov	r0, r9
 8005396:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800539a:	f00c fcdd 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800539e:	4649      	mov	r1, r9
 80053a0:	4630      	mov	r0, r6
 80053a2:	f00a fb25 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80053a6:	230a      	movs	r3, #10
 80053a8:	9300      	str	r3, [sp, #0]
 80053aa:	2232      	movs	r2, #50	; 0x32
 80053ac:	23f0      	movs	r3, #240	; 0xf0
 80053ae:	4629      	mov	r1, r5
 80053b0:	4638      	mov	r0, r7
 80053b2:	f7fd f8d1 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
 80053b6:	9b03      	ldr	r3, [sp, #12]
 80053b8:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80053bc:	22a0      	movs	r2, #160	; 0xa0
 80053be:	4611      	mov	r1, r2
 80053c0:	4638      	mov	r0, r7
 80053c2:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 80053c6:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80053ca:	f00c f87f 	bl	80114cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80053ce:	22a0      	movs	r2, #160	; 0xa0
 80053d0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80053d4:	4638      	mov	r0, r7
 80053d6:	f00c f884 	bl	80114e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80053da:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80053de:	2b20      	cmp	r3, #32
 80053e0:	d005      	beq.n	80053ee <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 80053e2:	2320      	movs	r3, #32
 80053e4:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 80053e8:	4638      	mov	r0, r7
 80053ea:	f00b ff79 	bl	80112e0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80053ee:	4638      	mov	r0, r7
 80053f0:	2101      	movs	r1, #1
 80053f2:	f00c f881 	bl	80114f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80053f6:	4639      	mov	r1, r7
 80053f8:	4630      	mov	r0, r6
 80053fa:	ad04      	add	r5, sp, #16
        color = newColor;
 80053fc:	f04f 37ff 	mov.w	r7, #4294967295
 8005400:	f00a faf6 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005404:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005408:	2223      	movs	r2, #35	; 0x23
 800540a:	4640      	mov	r0, r8
 800540c:	2145      	movs	r1, #69	; 0x45
 800540e:	f7fd f896 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005412:	4641      	mov	r1, r8
 8005414:	4628      	mov	r0, r5
        color = newColor;
 8005416:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 800541a:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 800541e:	f00c fa01 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005422:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8005426:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 800542a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800542e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005432:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 800560c <_ZN17Main_MenuViewBaseC1Ev+0x494>
 8005436:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 800543a:	2350      	movs	r3, #80	; 0x50
 800543c:	4649      	mov	r1, r9
 800543e:	4640      	mov	r0, r8
 8005440:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005444:	f00c fc88 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005448:	4641      	mov	r1, r8
 800544a:	4630      	mov	r0, r6
 800544c:	f00a fad0 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005450:	ee18 0a10 	vmov	r0, s16
 8005454:	220c      	movs	r2, #12
 8005456:	2136      	movs	r1, #54	; 0x36
 8005458:	f7fd f871 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 800545c:	ee18 1a10 	vmov	r1, s16
 8005460:	4628      	mov	r0, r5
        color = newColor;
 8005462:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8005466:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 800546a:	f00c f9db 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800546e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005472:	ee18 3a10 	vmov	r3, s16
 8005476:	333c      	adds	r3, #60	; 0x3c
 8005478:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800547c:	2351      	movs	r3, #81	; 0x51
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 800547e:	ee18 0a10 	vmov	r0, s16
 8005482:	4649      	mov	r1, r9
 8005484:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005488:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 800548c:	f00c fc64 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005490:	ee18 1a10 	vmov	r1, s16
 8005494:	4630      	mov	r0, r6
 8005496:	f00a faab 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 800549a:	ee18 0a90 	vmov	r0, s17
 800549e:	223c      	movs	r2, #60	; 0x3c
 80054a0:	2158      	movs	r1, #88	; 0x58
 80054a2:	f7fd f84c 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 80054a6:	ee18 1a90 	vmov	r1, s17
 80054aa:	4628      	mov	r0, r5
        color = newColor;
 80054ac:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80054b0:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80054b4:	f00c f9b6 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80054b8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80054bc:	ee18 3a90 	vmov	r3, s17
 80054c0:	333c      	adds	r3, #60	; 0x3c
 80054c2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80054c6:	231a      	movs	r3, #26
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 80054c8:	ee18 0a90 	vmov	r0, s17
 80054cc:	4649      	mov	r1, r9
 80054ce:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80054d2:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80054d6:	f00c fc3f 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80054da:	ee18 1a90 	vmov	r1, s17
 80054de:	4630      	mov	r0, r6
 80054e0:	f00a fa86 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80054e4:	ee19 0a10 	vmov	r0, s18
 80054e8:	22f0      	movs	r2, #240	; 0xf0
 80054ea:	2121      	movs	r1, #33	; 0x21
 80054ec:	f7fd f827 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 80054f0:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80054f4:	464a      	mov	r2, r9
 80054f6:	f04f 0802 	mov.w	r8, #2
 80054fa:	a90b      	add	r1, sp, #44	; 0x2c
 80054fc:	ee19 0a10 	vmov	r0, s18
 8005500:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005504:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8005508:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800550c:	f00c fe09 	bl	8012122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005510:	2352      	movs	r3, #82	; 0x52
 8005512:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005516:	350c      	adds	r5, #12
        updateTextPosition();
 8005518:	ee19 0a10 	vmov	r0, s18
 800551c:	f7fd f864 	bl	80025e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005520:	ee19 1a10 	vmov	r1, s18
 8005524:	4630      	mov	r0, r6
        colorPressed = col;
 8005526:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 800552a:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 800552e:	f00a fa5f 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005532:	ee19 0a90 	vmov	r0, s19
 8005536:	22aa      	movs	r2, #170	; 0xaa
 8005538:	2121      	movs	r1, #33	; 0x21
 800553a:	f7fd f800 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800553e:	464a      	mov	r2, r9
 8005540:	a90b      	add	r1, sp, #44	; 0x2c
 8005542:	ee19 0a90 	vmov	r0, s19
 8005546:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 800554a:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800554e:	f00c fde8 	bl	8012122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005552:	2353      	movs	r3, #83	; 0x53
 8005554:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005558:	ee19 0a90 	vmov	r0, s19
 800555c:	f7fd f844 	bl	80025e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005560:	ee19 1a90 	vmov	r1, s19
 8005564:	4630      	mov	r0, r6
        colorPressed = col;
 8005566:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 800556a:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 800556e:	f00a fa3f 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005572:	ee1a 0a10 	vmov	r0, s20
 8005576:	2264      	movs	r2, #100	; 0x64
 8005578:	2121      	movs	r1, #33	; 0x21
 800557a:	f7fc ffe0 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800557e:	464a      	mov	r2, r9
 8005580:	a90b      	add	r1, sp, #44	; 0x2c
 8005582:	ee1a 0a10 	vmov	r0, s20
 8005586:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 800558a:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800558e:	f00c fdc8 	bl	8012122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005592:	2354      	movs	r3, #84	; 0x54
 8005594:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 8005598:	ee1a 0a10 	vmov	r0, s20
 800559c:	f7fd f824 	bl	80025e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80055a0:	ee1a 1a10 	vmov	r1, s20
 80055a4:	4630      	mov	r0, r6
        colorPressed = col;
 80055a6:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80055aa:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80055ae:	f00a fa1f 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 80055b2:	ee1a 0a90 	vmov	r0, s21
 80055b6:	2205      	movs	r2, #5
 80055b8:	21c6      	movs	r1, #198	; 0xc6
 80055ba:	f7fc ffc0 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 80055be:	2301      	movs	r3, #1
 80055c0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80055c4:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 80055c6:	ee1a 0a90 	vmov	r0, s21
 80055ca:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80055ce:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80055d2:	aa0a      	add	r2, sp, #40	; 0x28
 80055d4:	ab0b      	add	r3, sp, #44	; 0x2c
 80055d6:	a909      	add	r1, sp, #36	; 0x24
 80055d8:	f8cd 9000 	str.w	r9, [sp]
 80055dc:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 80055e0:	f00c fed9 	bl	8012396 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80055e4:	4630      	mov	r0, r6
 80055e6:	ee1a 1a90 	vmov	r1, s21
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 80055ea:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 80055ee:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 80055f2:	f00a f9fd 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80055f6:	4620      	mov	r0, r4
 80055f8:	b00f      	add	sp, #60	; 0x3c
 80055fa:	ecbd 8b06 	vpop	{d8-d10}
 80055fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005602:	bf00      	nop
 8005604:	20013838 	.word	0x20013838
 8005608:	0802a156 	.word	0x0802a156
 800560c:	0802a1cc 	.word	0x0802a1cc

08005610 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8005610:	4770      	bx	lr

08005612 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005612:	4770      	bx	lr

08005614 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005614:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005616:	68c2      	ldr	r2, [r0, #12]
 8005618:	6844      	ldr	r4, [r0, #4]
 800561a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800561c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800561e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005622:	07d2      	lsls	r2, r2, #31
 8005624:	bf48      	it	mi
 8005626:	5962      	ldrmi	r2, [r4, r5]
 8005628:	689b      	ldr	r3, [r3, #8]
    }
 800562a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800562c:	bf48      	it	mi
 800562e:	58d3      	ldrmi	r3, [r2, r3]
 8005630:	4718      	bx	r3

08005632 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005632:	6843      	ldr	r3, [r0, #4]
 8005634:	b12b      	cbz	r3, 8005642 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005636:	6883      	ldr	r3, [r0, #8]
 8005638:	b92b      	cbnz	r3, 8005646 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800563a:	68c0      	ldr	r0, [r0, #12]
 800563c:	f000 0001 	and.w	r0, r0, #1
 8005640:	4770      	bx	lr
 8005642:	4618      	mov	r0, r3
 8005644:	4770      	bx	lr
 8005646:	2001      	movs	r0, #1
    }
 8005648:	4770      	bx	lr

0800564a <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800564a:	b510      	push	{r4, lr}
 800564c:	2110      	movs	r1, #16
 800564e:	4604      	mov	r4, r0
 8005650:	f022 f9c5 	bl	80279de <_ZdlPvj>
 8005654:	4620      	mov	r0, r4
 8005656:	bd10      	pop	{r4, pc}

08005658 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8005658:	b510      	push	{r4, lr}
 800565a:	4b03      	ldr	r3, [pc, #12]	; (8005668 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 800565c:	6003      	str	r3, [r0, #0]
 800565e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005660:	f00d ff5c 	bl	801351c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005664:	4620      	mov	r0, r4
 8005666:	bd10      	pop	{r4, pc}
 8005668:	0802bbb0 	.word	0x0802bbb0

0800566c <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 800566c:	b507      	push	{r0, r1, r2, lr}
 800566e:	4b07      	ldr	r3, [pc, #28]	; (800568c <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8005670:	6003      	str	r3, [r0, #0]
 8005672:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005674:	f00d ff52 	bl	801351c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005678:	9801      	ldr	r0, [sp, #4]
 800567a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800567e:	f022 f9ae 	bl	80279de <_ZdlPvj>
 8005682:	9801      	ldr	r0, [sp, #4]
 8005684:	b003      	add	sp, #12
 8005686:	f85d fb04 	ldr.w	pc, [sp], #4
 800568a:	bf00      	nop
 800568c:	0802bbb0 	.word	0x0802bbb0

08005690 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005690:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8005692:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8005696:	4299      	cmp	r1, r3
{
 8005698:	4604      	mov	r4, r0
 800569a:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 800569c:	d103      	bne.n	80056a6 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800569e:	f00f fc3f 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 80056a2:	f7fe f853 	bl	800374c <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80056a6:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80056aa:	429d      	cmp	r5, r3
 80056ac:	d103      	bne.n	80056b6 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80056ae:	f00f fc37 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80056b2:	f7fe f87b 	bl	80037ac <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80056b6:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80056ba:	42a5      	cmp	r5, r4
 80056bc:	d105      	bne.n	80056ca <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80056be:	f00f fc2f 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 80056c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 80056c6:	f7fe b8a1 	b.w	800380c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 80056ca:	bd38      	pop	{r3, r4, r5, pc}

080056cc <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 80056cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80056d0:	ed2d 8b06 	vpush	{d8-d10}
 80056d4:	4604      	mov	r4, r0
 80056d6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 80056d8:	46a3      	mov	fp, r4
 80056da:	2500      	movs	r5, #0
 80056dc:	f011 f8a0 	bl	8016820 <_ZN8touchgfx6ScreenC1Ev>
 80056e0:	4b66      	ldr	r3, [pc, #408]	; (800587c <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 80056e2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80056e4:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80056e8:	2226      	movs	r2, #38	; 0x26
 80056ea:	4629      	mov	r1, r5
 80056ec:	4658      	mov	r0, fp
 80056ee:	f023 f96c 	bl	80289ca <memset>
 80056f2:	4658      	mov	r0, fp
 80056f4:	f7fc ff44 	bl	8002580 <_ZN8touchgfx6WidgetC1Ev>
 80056f8:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80056fc:	26ff      	movs	r6, #255	; 0xff
 80056fe:	4b60      	ldr	r3, [pc, #384]	; (8005880 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8005700:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005702:	2226      	movs	r2, #38	; 0x26
 8005704:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005708:	4629      	mov	r1, r5
 800570a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800570e:	4650      	mov	r0, sl
 8005710:	66a5      	str	r5, [r4, #104]	; 0x68
 8005712:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005716:	f023 f958 	bl	80289ca <memset>
 800571a:	4650      	mov	r0, sl
 800571c:	f7fc ff30 	bl	8002580 <_ZN8touchgfx6WidgetC1Ev>
 8005720:	4b58      	ldr	r3, [pc, #352]	; (8005884 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 8005722:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005724:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005728:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800572c:	a90a      	add	r1, sp, #40	; 0x28
 800572e:	4650      	mov	r0, sl
 8005730:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005734:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005738:	f00c fee9 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 800573c:	4648      	mov	r0, r9
 800573e:	f7fc ff31 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005742:	4b51      	ldr	r3, [pc, #324]	; (8005888 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 8005744:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005748:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 800574c:	4618      	mov	r0, r3
 800574e:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005752:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8005756:	ee08 3a90 	vmov	s17, r3
 800575a:	f7fc ff23 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 800575e:	4638      	mov	r0, r7
 8005760:	f00b fd9e 	bl	80112a0 <_ZN8touchgfx4LineC1Ev>
 8005764:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005768:	4618      	mov	r0, r3
 800576a:	9303      	str	r3, [sp, #12]
 800576c:	f7fb fda8 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005770:	4b46      	ldr	r3, [pc, #280]	; (800588c <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 8005772:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8005776:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 800577a:	3324      	adds	r3, #36	; 0x24
 800577c:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8005780:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8005784:	4640      	mov	r0, r8
 8005786:	f7fc ff0d 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 800578a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800578e:	4618      	mov	r0, r3
 8005790:	ee08 3a10 	vmov	s16, r3
 8005794:	f7fc ff06 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8005798:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800579c:	4618      	mov	r0, r3
 800579e:	ee09 3a10 	vmov	s18, r3
 80057a2:	f00c fff5 	bl	8012790 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80057a6:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80057aa:	4618      	mov	r0, r3
 80057ac:	ee09 3a90 	vmov	s19, r3
 80057b0:	f00c ffee 	bl	8012790 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80057b4:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80057b8:	4618      	mov	r0, r3
 80057ba:	ee0a 3a10 	vmov	s20, r3
 80057be:	f00c ffe7 	bl	8012790 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80057c2:	4a33      	ldr	r2, [pc, #204]	; (8005890 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 80057c4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80057c8:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80057cc:	4a31      	ldr	r2, [pc, #196]	; (8005894 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80057ce:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80057d2:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80057d6:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80057da:	f00d fe95 	bl	8013508 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80057de:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80057e2:	462a      	mov	r2, r5
 80057e4:	4658      	mov	r0, fp
 80057e6:	9300      	str	r3, [sp, #0]
 80057e8:	4629      	mov	r1, r5
 80057ea:	23f0      	movs	r3, #240	; 0xf0
 80057ec:	f7fc feb4 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
 80057f0:	1d26      	adds	r6, r4, #4
        color = newColor;
 80057f2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80057f6:	66a3      	str	r3, [r4, #104]	; 0x68
 80057f8:	4659      	mov	r1, fp
 80057fa:	4630      	mov	r0, r6
 80057fc:	f00a f8f8 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005800:	462a      	mov	r2, r5
 8005802:	4650      	mov	r0, sl
 8005804:	4629      	mov	r1, r5
 8005806:	f7fc fe9a 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 800580a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800580c:	4650      	mov	r0, sl
 800580e:	a90a      	add	r1, sp, #40	; 0x28
 8005810:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005814:	f00c fe7b 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005818:	4651      	mov	r1, sl
 800581a:	4630      	mov	r0, r6
 800581c:	f00a f8e8 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005820:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005824:	2156      	movs	r1, #86	; 0x56
 8005826:	4648      	mov	r0, r9
 8005828:	f7fc fe89 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800582c:	f04f 33ff 	mov.w	r3, #4294967295
 8005830:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005834:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005838:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800583c:	f10d 0b10 	add.w	fp, sp, #16
 8005840:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005844:	4649      	mov	r1, r9
 8005846:	4658      	mov	r0, fp
 8005848:	4798      	blx	r3
 800584a:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800584e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005852:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005856:	4b10      	ldr	r3, [pc, #64]	; (8005898 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 8005858:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 800585a:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 800585e:	b92b      	cbnz	r3, 800586c <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 8005860:	4b0e      	ldr	r3, [pc, #56]	; (800589c <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 8005862:	4a0f      	ldr	r2, [pc, #60]	; (80058a0 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8005864:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005866:	480f      	ldr	r0, [pc, #60]	; (80058a4 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8005868:	f022 feaa 	bl	80285c0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800586c:	4b0e      	ldr	r3, [pc, #56]	; (80058a8 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800586e:	881b      	ldrh	r3, [r3, #0]
 8005870:	2b1b      	cmp	r3, #27
 8005872:	d81d      	bhi.n	80058b0 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 8005874:	4b0d      	ldr	r3, [pc, #52]	; (80058ac <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8005876:	4a0a      	ldr	r2, [pc, #40]	; (80058a0 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8005878:	2161      	movs	r1, #97	; 0x61
 800587a:	e7f4      	b.n	8005866 <_ZN19MeasurementViewBaseC1Ev+0x19a>
 800587c:	0802bbb0 	.word	0x0802bbb0
 8005880:	0802cb14 	.word	0x0802cb14
 8005884:	0802ccdc 	.word	0x0802ccdc
 8005888:	0802a1dc 	.word	0x0802a1dc
 800588c:	0802c848 	.word	0x0802c848
 8005890:	0802bb98 	.word	0x0802bb98
 8005894:	08005691 	.word	0x08005691
 8005898:	2001382c 	.word	0x2001382c
 800589c:	0802a01c 	.word	0x0802a01c
 80058a0:	0802a11e 	.word	0x0802a11e
 80058a4:	0802a099 	.word	0x0802a099
 80058a8:	20013830 	.word	0x20013830
 80058ac:	0802a0e0 	.word	0x0802a0e0
        return texts->getText(typedTextId);
 80058b0:	4b95      	ldr	r3, [pc, #596]	; (8005b08 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 80058b2:	211b      	movs	r1, #27
 80058b4:	6818      	ldr	r0, [r3, #0]
 80058b6:	f002 fb3d 	bl	8007f34 <_ZNK8touchgfx5Texts7getTextEt>
 80058ba:	4a94      	ldr	r2, [pc, #592]	; (8005b0c <_ZN19MeasurementViewBaseC1Ev+0x440>)
 80058bc:	4603      	mov	r3, r0
 80058be:	2104      	movs	r1, #4
 80058c0:	4650      	mov	r0, sl
 80058c2:	f012 fc91 	bl	80181e8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80058c6:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 80058ca:	4648      	mov	r0, r9
 80058cc:	f00c fa24 	bl	8011d18 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80058d0:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8005b10 <_ZN19MeasurementViewBaseC1Ev+0x444>
 80058d4:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80058d8:	231c      	movs	r3, #28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 80058da:	a90a      	add	r1, sp, #40	; 0x28
 80058dc:	4648      	mov	r0, r9
 80058de:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80058e2:	f00c fa39 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80058e6:	4649      	mov	r1, r9
 80058e8:	4630      	mov	r0, r6
 80058ea:	f00a f881 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 80058ee:	223c      	movs	r2, #60	; 0x3c
 80058f0:	ee18 0a90 	vmov	r0, s17
 80058f4:	213d      	movs	r1, #61	; 0x3d
 80058f6:	f7fc fe22 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80058fa:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80058fe:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8005902:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8005906:	4658      	mov	r0, fp
        linespace = space;
 8005908:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 800590c:	f00b ff8a 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005910:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005914:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8005918:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800591c:	2329      	movs	r3, #41	; 0x29
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 800591e:	ee18 0a90 	vmov	r0, s17
 8005922:	a90a      	add	r1, sp, #40	; 0x28
 8005924:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005928:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800592c:	f00c fa14 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005930:	ee18 1a90 	vmov	r1, s17
 8005934:	4630      	mov	r0, r6
 8005936:	f00a f85b 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800593a:	230a      	movs	r3, #10
 800593c:	9300      	str	r3, [sp, #0]
 800593e:	2232      	movs	r2, #50	; 0x32
 8005940:	23f0      	movs	r3, #240	; 0xf0
 8005942:	4629      	mov	r1, r5
 8005944:	4638      	mov	r0, r7
 8005946:	f7fc fe07 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
 800594a:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800594e:	22a0      	movs	r2, #160	; 0xa0
 8005950:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005954:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8005958:	9b03      	ldr	r3, [sp, #12]
 800595a:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800595e:	4611      	mov	r1, r2
 8005960:	4638      	mov	r0, r7
 8005962:	f00b fdb3 	bl	80114cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005966:	22a0      	movs	r2, #160	; 0xa0
 8005968:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800596c:	4638      	mov	r0, r7
 800596e:	f00b fdb8 	bl	80114e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005972:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8005976:	2b20      	cmp	r3, #32
 8005978:	d005      	beq.n	8005986 <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 800597a:	2320      	movs	r3, #32
 800597c:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8005980:	4638      	mov	r0, r7
 8005982:	f00b fcad 	bl	80112e0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005986:	4638      	mov	r0, r7
 8005988:	2101      	movs	r1, #1
 800598a:	f00b fdb5 	bl	80114f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800598e:	4639      	mov	r1, r7
 8005990:	4630      	mov	r0, r6
 8005992:	f00a f82d 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8005996:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 800599a:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 800599c:	2223      	movs	r2, #35	; 0x23
 800599e:	4640      	mov	r0, r8
        linespace = space;
 80059a0:	f04f 0a00 	mov.w	sl, #0
 80059a4:	2145      	movs	r1, #69	; 0x45
 80059a6:	f7fc fdca 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80059aa:	4641      	mov	r1, r8
 80059ac:	4638      	mov	r0, r7
        color = newColor;
 80059ae:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 80059b2:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80059b6:	f00b ff35 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80059ba:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80059be:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80059c2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80059c6:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8005b10 <_ZN19MeasurementViewBaseC1Ev+0x444>
 80059ca:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80059ce:	234e      	movs	r3, #78	; 0x4e
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 80059d0:	a90a      	add	r1, sp, #40	; 0x28
 80059d2:	4640      	mov	r0, r8
 80059d4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80059d8:	f00c f9be 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80059dc:	4641      	mov	r1, r8
 80059de:	4630      	mov	r0, r6
 80059e0:	f00a f806 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80059e4:	ee18 0a10 	vmov	r0, s16
 80059e8:	220c      	movs	r2, #12
 80059ea:	2136      	movs	r1, #54	; 0x36
 80059ec:	f7fc fda7 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 80059f0:	ee18 1a10 	vmov	r1, s16
 80059f4:	4638      	mov	r0, r7
        color = newColor;
 80059f6:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 80059fa:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80059fe:	f00b ff11 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005a02:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005a06:	ee18 3a10 	vmov	r3, s16
 8005a0a:	333c      	adds	r3, #60	; 0x3c
 8005a0c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005a10:	234f      	movs	r3, #79	; 0x4f
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8005a12:	ee18 0a10 	vmov	r0, s16
 8005a16:	a90a      	add	r1, sp, #40	; 0x28
 8005a18:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005a1c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005a20:	f00c f99a 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005a24:	ee18 1a10 	vmov	r1, s16
 8005a28:	4630      	mov	r0, r6
 8005a2a:	f009 ffe1 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005a2e:	ee19 0a10 	vmov	r0, s18
 8005a32:	22f0      	movs	r2, #240	; 0xf0
 8005a34:	2121      	movs	r1, #33	; 0x21
 8005a36:	f7fc fd82 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8005a3a:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005a3e:	aa0a      	add	r2, sp, #40	; 0x28
 8005a40:	f04f 0802 	mov.w	r8, #2
 8005a44:	a909      	add	r1, sp, #36	; 0x24
 8005a46:	ee19 0a10 	vmov	r0, s18
 8005a4a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005a4e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8005a52:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005a56:	f00c fb64 	bl	8012122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005a5a:	234d      	movs	r3, #77	; 0x4d
 8005a5c:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005a60:	3710      	adds	r7, #16
        updateTextPosition();
 8005a62:	ee19 0a10 	vmov	r0, s18
 8005a66:	f7fc fdbf 	bl	80025e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005a6a:	ee19 1a10 	vmov	r1, s18
 8005a6e:	4630      	mov	r0, r6
        colorPressed = col;
 8005a70:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8005a74:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8005a78:	f009 ffba 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005a7c:	ee19 0a90 	vmov	r0, s19
 8005a80:	22aa      	movs	r2, #170	; 0xaa
 8005a82:	2121      	movs	r1, #33	; 0x21
 8005a84:	f7fc fd5b 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005a88:	aa0a      	add	r2, sp, #40	; 0x28
 8005a8a:	a909      	add	r1, sp, #36	; 0x24
 8005a8c:	ee19 0a90 	vmov	r0, s19
 8005a90:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005a94:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005a98:	f00c fb43 	bl	8012122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005a9c:	234c      	movs	r3, #76	; 0x4c
 8005a9e:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005aa2:	ee19 0a90 	vmov	r0, s19
 8005aa6:	f7fc fd9f 	bl	80025e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005aaa:	ee19 1a90 	vmov	r1, s19
 8005aae:	4630      	mov	r0, r6
        colorPressed = col;
 8005ab0:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8005ab4:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8005ab8:	f009 ff9a 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005abc:	ee1a 0a10 	vmov	r0, s20
 8005ac0:	2264      	movs	r2, #100	; 0x64
 8005ac2:	2121      	movs	r1, #33	; 0x21
 8005ac4:	f7fc fd3b 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005ac8:	aa0a      	add	r2, sp, #40	; 0x28
 8005aca:	a909      	add	r1, sp, #36	; 0x24
 8005acc:	ee1a 0a10 	vmov	r0, s20
 8005ad0:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005ad4:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005ad8:	f00c fb23 	bl	8012122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005adc:	234b      	movs	r3, #75	; 0x4b
        updateTextPosition();
 8005ade:	ee1a 0a10 	vmov	r0, s20
 8005ae2:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8005ae6:	f7fc fd7f 	bl	80025e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005aea:	4630      	mov	r0, r6
        colorPressed = col;
 8005aec:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8005af0:	ee1a 1a10 	vmov	r1, s20
 8005af4:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8005af8:	f009 ff7a 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005afc:	4620      	mov	r0, r4
 8005afe:	b00d      	add	sp, #52	; 0x34
 8005b00:	ecbd 8b06 	vpop	{d8-d10}
 8005b04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005b08:	20013838 	.word	0x20013838
 8005b0c:	0802a156 	.word	0x0802a156
 8005b10:	0802a1cc 	.word	0x0802a1cc

08005b14 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8005b14:	4770      	bx	lr

08005b16 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005b16:	4770      	bx	lr

08005b18 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005b18:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005b1a:	68c2      	ldr	r2, [r0, #12]
 8005b1c:	6844      	ldr	r4, [r0, #4]
 8005b1e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005b20:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005b22:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005b26:	07d2      	lsls	r2, r2, #31
 8005b28:	bf48      	it	mi
 8005b2a:	5962      	ldrmi	r2, [r4, r5]
 8005b2c:	689b      	ldr	r3, [r3, #8]
    }
 8005b2e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005b30:	bf48      	it	mi
 8005b32:	58d3      	ldrmi	r3, [r2, r3]
 8005b34:	4718      	bx	r3

08005b36 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005b36:	6843      	ldr	r3, [r0, #4]
 8005b38:	b12b      	cbz	r3, 8005b46 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005b3a:	6883      	ldr	r3, [r0, #8]
 8005b3c:	b92b      	cbnz	r3, 8005b4a <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005b3e:	68c0      	ldr	r0, [r0, #12]
 8005b40:	f000 0001 	and.w	r0, r0, #1
 8005b44:	4770      	bx	lr
 8005b46:	4618      	mov	r0, r3
 8005b48:	4770      	bx	lr
 8005b4a:	2001      	movs	r0, #1
    }
 8005b4c:	4770      	bx	lr

08005b4e <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005b4e:	b510      	push	{r4, lr}
 8005b50:	2110      	movs	r1, #16
 8005b52:	4604      	mov	r4, r0
 8005b54:	f021 ff43 	bl	80279de <_ZdlPvj>
 8005b58:	4620      	mov	r0, r4
 8005b5a:	bd10      	pop	{r4, pc}

08005b5c <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005b5c:	b510      	push	{r4, lr}
 8005b5e:	4b03      	ldr	r3, [pc, #12]	; (8005b6c <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8005b60:	6003      	str	r3, [r0, #0]
 8005b62:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005b64:	f00d fcda 	bl	801351c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005b68:	4620      	mov	r0, r4
 8005b6a:	bd10      	pop	{r4, pc}
 8005b6c:	0802bbfc 	.word	0x0802bbfc

08005b70 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005b70:	b507      	push	{r0, r1, r2, lr}
 8005b72:	4b07      	ldr	r3, [pc, #28]	; (8005b90 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8005b74:	6003      	str	r3, [r0, #0]
 8005b76:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005b78:	f00d fcd0 	bl	801351c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005b7c:	9801      	ldr	r0, [sp, #4]
 8005b7e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8005b82:	f021 ff2c 	bl	80279de <_ZdlPvj>
 8005b86:	9801      	ldr	r0, [sp, #4]
 8005b88:	b003      	add	sp, #12
 8005b8a:	f85d fb04 	ldr.w	pc, [sp], #4
 8005b8e:	bf00      	nop
 8005b90:	0802bbfc 	.word	0x0802bbfc

08005b94 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005b94:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8005b96:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8005b9a:	4299      	cmp	r1, r3
{
 8005b9c:	4604      	mov	r4, r0
 8005b9e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8005ba0:	d103      	bne.n	8005baa <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005ba2:	f00f f9bd 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8005ba6:	f7fd fdf1 	bl	800378c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8005baa:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005bae:	429d      	cmp	r5, r3
 8005bb0:	d103      	bne.n	8005bba <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005bb2:	f00f f9b5 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8005bb6:	f7fd fe59 	bl	800386c <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8005bba:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8005bbe:	42a5      	cmp	r5, r4
 8005bc0:	d105      	bne.n	8005bce <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005bc2:	f00f f9ad 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8005bc6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8005bca:	f7fd be3f 	b.w	800384c <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8005bce:	bd38      	pop	{r3, r4, r5, pc}

08005bd0 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8005bd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005bd4:	ed2d 8b06 	vpush	{d8-d10}
 8005bd8:	4604      	mov	r4, r0
 8005bda:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8005bdc:	46a3      	mov	fp, r4
 8005bde:	2500      	movs	r5, #0
 8005be0:	f010 fe1e 	bl	8016820 <_ZN8touchgfx6ScreenC1Ev>
 8005be4:	4b66      	ldr	r3, [pc, #408]	; (8005d80 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8005be6:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005be8:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005bec:	2226      	movs	r2, #38	; 0x26
 8005bee:	4629      	mov	r1, r5
 8005bf0:	4658      	mov	r0, fp
 8005bf2:	f022 feea 	bl	80289ca <memset>
 8005bf6:	4658      	mov	r0, fp
 8005bf8:	f7fc fcc2 	bl	8002580 <_ZN8touchgfx6WidgetC1Ev>
 8005bfc:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005c00:	26ff      	movs	r6, #255	; 0xff
 8005c02:	4b60      	ldr	r3, [pc, #384]	; (8005d84 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8005c04:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005c06:	2226      	movs	r2, #38	; 0x26
 8005c08:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005c0c:	4629      	mov	r1, r5
 8005c0e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005c12:	4650      	mov	r0, sl
 8005c14:	66a5      	str	r5, [r4, #104]	; 0x68
 8005c16:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005c1a:	f022 fed6 	bl	80289ca <memset>
 8005c1e:	4650      	mov	r0, sl
 8005c20:	f7fc fcae 	bl	8002580 <_ZN8touchgfx6WidgetC1Ev>
 8005c24:	4b58      	ldr	r3, [pc, #352]	; (8005d88 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8005c26:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005c28:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005c2c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005c30:	a90a      	add	r1, sp, #40	; 0x28
 8005c32:	4650      	mov	r0, sl
 8005c34:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005c38:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005c3c:	f00c fc67 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005c40:	4648      	mov	r0, r9
 8005c42:	f7fc fcaf 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8005c46:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005c4a:	4b50      	ldr	r3, [pc, #320]	; (8005d8c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8005c4c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005c50:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005c54:	4638      	mov	r0, r7
 8005c56:	f00b fb23 	bl	80112a0 <_ZN8touchgfx4LineC1Ev>
 8005c5a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005c5e:	4618      	mov	r0, r3
 8005c60:	9303      	str	r3, [sp, #12]
 8005c62:	f7fb fb2d 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005c66:	4b4a      	ldr	r3, [pc, #296]	; (8005d90 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8005c68:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005c6c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005c70:	3324      	adds	r3, #36	; 0x24
 8005c72:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005c76:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005c7a:	4640      	mov	r0, r8
 8005c7c:	f7fc fc92 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8005c80:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005c84:	4618      	mov	r0, r3
 8005c86:	ee08 3a10 	vmov	s16, r3
 8005c8a:	f7fc fc8b 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8005c8e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005c92:	4618      	mov	r0, r3
 8005c94:	ee08 3a90 	vmov	s17, r3
 8005c98:	f7fc fc84 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8005c9c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005ca0:	4618      	mov	r0, r3
 8005ca2:	ee09 3a10 	vmov	s18, r3
 8005ca6:	f00c fd73 	bl	8012790 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005caa:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005cae:	4618      	mov	r0, r3
 8005cb0:	ee09 3a90 	vmov	s19, r3
 8005cb4:	f00c fd6c 	bl	8012790 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005cb8:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005cbc:	4618      	mov	r0, r3
 8005cbe:	ee0a 3a10 	vmov	s20, r3
 8005cc2:	f00c fd65 	bl	8012790 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005cc6:	4a33      	ldr	r2, [pc, #204]	; (8005d94 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 8005cc8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005ccc:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8005cd0:	4a31      	ldr	r2, [pc, #196]	; (8005d98 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005cd2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005cd6:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005cda:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8005cde:	f00d fc13 	bl	8013508 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005ce2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005ce6:	462a      	mov	r2, r5
 8005ce8:	4658      	mov	r0, fp
 8005cea:	9300      	str	r3, [sp, #0]
 8005cec:	4629      	mov	r1, r5
 8005cee:	23f0      	movs	r3, #240	; 0xf0
 8005cf0:	f7fc fc32 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005cf4:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005cf6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005cfa:	66a3      	str	r3, [r4, #104]	; 0x68
 8005cfc:	4659      	mov	r1, fp
 8005cfe:	4630      	mov	r0, r6
 8005d00:	f009 fe76 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005d04:	462a      	mov	r2, r5
 8005d06:	4650      	mov	r0, sl
 8005d08:	4629      	mov	r1, r5
 8005d0a:	f7fc fc18 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8005d0e:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005d10:	4650      	mov	r0, sl
 8005d12:	a90a      	add	r1, sp, #40	; 0x28
 8005d14:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005d18:	f00c fbf9 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005d1c:	4651      	mov	r1, sl
 8005d1e:	4630      	mov	r0, r6
 8005d20:	f009 fe66 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005d24:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005d28:	2156      	movs	r1, #86	; 0x56
 8005d2a:	4648      	mov	r0, r9
 8005d2c:	f7fc fc07 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8005d30:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005d34:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005d38:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005d3c:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005d40:	4650      	mov	r0, sl
 8005d42:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005d46:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005d4a:	4649      	mov	r1, r9
 8005d4c:	4798      	blx	r3
 8005d4e:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005d52:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005d56:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005d5a:	4b10      	ldr	r3, [pc, #64]	; (8005d9c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 8005d5c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 8005d5e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8005d62:	b92b      	cbnz	r3, 8005d70 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 8005d64:	4b0e      	ldr	r3, [pc, #56]	; (8005da0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 8005d66:	4a0f      	ldr	r2, [pc, #60]	; (8005da4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8005d68:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005d6a:	480f      	ldr	r0, [pc, #60]	; (8005da8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 8005d6c:	f022 fc28 	bl	80285c0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005d70:	4b0e      	ldr	r3, [pc, #56]	; (8005dac <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005d72:	881b      	ldrh	r3, [r3, #0]
 8005d74:	2b16      	cmp	r3, #22
 8005d76:	d81d      	bhi.n	8005db4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 8005d78:	4b0d      	ldr	r3, [pc, #52]	; (8005db0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 8005d7a:	4a0a      	ldr	r2, [pc, #40]	; (8005da4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8005d7c:	2161      	movs	r1, #97	; 0x61
 8005d7e:	e7f4      	b.n	8005d6a <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 8005d80:	0802bbfc 	.word	0x0802bbfc
 8005d84:	0802cb14 	.word	0x0802cb14
 8005d88:	0802ccdc 	.word	0x0802ccdc
 8005d8c:	0802a1dc 	.word	0x0802a1dc
 8005d90:	0802c848 	.word	0x0802c848
 8005d94:	0802bbe4 	.word	0x0802bbe4
 8005d98:	08005b95 	.word	0x08005b95
 8005d9c:	2001382c 	.word	0x2001382c
 8005da0:	0802a01c 	.word	0x0802a01c
 8005da4:	0802a11e 	.word	0x0802a11e
 8005da8:	0802a099 	.word	0x0802a099
 8005dac:	20013830 	.word	0x20013830
 8005db0:	0802a0e0 	.word	0x0802a0e0
        return texts->getText(typedTextId);
 8005db4:	4b93      	ldr	r3, [pc, #588]	; (8006004 <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 8005db6:	2116      	movs	r1, #22
 8005db8:	6818      	ldr	r0, [r3, #0]
 8005dba:	f002 f8bb 	bl	8007f34 <_ZNK8touchgfx5Texts7getTextEt>
 8005dbe:	4a92      	ldr	r2, [pc, #584]	; (8006008 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 8005dc0:	4603      	mov	r3, r0
 8005dc2:	2104      	movs	r1, #4
 8005dc4:	4650      	mov	r0, sl
 8005dc6:	f012 fa0f 	bl	80181e8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8005dca:	4648      	mov	r0, r9
        wc1 = value;
 8005dcc:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8005dd0:	f00b ffa2 	bl	8011d18 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005dd4:	4b8d      	ldr	r3, [pc, #564]	; (800600c <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 8005dd6:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8005dd8:	a90a      	add	r1, sp, #40	; 0x28
 8005dda:	2317      	movs	r3, #23
 8005ddc:	4648      	mov	r0, r9
 8005dde:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005de2:	f00b ffb9 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005de6:	4649      	mov	r1, r9
 8005de8:	4630      	mov	r0, r6
 8005dea:	f009 fe01 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005dee:	230a      	movs	r3, #10
 8005df0:	9300      	str	r3, [sp, #0]
 8005df2:	2232      	movs	r2, #50	; 0x32
 8005df4:	23f0      	movs	r3, #240	; 0xf0
 8005df6:	4629      	mov	r1, r5
 8005df8:	4638      	mov	r0, r7
 8005dfa:	f7fc fbad 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005dfe:	9b03      	ldr	r3, [sp, #12]
 8005e00:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005e04:	22a0      	movs	r2, #160	; 0xa0
 8005e06:	4611      	mov	r1, r2
 8005e08:	4638      	mov	r0, r7
 8005e0a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005e0e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005e12:	f00b fb5b 	bl	80114cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005e16:	22a0      	movs	r2, #160	; 0xa0
 8005e18:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005e1c:	4638      	mov	r0, r7
 8005e1e:	f00b fb60 	bl	80114e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005e22:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005e26:	2b20      	cmp	r3, #32
 8005e28:	d005      	beq.n	8005e36 <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 8005e2a:	2320      	movs	r3, #32
 8005e2c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005e30:	4638      	mov	r0, r7
 8005e32:	f00b fa55 	bl	80112e0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005e36:	4638      	mov	r0, r7
 8005e38:	2101      	movs	r1, #1
 8005e3a:	f00b fb5d 	bl	80114f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005e3e:	4639      	mov	r1, r7
 8005e40:	4630      	mov	r0, r6
 8005e42:	ad04      	add	r5, sp, #16
        color = newColor;
 8005e44:	f04f 37ff 	mov.w	r7, #4294967295
 8005e48:	f009 fdd2 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005e4c:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005e50:	2223      	movs	r2, #35	; 0x23
 8005e52:	4640      	mov	r0, r8
 8005e54:	2145      	movs	r1, #69	; 0x45
 8005e56:	f7fc fb72 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005e5a:	4641      	mov	r1, r8
 8005e5c:	4628      	mov	r0, r5
        color = newColor;
 8005e5e:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8005e62:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8005e66:	f00b fcdd 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005e6a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005e6e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005e72:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005e76:	f04f 0b3c 	mov.w	fp, #60	; 0x3c
 8005e7a:	f8df 9190 	ldr.w	r9, [pc, #400]	; 800600c <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 8005e7e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 8005e82:	a90a      	add	r1, sp, #40	; 0x28
 8005e84:	4640      	mov	r0, r8
 8005e86:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005e8a:	f00b ff65 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005e8e:	4641      	mov	r1, r8
 8005e90:	4630      	mov	r0, r6
 8005e92:	f009 fdad 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005e96:	ee18 0a10 	vmov	r0, s16
 8005e9a:	220c      	movs	r2, #12
 8005e9c:	2136      	movs	r1, #54	; 0x36
 8005e9e:	f7fc fb4e 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8005ea2:	ee18 1a10 	vmov	r1, s16
 8005ea6:	4628      	mov	r0, r5
        color = newColor;
 8005ea8:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8005eac:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005eb0:	f00b fcb8 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005eb4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005eb8:	ee18 3a10 	vmov	r3, s16
 8005ebc:	445b      	add	r3, fp
 8005ebe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005ec2:	233b      	movs	r3, #59	; 0x3b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 8005ec4:	ee18 0a10 	vmov	r0, s16
 8005ec8:	a90a      	add	r1, sp, #40	; 0x28
 8005eca:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005ece:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005ed2:	f00b ff41 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005ed6:	ee18 1a10 	vmov	r1, s16
 8005eda:	4630      	mov	r0, r6
 8005edc:	f009 fd88 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 8005ee0:	465a      	mov	r2, fp
 8005ee2:	ee18 0a90 	vmov	r0, s17
 8005ee6:	2121      	movs	r1, #33	; 0x21
 8005ee8:	f7fc fb29 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8005eec:	ee18 1a90 	vmov	r1, s17
 8005ef0:	4628      	mov	r0, r5
        color = newColor;
 8005ef2:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8005ef6:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005efa:	f00b fc93 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005efe:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005f02:	ee18 3a90 	vmov	r3, s17
 8005f06:	445b      	add	r3, fp
 8005f08:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005f0c:	2325      	movs	r3, #37	; 0x25
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 8005f0e:	ee18 0a90 	vmov	r0, s17
 8005f12:	a90a      	add	r1, sp, #40	; 0x28
 8005f14:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005f18:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005f1c:	f00b ff1c 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005f20:	ee18 1a90 	vmov	r1, s17
 8005f24:	4630      	mov	r0, r6
 8005f26:	f009 fd63 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005f2a:	ee19 0a10 	vmov	r0, s18
 8005f2e:	22f0      	movs	r2, #240	; 0xf0
 8005f30:	2121      	movs	r1, #33	; 0x21
 8005f32:	f7fc fb04 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8005f36:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005f3a:	aa0a      	add	r2, sp, #40	; 0x28
 8005f3c:	f04f 0802 	mov.w	r8, #2
 8005f40:	a909      	add	r1, sp, #36	; 0x24
 8005f42:	ee19 0a10 	vmov	r0, s18
 8005f46:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005f4a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8005f4e:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005f52:	f00c f8e6 	bl	8012122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005f56:	233a      	movs	r3, #58	; 0x3a
 8005f58:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005f5c:	3510      	adds	r5, #16
        updateTextPosition();
 8005f5e:	ee19 0a10 	vmov	r0, s18
 8005f62:	f7fc fb41 	bl	80025e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005f66:	ee19 1a10 	vmov	r1, s18
 8005f6a:	4630      	mov	r0, r6
        colorPressed = col;
 8005f6c:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8005f70:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8005f74:	f009 fd3c 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005f78:	ee19 0a90 	vmov	r0, s19
 8005f7c:	22aa      	movs	r2, #170	; 0xaa
 8005f7e:	2121      	movs	r1, #33	; 0x21
 8005f80:	f7fc fadd 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005f84:	aa0a      	add	r2, sp, #40	; 0x28
 8005f86:	a909      	add	r1, sp, #36	; 0x24
 8005f88:	ee19 0a90 	vmov	r0, s19
 8005f8c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005f90:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005f94:	f00c f8c5 	bl	8012122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005f98:	2339      	movs	r3, #57	; 0x39
 8005f9a:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005f9e:	ee19 0a90 	vmov	r0, s19
 8005fa2:	f7fc fb21 	bl	80025e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005fa6:	ee19 1a90 	vmov	r1, s19
 8005faa:	4630      	mov	r0, r6
        colorPressed = col;
 8005fac:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8005fb0:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8005fb4:	f009 fd1c 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005fb8:	ee1a 0a10 	vmov	r0, s20
 8005fbc:	2264      	movs	r2, #100	; 0x64
 8005fbe:	2121      	movs	r1, #33	; 0x21
 8005fc0:	f7fc fabd 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005fc4:	aa0a      	add	r2, sp, #40	; 0x28
 8005fc6:	a909      	add	r1, sp, #36	; 0x24
 8005fc8:	ee1a 0a10 	vmov	r0, s20
 8005fcc:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005fd0:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005fd4:	f00c f8a5 	bl	8012122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005fd8:	2338      	movs	r3, #56	; 0x38
        updateTextPosition();
 8005fda:	ee1a 0a10 	vmov	r0, s20
 8005fde:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8005fe2:	f7fc fb01 	bl	80025e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005fe6:	4630      	mov	r0, r6
        colorPressed = col;
 8005fe8:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8005fec:	ee1a 1a10 	vmov	r1, s20
 8005ff0:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8005ff4:	f009 fcfc 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005ff8:	4620      	mov	r0, r4
 8005ffa:	b00d      	add	sp, #52	; 0x34
 8005ffc:	ecbd 8b06 	vpop	{d8-d10}
 8006000:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006004:	20013838 	.word	0x20013838
 8006008:	0802a156 	.word	0x0802a156
 800600c:	0802a1cc 	.word	0x0802a1cc

08006010 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006010:	4770      	bx	lr

08006012 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006012:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006014:	68c2      	ldr	r2, [r0, #12]
 8006016:	6844      	ldr	r4, [r0, #4]
 8006018:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800601a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800601c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006020:	07d2      	lsls	r2, r2, #31
 8006022:	bf48      	it	mi
 8006024:	5962      	ldrmi	r2, [r4, r5]
 8006026:	689b      	ldr	r3, [r3, #8]
    }
 8006028:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800602a:	bf48      	it	mi
 800602c:	58d3      	ldrmi	r3, [r2, r3]
 800602e:	4718      	bx	r3

08006030 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006030:	6843      	ldr	r3, [r0, #4]
 8006032:	b12b      	cbz	r3, 8006040 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006034:	6883      	ldr	r3, [r0, #8]
 8006036:	b92b      	cbnz	r3, 8006044 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006038:	68c0      	ldr	r0, [r0, #12]
 800603a:	f000 0001 	and.w	r0, r0, #1
 800603e:	4770      	bx	lr
 8006040:	4618      	mov	r0, r3
 8006042:	4770      	bx	lr
 8006044:	2001      	movs	r0, #1
    }
 8006046:	4770      	bx	lr

08006048 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006048:	b510      	push	{r4, lr}
 800604a:	2110      	movs	r1, #16
 800604c:	4604      	mov	r4, r0
 800604e:	f021 fcc6 	bl	80279de <_ZdlPvj>
 8006052:	4620      	mov	r0, r4
 8006054:	bd10      	pop	{r4, pc}

08006056 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8006056:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 800605a:	f002 b8b3 	b.w	80081c4 <_ZN17Gauge_with_Values10initializeEv>

0800605e <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800605e:	3098      	adds	r0, #152	; 0x98
 8006060:	4288      	cmp	r0, r1
{
 8006062:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006064:	d105      	bne.n	8006072 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006066:	f00e ff5b 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 800606a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 800606e:	f7fd bbdd 	b.w	800382c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006072:	bd08      	pop	{r3, pc}

08006074 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8006074:	b510      	push	{r4, lr}
 8006076:	4b07      	ldr	r3, [pc, #28]	; (8006094 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x20>)
 8006078:	6003      	str	r3, [r0, #0]
 800607a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800607c:	f00d fa4e 	bl	801351c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>

class Gauge_with_Values : public Gauge_with_ValuesBase
{
public:
    Gauge_with_Values();
    virtual ~Gauge_with_Values() {}
 8006080:	4b05      	ldr	r3, [pc, #20]	; (8006098 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x24>)
 8006082:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8006086:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800608a:	f7fe fe25 	bl	8004cd8 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 800608e:	4620      	mov	r0, r4
 8006090:	bd10      	pop	{r4, pc}
 8006092:	bf00      	nop
 8006094:	0802bc48 	.word	0x0802bc48
 8006098:	0802c1a0 	.word	0x0802c1a0

0800609c <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 800609c:	b510      	push	{r4, lr}
 800609e:	4604      	mov	r4, r0
}
 80060a0:	f7ff ffe8 	bl	8006074 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 80060a4:	4620      	mov	r0, r4
 80060a6:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80060aa:	f021 fc98 	bl	80279de <_ZdlPvj>
 80060ae:	4620      	mov	r0, r4
 80060b0:	bd10      	pop	{r4, pc}
	...

080060b4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 80060b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80060b8:	ed2d 8b04 	vpush	{d8-d9}
 80060bc:	4604      	mov	r4, r0
 80060be:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 80060c0:	46a1      	mov	r9, r4
 80060c2:	2500      	movs	r5, #0
 80060c4:	f010 fbac 	bl	8016820 <_ZN8touchgfx6ScreenC1Ev>
 80060c8:	4bac      	ldr	r3, [pc, #688]	; (800637c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c8>)
 80060ca:	63e5      	str	r5, [r4, #60]	; 0x3c
 80060cc:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 80060d0:	2226      	movs	r2, #38	; 0x26
 80060d2:	4629      	mov	r1, r5
 80060d4:	4648      	mov	r0, r9
 80060d6:	f022 fc78 	bl	80289ca <memset>
 80060da:	4648      	mov	r0, r9
 80060dc:	f7fc fa50 	bl	8002580 <_ZN8touchgfx6WidgetC1Ev>
 80060e0:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 80060e4:	26ff      	movs	r6, #255	; 0xff
 80060e6:	4ba6      	ldr	r3, [pc, #664]	; (8006380 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2cc>)
 80060e8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80060ea:	2226      	movs	r2, #38	; 0x26
 80060ec:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80060f0:	4629      	mov	r1, r5
 80060f2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80060f6:	4640      	mov	r0, r8
 80060f8:	66a5      	str	r5, [r4, #104]	; 0x68
 80060fa:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80060fe:	f022 fc64 	bl	80289ca <memset>
 8006102:	4640      	mov	r0, r8
 8006104:	f7fc fa3c 	bl	8002580 <_ZN8touchgfx6WidgetC1Ev>
 8006108:	4b9e      	ldr	r3, [pc, #632]	; (8006384 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d0>)
 800610a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800610c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006110:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006114:	a90a      	add	r1, sp, #40	; 0x28
 8006116:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006118:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800611c:	f00c f9f7 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006120:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8006124:	4618      	mov	r0, r3
 8006126:	ee08 3a10 	vmov	s16, r3
 800612a:	f00c fb31 	bl	8012790 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800612e:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006132:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006136:	4618      	mov	r0, r3
 8006138:	ee08 3a90 	vmov	s17, r3
 800613c:	f7fc fa32 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8006140:	4638      	mov	r0, r7
 8006142:	f00b f8ad 	bl	80112a0 <_ZN8touchgfx4LineC1Ev>
 8006146:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800614a:	4618      	mov	r0, r3
 800614c:	9303      	str	r3, [sp, #12]
 800614e:	f7fb f8b7 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006152:	4b8d      	ldr	r3, [pc, #564]	; (8006388 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d4>)
 8006154:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006158:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 800615c:	3324      	adds	r3, #36	; 0x24
 800615e:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006162:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8006166:	4658      	mov	r0, fp
 8006168:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 800616c:	f7fc fa1a 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8006170:	4650      	mov	r0, sl
 8006172:	f7fc fa17 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8006176:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800617a:	4618      	mov	r0, r3
 800617c:	ee09 3a10 	vmov	s18, r3
 8006180:	f002 f816 	bl	80081b0 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006184:	4a81      	ldr	r2, [pc, #516]	; (800638c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d8>)
 8006186:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800618a:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 800618e:	4a80      	ldr	r2, [pc, #512]	; (8006390 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006190:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006194:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8006198:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 800619c:	f00d f9b4 	bl	8013508 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80061a0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80061a4:	462a      	mov	r2, r5
 80061a6:	4648      	mov	r0, r9
 80061a8:	9300      	str	r3, [sp, #0]
 80061aa:	4629      	mov	r1, r5
 80061ac:	23f0      	movs	r3, #240	; 0xf0
 80061ae:	f7fc f9d3 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
 80061b2:	1d26      	adds	r6, r4, #4
        color = newColor;
 80061b4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80061b8:	66a3      	str	r3, [r4, #104]	; 0x68
 80061ba:	4649      	mov	r1, r9
 80061bc:	4630      	mov	r0, r6
 80061be:	f009 fc17 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80061c2:	462a      	mov	r2, r5
 80061c4:	4640      	mov	r0, r8
 80061c6:	4629      	mov	r1, r5
 80061c8:	f7fc f9b9 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 80061cc:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80061ce:	4640      	mov	r0, r8
 80061d0:	a90a      	add	r1, sp, #40	; 0x28
 80061d2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80061d6:	f00c f99a 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80061da:	4641      	mov	r1, r8
 80061dc:	4630      	mov	r0, r6
 80061de:	f009 fc07 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80061e2:	ee18 0a10 	vmov	r0, s16
 80061e6:	f240 1201 	movw	r2, #257	; 0x101
 80061ea:	2121      	movs	r1, #33	; 0x21
 80061ec:	f7fc f9a7 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 80061f0:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80061f2:	aa0a      	add	r2, sp, #40	; 0x28
 80061f4:	a909      	add	r1, sp, #36	; 0x24
 80061f6:	ee18 0a10 	vmov	r0, s16
 80061fa:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80061fe:	2302      	movs	r3, #2
 8006200:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006204:	f00b ff8d 	bl	8012122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006208:	2321      	movs	r3, #33	; 0x21
        updateTextPosition();
 800620a:	ee18 0a10 	vmov	r0, s16
 800620e:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8006212:	f7fc f9e9 	bl	80025e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006216:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 800621a:	3314      	adds	r3, #20
        color = col;
 800621c:	f04f 39ff 	mov.w	r9, #4294967295
 8006220:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006224:	ee18 1a10 	vmov	r1, s16
 8006228:	4630      	mov	r0, r6
        colorPressed = col;
 800622a:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 800622e:	f009 fbdf 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006232:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006236:	223c      	movs	r2, #60	; 0x3c
 8006238:	ee18 0a90 	vmov	r0, s17
 800623c:	2117      	movs	r1, #23
 800623e:	f7fc f97e 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8006242:	ee18 1a90 	vmov	r1, s17
 8006246:	4640      	mov	r0, r8
        color = newColor;
 8006248:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 800624c:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006250:	f00b fae8 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006254:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006258:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 800625c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006260:	4b4c      	ldr	r3, [pc, #304]	; (8006394 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 8006262:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8006264:	ee18 0a90 	vmov	r0, s17
 8006268:	2322      	movs	r3, #34	; 0x22
 800626a:	a90a      	add	r1, sp, #40	; 0x28
 800626c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006270:	f00b fd72 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006274:	ee18 1a90 	vmov	r1, s17
 8006278:	4630      	mov	r0, r6
 800627a:	f009 fbb9 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800627e:	230a      	movs	r3, #10
 8006280:	9300      	str	r3, [sp, #0]
 8006282:	2232      	movs	r2, #50	; 0x32
 8006284:	23f0      	movs	r3, #240	; 0xf0
 8006286:	4629      	mov	r1, r5
 8006288:	4638      	mov	r0, r7
 800628a:	f7fc f965 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
 800628e:	9b03      	ldr	r3, [sp, #12]
 8006290:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006294:	22a0      	movs	r2, #160	; 0xa0
 8006296:	4611      	mov	r1, r2
 8006298:	4638      	mov	r0, r7
 800629a:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 800629e:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80062a2:	f00b f913 	bl	80114cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80062a6:	22a0      	movs	r2, #160	; 0xa0
 80062a8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80062ac:	4638      	mov	r0, r7
 80062ae:	f00b f918 	bl	80114e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80062b2:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80062b6:	2b20      	cmp	r3, #32
 80062b8:	d005      	beq.n	80062c6 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 80062ba:	2320      	movs	r3, #32
 80062bc:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 80062c0:	4638      	mov	r0, r7
 80062c2:	f00b f80d 	bl	80112e0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80062c6:	4638      	mov	r0, r7
 80062c8:	2101      	movs	r1, #1
 80062ca:	f00b f915 	bl	80114f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80062ce:	4639      	mov	r1, r7
 80062d0:	4630      	mov	r0, r6
 80062d2:	f009 fb8d 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80062d6:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 80062d8:	2223      	movs	r2, #35	; 0x23
 80062da:	4658      	mov	r0, fp
        color = newColor;
 80062dc:	f04f 39ff 	mov.w	r9, #4294967295
 80062e0:	2145      	movs	r1, #69	; 0x45
 80062e2:	f7fc f92c 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80062e6:	4659      	mov	r1, fp
 80062e8:	4640      	mov	r0, r8
        color = newColor;
 80062ea:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 80062ee:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80062f2:	f00b fa97 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80062f6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80062fa:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 80062fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006302:	4f24      	ldr	r7, [pc, #144]	; (8006394 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 8006304:	970a      	str	r7, [sp, #40]	; 0x28
 8006306:	2323      	movs	r3, #35	; 0x23
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8006308:	a90a      	add	r1, sp, #40	; 0x28
 800630a:	4658      	mov	r0, fp
 800630c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006310:	f00b fd22 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006314:	4659      	mov	r1, fp
 8006316:	4630      	mov	r0, r6
 8006318:	f009 fb6a 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800631c:	220c      	movs	r2, #12
 800631e:	4650      	mov	r0, sl
 8006320:	2136      	movs	r1, #54	; 0x36
 8006322:	f7fc f90c 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8006326:	4651      	mov	r1, sl
 8006328:	4640      	mov	r0, r8
        color = newColor;
 800632a:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 800632e:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8006332:	f00b fa77 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006336:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800633a:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800633e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006342:	2324      	movs	r3, #36	; 0x24
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8006344:	a90a      	add	r1, sp, #40	; 0x28
 8006346:	4650      	mov	r0, sl
 8006348:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800634c:	970a      	str	r7, [sp, #40]	; 0x28
 800634e:	f00b fd03 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006352:	4651      	mov	r1, sl
 8006354:	4630      	mov	r0, r6
 8006356:	f009 fb4b 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 800635a:	ee19 0a10 	vmov	r0, s18
 800635e:	224e      	movs	r2, #78	; 0x4e
 8006360:	4629      	mov	r1, r5
 8006362:	f7fc f8ec 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8006366:	4630      	mov	r0, r6
 8006368:	ee19 1a10 	vmov	r1, s18
 800636c:	f009 fb40 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006370:	4620      	mov	r0, r4
 8006372:	b00d      	add	sp, #52	; 0x34
 8006374:	ecbd 8b04 	vpop	{d8-d9}
 8006378:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800637c:	0802bc48 	.word	0x0802bc48
 8006380:	0802cb14 	.word	0x0802cb14
 8006384:	0802ccdc 	.word	0x0802ccdc
 8006388:	0802c848 	.word	0x0802c848
 800638c:	0802bc30 	.word	0x0802bc30
 8006390:	0800605f 	.word	0x0800605f
 8006394:	0802a1cc 	.word	0x0802a1cc

08006398 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006398:	4770      	bx	lr

0800639a <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800639a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800639c:	68c2      	ldr	r2, [r0, #12]
 800639e:	6844      	ldr	r4, [r0, #4]
 80063a0:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80063a2:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80063a4:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80063a8:	07d2      	lsls	r2, r2, #31
 80063aa:	bf48      	it	mi
 80063ac:	5962      	ldrmi	r2, [r4, r5]
 80063ae:	689b      	ldr	r3, [r3, #8]
    }
 80063b0:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80063b2:	bf48      	it	mi
 80063b4:	58d3      	ldrmi	r3, [r2, r3]
 80063b6:	4718      	bx	r3

080063b8 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80063b8:	6843      	ldr	r3, [r0, #4]
 80063ba:	b12b      	cbz	r3, 80063c8 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80063bc:	6883      	ldr	r3, [r0, #8]
 80063be:	b92b      	cbnz	r3, 80063cc <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80063c0:	68c0      	ldr	r0, [r0, #12]
 80063c2:	f000 0001 	and.w	r0, r0, #1
 80063c6:	4770      	bx	lr
 80063c8:	4618      	mov	r0, r3
 80063ca:	4770      	bx	lr
 80063cc:	2001      	movs	r0, #1
    }
 80063ce:	4770      	bx	lr

080063d0 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80063d0:	b510      	push	{r4, lr}
 80063d2:	2110      	movs	r1, #16
 80063d4:	4604      	mov	r4, r0
 80063d6:	f021 fb02 	bl	80279de <_ZdlPvj>
 80063da:	4620      	mov	r0, r4
 80063dc:	bd10      	pop	{r4, pc}

080063de <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 80063de:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 80063e2:	f001 beef 	b.w	80081c4 <_ZN17Gauge_with_Values10initializeEv>

080063e6 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80063e6:	3098      	adds	r0, #152	; 0x98
 80063e8:	4288      	cmp	r0, r1
{
 80063ea:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80063ec:	d105      	bne.n	80063fa <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80063ee:	f00e fd97 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 80063f2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 80063f6:	f7fd ba19 	b.w	800382c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 80063fa:	bd08      	pop	{r3, pc}

080063fc <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 80063fc:	b510      	push	{r4, lr}
 80063fe:	4b07      	ldr	r3, [pc, #28]	; (800641c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x20>)
 8006400:	6003      	str	r3, [r0, #0]
 8006402:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006404:	f00d f88a 	bl	801351c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8006408:	4b05      	ldr	r3, [pc, #20]	; (8006420 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x24>)
 800640a:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800640e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006412:	f7fe fc61 	bl	8004cd8 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8006416:	4620      	mov	r0, r4
 8006418:	bd10      	pop	{r4, pc}
 800641a:	bf00      	nop
 800641c:	0802bc94 	.word	0x0802bc94
 8006420:	0802c1a0 	.word	0x0802c1a0

08006424 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006424:	b510      	push	{r4, lr}
 8006426:	4604      	mov	r4, r0
}
 8006428:	f7ff ffe8 	bl	80063fc <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 800642c:	4620      	mov	r0, r4
 800642e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8006432:	f021 fad4 	bl	80279de <_ZdlPvj>
 8006436:	4620      	mov	r0, r4
 8006438:	bd10      	pop	{r4, pc}
	...

0800643c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 800643c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006440:	ed2d 8b04 	vpush	{d8-d9}
 8006444:	4604      	mov	r4, r0
 8006446:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8006448:	46a1      	mov	r9, r4
 800644a:	2500      	movs	r5, #0
 800644c:	f010 f9e8 	bl	8016820 <_ZN8touchgfx6ScreenC1Ev>
 8006450:	4bac      	ldr	r3, [pc, #688]	; (8006704 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c8>)
 8006452:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006454:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006458:	2226      	movs	r2, #38	; 0x26
 800645a:	4629      	mov	r1, r5
 800645c:	4648      	mov	r0, r9
 800645e:	f022 fab4 	bl	80289ca <memset>
 8006462:	4648      	mov	r0, r9
 8006464:	f7fc f88c 	bl	8002580 <_ZN8touchgfx6WidgetC1Ev>
 8006468:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 800646c:	26ff      	movs	r6, #255	; 0xff
 800646e:	4ba6      	ldr	r3, [pc, #664]	; (8006708 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2cc>)
 8006470:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006472:	2226      	movs	r2, #38	; 0x26
 8006474:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006478:	4629      	mov	r1, r5
 800647a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800647e:	4640      	mov	r0, r8
 8006480:	66a5      	str	r5, [r4, #104]	; 0x68
 8006482:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006486:	f022 faa0 	bl	80289ca <memset>
 800648a:	4640      	mov	r0, r8
 800648c:	f7fc f878 	bl	8002580 <_ZN8touchgfx6WidgetC1Ev>
 8006490:	4b9e      	ldr	r3, [pc, #632]	; (800670c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d0>)
 8006492:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006494:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006498:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800649c:	a90a      	add	r1, sp, #40	; 0x28
 800649e:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 80064a0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80064a4:	f00c f833 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80064a8:	f104 0398 	add.w	r3, r4, #152	; 0x98
 80064ac:	4618      	mov	r0, r3
 80064ae:	ee08 3a10 	vmov	s16, r3
 80064b2:	f00c f96d 	bl	8012790 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80064b6:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80064ba:	f504 7794 	add.w	r7, r4, #296	; 0x128
 80064be:	4618      	mov	r0, r3
 80064c0:	ee08 3a90 	vmov	s17, r3
 80064c4:	f7fc f86e 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 80064c8:	4638      	mov	r0, r7
 80064ca:	f00a fee9 	bl	80112a0 <_ZN8touchgfx4LineC1Ev>
 80064ce:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80064d2:	4618      	mov	r0, r3
 80064d4:	9303      	str	r3, [sp, #12]
 80064d6:	f7fa fef3 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80064da:	4b8d      	ldr	r3, [pc, #564]	; (8006710 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d4>)
 80064dc:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 80064e0:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 80064e4:	3324      	adds	r3, #36	; 0x24
 80064e6:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 80064ea:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 80064ee:	4658      	mov	r0, fp
 80064f0:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 80064f4:	f7fc f856 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 80064f8:	4650      	mov	r0, sl
 80064fa:	f7fc f853 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 80064fe:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8006502:	4618      	mov	r0, r3
 8006504:	ee09 3a10 	vmov	s18, r3
 8006508:	f001 fe52 	bl	80081b0 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800650c:	4a81      	ldr	r2, [pc, #516]	; (8006714 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d8>)
 800650e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006512:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8006516:	4a80      	ldr	r2, [pc, #512]	; (8006718 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006518:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800651c:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8006520:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8006524:	f00c fff0 	bl	8013508 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006528:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800652c:	462a      	mov	r2, r5
 800652e:	4648      	mov	r0, r9
 8006530:	9300      	str	r3, [sp, #0]
 8006532:	4629      	mov	r1, r5
 8006534:	23f0      	movs	r3, #240	; 0xf0
 8006536:	f7fc f80f 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
 800653a:	1d26      	adds	r6, r4, #4
        color = newColor;
 800653c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006540:	66a3      	str	r3, [r4, #104]	; 0x68
 8006542:	4649      	mov	r1, r9
 8006544:	4630      	mov	r0, r6
 8006546:	f009 fa53 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800654a:	462a      	mov	r2, r5
 800654c:	4640      	mov	r0, r8
 800654e:	4629      	mov	r1, r5
 8006550:	f7fb fff5 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8006554:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006556:	4640      	mov	r0, r8
 8006558:	a90a      	add	r1, sp, #40	; 0x28
 800655a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800655e:	f00b ffd6 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006562:	4641      	mov	r1, r8
 8006564:	4630      	mov	r0, r6
 8006566:	f009 fa43 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800656a:	ee18 0a10 	vmov	r0, s16
 800656e:	f240 1201 	movw	r2, #257	; 0x101
 8006572:	2121      	movs	r1, #33	; 0x21
 8006574:	f7fb ffe3 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8006578:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800657a:	aa0a      	add	r2, sp, #40	; 0x28
 800657c:	a909      	add	r1, sp, #36	; 0x24
 800657e:	ee18 0a10 	vmov	r0, s16
 8006582:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006586:	2302      	movs	r3, #2
 8006588:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800658c:	f00b fdc9 	bl	8012122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006590:	231d      	movs	r3, #29
        updateTextPosition();
 8006592:	ee18 0a10 	vmov	r0, s16
 8006596:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800659a:	f7fc f825 	bl	80025e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800659e:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80065a2:	3314      	adds	r3, #20
        color = col;
 80065a4:	f04f 39ff 	mov.w	r9, #4294967295
 80065a8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80065ac:	ee18 1a10 	vmov	r1, s16
 80065b0:	4630      	mov	r0, r6
        colorPressed = col;
 80065b2:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 80065b6:	f009 fa1b 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80065ba:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 80065be:	223c      	movs	r2, #60	; 0x3c
 80065c0:	ee18 0a90 	vmov	r0, s17
 80065c4:	2117      	movs	r1, #23
 80065c6:	f7fb ffba 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 80065ca:	ee18 1a90 	vmov	r1, s17
 80065ce:	4640      	mov	r0, r8
        color = newColor;
 80065d0:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 80065d4:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80065d8:	f00b f924 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80065dc:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80065e0:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80065e4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80065e8:	4b4c      	ldr	r3, [pc, #304]	; (800671c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 80065ea:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 80065ec:	ee18 0a90 	vmov	r0, s17
 80065f0:	231e      	movs	r3, #30
 80065f2:	a90a      	add	r1, sp, #40	; 0x28
 80065f4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80065f8:	f00b fbae 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80065fc:	ee18 1a90 	vmov	r1, s17
 8006600:	4630      	mov	r0, r6
 8006602:	f009 f9f5 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006606:	230a      	movs	r3, #10
 8006608:	9300      	str	r3, [sp, #0]
 800660a:	2232      	movs	r2, #50	; 0x32
 800660c:	23f0      	movs	r3, #240	; 0xf0
 800660e:	4629      	mov	r1, r5
 8006610:	4638      	mov	r0, r7
 8006612:	f7fb ffa1 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006616:	9b03      	ldr	r3, [sp, #12]
 8006618:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800661c:	22a0      	movs	r2, #160	; 0xa0
 800661e:	4611      	mov	r1, r2
 8006620:	4638      	mov	r0, r7
 8006622:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006626:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 800662a:	f00a ff4f 	bl	80114cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800662e:	22a0      	movs	r2, #160	; 0xa0
 8006630:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006634:	4638      	mov	r0, r7
 8006636:	f00a ff54 	bl	80114e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800663a:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 800663e:	2b20      	cmp	r3, #32
 8006640:	d005      	beq.n	800664e <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 8006642:	2320      	movs	r3, #32
 8006644:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006648:	4638      	mov	r0, r7
 800664a:	f00a fe49 	bl	80112e0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800664e:	4638      	mov	r0, r7
 8006650:	2101      	movs	r1, #1
 8006652:	f00a ff51 	bl	80114f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006656:	4639      	mov	r1, r7
 8006658:	4630      	mov	r0, r6
 800665a:	f009 f9c9 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800665e:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 8006660:	2223      	movs	r2, #35	; 0x23
 8006662:	4658      	mov	r0, fp
        color = newColor;
 8006664:	f04f 39ff 	mov.w	r9, #4294967295
 8006668:	2145      	movs	r1, #69	; 0x45
 800666a:	f7fb ff68 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800666e:	4659      	mov	r1, fp
 8006670:	4640      	mov	r0, r8
        color = newColor;
 8006672:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 8006676:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800667a:	f00b f8d3 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800667e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006682:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 8006686:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800668a:	4f24      	ldr	r7, [pc, #144]	; (800671c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 800668c:	970a      	str	r7, [sp, #40]	; 0x28
 800668e:	231f      	movs	r3, #31
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 8006690:	a90a      	add	r1, sp, #40	; 0x28
 8006692:	4658      	mov	r0, fp
 8006694:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006698:	f00b fb5e 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800669c:	4659      	mov	r1, fp
 800669e:	4630      	mov	r0, r6
 80066a0:	f009 f9a6 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80066a4:	220c      	movs	r2, #12
 80066a6:	4650      	mov	r0, sl
 80066a8:	2136      	movs	r1, #54	; 0x36
 80066aa:	f7fb ff48 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 80066ae:	4651      	mov	r1, sl
 80066b0:	4640      	mov	r0, r8
        color = newColor;
 80066b2:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 80066b6:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80066ba:	f00b f8b3 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80066be:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80066c2:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80066c6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80066ca:	2320      	movs	r3, #32
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 80066cc:	a90a      	add	r1, sp, #40	; 0x28
 80066ce:	4650      	mov	r0, sl
 80066d0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80066d4:	970a      	str	r7, [sp, #40]	; 0x28
 80066d6:	f00b fb3f 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80066da:	4651      	mov	r1, sl
 80066dc:	4630      	mov	r0, r6
 80066de:	f009 f987 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 80066e2:	ee19 0a10 	vmov	r0, s18
 80066e6:	224e      	movs	r2, #78	; 0x4e
 80066e8:	4629      	mov	r1, r5
 80066ea:	f7fb ff28 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 80066ee:	4630      	mov	r0, r6
 80066f0:	ee19 1a10 	vmov	r1, s18
 80066f4:	f009 f97c 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80066f8:	4620      	mov	r0, r4
 80066fa:	b00d      	add	sp, #52	; 0x34
 80066fc:	ecbd 8b04 	vpop	{d8-d9}
 8006700:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006704:	0802bc94 	.word	0x0802bc94
 8006708:	0802cb14 	.word	0x0802cb14
 800670c:	0802ccdc 	.word	0x0802ccdc
 8006710:	0802c848 	.word	0x0802c848
 8006714:	0802bc7c 	.word	0x0802bc7c
 8006718:	080063e7 	.word	0x080063e7
 800671c:	0802a1cc 	.word	0x0802a1cc

08006720 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8006720:	4770      	bx	lr

08006722 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006722:	4770      	bx	lr

08006724 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006724:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006726:	68c2      	ldr	r2, [r0, #12]
 8006728:	6844      	ldr	r4, [r0, #4]
 800672a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800672c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800672e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006732:	07d2      	lsls	r2, r2, #31
 8006734:	bf48      	it	mi
 8006736:	5962      	ldrmi	r2, [r4, r5]
 8006738:	689b      	ldr	r3, [r3, #8]
    }
 800673a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800673c:	bf48      	it	mi
 800673e:	58d3      	ldrmi	r3, [r2, r3]
 8006740:	4718      	bx	r3

08006742 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006742:	6843      	ldr	r3, [r0, #4]
 8006744:	b12b      	cbz	r3, 8006752 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006746:	6883      	ldr	r3, [r0, #8]
 8006748:	b92b      	cbnz	r3, 8006756 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800674a:	68c0      	ldr	r0, [r0, #12]
 800674c:	f000 0001 	and.w	r0, r0, #1
 8006750:	4770      	bx	lr
 8006752:	4618      	mov	r0, r3
 8006754:	4770      	bx	lr
 8006756:	2001      	movs	r0, #1
    }
 8006758:	4770      	bx	lr

0800675a <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800675a:	b510      	push	{r4, lr}
 800675c:	2110      	movs	r1, #16
 800675e:	4604      	mov	r4, r0
 8006760:	f021 f93d 	bl	80279de <_ZdlPvj>
 8006764:	4620      	mov	r0, r4
 8006766:	bd10      	pop	{r4, pc}

08006768 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8006768:	b510      	push	{r4, lr}
 800676a:	4b03      	ldr	r3, [pc, #12]	; (8006778 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 800676c:	6003      	str	r3, [r0, #0]
 800676e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006770:	f00c fed4 	bl	801351c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006774:	4620      	mov	r0, r4
 8006776:	bd10      	pop	{r4, pc}
 8006778:	0802bce0 	.word	0x0802bce0

0800677c <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 800677c:	b507      	push	{r0, r1, r2, lr}
 800677e:	4b07      	ldr	r3, [pc, #28]	; (800679c <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8006780:	6003      	str	r3, [r0, #0]
 8006782:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006784:	f00c feca 	bl	801351c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006788:	9801      	ldr	r0, [sp, #4]
 800678a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800678e:	f021 f926 	bl	80279de <_ZdlPvj>
 8006792:	9801      	ldr	r0, [sp, #4]
 8006794:	b003      	add	sp, #12
 8006796:	f85d fb04 	ldr.w	pc, [sp], #4
 800679a:	bf00      	nop
 800679c:	0802bce0 	.word	0x0802bce0

080067a0 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80067a0:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80067a2:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80067a6:	4299      	cmp	r1, r3
{
 80067a8:	4604      	mov	r4, r0
 80067aa:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80067ac:	d103      	bne.n	80067b6 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80067ae:	f00e fbb7 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80067b2:	f7fc ffeb 	bl	800378c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80067b6:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80067ba:	429d      	cmp	r5, r3
 80067bc:	d103      	bne.n	80067c6 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80067be:	f00e fbaf 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 80067c2:	f7fd f803 	bl	80037cc <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80067c6:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80067ca:	42a5      	cmp	r5, r4
 80067cc:	d105      	bne.n	80067da <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80067ce:	f00e fba7 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 80067d2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 80067d6:	f7fd b809 	b.w	80037ec <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 80067da:	bd38      	pop	{r3, r4, r5, pc}

080067dc <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 80067dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80067e0:	ed2d 8b06 	vpush	{d8-d10}
 80067e4:	4604      	mov	r4, r0
 80067e6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 80067e8:	46a3      	mov	fp, r4
 80067ea:	2500      	movs	r5, #0
 80067ec:	f010 f818 	bl	8016820 <_ZN8touchgfx6ScreenC1Ev>
 80067f0:	4b66      	ldr	r3, [pc, #408]	; (800698c <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 80067f2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80067f4:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80067f8:	2226      	movs	r2, #38	; 0x26
 80067fa:	4629      	mov	r1, r5
 80067fc:	4658      	mov	r0, fp
 80067fe:	f022 f8e4 	bl	80289ca <memset>
 8006802:	4658      	mov	r0, fp
 8006804:	f7fb febc 	bl	8002580 <_ZN8touchgfx6WidgetC1Ev>
 8006808:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800680c:	26ff      	movs	r6, #255	; 0xff
 800680e:	4b60      	ldr	r3, [pc, #384]	; (8006990 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 8006810:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006812:	2226      	movs	r2, #38	; 0x26
 8006814:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006818:	4629      	mov	r1, r5
 800681a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800681e:	4650      	mov	r0, sl
 8006820:	66a5      	str	r5, [r4, #104]	; 0x68
 8006822:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006826:	f022 f8d0 	bl	80289ca <memset>
 800682a:	4650      	mov	r0, sl
 800682c:	f7fb fea8 	bl	8002580 <_ZN8touchgfx6WidgetC1Ev>
 8006830:	4b58      	ldr	r3, [pc, #352]	; (8006994 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 8006832:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006834:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006838:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800683c:	a90a      	add	r1, sp, #40	; 0x28
 800683e:	4650      	mov	r0, sl
 8006840:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006844:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006848:	f00b fe61 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 800684c:	4648      	mov	r0, r9
 800684e:	f7fb fea9 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006852:	4b51      	ldr	r3, [pc, #324]	; (8006998 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 8006854:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006858:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 800685c:	4618      	mov	r0, r3
 800685e:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006862:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8006866:	ee08 3a90 	vmov	s17, r3
 800686a:	f7fb fe9b 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 800686e:	4638      	mov	r0, r7
 8006870:	f00a fd16 	bl	80112a0 <_ZN8touchgfx4LineC1Ev>
 8006874:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006878:	4618      	mov	r0, r3
 800687a:	9303      	str	r3, [sp, #12]
 800687c:	f7fa fd20 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006880:	4b46      	ldr	r3, [pc, #280]	; (800699c <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 8006882:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8006886:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 800688a:	3324      	adds	r3, #36	; 0x24
 800688c:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8006890:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8006894:	4640      	mov	r0, r8
 8006896:	f7fb fe85 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 800689a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800689e:	4618      	mov	r0, r3
 80068a0:	ee08 3a10 	vmov	s16, r3
 80068a4:	f7fb fe7e 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 80068a8:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80068ac:	4618      	mov	r0, r3
 80068ae:	ee09 3a10 	vmov	s18, r3
 80068b2:	f00b ff6d 	bl	8012790 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80068b6:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80068ba:	4618      	mov	r0, r3
 80068bc:	ee09 3a90 	vmov	s19, r3
 80068c0:	f00b ff66 	bl	8012790 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80068c4:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80068c8:	4618      	mov	r0, r3
 80068ca:	ee0a 3a10 	vmov	s20, r3
 80068ce:	f00b ff5f 	bl	8012790 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80068d2:	4a33      	ldr	r2, [pc, #204]	; (80069a0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 80068d4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80068d8:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80068dc:	4a31      	ldr	r2, [pc, #196]	; (80069a4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80068de:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80068e2:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80068e6:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80068ea:	f00c fe0d 	bl	8013508 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80068ee:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80068f2:	462a      	mov	r2, r5
 80068f4:	4658      	mov	r0, fp
 80068f6:	9300      	str	r3, [sp, #0]
 80068f8:	4629      	mov	r1, r5
 80068fa:	23f0      	movs	r3, #240	; 0xf0
 80068fc:	f7fb fe2c 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006900:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006902:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006906:	66a3      	str	r3, [r4, #104]	; 0x68
 8006908:	4659      	mov	r1, fp
 800690a:	4630      	mov	r0, r6
 800690c:	f009 f870 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006910:	462a      	mov	r2, r5
 8006912:	4650      	mov	r0, sl
 8006914:	4629      	mov	r1, r5
 8006916:	f7fb fe12 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 800691a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800691c:	4650      	mov	r0, sl
 800691e:	a90a      	add	r1, sp, #40	; 0x28
 8006920:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006924:	f00b fdf3 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006928:	4651      	mov	r1, sl
 800692a:	4630      	mov	r0, r6
 800692c:	f009 f860 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006930:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006934:	2156      	movs	r1, #86	; 0x56
 8006936:	4648      	mov	r0, r9
 8006938:	f7fb fe01 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800693c:	f04f 33ff 	mov.w	r3, #4294967295
 8006940:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006944:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006948:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800694c:	f10d 0b10 	add.w	fp, sp, #16
 8006950:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006954:	4649      	mov	r1, r9
 8006956:	4658      	mov	r0, fp
 8006958:	4798      	blx	r3
 800695a:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800695e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006962:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006966:	4b10      	ldr	r3, [pc, #64]	; (80069a8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 8006968:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 800696a:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 800696e:	b92b      	cbnz	r3, 800697c <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8006970:	4b0e      	ldr	r3, [pc, #56]	; (80069ac <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 8006972:	4a0f      	ldr	r2, [pc, #60]	; (80069b0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8006974:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006976:	480f      	ldr	r0, [pc, #60]	; (80069b4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 8006978:	f021 fe22 	bl	80285c0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800697c:	4b0e      	ldr	r3, [pc, #56]	; (80069b8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800697e:	881b      	ldrh	r3, [r3, #0]
 8006980:	2b18      	cmp	r3, #24
 8006982:	d81d      	bhi.n	80069c0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 8006984:	4b0d      	ldr	r3, [pc, #52]	; (80069bc <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8006986:	4a0a      	ldr	r2, [pc, #40]	; (80069b0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8006988:	2161      	movs	r1, #97	; 0x61
 800698a:	e7f4      	b.n	8006976 <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 800698c:	0802bce0 	.word	0x0802bce0
 8006990:	0802cb14 	.word	0x0802cb14
 8006994:	0802ccdc 	.word	0x0802ccdc
 8006998:	0802a1dc 	.word	0x0802a1dc
 800699c:	0802c848 	.word	0x0802c848
 80069a0:	0802bcc8 	.word	0x0802bcc8
 80069a4:	080067a1 	.word	0x080067a1
 80069a8:	2001382c 	.word	0x2001382c
 80069ac:	0802a01c 	.word	0x0802a01c
 80069b0:	0802a11e 	.word	0x0802a11e
 80069b4:	0802a099 	.word	0x0802a099
 80069b8:	20013830 	.word	0x20013830
 80069bc:	0802a0e0 	.word	0x0802a0e0
        return texts->getText(typedTextId);
 80069c0:	4b96      	ldr	r3, [pc, #600]	; (8006c1c <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 80069c2:	2118      	movs	r1, #24
 80069c4:	6818      	ldr	r0, [r3, #0]
 80069c6:	f001 fab5 	bl	8007f34 <_ZNK8touchgfx5Texts7getTextEt>
 80069ca:	4a95      	ldr	r2, [pc, #596]	; (8006c20 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>)
 80069cc:	4603      	mov	r3, r0
 80069ce:	2104      	movs	r1, #4
 80069d0:	4650      	mov	r0, sl
 80069d2:	f011 fc09 	bl	80181e8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80069d6:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 80069da:	4648      	mov	r0, r9
 80069dc:	f00b f99c 	bl	8011d18 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80069e0:	f8df a240 	ldr.w	sl, [pc, #576]	; 8006c24 <_ZN26Measurement_SingleViewBaseC1Ev+0x448>
 80069e4:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80069e8:	2319      	movs	r3, #25
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 80069ea:	a90a      	add	r1, sp, #40	; 0x28
 80069ec:	4648      	mov	r0, r9
 80069ee:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80069f2:	f00b f9b1 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80069f6:	4649      	mov	r1, r9
 80069f8:	4630      	mov	r0, r6
 80069fa:	f008 fff9 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 80069fe:	223c      	movs	r2, #60	; 0x3c
 8006a00:	ee18 0a90 	vmov	r0, s17
 8006a04:	2129      	movs	r1, #41	; 0x29
 8006a06:	f7fb fd9a 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006a0a:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006a0e:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8006a12:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006a16:	4658      	mov	r0, fp
        linespace = space;
 8006a18:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8006a1c:	f00a ff02 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a20:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006a24:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8006a28:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006a2c:	2328      	movs	r3, #40	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8006a2e:	eb0d 0103 	add.w	r1, sp, r3
 8006a32:	ee18 0a90 	vmov	r0, s17
 8006a36:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a3a:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006a3e:	f00b f98b 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a42:	ee18 1a90 	vmov	r1, s17
 8006a46:	4630      	mov	r0, r6
 8006a48:	f008 ffd2 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006a4c:	230a      	movs	r3, #10
 8006a4e:	9300      	str	r3, [sp, #0]
 8006a50:	2232      	movs	r2, #50	; 0x32
 8006a52:	23f0      	movs	r3, #240	; 0xf0
 8006a54:	4629      	mov	r1, r5
 8006a56:	4638      	mov	r0, r7
 8006a58:	f7fb fd7e 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006a5c:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006a60:	22a0      	movs	r2, #160	; 0xa0
 8006a62:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006a66:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006a6a:	9b03      	ldr	r3, [sp, #12]
 8006a6c:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006a70:	4611      	mov	r1, r2
 8006a72:	4638      	mov	r0, r7
 8006a74:	f00a fd2a 	bl	80114cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006a78:	22a0      	movs	r2, #160	; 0xa0
 8006a7a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006a7e:	4638      	mov	r0, r7
 8006a80:	f00a fd2f 	bl	80114e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006a84:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8006a88:	2b20      	cmp	r3, #32
 8006a8a:	d005      	beq.n	8006a98 <_ZN26Measurement_SingleViewBaseC1Ev+0x2bc>
        lineWidthQ5 = widthQ5;
 8006a8c:	2320      	movs	r3, #32
 8006a8e:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8006a92:	4638      	mov	r0, r7
 8006a94:	f00a fc24 	bl	80112e0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006a98:	4638      	mov	r0, r7
 8006a9a:	2101      	movs	r1, #1
 8006a9c:	f00a fd2c 	bl	80114f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006aa0:	4639      	mov	r1, r7
 8006aa2:	4630      	mov	r0, r6
 8006aa4:	f008 ffa4 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006aa8:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8006aac:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8006aae:	2223      	movs	r2, #35	; 0x23
 8006ab0:	4640      	mov	r0, r8
        linespace = space;
 8006ab2:	f04f 0a00 	mov.w	sl, #0
 8006ab6:	2145      	movs	r1, #69	; 0x45
 8006ab8:	f7fb fd41 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006abc:	4641      	mov	r1, r8
 8006abe:	4638      	mov	r0, r7
        color = newColor;
 8006ac0:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8006ac4:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006ac8:	f00a feac 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006acc:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006ad0:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006ad4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006ad8:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006c24 <_ZN26Measurement_SingleViewBaseC1Ev+0x448>
 8006adc:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006ae0:	2341      	movs	r3, #65	; 0x41
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8006ae2:	a90a      	add	r1, sp, #40	; 0x28
 8006ae4:	4640      	mov	r0, r8
 8006ae6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006aea:	f00b f935 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006aee:	4641      	mov	r1, r8
 8006af0:	4630      	mov	r0, r6
 8006af2:	f008 ff7d 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006af6:	ee18 0a10 	vmov	r0, s16
 8006afa:	220c      	movs	r2, #12
 8006afc:	2136      	movs	r1, #54	; 0x36
 8006afe:	f7fb fd1e 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8006b02:	ee18 1a10 	vmov	r1, s16
 8006b06:	4638      	mov	r0, r7
        color = newColor;
 8006b08:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8006b0c:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006b10:	f00a fe88 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006b14:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006b18:	ee18 3a10 	vmov	r3, s16
 8006b1c:	333c      	adds	r3, #60	; 0x3c
 8006b1e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006b22:	2340      	movs	r3, #64	; 0x40
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8006b24:	ee18 0a10 	vmov	r0, s16
 8006b28:	a90a      	add	r1, sp, #40	; 0x28
 8006b2a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006b2e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006b32:	f00b f911 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006b36:	ee18 1a10 	vmov	r1, s16
 8006b3a:	4630      	mov	r0, r6
 8006b3c:	f008 ff58 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006b40:	ee19 0a10 	vmov	r0, s18
 8006b44:	22f0      	movs	r2, #240	; 0xf0
 8006b46:	2121      	movs	r1, #33	; 0x21
 8006b48:	f7fb fcf9 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8006b4c:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b50:	aa0a      	add	r2, sp, #40	; 0x28
 8006b52:	f04f 0802 	mov.w	r8, #2
 8006b56:	a909      	add	r1, sp, #36	; 0x24
 8006b58:	ee19 0a10 	vmov	r0, s18
 8006b5c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006b60:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006b64:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b68:	f00b fadb 	bl	8012122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006b6c:	233f      	movs	r3, #63	; 0x3f
 8006b6e:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006b72:	3710      	adds	r7, #16
        updateTextPosition();
 8006b74:	ee19 0a10 	vmov	r0, s18
 8006b78:	f7fb fd36 	bl	80025e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b7c:	ee19 1a10 	vmov	r1, s18
 8006b80:	4630      	mov	r0, r6
        colorPressed = col;
 8006b82:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006b86:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006b8a:	f008 ff31 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006b8e:	ee19 0a90 	vmov	r0, s19
 8006b92:	22aa      	movs	r2, #170	; 0xaa
 8006b94:	2121      	movs	r1, #33	; 0x21
 8006b96:	f7fb fcd2 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b9a:	aa0a      	add	r2, sp, #40	; 0x28
 8006b9c:	a909      	add	r1, sp, #36	; 0x24
 8006b9e:	ee19 0a90 	vmov	r0, s19
 8006ba2:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006ba6:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006baa:	f00b faba 	bl	8012122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006bae:	233e      	movs	r3, #62	; 0x3e
 8006bb0:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006bb4:	ee19 0a90 	vmov	r0, s19
 8006bb8:	f7fb fd16 	bl	80025e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006bbc:	ee19 1a90 	vmov	r1, s19
 8006bc0:	4630      	mov	r0, r6
        colorPressed = col;
 8006bc2:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8006bc6:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8006bca:	f008 ff11 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006bce:	ee1a 0a10 	vmov	r0, s20
 8006bd2:	2264      	movs	r2, #100	; 0x64
 8006bd4:	2121      	movs	r1, #33	; 0x21
 8006bd6:	f7fb fcb2 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006bda:	aa0a      	add	r2, sp, #40	; 0x28
 8006bdc:	a909      	add	r1, sp, #36	; 0x24
 8006bde:	ee1a 0a10 	vmov	r0, s20
 8006be2:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006be6:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006bea:	f00b fa9a 	bl	8012122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006bee:	233d      	movs	r3, #61	; 0x3d
        updateTextPosition();
 8006bf0:	ee1a 0a10 	vmov	r0, s20
 8006bf4:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006bf8:	f7fb fcf6 	bl	80025e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006bfc:	4630      	mov	r0, r6
        colorPressed = col;
 8006bfe:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006c02:	ee1a 1a10 	vmov	r1, s20
 8006c06:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006c0a:	f008 fef1 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006c0e:	4620      	mov	r0, r4
 8006c10:	b00d      	add	sp, #52	; 0x34
 8006c12:	ecbd 8b06 	vpop	{d8-d10}
 8006c16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006c1a:	bf00      	nop
 8006c1c:	20013838 	.word	0x20013838
 8006c20:	0802a156 	.word	0x0802a156
 8006c24:	0802a1cc 	.word	0x0802a1cc

08006c28 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8006c28:	4770      	bx	lr

08006c2a <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8006c2a:	4770      	bx	lr

08006c2c <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
    //Interaction2
    //When every N tick call virtual function
    //Call testGui
    testGui();
 8006c2c:	6803      	ldr	r3, [r0, #0]
 8006c2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006c30:	4718      	bx	r3

08006c32 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006c32:	4770      	bx	lr

08006c34 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006c34:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006c36:	68c2      	ldr	r2, [r0, #12]
 8006c38:	6844      	ldr	r4, [r0, #4]
 8006c3a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006c3c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006c3e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006c42:	07d2      	lsls	r2, r2, #31
 8006c44:	bf48      	it	mi
 8006c46:	5962      	ldrmi	r2, [r4, r5]
 8006c48:	689b      	ldr	r3, [r3, #8]
    }
 8006c4a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006c4c:	bf48      	it	mi
 8006c4e:	58d3      	ldrmi	r3, [r2, r3]
 8006c50:	4718      	bx	r3

08006c52 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006c52:	6843      	ldr	r3, [r0, #4]
 8006c54:	b12b      	cbz	r3, 8006c62 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006c56:	6883      	ldr	r3, [r0, #8]
 8006c58:	b92b      	cbnz	r3, 8006c66 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006c5a:	68c0      	ldr	r0, [r0, #12]
 8006c5c:	f000 0001 	and.w	r0, r0, #1
 8006c60:	4770      	bx	lr
 8006c62:	4618      	mov	r0, r3
 8006c64:	4770      	bx	lr
 8006c66:	2001      	movs	r0, #1
    }
 8006c68:	4770      	bx	lr

08006c6a <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006c6a:	b510      	push	{r4, lr}
 8006c6c:	2110      	movs	r1, #16
 8006c6e:	4604      	mov	r4, r0
 8006c70:	f020 feb5 	bl	80279de <_ZdlPvj>
 8006c74:	4620      	mov	r0, r4
 8006c76:	bd10      	pop	{r4, pc}

08006c78 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006c78:	b510      	push	{r4, lr}
 8006c7a:	4b03      	ldr	r3, [pc, #12]	; (8006c88 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8006c7c:	6003      	str	r3, [r0, #0]
 8006c7e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006c80:	f00c fc4c 	bl	801351c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006c84:	4620      	mov	r0, r4
 8006c86:	bd10      	pop	{r4, pc}
 8006c88:	0802bd2c 	.word	0x0802bd2c

08006c8c <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006c8c:	b507      	push	{r0, r1, r2, lr}
 8006c8e:	4b07      	ldr	r3, [pc, #28]	; (8006cac <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8006c90:	6003      	str	r3, [r0, #0]
 8006c92:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006c94:	f00c fc42 	bl	801351c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006c98:	9801      	ldr	r0, [sp, #4]
 8006c9a:	f241 31f4 	movw	r1, #5108	; 0x13f4
 8006c9e:	f020 fe9e 	bl	80279de <_ZdlPvj>
 8006ca2:	9801      	ldr	r0, [sp, #4]
 8006ca4:	b003      	add	sp, #12
 8006ca6:	f85d fb04 	ldr.w	pc, [sp], #4
 8006caa:	bf00      	nop
 8006cac:	0802bd2c 	.word	0x0802bd2c

08006cb0 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8006cb0:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 8006cb4:	4288      	cmp	r0, r1
{
 8006cb6:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006cb8:	d105      	bne.n	8006cc6 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006cba:	f00e f931 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
}
 8006cbe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006cc2:	f7fc bd73 	b.w	80037ac <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8006cc6:	bd08      	pop	{r3, pc}

08006cc8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8006cc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006ccc:	ed2d 8b0a 	vpush	{d8-d12}
 8006cd0:	4604      	mov	r4, r0
 8006cd2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_1PViewBase::buttonCallbackHandler)
 8006cd4:	46a2      	mov	sl, r4
 8006cd6:	2500      	movs	r5, #0
 8006cd8:	f00f fda2 	bl	8016820 <_ZN8touchgfx6ScreenC1Ev>
 8006cdc:	4ba5      	ldr	r3, [pc, #660]	; (8006f74 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ac>)
 8006cde:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006ce0:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8006ce4:	2226      	movs	r2, #38	; 0x26
 8006ce6:	4629      	mov	r1, r5
 8006ce8:	4650      	mov	r0, sl
 8006cea:	f021 fe6e 	bl	80289ca <memset>
 8006cee:	4650      	mov	r0, sl
 8006cf0:	f7fb fc46 	bl	8002580 <_ZN8touchgfx6WidgetC1Ev>
 8006cf4:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8006cf8:	26ff      	movs	r6, #255	; 0xff
 8006cfa:	4b9f      	ldr	r3, [pc, #636]	; (8006f78 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b0>)
 8006cfc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006cfe:	2226      	movs	r2, #38	; 0x26
 8006d00:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006d04:	4629      	mov	r1, r5
 8006d06:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006d0a:	4648      	mov	r0, r9
 8006d0c:	66a5      	str	r5, [r4, #104]	; 0x68
 8006d0e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006d12:	f021 fe5a 	bl	80289ca <memset>
 8006d16:	4648      	mov	r0, r9
 8006d18:	f7fb fc32 	bl	8002580 <_ZN8touchgfx6WidgetC1Ev>
 8006d1c:	4b97      	ldr	r3, [pc, #604]	; (8006f7c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b4>)
 8006d1e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006d20:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006d24:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006d28:	a90a      	add	r1, sp, #40	; 0x28
 8006d2a:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006d2e:	4648      	mov	r0, r9
        : Widget(), bitmap(bmp), alpha(255)
 8006d30:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006d34:	f00b fbeb 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006d38:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8006d3c:	4658      	mov	r0, fp
 8006d3e:	f7fb fc31 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8006d42:	f504 7820 	add.w	r8, r4, #640	; 0x280
 8006d46:	4638      	mov	r0, r7
 8006d48:	f00b f8a4 	bl	8011e94 <_ZN8touchgfx5GaugeC1Ev>
        : TextArea()
 8006d4c:	4640      	mov	r0, r8
 8006d4e:	f7fb fc29 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006d52:	4e8b      	ldr	r6, [pc, #556]	; (8006f80 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b8>)
 8006d54:	f8c4 6280 	str.w	r6, [r4, #640]	; 0x280
 8006d58:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextArea()
 8006d5c:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8006d5e:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 8006d62:	ee08 3a90 	vmov	s17, r3
        : TextArea()
 8006d66:	f7fb fc1d 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8006d6a:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 8006d6e:	f8c4 62cc 	str.w	r6, [r4, #716]	; 0x2cc
        : TextArea()
 8006d72:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8006d74:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 8006d78:	ee09 3a10 	vmov	s18, r3
        : TextArea()
 8006d7c:	f7fb fc12 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8006d80:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 8006d84:	f8c4 6318 	str.w	r6, [r4, #792]	; 0x318
 8006d88:	4618      	mov	r0, r3
 8006d8a:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 8006d8e:	ee0a 3a90 	vmov	s21, r3
 8006d92:	f7fb fc07 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8006d96:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 8006d9a:	4618      	mov	r0, r3
 8006d9c:	ee0b 3a10 	vmov	s22, r3
 8006da0:	f7fb fc00 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8006da4:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 8006da8:	4618      	mov	r0, r3
 8006daa:	ee0b 3a90 	vmov	s23, r3
 8006dae:	f7fb fbf9 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8006db2:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 8006db6:	4618      	mov	r0, r3
 8006db8:	ee08 3a10 	vmov	s16, r3
 8006dbc:	f00a fa70 	bl	80112a0 <_ZN8touchgfx4LineC1Ev>
 8006dc0:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006dc4:	4618      	mov	r0, r3
 8006dc6:	9302      	str	r3, [sp, #8]
 8006dc8:	f7fa fa7a 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006dcc:	4b6d      	ldr	r3, [pc, #436]	; (8006f84 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2bc>)
 8006dce:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 8006dd2:	3324      	adds	r3, #36	; 0x24
 8006dd4:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8006dd8:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8006ddc:	4618      	mov	r0, r3
 8006dde:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8006de2:	ee09 3a90 	vmov	s19, r3
 8006de6:	f7fb fbdd 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8006dea:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8006dee:	4618      	mov	r0, r3
 8006df0:	ee0a 3a10 	vmov	s20, r3
 8006df4:	f7fb fbd6 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8006df8:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 8006dfc:	4618      	mov	r0, r3
 8006dfe:	ee0c 3a10 	vmov	s24, r3
 8006e02:	f00b fcc5 	bl	8012790 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006e06:	4a60      	ldr	r2, [pc, #384]	; (8006f88 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 8006e08:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006e0c:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 8006e10:	4a5e      	ldr	r2, [pc, #376]	; (8006f8c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006e12:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006e16:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
 8006e1a:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 8006e1e:	f00c fb73 	bl	8013508 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006e22:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006e26:	462a      	mov	r2, r5
 8006e28:	4650      	mov	r0, sl
 8006e2a:	9300      	str	r3, [sp, #0]
 8006e2c:	4629      	mov	r1, r5
 8006e2e:	23f0      	movs	r3, #240	; 0xf0
 8006e30:	f7fb fb92 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006e34:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006e36:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006e3a:	66a3      	str	r3, [r4, #104]	; 0x68
 8006e3c:	4651      	mov	r1, sl
 8006e3e:	4630      	mov	r0, r6
 8006e40:	f008 fdd6 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006e44:	462a      	mov	r2, r5
 8006e46:	4648      	mov	r0, r9
 8006e48:	4629      	mov	r1, r5
 8006e4a:	f7fb fb78 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8006e4e:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006e50:	4648      	mov	r0, r9
 8006e52:	a90a      	add	r1, sp, #40	; 0x28
 8006e54:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006e58:	f00b fb59 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006e5c:	4649      	mov	r1, r9
 8006e5e:	4630      	mov	r0, r6
 8006e60:	f008 fdc6 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006e64:	f10d 0910 	add.w	r9, sp, #16
    textArea3.setXY(31, 60);
 8006e68:	223c      	movs	r2, #60	; 0x3c
 8006e6a:	211f      	movs	r1, #31
 8006e6c:	4658      	mov	r0, fp
        color = newColor;
 8006e6e:	f04f 3aff 	mov.w	sl, #4294967295
 8006e72:	f7fb fb64 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006e76:	4659      	mov	r1, fp
 8006e78:	4648      	mov	r0, r9
        color = newColor;
 8006e7a:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        linespace = space;
 8006e7e:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006e82:	f00a fccf 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e86:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8006e8a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006e8e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006e92:	4b3f      	ldr	r3, [pc, #252]	; (8006f90 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
 8006e94:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8006e96:	a90a      	add	r1, sp, #40	; 0x28
 8006e98:	2327      	movs	r3, #39	; 0x27
 8006e9a:	4658      	mov	r0, fp
 8006e9c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006ea0:	f00a ff5a 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006ea4:	4659      	mov	r1, fp
 8006ea6:	4630      	mov	r0, r6
 8006ea8:	f008 fda2 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006eac:	f04f 0304 	mov.w	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8006eb0:	4638      	mov	r0, r7
 8006eb2:	a90a      	add	r1, sp, #40	; 0x28
 8006eb4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006eb8:	f008 fd2c 	bl	800f914 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 8006ebc:	236a      	movs	r3, #106	; 0x6a
 8006ebe:	4638      	mov	r0, r7
 8006ec0:	9300      	str	r3, [sp, #0]
 8006ec2:	225e      	movs	r2, #94	; 0x5e
 8006ec4:	23b8      	movs	r3, #184	; 0xb8
 8006ec6:	211c      	movs	r1, #28
 8006ec8:	f7fb fb46 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 8006ecc:	225c      	movs	r2, #92	; 0x5c
 8006ece:	4611      	mov	r1, r2
 8006ed0:	4638      	mov	r0, r7
 8006ed2:	f00b f88a 	bl	8011fea <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 8006ed6:	4638      	mov	r0, r7
 8006ed8:	225a      	movs	r2, #90	; 0x5a
 8006eda:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8006ede:	f00b f909 	bl	80120f4 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 8006ee2:	462b      	mov	r3, r5
 8006ee4:	225a      	movs	r2, #90	; 0x5a
 8006ee6:	4638      	mov	r0, r7
 8006ee8:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8006eec:	9500      	str	r5, [sp, #0]
 8006eee:	f008 fbbe 	bl	800f66e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 8006ef2:	4638      	mov	r0, r7
 8006ef4:	4629      	mov	r1, r5
 8006ef6:	f00b f8a7 	bl	8012048 <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8006efa:	2335      	movs	r3, #53	; 0x35
 8006efc:	2208      	movs	r2, #8
 8006efe:	4638      	mov	r0, r7
 8006f00:	2105      	movs	r1, #5
 8006f02:	f00b f85d 	bl	8011fc0 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8006f06:	4638      	mov	r0, r7
 8006f08:	2101      	movs	r1, #1
 8006f0a:	f00a fffb 	bl	8011f04 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8006f0e:	4638      	mov	r0, r7
 8006f10:	2101      	movs	r1, #1
 8006f12:	f00a fffa 	bl	8011f0a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8006f16:	4639      	mov	r1, r7
 8006f18:	4630      	mov	r0, r6
 8006f1a:	f008 fd69 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setXY(75, 230);
 8006f1e:	22e6      	movs	r2, #230	; 0xe6
 8006f20:	214b      	movs	r1, #75	; 0x4b
 8006f22:	4640      	mov	r0, r8
 8006f24:	f7fb fb0b 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8006f28:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        color = newColor;
 8006f2c:	f8c4 a2b0 	str.w	sl, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 8006f30:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8006f34:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 8006f38:	4641      	mov	r1, r8
 8006f3a:	4648      	mov	r0, r9
 8006f3c:	4798      	blx	r3
 8006f3e:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8006f42:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006f46:	4f13      	ldr	r7, [pc, #76]	; (8006f94 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 8006f48:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 8006f4c:	f504 63b3 	add.w	r3, r4, #1432	; 0x598
 8006f50:	9303      	str	r3, [sp, #12]
 8006f52:	683b      	ldr	r3, [r7, #0]
 8006f54:	b92b      	cbnz	r3, 8006f62 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29a>
 8006f56:	4b10      	ldr	r3, [pc, #64]	; (8006f98 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 8006f58:	4a10      	ldr	r2, [pc, #64]	; (8006f9c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 8006f5a:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006f5c:	4810      	ldr	r0, [pc, #64]	; (8006fa0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8006f5e:	f021 fb2f 	bl	80285c0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006f62:	f8df b044 	ldr.w	fp, [pc, #68]	; 8006fa8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006f66:	f8bb 3000 	ldrh.w	r3, [fp]
 8006f6a:	b9fb      	cbnz	r3, 8006fac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>
 8006f6c:	4b0d      	ldr	r3, [pc, #52]	; (8006fa4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 8006f6e:	4a0b      	ldr	r2, [pc, #44]	; (8006f9c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 8006f70:	2161      	movs	r1, #97	; 0x61
 8006f72:	e7f3      	b.n	8006f5c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x294>
 8006f74:	0802bd2c 	.word	0x0802bd2c
 8006f78:	0802cb14 	.word	0x0802cb14
 8006f7c:	0802ccdc 	.word	0x0802ccdc
 8006f80:	0802a1dc 	.word	0x0802a1dc
 8006f84:	0802c848 	.word	0x0802c848
 8006f88:	0802bd14 	.word	0x0802bd14
 8006f8c:	08006cb1 	.word	0x08006cb1
 8006f90:	0802a1cc 	.word	0x0802a1cc
 8006f94:	2001382c 	.word	0x2001382c
 8006f98:	0802a01c 	.word	0x0802a01c
 8006f9c:	0802a11e 	.word	0x0802a11e
 8006fa0:	0802a099 	.word	0x0802a099
 8006fa4:	0802a0e0 	.word	0x0802a0e0
 8006fa8:	20013830 	.word	0x20013830
        return texts->getText(typedTextId);
 8006fac:	4bde      	ldr	r3, [pc, #888]	; (8007328 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x660>)
 8006fae:	4629      	mov	r1, r5
 8006fb0:	6818      	ldr	r0, [r3, #0]
 8006fb2:	f000 ffbf 	bl	8007f34 <_ZNK8touchgfx5Texts7getTextEt>
 8006fb6:	4add      	ldr	r2, [pc, #884]	; (800732c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x664>)
 8006fb8:	4603      	mov	r3, r0
 8006fba:	210a      	movs	r1, #10
 8006fbc:	9803      	ldr	r0, [sp, #12]
 8006fbe:	f011 f913 	bl	80181e8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006fc2:	9903      	ldr	r1, [sp, #12]
 8006fc4:	f8c4 12c8 	str.w	r1, [r4, #712]	; 0x2c8
    SMD1_Current.resizeToCurrentText();
 8006fc8:	4640      	mov	r0, r8
 8006fca:	f00a fea5 	bl	8011d18 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006fce:	4bd8      	ldr	r3, [pc, #864]	; (8007330 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 8006fd0:	930a      	str	r3, [sp, #40]	; 0x28
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 8006fd2:	4640      	mov	r0, r8
 8006fd4:	2303      	movs	r3, #3
 8006fd6:	a90a      	add	r1, sp, #40	; 0x28
 8006fd8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006fdc:	f00a febc 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006fe0:	4641      	mov	r1, r8
 8006fe2:	4630      	mov	r0, r6
 8006fe4:	f008 fd04 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setXY(63, 215);
 8006fe8:	22d7      	movs	r2, #215	; 0xd7
 8006fea:	ee18 0a90 	vmov	r0, s17
 8006fee:	213f      	movs	r1, #63	; 0x3f
 8006ff0:	f7fb faa5 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8006ff4:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        color = newColor;
 8006ff8:	f8c4 a2fc 	str.w	sl, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 8006ffc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007000:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        boundingArea = calculateBoundingArea();
 8007004:	ee18 1a90 	vmov	r1, s17
 8007008:	4648      	mov	r0, r9
 800700a:	4798      	blx	r3
 800700c:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8007010:	f504 7342 	add.w	r3, r4, #776	; 0x308
 8007014:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007018:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 800701a:	f204 58ac 	addw	r8, r4, #1452	; 0x5ac
 800701e:	2b00      	cmp	r3, #0
 8007020:	d099      	beq.n	8006f56 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x28e>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007022:	f8bb 3000 	ldrh.w	r3, [fp]
 8007026:	2b01      	cmp	r3, #1
 8007028:	d9a0      	bls.n	8006f6c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a4>
        return texts->getText(typedTextId);
 800702a:	4abf      	ldr	r2, [pc, #764]	; (8007328 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x660>)
 800702c:	2101      	movs	r1, #1
 800702e:	6810      	ldr	r0, [r2, #0]
 8007030:	f000 ff80 	bl	8007f34 <_ZNK8touchgfx5Texts7getTextEt>
 8007034:	4abd      	ldr	r2, [pc, #756]	; (800732c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x664>)
 8007036:	4603      	mov	r3, r0
 8007038:	210a      	movs	r1, #10
 800703a:	4640      	mov	r0, r8
 800703c:	f011 f8d4 	bl	80181e8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    SMD1_Frequency.resizeToCurrentText();
 8007040:	ee18 0a90 	vmov	r0, s17
 8007044:	f8c4 8314 	str.w	r8, [r4, #788]	; 0x314
 8007048:	f00a fe66 	bl	8011d18 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800704c:	f04f 0104 	mov.w	r1, #4
 8007050:	4bb7      	ldr	r3, [pc, #732]	; (8007330 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 8007052:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 8007056:	ee18 0a90 	vmov	r0, s17
 800705a:	a90a      	add	r1, sp, #40	; 0x28
 800705c:	930a      	str	r3, [sp, #40]	; 0x28
 800705e:	f00a fe7b 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007062:	ee18 1a90 	vmov	r1, s17
 8007066:	4630      	mov	r0, r6
 8007068:	f008 fcc2 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setXY(64, 200);
 800706c:	22c8      	movs	r2, #200	; 0xc8
 800706e:	ee19 0a10 	vmov	r0, s18
 8007072:	2140      	movs	r1, #64	; 0x40
 8007074:	f7fb fa63 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8007078:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        color = newColor;
 800707c:	f8c4 a348 	str.w	sl, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 8007080:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007084:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        boundingArea = calculateBoundingArea();
 8007088:	ee19 1a10 	vmov	r1, s18
 800708c:	4648      	mov	r0, r9
 800708e:	4798      	blx	r3
 8007090:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8007094:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8007098:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800709c:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 800709e:	f504 68b8 	add.w	r8, r4, #1472	; 0x5c0
 80070a2:	2b00      	cmp	r3, #0
 80070a4:	f43f af57 	beq.w	8006f56 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x28e>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80070a8:	f8bb 3000 	ldrh.w	r3, [fp]
 80070ac:	2b02      	cmp	r3, #2
 80070ae:	f67f af5d 	bls.w	8006f6c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a4>
        return texts->getText(typedTextId);
 80070b2:	4a9d      	ldr	r2, [pc, #628]	; (8007328 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x660>)
        : typedTextId(id)
 80070b4:	4f9e      	ldr	r7, [pc, #632]	; (8007330 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
        return texts->getText(typedTextId);
 80070b6:	6810      	ldr	r0, [r2, #0]
 80070b8:	2102      	movs	r1, #2
 80070ba:	f000 ff3b 	bl	8007f34 <_ZNK8touchgfx5Texts7getTextEt>
 80070be:	4a9b      	ldr	r2, [pc, #620]	; (800732c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x664>)
 80070c0:	4603      	mov	r3, r0
 80070c2:	210a      	movs	r1, #10
 80070c4:	4640      	mov	r0, r8
 80070c6:	f011 f88f 	bl	80181e8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    SMD1_Distance.resizeToCurrentText();
 80070ca:	ee19 0a10 	vmov	r0, s18
 80070ce:	f8c4 8360 	str.w	r8, [r4, #864]	; 0x360
 80070d2:	f00a fe21 	bl	8011d18 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80070d6:	2305      	movs	r3, #5
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 80070d8:	ee19 0a10 	vmov	r0, s18
 80070dc:	a90a      	add	r1, sp, #40	; 0x28
 80070de:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80070e2:	970a      	str	r7, [sp, #40]	; 0x28
 80070e4:	f00a fe38 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80070e8:	ee19 1a10 	vmov	r1, s18
 80070ec:	4630      	mov	r0, r6
 80070ee:	f008 fc7f 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 80070f2:	224c      	movs	r2, #76	; 0x4c
 80070f4:	ee1a 0a90 	vmov	r0, s21
 80070f8:	2171      	movs	r1, #113	; 0x71
 80070fa:	f7fb fa20 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 80070fe:	ee1a 1a90 	vmov	r1, s21
 8007102:	4648      	mov	r0, r9
        color = newColor;
 8007104:	f8c4 a394 	str.w	sl, [r4, #916]	; 0x394
        linespace = space;
 8007108:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 800710c:	f00a fb8a 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007110:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8007114:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8007118:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800711c:	2306      	movs	r3, #6
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 800711e:	ee1a 0a90 	vmov	r0, s21
 8007122:	a90a      	add	r1, sp, #40	; 0x28
 8007124:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007128:	970a      	str	r7, [sp, #40]	; 0x28
 800712a:	f00a fe15 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800712e:	ee1a 1a90 	vmov	r1, s21
 8007132:	4630      	mov	r0, r6
 8007134:	f008 fc5c 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 8007138:	22b9      	movs	r2, #185	; 0xb9
 800713a:	ee1b 0a10 	vmov	r0, s22
 800713e:	4629      	mov	r1, r5
 8007140:	f7fb f9fd 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8007144:	ee1b 1a10 	vmov	r1, s22
 8007148:	4648      	mov	r0, r9
        color = newColor;
 800714a:	f8c4 a3dc 	str.w	sl, [r4, #988]	; 0x3dc
        linespace = space;
 800714e:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 8007152:	f00a fb67 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007156:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 800715a:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 800715e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007162:	2307      	movs	r3, #7
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 8007164:	ee1b 0a10 	vmov	r0, s22
 8007168:	a90a      	add	r1, sp, #40	; 0x28
 800716a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800716e:	970a      	str	r7, [sp, #40]	; 0x28
 8007170:	f00a fdf2 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007174:	ee1b 1a10 	vmov	r1, s22
 8007178:	4630      	mov	r0, r6
 800717a:	f008 fc39 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 800717e:	22b9      	movs	r2, #185	; 0xb9
 8007180:	ee1b 0a90 	vmov	r0, s23
 8007184:	21d9      	movs	r1, #217	; 0xd9
 8007186:	f7fb f9da 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 800718a:	ee1b 1a90 	vmov	r1, s23
 800718e:	4648      	mov	r0, r9
        color = newColor;
 8007190:	f8c4 a424 	str.w	sl, [r4, #1060]	; 0x424
        linespace = space;
 8007194:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 8007198:	f00a fb44 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800719c:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80071a0:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 80071a4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80071a8:	2308      	movs	r3, #8
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 80071aa:	ee1b 0a90 	vmov	r0, s23
 80071ae:	a90a      	add	r1, sp, #40	; 0x28
 80071b0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80071b4:	970a      	str	r7, [sp, #40]	; 0x28
 80071b6:	f00a fdcf 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80071ba:	ee1b 1a90 	vmov	r1, s23
 80071be:	4630      	mov	r0, r6
 80071c0:	f008 fc16 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80071c4:	230a      	movs	r3, #10
 80071c6:	ee18 0a10 	vmov	r0, s16
 80071ca:	9300      	str	r3, [sp, #0]
 80071cc:	2232      	movs	r2, #50	; 0x32
 80071ce:	23f0      	movs	r3, #240	; 0xf0
 80071d0:	4629      	mov	r1, r5
 80071d2:	f7fb f9c1 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
 80071d6:	9b02      	ldr	r3, [sp, #8]
 80071d8:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80071dc:	22a0      	movs	r2, #160	; 0xa0
 80071de:	4611      	mov	r1, r2
 80071e0:	ee18 0a10 	vmov	r0, s16
 80071e4:	f8c4 a4b8 	str.w	sl, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80071e8:	f8a4 a4bc 	strh.w	sl, [r4, #1212]	; 0x4bc
 80071ec:	f00a f96e 	bl	80114cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80071f0:	ee18 0a10 	vmov	r0, s16
 80071f4:	22a0      	movs	r2, #160	; 0xa0
 80071f6:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80071fa:	f00a f972 	bl	80114e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80071fe:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8007202:	2b20      	cmp	r3, #32
 8007204:	d006      	beq.n	8007214 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x54c>
        lineWidthQ5 = widthQ5;
 8007206:	2320      	movs	r3, #32
        updateCachedShape();
 8007208:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 800720c:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8007210:	f00a f866 	bl	80112e0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007214:	ee18 0a10 	vmov	r0, s16
 8007218:	2101      	movs	r1, #1
 800721a:	f00a f96d 	bl	80114f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800721e:	ee18 1a10 	vmov	r1, s16
 8007222:	4630      	mov	r0, r6
 8007224:	f008 fbe4 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007228:	f04f 37ff 	mov.w	r7, #4294967295
        boundingArea = calculateBoundingArea();
 800722c:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 800722e:	ee19 0a90 	vmov	r0, s19
 8007232:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007234:	f04f 0900 	mov.w	r9, #0
 8007238:	2145      	movs	r1, #69	; 0x45
 800723a:	f7fb f980 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800723e:	ee19 1a90 	vmov	r1, s19
 8007242:	4628      	mov	r0, r5
        color = newColor;
 8007244:	f8c4 74f0 	str.w	r7, [r4, #1264]	; 0x4f0
        linespace = space;
 8007248:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 800724c:	f00a faea 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007250:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007254:	ee19 3a90 	vmov	r3, s19
 8007258:	333c      	adds	r3, #60	; 0x3c
 800725a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800725e:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8007330 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>
 8007262:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8007266:	2334      	movs	r3, #52	; 0x34
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 8007268:	ee19 0a90 	vmov	r0, s19
 800726c:	a90a      	add	r1, sp, #40	; 0x28
 800726e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007272:	f00a fd71 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007276:	ee19 1a90 	vmov	r1, s19
 800727a:	4630      	mov	r0, r6
 800727c:	f008 fbb8 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007280:	ee1a 0a10 	vmov	r0, s20
 8007284:	220c      	movs	r2, #12
 8007286:	2136      	movs	r1, #54	; 0x36
 8007288:	f7fb f959 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 800728c:	ee1a 1a10 	vmov	r1, s20
 8007290:	4628      	mov	r0, r5
        color = newColor;
 8007292:	f8c4 7538 	str.w	r7, [r4, #1336]	; 0x538
        linespace = space;
 8007296:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 800729a:	f00a fac3 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800729e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80072a2:	ee1a 3a10 	vmov	r3, s20
 80072a6:	333c      	adds	r3, #60	; 0x3c
 80072a8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80072ac:	2333      	movs	r3, #51	; 0x33
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 80072ae:	ee1a 0a10 	vmov	r0, s20
 80072b2:	a90a      	add	r1, sp, #40	; 0x28
 80072b4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80072b8:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 80072bc:	f00a fd4c 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80072c0:	ee1a 1a10 	vmov	r1, s20
 80072c4:	4630      	mov	r0, r6
 80072c6:	f008 fb93 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 80072ca:	ee1c 0a10 	vmov	r0, s24
 80072ce:	f44f 7280 	mov.w	r2, #256	; 0x100
 80072d2:	2121      	movs	r1, #33	; 0x21
 80072d4:	f7fb f933 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 80072d8:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80072da:	aa0a      	add	r2, sp, #40	; 0x28
 80072dc:	a909      	add	r1, sp, #36	; 0x24
 80072de:	ee1c 0a10 	vmov	r0, s24
 80072e2:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80072e6:	2302      	movs	r3, #2
 80072e8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80072ec:	f00a ff19 	bl	8012122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80072f0:	2332      	movs	r3, #50	; 0x32
        updateTextPosition();
 80072f2:	ee1c 0a10 	vmov	r0, s24
 80072f6:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 80072fa:	f7fb f975 	bl	80025e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80072fe:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 8007302:	3304      	adds	r3, #4
 8007304:	4630      	mov	r0, r6
 8007306:	ee1c 1a10 	vmov	r1, s24
        color = col;
 800730a:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
        colorPressed = col;
 800730e:	f8c4 7590 	str.w	r7, [r4, #1424]	; 0x590
 8007312:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 8007316:	f008 fb6b 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800731a:	4620      	mov	r0, r4
 800731c:	b00d      	add	sp, #52	; 0x34
 800731e:	ecbd 8b0a 	vpop	{d8-d12}
 8007322:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007326:	bf00      	nop
 8007328:	20013838 	.word	0x20013838
 800732c:	0802a156 	.word	0x0802a156
 8007330:	0802a1cc 	.word	0x0802a1cc

08007334 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007334:	4770      	bx	lr

08007336 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007336:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007338:	68c2      	ldr	r2, [r0, #12]
 800733a:	6844      	ldr	r4, [r0, #4]
 800733c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800733e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007340:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007344:	07d2      	lsls	r2, r2, #31
 8007346:	bf48      	it	mi
 8007348:	5962      	ldrmi	r2, [r4, r5]
 800734a:	689b      	ldr	r3, [r3, #8]
    }
 800734c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800734e:	bf48      	it	mi
 8007350:	58d3      	ldrmi	r3, [r2, r3]
 8007352:	4718      	bx	r3

08007354 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007354:	6843      	ldr	r3, [r0, #4]
 8007356:	b12b      	cbz	r3, 8007364 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007358:	6883      	ldr	r3, [r0, #8]
 800735a:	b92b      	cbnz	r3, 8007368 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800735c:	68c0      	ldr	r0, [r0, #12]
 800735e:	f000 0001 	and.w	r0, r0, #1
 8007362:	4770      	bx	lr
 8007364:	4618      	mov	r0, r3
 8007366:	4770      	bx	lr
 8007368:	2001      	movs	r0, #1
    }
 800736a:	4770      	bx	lr

0800736c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800736c:	b510      	push	{r4, lr}
 800736e:	2110      	movs	r1, #16
 8007370:	4604      	mov	r4, r0
 8007372:	f020 fb34 	bl	80279de <_ZdlPvj>
 8007376:	4620      	mov	r0, r4
 8007378:	bd10      	pop	{r4, pc}

0800737a <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 800737a:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 800737e:	f000 bf21 	b.w	80081c4 <_ZN17Gauge_with_Values10initializeEv>

08007382 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007382:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8007386:	4288      	cmp	r0, r1
{
 8007388:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800738a:	d105      	bne.n	8007398 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800738c:	f00d fdc8 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8007390:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007394:	f7fc ba0a 	b.w	80037ac <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007398:	bd08      	pop	{r3, pc}
	...

0800739c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 800739c:	b510      	push	{r4, lr}
 800739e:	4b07      	ldr	r3, [pc, #28]	; (80073bc <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x20>)
 80073a0:	6003      	str	r3, [r0, #0]
 80073a2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80073a4:	f00c f8ba 	bl	801351c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 80073a8:	4b05      	ldr	r3, [pc, #20]	; (80073c0 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x24>)
 80073aa:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 80073ae:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80073b2:	f7fd fc91 	bl	8004cd8 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 80073b6:	4620      	mov	r0, r4
 80073b8:	bd10      	pop	{r4, pc}
 80073ba:	bf00      	nop
 80073bc:	0802bd7c 	.word	0x0802bd7c
 80073c0:	0802c1a0 	.word	0x0802c1a0

080073c4 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 80073c4:	b510      	push	{r4, lr}
 80073c6:	4604      	mov	r4, r0
}
 80073c8:	f7ff ffe8 	bl	800739c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 80073cc:	4620      	mov	r0, r4
 80073ce:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80073d2:	f020 fb04 	bl	80279de <_ZdlPvj>
 80073d6:	4620      	mov	r0, r4
 80073d8:	bd10      	pop	{r4, pc}
	...

080073dc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 80073dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80073e0:	ed2d 8b04 	vpush	{d8-d9}
 80073e4:	4604      	mov	r4, r0
 80073e6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 80073e8:	46a3      	mov	fp, r4
 80073ea:	2500      	movs	r5, #0
 80073ec:	f00f fa18 	bl	8016820 <_ZN8touchgfx6ScreenC1Ev>
 80073f0:	4bae      	ldr	r3, [pc, #696]	; (80076ac <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d0>)
 80073f2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80073f4:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80073f8:	2226      	movs	r2, #38	; 0x26
 80073fa:	4629      	mov	r1, r5
 80073fc:	4658      	mov	r0, fp
 80073fe:	f021 fae4 	bl	80289ca <memset>
 8007402:	4658      	mov	r0, fp
 8007404:	f7fb f8bc 	bl	8002580 <_ZN8touchgfx6WidgetC1Ev>
 8007408:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800740c:	26ff      	movs	r6, #255	; 0xff
 800740e:	4ba8      	ldr	r3, [pc, #672]	; (80076b0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d4>)
 8007410:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007412:	2226      	movs	r2, #38	; 0x26
 8007414:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007418:	4629      	mov	r1, r5
 800741a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800741e:	66a5      	str	r5, [r4, #104]	; 0x68
 8007420:	4650      	mov	r0, sl
 8007422:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007426:	f021 fad0 	bl	80289ca <memset>
 800742a:	4650      	mov	r0, sl
 800742c:	f7fb f8a8 	bl	8002580 <_ZN8touchgfx6WidgetC1Ev>
 8007430:	4ba0      	ldr	r3, [pc, #640]	; (80076b4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d8>)
 8007432:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007434:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007438:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800743c:	a90a      	add	r1, sp, #40	; 0x28
 800743e:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007442:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007446:	4650      	mov	r0, sl
 8007448:	f00b f861 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800744c:	4638      	mov	r0, r7
 800744e:	f009 ff27 	bl	80112a0 <_ZN8touchgfx4LineC1Ev>
 8007452:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007456:	4618      	mov	r0, r3
 8007458:	9303      	str	r3, [sp, #12]
 800745a:	f7f9 ff31 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800745e:	4b96      	ldr	r3, [pc, #600]	; (80076b8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2dc>)
 8007460:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8007464:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 8007468:	3324      	adds	r3, #36	; 0x24
 800746a:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 800746e:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 8007472:	4648      	mov	r0, r9
 8007474:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 8007478:	f7fb f894 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 800747c:	4640      	mov	r0, r8
 800747e:	f7fb f891 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8007482:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8007486:	4618      	mov	r0, r3
 8007488:	ee08 3a10 	vmov	s16, r3
 800748c:	f7fb f88a 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 8007490:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8007494:	4618      	mov	r0, r3
 8007496:	ee08 3a90 	vmov	s17, r3
 800749a:	f00b f979 	bl	8012790 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800749e:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80074a2:	4618      	mov	r0, r3
 80074a4:	ee09 3a10 	vmov	s18, r3
 80074a8:	f000 fe82 	bl	80081b0 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80074ac:	4a83      	ldr	r2, [pc, #524]	; (80076bc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e0>)
 80074ae:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80074b2:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80074b6:	4a82      	ldr	r2, [pc, #520]	; (80076c0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80074b8:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80074bc:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80074c0:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80074c4:	f00c f820 	bl	8013508 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80074c8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80074cc:	462a      	mov	r2, r5
 80074ce:	9300      	str	r3, [sp, #0]
 80074d0:	4629      	mov	r1, r5
 80074d2:	23f0      	movs	r3, #240	; 0xf0
 80074d4:	4658      	mov	r0, fp
 80074d6:	f7fb f83f 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
 80074da:	1d26      	adds	r6, r4, #4
        color = newColor;
 80074dc:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80074e0:	66a3      	str	r3, [r4, #104]	; 0x68
 80074e2:	4659      	mov	r1, fp
 80074e4:	4630      	mov	r0, r6
 80074e6:	f008 fa83 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80074ea:	462a      	mov	r2, r5
 80074ec:	4629      	mov	r1, r5
 80074ee:	4650      	mov	r0, sl
 80074f0:	f7fb f825 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 80074f4:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80074f6:	a90a      	add	r1, sp, #40	; 0x28
 80074f8:	4650      	mov	r0, sl
 80074fa:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80074fe:	f00b f806 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007502:	4651      	mov	r1, sl
 8007504:	4630      	mov	r0, r6
 8007506:	f008 fa73 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800750a:	230a      	movs	r3, #10
 800750c:	9300      	str	r3, [sp, #0]
 800750e:	2232      	movs	r2, #50	; 0x32
 8007510:	23f0      	movs	r3, #240	; 0xf0
 8007512:	4629      	mov	r1, r5
 8007514:	4638      	mov	r0, r7
 8007516:	f7fb f81f 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
 800751a:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800751e:	22a0      	movs	r2, #160	; 0xa0
 8007520:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007524:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8007528:	9b03      	ldr	r3, [sp, #12]
 800752a:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800752e:	4611      	mov	r1, r2
 8007530:	4638      	mov	r0, r7
 8007532:	f009 ffcb 	bl	80114cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007536:	22a0      	movs	r2, #160	; 0xa0
 8007538:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800753c:	4638      	mov	r0, r7
 800753e:	f009 ffd0 	bl	80114e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007542:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8007546:	2b20      	cmp	r3, #32
 8007548:	d005      	beq.n	8007556 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x17a>
        lineWidthQ5 = widthQ5;
 800754a:	2320      	movs	r3, #32
 800754c:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 8007550:	4638      	mov	r0, r7
 8007552:	f009 fec5 	bl	80112e0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007556:	4638      	mov	r0, r7
 8007558:	2101      	movs	r1, #1
 800755a:	f009 ffcd 	bl	80114f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800755e:	4639      	mov	r1, r7
 8007560:	4630      	mov	r0, r6
 8007562:	ad04      	add	r5, sp, #16
 8007564:	f008 fa44 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007568:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 800756c:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8007570:	2223      	movs	r2, #35	; 0x23
 8007572:	4648      	mov	r0, r9
 8007574:	2145      	movs	r1, #69	; 0x45
 8007576:	f7fa ffe2 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800757a:	4649      	mov	r1, r9
 800757c:	4628      	mov	r0, r5
        color = newColor;
 800757e:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 8007582:	f8a4 a150 	strh.w	sl, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 8007586:	f00a f94d 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800758a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800758e:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 8007592:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007596:	f8df b12c 	ldr.w	fp, [pc, #300]	; 80076c4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e8>
 800759a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800759e:	2337      	movs	r3, #55	; 0x37
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 80075a0:	a90a      	add	r1, sp, #40	; 0x28
 80075a2:	4648      	mov	r0, r9
 80075a4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80075a8:	f00a fbd6 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80075ac:	4649      	mov	r1, r9
 80075ae:	4630      	mov	r0, r6
 80075b0:	f008 fa1e 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 80075b4:	223c      	movs	r2, #60	; 0x3c
 80075b6:	4640      	mov	r0, r8
 80075b8:	211f      	movs	r1, #31
 80075ba:	f7fa ffc0 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 80075be:	4641      	mov	r1, r8
 80075c0:	4628      	mov	r0, r5
        color = newColor;
 80075c2:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 80075c6:	f8a4 a198 	strh.w	sl, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 80075ca:	f00a f92b 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80075ce:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80075d2:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80075d6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80075da:	2326      	movs	r3, #38	; 0x26
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 80075dc:	a90a      	add	r1, sp, #40	; 0x28
 80075de:	4640      	mov	r0, r8
 80075e0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80075e4:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80075e8:	f00a fbb6 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80075ec:	4641      	mov	r1, r8
 80075ee:	4630      	mov	r0, r6
 80075f0:	f008 f9fe 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80075f4:	ee18 0a10 	vmov	r0, s16
 80075f8:	220c      	movs	r2, #12
 80075fa:	2136      	movs	r1, #54	; 0x36
 80075fc:	f7fa ff9f 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8007600:	ee18 1a10 	vmov	r1, s16
 8007604:	4628      	mov	r0, r5
        color = newColor;
 8007606:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 800760a:	f8a4 a1e0 	strh.w	sl, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800760e:	f00a f909 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007612:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007616:	ee18 3a10 	vmov	r3, s16
 800761a:	333c      	adds	r3, #60	; 0x3c
 800761c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007620:	2336      	movs	r3, #54	; 0x36
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8007622:	ee18 0a10 	vmov	r0, s16
 8007626:	a90a      	add	r1, sp, #40	; 0x28
 8007628:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800762c:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8007630:	f00a fb92 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007634:	ee18 1a10 	vmov	r1, s16
 8007638:	4630      	mov	r0, r6
 800763a:	f008 f9d9 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800763e:	ee18 0a90 	vmov	r0, s17
 8007642:	f240 1201 	movw	r2, #257	; 0x101
 8007646:	2121      	movs	r1, #33	; 0x21
 8007648:	f7fa ff79 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 800764c:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800764e:	aa0a      	add	r2, sp, #40	; 0x28
 8007650:	a909      	add	r1, sp, #36	; 0x24
 8007652:	ee18 0a90 	vmov	r0, s17
 8007656:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800765a:	2302      	movs	r3, #2
 800765c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007660:	f00a fd5f 	bl	8012122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007664:	2335      	movs	r3, #53	; 0x35
        updateTextPosition();
 8007666:	ee18 0a90 	vmov	r0, s17
 800766a:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 800766e:	f7fa ffbb 	bl	80025e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007672:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8007676:	3314      	adds	r3, #20
 8007678:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 800767c:	ee18 1a90 	vmov	r1, s17
 8007680:	4630      	mov	r0, r6
        colorPressed = col;
 8007682:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 8007686:	f008 f9b3 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 800768a:	ee19 0a10 	vmov	r0, s18
 800768e:	224e      	movs	r2, #78	; 0x4e
 8007690:	4651      	mov	r1, sl
 8007692:	f7fa ff54 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8007696:	4630      	mov	r0, r6
 8007698:	ee19 1a10 	vmov	r1, s18
 800769c:	f008 f9a8 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80076a0:	4620      	mov	r0, r4
 80076a2:	b00d      	add	sp, #52	; 0x34
 80076a4:	ecbd 8b04 	vpop	{d8-d9}
 80076a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80076ac:	0802bd7c 	.word	0x0802bd7c
 80076b0:	0802cb14 	.word	0x0802cb14
 80076b4:	0802ccdc 	.word	0x0802ccdc
 80076b8:	0802c848 	.word	0x0802c848
 80076bc:	0802bd64 	.word	0x0802bd64
 80076c0:	08007383 	.word	0x08007383
 80076c4:	0802a1cc 	.word	0x0802a1cc

080076c8 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 80076c8:	4770      	bx	lr

080076ca <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80076ca:	4770      	bx	lr

080076cc <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80076cc:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80076ce:	68c2      	ldr	r2, [r0, #12]
 80076d0:	6844      	ldr	r4, [r0, #4]
 80076d2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80076d4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80076d6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80076da:	07d2      	lsls	r2, r2, #31
 80076dc:	bf48      	it	mi
 80076de:	5962      	ldrmi	r2, [r4, r5]
 80076e0:	689b      	ldr	r3, [r3, #8]
    }
 80076e2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80076e4:	bf48      	it	mi
 80076e6:	58d3      	ldrmi	r3, [r2, r3]
 80076e8:	4718      	bx	r3

080076ea <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80076ea:	6843      	ldr	r3, [r0, #4]
 80076ec:	b12b      	cbz	r3, 80076fa <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80076ee:	6883      	ldr	r3, [r0, #8]
 80076f0:	b92b      	cbnz	r3, 80076fe <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80076f2:	68c0      	ldr	r0, [r0, #12]
 80076f4:	f000 0001 	and.w	r0, r0, #1
 80076f8:	4770      	bx	lr
 80076fa:	4618      	mov	r0, r3
 80076fc:	4770      	bx	lr
 80076fe:	2001      	movs	r0, #1
    }
 8007700:	4770      	bx	lr

08007702 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007702:	b510      	push	{r4, lr}
 8007704:	2110      	movs	r1, #16
 8007706:	4604      	mov	r4, r0
 8007708:	f020 f969 	bl	80279de <_ZdlPvj>
 800770c:	4620      	mov	r0, r4
 800770e:	bd10      	pop	{r4, pc}

08007710 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8007710:	b510      	push	{r4, lr}
 8007712:	4b03      	ldr	r3, [pc, #12]	; (8007720 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8007714:	6003      	str	r3, [r0, #0]
 8007716:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007718:	f00b ff00 	bl	801351c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800771c:	4620      	mov	r0, r4
 800771e:	bd10      	pop	{r4, pc}
 8007720:	0802bdc8 	.word	0x0802bdc8

08007724 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8007724:	b507      	push	{r0, r1, r2, lr}
 8007726:	4b07      	ldr	r3, [pc, #28]	; (8007744 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8007728:	6003      	str	r3, [r0, #0]
 800772a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800772c:	f00b fef6 	bl	801351c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007730:	9801      	ldr	r0, [sp, #4]
 8007732:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8007736:	f020 f952 	bl	80279de <_ZdlPvj>
 800773a:	9801      	ldr	r0, [sp, #4]
 800773c:	b003      	add	sp, #12
 800773e:	f85d fb04 	ldr.w	pc, [sp], #4
 8007742:	bf00      	nop
 8007744:	0802bdc8 	.word	0x0802bdc8

08007748 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007748:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 800774c:	4288      	cmp	r0, r1
{
 800774e:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007750:	d105      	bne.n	800775e <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007752:	f00d fbe5 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8007756:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 800775a:	f7fb bff7 	b.w	800374c <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 800775e:	bd08      	pop	{r3, pc}

08007760 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8007760:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007764:	ed2d 8b04 	vpush	{d8-d9}
 8007768:	4604      	mov	r4, r0
 800776a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 800776c:	46a3      	mov	fp, r4
 800776e:	2500      	movs	r5, #0
 8007770:	f00f f856 	bl	8016820 <_ZN8touchgfx6ScreenC1Ev>
 8007774:	4bd1      	ldr	r3, [pc, #836]	; (8007abc <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 8007776:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007778:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 800777c:	2226      	movs	r2, #38	; 0x26
 800777e:	4629      	mov	r1, r5
 8007780:	4658      	mov	r0, fp
 8007782:	f021 f922 	bl	80289ca <memset>
 8007786:	4658      	mov	r0, fp
 8007788:	f7fa fefa 	bl	8002580 <_ZN8touchgfx6WidgetC1Ev>
 800778c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007790:	26ff      	movs	r6, #255	; 0xff
 8007792:	4bcb      	ldr	r3, [pc, #812]	; (8007ac0 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 8007794:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007796:	2226      	movs	r2, #38	; 0x26
 8007798:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800779c:	4629      	mov	r1, r5
 800779e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80077a2:	4650      	mov	r0, sl
 80077a4:	66a5      	str	r5, [r4, #104]	; 0x68
 80077a6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80077aa:	f021 f90e 	bl	80289ca <memset>
 80077ae:	4650      	mov	r0, sl
 80077b0:	f7fa fee6 	bl	8002580 <_ZN8touchgfx6WidgetC1Ev>
 80077b4:	4bc3      	ldr	r3, [pc, #780]	; (8007ac4 <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 80077b6:	66e3      	str	r3, [r4, #108]	; 0x6c
 80077b8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80077bc:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80077c0:	a90a      	add	r1, sp, #40	; 0x28
 80077c2:	4650      	mov	r0, sl
 80077c4:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80077c8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80077cc:	f00a fe9f 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80077d0:	4648      	mov	r0, r9
 80077d2:	f7fa fee7 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 80077d6:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80077da:	4bbb      	ldr	r3, [pc, #748]	; (8007ac8 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 80077dc:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80077e0:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80077e4:	4638      	mov	r0, r7
 80077e6:	f009 fd5b 	bl	80112a0 <_ZN8touchgfx4LineC1Ev>
 80077ea:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80077ee:	4618      	mov	r0, r3
 80077f0:	9303      	str	r3, [sp, #12]
 80077f2:	f7f9 fd65 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80077f6:	4bb5      	ldr	r3, [pc, #724]	; (8007acc <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 80077f8:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80077fc:	3324      	adds	r3, #36	; 0x24
 80077fe:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8007802:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 8007806:	4618      	mov	r0, r3
 8007808:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800780c:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8007810:	ee09 3a10 	vmov	s18, r3
 8007814:	f00a ffbc 	bl	8012790 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007818:	4640      	mov	r0, r8
 800781a:	f7fa fec3 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 800781e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8007822:	4618      	mov	r0, r3
 8007824:	ee08 3a10 	vmov	s16, r3
 8007828:	f7fa febc 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
 800782c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007830:	4618      	mov	r0, r3
 8007832:	ee08 3a90 	vmov	s17, r3
 8007836:	f7fa feb5 	bl	80025a4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800783a:	4aa5      	ldr	r2, [pc, #660]	; (8007ad0 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 800783c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007840:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 8007844:	4aa3      	ldr	r2, [pc, #652]	; (8007ad4 <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007846:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800784a:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 800784e:	f504 7024 	add.w	r0, r4, #656	; 0x290
 8007852:	f00b fe59 	bl	8013508 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007856:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800785a:	462a      	mov	r2, r5
 800785c:	4658      	mov	r0, fp
 800785e:	9300      	str	r3, [sp, #0]
 8007860:	4629      	mov	r1, r5
 8007862:	23f0      	movs	r3, #240	; 0xf0
 8007864:	f7fa fe78 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007868:	1d26      	adds	r6, r4, #4
        color = newColor;
 800786a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800786e:	66a3      	str	r3, [r4, #104]	; 0x68
 8007870:	4659      	mov	r1, fp
 8007872:	4630      	mov	r0, r6
 8007874:	f008 f8bc 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007878:	462a      	mov	r2, r5
 800787a:	4650      	mov	r0, sl
 800787c:	4629      	mov	r1, r5
 800787e:	f7fa fe5e 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8007882:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007884:	4650      	mov	r0, sl
 8007886:	a90a      	add	r1, sp, #40	; 0x28
 8007888:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800788c:	f00a fe3f 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007890:	4651      	mov	r1, sl
 8007892:	4630      	mov	r0, r6
 8007894:	f008 f8ac 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8007898:	f44f 729a 	mov.w	r2, #308	; 0x134
 800789c:	2156      	movs	r1, #86	; 0x56
 800789e:	4648      	mov	r0, r9
 80078a0:	f7fa fe4d 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 80078a4:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80078a8:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80078ac:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80078b0:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80078b4:	4650      	mov	r0, sl
 80078b6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80078ba:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80078be:	4649      	mov	r1, r9
 80078c0:	4798      	blx	r3
 80078c2:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80078c6:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80078ca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80078ce:	4b82      	ldr	r3, [pc, #520]	; (8007ad8 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 80078d0:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 80078d2:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 80078d6:	b92b      	cbnz	r3, 80078e4 <_ZN20Project_InfoViewBaseC1Ev+0x184>
 80078d8:	4b80      	ldr	r3, [pc, #512]	; (8007adc <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 80078da:	4a81      	ldr	r2, [pc, #516]	; (8007ae0 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 80078dc:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80078de:	4881      	ldr	r0, [pc, #516]	; (8007ae4 <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 80078e0:	f020 fe6e 	bl	80285c0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80078e4:	4b80      	ldr	r3, [pc, #512]	; (8007ae8 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80078e6:	881b      	ldrh	r3, [r3, #0]
 80078e8:	2b12      	cmp	r3, #18
 80078ea:	d803      	bhi.n	80078f4 <_ZN20Project_InfoViewBaseC1Ev+0x194>
 80078ec:	4b7f      	ldr	r3, [pc, #508]	; (8007aec <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 80078ee:	4a7c      	ldr	r2, [pc, #496]	; (8007ae0 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 80078f0:	2161      	movs	r1, #97	; 0x61
 80078f2:	e7f4      	b.n	80078de <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 80078f4:	4b7e      	ldr	r3, [pc, #504]	; (8007af0 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 80078f6:	2112      	movs	r1, #18
 80078f8:	6818      	ldr	r0, [r3, #0]
 80078fa:	f000 fb1b 	bl	8007f34 <_ZNK8touchgfx5Texts7getTextEt>
 80078fe:	4a7d      	ldr	r2, [pc, #500]	; (8007af4 <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 8007900:	4603      	mov	r3, r0
 8007902:	2104      	movs	r1, #4
 8007904:	4650      	mov	r0, sl
 8007906:	f010 fc6f 	bl	80181e8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 800790a:	4648      	mov	r0, r9
        wc1 = value;
 800790c:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8007910:	f00a fa02 	bl	8011d18 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007914:	4b78      	ldr	r3, [pc, #480]	; (8007af8 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 8007916:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8007918:	a90a      	add	r1, sp, #40	; 0x28
 800791a:	2313      	movs	r3, #19
 800791c:	4648      	mov	r0, r9
 800791e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007922:	f00a fa19 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007926:	4649      	mov	r1, r9
 8007928:	4630      	mov	r0, r6
 800792a:	f008 f861 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800792e:	230a      	movs	r3, #10
 8007930:	9300      	str	r3, [sp, #0]
 8007932:	2232      	movs	r2, #50	; 0x32
 8007934:	23f0      	movs	r3, #240	; 0xf0
 8007936:	4629      	mov	r1, r5
 8007938:	4638      	mov	r0, r7
 800793a:	f7fa fe0d 	bl	8002558 <_ZN8touchgfx8Drawable11setPositionEssss>
 800793e:	9b03      	ldr	r3, [sp, #12]
 8007940:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007944:	22a0      	movs	r2, #160	; 0xa0
 8007946:	4611      	mov	r1, r2
 8007948:	4638      	mov	r0, r7
 800794a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 800794e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8007952:	f009 fdbb 	bl	80114cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007956:	22a0      	movs	r2, #160	; 0xa0
 8007958:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800795c:	4638      	mov	r0, r7
 800795e:	f009 fdc0 	bl	80114e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007962:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8007966:	2b20      	cmp	r3, #32
 8007968:	d005      	beq.n	8007976 <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 800796a:	2320      	movs	r3, #32
 800796c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8007970:	4638      	mov	r0, r7
 8007972:	f009 fcb5 	bl	80112e0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007976:	4638      	mov	r0, r7
 8007978:	2101      	movs	r1, #1
 800797a:	f009 fdbd 	bl	80114f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800797e:	4639      	mov	r1, r7
 8007980:	4630      	mov	r0, r6
 8007982:	f008 f835 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007986:	ee19 0a10 	vmov	r0, s18
 800798a:	22f0      	movs	r2, #240	; 0xf0
 800798c:	2121      	movs	r1, #33	; 0x21
 800798e:	f7fa fdd6 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8007992:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007994:	aa0a      	add	r2, sp, #40	; 0x28
 8007996:	a909      	add	r1, sp, #36	; 0x24
 8007998:	ee19 0a10 	vmov	r0, s18
 800799c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80079a0:	2302      	movs	r3, #2
 80079a2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80079a6:	f00a fbbc 	bl	8012122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80079aa:	2342      	movs	r3, #66	; 0x42
        updateTextPosition();
 80079ac:	ee19 0a10 	vmov	r0, s18
 80079b0:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 80079b4:	f7fa fe18 	bl	80025e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 80079b8:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 80079bc:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 80079c0:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 80079c4:	ee19 1a10 	vmov	r1, s18
 80079c8:	4630      	mov	r0, r6
        colorPressed = col;
 80079ca:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 80079ce:	ad04      	add	r5, sp, #16
 80079d0:	f008 f80e 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80079d4:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 80079d8:	225b      	movs	r2, #91	; 0x5b
 80079da:	4640      	mov	r0, r8
 80079dc:	2105      	movs	r1, #5
 80079de:	f7fa fdae 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80079e2:	4641      	mov	r1, r8
 80079e4:	4628      	mov	r0, r5
        color = newColor;
 80079e6:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80079ea:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80079ee:	f009 ff19 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80079f2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80079f6:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80079fa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80079fe:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8007af8 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 8007a02:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007a06:	2343      	movs	r3, #67	; 0x43
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 8007a08:	a90a      	add	r1, sp, #40	; 0x28
 8007a0a:	4640      	mov	r0, r8
 8007a0c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007a10:	f00a f9a2 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007a14:	4641      	mov	r1, r8
 8007a16:	4630      	mov	r0, r6
 8007a18:	f007 ffea 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8007a1c:	ee18 0a10 	vmov	r0, s16
 8007a20:	2223      	movs	r2, #35	; 0x23
 8007a22:	2145      	movs	r1, #69	; 0x45
 8007a24:	f7fa fd8b 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8007a28:	ee18 1a10 	vmov	r1, s16
 8007a2c:	4628      	mov	r0, r5
        color = newColor;
 8007a2e:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8007a32:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8007a36:	f009 fef5 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007a3a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007a3e:	ee18 3a10 	vmov	r3, s16
 8007a42:	333c      	adds	r3, #60	; 0x3c
 8007a44:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007a48:	2345      	movs	r3, #69	; 0x45
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8007a4a:	ee18 0a10 	vmov	r0, s16
 8007a4e:	a90a      	add	r1, sp, #40	; 0x28
 8007a50:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007a54:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007a58:	f00a f97e 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007a5c:	ee18 1a10 	vmov	r1, s16
 8007a60:	4630      	mov	r0, r6
 8007a62:	f007 ffc5 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007a66:	ee18 0a90 	vmov	r0, s17
 8007a6a:	220c      	movs	r2, #12
 8007a6c:	2136      	movs	r1, #54	; 0x36
 8007a6e:	f7fa fd66 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8007a72:	ee18 1a90 	vmov	r1, s17
 8007a76:	4628      	mov	r0, r5
        color = newColor;
 8007a78:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8007a7c:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8007a80:	f009 fed0 	bl	8011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007a84:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007a88:	ee18 3a90 	vmov	r3, s17
 8007a8c:	333c      	adds	r3, #60	; 0x3c
 8007a8e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007a92:	2344      	movs	r3, #68	; 0x44
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8007a94:	ee18 0a90 	vmov	r0, s17
 8007a98:	a90a      	add	r1, sp, #40	; 0x28
 8007a9a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007a9e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007aa2:	f00a f959 	bl	8011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007aa6:	4630      	mov	r0, r6
 8007aa8:	ee18 1a90 	vmov	r1, s17
 8007aac:	f007 ffa0 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007ab0:	4620      	mov	r0, r4
 8007ab2:	b00d      	add	sp, #52	; 0x34
 8007ab4:	ecbd 8b04 	vpop	{d8-d9}
 8007ab8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007abc:	0802bdc8 	.word	0x0802bdc8
 8007ac0:	0802cb14 	.word	0x0802cb14
 8007ac4:	0802ccdc 	.word	0x0802ccdc
 8007ac8:	0802a1dc 	.word	0x0802a1dc
 8007acc:	0802c848 	.word	0x0802c848
 8007ad0:	0802bdb0 	.word	0x0802bdb0
 8007ad4:	08007749 	.word	0x08007749
 8007ad8:	2001382c 	.word	0x2001382c
 8007adc:	0802a01c 	.word	0x0802a01c
 8007ae0:	0802a11e 	.word	0x0802a11e
 8007ae4:	0802a099 	.word	0x0802a099
 8007ae8:	20013830 	.word	0x20013830
 8007aec:	0802a0e0 	.word	0x0802a0e0
 8007af0:	20013838 	.word	0x20013838
 8007af4:	0802a156 	.word	0x0802a156
 8007af8:	0802a1cc 	.word	0x0802a1cc

08007afc <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8007afc:	4770      	bx	lr

08007afe <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 8007afe:	4770      	bx	lr

08007b00 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007b00:	b510      	push	{r4, lr}
}
 8007b02:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007b04:	4604      	mov	r4, r0
}
 8007b06:	f01f ff6a 	bl	80279de <_ZdlPvj>
 8007b0a:	4620      	mov	r0, r4
 8007b0c:	bd10      	pop	{r4, pc}
	...

08007b10 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 8007b10:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007b14:	4604      	mov	r4, r0
 8007b16:	4626      	mov	r6, r4
 8007b18:	f00e fe82 	bl	8016820 <_ZN8touchgfx6ScreenC1Ev>
 8007b1c:	2500      	movs	r5, #0
 8007b1e:	4b2e      	ldr	r3, [pc, #184]	; (8007bd8 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8007b20:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007b22:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8007b26:	4b2d      	ldr	r3, [pc, #180]	; (8007bdc <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8007b28:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8007b2a:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8007b2e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007b32:	23ff      	movs	r3, #255	; 0xff
 8007b34:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8007b38:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8007b3c:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8007b40:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8007b44:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8007b48:	4a25      	ldr	r2, [pc, #148]	; (8007be0 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8007b4a:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8007b4e:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8007b52:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8007b54:	a901      	add	r1, sp, #4
 8007b56:	4638      	mov	r0, r7
 8007b58:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8007b5c:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8007b60:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8007b64:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8007b68:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8007b6c:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8007b70:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8007b74:	66a5      	str	r5, [r4, #104]	; 0x68
 8007b76:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007b7a:	f00a fcc8 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8007b7e:	462a      	mov	r2, r5
 8007b80:	4629      	mov	r1, r5
 8007b82:	4630      	mov	r0, r6
 8007b84:	f7fa fcdb 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8007b88:	4630      	mov	r0, r6
 8007b8a:	21f0      	movs	r1, #240	; 0xf0
 8007b8c:	f7f9 fad8 	bl	8001140 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8007b90:	4630      	mov	r0, r6
 8007b92:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8007b96:	f7f9 fad5 	bl	8001144 <_ZN8touchgfx8Drawable9setHeightEs>
 8007b9a:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8007b9e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007ba2:	66a3      	str	r3, [r4, #104]	; 0x68
 8007ba4:	4631      	mov	r1, r6
 8007ba6:	4640      	mov	r0, r8
 8007ba8:	f007 ff22 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8007bac:	462a      	mov	r2, r5
 8007bae:	4638      	mov	r0, r7
 8007bb0:	f06f 0102 	mvn.w	r1, #2
 8007bb4:	f7fa fcc3 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8007bb8:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8007bba:	a901      	add	r1, sp, #4
 8007bbc:	4638      	mov	r0, r7
 8007bbe:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007bc2:	f00a fca4 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007bc6:	4640      	mov	r0, r8
 8007bc8:	4639      	mov	r1, r7
 8007bca:	f007 ff11 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007bce:	4620      	mov	r0, r4
 8007bd0:	b002      	add	sp, #8
 8007bd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007bd6:	bf00      	nop
 8007bd8:	0802bdfc 	.word	0x0802bdfc
 8007bdc:	0802cb14 	.word	0x0802cb14
 8007be0:	0802ccdc 	.word	0x0802ccdc

08007be4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007be4:	4770      	bx	lr
	...

08007be8 <_Z23getFont_verdana_10_4bppv>:
{
 8007be8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007bea:	4d17      	ldr	r5, [pc, #92]	; (8007c48 <_Z23getFont_verdana_10_4bppv+0x60>)
 8007bec:	682c      	ldr	r4, [r5, #0]
 8007bee:	f3bf 8f5b 	dmb	ish
 8007bf2:	f014 0401 	ands.w	r4, r4, #1
{
 8007bf6:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007bf8:	d122      	bne.n	8007c40 <_Z23getFont_verdana_10_4bppv+0x58>
 8007bfa:	4628      	mov	r0, r5
 8007bfc:	f01f fef1 	bl	80279e2 <__cxa_guard_acquire>
 8007c00:	b1f0      	cbz	r0, 8007c40 <_Z23getFont_verdana_10_4bppv+0x58>
 8007c02:	233f      	movs	r3, #63	; 0x3f
 8007c04:	9309      	str	r3, [sp, #36]	; 0x24
 8007c06:	4b11      	ldr	r3, [pc, #68]	; (8007c4c <_Z23getFont_verdana_10_4bppv+0x64>)
 8007c08:	9308      	str	r3, [sp, #32]
 8007c0a:	4b11      	ldr	r3, [pc, #68]	; (8007c50 <_Z23getFont_verdana_10_4bppv+0x68>)
 8007c0c:	9307      	str	r3, [sp, #28]
 8007c0e:	2301      	movs	r3, #1
 8007c10:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007c14:	9304      	str	r3, [sp, #16]
 8007c16:	2304      	movs	r3, #4
 8007c18:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007c1c:	230a      	movs	r3, #10
 8007c1e:	490d      	ldr	r1, [pc, #52]	; (8007c54 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8007c20:	9300      	str	r3, [sp, #0]
 8007c22:	225f      	movs	r2, #95	; 0x5f
 8007c24:	230c      	movs	r3, #12
 8007c26:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007c2a:	480b      	ldr	r0, [pc, #44]	; (8007c58 <_Z23getFont_verdana_10_4bppv+0x70>)
 8007c2c:	940a      	str	r4, [sp, #40]	; 0x28
 8007c2e:	9401      	str	r4, [sp, #4]
 8007c30:	f7fd fa04 	bl	800503c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007c34:	4809      	ldr	r0, [pc, #36]	; (8007c5c <_Z23getFont_verdana_10_4bppv+0x74>)
 8007c36:	f020 fce1 	bl	80285fc <atexit>
 8007c3a:	4628      	mov	r0, r5
 8007c3c:	f01f fedd 	bl	80279fa <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8007c40:	4805      	ldr	r0, [pc, #20]	; (8007c58 <_Z23getFont_verdana_10_4bppv+0x70>)
 8007c42:	b00f      	add	sp, #60	; 0x3c
 8007c44:	bd30      	pop	{r4, r5, pc}
 8007c46:	bf00      	nop
 8007c48:	200028f0 	.word	0x200028f0
 8007c4c:	08030550 	.word	0x08030550
 8007c50:	080306b0 	.word	0x080306b0
 8007c54:	0802f838 	.word	0x0802f838
 8007c58:	200028f4 	.word	0x200028f4
 8007c5c:	08007be5 	.word	0x08007be5

08007c60 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007c60:	4770      	bx	lr
	...

08007c64 <_Z23getFont_verdana_12_4bppv>:
{
 8007c64:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007c66:	4d17      	ldr	r5, [pc, #92]	; (8007cc4 <_Z23getFont_verdana_12_4bppv+0x60>)
 8007c68:	682c      	ldr	r4, [r5, #0]
 8007c6a:	f3bf 8f5b 	dmb	ish
 8007c6e:	f014 0401 	ands.w	r4, r4, #1
{
 8007c72:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007c74:	d122      	bne.n	8007cbc <_Z23getFont_verdana_12_4bppv+0x58>
 8007c76:	4628      	mov	r0, r5
 8007c78:	f01f feb3 	bl	80279e2 <__cxa_guard_acquire>
 8007c7c:	b1f0      	cbz	r0, 8007cbc <_Z23getFont_verdana_12_4bppv+0x58>
 8007c7e:	233f      	movs	r3, #63	; 0x3f
 8007c80:	9309      	str	r3, [sp, #36]	; 0x24
 8007c82:	4b11      	ldr	r3, [pc, #68]	; (8007cc8 <_Z23getFont_verdana_12_4bppv+0x64>)
 8007c84:	9308      	str	r3, [sp, #32]
 8007c86:	4b11      	ldr	r3, [pc, #68]	; (8007ccc <_Z23getFont_verdana_12_4bppv+0x68>)
 8007c88:	9307      	str	r3, [sp, #28]
 8007c8a:	2301      	movs	r3, #1
 8007c8c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007c90:	9304      	str	r3, [sp, #16]
 8007c92:	2304      	movs	r3, #4
 8007c94:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007c98:	230c      	movs	r3, #12
 8007c9a:	490d      	ldr	r1, [pc, #52]	; (8007cd0 <_Z23getFont_verdana_12_4bppv+0x6c>)
 8007c9c:	9300      	str	r3, [sp, #0]
 8007c9e:	2260      	movs	r2, #96	; 0x60
 8007ca0:	230f      	movs	r3, #15
 8007ca2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007ca6:	480b      	ldr	r0, [pc, #44]	; (8007cd4 <_Z23getFont_verdana_12_4bppv+0x70>)
 8007ca8:	940a      	str	r4, [sp, #40]	; 0x28
 8007caa:	9401      	str	r4, [sp, #4]
 8007cac:	f7fd f9c6 	bl	800503c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007cb0:	4809      	ldr	r0, [pc, #36]	; (8007cd8 <_Z23getFont_verdana_12_4bppv+0x74>)
 8007cb2:	f020 fca3 	bl	80285fc <atexit>
 8007cb6:	4628      	mov	r0, r5
 8007cb8:	f01f fe9f 	bl	80279fa <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8007cbc:	4805      	ldr	r0, [pc, #20]	; (8007cd4 <_Z23getFont_verdana_12_4bppv+0x70>)
 8007cbe:	b00f      	add	sp, #60	; 0x3c
 8007cc0:	bd30      	pop	{r4, r5, pc}
 8007cc2:	bf00      	nop
 8007cc4:	20002920 	.word	0x20002920
 8007cc8:	08030584 	.word	0x08030584
 8007ccc:	080306b4 	.word	0x080306b4
 8007cd0:	0802fd6c 	.word	0x0802fd6c
 8007cd4:	20002924 	.word	0x20002924
 8007cd8:	08007c61 	.word	0x08007c61

08007cdc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007cdc:	4770      	bx	lr
	...

08007ce0 <_Z23getFont_verdana_19_4bppv>:
{
 8007ce0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007ce2:	4d17      	ldr	r5, [pc, #92]	; (8007d40 <_Z23getFont_verdana_19_4bppv+0x60>)
 8007ce4:	682c      	ldr	r4, [r5, #0]
 8007ce6:	f3bf 8f5b 	dmb	ish
 8007cea:	f014 0401 	ands.w	r4, r4, #1
{
 8007cee:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007cf0:	d122      	bne.n	8007d38 <_Z23getFont_verdana_19_4bppv+0x58>
 8007cf2:	4628      	mov	r0, r5
 8007cf4:	f01f fe75 	bl	80279e2 <__cxa_guard_acquire>
 8007cf8:	b1f0      	cbz	r0, 8007d38 <_Z23getFont_verdana_19_4bppv+0x58>
 8007cfa:	233f      	movs	r3, #63	; 0x3f
 8007cfc:	9309      	str	r3, [sp, #36]	; 0x24
 8007cfe:	4b11      	ldr	r3, [pc, #68]	; (8007d44 <_Z23getFont_verdana_19_4bppv+0x64>)
 8007d00:	9308      	str	r3, [sp, #32]
 8007d02:	4b11      	ldr	r3, [pc, #68]	; (8007d48 <_Z23getFont_verdana_19_4bppv+0x68>)
 8007d04:	9307      	str	r3, [sp, #28]
 8007d06:	2301      	movs	r3, #1
 8007d08:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007d0c:	9304      	str	r3, [sp, #16]
 8007d0e:	2304      	movs	r3, #4
 8007d10:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007d14:	2313      	movs	r3, #19
 8007d16:	490d      	ldr	r1, [pc, #52]	; (8007d4c <_Z23getFont_verdana_19_4bppv+0x6c>)
 8007d18:	9300      	str	r3, [sp, #0]
 8007d1a:	222f      	movs	r2, #47	; 0x2f
 8007d1c:	2317      	movs	r3, #23
 8007d1e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007d22:	480b      	ldr	r0, [pc, #44]	; (8007d50 <_Z23getFont_verdana_19_4bppv+0x70>)
 8007d24:	940a      	str	r4, [sp, #40]	; 0x28
 8007d26:	9401      	str	r4, [sp, #4]
 8007d28:	f7fd f988 	bl	800503c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007d2c:	4809      	ldr	r0, [pc, #36]	; (8007d54 <_Z23getFont_verdana_19_4bppv+0x74>)
 8007d2e:	f020 fc65 	bl	80285fc <atexit>
 8007d32:	4628      	mov	r0, r5
 8007d34:	f01f fe61 	bl	80279fa <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8007d38:	4805      	ldr	r0, [pc, #20]	; (8007d50 <_Z23getFont_verdana_19_4bppv+0x70>)
 8007d3a:	b00f      	add	sp, #60	; 0x3c
 8007d3c:	bd30      	pop	{r4, r5, pc}
 8007d3e:	bf00      	nop
 8007d40:	20002950 	.word	0x20002950
 8007d44:	08030608 	.word	0x08030608
 8007d48:	080306b8 	.word	0x080306b8
 8007d4c:	080302ac 	.word	0x080302ac
 8007d50:	20002954 	.word	0x20002954
 8007d54:	08007cdd 	.word	0x08007cdd

08007d58 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007d58:	4770      	bx	lr
	...

08007d5c <_Z23getFont_verdana_40_4bppv>:
{
 8007d5c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007d5e:	4d16      	ldr	r5, [pc, #88]	; (8007db8 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8007d60:	682c      	ldr	r4, [r5, #0]
 8007d62:	f3bf 8f5b 	dmb	ish
 8007d66:	f014 0401 	ands.w	r4, r4, #1
{
 8007d6a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007d6c:	d120      	bne.n	8007db0 <_Z23getFont_verdana_40_4bppv+0x54>
 8007d6e:	4628      	mov	r0, r5
 8007d70:	f01f fe37 	bl	80279e2 <__cxa_guard_acquire>
 8007d74:	b1e0      	cbz	r0, 8007db0 <_Z23getFont_verdana_40_4bppv+0x54>
 8007d76:	233f      	movs	r3, #63	; 0x3f
 8007d78:	9309      	str	r3, [sp, #36]	; 0x24
 8007d7a:	4b10      	ldr	r3, [pc, #64]	; (8007dbc <_Z23getFont_verdana_40_4bppv+0x60>)
 8007d7c:	9308      	str	r3, [sp, #32]
 8007d7e:	4b10      	ldr	r3, [pc, #64]	; (8007dc0 <_Z23getFont_verdana_40_4bppv+0x64>)
 8007d80:	4910      	ldr	r1, [pc, #64]	; (8007dc4 <_Z23getFont_verdana_40_4bppv+0x68>)
 8007d82:	4811      	ldr	r0, [pc, #68]	; (8007dc8 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8007d84:	940a      	str	r4, [sp, #40]	; 0x28
 8007d86:	2201      	movs	r2, #1
 8007d88:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8007d8c:	2304      	movs	r3, #4
 8007d8e:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8007d92:	2328      	movs	r3, #40	; 0x28
 8007d94:	9300      	str	r3, [sp, #0]
 8007d96:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007d9a:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8007d9e:	9405      	str	r4, [sp, #20]
 8007da0:	f7fd f94c 	bl	800503c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007da4:	4809      	ldr	r0, [pc, #36]	; (8007dcc <_Z23getFont_verdana_40_4bppv+0x70>)
 8007da6:	f020 fc29 	bl	80285fc <atexit>
 8007daa:	4628      	mov	r0, r5
 8007dac:	f01f fe25 	bl	80279fa <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8007db0:	4805      	ldr	r0, [pc, #20]	; (8007dc8 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8007db2:	b00f      	add	sp, #60	; 0x3c
 8007db4:	bd30      	pop	{r4, r5, pc}
 8007db6:	bf00      	nop
 8007db8:	20002980 	.word	0x20002980
 8007dbc:	080306ac 	.word	0x080306ac
 8007dc0:	080306bc 	.word	0x080306bc
 8007dc4:	08030540 	.word	0x08030540
 8007dc8:	20002984 	.word	0x20002984
 8007dcc:	08007d59 	.word	0x08007d59

08007dd0 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8007dd0:	2000      	movs	r0, #0
 8007dd2:	4770      	bx	lr

08007dd4 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8007dd4:	2000      	movs	r0, #0
 8007dd6:	4770      	bx	lr

08007dd8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8007dd8:	b40e      	push	{r1, r2, r3}
 8007dda:	b503      	push	{r0, r1, lr}
 8007ddc:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8007dde:	2100      	movs	r1, #0
{
 8007de0:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8007de4:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8007de6:	f00e f859 	bl	8015e9c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8007dea:	b002      	add	sp, #8
 8007dec:	f85d eb04 	ldr.w	lr, [sp], #4
 8007df0:	b003      	add	sp, #12
 8007df2:	4770      	bx	lr

08007df4 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8007df4:	b40c      	push	{r2, r3}
 8007df6:	b507      	push	{r0, r1, r2, lr}
 8007df8:	ab04      	add	r3, sp, #16
 8007dfa:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8007dfe:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8007e00:	f00e f84c 	bl	8015e9c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8007e04:	b003      	add	sp, #12
 8007e06:	f85d eb04 	ldr.w	lr, [sp], #4
 8007e0a:	b002      	add	sp, #8
 8007e0c:	4770      	bx	lr
	...

08007e10 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8007e10:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8007e12:	b510      	push	{r4, lr}
 8007e14:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8007e16:	b373      	cbz	r3, 8007e76 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8007e18:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8007e1a:	b92b      	cbnz	r3, 8007e28 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8007e1c:	4b18      	ldr	r3, [pc, #96]	; (8007e80 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8007e1e:	4a19      	ldr	r2, [pc, #100]	; (8007e84 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8007e20:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8007e22:	4819      	ldr	r0, [pc, #100]	; (8007e88 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8007e24:	f020 fbcc 	bl	80285c0 <__assert_func>
            return buffer[pos];
 8007e28:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8007e2a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8007e2e:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8007e30:	b30b      	cbz	r3, 8007e76 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8007e32:	f00f fc30 	bl	8017696 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8007e36:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8007e38:	2b01      	cmp	r3, #1
 8007e3a:	d803      	bhi.n	8007e44 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8007e3c:	4b13      	ldr	r3, [pc, #76]	; (8007e8c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8007e3e:	4a14      	ldr	r2, [pc, #80]	; (8007e90 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8007e40:	21cb      	movs	r1, #203	; 0xcb
 8007e42:	e7ee      	b.n	8007e22 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8007e44:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8007e46:	1c53      	adds	r3, r2, #1
 8007e48:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8007e4a:	2b09      	cmp	r3, #9
 8007e4c:	4619      	mov	r1, r3
 8007e4e:	bf88      	it	hi
 8007e50:	f1a3 010a 	subhi.w	r1, r3, #10
 8007e54:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8007e58:	f640 103f 	movw	r0, #2367	; 0x93f
 8007e5c:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8007e5e:	4281      	cmp	r1, r0
 8007e60:	d109      	bne.n	8007e76 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8007e62:	2b0a      	cmp	r3, #10
 8007e64:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8007e68:	bf28      	it	cs
 8007e6a:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8007e6c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8007e70:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8007e72:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8007e74:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8007e76:	4620      	mov	r0, r4
}
 8007e78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8007e7c:	f00f bb0e 	b.w	801749c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8007e80:	0802be28 	.word	0x0802be28
 8007e84:	0802be31 	.word	0x0802be31
 8007e88:	0802bedc 	.word	0x0802bedc
 8007e8c:	0802bf26 	.word	0x0802bf26
 8007e90:	0802bf34 	.word	0x0802bf34

08007e94 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8007e94:	f00f bac9 	b.w	801742a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08007e98 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8007e98:	b510      	push	{r4, lr}
 8007e9a:	b086      	sub	sp, #24
 8007e9c:	ac02      	add	r4, sp, #8
 8007e9e:	e884 0006 	stmia.w	r4, {r1, r2}
 8007ea2:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8007ea4:	ab0a      	add	r3, sp, #40	; 0x28
 8007ea6:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8007ea8:	9301      	str	r3, [sp, #4]
 8007eaa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007eac:	9300      	str	r3, [sp, #0]
 8007eae:	4621      	mov	r1, r4
 8007eb0:	9b08      	ldr	r3, [sp, #32]
 8007eb2:	f00c fbb7 	bl	8014624 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8007eb6:	b006      	add	sp, #24
 8007eb8:	bd10      	pop	{r4, pc}
	...

08007ebc <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8007ebc:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8007ebe:	bb18      	cbnz	r0, 8007f08 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8007ec0:	4b12      	ldr	r3, [pc, #72]	; (8007f0c <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8007ec2:	4813      	ldr	r0, [pc, #76]	; (8007f10 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8007ec4:	681c      	ldr	r4, [r3, #0]
 8007ec6:	4913      	ldr	r1, [pc, #76]	; (8007f14 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8007ec8:	b1b4      	cbz	r4, 8007ef8 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8007eca:	6822      	ldr	r2, [r4, #0]
 8007ecc:	4422      	add	r2, r4
 8007ece:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8007ed0:	6862      	ldr	r2, [r4, #4]
 8007ed2:	4422      	add	r2, r4
 8007ed4:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8007ed6:	68a2      	ldr	r2, [r4, #8]
 8007ed8:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8007eda:	4b0f      	ldr	r3, [pc, #60]	; (8007f18 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8007edc:	2200      	movs	r2, #0
 8007ede:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8007ee0:	f000 f838 	bl	8007f54 <_ZN17TypedTextDatabase8getFontsEv>
 8007ee4:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8007ee6:	f000 f833 	bl	8007f50 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8007eea:	4b0c      	ldr	r3, [pc, #48]	; (8007f1c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8007eec:	601c      	str	r4, [r3, #0]
        fonts = f;
 8007eee:	4b0c      	ldr	r3, [pc, #48]	; (8007f20 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8007ef0:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8007ef2:	4b0c      	ldr	r3, [pc, #48]	; (8007f24 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8007ef4:	8018      	strh	r0, [r3, #0]
    }
}
 8007ef6:	e007      	b.n	8007f08 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8007ef8:	4b0b      	ldr	r3, [pc, #44]	; (8007f28 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8007efa:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8007efc:	4b0b      	ldr	r3, [pc, #44]	; (8007f2c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8007efe:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8007f00:	4b0b      	ldr	r3, [pc, #44]	; (8007f30 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8007f02:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8007f04:	2c00      	cmp	r4, #0
 8007f06:	d1e8      	bne.n	8007eda <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8007f08:	bd38      	pop	{r3, r4, r5, pc}
 8007f0a:	bf00      	nop
 8007f0c:	200029b0 	.word	0x200029b0
 8007f10:	200029b4 	.word	0x200029b4
 8007f14:	200029b8 	.word	0x200029b8
 8007f18:	200029bc 	.word	0x200029bc
 8007f1c:	2001382c 	.word	0x2001382c
 8007f20:	20013834 	.word	0x20013834
 8007f24:	20013830 	.word	0x20013830
 8007f28:	08030814 	.word	0x08030814
 8007f2c:	080306c0 	.word	0x080306c0
 8007f30:	08030d24 	.word	0x08030d24

08007f34 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8007f34:	4b04      	ldr	r3, [pc, #16]	; (8007f48 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8007f36:	681b      	ldr	r3, [r3, #0]
 8007f38:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8007f3c:	4b03      	ldr	r3, [pc, #12]	; (8007f4c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8007f3e:	681b      	ldr	r3, [r3, #0]
}
 8007f40:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8007f44:	4770      	bx	lr
 8007f46:	bf00      	nop
 8007f48:	200029b8 	.word	0x200029b8
 8007f4c:	200029b4 	.word	0x200029b4

08007f50 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8007f50:	2055      	movs	r0, #85	; 0x55
 8007f52:	4770      	bx	lr

08007f54 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8007f54:	4800      	ldr	r0, [pc, #0]	; (8007f58 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8007f56:	4770      	bx	lr
 8007f58:	200029c0 	.word	0x200029c0

08007f5c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8007f5c:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 8007f5e:	f7ff febf 	bl	8007ce0 <_Z23getFont_verdana_19_4bppv>
};
 8007f62:	4c06      	ldr	r4, [pc, #24]	; (8007f7c <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8007f64:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8007f66:	f7ff fef9 	bl	8007d5c <_Z23getFont_verdana_40_4bppv>
};
 8007f6a:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8007f6c:	f7ff fe3c 	bl	8007be8 <_Z23getFont_verdana_10_4bppv>
};
 8007f70:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 8007f72:	f7ff fe77 	bl	8007c64 <_Z23getFont_verdana_12_4bppv>
};
 8007f76:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8007f78:	bd10      	pop	{r4, pc}
 8007f7a:	bf00      	nop
 8007f7c:	200029c0 	.word	0x200029c0

08007f80 <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 8007f80:	4770      	bx	lr

08007f82 <_ZThn4_N20CalibrationPresenterD1Ev>:
 8007f82:	3804      	subs	r0, #4
 8007f84:	4770      	bx	lr

08007f86 <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 8007f86:	4770      	bx	lr

08007f88 <_ZN20CalibrationPresenter15setTimeoutValueEi>:

}

void CalibrationPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8007f88:	68c0      	ldr	r0, [r0, #12]
 8007f8a:	6803      	ldr	r3, [r0, #0]
 8007f8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007f8e:	4718      	bx	r3

08007f90 <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8007f90:	f1a0 0004 	sub.w	r0, r0, #4
 8007f94:	f7ff bff8 	b.w	8007f88 <_ZN20CalibrationPresenter15setTimeoutValueEi>

08007f98 <_ZN20CalibrationPresenterD0Ev>:
    virtual ~CalibrationPresenter() {}
 8007f98:	b510      	push	{r4, lr}
 8007f9a:	2110      	movs	r1, #16
 8007f9c:	4604      	mov	r4, r0
 8007f9e:	f01f fd1e 	bl	80279de <_ZdlPvj>
 8007fa2:	4620      	mov	r0, r4
 8007fa4:	bd10      	pop	{r4, pc}

08007fa6 <_ZThn4_N20CalibrationPresenterD0Ev>:
 8007fa6:	f1a0 0004 	sub.w	r0, r0, #4
 8007faa:	e7f5      	b.n	8007f98 <_ZN20CalibrationPresenterD0Ev>

08007fac <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 8007fac:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8007fae:	2200      	movs	r2, #0
 8007fb0:	6082      	str	r2, [r0, #8]
    : view(v)
 8007fb2:	4a04      	ldr	r2, [pc, #16]	; (8007fc4 <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 8007fb4:	60c1      	str	r1, [r0, #12]
 8007fb6:	f102 0408 	add.w	r4, r2, #8
 8007fba:	3224      	adds	r2, #36	; 0x24
 8007fbc:	6004      	str	r4, [r0, #0]
 8007fbe:	6042      	str	r2, [r0, #4]
}
 8007fc0:	bd10      	pop	{r4, pc}
 8007fc2:	bf00      	nop
 8007fc4:	0802c008 	.word	0x0802c008

08007fc8 <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 8007fc8:	4770      	bx	lr
	...

08007fcc <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 8007fcc:	b510      	push	{r4, lr}
 8007fce:	4b03      	ldr	r3, [pc, #12]	; (8007fdc <_ZN15CalibrationViewD1Ev+0x10>)
 8007fd0:	6003      	str	r3, [r0, #0]
 8007fd2:	4604      	mov	r4, r0
 8007fd4:	f7fa fa38 	bl	8002448 <_ZN19CalibrationViewBaseD1Ev>
 8007fd8:	4620      	mov	r0, r4
 8007fda:	bd10      	pop	{r4, pc}
 8007fdc:	0802c044 	.word	0x0802c044

08007fe0 <_ZN15CalibrationViewD0Ev>:
 8007fe0:	b510      	push	{r4, lr}
 8007fe2:	4604      	mov	r4, r0
 8007fe4:	f7ff fff2 	bl	8007fcc <_ZN15CalibrationViewD1Ev>
 8007fe8:	4620      	mov	r0, r4
 8007fea:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8007fee:	f01f fcf6 	bl	80279de <_ZdlPvj>
 8007ff2:	4620      	mov	r0, r4
 8007ff4:	bd10      	pop	{r4, pc}
	...

08007ff8 <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 8007ff8:	b510      	push	{r4, lr}
 8007ffa:	4604      	mov	r4, r0
 8007ffc:	f7fa fb38 	bl	8002670 <_ZN19CalibrationViewBaseC1Ev>
 8008000:	4b01      	ldr	r3, [pc, #4]	; (8008008 <_ZN15CalibrationViewC1Ev+0x10>)
 8008002:	6023      	str	r3, [r4, #0]
}
 8008004:	4620      	mov	r0, r4
 8008006:	bd10      	pop	{r4, pc}
 8008008:	0802c044 	.word	0x0802c044

0800800c <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 800800c:	f7fa b9e9 	b.w	80023e2 <_ZN19CalibrationViewBase11setupScreenEv>

08008010 <_ZN15CalibrationView15setTimeoutValueEi>:

void CalibrationView::setTimeoutValue(int value)
{
 8008010:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008012:	4a0a      	ldr	r2, [pc, #40]	; (800803c <_ZN15CalibrationView15setTimeoutValueEi+0x2c>)
{
 8008014:	4605      	mov	r5, r0
 8008016:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008018:	460b      	mov	r3, r1
 800801a:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800801e:	2104      	movs	r1, #4
 8008020:	f010 f8e2 	bl	80181e8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008024:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008028:	f00e f862 	bl	80160f0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800802c:	b92c      	cbnz	r4, 800803a <_ZN15CalibrationView15setTimeoutValueEi+0x2a>
 800802e:	f00c ff77 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008032:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008036:	f7fb bc79 	b.w	800392c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800803a:	bd38      	pop	{r3, r4, r5, pc}
 800803c:	0802c038 	.word	0x0802c038

08008040 <_ZN25Calibration_HallPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_HallPresenter() {}
 8008040:	4770      	bx	lr

08008042 <_ZThn4_N25Calibration_HallPresenterD1Ev>:
 8008042:	3804      	subs	r0, #4
 8008044:	4770      	bx	lr

08008046 <_ZN25Calibration_HallPresenter10deactivateEv>:
}

void Calibration_HallPresenter::activate()
{

}
 8008046:	4770      	bx	lr

08008048 <_ZN25Calibration_HallPresenter15setTimeoutValueEi>:
}

void Calibration_HallPresenter::setTimeoutValue(int value)
{

}
 8008048:	4770      	bx	lr

0800804a <_ZN25Calibration_HallPresenterD0Ev>:
 800804a:	b510      	push	{r4, lr}
 800804c:	2110      	movs	r1, #16
 800804e:	4604      	mov	r4, r0
 8008050:	f01f fcc5 	bl	80279de <_ZdlPvj>
 8008054:	4620      	mov	r0, r4
 8008056:	bd10      	pop	{r4, pc}

08008058 <_ZThn4_N25Calibration_HallPresenterD0Ev>:
 8008058:	f1a0 0004 	sub.w	r0, r0, #4
 800805c:	e7f5      	b.n	800804a <_ZN25Calibration_HallPresenterD0Ev>

0800805e <_ZThn4_N25Calibration_HallPresenter15setTimeoutValueEi>:
 800805e:	4770      	bx	lr

08008060 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>:
Calibration_HallPresenter::Calibration_HallPresenter(Calibration_HallView& v)
 8008060:	b510      	push	{r4, lr}
 8008062:	2200      	movs	r2, #0
 8008064:	6082      	str	r2, [r0, #8]
    : view(v)
 8008066:	4a04      	ldr	r2, [pc, #16]	; (8008078 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView+0x18>)
 8008068:	60c1      	str	r1, [r0, #12]
 800806a:	f102 0408 	add.w	r4, r2, #8
 800806e:	3224      	adds	r2, #36	; 0x24
 8008070:	6004      	str	r4, [r0, #0]
 8008072:	6042      	str	r2, [r0, #4]
}
 8008074:	bd10      	pop	{r4, pc}
 8008076:	bf00      	nop
 8008078:	0802c074 	.word	0x0802c074

0800807c <_ZN20Calibration_HallView14tearDownScreenEv>:
}

void Calibration_HallView::tearDownScreen()
{
    Calibration_HallViewBase::tearDownScreen();
}
 800807c:	4770      	bx	lr

0800807e <_ZN20Calibration_HallView15setTimeoutValueEi>:

void Calibration_HallView::setTimeoutValue(int value)
{

}
 800807e:	4770      	bx	lr

08008080 <_ZN20Calibration_HallViewD1Ev>:

class Calibration_HallView : public Calibration_HallViewBase
{
public:
    Calibration_HallView();
    virtual ~Calibration_HallView() {}
 8008080:	b510      	push	{r4, lr}
 8008082:	4b03      	ldr	r3, [pc, #12]	; (8008090 <_ZN20Calibration_HallViewD1Ev+0x10>)
 8008084:	6003      	str	r3, [r0, #0]
 8008086:	4604      	mov	r4, r0
 8008088:	f7fa fd36 	bl	8002af8 <_ZN24Calibration_HallViewBaseD1Ev>
 800808c:	4620      	mov	r0, r4
 800808e:	bd10      	pop	{r4, pc}
 8008090:	0802c0ac 	.word	0x0802c0ac

08008094 <_ZN20Calibration_HallViewD0Ev>:
 8008094:	b510      	push	{r4, lr}
 8008096:	4604      	mov	r4, r0
 8008098:	f7ff fff2 	bl	8008080 <_ZN20Calibration_HallViewD1Ev>
 800809c:	4620      	mov	r0, r4
 800809e:	f241 015c 	movw	r1, #4188	; 0x105c
 80080a2:	f01f fc9c 	bl	80279de <_ZdlPvj>
 80080a6:	4620      	mov	r0, r4
 80080a8:	bd10      	pop	{r4, pc}
	...

080080ac <_ZN20Calibration_HallViewC1Ev>:
Calibration_HallView::Calibration_HallView()
 80080ac:	b510      	push	{r4, lr}
 80080ae:	4604      	mov	r4, r0
 80080b0:	f7fa fd4a 	bl	8002b48 <_ZN24Calibration_HallViewBaseC1Ev>
 80080b4:	4b01      	ldr	r3, [pc, #4]	; (80080bc <_ZN20Calibration_HallViewC1Ev+0x10>)
 80080b6:	6023      	str	r3, [r4, #0]
}
 80080b8:	4620      	mov	r0, r4
 80080ba:	bd10      	pop	{r4, pc}
 80080bc:	0802c0ac 	.word	0x0802c0ac

080080c0 <_ZN20Calibration_HallView11setupScreenEv>:
    Calibration_HallViewBase::setupScreen();
 80080c0:	f7fa bcf6 	b.w	8002ab0 <_ZN24Calibration_HallViewBase11setupScreenEv>

080080c4 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 80080c4:	4770      	bx	lr

080080c6 <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 80080c6:	3804      	subs	r0, #4
 80080c8:	4770      	bx	lr

080080ca <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 80080ca:	4770      	bx	lr

080080cc <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 80080cc:	4770      	bx	lr

080080ce <_ZN24Calibration_PadPresenterD0Ev>:
 80080ce:	b510      	push	{r4, lr}
 80080d0:	2110      	movs	r1, #16
 80080d2:	4604      	mov	r4, r0
 80080d4:	f01f fc83 	bl	80279de <_ZdlPvj>
 80080d8:	4620      	mov	r0, r4
 80080da:	bd10      	pop	{r4, pc}

080080dc <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 80080dc:	f1a0 0004 	sub.w	r0, r0, #4
 80080e0:	e7f5      	b.n	80080ce <_ZN24Calibration_PadPresenterD0Ev>

080080e2 <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 80080e2:	4770      	bx	lr

080080e4 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 80080e4:	b510      	push	{r4, lr}
 80080e6:	2200      	movs	r2, #0
 80080e8:	6082      	str	r2, [r0, #8]
    : view(v)
 80080ea:	4a04      	ldr	r2, [pc, #16]	; (80080fc <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 80080ec:	60c1      	str	r1, [r0, #12]
 80080ee:	f102 0408 	add.w	r4, r2, #8
 80080f2:	3224      	adds	r2, #36	; 0x24
 80080f4:	6004      	str	r4, [r0, #0]
 80080f6:	6042      	str	r2, [r0, #4]
}
 80080f8:	bd10      	pop	{r4, pc}
 80080fa:	bf00      	nop
 80080fc:	0802c0dc 	.word	0x0802c0dc

08008100 <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 8008100:	4770      	bx	lr

08008102 <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 8008102:	4770      	bx	lr

08008104 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 8008104:	b510      	push	{r4, lr}
 8008106:	4b03      	ldr	r3, [pc, #12]	; (8008114 <_ZN19Calibration_PadViewD1Ev+0x10>)
 8008108:	6003      	str	r3, [r0, #0]
 800810a:	4604      	mov	r4, r0
 800810c:	f7fa fea4 	bl	8002e58 <_ZN23Calibration_PadViewBaseD1Ev>
 8008110:	4620      	mov	r0, r4
 8008112:	bd10      	pop	{r4, pc}
 8008114:	0802c114 	.word	0x0802c114

08008118 <_ZN19Calibration_PadViewD0Ev>:
 8008118:	b510      	push	{r4, lr}
 800811a:	4604      	mov	r4, r0
 800811c:	f7ff fff2 	bl	8008104 <_ZN19Calibration_PadViewD1Ev>
 8008120:	4620      	mov	r0, r4
 8008122:	f241 015c 	movw	r1, #4188	; 0x105c
 8008126:	f01f fc5a 	bl	80279de <_ZdlPvj>
 800812a:	4620      	mov	r0, r4
 800812c:	bd10      	pop	{r4, pc}
	...

08008130 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 8008130:	b510      	push	{r4, lr}
 8008132:	4604      	mov	r4, r0
 8008134:	f7fa feb8 	bl	8002ea8 <_ZN23Calibration_PadViewBaseC1Ev>
 8008138:	4b01      	ldr	r3, [pc, #4]	; (8008140 <_ZN19Calibration_PadViewC1Ev+0x10>)
 800813a:	6023      	str	r3, [r4, #0]
}
 800813c:	4620      	mov	r0, r4
 800813e:	bd10      	pop	{r4, pc}
 8008140:	0802c114 	.word	0x0802c114

08008144 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 8008144:	f7fa be64 	b.w	8002e10 <_ZN23Calibration_PadViewBase11setupScreenEv>

08008148 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8008148:	4770      	bx	lr

0800814a <_ZN19FrontendApplicationD0Ev>:
 800814a:	b510      	push	{r4, lr}
 800814c:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8008150:	4604      	mov	r4, r0
 8008152:	f01f fc44 	bl	80279de <_ZdlPvj>
 8008156:	4620      	mov	r0, r4
 8008158:	bd10      	pop	{r4, pc}

0800815a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800815a:	b510      	push	{r4, lr}
 800815c:	4604      	mov	r4, r0
    {
        model.tick();
 800815e:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 8008162:	f000 faf5 	bl	8008750 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8008166:	4620      	mov	r0, r4
    }
 8008168:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 800816c:	f00c bf9c 	b.w	80150a8 <_ZN8touchgfx11Application15handleTickEventEv>

08008170 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8008170:	b510      	push	{r4, lr}
 8008172:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8008174:	f7fb faaa 	bl	80036cc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8008178:	4b01      	ldr	r3, [pc, #4]	; (8008180 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800817a:	6023      	str	r3, [r4, #0]
{

}
 800817c:	4620      	mov	r0, r4
 800817e:	bd10      	pop	{r4, pc}
 8008180:	0802c14c 	.word	0x0802c14c

08008184 <_ZN17Gauge_with_ValuesD1Ev>:
 8008184:	b510      	push	{r4, lr}
 8008186:	4b03      	ldr	r3, [pc, #12]	; (8008194 <_ZN17Gauge_with_ValuesD1Ev+0x10>)
 8008188:	6003      	str	r3, [r0, #0]
 800818a:	4604      	mov	r4, r0
 800818c:	f7fc fda4 	bl	8004cd8 <_ZN21Gauge_with_ValuesBaseD1Ev>
 8008190:	4620      	mov	r0, r4
 8008192:	bd10      	pop	{r4, pc}
 8008194:	0802c1a0 	.word	0x0802c1a0

08008198 <_ZN17Gauge_with_ValuesD0Ev>:
 8008198:	b510      	push	{r4, lr}
 800819a:	4604      	mov	r4, r0
 800819c:	f7ff fff2 	bl	8008184 <_ZN17Gauge_with_ValuesD1Ev>
 80081a0:	4620      	mov	r0, r4
 80081a2:	f44f 7162 	mov.w	r1, #904	; 0x388
 80081a6:	f01f fc1a 	bl	80279de <_ZdlPvj>
 80081aa:	4620      	mov	r0, r4
 80081ac:	bd10      	pop	{r4, pc}
	...

080081b0 <_ZN17Gauge_with_ValuesC1Ev>:
#include <gui/containers/Gauge_with_Values.hpp>

Gauge_with_Values::Gauge_with_Values()
 80081b0:	b510      	push	{r4, lr}
 80081b2:	4604      	mov	r4, r0
 80081b4:	f7fc fd9a 	bl	8004cec <_ZN21Gauge_with_ValuesBaseC1Ev>
 80081b8:	4b01      	ldr	r3, [pc, #4]	; (80081c0 <_ZN17Gauge_with_ValuesC1Ev+0x10>)
 80081ba:	6023      	str	r3, [r4, #0]
{

}
 80081bc:	4620      	mov	r0, r4
 80081be:	bd10      	pop	{r4, pc}
 80081c0:	0802c1a0 	.word	0x0802c1a0

080081c4 <_ZN17Gauge_with_Values10initializeEv>:

void Gauge_with_Values::initialize()
{
    Gauge_with_ValuesBase::initialize();
 80081c4:	f7fc bd89 	b.w	8004cda <_ZN21Gauge_with_ValuesBase10initializeEv>

080081c8 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 80081c8:	4770      	bx	lr

080081ca <_ZThn4_N18Main_MenuPresenterD1Ev>:
 80081ca:	3804      	subs	r0, #4
 80081cc:	4770      	bx	lr

080081ce <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 80081ce:	4770      	bx	lr

080081d0 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80081d0:	68c0      	ldr	r0, [r0, #12]
 80081d2:	6803      	ldr	r3, [r0, #0]
 80081d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80081d6:	4718      	bx	r3

080081d8 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80081d8:	f1a0 0004 	sub.w	r0, r0, #4
 80081dc:	f7ff bff8 	b.w	80081d0 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

080081e0 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 80081e0:	b510      	push	{r4, lr}
 80081e2:	2110      	movs	r1, #16
 80081e4:	4604      	mov	r4, r0
 80081e6:	f01f fbfa 	bl	80279de <_ZdlPvj>
 80081ea:	4620      	mov	r0, r4
 80081ec:	bd10      	pop	{r4, pc}

080081ee <_ZThn4_N18Main_MenuPresenterD0Ev>:
 80081ee:	f1a0 0004 	sub.w	r0, r0, #4
 80081f2:	e7f5      	b.n	80081e0 <_ZN18Main_MenuPresenterD0Ev>

080081f4 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 80081f4:	b510      	push	{r4, lr}
 80081f6:	2200      	movs	r2, #0
 80081f8:	6082      	str	r2, [r0, #8]
    : view(v)
 80081fa:	4a04      	ldr	r2, [pc, #16]	; (800820c <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 80081fc:	60c1      	str	r1, [r0, #12]
 80081fe:	f102 0408 	add.w	r4, r2, #8
 8008202:	3224      	adds	r2, #36	; 0x24
 8008204:	6004      	str	r4, [r0, #0]
 8008206:	6042      	str	r2, [r0, #4]
}
 8008208:	bd10      	pop	{r4, pc}
 800820a:	bf00      	nop
 800820c:	0802c22c 	.word	0x0802c22c

08008210 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 8008210:	4770      	bx	lr
	...

08008214 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8008214:	b510      	push	{r4, lr}
 8008216:	4b03      	ldr	r3, [pc, #12]	; (8008224 <_ZN13Main_MenuViewD1Ev+0x10>)
 8008218:	6003      	str	r3, [r0, #0]
 800821a:	4604      	mov	r4, r0
 800821c:	f7fc ff62 	bl	80050e4 <_ZN17Main_MenuViewBaseD1Ev>
 8008220:	4620      	mov	r0, r4
 8008222:	bd10      	pop	{r4, pc}
 8008224:	0802c264 	.word	0x0802c264

08008228 <_ZN13Main_MenuViewD0Ev>:
 8008228:	b510      	push	{r4, lr}
 800822a:	4604      	mov	r4, r0
 800822c:	f7ff fff2 	bl	8008214 <_ZN13Main_MenuViewD1Ev>
 8008230:	4620      	mov	r0, r4
 8008232:	f241 117c 	movw	r1, #4476	; 0x117c
 8008236:	f01f fbd2 	bl	80279de <_ZdlPvj>
 800823a:	4620      	mov	r0, r4
 800823c:	bd10      	pop	{r4, pc}
	...

08008240 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 8008240:	b510      	push	{r4, lr}
 8008242:	4604      	mov	r4, r0
 8008244:	f7fc ff98 	bl	8005178 <_ZN17Main_MenuViewBaseC1Ev>
 8008248:	4b01      	ldr	r3, [pc, #4]	; (8008250 <_ZN13Main_MenuViewC1Ev+0x10>)
 800824a:	6023      	str	r3, [r4, #0]
}
 800824c:	4620      	mov	r0, r4
 800824e:	bd10      	pop	{r4, pc}
 8008250:	0802c264 	.word	0x0802c264

08008254 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 8008254:	f7fc bf22 	b.w	800509c <_ZN17Main_MenuViewBase11setupScreenEv>

08008258 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 8008258:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 800825a:	4a0a      	ldr	r2, [pc, #40]	; (8008284 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 800825c:	4605      	mov	r5, r0
 800825e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008260:	460b      	mov	r3, r1
 8008262:	f500 7055 	add.w	r0, r0, #852	; 0x354
 8008266:	2104      	movs	r1, #4
 8008268:	f00f ffbe 	bl	80181e8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 800826c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008270:	f00d ff3e 	bl	80160f0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008274:	b92c      	cbnz	r4, 8008282 <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 8008276:	f00c fe53 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800827a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800827e:	f7fb bb55 	b.w	800392c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008282:	bd38      	pop	{r3, r4, r5, pc}
 8008284:	0802c038 	.word	0x0802c038

08008288 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 8008288:	4770      	bx	lr

0800828a <_ZThn4_N20MeasurementPresenterD1Ev>:
 800828a:	3804      	subs	r0, #4
 800828c:	4770      	bx	lr

0800828e <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 800828e:	4770      	bx	lr

08008290 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008290:	68c0      	ldr	r0, [r0, #12]
 8008292:	6803      	ldr	r3, [r0, #0]
 8008294:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008296:	4718      	bx	r3

08008298 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008298:	f1a0 0004 	sub.w	r0, r0, #4
 800829c:	f7ff bff8 	b.w	8008290 <_ZN20MeasurementPresenter15setTimeoutValueEi>

080082a0 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 80082a0:	b510      	push	{r4, lr}
 80082a2:	2110      	movs	r1, #16
 80082a4:	4604      	mov	r4, r0
 80082a6:	f01f fb9a 	bl	80279de <_ZdlPvj>
 80082aa:	4620      	mov	r0, r4
 80082ac:	bd10      	pop	{r4, pc}

080082ae <_ZThn4_N20MeasurementPresenterD0Ev>:
 80082ae:	f1a0 0004 	sub.w	r0, r0, #4
 80082b2:	e7f5      	b.n	80082a0 <_ZN20MeasurementPresenterD0Ev>

080082b4 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 80082b4:	b510      	push	{r4, lr}
 80082b6:	2200      	movs	r2, #0
 80082b8:	6082      	str	r2, [r0, #8]
    : view(v)
 80082ba:	4a04      	ldr	r2, [pc, #16]	; (80082cc <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 80082bc:	60c1      	str	r1, [r0, #12]
 80082be:	f102 0408 	add.w	r4, r2, #8
 80082c2:	3224      	adds	r2, #36	; 0x24
 80082c4:	6004      	str	r4, [r0, #0]
 80082c6:	6042      	str	r2, [r0, #4]
}
 80082c8:	bd10      	pop	{r4, pc}
 80082ca:	bf00      	nop
 80082cc:	0802c294 	.word	0x0802c294

080082d0 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 80082d0:	4770      	bx	lr
	...

080082d4 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 80082d4:	b510      	push	{r4, lr}
 80082d6:	4b03      	ldr	r3, [pc, #12]	; (80082e4 <_ZN15MeasurementViewD1Ev+0x10>)
 80082d8:	6003      	str	r3, [r0, #0]
 80082da:	4604      	mov	r4, r0
 80082dc:	f7fd f9bc 	bl	8005658 <_ZN19MeasurementViewBaseD1Ev>
 80082e0:	4620      	mov	r0, r4
 80082e2:	bd10      	pop	{r4, pc}
 80082e4:	0802c2cc 	.word	0x0802c2cc

080082e8 <_ZN15MeasurementViewD0Ev>:
 80082e8:	b510      	push	{r4, lr}
 80082ea:	4604      	mov	r4, r0
 80082ec:	f7ff fff2 	bl	80082d4 <_ZN15MeasurementViewD1Ev>
 80082f0:	4620      	mov	r0, r4
 80082f2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80082f6:	f01f fb72 	bl	80279de <_ZdlPvj>
 80082fa:	4620      	mov	r0, r4
 80082fc:	bd10      	pop	{r4, pc}
	...

08008300 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 8008300:	b510      	push	{r4, lr}
 8008302:	4604      	mov	r4, r0
 8008304:	f7fd f9e2 	bl	80056cc <_ZN19MeasurementViewBaseC1Ev>
 8008308:	4b01      	ldr	r3, [pc, #4]	; (8008310 <_ZN15MeasurementViewC1Ev+0x10>)
 800830a:	6023      	str	r3, [r4, #0]
}
 800830c:	4620      	mov	r0, r4
 800830e:	bd10      	pop	{r4, pc}
 8008310:	0802c2cc 	.word	0x0802c2cc

08008314 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8008314:	f7fd b97c 	b.w	8005610 <_ZN19MeasurementViewBase11setupScreenEv>

08008318 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8008318:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800831a:	4a0a      	ldr	r2, [pc, #40]	; (8008344 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 800831c:	4605      	mov	r5, r0
 800831e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008320:	460b      	mov	r3, r1
 8008322:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008326:	2104      	movs	r1, #4
 8008328:	f00f ff5e 	bl	80181e8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 800832c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008330:	f00d fede 	bl	80160f0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008334:	b92c      	cbnz	r4, 8008342 <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 8008336:	f00c fdf3 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800833a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800833e:	f7fb baf5 	b.w	800392c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008342:	bd38      	pop	{r3, r4, r5, pc}
 8008344:	0802c038 	.word	0x0802c038

08008348 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 8008348:	4770      	bx	lr

0800834a <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 800834a:	3804      	subs	r0, #4
 800834c:	4770      	bx	lr

0800834e <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 800834e:	4770      	bx	lr

08008350 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008350:	68c0      	ldr	r0, [r0, #12]
 8008352:	6803      	ldr	r3, [r0, #0]
 8008354:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008356:	4718      	bx	r3

08008358 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008358:	f1a0 0004 	sub.w	r0, r0, #4
 800835c:	f7ff bff8 	b.w	8008350 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

08008360 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 8008360:	b510      	push	{r4, lr}
 8008362:	2110      	movs	r1, #16
 8008364:	4604      	mov	r4, r0
 8008366:	f01f fb3a 	bl	80279de <_ZdlPvj>
 800836a:	4620      	mov	r0, r4
 800836c:	bd10      	pop	{r4, pc}

0800836e <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 800836e:	f1a0 0004 	sub.w	r0, r0, #4
 8008372:	e7f5      	b.n	8008360 <_ZN29Measurement_AccuratePresenterD0Ev>

08008374 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 8008374:	b510      	push	{r4, lr}
 8008376:	2200      	movs	r2, #0
 8008378:	6082      	str	r2, [r0, #8]
    : view(v)
 800837a:	4a04      	ldr	r2, [pc, #16]	; (800838c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 800837c:	60c1      	str	r1, [r0, #12]
 800837e:	f102 0408 	add.w	r4, r2, #8
 8008382:	3224      	adds	r2, #36	; 0x24
 8008384:	6004      	str	r4, [r0, #0]
 8008386:	6042      	str	r2, [r0, #4]
}
 8008388:	bd10      	pop	{r4, pc}
 800838a:	bf00      	nop
 800838c:	0802c2fc 	.word	0x0802c2fc

08008390 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 8008390:	4770      	bx	lr
	...

08008394 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8008394:	b510      	push	{r4, lr}
 8008396:	4b03      	ldr	r3, [pc, #12]	; (80083a4 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 8008398:	6003      	str	r3, [r0, #0]
 800839a:	4604      	mov	r4, r0
 800839c:	f7fd fbde 	bl	8005b5c <_ZN28Measurement_AccurateViewBaseD1Ev>
 80083a0:	4620      	mov	r0, r4
 80083a2:	bd10      	pop	{r4, pc}
 80083a4:	0802c334 	.word	0x0802c334

080083a8 <_ZN24Measurement_AccurateViewD0Ev>:
 80083a8:	b510      	push	{r4, lr}
 80083aa:	4604      	mov	r4, r0
 80083ac:	f7ff fff2 	bl	8008394 <_ZN24Measurement_AccurateViewD1Ev>
 80083b0:	4620      	mov	r0, r4
 80083b2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80083b6:	f01f fb12 	bl	80279de <_ZdlPvj>
 80083ba:	4620      	mov	r0, r4
 80083bc:	bd10      	pop	{r4, pc}
	...

080083c0 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 80083c0:	b510      	push	{r4, lr}
 80083c2:	4604      	mov	r4, r0
 80083c4:	f7fd fc04 	bl	8005bd0 <_ZN28Measurement_AccurateViewBaseC1Ev>
 80083c8:	4b01      	ldr	r3, [pc, #4]	; (80083d0 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 80083ca:	6023      	str	r3, [r4, #0]
}
 80083cc:	4620      	mov	r0, r4
 80083ce:	bd10      	pop	{r4, pc}
 80083d0:	0802c334 	.word	0x0802c334

080083d4 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 80083d4:	f7fd bb9e 	b.w	8005b14 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

080083d8 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 80083d8:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80083da:	4a0a      	ldr	r2, [pc, #40]	; (8008404 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 80083dc:	4605      	mov	r5, r0
 80083de:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80083e0:	460b      	mov	r3, r1
 80083e2:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80083e6:	2104      	movs	r1, #4
 80083e8:	f00f fefe 	bl	80181e8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80083ec:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80083f0:	f00d fe7e 	bl	80160f0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80083f4:	b92c      	cbnz	r4, 8008402 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 80083f6:	f00c fd93 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80083fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80083fe:	f7fb ba95 	b.w	800392c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008402:	bd38      	pop	{r3, r4, r5, pc}
 8008404:	0802c038 	.word	0x0802c038

08008408 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8008408:	4770      	bx	lr

0800840a <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 800840a:	3804      	subs	r0, #4
 800840c:	4770      	bx	lr

0800840e <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 800840e:	4770      	bx	lr

08008410 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8008410:	4770      	bx	lr

08008412 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008412:	b510      	push	{r4, lr}
 8008414:	2110      	movs	r1, #16
 8008416:	4604      	mov	r4, r0
 8008418:	f01f fae1 	bl	80279de <_ZdlPvj>
 800841c:	4620      	mov	r0, r4
 800841e:	bd10      	pop	{r4, pc}

08008420 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008420:	f1a0 0004 	sub.w	r0, r0, #4
 8008424:	e7f5      	b.n	8008412 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

08008426 <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 8008426:	4770      	bx	lr

08008428 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8008428:	b510      	push	{r4, lr}
 800842a:	2200      	movs	r2, #0
 800842c:	6082      	str	r2, [r0, #8]
    : view(v)
 800842e:	4a04      	ldr	r2, [pc, #16]	; (8008440 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 8008430:	60c1      	str	r1, [r0, #12]
 8008432:	f102 0408 	add.w	r4, r2, #8
 8008436:	3224      	adds	r2, #36	; 0x24
 8008438:	6004      	str	r4, [r0, #0]
 800843a:	6042      	str	r2, [r0, #4]
}
 800843c:	bd10      	pop	{r4, pc}
 800843e:	bf00      	nop
 8008440:	0802c364 	.word	0x0802c364

08008444 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 8008444:	4770      	bx	lr
	...

08008448 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 8008448:	b510      	push	{r4, lr}
 800844a:	4b03      	ldr	r3, [pc, #12]	; (8008458 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 800844c:	6003      	str	r3, [r0, #0]
 800844e:	4604      	mov	r4, r0
 8008450:	f7fd fe10 	bl	8006074 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8008454:	4620      	mov	r0, r4
 8008456:	bd10      	pop	{r4, pc}
 8008458:	0802c39c 	.word	0x0802c39c

0800845c <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 800845c:	b510      	push	{r4, lr}
 800845e:	4604      	mov	r4, r0
 8008460:	f7ff fff2 	bl	8008448 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 8008464:	4620      	mov	r0, r4
 8008466:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800846a:	f01f fab8 	bl	80279de <_ZdlPvj>
 800846e:	4620      	mov	r0, r4
 8008470:	bd10      	pop	{r4, pc}
	...

08008474 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 8008474:	b510      	push	{r4, lr}
 8008476:	4604      	mov	r4, r0
 8008478:	f7fd fe1c 	bl	80060b4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 800847c:	4b01      	ldr	r3, [pc, #4]	; (8008484 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 800847e:	6023      	str	r3, [r4, #0]
}
 8008480:	4620      	mov	r0, r4
 8008482:	bd10      	pop	{r4, pc}
 8008484:	0802c39c 	.word	0x0802c39c

08008488 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 8008488:	f7fd bde5 	b.w	8006056 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

0800848c <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 800848c:	4770      	bx	lr

0800848e <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 800848e:	3804      	subs	r0, #4
 8008490:	4770      	bx	lr

08008492 <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 8008492:	4770      	bx	lr

08008494 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8008494:	4770      	bx	lr

08008496 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008496:	b510      	push	{r4, lr}
 8008498:	2110      	movs	r1, #16
 800849a:	4604      	mov	r4, r0
 800849c:	f01f fa9f 	bl	80279de <_ZdlPvj>
 80084a0:	4620      	mov	r0, r4
 80084a2:	bd10      	pop	{r4, pc}

080084a4 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 80084a4:	f1a0 0004 	sub.w	r0, r0, #4
 80084a8:	e7f5      	b.n	8008496 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

080084aa <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 80084aa:	4770      	bx	lr

080084ac <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 80084ac:	b510      	push	{r4, lr}
 80084ae:	2200      	movs	r2, #0
 80084b0:	6082      	str	r2, [r0, #8]
    : view(v)
 80084b2:	4a04      	ldr	r2, [pc, #16]	; (80084c4 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 80084b4:	60c1      	str	r1, [r0, #12]
 80084b6:	f102 0408 	add.w	r4, r2, #8
 80084ba:	3224      	adds	r2, #36	; 0x24
 80084bc:	6004      	str	r4, [r0, #0]
 80084be:	6042      	str	r2, [r0, #4]
}
 80084c0:	bd10      	pop	{r4, pc}
 80084c2:	bf00      	nop
 80084c4:	0802c3c8 	.word	0x0802c3c8

080084c8 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 80084c8:	4770      	bx	lr
	...

080084cc <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 80084cc:	b510      	push	{r4, lr}
 80084ce:	4b03      	ldr	r3, [pc, #12]	; (80084dc <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 80084d0:	6003      	str	r3, [r0, #0]
 80084d2:	4604      	mov	r4, r0
 80084d4:	f7fd ff92 	bl	80063fc <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 80084d8:	4620      	mov	r0, r4
 80084da:	bd10      	pop	{r4, pc}
 80084dc:	0802c400 	.word	0x0802c400

080084e0 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 80084e0:	b510      	push	{r4, lr}
 80084e2:	4604      	mov	r4, r0
 80084e4:	f7ff fff2 	bl	80084cc <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 80084e8:	4620      	mov	r0, r4
 80084ea:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80084ee:	f01f fa76 	bl	80279de <_ZdlPvj>
 80084f2:	4620      	mov	r0, r4
 80084f4:	bd10      	pop	{r4, pc}
	...

080084f8 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 80084f8:	b510      	push	{r4, lr}
 80084fa:	4604      	mov	r4, r0
 80084fc:	f7fd ff9e 	bl	800643c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 8008500:	4b01      	ldr	r3, [pc, #4]	; (8008508 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 8008502:	6023      	str	r3, [r4, #0]
}
 8008504:	4620      	mov	r0, r4
 8008506:	bd10      	pop	{r4, pc}
 8008508:	0802c400 	.word	0x0802c400

0800850c <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 800850c:	f7fd bf67 	b.w	80063de <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

08008510 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 8008510:	4770      	bx	lr

08008512 <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 8008512:	3804      	subs	r0, #4
 8008514:	4770      	bx	lr

08008516 <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 8008516:	4770      	bx	lr

08008518 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008518:	68c0      	ldr	r0, [r0, #12]
 800851a:	6803      	ldr	r3, [r0, #0]
 800851c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800851e:	4718      	bx	r3

08008520 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008520:	f1a0 0004 	sub.w	r0, r0, #4
 8008524:	f7ff bff8 	b.w	8008518 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

08008528 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 8008528:	b510      	push	{r4, lr}
 800852a:	2110      	movs	r1, #16
 800852c:	4604      	mov	r4, r0
 800852e:	f01f fa56 	bl	80279de <_ZdlPvj>
 8008532:	4620      	mov	r0, r4
 8008534:	bd10      	pop	{r4, pc}

08008536 <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 8008536:	f1a0 0004 	sub.w	r0, r0, #4
 800853a:	e7f5      	b.n	8008528 <_ZN27Measurement_SinglePresenterD0Ev>

0800853c <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 800853c:	b510      	push	{r4, lr}
 800853e:	2200      	movs	r2, #0
 8008540:	6082      	str	r2, [r0, #8]
    : view(v)
 8008542:	4a04      	ldr	r2, [pc, #16]	; (8008554 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 8008544:	60c1      	str	r1, [r0, #12]
 8008546:	f102 0408 	add.w	r4, r2, #8
 800854a:	3224      	adds	r2, #36	; 0x24
 800854c:	6004      	str	r4, [r0, #0]
 800854e:	6042      	str	r2, [r0, #4]
}
 8008550:	bd10      	pop	{r4, pc}
 8008552:	bf00      	nop
 8008554:	0802c42c 	.word	0x0802c42c

08008558 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 8008558:	4770      	bx	lr
	...

0800855c <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 800855c:	b510      	push	{r4, lr}
 800855e:	4b03      	ldr	r3, [pc, #12]	; (800856c <_ZN22Measurement_SingleViewD1Ev+0x10>)
 8008560:	6003      	str	r3, [r0, #0]
 8008562:	4604      	mov	r4, r0
 8008564:	f7fe f900 	bl	8006768 <_ZN26Measurement_SingleViewBaseD1Ev>
 8008568:	4620      	mov	r0, r4
 800856a:	bd10      	pop	{r4, pc}
 800856c:	0802c464 	.word	0x0802c464

08008570 <_ZN22Measurement_SingleViewD0Ev>:
 8008570:	b510      	push	{r4, lr}
 8008572:	4604      	mov	r4, r0
 8008574:	f7ff fff2 	bl	800855c <_ZN22Measurement_SingleViewD1Ev>
 8008578:	4620      	mov	r0, r4
 800857a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800857e:	f01f fa2e 	bl	80279de <_ZdlPvj>
 8008582:	4620      	mov	r0, r4
 8008584:	bd10      	pop	{r4, pc}
	...

08008588 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 8008588:	b510      	push	{r4, lr}
 800858a:	4604      	mov	r4, r0
 800858c:	f7fe f926 	bl	80067dc <_ZN26Measurement_SingleViewBaseC1Ev>
 8008590:	4b01      	ldr	r3, [pc, #4]	; (8008598 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 8008592:	6023      	str	r3, [r4, #0]
}
 8008594:	4620      	mov	r0, r4
 8008596:	bd10      	pop	{r4, pc}
 8008598:	0802c464 	.word	0x0802c464

0800859c <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 800859c:	f7fe b8c0 	b.w	8006720 <_ZN26Measurement_SingleViewBase11setupScreenEv>

080085a0 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 80085a0:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80085a2:	4a0a      	ldr	r2, [pc, #40]	; (80085cc <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 80085a4:	4605      	mov	r5, r0
 80085a6:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80085a8:	460b      	mov	r3, r1
 80085aa:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80085ae:	2104      	movs	r1, #4
 80085b0:	f00f fe1a 	bl	80181e8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80085b4:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80085b8:	f00d fd9a 	bl	80160f0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80085bc:	b92c      	cbnz	r4, 80085ca <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 80085be:	f00c fcaf 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80085c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80085c6:	f7fb b9b1 	b.w	800392c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80085ca:	bd38      	pop	{r3, r4, r5, pc}
 80085cc:	0802c038 	.word	0x0802c038

080085d0 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 80085d0:	4770      	bx	lr

080085d2 <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 80085d2:	3804      	subs	r0, #4
 80085d4:	4770      	bx	lr

080085d6 <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 80085d6:	4770      	bx	lr

080085d8 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 80085d8:	4770      	bx	lr

080085da <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 80085da:	b510      	push	{r4, lr}
 80085dc:	2110      	movs	r1, #16
 80085de:	4604      	mov	r4, r0
 80085e0:	f01f f9fd 	bl	80279de <_ZdlPvj>
 80085e4:	4620      	mov	r0, r4
 80085e6:	bd10      	pop	{r4, pc}

080085e8 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 80085e8:	f1a0 0004 	sub.w	r0, r0, #4
 80085ec:	e7f5      	b.n	80085da <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

080085ee <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 80085ee:	4770      	bx	lr

080085f0 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 80085f0:	b510      	push	{r4, lr}
 80085f2:	2200      	movs	r2, #0
 80085f4:	6082      	str	r2, [r0, #8]
    : view(v)
 80085f6:	4a04      	ldr	r2, [pc, #16]	; (8008608 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 80085f8:	60c1      	str	r1, [r0, #12]
 80085fa:	f102 0408 	add.w	r4, r2, #8
 80085fe:	3224      	adds	r2, #36	; 0x24
 8008600:	6004      	str	r4, [r0, #0]
 8008602:	6042      	str	r2, [r0, #4]
}
 8008604:	bd10      	pop	{r4, pc}
 8008606:	bf00      	nop
 8008608:	0802c494 	.word	0x0802c494

0800860c <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 800860c:	4770      	bx	lr
	...

08008610 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 8008610:	b510      	push	{r4, lr}
 8008612:	4b03      	ldr	r3, [pc, #12]	; (8008620 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8008614:	6003      	str	r3, [r0, #0]
 8008616:	4604      	mov	r4, r0
 8008618:	f7fe fb2e 	bl	8006c78 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 800861c:	4620      	mov	r0, r4
 800861e:	bd10      	pop	{r4, pc}
 8008620:	0802c4cc 	.word	0x0802c4cc

08008624 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 8008624:	b510      	push	{r4, lr}
 8008626:	4604      	mov	r4, r0
 8008628:	f7ff fff2 	bl	8008610 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 800862c:	4620      	mov	r0, r4
 800862e:	f241 31f4 	movw	r1, #5108	; 0x13f4
 8008632:	f01f f9d4 	bl	80279de <_ZdlPvj>
 8008636:	4620      	mov	r0, r4
 8008638:	bd10      	pop	{r4, pc}
	...

0800863c <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 800863c:	b510      	push	{r4, lr}
 800863e:	4604      	mov	r4, r0
 8008640:	f7fe fb42 	bl	8006cc8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 8008644:	4b01      	ldr	r3, [pc, #4]	; (800864c <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 8008646:	6023      	str	r3, [r4, #0]
}
 8008648:	4620      	mov	r0, r4
 800864a:	bd10      	pop	{r4, pc}
 800864c:	0802c4cc 	.word	0x0802c4cc

08008650 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 8008650:	f7fe baeb 	b.w	8006c2a <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

08008654 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 8008654:	b513      	push	{r0, r1, r4, lr}
 8008656:	4604      	mov	r4, r0
#ifndef SIMULATOR
	int test = 	0;

	test = updateGUI_test();
 8008658:	f7f8 fec6 	bl	80013e8 <updateGUI_test>
 800865c:	4603      	mov	r3, r0

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(test);
 800865e:	4619      	mov	r1, r3
 8008660:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 8008664:	e9cd 0300 	strd	r0, r3, [sp]
 8008668:	f009 fcee 	bl	8012048 <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 800866c:	9800      	ldr	r0, [sp, #0]
 800866e:	f00d fd3f 	bl	80160f0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 8008672:	9b01      	ldr	r3, [sp, #4]
 8008674:	4a11      	ldr	r2, [pc, #68]	; (80086bc <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x68>)
 8008676:	9300      	str	r3, [sp, #0]
 8008678:	210a      	movs	r1, #10
 800867a:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 800867e:	f00f fdb3 	bl	80181e8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 8008682:	f504 7020 	add.w	r0, r4, #640	; 0x280
 8008686:	f00d fd33 	bl	80160f0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%d", test);
 800868a:	9b00      	ldr	r3, [sp, #0]
 800868c:	4a0b      	ldr	r2, [pc, #44]	; (80086bc <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x68>)
 800868e:	210a      	movs	r1, #10
 8008690:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 8008694:	f00f fda8 	bl	80181e8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Frequency.invalidate();
 8008698:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 800869c:	f00d fd28 	bl	80160f0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%d", test);
 80086a0:	9b00      	ldr	r3, [sp, #0]
 80086a2:	4a06      	ldr	r2, [pc, #24]	; (80086bc <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x68>)
 80086a4:	210a      	movs	r1, #10
 80086a6:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 80086aa:	f00f fd9d 	bl	80181e8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Distance.invalidate();
 80086ae:	f504 7046 	add.w	r0, r4, #792	; 0x318
#endif
}
 80086b2:	b002      	add	sp, #8
 80086b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	SMD1_Distance.invalidate();
 80086b8:	f00d bd1a 	b.w	80160f0 <_ZNK8touchgfx8Drawable10invalidateEv>
 80086bc:	0802c038 	.word	0x0802c038

080086c0 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 80086c0:	4770      	bx	lr

080086c2 <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 80086c2:	3804      	subs	r0, #4
 80086c4:	4770      	bx	lr

080086c6 <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 80086c6:	4770      	bx	lr

080086c8 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 80086c8:	4770      	bx	lr

080086ca <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 80086ca:	b510      	push	{r4, lr}
 80086cc:	2110      	movs	r1, #16
 80086ce:	4604      	mov	r4, r0
 80086d0:	f01f f985 	bl	80279de <_ZdlPvj>
 80086d4:	4620      	mov	r0, r4
 80086d6:	bd10      	pop	{r4, pc}

080086d8 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 80086d8:	f1a0 0004 	sub.w	r0, r0, #4
 80086dc:	e7f5      	b.n	80086ca <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

080086de <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 80086de:	4770      	bx	lr

080086e0 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 80086e0:	b510      	push	{r4, lr}
 80086e2:	2200      	movs	r2, #0
 80086e4:	6082      	str	r2, [r0, #8]
    : view(v)
 80086e6:	4a04      	ldr	r2, [pc, #16]	; (80086f8 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 80086e8:	60c1      	str	r1, [r0, #12]
 80086ea:	f102 0408 	add.w	r4, r2, #8
 80086ee:	3224      	adds	r2, #36	; 0x24
 80086f0:	6004      	str	r4, [r0, #0]
 80086f2:	6042      	str	r2, [r0, #4]
}
 80086f4:	bd10      	pop	{r4, pc}
 80086f6:	bf00      	nop
 80086f8:	0802c4fc 	.word	0x0802c4fc

080086fc <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 80086fc:	4770      	bx	lr
	...

08008700 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 8008700:	b510      	push	{r4, lr}
 8008702:	4b03      	ldr	r3, [pc, #12]	; (8008710 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8008704:	6003      	str	r3, [r0, #0]
 8008706:	4604      	mov	r4, r0
 8008708:	f7fe fe48 	bl	800739c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 800870c:	4620      	mov	r0, r4
 800870e:	bd10      	pop	{r4, pc}
 8008710:	0802c534 	.word	0x0802c534

08008714 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8008714:	b510      	push	{r4, lr}
 8008716:	4604      	mov	r4, r0
 8008718:	f7ff fff2 	bl	8008700 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 800871c:	4620      	mov	r0, r4
 800871e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8008722:	f01f f95c 	bl	80279de <_ZdlPvj>
 8008726:	4620      	mov	r0, r4
 8008728:	bd10      	pop	{r4, pc}
	...

0800872c <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 800872c:	b510      	push	{r4, lr}
 800872e:	4604      	mov	r4, r0
 8008730:	f7fe fe54 	bl	80073dc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 8008734:	4b01      	ldr	r3, [pc, #4]	; (800873c <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 8008736:	6023      	str	r3, [r4, #0]
}
 8008738:	4620      	mov	r0, r4
 800873a:	bd10      	pop	{r4, pc}
 800873c:	0802c534 	.word	0x0802c534

08008740 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 8008740:	f7fe be1b 	b.w	800737a <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

08008744 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 8008744:	2100      	movs	r1, #0
 8008746:	223c      	movs	r2, #60	; 0x3c
 8008748:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 800874c:	4770      	bx	lr
	...

08008750 <_ZN5Model4tickEv>:

void Model::tick()
{
 8008750:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8008752:	4d0a      	ldr	r5, [pc, #40]	; (800877c <_ZN5Model4tickEv+0x2c>)
{
 8008754:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8008756:	6828      	ldr	r0, [r5, #0]
 8008758:	f004 fb44 	bl	800cde4 <osMessageQueueGetCount>
 800875c:	b168      	cbz	r0, 800877a <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 800875e:	2300      	movs	r3, #0
 8008760:	6828      	ldr	r0, [r5, #0]
 8008762:	461a      	mov	r2, r3
 8008764:	1d21      	adds	r1, r4, #4
 8008766:	f004 fb09 	bl	800cd7c <osMessageQueueGet>
 800876a:	b930      	cbnz	r0, 800877a <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 800876c:	6820      	ldr	r0, [r4, #0]
 800876e:	6861      	ldr	r1, [r4, #4]
 8008770:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 8008772:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 8008776:	689b      	ldr	r3, [r3, #8]
 8008778:	4718      	bx	r3
}
 800877a:	bd70      	pop	{r4, r5, r6, pc}
 800877c:	20002630 	.word	0x20002630

08008780 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 8008780:	4770      	bx	lr

08008782 <_ZThn4_N21Project_InfoPresenterD1Ev>:
 8008782:	3804      	subs	r0, #4
 8008784:	4770      	bx	lr

08008786 <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 8008786:	4770      	bx	lr

08008788 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008788:	68c0      	ldr	r0, [r0, #12]
 800878a:	6803      	ldr	r3, [r0, #0]
 800878c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800878e:	4718      	bx	r3

08008790 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008790:	f1a0 0004 	sub.w	r0, r0, #4
 8008794:	f7ff bff8 	b.w	8008788 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

08008798 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 8008798:	b510      	push	{r4, lr}
 800879a:	2110      	movs	r1, #16
 800879c:	4604      	mov	r4, r0
 800879e:	f01f f91e 	bl	80279de <_ZdlPvj>
 80087a2:	4620      	mov	r0, r4
 80087a4:	bd10      	pop	{r4, pc}

080087a6 <_ZThn4_N21Project_InfoPresenterD0Ev>:
 80087a6:	f1a0 0004 	sub.w	r0, r0, #4
 80087aa:	e7f5      	b.n	8008798 <_ZN21Project_InfoPresenterD0Ev>

080087ac <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 80087ac:	b510      	push	{r4, lr}
 80087ae:	2200      	movs	r2, #0
 80087b0:	6082      	str	r2, [r0, #8]
    : view(v)
 80087b2:	4a04      	ldr	r2, [pc, #16]	; (80087c4 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 80087b4:	60c1      	str	r1, [r0, #12]
 80087b6:	f102 0408 	add.w	r4, r2, #8
 80087ba:	3224      	adds	r2, #36	; 0x24
 80087bc:	6004      	str	r4, [r0, #0]
 80087be:	6042      	str	r2, [r0, #4]
}
 80087c0:	bd10      	pop	{r4, pc}
 80087c2:	bf00      	nop
 80087c4:	0802c560 	.word	0x0802c560

080087c8 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 80087c8:	4770      	bx	lr
	...

080087cc <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 80087cc:	b510      	push	{r4, lr}
 80087ce:	4b03      	ldr	r3, [pc, #12]	; (80087dc <_ZN16Project_InfoViewD1Ev+0x10>)
 80087d0:	6003      	str	r3, [r0, #0]
 80087d2:	4604      	mov	r4, r0
 80087d4:	f7fe ff9c 	bl	8007710 <_ZN20Project_InfoViewBaseD1Ev>
 80087d8:	4620      	mov	r0, r4
 80087da:	bd10      	pop	{r4, pc}
 80087dc:	0802c598 	.word	0x0802c598

080087e0 <_ZN16Project_InfoViewD0Ev>:
 80087e0:	b510      	push	{r4, lr}
 80087e2:	4604      	mov	r4, r0
 80087e4:	f7ff fff2 	bl	80087cc <_ZN16Project_InfoViewD1Ev>
 80087e8:	4620      	mov	r0, r4
 80087ea:	f241 01b0 	movw	r1, #4272	; 0x10b0
 80087ee:	f01f f8f6 	bl	80279de <_ZdlPvj>
 80087f2:	4620      	mov	r0, r4
 80087f4:	bd10      	pop	{r4, pc}
	...

080087f8 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 80087f8:	b510      	push	{r4, lr}
 80087fa:	4604      	mov	r4, r0
 80087fc:	f7fe ffb0 	bl	8007760 <_ZN20Project_InfoViewBaseC1Ev>
 8008800:	4b01      	ldr	r3, [pc, #4]	; (8008808 <_ZN16Project_InfoViewC1Ev+0x10>)
 8008802:	6023      	str	r3, [r4, #0]
}
 8008804:	4620      	mov	r0, r4
 8008806:	bd10      	pop	{r4, pc}
 8008808:	0802c598 	.word	0x0802c598

0800880c <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 800880c:	f7fe bf5c 	b.w	80076c8 <_ZN20Project_InfoViewBase11setupScreenEv>

08008810 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 8008810:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008812:	4a0a      	ldr	r2, [pc, #40]	; (800883c <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8008814:	4605      	mov	r5, r0
 8008816:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008818:	460b      	mov	r3, r1
 800881a:	f500 7022 	add.w	r0, r0, #648	; 0x288
 800881e:	2104      	movs	r1, #4
 8008820:	f00f fce2 	bl	80181e8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008824:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008828:	f00d fc62 	bl	80160f0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 800882c:	b92c      	cbnz	r4, 800883a <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 800882e:	f00c fb77 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008832:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008836:	f7fb b879 	b.w	800392c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800883a:	bd38      	pop	{r3, r4, r5, pc}
 800883c:	0802c038 	.word	0x0802c038

08008840 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 8008840:	4770      	bx	lr

08008842 <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 8008842:	3804      	subs	r0, #4
 8008844:	4770      	bx	lr

08008846 <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 8008846:	4770      	bx	lr

08008848 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 8008848:	4770      	bx	lr

0800884a <_ZN21Shutting_OffPresenterD0Ev>:
 800884a:	b510      	push	{r4, lr}
 800884c:	2110      	movs	r1, #16
 800884e:	4604      	mov	r4, r0
 8008850:	f01f f8c5 	bl	80279de <_ZdlPvj>
 8008854:	4620      	mov	r0, r4
 8008856:	bd10      	pop	{r4, pc}

08008858 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 8008858:	f1a0 0004 	sub.w	r0, r0, #4
 800885c:	e7f5      	b.n	800884a <_ZN21Shutting_OffPresenterD0Ev>

0800885e <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 800885e:	4770      	bx	lr

08008860 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 8008860:	b510      	push	{r4, lr}
 8008862:	2200      	movs	r2, #0
 8008864:	6082      	str	r2, [r0, #8]
    : view(v)
 8008866:	4a04      	ldr	r2, [pc, #16]	; (8008878 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 8008868:	60c1      	str	r1, [r0, #12]
 800886a:	f102 0408 	add.w	r4, r2, #8
 800886e:	3224      	adds	r2, #36	; 0x24
 8008870:	6004      	str	r4, [r0, #0]
 8008872:	6042      	str	r2, [r0, #4]
}
 8008874:	bd10      	pop	{r4, pc}
 8008876:	bf00      	nop
 8008878:	0802c5c8 	.word	0x0802c5c8

0800887c <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 800887c:	4770      	bx	lr
	...

08008880 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 8008880:	b510      	push	{r4, lr}
 8008882:	4b03      	ldr	r3, [pc, #12]	; (8008890 <_ZN16Shutting_OffViewD1Ev+0x10>)
 8008884:	6003      	str	r3, [r0, #0]
 8008886:	4604      	mov	r4, r0
 8008888:	f7ff f938 	bl	8007afc <_ZN20Shutting_OffViewBaseD1Ev>
 800888c:	4620      	mov	r0, r4
 800888e:	bd10      	pop	{r4, pc}
 8008890:	0802c600 	.word	0x0802c600

08008894 <_ZN16Shutting_OffViewD0Ev>:
 8008894:	b510      	push	{r4, lr}
 8008896:	4604      	mov	r4, r0
 8008898:	f7ff fff2 	bl	8008880 <_ZN16Shutting_OffViewD1Ev>
 800889c:	4620      	mov	r0, r4
 800889e:	2198      	movs	r1, #152	; 0x98
 80088a0:	f01f f89d 	bl	80279de <_ZdlPvj>
 80088a4:	4620      	mov	r0, r4
 80088a6:	bd10      	pop	{r4, pc}

080088a8 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 80088a8:	b510      	push	{r4, lr}
 80088aa:	4604      	mov	r4, r0
 80088ac:	f7ff f930 	bl	8007b10 <_ZN20Shutting_OffViewBaseC1Ev>
 80088b0:	4b01      	ldr	r3, [pc, #4]	; (80088b8 <_ZN16Shutting_OffViewC1Ev+0x10>)
 80088b2:	6023      	str	r3, [r4, #0]
}
 80088b4:	4620      	mov	r0, r4
 80088b6:	bd10      	pop	{r4, pc}
 80088b8:	0802c600 	.word	0x0802c600

080088bc <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 80088bc:	f7ff b91f 	b.w	8007afe <_ZN20Shutting_OffViewBase11setupScreenEv>

080088c0 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 80088c0:	20f0      	movs	r0, #240	; 0xf0
 80088c2:	4770      	bx	lr

080088c4 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 80088c4:	f44f 70a0 	mov.w	r0, #320	; 0x140
 80088c8:	4770      	bx	lr
 80088ca:	bf00      	nop

080088cc <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 80088cc:	2029      	movs	r0, #41	; 0x29
 80088ce:	f7f9 b8df 	b.w	8001a90 <LCD_IO_WriteReg>
 80088d2:	bf00      	nop

080088d4 <ili9341_DisplayOff>:
 80088d4:	2028      	movs	r0, #40	; 0x28
 80088d6:	f7f9 b8db 	b.w	8001a90 <LCD_IO_WriteReg>
 80088da:	bf00      	nop

080088dc <ili9341_Init>:
{
 80088dc:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80088de:	f7f9 f89d 	bl	8001a1c <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 80088e2:	20ca      	movs	r0, #202	; 0xca
 80088e4:	f7f9 f8d4 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80088e8:	20c3      	movs	r0, #195	; 0xc3
 80088ea:	f7f9 f8a7 	bl	8001a3c <LCD_IO_WriteData>
 80088ee:	2008      	movs	r0, #8
 80088f0:	f7f9 f8a4 	bl	8001a3c <LCD_IO_WriteData>
 80088f4:	2050      	movs	r0, #80	; 0x50
 80088f6:	f7f9 f8a1 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80088fa:	20cf      	movs	r0, #207	; 0xcf
 80088fc:	f7f9 f8c8 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008900:	2000      	movs	r0, #0
 8008902:	f7f9 f89b 	bl	8001a3c <LCD_IO_WriteData>
 8008906:	20c1      	movs	r0, #193	; 0xc1
 8008908:	f7f9 f898 	bl	8001a3c <LCD_IO_WriteData>
 800890c:	2030      	movs	r0, #48	; 0x30
 800890e:	f7f9 f895 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008912:	20ed      	movs	r0, #237	; 0xed
 8008914:	f7f9 f8bc 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008918:	2064      	movs	r0, #100	; 0x64
 800891a:	f7f9 f88f 	bl	8001a3c <LCD_IO_WriteData>
 800891e:	2003      	movs	r0, #3
 8008920:	f7f9 f88c 	bl	8001a3c <LCD_IO_WriteData>
 8008924:	2012      	movs	r0, #18
 8008926:	f7f9 f889 	bl	8001a3c <LCD_IO_WriteData>
 800892a:	2081      	movs	r0, #129	; 0x81
 800892c:	f7f9 f886 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008930:	20e8      	movs	r0, #232	; 0xe8
 8008932:	f7f9 f8ad 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008936:	2085      	movs	r0, #133	; 0x85
 8008938:	f7f9 f880 	bl	8001a3c <LCD_IO_WriteData>
 800893c:	2000      	movs	r0, #0
 800893e:	f7f9 f87d 	bl	8001a3c <LCD_IO_WriteData>
 8008942:	2078      	movs	r0, #120	; 0x78
 8008944:	f7f9 f87a 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008948:	20cb      	movs	r0, #203	; 0xcb
 800894a:	f7f9 f8a1 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800894e:	2039      	movs	r0, #57	; 0x39
 8008950:	f7f9 f874 	bl	8001a3c <LCD_IO_WriteData>
 8008954:	202c      	movs	r0, #44	; 0x2c
 8008956:	f7f9 f871 	bl	8001a3c <LCD_IO_WriteData>
 800895a:	2000      	movs	r0, #0
 800895c:	f7f9 f86e 	bl	8001a3c <LCD_IO_WriteData>
 8008960:	2034      	movs	r0, #52	; 0x34
 8008962:	f7f9 f86b 	bl	8001a3c <LCD_IO_WriteData>
 8008966:	2002      	movs	r0, #2
 8008968:	f7f9 f868 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800896c:	20f7      	movs	r0, #247	; 0xf7
 800896e:	f7f9 f88f 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008972:	2020      	movs	r0, #32
 8008974:	f7f9 f862 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008978:	20ea      	movs	r0, #234	; 0xea
 800897a:	f7f9 f889 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800897e:	2000      	movs	r0, #0
 8008980:	f7f9 f85c 	bl	8001a3c <LCD_IO_WriteData>
 8008984:	2000      	movs	r0, #0
 8008986:	f7f9 f859 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800898a:	20b1      	movs	r0, #177	; 0xb1
 800898c:	f7f9 f880 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008990:	2000      	movs	r0, #0
 8008992:	f7f9 f853 	bl	8001a3c <LCD_IO_WriteData>
 8008996:	201b      	movs	r0, #27
 8008998:	f7f9 f850 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800899c:	20b6      	movs	r0, #182	; 0xb6
 800899e:	f7f9 f877 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80089a2:	200a      	movs	r0, #10
 80089a4:	f7f9 f84a 	bl	8001a3c <LCD_IO_WriteData>
 80089a8:	20a2      	movs	r0, #162	; 0xa2
 80089aa:	f7f9 f847 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80089ae:	20c0      	movs	r0, #192	; 0xc0
 80089b0:	f7f9 f86e 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80089b4:	2010      	movs	r0, #16
 80089b6:	f7f9 f841 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80089ba:	20c1      	movs	r0, #193	; 0xc1
 80089bc:	f7f9 f868 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80089c0:	2010      	movs	r0, #16
 80089c2:	f7f9 f83b 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80089c6:	20c5      	movs	r0, #197	; 0xc5
 80089c8:	f7f9 f862 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80089cc:	2045      	movs	r0, #69	; 0x45
 80089ce:	f7f9 f835 	bl	8001a3c <LCD_IO_WriteData>
 80089d2:	2015      	movs	r0, #21
 80089d4:	f7f9 f832 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80089d8:	20c7      	movs	r0, #199	; 0xc7
 80089da:	f7f9 f859 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80089de:	2090      	movs	r0, #144	; 0x90
 80089e0:	f7f9 f82c 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80089e4:	2036      	movs	r0, #54	; 0x36
 80089e6:	f7f9 f853 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80089ea:	20c8      	movs	r0, #200	; 0xc8
 80089ec:	f7f9 f826 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80089f0:	20f2      	movs	r0, #242	; 0xf2
 80089f2:	f7f9 f84d 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80089f6:	2000      	movs	r0, #0
 80089f8:	f7f9 f820 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80089fc:	20b0      	movs	r0, #176	; 0xb0
 80089fe:	f7f9 f847 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008a02:	20c2      	movs	r0, #194	; 0xc2
 8008a04:	f7f9 f81a 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008a08:	20b6      	movs	r0, #182	; 0xb6
 8008a0a:	f7f9 f841 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008a0e:	200a      	movs	r0, #10
 8008a10:	f7f9 f814 	bl	8001a3c <LCD_IO_WriteData>
 8008a14:	20a7      	movs	r0, #167	; 0xa7
 8008a16:	f7f9 f811 	bl	8001a3c <LCD_IO_WriteData>
 8008a1a:	2027      	movs	r0, #39	; 0x27
 8008a1c:	f7f9 f80e 	bl	8001a3c <LCD_IO_WriteData>
 8008a20:	2004      	movs	r0, #4
 8008a22:	f7f9 f80b 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008a26:	202a      	movs	r0, #42	; 0x2a
 8008a28:	f7f9 f832 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008a2c:	2000      	movs	r0, #0
 8008a2e:	f7f9 f805 	bl	8001a3c <LCD_IO_WriteData>
 8008a32:	2000      	movs	r0, #0
 8008a34:	f7f9 f802 	bl	8001a3c <LCD_IO_WriteData>
 8008a38:	2000      	movs	r0, #0
 8008a3a:	f7f8 ffff 	bl	8001a3c <LCD_IO_WriteData>
 8008a3e:	20ef      	movs	r0, #239	; 0xef
 8008a40:	f7f8 fffc 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008a44:	202b      	movs	r0, #43	; 0x2b
 8008a46:	f7f9 f823 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008a4a:	2000      	movs	r0, #0
 8008a4c:	f7f8 fff6 	bl	8001a3c <LCD_IO_WriteData>
 8008a50:	2000      	movs	r0, #0
 8008a52:	f7f8 fff3 	bl	8001a3c <LCD_IO_WriteData>
 8008a56:	2001      	movs	r0, #1
 8008a58:	f7f8 fff0 	bl	8001a3c <LCD_IO_WriteData>
 8008a5c:	203f      	movs	r0, #63	; 0x3f
 8008a5e:	f7f8 ffed 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008a62:	20f6      	movs	r0, #246	; 0xf6
 8008a64:	f7f9 f814 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008a68:	2001      	movs	r0, #1
 8008a6a:	f7f8 ffe7 	bl	8001a3c <LCD_IO_WriteData>
 8008a6e:	2000      	movs	r0, #0
 8008a70:	f7f8 ffe4 	bl	8001a3c <LCD_IO_WriteData>
 8008a74:	2006      	movs	r0, #6
 8008a76:	f7f8 ffe1 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008a7a:	202c      	movs	r0, #44	; 0x2c
 8008a7c:	f7f9 f808 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008a80:	20c8      	movs	r0, #200	; 0xc8
 8008a82:	f7f9 f86d 	bl	8001b60 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008a86:	2026      	movs	r0, #38	; 0x26
 8008a88:	f7f9 f802 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008a8c:	2001      	movs	r0, #1
 8008a8e:	f7f8 ffd5 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008a92:	20e0      	movs	r0, #224	; 0xe0
 8008a94:	f7f8 fffc 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008a98:	200f      	movs	r0, #15
 8008a9a:	f7f8 ffcf 	bl	8001a3c <LCD_IO_WriteData>
 8008a9e:	2029      	movs	r0, #41	; 0x29
 8008aa0:	f7f8 ffcc 	bl	8001a3c <LCD_IO_WriteData>
 8008aa4:	2024      	movs	r0, #36	; 0x24
 8008aa6:	f7f8 ffc9 	bl	8001a3c <LCD_IO_WriteData>
 8008aaa:	200c      	movs	r0, #12
 8008aac:	f7f8 ffc6 	bl	8001a3c <LCD_IO_WriteData>
 8008ab0:	200e      	movs	r0, #14
 8008ab2:	f7f8 ffc3 	bl	8001a3c <LCD_IO_WriteData>
 8008ab6:	2009      	movs	r0, #9
 8008ab8:	f7f8 ffc0 	bl	8001a3c <LCD_IO_WriteData>
 8008abc:	204e      	movs	r0, #78	; 0x4e
 8008abe:	f7f8 ffbd 	bl	8001a3c <LCD_IO_WriteData>
 8008ac2:	2078      	movs	r0, #120	; 0x78
 8008ac4:	f7f8 ffba 	bl	8001a3c <LCD_IO_WriteData>
 8008ac8:	203c      	movs	r0, #60	; 0x3c
 8008aca:	f7f8 ffb7 	bl	8001a3c <LCD_IO_WriteData>
 8008ace:	2009      	movs	r0, #9
 8008ad0:	f7f8 ffb4 	bl	8001a3c <LCD_IO_WriteData>
 8008ad4:	2013      	movs	r0, #19
 8008ad6:	f7f8 ffb1 	bl	8001a3c <LCD_IO_WriteData>
 8008ada:	2005      	movs	r0, #5
 8008adc:	f7f8 ffae 	bl	8001a3c <LCD_IO_WriteData>
 8008ae0:	2017      	movs	r0, #23
 8008ae2:	f7f8 ffab 	bl	8001a3c <LCD_IO_WriteData>
 8008ae6:	2011      	movs	r0, #17
 8008ae8:	f7f8 ffa8 	bl	8001a3c <LCD_IO_WriteData>
 8008aec:	2000      	movs	r0, #0
 8008aee:	f7f8 ffa5 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008af2:	20e1      	movs	r0, #225	; 0xe1
 8008af4:	f7f8 ffcc 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008af8:	2000      	movs	r0, #0
 8008afa:	f7f8 ff9f 	bl	8001a3c <LCD_IO_WriteData>
 8008afe:	2016      	movs	r0, #22
 8008b00:	f7f8 ff9c 	bl	8001a3c <LCD_IO_WriteData>
 8008b04:	201b      	movs	r0, #27
 8008b06:	f7f8 ff99 	bl	8001a3c <LCD_IO_WriteData>
 8008b0a:	2004      	movs	r0, #4
 8008b0c:	f7f8 ff96 	bl	8001a3c <LCD_IO_WriteData>
 8008b10:	2011      	movs	r0, #17
 8008b12:	f7f8 ff93 	bl	8001a3c <LCD_IO_WriteData>
 8008b16:	2007      	movs	r0, #7
 8008b18:	f7f8 ff90 	bl	8001a3c <LCD_IO_WriteData>
 8008b1c:	2031      	movs	r0, #49	; 0x31
 8008b1e:	f7f8 ff8d 	bl	8001a3c <LCD_IO_WriteData>
 8008b22:	2033      	movs	r0, #51	; 0x33
 8008b24:	f7f8 ff8a 	bl	8001a3c <LCD_IO_WriteData>
 8008b28:	2042      	movs	r0, #66	; 0x42
 8008b2a:	f7f8 ff87 	bl	8001a3c <LCD_IO_WriteData>
 8008b2e:	2005      	movs	r0, #5
 8008b30:	f7f8 ff84 	bl	8001a3c <LCD_IO_WriteData>
 8008b34:	200c      	movs	r0, #12
 8008b36:	f7f8 ff81 	bl	8001a3c <LCD_IO_WriteData>
 8008b3a:	200a      	movs	r0, #10
 8008b3c:	f7f8 ff7e 	bl	8001a3c <LCD_IO_WriteData>
 8008b40:	2028      	movs	r0, #40	; 0x28
 8008b42:	f7f8 ff7b 	bl	8001a3c <LCD_IO_WriteData>
 8008b46:	202f      	movs	r0, #47	; 0x2f
 8008b48:	f7f8 ff78 	bl	8001a3c <LCD_IO_WriteData>
 8008b4c:	200f      	movs	r0, #15
 8008b4e:	f7f8 ff75 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b52:	2011      	movs	r0, #17
 8008b54:	f7f8 ff9c 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008b58:	20c8      	movs	r0, #200	; 0xc8
 8008b5a:	f7f9 f801 	bl	8001b60 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008b5e:	2029      	movs	r0, #41	; 0x29
 8008b60:	f7f8 ff96 	bl	8001a90 <LCD_IO_WriteReg>
}
 8008b64:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8008b68:	202c      	movs	r0, #44	; 0x2c
 8008b6a:	f7f8 bf91 	b.w	8001a90 <LCD_IO_WriteReg>
 8008b6e:	bf00      	nop

08008b70 <ili9341_ReadID>:
{
 8008b70:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008b72:	f7f8 ff53 	bl	8001a1c <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8008b76:	2103      	movs	r1, #3
 8008b78:	20d3      	movs	r0, #211	; 0xd3
 8008b7a:	f7f8 ffb3 	bl	8001ae4 <LCD_IO_ReadData>
}
 8008b7e:	b280      	uxth	r0, r0
 8008b80:	bd08      	pop	{r3, pc}
 8008b82:	bf00      	nop

08008b84 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8008b84:	221f      	movs	r2, #31
 8008b86:	210b      	movs	r1, #11
 8008b88:	b2c0      	uxtb	r0, r0
 8008b8a:	f7f8 bef9 	b.w	8001980 <IOE_Write>
 8008b8e:	bf00      	nop

08008b90 <stmpe811_Reset>:
{
 8008b90:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8008b92:	b2c4      	uxtb	r4, r0
 8008b94:	2202      	movs	r2, #2
 8008b96:	2103      	movs	r1, #3
 8008b98:	4620      	mov	r0, r4
 8008b9a:	f7f8 fef1 	bl	8001980 <IOE_Write>
  IOE_Delay(10); 
 8008b9e:	200a      	movs	r0, #10
 8008ba0:	f7f8 ff3a 	bl	8001a18 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8008ba4:	4620      	mov	r0, r4
 8008ba6:	2200      	movs	r2, #0
 8008ba8:	2103      	movs	r1, #3
 8008baa:	f7f8 fee9 	bl	8001980 <IOE_Write>
}
 8008bae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8008bb2:	2002      	movs	r0, #2
 8008bb4:	f7f8 bf30 	b.w	8001a18 <IOE_Delay>

08008bb8 <stmpe811_ReadID>:
{
 8008bb8:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008bba:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8008bbc:	f7f8 fedc 	bl	8001978 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008bc0:	2100      	movs	r1, #0
 8008bc2:	4620      	mov	r0, r4
 8008bc4:	f7f8 fef4 	bl	80019b0 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008bc8:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008bca:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008bcc:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008bce:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008bd0:	f7f8 feee 	bl	80019b0 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008bd4:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8008bd8:	b280      	uxth	r0, r0
 8008bda:	bd10      	pop	{r4, pc}

08008bdc <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8008bdc:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8008bde:	b2c4      	uxtb	r4, r0
 8008be0:	2140      	movs	r1, #64	; 0x40
 8008be2:	4620      	mov	r0, r4
 8008be4:	f7f8 fee4 	bl	80019b0 <IOE_Read>
  
  if(state > 0)
 8008be8:	0603      	lsls	r3, r0, #24
 8008bea:	d40b      	bmi.n	8008c04 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008bec:	4620      	mov	r0, r4
 8008bee:	2201      	movs	r2, #1
 8008bf0:	214b      	movs	r1, #75	; 0x4b
 8008bf2:	f7f8 fec5 	bl	8001980 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008bf6:	4620      	mov	r0, r4
 8008bf8:	2200      	movs	r2, #0
 8008bfa:	214b      	movs	r1, #75	; 0x4b
 8008bfc:	f7f8 fec0 	bl	8001980 <IOE_Write>
  uint8_t ret = 0;
 8008c00:	2000      	movs	r0, #0
  }
  
  return ret;
}
 8008c02:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8008c04:	214c      	movs	r1, #76	; 0x4c
 8008c06:	4620      	mov	r0, r4
 8008c08:	f7f8 fed2 	bl	80019b0 <IOE_Read>
      ret = 1;
 8008c0c:	3800      	subs	r0, #0
 8008c0e:	bf18      	it	ne
 8008c10:	2001      	movne	r0, #1
}
 8008c12:	bd10      	pop	{r4, pc}

08008c14 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8008c14:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8008c16:	210b      	movs	r1, #11
 8008c18:	b2c0      	uxtb	r0, r0
 8008c1a:	f7f8 fec9 	bl	80019b0 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 8008c1e:	f000 001f 	and.w	r0, r0, #31
 8008c22:	bd08      	pop	{r3, pc}

08008c24 <stmpe811_TS_GetXY>:
{
 8008c24:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008c26:	2304      	movs	r3, #4
{
 8008c28:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008c2a:	b2c4      	uxtb	r4, r0
{
 8008c2c:	4615      	mov	r5, r2
 8008c2e:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008c30:	eb0d 0203 	add.w	r2, sp, r3
 8008c34:	21d7      	movs	r1, #215	; 0xd7
 8008c36:	4620      	mov	r0, r4
 8008c38:	f7f8 fed6 	bl	80019e8 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8008c3c:	9b01      	ldr	r3, [sp, #4]
 8008c3e:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008c40:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008c42:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008c46:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008c48:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008c4a:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008c4c:	2201      	movs	r2, #1
 8008c4e:	214b      	movs	r1, #75	; 0x4b
 8008c50:	f7f8 fe96 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008c54:	2200      	movs	r2, #0
 8008c56:	214b      	movs	r1, #75	; 0x4b
 8008c58:	4620      	mov	r0, r4
 8008c5a:	f7f8 fe91 	bl	8001980 <IOE_Write>
}
 8008c5e:	b002      	add	sp, #8
 8008c60:	bd70      	pop	{r4, r5, r6, pc}
 8008c62:	bf00      	nop

08008c64 <stmpe811_TS_Start>:
{
 8008c64:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008c66:	b2c4      	uxtb	r4, r0
 8008c68:	2104      	movs	r1, #4
 8008c6a:	4620      	mov	r0, r4
 8008c6c:	f7f8 fea0 	bl	80019b0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008c70:	2104      	movs	r1, #4
 8008c72:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008c76:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008c78:	4620      	mov	r0, r4
 8008c7a:	f7f8 fe81 	bl	8001980 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8008c7e:	2117      	movs	r1, #23
 8008c80:	4620      	mov	r0, r4
 8008c82:	f7f8 fe95 	bl	80019b0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8008c86:	2117      	movs	r1, #23
 8008c88:	f000 020f 	and.w	r2, r0, #15
 8008c8c:	4620      	mov	r0, r4
 8008c8e:	f7f8 fe77 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008c92:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8008c96:	4620      	mov	r0, r4
 8008c98:	2104      	movs	r1, #4
 8008c9a:	f7f8 fe71 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8008c9e:	2249      	movs	r2, #73	; 0x49
 8008ca0:	2120      	movs	r1, #32
 8008ca2:	4620      	mov	r0, r4
 8008ca4:	f7f8 fe6c 	bl	8001980 <IOE_Write>
  IOE_Delay(2); 
 8008ca8:	2002      	movs	r0, #2
 8008caa:	f7f8 feb5 	bl	8001a18 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8008cae:	4620      	mov	r0, r4
 8008cb0:	2201      	movs	r2, #1
 8008cb2:	2121      	movs	r1, #33	; 0x21
 8008cb4:	f7f8 fe64 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8008cb8:	4620      	mov	r0, r4
 8008cba:	229a      	movs	r2, #154	; 0x9a
 8008cbc:	2141      	movs	r1, #65	; 0x41
 8008cbe:	f7f8 fe5f 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8008cc2:	4620      	mov	r0, r4
 8008cc4:	2201      	movs	r2, #1
 8008cc6:	214a      	movs	r1, #74	; 0x4a
 8008cc8:	f7f8 fe5a 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008ccc:	4620      	mov	r0, r4
 8008cce:	2201      	movs	r2, #1
 8008cd0:	214b      	movs	r1, #75	; 0x4b
 8008cd2:	f7f8 fe55 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008cd6:	4620      	mov	r0, r4
 8008cd8:	2200      	movs	r2, #0
 8008cda:	214b      	movs	r1, #75	; 0x4b
 8008cdc:	f7f8 fe50 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8008ce0:	4620      	mov	r0, r4
 8008ce2:	2201      	movs	r2, #1
 8008ce4:	2156      	movs	r1, #86	; 0x56
 8008ce6:	f7f8 fe4b 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8008cea:	4620      	mov	r0, r4
 8008cec:	2201      	movs	r2, #1
 8008cee:	2158      	movs	r1, #88	; 0x58
 8008cf0:	f7f8 fe46 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8008cf4:	4620      	mov	r0, r4
 8008cf6:	2201      	movs	r2, #1
 8008cf8:	2140      	movs	r1, #64	; 0x40
 8008cfa:	f7f8 fe41 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8008cfe:	4620      	mov	r0, r4
 8008d00:	22ff      	movs	r2, #255	; 0xff
 8008d02:	210b      	movs	r1, #11
 8008d04:	f7f8 fe3c 	bl	8001980 <IOE_Write>
}
 8008d08:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8008d0c:	2002      	movs	r0, #2
 8008d0e:	f7f8 be83 	b.w	8001a18 <IOE_Delay>
 8008d12:	bf00      	nop

08008d14 <stmpe811_TS_DisableIT>:
{
 8008d14:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8008d16:	b2c4      	uxtb	r4, r0
 8008d18:	2109      	movs	r1, #9
 8008d1a:	4620      	mov	r0, r4
 8008d1c:	f7f8 fe48 	bl	80019b0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8008d20:	2109      	movs	r1, #9
 8008d22:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8008d26:	4620      	mov	r0, r4
 8008d28:	f7f8 fe2a 	bl	8001980 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008d2c:	210a      	movs	r1, #10
 8008d2e:	4620      	mov	r0, r4
 8008d30:	f7f8 fe3e 	bl	80019b0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008d34:	210a      	movs	r1, #10
 8008d36:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 8008d3a:	4620      	mov	r0, r4
}
 8008d3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008d40:	f7f8 be1e 	b.w	8001980 <IOE_Write>

08008d44 <stmpe811_TS_EnableIT>:
{
 8008d44:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008d46:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 8008d48:	f7f8 fe18 	bl	800197c <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008d4c:	210a      	movs	r1, #10
 8008d4e:	4620      	mov	r0, r4
 8008d50:	f7f8 fe2e 	bl	80019b0 <IOE_Read>
  tmp |= Source; 
 8008d54:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008d58:	b2c2      	uxtb	r2, r0
 8008d5a:	210a      	movs	r1, #10
 8008d5c:	4620      	mov	r0, r4
 8008d5e:	f7f8 fe0f 	bl	8001980 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8008d62:	2109      	movs	r1, #9
 8008d64:	4620      	mov	r0, r4
 8008d66:	f7f8 fe23 	bl	80019b0 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8008d6a:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8008d6e:	b2c2      	uxtb	r2, r0
 8008d70:	2109      	movs	r1, #9
 8008d72:	4620      	mov	r0, r4
}
 8008d74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8008d78:	f7f8 be02 	b.w	8001980 <IOE_Write>

08008d7c <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8008d7c:	4a10      	ldr	r2, [pc, #64]	; (8008dc0 <stmpe811_Init+0x44>)
 8008d7e:	7813      	ldrb	r3, [r2, #0]
 8008d80:	4298      	cmp	r0, r3
 8008d82:	d004      	beq.n	8008d8e <stmpe811_Init+0x12>
 8008d84:	7851      	ldrb	r1, [r2, #1]
 8008d86:	4288      	cmp	r0, r1
 8008d88:	d001      	beq.n	8008d8e <stmpe811_Init+0x12>
 8008d8a:	b113      	cbz	r3, 8008d92 <stmpe811_Init+0x16>
 8008d8c:	b101      	cbz	r1, 8008d90 <stmpe811_Init+0x14>
 8008d8e:	4770      	bx	lr
 8008d90:	2301      	movs	r3, #1
{
 8008d92:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 8008d94:	b2c4      	uxtb	r4, r0
 8008d96:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8008d98:	f7f8 fdee 	bl	8001978 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8008d9c:	2202      	movs	r2, #2
 8008d9e:	2103      	movs	r1, #3
 8008da0:	4620      	mov	r0, r4
 8008da2:	f7f8 fded 	bl	8001980 <IOE_Write>
  IOE_Delay(10); 
 8008da6:	200a      	movs	r0, #10
 8008da8:	f7f8 fe36 	bl	8001a18 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8008dac:	4620      	mov	r0, r4
 8008dae:	2200      	movs	r2, #0
 8008db0:	2103      	movs	r1, #3
 8008db2:	f7f8 fde5 	bl	8001980 <IOE_Write>
}
 8008db6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8008dba:	2002      	movs	r0, #2
 8008dbc:	f7f8 be2c 	b.w	8001a18 <IOE_Delay>
 8008dc0:	200029d0 	.word	0x200029d0

08008dc4 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8008dc4:	4b05      	ldr	r3, [pc, #20]	; (8008ddc <SystemInit+0x18>)
 8008dc6:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8008dca:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8008dce:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8008dd2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8008dd6:	6099      	str	r1, [r3, #8]
#endif
}
 8008dd8:	4770      	bx	lr
 8008dda:	bf00      	nop
 8008ddc:	e000ed00 	.word	0xe000ed00

08008de0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8008de0:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8008de2:	4b0b      	ldr	r3, [pc, #44]	; (8008e10 <HAL_Init+0x30>)
 8008de4:	681a      	ldr	r2, [r3, #0]
 8008de6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8008dea:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8008dec:	681a      	ldr	r2, [r3, #0]
 8008dee:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8008df2:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8008df4:	681a      	ldr	r2, [r3, #0]
 8008df6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8008dfa:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8008dfc:	2003      	movs	r0, #3
 8008dfe:	f000 f82d 	bl	8008e5c <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8008e02:	2000      	movs	r0, #0
 8008e04:	f7f9 f984 	bl	8002110 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8008e08:	f7f8 ff00 	bl	8001c0c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8008e0c:	2000      	movs	r0, #0
 8008e0e:	bd08      	pop	{r3, pc}
 8008e10:	40023c00 	.word	0x40023c00

08008e14 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8008e14:	4a03      	ldr	r2, [pc, #12]	; (8008e24 <HAL_IncTick+0x10>)
 8008e16:	4b04      	ldr	r3, [pc, #16]	; (8008e28 <HAL_IncTick+0x14>)
 8008e18:	6811      	ldr	r1, [r2, #0]
 8008e1a:	781b      	ldrb	r3, [r3, #0]
 8008e1c:	440b      	add	r3, r1
 8008e1e:	6013      	str	r3, [r2, #0]
}
 8008e20:	4770      	bx	lr
 8008e22:	bf00      	nop
 8008e24:	200029d4 	.word	0x200029d4
 8008e28:	2000007c 	.word	0x2000007c

08008e2c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8008e2c:	4b01      	ldr	r3, [pc, #4]	; (8008e34 <HAL_GetTick+0x8>)
 8008e2e:	6818      	ldr	r0, [r3, #0]
}
 8008e30:	4770      	bx	lr
 8008e32:	bf00      	nop
 8008e34:	200029d4 	.word	0x200029d4

08008e38 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8008e38:	b538      	push	{r3, r4, r5, lr}
 8008e3a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8008e3c:	f7ff fff6 	bl	8008e2c <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8008e40:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 8008e42:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 8008e44:	d002      	beq.n	8008e4c <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8008e46:	4b04      	ldr	r3, [pc, #16]	; (8008e58 <HAL_Delay+0x20>)
 8008e48:	781b      	ldrb	r3, [r3, #0]
 8008e4a:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8008e4c:	f7ff ffee 	bl	8008e2c <HAL_GetTick>
 8008e50:	1b43      	subs	r3, r0, r5
 8008e52:	42a3      	cmp	r3, r4
 8008e54:	d3fa      	bcc.n	8008e4c <HAL_Delay+0x14>
  {
  }
}
 8008e56:	bd38      	pop	{r3, r4, r5, pc}
 8008e58:	2000007c 	.word	0x2000007c

08008e5c <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8008e5c:	4907      	ldr	r1, [pc, #28]	; (8008e7c <HAL_NVIC_SetPriorityGrouping+0x20>)
 8008e5e:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8008e60:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8008e62:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8008e66:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8008e6a:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8008e6c:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8008e6e:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8008e72:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8008e76:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8008e78:	4770      	bx	lr
 8008e7a:	bf00      	nop
 8008e7c:	e000ed00 	.word	0xe000ed00

08008e80 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8008e80:	4b1c      	ldr	r3, [pc, #112]	; (8008ef4 <HAL_NVIC_SetPriority+0x74>)
 8008e82:	68db      	ldr	r3, [r3, #12]
 8008e84:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8008e88:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8008e8a:	f1c3 0e07 	rsb	lr, r3, #7
 8008e8e:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8008e92:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8008e96:	bf28      	it	cs
 8008e98:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8008e9c:	f1bc 0f06 	cmp.w	ip, #6
 8008ea0:	d91b      	bls.n	8008eda <HAL_NVIC_SetPriority+0x5a>
 8008ea2:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8008ea4:	f04f 3cff 	mov.w	ip, #4294967295
 8008ea8:	fa0c fc03 	lsl.w	ip, ip, r3
 8008eac:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8008eb0:	f04f 3cff 	mov.w	ip, #4294967295
 8008eb4:	fa0c fc0e 	lsl.w	ip, ip, lr
 8008eb8:	ea21 010c 	bic.w	r1, r1, ip
 8008ebc:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 8008ebe:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8008ec0:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 8008ec4:	db0c      	blt.n	8008ee0 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8008ec6:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8008eca:	0109      	lsls	r1, r1, #4
 8008ecc:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8008ed0:	b2c9      	uxtb	r1, r1
 8008ed2:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8008ed6:	f85d fb04 	ldr.w	pc, [sp], #4
 8008eda:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8008edc:	4613      	mov	r3, r2
 8008ede:	e7e7      	b.n	8008eb0 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8008ee0:	4b05      	ldr	r3, [pc, #20]	; (8008ef8 <HAL_NVIC_SetPriority+0x78>)
 8008ee2:	f000 000f 	and.w	r0, r0, #15
 8008ee6:	0109      	lsls	r1, r1, #4
 8008ee8:	4403      	add	r3, r0
 8008eea:	b2c9      	uxtb	r1, r1
 8008eec:	7619      	strb	r1, [r3, #24]
 8008eee:	f85d fb04 	ldr.w	pc, [sp], #4
 8008ef2:	bf00      	nop
 8008ef4:	e000ed00 	.word	0xe000ed00
 8008ef8:	e000ecfc 	.word	0xe000ecfc

08008efc <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8008efc:	2800      	cmp	r0, #0
 8008efe:	db07      	blt.n	8008f10 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8008f00:	0941      	lsrs	r1, r0, #5
 8008f02:	4a04      	ldr	r2, [pc, #16]	; (8008f14 <HAL_NVIC_EnableIRQ+0x18>)
 8008f04:	f000 001f 	and.w	r0, r0, #31
 8008f08:	2301      	movs	r3, #1
 8008f0a:	4083      	lsls	r3, r0
 8008f0c:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8008f10:	4770      	bx	lr
 8008f12:	bf00      	nop
 8008f14:	e000e100 	.word	0xe000e100

08008f18 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8008f18:	b180      	cbz	r0, 8008f3c <HAL_CRC_Init+0x24>
{
 8008f1a:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8008f1c:	7943      	ldrb	r3, [r0, #5]
 8008f1e:	4604      	mov	r4, r0
 8008f20:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008f24:	b11b      	cbz	r3, 8008f2e <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8008f26:	2301      	movs	r3, #1
 8008f28:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8008f2a:	2000      	movs	r0, #0
}
 8008f2c:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 8008f2e:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 8008f30:	f7f8 fe8c 	bl	8001c4c <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 8008f34:	2301      	movs	r3, #1
 8008f36:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 8008f38:	2000      	movs	r0, #0
}
 8008f3a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8008f3c:	2001      	movs	r0, #1
}
 8008f3e:	4770      	bx	lr

08008f40 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8008f40:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8008f44:	2b02      	cmp	r3, #2
 8008f46:	d003      	beq.n	8008f50 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8008f48:	2380      	movs	r3, #128	; 0x80
 8008f4a:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8008f4c:	2001      	movs	r0, #1
 8008f4e:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8008f50:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8008f52:	2305      	movs	r3, #5
 8008f54:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8008f58:	6813      	ldr	r3, [r2, #0]
 8008f5a:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 8008f5e:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 8008f60:	6013      	str	r3, [r2, #0]
}
 8008f62:	4770      	bx	lr

08008f64 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 8008f64:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 8008f68:	4770      	bx	lr
 8008f6a:	bf00      	nop

08008f6c <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8008f6c:	b348      	cbz	r0, 8008fc2 <HAL_DMA2D_Init+0x56>
{
 8008f6e:	b510      	push	{r4, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8008f70:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8008f74:	4604      	mov	r4, r0
 8008f76:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008f7a:	b1eb      	cbz	r3, 8008fb8 <HAL_DMA2D_Init+0x4c>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8008f7c:	6822      	ldr	r2, [r4, #0]
 8008f7e:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8008f80:	2302      	movs	r3, #2
 8008f82:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8008f86:	6813      	ldr	r3, [r2, #0]
 8008f88:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8008f8c:	430b      	orrs	r3, r1
 8008f8e:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8008f90:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8008f92:	68a1      	ldr	r1, [r4, #8]
 8008f94:	f023 0307 	bic.w	r3, r3, #7
 8008f98:	430b      	orrs	r3, r1
 8008f9a:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8008f9c:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8008f9e:	68e1      	ldr	r1, [r4, #12]
 8008fa0:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8008fa4:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8008fa8:	430b      	orrs	r3, r1
 8008faa:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8008fac:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8008fae:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8008fb0:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8008fb2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8008fb6:	bd10      	pop	{r4, pc}
    hdma2d->Lock = HAL_UNLOCKED;
 8008fb8:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 8008fbc:	f7f8 fe60 	bl	8001c80 <HAL_DMA2D_MspInit>
 8008fc0:	e7dc      	b.n	8008f7c <HAL_DMA2D_Init+0x10>
    return HAL_ERROR;
 8008fc2:	2001      	movs	r0, #1
}
 8008fc4:	4770      	bx	lr
 8008fc6:	bf00      	nop

08008fc8 <HAL_DMA2D_LineEventCallback>:
 8008fc8:	4770      	bx	lr
 8008fca:	bf00      	nop

08008fcc <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8008fcc:	4770      	bx	lr
 8008fce:	bf00      	nop

08008fd0 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8008fd0:	6803      	ldr	r3, [r0, #0]
{
 8008fd2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8008fd4:	685d      	ldr	r5, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8008fd6:	681e      	ldr	r6, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8008fd8:	07ea      	lsls	r2, r5, #31
{
 8008fda:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8008fdc:	d501      	bpl.n	8008fe2 <HAL_DMA2D_IRQHandler+0x12>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8008fde:	05f1      	lsls	r1, r6, #23
 8008fe0:	d457      	bmi.n	8009092 <HAL_DMA2D_IRQHandler+0xc2>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8008fe2:	06aa      	lsls	r2, r5, #26
 8008fe4:	d501      	bpl.n	8008fea <HAL_DMA2D_IRQHandler+0x1a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8008fe6:	04b3      	lsls	r3, r6, #18
 8008fe8:	d43c      	bmi.n	8009064 <HAL_DMA2D_IRQHandler+0x94>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8008fea:	0728      	lsls	r0, r5, #28
 8008fec:	d501      	bpl.n	8008ff2 <HAL_DMA2D_IRQHandler+0x22>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8008fee:	0531      	lsls	r1, r6, #20
 8008ff0:	d421      	bmi.n	8009036 <HAL_DMA2D_IRQHandler+0x66>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8008ff2:	076a      	lsls	r2, r5, #29
 8008ff4:	d501      	bpl.n	8008ffa <HAL_DMA2D_IRQHandler+0x2a>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8008ff6:	0573      	lsls	r3, r6, #21
 8008ff8:	d473      	bmi.n	80090e2 <HAL_DMA2D_IRQHandler+0x112>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8008ffa:	07a8      	lsls	r0, r5, #30
 8008ffc:	d501      	bpl.n	8009002 <HAL_DMA2D_IRQHandler+0x32>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8008ffe:	05b1      	lsls	r1, r6, #22
 8009000:	d404      	bmi.n	800900c <HAL_DMA2D_IRQHandler+0x3c>
        hdma2d->XferCpltCallback(hdma2d);
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8009002:	06ea      	lsls	r2, r5, #27
 8009004:	d501      	bpl.n	800900a <HAL_DMA2D_IRQHandler+0x3a>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8009006:	04f3      	lsls	r3, r6, #19
 8009008:	d458      	bmi.n	80090bc <HAL_DMA2D_IRQHandler+0xec>
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 800900a:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800900c:	6823      	ldr	r3, [r4, #0]
 800900e:	681a      	ldr	r2, [r3, #0]
 8009010:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8009014:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8009016:	2202      	movs	r2, #2
 8009018:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800901a:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800901c:	63e2      	str	r2, [r4, #60]	; 0x3c
      if (hdma2d->XferCpltCallback != NULL)
 800901e:	6923      	ldr	r3, [r4, #16]
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8009020:	2201      	movs	r2, #1
 8009022:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8009026:	2200      	movs	r2, #0
 8009028:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
      if (hdma2d->XferCpltCallback != NULL)
 800902c:	2b00      	cmp	r3, #0
 800902e:	d0e8      	beq.n	8009002 <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
 8009030:	4620      	mov	r0, r4
 8009032:	4798      	blx	r3
 8009034:	e7e5      	b.n	8009002 <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8009036:	6823      	ldr	r3, [r4, #0]
 8009038:	681a      	ldr	r2, [r3, #0]
 800903a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800903e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8009040:	2208      	movs	r2, #8
 8009042:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8009044:	6be3      	ldr	r3, [r4, #60]	; 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 8009046:	6962      	ldr	r2, [r4, #20]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8009048:	f043 0304 	orr.w	r3, r3, #4
 800904c:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800904e:	2104      	movs	r1, #4
      __HAL_UNLOCK(hdma2d);
 8009050:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8009052:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8009056:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800905a:	2a00      	cmp	r2, #0
 800905c:	d0c9      	beq.n	8008ff2 <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
 800905e:	4620      	mov	r0, r4
 8009060:	4790      	blx	r2
 8009062:	e7c6      	b.n	8008ff2 <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8009064:	6823      	ldr	r3, [r4, #0]
 8009066:	681a      	ldr	r2, [r3, #0]
 8009068:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800906c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 800906e:	2220      	movs	r2, #32
 8009070:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8009072:	6be3      	ldr	r3, [r4, #60]	; 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 8009074:	6962      	ldr	r2, [r4, #20]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8009076:	f043 0302 	orr.w	r3, r3, #2
 800907a:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800907c:	2104      	movs	r1, #4
      __HAL_UNLOCK(hdma2d);
 800907e:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8009080:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8009084:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8009088:	2a00      	cmp	r2, #0
 800908a:	d0ae      	beq.n	8008fea <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
 800908c:	4620      	mov	r0, r4
 800908e:	4790      	blx	r2
 8009090:	e7ab      	b.n	8008fea <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8009092:	681a      	ldr	r2, [r3, #0]
 8009094:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8009098:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800909a:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800909c:	2101      	movs	r1, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800909e:	f042 0201 	orr.w	r2, r2, #1
 80090a2:	63c2      	str	r2, [r0, #60]	; 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 80090a4:	6942      	ldr	r2, [r0, #20]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80090a6:	6099      	str	r1, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80090a8:	2304      	movs	r3, #4
 80090aa:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80090ae:	2300      	movs	r3, #0
 80090b0:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
      if (hdma2d->XferErrorCallback != NULL)
 80090b4:	2a00      	cmp	r2, #0
 80090b6:	d094      	beq.n	8008fe2 <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
 80090b8:	4790      	blx	r2
 80090ba:	e792      	b.n	8008fe2 <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80090bc:	6823      	ldr	r3, [r4, #0]
 80090be:	681a      	ldr	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80090c0:	2010      	movs	r0, #16
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80090c2:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80090c6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80090c8:	6098      	str	r0, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80090ca:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80090cc:	63e2      	str	r2, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80090ce:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
 80090d0:	2300      	movs	r3, #0
 80090d2:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80090d6:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80090da:	4620      	mov	r0, r4
 80090dc:	f7ff ff76 	bl	8008fcc <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 80090e0:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 80090e2:	6823      	ldr	r3, [r4, #0]
 80090e4:	681a      	ldr	r2, [r3, #0]
 80090e6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80090ea:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 80090ec:	2204      	movs	r2, #4
 80090ee:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 80090f0:	4620      	mov	r0, r4
 80090f2:	f7ff ff69 	bl	8008fc8 <HAL_DMA2D_LineEventCallback>
 80090f6:	e780      	b.n	8008ffa <HAL_DMA2D_IRQHandler+0x2a>

080090f8 <HAL_DMA2D_ConfigLayer>:
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80090f8:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80090fc:	2b01      	cmp	r3, #1
 80090fe:	d04d      	beq.n	800919c <HAL_DMA2D_ConfigLayer+0xa4>
 8009100:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8009102:	2302      	movs	r3, #2
{
 8009104:	b470      	push	{r4, r5, r6}

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8009106:	eb00 1c01 	add.w	ip, r0, r1, lsl #4
  __HAL_LOCK(hdma2d);
 800910a:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800910e:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8009112:	e9dc 2307 	ldrd	r2, r3, [ip, #28]
 8009116:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800911a:	3a09      	subs	r2, #9
 800911c:	2a01      	cmp	r2, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800911e:	f8dc 2024 	ldr.w	r2, [ip, #36]	; 0x24
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8009122:	d91d      	bls.n	8009160 <HAL_DMA2D_ConfigLayer+0x68>
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8009124:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8009128:	b189      	cbz	r1, 800914e <HAL_DMA2D_ConfigLayer+0x56>
  else
  {


    /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800912a:	6801      	ldr	r1, [r0, #0]
 800912c:	4a1c      	ldr	r2, [pc, #112]	; (80091a0 <HAL_DMA2D_ConfigLayer+0xa8>)
 800912e:	69cd      	ldr	r5, [r1, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8009130:	f8dc 4018 	ldr.w	r4, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8009134:	402a      	ands	r2, r5
 8009136:	431a      	orrs	r2, r3
 8009138:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800913a:	610c      	str	r4, [r1, #16]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800913c:	2300      	movs	r3, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800913e:	2201      	movs	r2, #1
 8009140:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8009144:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

  return HAL_OK;
}
 8009148:	bc70      	pop	{r4, r5, r6}
  return HAL_OK;
 800914a:	4618      	mov	r0, r3
}
 800914c:	4770      	bx	lr
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800914e:	6801      	ldr	r1, [r0, #0]
 8009150:	4a13      	ldr	r2, [pc, #76]	; (80091a0 <HAL_DMA2D_ConfigLayer+0xa8>)
 8009152:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 8009154:	4022      	ands	r2, r4
 8009156:	431a      	orrs	r2, r3
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8009158:	6984      	ldr	r4, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800915a:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800915c:	618c      	str	r4, [r1, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800915e:	e7ed      	b.n	800913c <HAL_DMA2D_ConfigLayer+0x44>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8009160:	f002 447f 	and.w	r4, r2, #4278190080	; 0xff000000
 8009164:	4323      	orrs	r3, r4
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8009166:	b961      	cbnz	r1, 8009182 <HAL_DMA2D_ConfigLayer+0x8a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8009168:	6801      	ldr	r1, [r0, #0]
 800916a:	4a0d      	ldr	r2, [pc, #52]	; (80091a0 <HAL_DMA2D_ConfigLayer+0xa8>)
 800916c:	6a4c      	ldr	r4, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800916e:	6985      	ldr	r5, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8009170:	4022      	ands	r2, r4
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8009172:	6a44      	ldr	r4, [r0, #36]	; 0x24
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8009174:	431a      	orrs	r2, r3
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8009176:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800917a:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800917c:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800917e:	628c      	str	r4, [r1, #40]	; 0x28
 8009180:	e7dc      	b.n	800913c <HAL_DMA2D_ConfigLayer+0x44>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8009182:	6804      	ldr	r4, [r0, #0]
 8009184:	4906      	ldr	r1, [pc, #24]	; (80091a0 <HAL_DMA2D_ConfigLayer+0xa8>)
 8009186:	69e6      	ldr	r6, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8009188:	f8dc 5018 	ldr.w	r5, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800918c:	4031      	ands	r1, r6
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 800918e:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8009192:	4319      	orrs	r1, r3
 8009194:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8009196:	6125      	str	r5, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8009198:	6222      	str	r2, [r4, #32]
 800919a:	e7cf      	b.n	800913c <HAL_DMA2D_ConfigLayer+0x44>
  __HAL_LOCK(hdma2d);
 800919c:	2002      	movs	r0, #2
}
 800919e:	4770      	bx	lr
 80091a0:	00fcfff0 	.word	0x00fcfff0

080091a4 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80091a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80091a8:	2200      	movs	r2, #0
 80091aa:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80091ac:	f8df a260 	ldr.w	sl, [pc, #608]	; 8009410 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80091b0:	4e90      	ldr	r6, [pc, #576]	; (80093f4 <HAL_GPIO_Init+0x250>)
{
 80091b2:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 80091b4:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80091b6:	4689      	mov	r9, r1
 80091b8:	e005      	b.n	80091c6 <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 80091ba:	3301      	adds	r3, #1
 80091bc:	2b10      	cmp	r3, #16
 80091be:	f102 0202 	add.w	r2, r2, #2
 80091c2:	f000 8095 	beq.w	80092f0 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 80091c6:	2101      	movs	r1, #1
 80091c8:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80091ca:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 80091ce:	43a1      	bics	r1, r4
 80091d0:	d1f3      	bne.n	80091ba <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80091d2:	f8d9 c004 	ldr.w	ip, [r9, #4]
 80091d6:	f00c 0103 	and.w	r1, ip, #3
 80091da:	1e4d      	subs	r5, r1, #1
 80091dc:	2d01      	cmp	r5, #1
 80091de:	f240 808a 	bls.w	80092f6 <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80091e2:	2903      	cmp	r1, #3
 80091e4:	f040 80ca 	bne.w	800937c <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80091e8:	4091      	lsls	r1, r2
 80091ea:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 80091ec:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80091ee:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80091f0:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80091f2:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 80091f6:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80091f8:	d0df      	beq.n	80091ba <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80091fa:	2100      	movs	r1, #0
 80091fc:	9103      	str	r1, [sp, #12]
 80091fe:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009202:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8009206:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 800920a:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800920e:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8009212:	9103      	str	r1, [sp, #12]
 8009214:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 8009216:	f023 0103 	bic.w	r1, r3, #3
 800921a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800921e:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009222:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8009226:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009228:	00bf      	lsls	r7, r7, #2
 800922a:	f04f 0e0f 	mov.w	lr, #15
 800922e:	fa0e fe07 	lsl.w	lr, lr, r7
 8009232:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009236:	4d70      	ldr	r5, [pc, #448]	; (80093f8 <HAL_GPIO_Init+0x254>)
 8009238:	42a8      	cmp	r0, r5
 800923a:	d02e      	beq.n	800929a <HAL_GPIO_Init+0xf6>
 800923c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8009240:	42a8      	cmp	r0, r5
 8009242:	f000 809f 	beq.w	8009384 <HAL_GPIO_Init+0x1e0>
 8009246:	4d6d      	ldr	r5, [pc, #436]	; (80093fc <HAL_GPIO_Init+0x258>)
 8009248:	42a8      	cmp	r0, r5
 800924a:	f000 80a2 	beq.w	8009392 <HAL_GPIO_Init+0x1ee>
 800924e:	4d6c      	ldr	r5, [pc, #432]	; (8009400 <HAL_GPIO_Init+0x25c>)
 8009250:	42a8      	cmp	r0, r5
 8009252:	f000 80a5 	beq.w	80093a0 <HAL_GPIO_Init+0x1fc>
 8009256:	4d6b      	ldr	r5, [pc, #428]	; (8009404 <HAL_GPIO_Init+0x260>)
 8009258:	42a8      	cmp	r0, r5
 800925a:	f000 80a8 	beq.w	80093ae <HAL_GPIO_Init+0x20a>
 800925e:	4d6a      	ldr	r5, [pc, #424]	; (8009408 <HAL_GPIO_Init+0x264>)
 8009260:	42a8      	cmp	r0, r5
 8009262:	f000 80b2 	beq.w	80093ca <HAL_GPIO_Init+0x226>
 8009266:	4d69      	ldr	r5, [pc, #420]	; (800940c <HAL_GPIO_Init+0x268>)
 8009268:	42a8      	cmp	r0, r5
 800926a:	f000 80b5 	beq.w	80093d8 <HAL_GPIO_Init+0x234>
 800926e:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 8009414 <HAL_GPIO_Init+0x270>
 8009272:	4570      	cmp	r0, lr
 8009274:	f000 80a2 	beq.w	80093bc <HAL_GPIO_Init+0x218>
 8009278:	f8df e19c 	ldr.w	lr, [pc, #412]	; 8009418 <HAL_GPIO_Init+0x274>
 800927c:	4570      	cmp	r0, lr
 800927e:	f000 80b2 	beq.w	80093e6 <HAL_GPIO_Init+0x242>
 8009282:	f8df e198 	ldr.w	lr, [pc, #408]	; 800941c <HAL_GPIO_Init+0x278>
 8009286:	4570      	cmp	r0, lr
 8009288:	bf0c      	ite	eq
 800928a:	f04f 0e09 	moveq.w	lr, #9
 800928e:	f04f 0e0a 	movne.w	lr, #10
 8009292:	fa0e f707 	lsl.w	r7, lr, r7
 8009296:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800929a:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 800929e:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 80092a0:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80092a4:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 80092a8:	bf0c      	ite	eq
 80092aa:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80092ac:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 80092b0:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 80092b2:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80092b4:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 80092b8:	bf0c      	ite	eq
 80092ba:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80092bc:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 80092c0:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 80092c2:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 80092c4:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 80092c8:	bf0c      	ite	eq
 80092ca:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80092cc:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 80092d0:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80092d2:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80092d4:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 80092d8:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 80092dc:	bf0c      	ite	eq
 80092de:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80092e0:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 80092e4:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 80092e6:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80092e8:	f102 0202 	add.w	r2, r2, #2
 80092ec:	f47f af6b 	bne.w	80091c6 <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 80092f0:	b005      	add	sp, #20
 80092f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 80092f6:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 80092fa:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 80092fe:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009302:	2503      	movs	r5, #3
 8009304:	fa05 f802 	lsl.w	r8, r5, r2
 8009308:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 800930c:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8009310:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8009312:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8009314:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8009318:	f3cc 1700 	ubfx	r7, ip, #4, #1
 800931c:	409f      	lsls	r7, r3
 800931e:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009322:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 8009326:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8009328:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800932a:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800932e:	f8d9 7008 	ldr.w	r7, [r9, #8]
 8009332:	4097      	lsls	r7, r2
 8009334:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8009338:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 800933a:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800933c:	fa01 f102 	lsl.w	r1, r1, r2
 8009340:	f47f af54 	bne.w	80091ec <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 8009344:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 8009348:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800934c:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8009350:	f8de 7020 	ldr.w	r7, [lr, #32]
 8009354:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8009356:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800935a:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800935e:	fa07 f708 	lsl.w	r7, r7, r8
 8009362:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009364:	270f      	movs	r7, #15
 8009366:	fa07 f808 	lsl.w	r8, r7, r8
 800936a:	9f00      	ldr	r7, [sp, #0]
 800936c:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8009370:	9f01      	ldr	r7, [sp, #4]
 8009372:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 8009376:	f8ce 7020 	str.w	r7, [lr, #32]
 800937a:	e737      	b.n	80091ec <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800937c:	2503      	movs	r5, #3
 800937e:	4095      	lsls	r5, r2
 8009380:	43ed      	mvns	r5, r5
 8009382:	e7d1      	b.n	8009328 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009384:	f04f 0e01 	mov.w	lr, #1
 8009388:	fa0e f707 	lsl.w	r7, lr, r7
 800938c:	ea48 0807 	orr.w	r8, r8, r7
 8009390:	e783      	b.n	800929a <HAL_GPIO_Init+0xf6>
 8009392:	f04f 0e02 	mov.w	lr, #2
 8009396:	fa0e f707 	lsl.w	r7, lr, r7
 800939a:	ea48 0807 	orr.w	r8, r8, r7
 800939e:	e77c      	b.n	800929a <HAL_GPIO_Init+0xf6>
 80093a0:	f04f 0e03 	mov.w	lr, #3
 80093a4:	fa0e f707 	lsl.w	r7, lr, r7
 80093a8:	ea48 0807 	orr.w	r8, r8, r7
 80093ac:	e775      	b.n	800929a <HAL_GPIO_Init+0xf6>
 80093ae:	f04f 0e04 	mov.w	lr, #4
 80093b2:	fa0e f707 	lsl.w	r7, lr, r7
 80093b6:	ea48 0807 	orr.w	r8, r8, r7
 80093ba:	e76e      	b.n	800929a <HAL_GPIO_Init+0xf6>
 80093bc:	f04f 0e07 	mov.w	lr, #7
 80093c0:	fa0e f707 	lsl.w	r7, lr, r7
 80093c4:	ea48 0807 	orr.w	r8, r8, r7
 80093c8:	e767      	b.n	800929a <HAL_GPIO_Init+0xf6>
 80093ca:	f04f 0e05 	mov.w	lr, #5
 80093ce:	fa0e f707 	lsl.w	r7, lr, r7
 80093d2:	ea48 0807 	orr.w	r8, r8, r7
 80093d6:	e760      	b.n	800929a <HAL_GPIO_Init+0xf6>
 80093d8:	f04f 0e06 	mov.w	lr, #6
 80093dc:	fa0e f707 	lsl.w	r7, lr, r7
 80093e0:	ea48 0807 	orr.w	r8, r8, r7
 80093e4:	e759      	b.n	800929a <HAL_GPIO_Init+0xf6>
 80093e6:	f04f 0e08 	mov.w	lr, #8
 80093ea:	fa0e f707 	lsl.w	r7, lr, r7
 80093ee:	ea48 0807 	orr.w	r8, r8, r7
 80093f2:	e752      	b.n	800929a <HAL_GPIO_Init+0xf6>
 80093f4:	40013c00 	.word	0x40013c00
 80093f8:	40020000 	.word	0x40020000
 80093fc:	40020800 	.word	0x40020800
 8009400:	40020c00 	.word	0x40020c00
 8009404:	40021000 	.word	0x40021000
 8009408:	40021400 	.word	0x40021400
 800940c:	40021800 	.word	0x40021800
 8009410:	40023800 	.word	0x40023800
 8009414:	40021c00 	.word	0x40021c00
 8009418:	40022000 	.word	0x40022000
 800941c:	40022400 	.word	0x40022400

08009420 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8009420:	6903      	ldr	r3, [r0, #16]
 8009422:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8009424:	bf14      	ite	ne
 8009426:	2001      	movne	r0, #1
 8009428:	2000      	moveq	r0, #0
 800942a:	4770      	bx	lr

0800942c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800942c:	b902      	cbnz	r2, 8009430 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800942e:	0409      	lsls	r1, r1, #16
 8009430:	6181      	str	r1, [r0, #24]
  }
}
 8009432:	4770      	bx	lr

08009434 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8009434:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8009436:	ea01 0203 	and.w	r2, r1, r3
 800943a:	ea21 0103 	bic.w	r1, r1, r3
 800943e:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8009442:	6181      	str	r1, [r0, #24]
}
 8009444:	4770      	bx	lr
 8009446:	bf00      	nop

08009448 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 8009448:	4770      	bx	lr
 800944a:	bf00      	nop

0800944c <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800944c:	4a04      	ldr	r2, [pc, #16]	; (8009460 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800944e:	6951      	ldr	r1, [r2, #20]
 8009450:	4201      	tst	r1, r0
 8009452:	d100      	bne.n	8009456 <HAL_GPIO_EXTI_IRQHandler+0xa>
 8009454:	4770      	bx	lr
{
 8009456:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8009458:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800945a:	f7ff fff5 	bl	8009448 <HAL_GPIO_EXTI_Callback>
}
 800945e:	bd08      	pop	{r3, pc}
 8009460:	40013c00 	.word	0x40013c00

08009464 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 8009464:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009468:	6804      	ldr	r4, [r0, #0]
{
 800946a:	b083      	sub	sp, #12
 800946c:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800946e:	6823      	ldr	r3, [r4, #0]
{
 8009470:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8009474:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009478:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800947c:	4606      	mov	r6, r0
 800947e:	468a      	mov	sl, r1
 8009480:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009482:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009484:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009488:	d136      	bne.n	80094f8 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800948a:	6965      	ldr	r5, [r4, #20]
 800948c:	07e8      	lsls	r0, r5, #31
 800948e:	d5fc      	bpl.n	800948a <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8009490:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 8009494:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 8009496:	f1b9 3fff 	cmp.w	r9, #4294967295
 800949a:	d003      	beq.n	80094a4 <I2C_RequestMemoryWrite+0x40>
 800949c:	e04f      	b.n	800953e <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800949e:	6961      	ldr	r1, [r4, #20]
 80094a0:	054d      	lsls	r5, r1, #21
 80094a2:	d45d      	bmi.n	8009560 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80094a4:	6961      	ldr	r1, [r4, #20]
 80094a6:	078b      	lsls	r3, r1, #30
 80094a8:	d5f9      	bpl.n	800949e <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80094aa:	2300      	movs	r3, #0
 80094ac:	9301      	str	r3, [sp, #4]
 80094ae:	6963      	ldr	r3, [r4, #20]
 80094b0:	9301      	str	r3, [sp, #4]
 80094b2:	69a3      	ldr	r3, [r4, #24]
 80094b4:	9301      	str	r3, [sp, #4]
 80094b6:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80094b8:	f1b9 3fff 	cmp.w	r9, #4294967295
 80094bc:	f040 8088 	bne.w	80095d0 <I2C_RequestMemoryWrite+0x16c>
 80094c0:	6963      	ldr	r3, [r4, #20]
 80094c2:	061a      	lsls	r2, r3, #24
 80094c4:	d464      	bmi.n	8009590 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80094c6:	6963      	ldr	r3, [r4, #20]
 80094c8:	055b      	lsls	r3, r3, #21
 80094ca:	d5f9      	bpl.n	80094c0 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 80094cc:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80094ce:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 80094d2:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80094d4:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 80094d6:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80094d8:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80094dc:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80094e0:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80094e2:	f043 0304 	orr.w	r3, r3, #4
 80094e6:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80094e8:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80094ea:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80094ec:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 80094ee:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80094f2:	d066      	beq.n	80095c2 <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 80094f4:	2001      	movs	r0, #1
 80094f6:	e01f      	b.n	8009538 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80094f8:	6963      	ldr	r3, [r4, #20]
 80094fa:	07d9      	lsls	r1, r3, #31
 80094fc:	d4c8      	bmi.n	8009490 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80094fe:	f7ff fc95 	bl	8008e2c <HAL_GetTick>
 8009502:	eba0 000b 	sub.w	r0, r0, fp
 8009506:	4581      	cmp	r9, r0
 8009508:	d304      	bcc.n	8009514 <I2C_RequestMemoryWrite+0xb0>
 800950a:	f1b9 0f00 	cmp.w	r9, #0
 800950e:	d001      	beq.n	8009514 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009510:	6834      	ldr	r4, [r6, #0]
 8009512:	e7b7      	b.n	8009484 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009514:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009516:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009518:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800951a:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800951e:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009522:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009524:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 8009526:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800952a:	f042 0220 	orr.w	r2, r2, #32
 800952e:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009530:	680b      	ldr	r3, [r1, #0]
 8009532:	05dc      	lsls	r4, r3, #23
 8009534:	d435      	bmi.n	80095a2 <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 8009536:	2003      	movs	r0, #3
}
 8009538:	b003      	add	sp, #12
 800953a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800953e:	6963      	ldr	r3, [r4, #20]
 8009540:	0798      	lsls	r0, r3, #30
 8009542:	d4b2      	bmi.n	80094aa <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009544:	6963      	ldr	r3, [r4, #20]
 8009546:	055a      	lsls	r2, r3, #21
 8009548:	d40a      	bmi.n	8009560 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800954a:	f7ff fc6f 	bl	8008e2c <HAL_GetTick>
 800954e:	eba0 000b 	sub.w	r0, r0, fp
 8009552:	4581      	cmp	r9, r0
 8009554:	d34e      	bcc.n	80095f4 <I2C_RequestMemoryWrite+0x190>
 8009556:	f1b9 0f00 	cmp.w	r9, #0
 800955a:	d04b      	beq.n	80095f4 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800955c:	6834      	ldr	r4, [r6, #0]
 800955e:	e79a      	b.n	8009496 <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009560:	6823      	ldr	r3, [r4, #0]
 8009562:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009566:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009568:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800956a:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800956e:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009570:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009572:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009574:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009578:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800957c:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800957e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009582:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 8009586:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009588:	6433      	str	r3, [r6, #64]	; 0x40
}
 800958a:	b003      	add	sp, #12
 800958c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8009590:	f1b8 0f01 	cmp.w	r8, #1
 8009594:	d109      	bne.n	80095aa <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009596:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 8009598:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800959a:	6127      	str	r7, [r4, #16]
}
 800959c:	b003      	add	sp, #12
 800959e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80095a2:	f44f 7300 	mov.w	r3, #512	; 0x200
 80095a6:	6433      	str	r3, [r6, #64]	; 0x40
 80095a8:	e7c5      	b.n	8009536 <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80095aa:	0a3b      	lsrs	r3, r7, #8
 80095ac:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80095ae:	f1b9 3fff 	cmp.w	r9, #4294967295
 80095b2:	d12e      	bne.n	8009612 <I2C_RequestMemoryWrite+0x1ae>
 80095b4:	6963      	ldr	r3, [r4, #20]
 80095b6:	0619      	lsls	r1, r3, #24
 80095b8:	d4ed      	bmi.n	8009596 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80095ba:	6963      	ldr	r3, [r4, #20]
 80095bc:	055a      	lsls	r2, r3, #21
 80095be:	d5f9      	bpl.n	80095b4 <I2C_RequestMemoryWrite+0x150>
 80095c0:	e784      	b.n	80094cc <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80095c2:	6832      	ldr	r2, [r6, #0]
 80095c4:	6813      	ldr	r3, [r2, #0]
 80095c6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 80095ca:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80095cc:	6013      	str	r3, [r2, #0]
 80095ce:	e7b3      	b.n	8009538 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80095d0:	6963      	ldr	r3, [r4, #20]
 80095d2:	061d      	lsls	r5, r3, #24
 80095d4:	d4dc      	bmi.n	8009590 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80095d6:	6963      	ldr	r3, [r4, #20]
 80095d8:	0559      	lsls	r1, r3, #21
 80095da:	f53f af77 	bmi.w	80094cc <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80095de:	f7ff fc25 	bl	8008e2c <HAL_GetTick>
 80095e2:	eba0 000b 	sub.w	r0, r0, fp
 80095e6:	4581      	cmp	r9, r0
 80095e8:	d325      	bcc.n	8009636 <I2C_RequestMemoryWrite+0x1d2>
 80095ea:	f1b9 0f00 	cmp.w	r9, #0
 80095ee:	d022      	beq.n	8009636 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80095f0:	6834      	ldr	r4, [r6, #0]
 80095f2:	e761      	b.n	80094b8 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80095f4:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80095f6:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80095f8:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80095fa:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80095fe:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009602:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009604:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009608:	f043 0320 	orr.w	r3, r3, #32
 800960c:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800960e:	2001      	movs	r0, #1
 8009610:	e792      	b.n	8009538 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009612:	6963      	ldr	r3, [r4, #20]
 8009614:	061b      	lsls	r3, r3, #24
 8009616:	d4be      	bmi.n	8009596 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009618:	6963      	ldr	r3, [r4, #20]
 800961a:	0558      	lsls	r0, r3, #21
 800961c:	f53f af56 	bmi.w	80094cc <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009620:	f7ff fc04 	bl	8008e2c <HAL_GetTick>
 8009624:	eba0 000b 	sub.w	r0, r0, fp
 8009628:	4581      	cmp	r9, r0
 800962a:	d304      	bcc.n	8009636 <I2C_RequestMemoryWrite+0x1d2>
 800962c:	f1b9 0f00 	cmp.w	r9, #0
 8009630:	d001      	beq.n	8009636 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009632:	6834      	ldr	r4, [r6, #0]
 8009634:	e7bb      	b.n	80095ae <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009636:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009638:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800963a:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800963c:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009640:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009644:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009646:	4313      	orrs	r3, r2
 8009648:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800964a:	e74d      	b.n	80094e8 <I2C_RequestMemoryWrite+0x84>

0800964c <I2C_RequestMemoryRead>:
{
 800964c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009650:	6804      	ldr	r4, [r0, #0]
{
 8009652:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009654:	6823      	ldr	r3, [r4, #0]
 8009656:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800965a:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800965c:	6823      	ldr	r3, [r4, #0]
{
 800965e:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009660:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8009664:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8009668:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800966c:	6023      	str	r3, [r4, #0]
{
 800966e:	4606      	mov	r6, r0
 8009670:	468b      	mov	fp, r1
 8009672:	4617      	mov	r7, r2
 8009674:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009678:	d13a      	bne.n	80096f0 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800967a:	6965      	ldr	r5, [r4, #20]
 800967c:	07eb      	lsls	r3, r5, #31
 800967e:	d5fc      	bpl.n	800967a <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8009680:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 8009684:	6123      	str	r3, [r4, #16]
 8009686:	fa5f fb8b 	uxtb.w	fp, fp
 800968a:	f1ba 3fff 	cmp.w	sl, #4294967295
 800968e:	d003      	beq.n	8009698 <I2C_RequestMemoryRead+0x4c>
 8009690:	e069      	b.n	8009766 <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009692:	6965      	ldr	r5, [r4, #20]
 8009694:	056a      	lsls	r2, r5, #21
 8009696:	d44e      	bmi.n	8009736 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009698:	6965      	ldr	r5, [r4, #20]
 800969a:	07a9      	lsls	r1, r5, #30
 800969c:	d5f9      	bpl.n	8009692 <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800969e:	2300      	movs	r3, #0
 80096a0:	9301      	str	r3, [sp, #4]
 80096a2:	6963      	ldr	r3, [r4, #20]
 80096a4:	9301      	str	r3, [sp, #4]
 80096a6:	69a3      	ldr	r3, [r4, #24]
 80096a8:	9301      	str	r3, [sp, #4]
 80096aa:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80096ac:	f1ba 3fff 	cmp.w	sl, #4294967295
 80096b0:	f040 80bd 	bne.w	800982e <I2C_RequestMemoryRead+0x1e2>
 80096b4:	6963      	ldr	r3, [r4, #20]
 80096b6:	0618      	lsls	r0, r3, #24
 80096b8:	d468      	bmi.n	800978c <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80096ba:	6963      	ldr	r3, [r4, #20]
 80096bc:	0559      	lsls	r1, r3, #21
 80096be:	d5f9      	bpl.n	80096b4 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 80096c0:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80096c2:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 80096c6:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80096c8:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 80096ca:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80096cc:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80096d0:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80096d4:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80096d6:	f043 0304 	orr.w	r3, r3, #4
 80096da:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80096dc:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 80096de:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80096e0:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 80096e2:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80096e6:	d070      	beq.n	80097ca <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 80096e8:	2001      	movs	r0, #1
}
 80096ea:	b003      	add	sp, #12
 80096ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80096f0:	6963      	ldr	r3, [r4, #20]
 80096f2:	07dd      	lsls	r5, r3, #31
 80096f4:	d4c4      	bmi.n	8009680 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80096f6:	f7ff fb99 	bl	8008e2c <HAL_GetTick>
 80096fa:	eba0 0009 	sub.w	r0, r0, r9
 80096fe:	4582      	cmp	sl, r0
 8009700:	d304      	bcc.n	800970c <I2C_RequestMemoryRead+0xc0>
 8009702:	f1ba 0f00 	cmp.w	sl, #0
 8009706:	d001      	beq.n	800970c <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009708:	6834      	ldr	r4, [r6, #0]
 800970a:	e7b3      	b.n	8009674 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800970c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800970e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009710:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009712:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009716:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800971a:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800971c:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800971e:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009722:	f042 0220 	orr.w	r2, r2, #32
 8009726:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009728:	680b      	ldr	r3, [r1, #0]
 800972a:	05dc      	lsls	r4, r3, #23
 800972c:	d43d      	bmi.n	80097aa <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800972e:	2003      	movs	r0, #3
}
 8009730:	b003      	add	sp, #12
 8009732:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009736:	6823      	ldr	r3, [r4, #0]
 8009738:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800973c:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800973e:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009740:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 8009744:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009746:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009748:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800974a:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800974e:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009752:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009754:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009758:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800975c:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800975e:	6433      	str	r3, [r6, #64]	; 0x40
}
 8009760:	b003      	add	sp, #12
 8009762:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009766:	6963      	ldr	r3, [r4, #20]
 8009768:	079b      	lsls	r3, r3, #30
 800976a:	d498      	bmi.n	800969e <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800976c:	6963      	ldr	r3, [r4, #20]
 800976e:	0558      	lsls	r0, r3, #21
 8009770:	d4e1      	bmi.n	8009736 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009772:	f7ff fb5b 	bl	8008e2c <HAL_GetTick>
 8009776:	eba0 0009 	sub.w	r0, r0, r9
 800977a:	4582      	cmp	sl, r0
 800977c:	f0c0 808f 	bcc.w	800989e <I2C_RequestMemoryRead+0x252>
 8009780:	f1ba 0f00 	cmp.w	sl, #0
 8009784:	f000 808b 	beq.w	800989e <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009788:	6834      	ldr	r4, [r6, #0]
 800978a:	e77e      	b.n	800968a <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800978c:	f1b8 0f01 	cmp.w	r8, #1
 8009790:	d10f      	bne.n	80097b2 <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009792:	b2ff      	uxtb	r7, r7
 8009794:	6127      	str	r7, [r4, #16]
 8009796:	f1ba 3fff 	cmp.w	sl, #4294967295
 800979a:	d16e      	bne.n	800987a <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800979c:	6963      	ldr	r3, [r4, #20]
 800979e:	061b      	lsls	r3, r3, #24
 80097a0:	d41a      	bmi.n	80097d8 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80097a2:	6963      	ldr	r3, [r4, #20]
 80097a4:	055f      	lsls	r7, r3, #21
 80097a6:	d5f9      	bpl.n	800979c <I2C_RequestMemoryRead+0x150>
 80097a8:	e78a      	b.n	80096c0 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80097aa:	f44f 7300 	mov.w	r3, #512	; 0x200
 80097ae:	6433      	str	r3, [r6, #64]	; 0x40
 80097b0:	e7bd      	b.n	800972e <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80097b2:	0a3b      	lsrs	r3, r7, #8
 80097b4:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80097b6:	f1ba 3fff 	cmp.w	sl, #4294967295
 80097ba:	d17e      	bne.n	80098ba <I2C_RequestMemoryRead+0x26e>
 80097bc:	6963      	ldr	r3, [r4, #20]
 80097be:	061d      	lsls	r5, r3, #24
 80097c0:	d4e7      	bmi.n	8009792 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80097c2:	6963      	ldr	r3, [r4, #20]
 80097c4:	0558      	lsls	r0, r3, #21
 80097c6:	d5f9      	bpl.n	80097bc <I2C_RequestMemoryRead+0x170>
 80097c8:	e77a      	b.n	80096c0 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80097ca:	6832      	ldr	r2, [r6, #0]
 80097cc:	6813      	ldr	r3, [r2, #0]
 80097ce:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 80097d2:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80097d4:	6013      	str	r3, [r2, #0]
 80097d6:	e7ab      	b.n	8009730 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80097d8:	6823      	ldr	r3, [r4, #0]
 80097da:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80097de:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 80097e0:	f1ba 3fff 	cmp.w	sl, #4294967295
 80097e4:	d113      	bne.n	800980e <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80097e6:	6963      	ldr	r3, [r4, #20]
 80097e8:	07d8      	lsls	r0, r3, #31
 80097ea:	d5fc      	bpl.n	80097e6 <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 80097ec:	f04b 0301 	orr.w	r3, fp, #1
 80097f0:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 80097f2:	f1ba 3fff 	cmp.w	sl, #4294967295
 80097f6:	d003      	beq.n	8009800 <I2C_RequestMemoryRead+0x1b4>
 80097f8:	e02b      	b.n	8009852 <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80097fa:	6963      	ldr	r3, [r4, #20]
 80097fc:	055b      	lsls	r3, r3, #21
 80097fe:	d49a      	bmi.n	8009736 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009800:	6963      	ldr	r3, [r4, #20]
 8009802:	43db      	mvns	r3, r3
 8009804:	f013 0302 	ands.w	r3, r3, #2
 8009808:	d1f7      	bne.n	80097fa <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800980a:	4618      	mov	r0, r3
 800980c:	e790      	b.n	8009730 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800980e:	6963      	ldr	r3, [r4, #20]
 8009810:	07d9      	lsls	r1, r3, #31
 8009812:	d4eb      	bmi.n	80097ec <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009814:	f7ff fb0a 	bl	8008e2c <HAL_GetTick>
 8009818:	eba0 0009 	sub.w	r0, r0, r9
 800981c:	4582      	cmp	sl, r0
 800981e:	f4ff af75 	bcc.w	800970c <I2C_RequestMemoryRead+0xc0>
 8009822:	f1ba 0f00 	cmp.w	sl, #0
 8009826:	f43f af71 	beq.w	800970c <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800982a:	6834      	ldr	r4, [r6, #0]
 800982c:	e7d8      	b.n	80097e0 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800982e:	6963      	ldr	r3, [r4, #20]
 8009830:	061a      	lsls	r2, r3, #24
 8009832:	d4ab      	bmi.n	800978c <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009834:	6963      	ldr	r3, [r4, #20]
 8009836:	055d      	lsls	r5, r3, #21
 8009838:	f53f af42 	bmi.w	80096c0 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800983c:	f7ff faf6 	bl	8008e2c <HAL_GetTick>
 8009840:	eba0 0009 	sub.w	r0, r0, r9
 8009844:	4582      	cmp	sl, r0
 8009846:	d34b      	bcc.n	80098e0 <I2C_RequestMemoryRead+0x294>
 8009848:	f1ba 0f00 	cmp.w	sl, #0
 800984c:	d048      	beq.n	80098e0 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800984e:	6834      	ldr	r4, [r6, #0]
 8009850:	e72c      	b.n	80096ac <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009852:	6963      	ldr	r3, [r4, #20]
 8009854:	43db      	mvns	r3, r3
 8009856:	f013 0302 	ands.w	r3, r3, #2
 800985a:	d0d6      	beq.n	800980a <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800985c:	6963      	ldr	r3, [r4, #20]
 800985e:	055a      	lsls	r2, r3, #21
 8009860:	f53f af69 	bmi.w	8009736 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009864:	f7ff fae2 	bl	8008e2c <HAL_GetTick>
 8009868:	eba0 0009 	sub.w	r0, r0, r9
 800986c:	4582      	cmp	sl, r0
 800986e:	d316      	bcc.n	800989e <I2C_RequestMemoryRead+0x252>
 8009870:	f1ba 0f00 	cmp.w	sl, #0
 8009874:	d013      	beq.n	800989e <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009876:	6834      	ldr	r4, [r6, #0]
 8009878:	e7bb      	b.n	80097f2 <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800987a:	6963      	ldr	r3, [r4, #20]
 800987c:	061d      	lsls	r5, r3, #24
 800987e:	d4ab      	bmi.n	80097d8 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009880:	6963      	ldr	r3, [r4, #20]
 8009882:	055a      	lsls	r2, r3, #21
 8009884:	f53f af1c 	bmi.w	80096c0 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009888:	f7ff fad0 	bl	8008e2c <HAL_GetTick>
 800988c:	eba0 0009 	sub.w	r0, r0, r9
 8009890:	4582      	cmp	sl, r0
 8009892:	d325      	bcc.n	80098e0 <I2C_RequestMemoryRead+0x294>
 8009894:	f1ba 0f00 	cmp.w	sl, #0
 8009898:	d022      	beq.n	80098e0 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800989a:	6834      	ldr	r4, [r6, #0]
 800989c:	e77b      	b.n	8009796 <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800989e:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80098a0:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80098a2:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80098a4:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80098a8:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80098ac:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80098ae:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80098b2:	f043 0320 	orr.w	r3, r3, #32
 80098b6:	6433      	str	r3, [r6, #64]	; 0x40
 80098b8:	e716      	b.n	80096e8 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80098ba:	6963      	ldr	r3, [r4, #20]
 80098bc:	0619      	lsls	r1, r3, #24
 80098be:	f53f af68 	bmi.w	8009792 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80098c2:	6963      	ldr	r3, [r4, #20]
 80098c4:	055b      	lsls	r3, r3, #21
 80098c6:	f53f aefb 	bmi.w	80096c0 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80098ca:	f7ff faaf 	bl	8008e2c <HAL_GetTick>
 80098ce:	eba0 0009 	sub.w	r0, r0, r9
 80098d2:	4582      	cmp	sl, r0
 80098d4:	d304      	bcc.n	80098e0 <I2C_RequestMemoryRead+0x294>
 80098d6:	f1ba 0f00 	cmp.w	sl, #0
 80098da:	d001      	beq.n	80098e0 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80098dc:	6834      	ldr	r4, [r6, #0]
 80098de:	e76a      	b.n	80097b6 <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80098e0:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80098e2:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80098e4:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80098e6:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80098ea:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80098ee:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80098f0:	4313      	orrs	r3, r2
 80098f2:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 80098f4:	e6f2      	b.n	80096dc <I2C_RequestMemoryRead+0x90>
 80098f6:	bf00      	nop

080098f8 <HAL_I2C_Init>:
  if (hi2c == NULL)
 80098f8:	2800      	cmp	r0, #0
 80098fa:	f000 80b9 	beq.w	8009a70 <HAL_I2C_Init+0x178>
{
 80098fe:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8009900:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009904:	4604      	mov	r4, r0
 8009906:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800990a:	2b00      	cmp	r3, #0
 800990c:	f000 8098 	beq.w	8009a40 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 8009910:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8009912:	2224      	movs	r2, #36	; 0x24
 8009914:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8009918:	681a      	ldr	r2, [r3, #0]
 800991a:	f022 0201 	bic.w	r2, r2, #1
 800991e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8009920:	681a      	ldr	r2, [r3, #0]
 8009922:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009926:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8009928:	681a      	ldr	r2, [r3, #0]
 800992a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800992e:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8009930:	f001 fe70 	bl	800b614 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009934:	6865      	ldr	r5, [r4, #4]
 8009936:	4b4f      	ldr	r3, [pc, #316]	; (8009a74 <HAL_I2C_Init+0x17c>)
 8009938:	429d      	cmp	r5, r3
 800993a:	d84f      	bhi.n	80099dc <HAL_I2C_Init+0xe4>
 800993c:	4b4e      	ldr	r3, [pc, #312]	; (8009a78 <HAL_I2C_Init+0x180>)
 800993e:	4298      	cmp	r0, r3
 8009940:	d97c      	bls.n	8009a3c <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 8009942:	4b4e      	ldr	r3, [pc, #312]	; (8009a7c <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009944:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 8009946:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800994a:	1e43      	subs	r3, r0, #1
 800994c:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009950:	6822      	ldr	r2, [r4, #0]
 8009952:	6851      	ldr	r1, [r2, #4]
 8009954:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009958:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 800995c:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800995e:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 8009960:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009964:	f10c 0c01 	add.w	ip, ip, #1
 8009968:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800996c:	ea41 010c 	orr.w	r1, r1, ip
 8009970:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009972:	69d1      	ldr	r1, [r2, #28]
 8009974:	f640 70fc 	movw	r0, #4092	; 0xffc
 8009978:	3301      	adds	r3, #1
 800997a:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800997e:	4203      	tst	r3, r0
 8009980:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009984:	d161      	bne.n	8009a4a <HAL_I2C_Init+0x152>
 8009986:	2304      	movs	r3, #4
 8009988:	430b      	orrs	r3, r1
 800998a:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800998c:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8009990:	6811      	ldr	r1, [r2, #0]
 8009992:	4303      	orrs	r3, r0
 8009994:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8009998:	430b      	orrs	r3, r1
 800999a:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800999c:	6891      	ldr	r1, [r2, #8]
 800999e:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 80099a2:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 80099a6:	4303      	orrs	r3, r0
 80099a8:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80099ac:	430b      	orrs	r3, r1
 80099ae:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 80099b0:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 80099b4:	68d1      	ldr	r1, [r2, #12]
 80099b6:	4303      	orrs	r3, r0
 80099b8:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80099bc:	430b      	orrs	r3, r1
 80099be:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 80099c0:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80099c2:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 80099c4:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 80099c8:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 80099ca:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80099cc:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80099ce:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80099d2:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80099d4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 80099d8:	4618      	mov	r0, r3
}
 80099da:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80099dc:	4b28      	ldr	r3, [pc, #160]	; (8009a80 <HAL_I2C_Init+0x188>)
 80099de:	4298      	cmp	r0, r3
 80099e0:	d92c      	bls.n	8009a3c <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80099e2:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 80099e4:	4b25      	ldr	r3, [pc, #148]	; (8009a7c <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80099e6:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80099e8:	4e26      	ldr	r6, [pc, #152]	; (8009a84 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 80099ea:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80099ee:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 80099f2:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 80099f6:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 80099f8:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80099fc:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8009a00:	fb01 f303 	mul.w	r3, r1, r3
 8009a04:	fba6 6303 	umull	r6, r3, r6, r3
 8009a08:	6a11      	ldr	r1, [r2, #32]
 8009a0a:	099b      	lsrs	r3, r3, #6
 8009a0c:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009a10:	3301      	adds	r3, #1
 8009a12:	430b      	orrs	r3, r1
 8009a14:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009a16:	69d1      	ldr	r1, [r2, #28]
 8009a18:	68a3      	ldr	r3, [r4, #8]
 8009a1a:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8009a1e:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009a22:	b9ab      	cbnz	r3, 8009a50 <HAL_I2C_Init+0x158>
 8009a24:	1e43      	subs	r3, r0, #1
 8009a26:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8009a2a:	fbb3 f3f5 	udiv	r3, r3, r5
 8009a2e:	3301      	adds	r3, #1
 8009a30:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009a34:	b1d3      	cbz	r3, 8009a6c <HAL_I2C_Init+0x174>
 8009a36:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009a3a:	e7a5      	b.n	8009988 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8009a3c:	2001      	movs	r0, #1
}
 8009a3e:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 8009a40:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8009a44:	f7f8 f93c 	bl	8001cc0 <HAL_I2C_MspInit>
 8009a48:	e762      	b.n	8009910 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009a4a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009a4e:	e79b      	b.n	8009988 <HAL_I2C_Init+0x90>
 8009a50:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009a54:	1e43      	subs	r3, r0, #1
 8009a56:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009a5a:	fbb3 f3f5 	udiv	r3, r3, r5
 8009a5e:	3301      	adds	r3, #1
 8009a60:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009a64:	b113      	cbz	r3, 8009a6c <HAL_I2C_Init+0x174>
 8009a66:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8009a6a:	e78d      	b.n	8009988 <HAL_I2C_Init+0x90>
 8009a6c:	2301      	movs	r3, #1
 8009a6e:	e78b      	b.n	8009988 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8009a70:	2001      	movs	r0, #1
}
 8009a72:	4770      	bx	lr
 8009a74:	000186a0 	.word	0x000186a0
 8009a78:	001e847f 	.word	0x001e847f
 8009a7c:	431bde83 	.word	0x431bde83
 8009a80:	003d08ff 	.word	0x003d08ff
 8009a84:	10624dd3 	.word	0x10624dd3

08009a88 <HAL_I2C_Mem_Write>:
{
 8009a88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009a8c:	4604      	mov	r4, r0
 8009a8e:	b083      	sub	sp, #12
 8009a90:	4699      	mov	r9, r3
 8009a92:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 8009a96:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8009a98:	460f      	mov	r7, r1
 8009a9a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009a9c:	f7ff f9c6 	bl	8008e2c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009aa0:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009aa4:	2b20      	cmp	r3, #32
 8009aa6:	d004      	beq.n	8009ab2 <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 8009aa8:	2702      	movs	r7, #2
}
 8009aaa:	4638      	mov	r0, r7
 8009aac:	b003      	add	sp, #12
 8009aae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009ab2:	4605      	mov	r5, r0
 8009ab4:	e005      	b.n	8009ac2 <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009ab6:	f7ff f9b9 	bl	8008e2c <HAL_GetTick>
 8009aba:	1b40      	subs	r0, r0, r5
 8009abc:	2819      	cmp	r0, #25
 8009abe:	f200 80a8 	bhi.w	8009c12 <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009ac2:	6820      	ldr	r0, [r4, #0]
 8009ac4:	6983      	ldr	r3, [r0, #24]
 8009ac6:	ea6f 0c03 	mvn.w	ip, r3
 8009aca:	f01c 0b02 	ands.w	fp, ip, #2
 8009ace:	d0f2      	beq.n	8009ab6 <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 8009ad0:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8009ad4:	2b01      	cmp	r3, #1
 8009ad6:	d0e7      	beq.n	8009aa8 <HAL_I2C_Mem_Write+0x20>
 8009ad8:	2301      	movs	r3, #1
 8009ada:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009ade:	6803      	ldr	r3, [r0, #0]
 8009ae0:	07db      	lsls	r3, r3, #31
 8009ae2:	d572      	bpl.n	8009bca <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009ae4:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009ae6:	6807      	ldr	r7, [r0, #0]
 8009ae8:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 8009aec:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 8009aee:	980c      	ldr	r0, [sp, #48]	; 0x30
 8009af0:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009af2:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009af4:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009af8:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009afc:	2040      	movs	r0, #64	; 0x40
 8009afe:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009b02:	2000      	movs	r0, #0
 8009b04:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8009b06:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009b0a:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8009b0c:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009b0e:	4856      	ldr	r0, [pc, #344]	; (8009c68 <HAL_I2C_Mem_Write+0x1e0>)
 8009b10:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009b12:	464b      	mov	r3, r9
 8009b14:	4642      	mov	r2, r8
 8009b16:	4620      	mov	r0, r4
 8009b18:	f7ff fca4 	bl	8009464 <I2C_RequestMemoryWrite>
 8009b1c:	4607      	mov	r7, r0
 8009b1e:	bb00      	cbnz	r0, 8009b62 <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 8009b20:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8009b22:	2b00      	cmp	r3, #0
 8009b24:	f000 809e 	beq.w	8009c64 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009b28:	6823      	ldr	r3, [r4, #0]
 8009b2a:	1c72      	adds	r2, r6, #1
 8009b2c:	d159      	bne.n	8009be2 <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009b2e:	695a      	ldr	r2, [r3, #20]
 8009b30:	0610      	lsls	r0, r2, #24
 8009b32:	d41b      	bmi.n	8009b6c <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009b34:	695a      	ldr	r2, [r3, #20]
 8009b36:	0551      	lsls	r1, r2, #21
 8009b38:	d5f9      	bpl.n	8009b2e <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009b3a:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009b3c:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009b40:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009b42:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009b44:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009b46:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009b4a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009b4e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009b50:	f043 0304 	orr.w	r3, r3, #4
 8009b54:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009b56:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 8009b58:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009b5a:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009b5c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009b60:	d038      	beq.n	8009bd4 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 8009b62:	2701      	movs	r7, #1
}
 8009b64:	4638      	mov	r0, r7
 8009b66:	b003      	add	sp, #12
 8009b68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009b6c:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 8009b70:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009b74:	4661      	mov	r1, ip
      hi2c->XferSize--;
 8009b76:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009b7a:	f811 2b01 	ldrb.w	r2, [r1], #1
 8009b7e:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 8009b80:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 8009b82:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009b84:	3a01      	subs	r2, #1
 8009b86:	b292      	uxth	r2, r2
 8009b88:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8009b8a:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009b8c:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 8009b8e:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009b90:	0740      	lsls	r0, r0, #29
 8009b92:	d517      	bpl.n	8009bc4 <HAL_I2C_Mem_Write+0x13c>
 8009b94:	b942      	cbnz	r2, 8009ba8 <HAL_I2C_Mem_Write+0x120>
 8009b96:	1c72      	adds	r2, r6, #1
 8009b98:	d156      	bne.n	8009c48 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009b9a:	695a      	ldr	r2, [r3, #20]
 8009b9c:	0750      	lsls	r0, r2, #29
 8009b9e:	d446      	bmi.n	8009c2e <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009ba0:	695a      	ldr	r2, [r3, #20]
 8009ba2:	0551      	lsls	r1, r2, #21
 8009ba4:	d5f9      	bpl.n	8009b9a <HAL_I2C_Mem_Write+0x112>
 8009ba6:	e7c8      	b.n	8009b3a <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009ba8:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8009bac:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 8009bae:	f10c 0102 	add.w	r1, ip, #2
 8009bb2:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8009bb4:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 8009bb6:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 8009bba:	3901      	subs	r1, #1
        hi2c->XferSize--;
 8009bbc:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 8009bbe:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 8009bc0:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8009bc2:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8009bc4:	2a00      	cmp	r2, #0
 8009bc6:	d1b0      	bne.n	8009b2a <HAL_I2C_Mem_Write+0xa2>
 8009bc8:	e7e5      	b.n	8009b96 <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 8009bca:	6803      	ldr	r3, [r0, #0]
 8009bcc:	f043 0301 	orr.w	r3, r3, #1
 8009bd0:	6003      	str	r3, [r0, #0]
 8009bd2:	e787      	b.n	8009ae4 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009bd4:	6822      	ldr	r2, [r4, #0]
 8009bd6:	6813      	ldr	r3, [r2, #0]
 8009bd8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8009bdc:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009bde:	6013      	str	r3, [r2, #0]
 8009be0:	e763      	b.n	8009aaa <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009be2:	695a      	ldr	r2, [r3, #20]
 8009be4:	0612      	lsls	r2, r2, #24
 8009be6:	d4c1      	bmi.n	8009b6c <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009be8:	695a      	ldr	r2, [r3, #20]
 8009bea:	0551      	lsls	r1, r2, #21
 8009bec:	d4a5      	bmi.n	8009b3a <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009bee:	f7ff f91d 	bl	8008e2c <HAL_GetTick>
 8009bf2:	1b40      	subs	r0, r0, r5
 8009bf4:	4286      	cmp	r6, r0
 8009bf6:	d301      	bcc.n	8009bfc <HAL_I2C_Mem_Write+0x174>
 8009bf8:	2e00      	cmp	r6, #0
 8009bfa:	d195      	bne.n	8009b28 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009bfc:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009bfe:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009c00:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009c02:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009c06:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009c0a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009c0c:	4313      	orrs	r3, r2
 8009c0e:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 8009c10:	e7a1      	b.n	8009b56 <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 8009c12:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009c14:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009c18:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009c1c:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009c20:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009c22:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009c26:	f043 0320 	orr.w	r3, r3, #32
 8009c2a:	6423      	str	r3, [r4, #64]	; 0x40
 8009c2c:	e73c      	b.n	8009aa8 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009c2e:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009c30:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009c32:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 8009c36:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009c38:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8009c3a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8009c3e:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009c42:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 8009c46:	e730      	b.n	8009aaa <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009c48:	695a      	ldr	r2, [r3, #20]
 8009c4a:	0752      	lsls	r2, r2, #29
 8009c4c:	d4ef      	bmi.n	8009c2e <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009c4e:	695a      	ldr	r2, [r3, #20]
 8009c50:	0551      	lsls	r1, r2, #21
 8009c52:	f53f af72 	bmi.w	8009b3a <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009c56:	f7ff f8e9 	bl	8008e2c <HAL_GetTick>
 8009c5a:	1b40      	subs	r0, r0, r5
 8009c5c:	4286      	cmp	r6, r0
 8009c5e:	d3cd      	bcc.n	8009bfc <HAL_I2C_Mem_Write+0x174>
 8009c60:	2e00      	cmp	r6, #0
 8009c62:	d0cb      	beq.n	8009bfc <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009c64:	6823      	ldr	r3, [r4, #0]
 8009c66:	e796      	b.n	8009b96 <HAL_I2C_Mem_Write+0x10e>
 8009c68:	ffff0000 	.word	0xffff0000

08009c6c <HAL_I2C_Mem_Read>:
{
 8009c6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009c70:	4604      	mov	r4, r0
 8009c72:	b087      	sub	sp, #28
 8009c74:	4699      	mov	r9, r3
 8009c76:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 8009c7a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8009c7c:	460f      	mov	r7, r1
 8009c7e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009c80:	f7ff f8d4 	bl	8008e2c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009c84:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009c88:	2b20      	cmp	r3, #32
 8009c8a:	d004      	beq.n	8009c96 <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 8009c8c:	2702      	movs	r7, #2
}
 8009c8e:	4638      	mov	r0, r7
 8009c90:	b007      	add	sp, #28
 8009c92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009c96:	4606      	mov	r6, r0
 8009c98:	e005      	b.n	8009ca6 <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009c9a:	f7ff f8c7 	bl	8008e2c <HAL_GetTick>
 8009c9e:	1b80      	subs	r0, r0, r6
 8009ca0:	2819      	cmp	r0, #25
 8009ca2:	f200 80d2 	bhi.w	8009e4a <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009ca6:	f8d4 c000 	ldr.w	ip, [r4]
 8009caa:	f8dc 0018 	ldr.w	r0, [ip, #24]
 8009cae:	43c0      	mvns	r0, r0
 8009cb0:	f010 0b02 	ands.w	fp, r0, #2
 8009cb4:	d0f1      	beq.n	8009c9a <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 8009cb6:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8009cba:	2b01      	cmp	r3, #1
 8009cbc:	d0e6      	beq.n	8009c8c <HAL_I2C_Mem_Read+0x20>
 8009cbe:	2301      	movs	r3, #1
 8009cc0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009cc4:	f8dc 3000 	ldr.w	r3, [ip]
 8009cc8:	07d9      	lsls	r1, r3, #31
 8009cca:	d537      	bpl.n	8009d3c <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009ccc:	f8dc 0000 	ldr.w	r0, [ip]
 8009cd0:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 8009cd4:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 8009cd8:	9810      	ldr	r0, [sp, #64]	; 0x40
 8009cda:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8009cdc:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009cde:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8009ce2:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009ce6:	2040      	movs	r0, #64	; 0x40
 8009ce8:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009cec:	2000      	movs	r0, #0
 8009cee:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8009cf0:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009cf4:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8009cf6:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009cf8:	4893      	ldr	r0, [pc, #588]	; (8009f48 <HAL_I2C_Mem_Read+0x2dc>)
 8009cfa:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009cfc:	4639      	mov	r1, r7
 8009cfe:	464b      	mov	r3, r9
 8009d00:	4642      	mov	r2, r8
 8009d02:	4620      	mov	r0, r4
 8009d04:	f7ff fca2 	bl	800964c <I2C_RequestMemoryRead>
 8009d08:	4607      	mov	r7, r0
 8009d0a:	2800      	cmp	r0, #0
 8009d0c:	f040 80ab 	bne.w	8009e66 <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 8009d10:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8009d12:	b9d2      	cbnz	r2, 8009d4a <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009d14:	6823      	ldr	r3, [r4, #0]
 8009d16:	9002      	str	r0, [sp, #8]
 8009d18:	695a      	ldr	r2, [r3, #20]
 8009d1a:	9202      	str	r2, [sp, #8]
 8009d1c:	699a      	ldr	r2, [r3, #24]
 8009d1e:	9202      	str	r2, [sp, #8]
 8009d20:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009d22:	681a      	ldr	r2, [r3, #0]
 8009d24:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009d28:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009d2a:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8009d2c:	2220      	movs	r2, #32
 8009d2e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8009d32:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009d36:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8009d3a:	e7a8      	b.n	8009c8e <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 8009d3c:	f8dc 3000 	ldr.w	r3, [ip]
 8009d40:	f043 0301 	orr.w	r3, r3, #1
 8009d44:	f8cc 3000 	str.w	r3, [ip]
 8009d48:	e7c0      	b.n	8009ccc <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 8009d4a:	2a01      	cmp	r2, #1
 8009d4c:	f000 812c 	beq.w	8009fa8 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 8009d50:	2a02      	cmp	r2, #2
 8009d52:	f000 80bd 	beq.w	8009ed0 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009d56:	6823      	ldr	r3, [r4, #0]
 8009d58:	9005      	str	r0, [sp, #20]
 8009d5a:	6959      	ldr	r1, [r3, #20]
 8009d5c:	9105      	str	r1, [sp, #20]
 8009d5e:	6999      	ldr	r1, [r3, #24]
 8009d60:	9105      	str	r1, [sp, #20]
 8009d62:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 8009d64:	2a03      	cmp	r2, #3
 8009d66:	d849      	bhi.n	8009dfc <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 8009d68:	2a01      	cmp	r2, #1
 8009d6a:	f000 80eb 	beq.w	8009f44 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 8009d6e:	2a02      	cmp	r2, #2
 8009d70:	f000 8089 	beq.w	8009e86 <HAL_I2C_Mem_Read+0x21a>
 8009d74:	1c69      	adds	r1, r5, #1
 8009d76:	f040 80bb 	bne.w	8009ef0 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009d7a:	695a      	ldr	r2, [r3, #20]
 8009d7c:	0752      	lsls	r2, r2, #29
 8009d7e:	d5fc      	bpl.n	8009d7a <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009d80:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009d82:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009d84:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009d88:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009d8a:	691b      	ldr	r3, [r3, #16]
 8009d8c:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 8009d8e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009d90:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009d92:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009d94:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8009d96:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8009d98:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009d9a:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 8009d9c:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009d9e:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009da0:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009da2:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009da4:	6822      	ldr	r2, [r4, #0]
 8009da6:	f040 80af 	bne.w	8009f08 <HAL_I2C_Mem_Read+0x29c>
 8009daa:	6953      	ldr	r3, [r2, #20]
 8009dac:	075b      	lsls	r3, r3, #29
 8009dae:	d5fc      	bpl.n	8009daa <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009db0:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009db2:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009db4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009db8:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009dba:	6913      	ldr	r3, [r2, #16]
 8009dbc:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 8009dbe:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009dc0:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009dc2:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009dc4:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 8009dc6:	3b01      	subs	r3, #1
 8009dc8:	b29b      	uxth	r3, r3
 8009dca:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009dcc:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 8009dce:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 8009dd0:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 8009dd4:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009dd6:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009dda:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 8009ddc:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009dde:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009de0:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009de2:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009de4:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8009de6:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8009de8:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 8009dea:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 8009dec:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009dee:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009df0:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8009df2:	2a00      	cmp	r2, #0
 8009df4:	d099      	beq.n	8009d2a <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 8009df6:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009df8:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 8009dfa:	d9b5      	bls.n	8009d68 <HAL_I2C_Mem_Read+0xfc>
 8009dfc:	b95d      	cbnz	r5, 8009e16 <HAL_I2C_Mem_Read+0x1aa>
 8009dfe:	e0c5      	b.n	8009f8c <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009e00:	695a      	ldr	r2, [r3, #20]
 8009e02:	06d0      	lsls	r0, r2, #27
 8009e04:	f100 80b2 	bmi.w	8009f6c <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009e08:	f7ff f810 	bl	8008e2c <HAL_GetTick>
 8009e0c:	1b80      	subs	r0, r0, r6
 8009e0e:	4285      	cmp	r5, r0
 8009e10:	f0c0 8086 	bcc.w	8009f20 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009e14:	6823      	ldr	r3, [r4, #0]
 8009e16:	695a      	ldr	r2, [r3, #20]
 8009e18:	0652      	lsls	r2, r2, #25
 8009e1a:	d5f1      	bpl.n	8009e00 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e1c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009e1e:	691b      	ldr	r3, [r3, #16]
 8009e20:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 8009e22:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009e24:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 8009e26:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 8009e28:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8009e2a:	3b01      	subs	r3, #1
 8009e2c:	b29b      	uxth	r3, r3
 8009e2e:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009e30:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 8009e32:	3a01      	subs	r2, #1
 8009e34:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 8009e36:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009e3a:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 8009e3c:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 8009e3e:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009e42:	d5d6      	bpl.n	8009df2 <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e44:	6903      	ldr	r3, [r0, #16]
 8009e46:	704b      	strb	r3, [r1, #1]
 8009e48:	e036      	b.n	8009eb8 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 8009e4a:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009e4c:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009e50:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009e54:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009e58:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009e5a:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009e5e:	f043 0320 	orr.w	r3, r3, #32
 8009e62:	6423      	str	r3, [r4, #64]	; 0x40
 8009e64:	e712      	b.n	8009c8c <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 8009e66:	2701      	movs	r7, #1
}
 8009e68:	4638      	mov	r0, r7
 8009e6a:	b007      	add	sp, #28
 8009e6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009e70:	695a      	ldr	r2, [r3, #20]
 8009e72:	0750      	lsls	r0, r2, #29
 8009e74:	d40c      	bmi.n	8009e90 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009e76:	f7fe ffd9 	bl	8008e2c <HAL_GetTick>
 8009e7a:	1b80      	subs	r0, r0, r6
 8009e7c:	4285      	cmp	r5, r0
 8009e7e:	d34f      	bcc.n	8009f20 <HAL_I2C_Mem_Read+0x2b4>
 8009e80:	2d00      	cmp	r5, #0
 8009e82:	d04d      	beq.n	8009f20 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009e84:	6823      	ldr	r3, [r4, #0]
 8009e86:	1c69      	adds	r1, r5, #1
 8009e88:	d1f2      	bne.n	8009e70 <HAL_I2C_Mem_Read+0x204>
 8009e8a:	695a      	ldr	r2, [r3, #20]
 8009e8c:	0752      	lsls	r2, r2, #29
 8009e8e:	d5fc      	bpl.n	8009e8a <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009e90:	681a      	ldr	r2, [r3, #0]
 8009e92:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009e96:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e98:	691a      	ldr	r2, [r3, #16]
 8009e9a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009e9c:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 8009e9e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009ea0:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 8009ea2:	3b01      	subs	r3, #1
 8009ea4:	b29b      	uxth	r3, r3
 8009ea6:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009ea8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8009eaa:	3b01      	subs	r3, #1
 8009eac:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009eae:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 8009eb0:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009eb2:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 8009eb4:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009eb6:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 8009eb8:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009eba:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009ebc:	3301      	adds	r3, #1
 8009ebe:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 8009ec0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009ec2:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009ec4:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 8009ec6:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 8009ec8:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 8009eca:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009ecc:	8563      	strh	r3, [r4, #42]	; 0x2a
 8009ece:	e790      	b.n	8009df2 <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009ed0:	6823      	ldr	r3, [r4, #0]
 8009ed2:	6819      	ldr	r1, [r3, #0]
 8009ed4:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8009ed8:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009eda:	6819      	ldr	r1, [r3, #0]
 8009edc:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8009ee0:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009ee2:	9004      	str	r0, [sp, #16]
 8009ee4:	6959      	ldr	r1, [r3, #20]
 8009ee6:	9104      	str	r1, [sp, #16]
 8009ee8:	6999      	ldr	r1, [r3, #24]
 8009eea:	9104      	str	r1, [sp, #16]
 8009eec:	9904      	ldr	r1, [sp, #16]
 8009eee:	e739      	b.n	8009d64 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009ef0:	695a      	ldr	r2, [r3, #20]
 8009ef2:	0750      	lsls	r0, r2, #29
 8009ef4:	f53f af44 	bmi.w	8009d80 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009ef8:	f7fe ff98 	bl	8008e2c <HAL_GetTick>
 8009efc:	1b80      	subs	r0, r0, r6
 8009efe:	4285      	cmp	r5, r0
 8009f00:	d30e      	bcc.n	8009f20 <HAL_I2C_Mem_Read+0x2b4>
 8009f02:	b16d      	cbz	r5, 8009f20 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009f04:	6823      	ldr	r3, [r4, #0]
 8009f06:	e735      	b.n	8009d74 <HAL_I2C_Mem_Read+0x108>
 8009f08:	6953      	ldr	r3, [r2, #20]
 8009f0a:	0758      	lsls	r0, r3, #29
 8009f0c:	f53f af50 	bmi.w	8009db0 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009f10:	f7fe ff8c 	bl	8008e2c <HAL_GetTick>
 8009f14:	1b80      	subs	r0, r0, r6
 8009f16:	4285      	cmp	r5, r0
 8009f18:	d302      	bcc.n	8009f20 <HAL_I2C_Mem_Read+0x2b4>
 8009f1a:	2d00      	cmp	r5, #0
 8009f1c:	f47f af41 	bne.w	8009da2 <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009f20:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009f22:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009f24:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009f26:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009f2a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009f2e:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009f30:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 8009f34:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009f36:	f043 0320 	orr.w	r3, r3, #32
}
 8009f3a:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009f3c:	6423      	str	r3, [r4, #64]	; 0x40
}
 8009f3e:	b007      	add	sp, #28
 8009f40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009f44:	b95d      	cbnz	r5, 8009f5e <HAL_I2C_Mem_Read+0x2f2>
 8009f46:	e02b      	b.n	8009fa0 <HAL_I2C_Mem_Read+0x334>
 8009f48:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009f4c:	695a      	ldr	r2, [r3, #20]
 8009f4e:	06d2      	lsls	r2, r2, #27
 8009f50:	d40c      	bmi.n	8009f6c <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009f52:	f7fe ff6b 	bl	8008e2c <HAL_GetTick>
 8009f56:	1b80      	subs	r0, r0, r6
 8009f58:	4285      	cmp	r5, r0
 8009f5a:	d3e1      	bcc.n	8009f20 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009f5c:	6823      	ldr	r3, [r4, #0]
 8009f5e:	695a      	ldr	r2, [r3, #20]
 8009f60:	0651      	lsls	r1, r2, #25
 8009f62:	d5f3      	bpl.n	8009f4c <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009f64:	691a      	ldr	r2, [r3, #16]
 8009f66:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009f68:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8009f6a:	e7a5      	b.n	8009eb8 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009f6c:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8009f6e:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 8009f72:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8009f74:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009f76:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009f78:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009f7c:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8009f80:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009f82:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009f84:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 8009f88:	2701      	movs	r7, #1
 8009f8a:	e680      	b.n	8009c8e <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009f8c:	695a      	ldr	r2, [r3, #20]
 8009f8e:	0652      	lsls	r2, r2, #25
 8009f90:	f53f af44 	bmi.w	8009e1c <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009f94:	695a      	ldr	r2, [r3, #20]
 8009f96:	06d1      	lsls	r1, r2, #27
 8009f98:	d4e8      	bmi.n	8009f6c <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009f9a:	f7fe ff47 	bl	8008e2c <HAL_GetTick>
 8009f9e:	e7bf      	b.n	8009f20 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009fa0:	695a      	ldr	r2, [r3, #20]
 8009fa2:	0650      	lsls	r0, r2, #25
 8009fa4:	d5f6      	bpl.n	8009f94 <HAL_I2C_Mem_Read+0x328>
 8009fa6:	e7dd      	b.n	8009f64 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009fa8:	6823      	ldr	r3, [r4, #0]
 8009faa:	6819      	ldr	r1, [r3, #0]
 8009fac:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8009fb0:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009fb2:	9003      	str	r0, [sp, #12]
 8009fb4:	6959      	ldr	r1, [r3, #20]
 8009fb6:	9103      	str	r1, [sp, #12]
 8009fb8:	6999      	ldr	r1, [r3, #24]
 8009fba:	9103      	str	r1, [sp, #12]
 8009fbc:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009fbe:	6819      	ldr	r1, [r3, #0]
 8009fc0:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 8009fc4:	6019      	str	r1, [r3, #0]
 8009fc6:	e6cd      	b.n	8009d64 <HAL_I2C_Mem_Read+0xf8>

08009fc8 <HAL_I2C_MasterTxCpltCallback>:
 8009fc8:	4770      	bx	lr
 8009fca:	bf00      	nop

08009fcc <HAL_I2C_MasterRxCpltCallback>:
 8009fcc:	4770      	bx	lr
 8009fce:	bf00      	nop

08009fd0 <HAL_I2C_SlaveTxCpltCallback>:
 8009fd0:	4770      	bx	lr
 8009fd2:	bf00      	nop

08009fd4 <HAL_I2C_SlaveRxCpltCallback>:
 8009fd4:	4770      	bx	lr
 8009fd6:	bf00      	nop

08009fd8 <HAL_I2C_AddrCallback>:
}
 8009fd8:	4770      	bx	lr
 8009fda:	bf00      	nop

08009fdc <HAL_I2C_ListenCpltCallback>:
 8009fdc:	4770      	bx	lr
 8009fde:	bf00      	nop

08009fe0 <HAL_I2C_MemTxCpltCallback>:
 8009fe0:	4770      	bx	lr
 8009fe2:	bf00      	nop

08009fe4 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009fe4:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 8009fe8:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 8009fea:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 8009fec:	b959      	cbnz	r1, 800a006 <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 8009fee:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8009ff0:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 8009ff2:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8009ff4:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 8009ff6:	d00d      	beq.n	800a014 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 8009ff8:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8009ffc:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 8009ffe:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a000:	3201      	adds	r2, #1
 800a002:	6502      	str	r2, [r0, #80]	; 0x50
 800a004:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800a006:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a008:	2901      	cmp	r1, #1
 800a00a:	d009      	beq.n	800a020 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800a00c:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a00e:	2902      	cmp	r1, #2
 800a010:	d00e      	beq.n	800a030 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800a012:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a014:	b2d2      	uxtb	r2, r2
 800a016:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800a018:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a01a:	3202      	adds	r2, #2
 800a01c:	6502      	str	r2, [r0, #80]	; 0x50
 800a01e:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a020:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800a022:	6801      	ldr	r1, [r0, #0]
 800a024:	b2d2      	uxtb	r2, r2
 800a026:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800a028:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a02a:	3201      	adds	r2, #1
 800a02c:	6502      	str	r2, [r0, #80]	; 0x50
 800a02e:	4770      	bx	lr
 800a030:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800a032:	2a22      	cmp	r2, #34	; 0x22
 800a034:	d01f      	beq.n	800a076 <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a036:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a038:	b289      	uxth	r1, r1
 800a03a:	b9c1      	cbnz	r1, 800a06e <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a03c:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a03e:	b289      	uxth	r1, r1
 800a040:	2900      	cmp	r1, #0
 800a042:	d1e6      	bne.n	800a012 <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800a044:	2a21      	cmp	r2, #33	; 0x21
 800a046:	d1e4      	bne.n	800a012 <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a048:	6802      	ldr	r2, [r0, #0]
{
 800a04a:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a04c:	6854      	ldr	r4, [r2, #4]
 800a04e:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800a052:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a054:	6814      	ldr	r4, [r2, #0]
 800a056:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800a05a:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800a05c:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800a05e:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800a060:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a064:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800a068:	f7ff ffba 	bl	8009fe0 <HAL_I2C_MemTxCpltCallback>
}
 800a06c:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a06e:	2a21      	cmp	r2, #33	; 0x21
 800a070:	d00a      	beq.n	800a088 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a072:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800a074:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800a076:	6801      	ldr	r1, [r0, #0]
 800a078:	680a      	ldr	r2, [r1, #0]
 800a07a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a07e:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800a080:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a082:	3201      	adds	r2, #1
 800a084:	6502      	str	r2, [r0, #80]	; 0x50
 800a086:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a088:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800a08a:	6802      	ldr	r2, [r0, #0]
 800a08c:	f811 0b01 	ldrb.w	r0, [r1], #1
 800a090:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800a092:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a094:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800a096:	3a01      	subs	r2, #1
 800a098:	b292      	uxth	r2, r2
 800a09a:	855a      	strh	r2, [r3, #42]	; 0x2a
 800a09c:	4770      	bx	lr
 800a09e:	bf00      	nop

0800a0a0 <HAL_I2C_MemRxCpltCallback>:
 800a0a0:	4770      	bx	lr
 800a0a2:	bf00      	nop

0800a0a4 <HAL_I2C_ErrorCallback>:
 800a0a4:	4770      	bx	lr
 800a0a6:	bf00      	nop

0800a0a8 <HAL_I2C_AbortCpltCallback>:
 800a0a8:	4770      	bx	lr
 800a0aa:	bf00      	nop

0800a0ac <I2C_DMAAbort>:
{
 800a0ac:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a0ae:	4b3a      	ldr	r3, [pc, #232]	; (800a198 <I2C_DMAAbort+0xec>)
 800a0b0:	4a3a      	ldr	r2, [pc, #232]	; (800a19c <I2C_DMAAbort+0xf0>)
 800a0b2:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800a0b4:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800a0b6:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a0b8:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800a0ba:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a0bc:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800a0c0:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a0c2:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a0c4:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a0c8:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a0ca:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800a0ce:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a0d2:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a0d4:	9301      	str	r3, [sp, #4]
 800a0d6:	e005      	b.n	800a0e4 <I2C_DMAAbort+0x38>
    count--;
 800a0d8:	9b01      	ldr	r3, [sp, #4]
 800a0da:	3b01      	subs	r3, #1
 800a0dc:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a0de:	6813      	ldr	r3, [r2, #0]
 800a0e0:	059b      	lsls	r3, r3, #22
 800a0e2:	d506      	bpl.n	800a0f2 <I2C_DMAAbort+0x46>
    if (count == 0U)
 800a0e4:	9b01      	ldr	r3, [sp, #4]
 800a0e6:	2b00      	cmp	r3, #0
 800a0e8:	d1f6      	bne.n	800a0d8 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800a0ea:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a0ec:	f043 0320 	orr.w	r3, r3, #32
 800a0f0:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800a0f2:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800a0f4:	b34c      	cbz	r4, 800a14a <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800a0f6:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800a0f8:	2500      	movs	r5, #0
 800a0fa:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800a0fc:	b1f3      	cbz	r3, 800a13c <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a0fe:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a100:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a102:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800a106:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800a108:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a10a:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800a10c:	2400      	movs	r4, #0
 800a10e:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800a110:	6813      	ldr	r3, [r2, #0]
 800a112:	f023 0301 	bic.w	r3, r3, #1
 800a116:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a118:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a11c:	2b60      	cmp	r3, #96	; 0x60
 800a11e:	d02a      	beq.n	800a176 <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a120:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800a124:	2928      	cmp	r1, #40	; 0x28
 800a126:	d019      	beq.n	800a15c <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800a128:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a12a:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a12c:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a130:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800a134:	f7ff ffb6 	bl	800a0a4 <HAL_I2C_ErrorCallback>
}
 800a138:	b002      	add	sp, #8
 800a13a:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a13c:	6815      	ldr	r5, [r2, #0]
 800a13e:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a142:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a144:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a146:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800a148:	e7e2      	b.n	800a110 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800a14a:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800a14c:	b1f3      	cbz	r3, 800a18c <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a14e:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a150:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a152:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a156:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a158:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a15a:	e7d7      	b.n	800a10c <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800a15c:	6813      	ldr	r3, [r2, #0]
 800a15e:	f043 0301 	orr.w	r3, r3, #1
 800a162:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a164:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a166:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a168:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a16c:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a16e:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a170:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800a174:	e7de      	b.n	800a134 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a176:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800a178:	2220      	movs	r2, #32
 800a17a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a17e:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800a182:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800a184:	f7ff ff90 	bl	800a0a8 <HAL_I2C_AbortCpltCallback>
}
 800a188:	b002      	add	sp, #8
 800a18a:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a18c:	6814      	ldr	r4, [r2, #0]
 800a18e:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800a192:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800a194:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a196:	e7bb      	b.n	800a110 <I2C_DMAAbort+0x64>
 800a198:	20000078 	.word	0x20000078
 800a19c:	14f8b589 	.word	0x14f8b589

0800a1a0 <I2C_ITError>:
{
 800a1a0:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a1a2:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800a1a6:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a1aa:	2b10      	cmp	r3, #16
{
 800a1ac:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a1ae:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a1b0:	d039      	beq.n	800a226 <I2C_ITError+0x86>
 800a1b2:	b2d9      	uxtb	r1, r3
 800a1b4:	2940      	cmp	r1, #64	; 0x40
 800a1b6:	d036      	beq.n	800a226 <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a1b8:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800a1bc:	2928      	cmp	r1, #40	; 0x28
 800a1be:	d03d      	beq.n	800a23c <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a1c0:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a1c2:	6859      	ldr	r1, [r3, #4]
 800a1c4:	0508      	lsls	r0, r1, #20
 800a1c6:	d407      	bmi.n	800a1d8 <I2C_ITError+0x38>
 800a1c8:	2a60      	cmp	r2, #96	; 0x60
 800a1ca:	d005      	beq.n	800a1d8 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800a1cc:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a1ce:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a1d0:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a1d4:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800a1d8:	2200      	movs	r2, #0
 800a1da:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a1dc:	685a      	ldr	r2, [r3, #4]
 800a1de:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a1e2:	d134      	bne.n	800a24e <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a1e4:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a1e8:	2960      	cmp	r1, #96	; 0x60
 800a1ea:	d075      	beq.n	800a2d8 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a1ec:	695a      	ldr	r2, [r3, #20]
 800a1ee:	0650      	lsls	r0, r2, #25
 800a1f0:	d505      	bpl.n	800a1fe <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a1f2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a1f4:	691b      	ldr	r3, [r3, #16]
 800a1f6:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a1f8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a1fa:	3301      	adds	r3, #1
 800a1fc:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800a1fe:	4620      	mov	r0, r4
 800a200:	f7ff ff50 	bl	800a0a4 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800a204:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800a206:	0719      	lsls	r1, r3, #28
 800a208:	d004      	beq.n	800a214 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a20a:	6822      	ldr	r2, [r4, #0]
 800a20c:	6853      	ldr	r3, [r2, #4]
 800a20e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800a212:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800a214:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a218:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a21a:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800a21c:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a21e:	d501      	bpl.n	800a224 <I2C_ITError+0x84>
 800a220:	2b28      	cmp	r3, #40	; 0x28
 800a222:	d02f      	beq.n	800a284 <I2C_ITError+0xe4>
}
 800a224:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a226:	2a22      	cmp	r2, #34	; 0x22
 800a228:	d1c6      	bne.n	800a1b8 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a22a:	6823      	ldr	r3, [r4, #0]
 800a22c:	681a      	ldr	r2, [r3, #0]
 800a22e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a232:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a234:	685a      	ldr	r2, [r3, #4]
 800a236:	0512      	lsls	r2, r2, #20
 800a238:	d5c8      	bpl.n	800a1cc <I2C_ITError+0x2c>
 800a23a:	e7cd      	b.n	800a1d8 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a23c:	2300      	movs	r3, #0
 800a23e:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a240:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800a242:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a246:	685a      	ldr	r2, [r3, #4]
 800a248:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a24c:	d0ca      	beq.n	800a1e4 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a24e:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a250:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a252:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a256:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a258:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800a25c:	2b01      	cmp	r3, #1
 800a25e:	d01e      	beq.n	800a29e <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a260:	4b28      	ldr	r3, [pc, #160]	; (800a304 <I2C_ITError+0x164>)
 800a262:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a264:	f7fe fe6c 	bl	8008f40 <HAL_DMA_Abort_IT>
 800a268:	2800      	cmp	r0, #0
 800a26a:	d0cb      	beq.n	800a204 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800a26c:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a26e:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800a270:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a272:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a274:	f023 0301 	bic.w	r3, r3, #1
 800a278:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a27a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a27e:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a280:	4798      	blx	r3
 800a282:	e7bf      	b.n	800a204 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a284:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800a286:	4920      	ldr	r1, [pc, #128]	; (800a308 <I2C_ITError+0x168>)
 800a288:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800a28a:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800a28c:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800a28e:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800a290:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a294:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800a298:	f7ff fea0 	bl	8009fdc <HAL_I2C_ListenCpltCallback>
}
 800a29c:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800a29e:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a2a0:	4b18      	ldr	r3, [pc, #96]	; (800a304 <I2C_ITError+0x164>)
 800a2a2:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800a2a4:	f7fe fe4c 	bl	8008f40 <HAL_DMA_Abort_IT>
 800a2a8:	2800      	cmp	r0, #0
 800a2aa:	d0ab      	beq.n	800a204 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a2ac:	6823      	ldr	r3, [r4, #0]
 800a2ae:	695a      	ldr	r2, [r3, #20]
 800a2b0:	0651      	lsls	r1, r2, #25
 800a2b2:	d506      	bpl.n	800a2c2 <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a2b4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a2b6:	691b      	ldr	r3, [r3, #16]
 800a2b8:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800a2ba:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a2bc:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800a2be:	3201      	adds	r2, #1
 800a2c0:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a2c2:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a2c4:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800a2c6:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800a2ca:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a2cc:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a2ce:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a2d2:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a2d4:	4798      	blx	r3
 800a2d6:	e795      	b.n	800a204 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800a2d8:	2120      	movs	r1, #32
 800a2da:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a2de:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a2e0:	695a      	ldr	r2, [r3, #20]
 800a2e2:	0652      	lsls	r2, r2, #25
 800a2e4:	d506      	bpl.n	800a2f4 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a2e6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a2e8:	691b      	ldr	r3, [r3, #16]
 800a2ea:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a2ec:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a2ee:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a2f0:	3201      	adds	r2, #1
 800a2f2:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a2f4:	681a      	ldr	r2, [r3, #0]
 800a2f6:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800a2fa:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800a2fc:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800a2fe:	f7ff fed3 	bl	800a0a8 <HAL_I2C_AbortCpltCallback>
 800a302:	e77f      	b.n	800a204 <I2C_ITError+0x64>
 800a304:	0800a0ad 	.word	0x0800a0ad
 800a308:	ffff0000 	.word	0xffff0000

0800a30c <HAL_I2C_EV_IRQHandler>:
{
 800a30c:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a30e:	6803      	ldr	r3, [r0, #0]
{
 800a310:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a312:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a314:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a316:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a31a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a31e:	2910      	cmp	r1, #16
{
 800a320:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a322:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a324:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a328:	d022      	beq.n	800a370 <HAL_I2C_EV_IRQHandler+0x64>
 800a32a:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800a32e:	d01f      	beq.n	800a370 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a330:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800a332:	2900      	cmp	r1, #0
 800a334:	f000 8094 	beq.w	800a460 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a338:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800a33a:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a33c:	f011 0602 	ands.w	r6, r1, #2
 800a340:	d059      	beq.n	800a3f6 <HAL_I2C_EV_IRQHandler+0xea>
 800a342:	0586      	lsls	r6, r0, #22
 800a344:	d559      	bpl.n	800a3fa <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a346:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a348:	b102      	cbz	r2, 800a34c <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a34a:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a34c:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a350:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800a354:	2a28      	cmp	r2, #40	; 0x28
 800a356:	f000 821e 	beq.w	800a796 <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a35a:	2200      	movs	r2, #0
 800a35c:	920c      	str	r2, [sp, #48]	; 0x30
 800a35e:	6959      	ldr	r1, [r3, #20]
 800a360:	910c      	str	r1, [sp, #48]	; 0x30
 800a362:	699b      	ldr	r3, [r3, #24]
 800a364:	930c      	str	r3, [sp, #48]	; 0x30
 800a366:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800a368:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800a36c:	b00e      	add	sp, #56	; 0x38
 800a36e:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a370:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a372:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800a374:	f011 0f01 	tst.w	r1, #1
 800a378:	d11a      	bne.n	800a3b0 <HAL_I2C_EV_IRQHandler+0xa4>
 800a37a:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800a37e:	d0f5      	beq.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
 800a380:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800a384:	d0f2      	beq.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a386:	070d      	lsls	r5, r1, #28
 800a388:	d56d      	bpl.n	800a466 <HAL_I2C_EV_IRQHandler+0x15a>
 800a38a:	0585      	lsls	r5, r0, #22
 800a38c:	f140 8083 	bpl.w	800a496 <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a390:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a392:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800a394:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a396:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a398:	2900      	cmp	r1, #0
 800a39a:	f000 81e3 	beq.w	800a764 <HAL_I2C_EV_IRQHandler+0x458>
 800a39e:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800a3a0:	2a00      	cmp	r2, #0
 800a3a2:	f000 81df 	beq.w	800a764 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a3a6:	685a      	ldr	r2, [r3, #4]
 800a3a8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a3ac:	605a      	str	r2, [r3, #4]
 800a3ae:	e7dd      	b.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a3b0:	0585      	lsls	r5, r0, #22
 800a3b2:	d56e      	bpl.n	800a492 <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800a3b4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a3b6:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800a3ba:	f000 81e9 	beq.w	800a790 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800a3be:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a3c0:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800a3c4:	bf04      	itt	eq
 800a3c6:	2208      	moveq	r2, #8
 800a3c8:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a3ca:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a3ce:	2a40      	cmp	r2, #64	; 0x40
 800a3d0:	f000 81d7 	beq.w	800a782 <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800a3d4:	6922      	ldr	r2, [r4, #16]
 800a3d6:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800a3da:	f000 81b2 	beq.w	800a742 <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800a3de:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a3e0:	2a00      	cmp	r2, #0
 800a3e2:	f040 81ef 	bne.w	800a7c4 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800a3e6:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a3e8:	11d2      	asrs	r2, r2, #7
 800a3ea:	f002 0206 	and.w	r2, r2, #6
 800a3ee:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800a3f2:	611a      	str	r2, [r3, #16]
 800a3f4:	e7ba      	b.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a3f6:	06cd      	lsls	r5, r1, #27
 800a3f8:	d47c      	bmi.n	800a4f4 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a3fa:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800a3fe:	2a21      	cmp	r2, #33	; 0x21
 800a400:	f000 80f5 	beq.w	800a5ee <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a404:	064e      	lsls	r6, r1, #25
 800a406:	f140 8132 	bpl.w	800a66e <HAL_I2C_EV_IRQHandler+0x362>
 800a40a:	0545      	lsls	r5, r0, #21
 800a40c:	f140 812f 	bpl.w	800a66e <HAL_I2C_EV_IRQHandler+0x362>
 800a410:	0749      	lsls	r1, r1, #29
 800a412:	f100 812f 	bmi.w	800a674 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a416:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a41a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a41c:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a41e:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800a420:	2a00      	cmp	r2, #0
 800a422:	d0a3      	beq.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a424:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a426:	691b      	ldr	r3, [r3, #16]
 800a428:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a42a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a42c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a42e:	3b01      	subs	r3, #1
 800a430:	b29b      	uxth	r3, r3
 800a432:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a434:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a436:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a438:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800a43a:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a43c:	2b00      	cmp	r3, #0
 800a43e:	d195      	bne.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
 800a440:	292a      	cmp	r1, #42	; 0x2a
 800a442:	d193      	bne.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a444:	6822      	ldr	r2, [r4, #0]
 800a446:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a448:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a44a:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a44c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a450:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a452:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a454:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a456:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a45a:	f7ff fdbb 	bl	8009fd4 <HAL_I2C_SlaveRxCpltCallback>
 800a45e:	e785      	b.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a460:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a462:	6959      	ldr	r1, [r3, #20]
 800a464:	e76a      	b.n	800a33c <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a466:	078d      	lsls	r5, r1, #30
 800a468:	d515      	bpl.n	800a496 <HAL_I2C_EV_IRQHandler+0x18a>
 800a46a:	0585      	lsls	r5, r0, #22
 800a46c:	d513      	bpl.n	800a496 <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a46e:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800a472:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800a474:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a476:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a47a:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a47c:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a47e:	f000 81b3 	beq.w	800a7e8 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a482:	2200      	movs	r2, #0
 800a484:	920a      	str	r2, [sp, #40]	; 0x28
 800a486:	695a      	ldr	r2, [r3, #20]
 800a488:	920a      	str	r2, [sp, #40]	; 0x28
 800a48a:	699b      	ldr	r3, [r3, #24]
 800a48c:	930a      	str	r3, [sp, #40]	; 0x28
 800a48e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a490:	e76c      	b.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a492:	070d      	lsls	r5, r1, #28
 800a494:	d5e7      	bpl.n	800a466 <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800a496:	0776      	lsls	r6, r6, #29
 800a498:	f140 80f5 	bpl.w	800a686 <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a49c:	685d      	ldr	r5, [r3, #4]
 800a49e:	052d      	lsls	r5, r5, #20
 800a4a0:	f53f af64 	bmi.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a4a4:	060e      	lsls	r6, r1, #24
 800a4a6:	f140 8115 	bpl.w	800a6d4 <HAL_I2C_EV_IRQHandler+0x3c8>
 800a4aa:	0545      	lsls	r5, r0, #21
 800a4ac:	f140 8112 	bpl.w	800a6d4 <HAL_I2C_EV_IRQHandler+0x3c8>
 800a4b0:	074e      	lsls	r6, r1, #29
 800a4b2:	f100 8112 	bmi.w	800a6da <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a4b6:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a4ba:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a4bc:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a4c0:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a4c2:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a4c4:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a4c6:	2800      	cmp	r0, #0
 800a4c8:	f040 8235 	bne.w	800a936 <HAL_I2C_EV_IRQHandler+0x62a>
 800a4cc:	2a21      	cmp	r2, #33	; 0x21
 800a4ce:	f000 8347 	beq.w	800ab60 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800a4d2:	2940      	cmp	r1, #64	; 0x40
 800a4d4:	f47f af4a 	bne.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800a4d8:	2a22      	cmp	r2, #34	; 0x22
 800a4da:	f47f af47 	bne.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800a4de:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a4e0:	b292      	uxth	r2, r2
 800a4e2:	2a00      	cmp	r2, #0
 800a4e4:	f000 8268 	beq.w	800a9b8 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a4e8:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a4ec:	2a40      	cmp	r2, #64	; 0x40
 800a4ee:	f040 80b4 	bne.w	800a65a <HAL_I2C_EV_IRQHandler+0x34e>
 800a4f2:	e0fc      	b.n	800a6ee <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a4f4:	0585      	lsls	r5, r0, #22
 800a4f6:	d580      	bpl.n	800a3fa <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a4f8:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a4fc:	685a      	ldr	r2, [r3, #4]
 800a4fe:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800a502:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800a504:	960d      	str	r6, [sp, #52]	; 0x34
 800a506:	695a      	ldr	r2, [r3, #20]
 800a508:	920d      	str	r2, [sp, #52]	; 0x34
 800a50a:	681a      	ldr	r2, [r3, #0]
 800a50c:	f042 0201 	orr.w	r2, r2, #1
 800a510:	601a      	str	r2, [r3, #0]
 800a512:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a514:	681a      	ldr	r2, [r3, #0]
 800a516:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a51a:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a51c:	685a      	ldr	r2, [r3, #4]
 800a51e:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a520:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a522:	d521      	bpl.n	800a568 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a524:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800a528:	2a22      	cmp	r2, #34	; 0x22
 800a52a:	f000 817a 	beq.w	800a822 <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800a52e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a530:	6802      	ldr	r2, [r0, #0]
 800a532:	6852      	ldr	r2, [r2, #4]
 800a534:	b292      	uxth	r2, r2
 800a536:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800a538:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a53a:	b292      	uxth	r2, r2
 800a53c:	b11a      	cbz	r2, 800a546 <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a53e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a540:	f042 0204 	orr.w	r2, r2, #4
 800a544:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a546:	685a      	ldr	r2, [r3, #4]
 800a548:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a54c:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800a54e:	f7fe fd09 	bl	8008f64 <HAL_DMA_GetState>
 800a552:	2801      	cmp	r0, #1
 800a554:	d008      	beq.n	800a568 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a556:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a558:	4b99      	ldr	r3, [pc, #612]	; (800a7c0 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800a55a:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a55c:	f7fe fcf0 	bl	8008f40 <HAL_DMA_Abort_IT>
 800a560:	b110      	cbz	r0, 800a568 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a562:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a564:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a566:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800a568:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a56a:	b29b      	uxth	r3, r3
 800a56c:	b313      	cbz	r3, 800a5b4 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a56e:	6823      	ldr	r3, [r4, #0]
 800a570:	695a      	ldr	r2, [r3, #20]
 800a572:	0752      	lsls	r2, r2, #29
 800a574:	d50a      	bpl.n	800a58c <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a576:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a578:	691b      	ldr	r3, [r3, #16]
 800a57a:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a57c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a57e:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a580:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800a582:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800a584:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a586:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a588:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a58a:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a58c:	695a      	ldr	r2, [r3, #20]
 800a58e:	0656      	lsls	r6, r2, #25
 800a590:	d509      	bpl.n	800a5a6 <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a592:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a594:	691b      	ldr	r3, [r3, #16]
 800a596:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a598:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a59a:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a59c:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800a59e:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800a5a0:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800a5a2:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a5a4:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800a5a6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a5a8:	b29b      	uxth	r3, r3
 800a5aa:	b11b      	cbz	r3, 800a5b4 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a5ac:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a5ae:	f043 0304 	orr.w	r3, r3, #4
 800a5b2:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a5b4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a5b6:	2b00      	cmp	r3, #0
 800a5b8:	f040 80dd 	bne.w	800a776 <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800a5bc:	2d2a      	cmp	r5, #42	; 0x2a
 800a5be:	f000 8151 	beq.w	800a864 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800a5c2:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a5c6:	2b28      	cmp	r3, #40	; 0x28
 800a5c8:	f000 8154 	beq.w	800a874 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a5cc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a5ce:	2b22      	cmp	r3, #34	; 0x22
 800a5d0:	d002      	beq.n	800a5d8 <HAL_I2C_EV_IRQHandler+0x2cc>
 800a5d2:	2d22      	cmp	r5, #34	; 0x22
 800a5d4:	f47f aeca 	bne.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800a5d8:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800a5da:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800a5dc:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a5de:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800a5e0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800a5e4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a5e8:	f7ff fcf4 	bl	8009fd4 <HAL_I2C_SlaveRxCpltCallback>
 800a5ec:	e6be      	b.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a5ee:	060d      	lsls	r5, r1, #24
 800a5f0:	d528      	bpl.n	800a644 <HAL_I2C_EV_IRQHandler+0x338>
 800a5f2:	0546      	lsls	r6, r0, #21
 800a5f4:	d526      	bpl.n	800a644 <HAL_I2C_EV_IRQHandler+0x338>
 800a5f6:	074d      	lsls	r5, r1, #29
 800a5f8:	d427      	bmi.n	800a64a <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a5fa:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a5fe:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a600:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a602:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800a604:	2900      	cmp	r1, #0
 800a606:	f43f aeb1 	beq.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a60a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800a60c:	f811 5b01 	ldrb.w	r5, [r1], #1
 800a610:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800a612:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a614:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a616:	3901      	subs	r1, #1
 800a618:	b289      	uxth	r1, r1
 800a61a:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a61c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a61e:	b289      	uxth	r1, r1
 800a620:	2900      	cmp	r1, #0
 800a622:	f47f aea3 	bne.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
 800a626:	2829      	cmp	r0, #41	; 0x29
 800a628:	f47f aea0 	bne.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a62c:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a62e:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a630:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a634:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800a636:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800a638:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a63a:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800a63e:	f7ff fcc7 	bl	8009fd0 <HAL_I2C_SlaveTxCpltCallback>
 800a642:	e693      	b.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a644:	0749      	lsls	r1, r1, #29
 800a646:	f57f ae91 	bpl.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
 800a64a:	0582      	lsls	r2, r0, #22
 800a64c:	f57f ae8e 	bpl.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800a650:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a652:	b292      	uxth	r2, r2
 800a654:	2a00      	cmp	r2, #0
 800a656:	f43f ae89 	beq.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a65a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a65c:	f812 1b01 	ldrb.w	r1, [r2], #1
 800a660:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800a662:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a664:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a666:	3b01      	subs	r3, #1
 800a668:	b29b      	uxth	r3, r3
 800a66a:	8563      	strh	r3, [r4, #42]	; 0x2a
 800a66c:	e67e      	b.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a66e:	074a      	lsls	r2, r1, #29
 800a670:	f57f ae7c 	bpl.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
 800a674:	0586      	lsls	r6, r0, #22
 800a676:	f57f ae79 	bpl.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800a67a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a67c:	b292      	uxth	r2, r2
 800a67e:	2a00      	cmp	r2, #0
 800a680:	f43f ae74 	beq.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
 800a684:	e01b      	b.n	800a6be <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a686:	685a      	ldr	r2, [r3, #4]
 800a688:	0512      	lsls	r2, r2, #20
 800a68a:	f53f ae6f 	bmi.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a68e:	064e      	lsls	r6, r1, #25
 800a690:	d433      	bmi.n	800a6fa <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a692:	0749      	lsls	r1, r1, #29
 800a694:	f57f ae6a 	bpl.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
 800a698:	0582      	lsls	r2, r0, #22
 800a69a:	f57f ae67 	bpl.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800a69e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800a6a0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a6a2:	b292      	uxth	r2, r2
 800a6a4:	2a04      	cmp	r2, #4
 800a6a6:	f000 8113 	beq.w	800a8d0 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800a6aa:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a6ac:	b292      	uxth	r2, r2
 800a6ae:	2a03      	cmp	r2, #3
 800a6b0:	f000 8153 	beq.w	800a95a <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800a6b4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a6b6:	b292      	uxth	r2, r2
 800a6b8:	2a02      	cmp	r2, #2
 800a6ba:	f000 8182 	beq.w	800a9c2 <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a6be:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a6c0:	691b      	ldr	r3, [r3, #16]
 800a6c2:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a6c4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a6c6:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a6c8:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800a6ca:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800a6cc:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800a6ce:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a6d0:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800a6d2:	e64b      	b.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a6d4:	074d      	lsls	r5, r1, #29
 800a6d6:	f57f ae49 	bpl.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
 800a6da:	0581      	lsls	r1, r0, #22
 800a6dc:	f57f ae46 	bpl.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800a6e0:	2a21      	cmp	r2, #33	; 0x21
 800a6e2:	f000 80fd 	beq.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800a6e6:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800a6ea:	f47f ae3f 	bne.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800a6ee:	4620      	mov	r0, r4
}
 800a6f0:	b00e      	add	sp, #56	; 0x38
 800a6f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800a6f6:	f7ff bc75 	b.w	8009fe4 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a6fa:	0545      	lsls	r5, r0, #21
 800a6fc:	d5c9      	bpl.n	800a692 <HAL_I2C_EV_IRQHandler+0x386>
 800a6fe:	f011 0104 	ands.w	r1, r1, #4
 800a702:	d1c9      	bne.n	800a698 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a704:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a708:	2a22      	cmp	r2, #34	; 0x22
 800a70a:	f47f ae2f 	bne.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800a70e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a710:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800a712:	2a03      	cmp	r2, #3
 800a714:	f240 81ec 	bls.w	800aaf0 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a718:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a71a:	691b      	ldr	r3, [r3, #16]
 800a71c:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a71e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a720:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a722:	3b01      	subs	r3, #1
 800a724:	b29b      	uxth	r3, r3
 800a726:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800a728:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a72a:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800a72c:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800a72e:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800a730:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800a732:	f47f ae1b 	bne.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a736:	6822      	ldr	r2, [r4, #0]
 800a738:	6853      	ldr	r3, [r2, #4]
 800a73a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a73e:	6053      	str	r3, [r2, #4]
 800a740:	e614      	b.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800a742:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a746:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a748:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a74a:	bf16      	itet	ne
 800a74c:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a750:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a754:	b2d2      	uxtbne	r2, r2
 800a756:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a758:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800a75a:	b11a      	cbz	r2, 800a764 <HAL_I2C_EV_IRQHandler+0x458>
 800a75c:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800a75e:	2a00      	cmp	r2, #0
 800a760:	f47f ae21 	bne.w	800a3a6 <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800a764:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a766:	2a00      	cmp	r2, #0
 800a768:	f43f ae00 	beq.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
 800a76c:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800a76e:	2a00      	cmp	r2, #0
 800a770:	f47f ae19 	bne.w	800a3a6 <HAL_I2C_EV_IRQHandler+0x9a>
 800a774:	e5fa      	b.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800a776:	4620      	mov	r0, r4
}
 800a778:	b00e      	add	sp, #56	; 0x38
 800a77a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800a77e:	f7ff bd0f 	b.w	800a1a0 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800a782:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a784:	bb52      	cbnz	r2, 800a7dc <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a786:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a788:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800a78c:	611a      	str	r2, [r3, #16]
 800a78e:	e5ed      	b.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800a790:	2201      	movs	r2, #1
 800a792:	62e2      	str	r2, [r4, #44]	; 0x2c
 800a794:	e619      	b.n	800a3ca <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800a796:	685a      	ldr	r2, [r3, #4]
 800a798:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a79c:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800a79e:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800a7a0:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800a7a4:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800a7a8:	bf54      	ite	pl
 800a7aa:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800a7ac:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800a7ae:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800a7b2:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800a7b6:	4620      	mov	r0, r4
 800a7b8:	f7ff fc0e 	bl	8009fd8 <HAL_I2C_AddrCallback>
 800a7bc:	e5d6      	b.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
 800a7be:	bf00      	nop
 800a7c0:	0800a0ad 	.word	0x0800a0ad
      else if (hi2c->EventCount == 1U)
 800a7c4:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a7c6:	2a01      	cmp	r2, #1
 800a7c8:	f47f add0 	bne.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800a7cc:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a7ce:	11d2      	asrs	r2, r2, #7
 800a7d0:	f002 0206 	and.w	r2, r2, #6
 800a7d4:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800a7d8:	611a      	str	r2, [r3, #16]
 800a7da:	e5c7      	b.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a7dc:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a7de:	f042 0201 	orr.w	r2, r2, #1
 800a7e2:	b2d2      	uxtb	r2, r2
 800a7e4:	611a      	str	r2, [r3, #16]
 800a7e6:	e5c1      	b.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800a7e8:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800a7ea:	b911      	cbnz	r1, 800a7f2 <HAL_I2C_EV_IRQHandler+0x4e6>
 800a7ec:	2a40      	cmp	r2, #64	; 0x40
 800a7ee:	f000 809b 	beq.w	800a928 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800a7f2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a7f4:	b922      	cbnz	r2, 800a800 <HAL_I2C_EV_IRQHandler+0x4f4>
 800a7f6:	6921      	ldr	r1, [r4, #16]
 800a7f8:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800a7fc:	f000 809f 	beq.w	800a93e <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800a800:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a802:	b292      	uxth	r2, r2
 800a804:	2a00      	cmp	r2, #0
 800a806:	d142      	bne.n	800a88e <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a808:	9203      	str	r2, [sp, #12]
 800a80a:	695a      	ldr	r2, [r3, #20]
 800a80c:	9203      	str	r2, [sp, #12]
 800a80e:	699a      	ldr	r2, [r3, #24]
 800a810:	9203      	str	r2, [sp, #12]
 800a812:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a814:	681a      	ldr	r2, [r3, #0]
 800a816:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a81a:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800a81c:	2300      	movs	r3, #0
 800a81e:	6523      	str	r3, [r4, #80]	; 0x50
 800a820:	e5a4      	b.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800a822:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a824:	6802      	ldr	r2, [r0, #0]
 800a826:	6852      	ldr	r2, [r2, #4]
 800a828:	b292      	uxth	r2, r2
 800a82a:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800a82c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a82e:	b292      	uxth	r2, r2
 800a830:	b11a      	cbz	r2, 800a83a <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a832:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a834:	f042 0204 	orr.w	r2, r2, #4
 800a838:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a83a:	685a      	ldr	r2, [r3, #4]
 800a83c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a840:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800a842:	f7fe fb8f 	bl	8008f64 <HAL_DMA_GetState>
 800a846:	2801      	cmp	r0, #1
 800a848:	f43f ae8e 	beq.w	800a568 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800a84c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a84e:	4b98      	ldr	r3, [pc, #608]	; (800aab0 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800a850:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800a852:	f7fe fb75 	bl	8008f40 <HAL_DMA_Abort_IT>
 800a856:	2800      	cmp	r0, #0
 800a858:	f43f ae86 	beq.w	800a568 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a85c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a85e:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a860:	4798      	blx	r3
 800a862:	e681      	b.n	800a568 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a864:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800a866:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a868:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a86a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a86e:	f7ff fbb1 	bl	8009fd4 <HAL_I2C_SlaveRxCpltCallback>
 800a872:	e6a6      	b.n	800a5c2 <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800a874:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a876:	498f      	ldr	r1, [pc, #572]	; (800aab4 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800a878:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800a87a:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800a87c:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800a87e:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800a880:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a884:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800a888:	f7ff fba8 	bl	8009fdc <HAL_I2C_ListenCpltCallback>
 800a88c:	e56e      	b.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800a88e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a890:	b292      	uxth	r2, r2
 800a892:	2a01      	cmp	r2, #1
 800a894:	d070      	beq.n	800a978 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800a896:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a898:	b292      	uxth	r2, r2
 800a89a:	2a02      	cmp	r2, #2
 800a89c:	f000 80d6 	beq.w	800aa4c <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a8a0:	681a      	ldr	r2, [r3, #0]
 800a8a2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a8a6:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800a8a8:	685a      	ldr	r2, [r3, #4]
 800a8aa:	0511      	lsls	r1, r2, #20
 800a8ac:	d508      	bpl.n	800a8c0 <HAL_I2C_EV_IRQHandler+0x5b4>
 800a8ae:	2820      	cmp	r0, #32
 800a8b0:	f200 80f8 	bhi.w	800aaa4 <HAL_I2C_EV_IRQHandler+0x798>
 800a8b4:	2807      	cmp	r0, #7
 800a8b6:	f200 80ea 	bhi.w	800aa8e <HAL_I2C_EV_IRQHandler+0x782>
 800a8ba:	2801      	cmp	r0, #1
 800a8bc:	f000 80ed 	beq.w	800aa9a <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a8c0:	2200      	movs	r2, #0
 800a8c2:	9209      	str	r2, [sp, #36]	; 0x24
 800a8c4:	695a      	ldr	r2, [r3, #20]
 800a8c6:	9209      	str	r2, [sp, #36]	; 0x24
 800a8c8:	699b      	ldr	r3, [r3, #24]
 800a8ca:	9309      	str	r3, [sp, #36]	; 0x24
 800a8cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a8ce:	e7a5      	b.n	800a81c <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a8d0:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a8d2:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a8d4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a8d8:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a8da:	691b      	ldr	r3, [r3, #16]
 800a8dc:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800a8de:	e6f1      	b.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800a8e0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800a8e2:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a8e6:	2a21      	cmp	r2, #33	; 0x21
 800a8e8:	f47f ad40 	bne.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800a8ec:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a8ee:	b292      	uxth	r2, r2
 800a8f0:	2a00      	cmp	r2, #0
 800a8f2:	f47f aeb2 	bne.w	800a65a <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800a8f6:	2908      	cmp	r1, #8
 800a8f8:	f000 80e2 	beq.w	800aac0 <HAL_I2C_EV_IRQHandler+0x7b4>
 800a8fc:	2920      	cmp	r1, #32
 800a8fe:	f000 80df 	beq.w	800aac0 <HAL_I2C_EV_IRQHandler+0x7b4>
 800a902:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800a906:	f000 80db 	beq.w	800aac0 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a90a:	6859      	ldr	r1, [r3, #4]
 800a90c:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800a910:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800a912:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800a914:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800a916:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800a918:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800a91c:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800a91e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800a922:	f7ff fb51 	bl	8009fc8 <HAL_I2C_MasterTxCpltCallback>
 800a926:	e521      	b.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a928:	9101      	str	r1, [sp, #4]
 800a92a:	695a      	ldr	r2, [r3, #20]
 800a92c:	9201      	str	r2, [sp, #4]
 800a92e:	699b      	ldr	r3, [r3, #24]
 800a930:	9301      	str	r3, [sp, #4]
 800a932:	9b01      	ldr	r3, [sp, #4]
 800a934:	e51a      	b.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800a936:	2a21      	cmp	r2, #33	; 0x21
 800a938:	f43f add1 	beq.w	800a4de <HAL_I2C_EV_IRQHandler+0x1d2>
 800a93c:	e5c9      	b.n	800a4d2 <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a93e:	9202      	str	r2, [sp, #8]
 800a940:	695a      	ldr	r2, [r3, #20]
 800a942:	9202      	str	r2, [sp, #8]
 800a944:	699a      	ldr	r2, [r3, #24]
 800a946:	9202      	str	r2, [sp, #8]
 800a948:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a94a:	681a      	ldr	r2, [r3, #0]
 800a94c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a950:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800a952:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800a954:	3301      	adds	r3, #1
 800a956:	6523      	str	r3, [r4, #80]	; 0x50
 800a958:	e508      	b.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a95a:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800a95c:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a95e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a962:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800a964:	f43f aeab 	beq.w	800a6be <HAL_I2C_EV_IRQHandler+0x3b2>
 800a968:	2902      	cmp	r1, #2
 800a96a:	f43f aea8 	beq.w	800a6be <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a96e:	681a      	ldr	r2, [r3, #0]
 800a970:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a974:	601a      	str	r2, [r3, #0]
 800a976:	e6a2      	b.n	800a6be <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800a978:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800a97c:	f000 811b 	beq.w	800abb6 <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800a980:	2808      	cmp	r0, #8
 800a982:	f000 8108 	beq.w	800ab96 <HAL_I2C_EV_IRQHandler+0x88a>
 800a986:	2820      	cmp	r0, #32
 800a988:	f000 8105 	beq.w	800ab96 <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800a98c:	2d12      	cmp	r5, #18
 800a98e:	f000 80ff 	beq.w	800ab90 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800a992:	2810      	cmp	r0, #16
 800a994:	d804      	bhi.n	800a9a0 <HAL_I2C_EV_IRQHandler+0x694>
 800a996:	4a48      	ldr	r2, [pc, #288]	; (800aab8 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800a998:	40c2      	lsrs	r2, r0
 800a99a:	07d1      	lsls	r1, r2, #31
 800a99c:	f100 814c 	bmi.w	800ac38 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a9a0:	681a      	ldr	r2, [r3, #0]
 800a9a2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a9a6:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a9a8:	2200      	movs	r2, #0
 800a9aa:	9206      	str	r2, [sp, #24]
 800a9ac:	695a      	ldr	r2, [r3, #20]
 800a9ae:	9206      	str	r2, [sp, #24]
 800a9b0:	699b      	ldr	r3, [r3, #24]
 800a9b2:	9306      	str	r3, [sp, #24]
 800a9b4:	9b06      	ldr	r3, [sp, #24]
 800a9b6:	e731      	b.n	800a81c <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a9b8:	685a      	ldr	r2, [r3, #4]
 800a9ba:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a9be:	605a      	str	r2, [r3, #4]
 800a9c0:	e4d4      	b.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800a9c2:	3901      	subs	r1, #1
 800a9c4:	290f      	cmp	r1, #15
 800a9c6:	d809      	bhi.n	800a9dc <HAL_I2C_EV_IRQHandler+0x6d0>
 800a9c8:	e8df f001 	tbb	[pc, r1]
 800a9cc:	3608363b 	.word	0x3608363b
 800a9d0:	08080808 	.word	0x08080808
 800a9d4:	08080808 	.word	0x08080808
 800a9d8:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a9dc:	681a      	ldr	r2, [r3, #0]
 800a9de:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a9e2:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a9e4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a9e6:	691b      	ldr	r3, [r3, #16]
 800a9e8:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a9ea:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a9ec:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a9ee:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800a9f0:	3b01      	subs	r3, #1
 800a9f2:	b29b      	uxth	r3, r3
 800a9f4:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a9f6:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800a9f8:	1c51      	adds	r1, r2, #1
 800a9fa:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a9fc:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800a9fe:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800aa00:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800aa02:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800aa04:	3b01      	subs	r3, #1
 800aa06:	b29b      	uxth	r3, r3
 800aa08:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800aa0a:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800aa0c:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800aa0e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800aa12:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800aa14:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800aa16:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800aa18:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800aa1c:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800aa20:	2b40      	cmp	r3, #64	; 0x40
 800aa22:	f000 80f5 	beq.w	800ac10 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa26:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800aa28:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa2a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800aa2e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800aa30:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800aa32:	f7ff facb 	bl	8009fcc <HAL_I2C_MasterRxCpltCallback>
 800aa36:	e499      	b.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa38:	681a      	ldr	r2, [r3, #0]
 800aa3a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800aa3e:	601a      	str	r2, [r3, #0]
 800aa40:	e7d0      	b.n	800a9e4 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa42:	681a      	ldr	r2, [r3, #0]
 800aa44:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aa48:	601a      	str	r2, [r3, #0]
 800aa4a:	e7cb      	b.n	800a9e4 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800aa4c:	2810      	cmp	r0, #16
 800aa4e:	d804      	bhi.n	800aa5a <HAL_I2C_EV_IRQHandler+0x74e>
 800aa50:	4a19      	ldr	r2, [pc, #100]	; (800aab8 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800aa52:	40c2      	lsrs	r2, r0
 800aa54:	07d2      	lsls	r2, r2, #31
 800aa56:	f100 80c2 	bmi.w	800abde <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa5a:	681a      	ldr	r2, [r3, #0]
 800aa5c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aa60:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800aa62:	681a      	ldr	r2, [r3, #0]
 800aa64:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800aa68:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800aa6a:	685a      	ldr	r2, [r3, #4]
 800aa6c:	0516      	lsls	r6, r2, #20
 800aa6e:	d506      	bpl.n	800aa7e <HAL_I2C_EV_IRQHandler+0x772>
 800aa70:	2820      	cmp	r0, #32
 800aa72:	f240 80bc 	bls.w	800abee <HAL_I2C_EV_IRQHandler+0x8e2>
 800aa76:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800aa7a:	f000 80bd 	beq.w	800abf8 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aa7e:	2200      	movs	r2, #0
 800aa80:	9208      	str	r2, [sp, #32]
 800aa82:	695a      	ldr	r2, [r3, #20]
 800aa84:	9208      	str	r2, [sp, #32]
 800aa86:	699b      	ldr	r3, [r3, #24]
 800aa88:	9308      	str	r3, [sp, #32]
 800aa8a:	9b08      	ldr	r3, [sp, #32]
 800aa8c:	e6c6      	b.n	800a81c <HAL_I2C_EV_IRQHandler+0x510>
 800aa8e:	4a0b      	ldr	r2, [pc, #44]	; (800aabc <HAL_I2C_EV_IRQHandler+0x7b0>)
 800aa90:	3808      	subs	r0, #8
 800aa92:	40c2      	lsrs	r2, r0
 800aa94:	07d2      	lsls	r2, r2, #31
 800aa96:	f57f af13 	bpl.w	800a8c0 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800aa9a:	685a      	ldr	r2, [r3, #4]
 800aa9c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800aaa0:	605a      	str	r2, [r3, #4]
 800aaa2:	e70d      	b.n	800a8c0 <HAL_I2C_EV_IRQHandler+0x5b4>
 800aaa4:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800aaa8:	f47f af0a 	bne.w	800a8c0 <HAL_I2C_EV_IRQHandler+0x5b4>
 800aaac:	e7f5      	b.n	800aa9a <HAL_I2C_EV_IRQHandler+0x78e>
 800aaae:	bf00      	nop
 800aab0:	0800a0ad 	.word	0x0800a0ad
 800aab4:	ffff0000 	.word	0xffff0000
 800aab8:	00010014 	.word	0x00010014
 800aabc:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800aac0:	6859      	ldr	r1, [r3, #4]
 800aac2:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800aac6:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aac8:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800aaca:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800aacc:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aace:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800aad2:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800aad4:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800aad6:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800aada:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800aade:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800aae2:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800aae4:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800aae6:	f47f af1c 	bne.w	800a922 <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800aaea:	f7ff fa79 	bl	8009fe0 <HAL_I2C_MemTxCpltCallback>
 800aaee:	e43d      	b.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800aaf0:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800aaf2:	2802      	cmp	r0, #2
 800aaf4:	f43f af60 	beq.w	800a9b8 <HAL_I2C_EV_IRQHandler+0x6ac>
 800aaf8:	2a01      	cmp	r2, #1
 800aafa:	f63f af5d 	bhi.w	800a9b8 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800aafe:	4a62      	ldr	r2, [pc, #392]	; (800ac88 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800ab00:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800ab02:	6812      	ldr	r2, [r2, #0]
 800ab04:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800ab08:	fbb2 f2f0 	udiv	r2, r2, r0
 800ab0c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800ab10:	920b      	str	r2, [sp, #44]	; 0x2c
 800ab12:	e004      	b.n	800ab1e <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800ab14:	681a      	ldr	r2, [r3, #0]
 800ab16:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800ab1a:	f000 8092 	beq.w	800ac42 <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800ab1e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ab20:	3a01      	subs	r2, #1
 800ab22:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800ab24:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ab26:	2900      	cmp	r1, #0
 800ab28:	d1f4      	bne.n	800ab14 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ab2a:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab2c:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ab2e:	f042 0220 	orr.w	r2, r2, #32
 800ab32:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ab34:	685a      	ldr	r2, [r3, #4]
 800ab36:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800ab3a:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab3c:	691b      	ldr	r3, [r3, #16]
 800ab3e:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800ab40:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800ab42:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800ab44:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800ab46:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800ab48:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800ab4a:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800ab4c:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800ab4e:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800ab50:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800ab54:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800ab56:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800ab5a:	f7ff faa3 	bl	800a0a4 <HAL_I2C_ErrorCallback>
 800ab5e:	e405      	b.n	800a36c <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800ab60:	2d08      	cmp	r5, #8
 800ab62:	d0ad      	beq.n	800aac0 <HAL_I2C_EV_IRQHandler+0x7b4>
 800ab64:	2d20      	cmp	r5, #32
 800ab66:	d0ab      	beq.n	800aac0 <HAL_I2C_EV_IRQHandler+0x7b4>
 800ab68:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800ab6c:	d0a8      	beq.n	800aac0 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ab6e:	685a      	ldr	r2, [r3, #4]
 800ab70:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800ab74:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800ab76:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ab78:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800ab7a:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800ab7c:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ab7e:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800ab82:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800ab84:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800ab88:	f7ff fa1e 	bl	8009fc8 <HAL_I2C_MasterTxCpltCallback>
 800ab8c:	f7ff bbee 	b.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800ab90:	2801      	cmp	r0, #1
 800ab92:	f43f af05 	beq.w	800a9a0 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab96:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ab98:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab9a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ab9e:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aba0:	9107      	str	r1, [sp, #28]
 800aba2:	695a      	ldr	r2, [r3, #20]
 800aba4:	9207      	str	r2, [sp, #28]
 800aba6:	699a      	ldr	r2, [r3, #24]
 800aba8:	9207      	str	r2, [sp, #28]
 800abaa:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800abac:	681a      	ldr	r2, [r3, #0]
 800abae:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800abb2:	601a      	str	r2, [r3, #0]
 800abb4:	e632      	b.n	800a81c <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abb6:	681a      	ldr	r2, [r3, #0]
 800abb8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800abbc:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800abbe:	685a      	ldr	r2, [r3, #4]
 800abc0:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800abc4:	d02d      	beq.n	800ac22 <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abc6:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800abc8:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abca:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800abce:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800abd0:	9104      	str	r1, [sp, #16]
 800abd2:	695a      	ldr	r2, [r3, #20]
 800abd4:	9204      	str	r2, [sp, #16]
 800abd6:	699b      	ldr	r3, [r3, #24]
 800abd8:	9304      	str	r3, [sp, #16]
 800abda:	9b04      	ldr	r3, [sp, #16]
 800abdc:	e61e      	b.n	800a81c <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abde:	681a      	ldr	r2, [r3, #0]
 800abe0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800abe4:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800abe6:	685a      	ldr	r2, [r3, #4]
 800abe8:	0515      	lsls	r5, r2, #20
 800abea:	f57f af48 	bpl.w	800aa7e <HAL_I2C_EV_IRQHandler+0x772>
 800abee:	2807      	cmp	r0, #7
 800abf0:	d807      	bhi.n	800ac02 <HAL_I2C_EV_IRQHandler+0x8f6>
 800abf2:	2801      	cmp	r0, #1
 800abf4:	f47f af43 	bne.w	800aa7e <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800abf8:	685a      	ldr	r2, [r3, #4]
 800abfa:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800abfe:	605a      	str	r2, [r3, #4]
 800ac00:	e73d      	b.n	800aa7e <HAL_I2C_EV_IRQHandler+0x772>
 800ac02:	4a22      	ldr	r2, [pc, #136]	; (800ac8c <HAL_I2C_EV_IRQHandler+0x980>)
 800ac04:	3808      	subs	r0, #8
 800ac06:	40c2      	lsrs	r2, r0
 800ac08:	07d0      	lsls	r0, r2, #31
 800ac0a:	f57f af38 	bpl.w	800aa7e <HAL_I2C_EV_IRQHandler+0x772>
 800ac0e:	e7f3      	b.n	800abf8 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ac10:	2300      	movs	r3, #0
 800ac12:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800ac16:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800ac18:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800ac1a:	f7ff fa41 	bl	800a0a0 <HAL_I2C_MemRxCpltCallback>
 800ac1e:	f7ff bba5 	b.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ac22:	9205      	str	r2, [sp, #20]
 800ac24:	695a      	ldr	r2, [r3, #20]
 800ac26:	9205      	str	r2, [sp, #20]
 800ac28:	699a      	ldr	r2, [r3, #24]
 800ac2a:	9205      	str	r2, [sp, #20]
 800ac2c:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ac2e:	681a      	ldr	r2, [r3, #0]
 800ac30:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ac34:	601a      	str	r2, [r3, #0]
 800ac36:	e5f1      	b.n	800a81c <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ac38:	681a      	ldr	r2, [r3, #0]
 800ac3a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ac3e:	601a      	str	r2, [r3, #0]
 800ac40:	e6b2      	b.n	800a9a8 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ac42:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac44:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ac46:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800ac4a:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ac4c:	6859      	ldr	r1, [r3, #4]
 800ac4e:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800ac52:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac54:	691b      	ldr	r3, [r3, #16]
 800ac56:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800ac58:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800ac5a:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800ac5c:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800ac5e:	b29b      	uxth	r3, r3
 800ac60:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800ac62:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800ac66:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ac68:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800ac6c:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ac6e:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800ac70:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ac72:	f47f aed9 	bne.w	800aa28 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800ac76:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800ac7a:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800ac7c:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800ac7e:	f7ff fa0f 	bl	800a0a0 <HAL_I2C_MemRxCpltCallback>
 800ac82:	f7ff bb73 	b.w	800a36c <HAL_I2C_EV_IRQHandler+0x60>
 800ac86:	bf00      	nop
 800ac88:	20000078 	.word	0x20000078
 800ac8c:	01000101 	.word	0x01000101

0800ac90 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800ac90:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800ac94:	2a20      	cmp	r2, #32
{
 800ac96:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800ac98:	fa5f fc82 	uxtb.w	ip, r2
 800ac9c:	d001      	beq.n	800aca2 <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800ac9e:	2002      	movs	r0, #2
  }
}
 800aca0:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800aca2:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800aca4:	2024      	movs	r0, #36	; 0x24
 800aca6:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800acaa:	6810      	ldr	r0, [r2, #0]
 800acac:	f020 0001 	bic.w	r0, r0, #1
 800acb0:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800acb2:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800acb4:	f020 0010 	bic.w	r0, r0, #16
 800acb8:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800acba:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800acbc:	4301      	orrs	r1, r0
 800acbe:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800acc0:	6811      	ldr	r1, [r2, #0]
 800acc2:	f041 0101 	orr.w	r1, r1, #1
 800acc6:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800acc8:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800acca:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800acce:	4770      	bx	lr

0800acd0 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800acd0:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800acd4:	2a20      	cmp	r2, #32
 800acd6:	d001      	beq.n	800acdc <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800acd8:	2002      	movs	r0, #2
  }
}
 800acda:	4770      	bx	lr
{
 800acdc:	b410      	push	{r4}
 800acde:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800ace2:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800ace4:	2224      	movs	r2, #36	; 0x24
 800ace6:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800acea:	6822      	ldr	r2, [r4, #0]
 800acec:	f022 0201 	bic.w	r2, r2, #1
 800acf0:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800acf2:	4603      	mov	r3, r0
 800acf4:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800acf6:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800acfa:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800acfc:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800acfe:	b289      	uxth	r1, r1
 800ad00:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800ad02:	6822      	ldr	r2, [r4, #0]
 800ad04:	f042 0201 	orr.w	r2, r2, #1
 800ad08:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800ad0a:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800ad0e:	2000      	movs	r0, #0
}
 800ad10:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ad14:	4770      	bx	lr
 800ad16:	bf00      	nop

0800ad18 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800ad18:	2800      	cmp	r0, #0
 800ad1a:	d069      	beq.n	800adf0 <HAL_LTDC_Init+0xd8>
{
 800ad1c:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800ad1e:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800ad22:	4604      	mov	r4, r0
 800ad24:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ad28:	2b00      	cmp	r3, #0
 800ad2a:	d05c      	beq.n	800ade6 <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ad2c:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ad2e:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ad30:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ad34:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ad38:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ad3a:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800ad3c:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ad40:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800ad44:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ad46:	6999      	ldr	r1, [r3, #24]
 800ad48:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800ad4a:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ad4c:	430a      	orrs	r2, r1
 800ad4e:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800ad50:	689a      	ldr	r2, [r3, #8]
 800ad52:	4928      	ldr	r1, [pc, #160]	; (800adf4 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800ad54:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800ad56:	400a      	ands	r2, r1
 800ad58:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800ad5a:	689a      	ldr	r2, [r3, #8]
 800ad5c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ad60:	69a0      	ldr	r0, [r4, #24]
 800ad62:	4302      	orrs	r2, r0
 800ad64:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800ad66:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800ad68:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800ad6a:	400a      	ands	r2, r1
 800ad6c:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800ad6e:	68da      	ldr	r2, [r3, #12]
 800ad70:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ad74:	6a20      	ldr	r0, [r4, #32]
 800ad76:	4302      	orrs	r2, r0
 800ad78:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800ad7a:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800ad7c:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800ad7e:	400a      	ands	r2, r1
 800ad80:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800ad82:	691a      	ldr	r2, [r3, #16]
 800ad84:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ad88:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800ad8a:	4302      	orrs	r2, r0
 800ad8c:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800ad8e:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800ad90:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800ad92:	400a      	ands	r2, r1
 800ad94:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800ad96:	695a      	ldr	r2, [r3, #20]
 800ad98:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ad9a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ad9e:	430a      	orrs	r2, r1
 800ada0:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800ada2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800ada4:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800ada8:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800adac:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800adb0:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800adb2:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800adb4:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800adb8:	432a      	orrs	r2, r5
 800adba:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800adbe:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800adc2:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800adc4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800adc6:	f042 0206 	orr.w	r2, r2, #6
 800adca:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800adcc:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800adce:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800add2:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800add4:	ea42 020c 	orr.w	r2, r2, ip
 800add8:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800adda:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800adde:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800ade2:	4608      	mov	r0, r1
}
 800ade4:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800ade6:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800adea:	f7f6 ffd1 	bl	8001d90 <HAL_LTDC_MspInit>
 800adee:	e79d      	b.n	800ad2c <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800adf0:	2001      	movs	r0, #1
}
 800adf2:	4770      	bx	lr
 800adf4:	f000f800 	.word	0xf000f800

0800adf8 <HAL_LTDC_ErrorCallback>:
 800adf8:	4770      	bx	lr
 800adfa:	bf00      	nop

0800adfc <HAL_LTDC_ReloadEventCallback>:
 800adfc:	4770      	bx	lr
 800adfe:	bf00      	nop

0800ae00 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800ae00:	6803      	ldr	r3, [r0, #0]
{
 800ae02:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800ae04:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800ae06:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800ae08:	076a      	lsls	r2, r5, #29
{
 800ae0a:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800ae0c:	d501      	bpl.n	800ae12 <HAL_LTDC_IRQHandler+0x12>
 800ae0e:	0771      	lsls	r1, r6, #29
 800ae10:	d41d      	bmi.n	800ae4e <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800ae12:	07aa      	lsls	r2, r5, #30
 800ae14:	d501      	bpl.n	800ae1a <HAL_LTDC_IRQHandler+0x1a>
 800ae16:	07b3      	lsls	r3, r6, #30
 800ae18:	d42d      	bmi.n	800ae76 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800ae1a:	07e8      	lsls	r0, r5, #31
 800ae1c:	d501      	bpl.n	800ae22 <HAL_LTDC_IRQHandler+0x22>
 800ae1e:	07f1      	lsls	r1, r6, #31
 800ae20:	d440      	bmi.n	800aea4 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800ae22:	072a      	lsls	r2, r5, #28
 800ae24:	d501      	bpl.n	800ae2a <HAL_LTDC_IRQHandler+0x2a>
 800ae26:	0733      	lsls	r3, r6, #28
 800ae28:	d400      	bmi.n	800ae2c <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800ae2a:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800ae2c:	6823      	ldr	r3, [r4, #0]
 800ae2e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800ae30:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800ae32:	f022 0208 	bic.w	r2, r2, #8
 800ae36:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800ae38:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800ae3a:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800ae3c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800ae3e:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800ae42:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800ae46:	4620      	mov	r0, r4
 800ae48:	f7ff ffd8 	bl	800adfc <HAL_LTDC_ReloadEventCallback>
}
 800ae4c:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800ae4e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800ae50:	f022 0204 	bic.w	r2, r2, #4
 800ae54:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800ae56:	2204      	movs	r2, #4
 800ae58:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800ae5a:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800ae5e:	f043 0301 	orr.w	r3, r3, #1
 800ae62:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800ae66:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800ae68:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800ae6c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800ae70:	f7ff ffc2 	bl	800adf8 <HAL_LTDC_ErrorCallback>
 800ae74:	e7cd      	b.n	800ae12 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800ae76:	6823      	ldr	r3, [r4, #0]
 800ae78:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800ae7a:	f022 0202 	bic.w	r2, r2, #2
 800ae7e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800ae80:	2202      	movs	r2, #2
 800ae82:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800ae84:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800ae88:	f043 0302 	orr.w	r3, r3, #2
 800ae8c:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800ae90:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800ae92:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800ae94:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800ae98:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800ae9c:	4620      	mov	r0, r4
 800ae9e:	f7ff ffab 	bl	800adf8 <HAL_LTDC_ErrorCallback>
 800aea2:	e7ba      	b.n	800ae1a <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800aea4:	6823      	ldr	r3, [r4, #0]
 800aea6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800aea8:	f022 0201 	bic.w	r2, r2, #1
 800aeac:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800aeae:	2201      	movs	r2, #1
 800aeb0:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800aeb2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800aeb4:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800aeb8:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800aebc:	4620      	mov	r0, r4
 800aebe:	f7f6 fa31 	bl	8001324 <HAL_LTDC_LineEventCallback>
 800aec2:	e7ae      	b.n	800ae22 <HAL_LTDC_IRQHandler+0x22>

0800aec4 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800aec4:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800aec8:	2b01      	cmp	r3, #1
 800aeca:	f000 80c2 	beq.w	800b052 <HAL_LTDC_ConfigLayer+0x18e>
{
 800aece:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800aed2:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800aed6:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800aeda:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800aede:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800aee0:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800aee2:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800aee6:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800aeea:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800aeee:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800aef2:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800aef6:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800aefa:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800aefc:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800af00:	460c      	mov	r4, r1
 800af02:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800af04:	9301      	str	r3, [sp, #4]
 800af06:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800af08:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800af0a:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800af0e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800af12:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800af14:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800af16:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800af1a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800af1c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800af20:	6823      	ldr	r3, [r4, #0]
 800af22:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800af26:	9b01      	ldr	r3, [sp, #4]
 800af28:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800af2c:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800af30:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800af32:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800af34:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800af38:	1c51      	adds	r1, r2, #1
 800af3a:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800af3e:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800af40:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800af42:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800af46:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800af4a:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800af4e:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800af52:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800af56:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800af5a:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800af5e:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800af60:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800af62:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800af66:	3301      	adds	r3, #1
 800af68:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800af6c:	4403      	add	r3, r0
 800af6e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800af72:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800af76:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800af7a:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800af7c:	f023 0307 	bic.w	r3, r3, #7
 800af80:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800af84:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800af88:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800af8c:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800af90:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800af94:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800af98:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800af9c:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800afa0:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800afa4:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800afa8:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800afac:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800afb0:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800afb4:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800afb8:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800afbc:	696b      	ldr	r3, [r5, #20]
 800afbe:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800afc2:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800afc6:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800afca:	f023 0307 	bic.w	r3, r3, #7
 800afce:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800afd2:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800afd6:	4303      	orrs	r3, r0
 800afd8:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800afdc:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800afe0:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800afe2:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800afe6:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800afea:	bb69      	cbnz	r1, 800b048 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800afec:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800afee:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800aff0:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800aff2:	fb03 f707 	mul.w	r7, r3, r7
 800aff6:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800aff8:	fb02 f303 	mul.w	r3, r2, r3
 800affc:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b000:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b004:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b006:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800b00a:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b00e:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800b012:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800b016:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800b01a:	f023 0307 	bic.w	r3, r3, #7
 800b01e:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b022:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b026:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b02a:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b02c:	4313      	orrs	r3, r2
 800b02e:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800b032:	2300      	movs	r3, #0
  return HAL_OK;
 800b034:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b036:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800b03a:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b03e:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800b042:	b003      	add	sp, #12
 800b044:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800b048:	3901      	subs	r1, #1
 800b04a:	2906      	cmp	r1, #6
 800b04c:	d903      	bls.n	800b056 <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b04e:	2301      	movs	r3, #1
 800b050:	e7cd      	b.n	800afee <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800b052:	2002      	movs	r0, #2
}
 800b054:	4770      	bx	lr
 800b056:	4b02      	ldr	r3, [pc, #8]	; (800b060 <HAL_LTDC_ConfigLayer+0x19c>)
 800b058:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800b05c:	e7c7      	b.n	800afee <HAL_LTDC_ConfigLayer+0x12a>
 800b05e:	bf00      	nop
 800b060:	0802c644 	.word	0x0802c644

0800b064 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800b064:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b068:	2b01      	cmp	r3, #1
 800b06a:	d019      	beq.n	800b0a0 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b06c:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b06e:	2302      	movs	r3, #2
{
 800b070:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b072:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b076:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b078:	4c0a      	ldr	r4, [pc, #40]	; (800b0a4 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b07a:	f023 0301 	bic.w	r3, r3, #1
 800b07e:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b080:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b082:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800b084:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b086:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800b08a:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b08e:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800b090:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b094:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800b098:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800b09c:	4618      	mov	r0, r3
}
 800b09e:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800b0a0:	2002      	movs	r0, #2
}
 800b0a2:	4770      	bx	lr
 800b0a4:	40016800 	.word	0x40016800

0800b0a8 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800b0a8:	2800      	cmp	r0, #0
 800b0aa:	f000 81a2 	beq.w	800b3f2 <HAL_RCC_OscConfig+0x34a>
{
 800b0ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b0b2:	6803      	ldr	r3, [r0, #0]
 800b0b4:	07dd      	lsls	r5, r3, #31
{
 800b0b6:	b082      	sub	sp, #8
 800b0b8:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b0ba:	d52f      	bpl.n	800b11c <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b0bc:	499e      	ldr	r1, [pc, #632]	; (800b338 <HAL_RCC_OscConfig+0x290>)
 800b0be:	688a      	ldr	r2, [r1, #8]
 800b0c0:	f002 020c 	and.w	r2, r2, #12
 800b0c4:	2a04      	cmp	r2, #4
 800b0c6:	f000 80ed 	beq.w	800b2a4 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b0ca:	688a      	ldr	r2, [r1, #8]
 800b0cc:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b0d0:	2a08      	cmp	r2, #8
 800b0d2:	f000 80e3 	beq.w	800b29c <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b0d6:	6863      	ldr	r3, [r4, #4]
 800b0d8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800b0dc:	f000 80ec 	beq.w	800b2b8 <HAL_RCC_OscConfig+0x210>
 800b0e0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800b0e4:	f000 8175 	beq.w	800b3d2 <HAL_RCC_OscConfig+0x32a>
 800b0e8:	4d93      	ldr	r5, [pc, #588]	; (800b338 <HAL_RCC_OscConfig+0x290>)
 800b0ea:	682a      	ldr	r2, [r5, #0]
 800b0ec:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800b0f0:	602a      	str	r2, [r5, #0]
 800b0f2:	682a      	ldr	r2, [r5, #0]
 800b0f4:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800b0f8:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b0fa:	2b00      	cmp	r3, #0
 800b0fc:	f040 80e1 	bne.w	800b2c2 <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b100:	f7fd fe94 	bl	8008e2c <HAL_GetTick>
 800b104:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b106:	e005      	b.n	800b114 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b108:	f7fd fe90 	bl	8008e2c <HAL_GetTick>
 800b10c:	1b80      	subs	r0, r0, r6
 800b10e:	2864      	cmp	r0, #100	; 0x64
 800b110:	f200 8101 	bhi.w	800b316 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b114:	682b      	ldr	r3, [r5, #0]
 800b116:	039b      	lsls	r3, r3, #14
 800b118:	d4f6      	bmi.n	800b108 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800b11a:	6823      	ldr	r3, [r4, #0]
 800b11c:	079f      	lsls	r7, r3, #30
 800b11e:	d528      	bpl.n	800b172 <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b120:	4a85      	ldr	r2, [pc, #532]	; (800b338 <HAL_RCC_OscConfig+0x290>)
 800b122:	6891      	ldr	r1, [r2, #8]
 800b124:	f011 0f0c 	tst.w	r1, #12
 800b128:	f000 8090 	beq.w	800b24c <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b12c:	6891      	ldr	r1, [r2, #8]
 800b12e:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b132:	2908      	cmp	r1, #8
 800b134:	f000 8086 	beq.w	800b244 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800b138:	68e3      	ldr	r3, [r4, #12]
 800b13a:	2b00      	cmp	r3, #0
 800b13c:	f000 810e 	beq.w	800b35c <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800b140:	4b7e      	ldr	r3, [pc, #504]	; (800b33c <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b142:	4e7d      	ldr	r6, [pc, #500]	; (800b338 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800b144:	2201      	movs	r2, #1
 800b146:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800b148:	f7fd fe70 	bl	8008e2c <HAL_GetTick>
 800b14c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b14e:	e005      	b.n	800b15c <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b150:	f7fd fe6c 	bl	8008e2c <HAL_GetTick>
 800b154:	1b40      	subs	r0, r0, r5
 800b156:	2802      	cmp	r0, #2
 800b158:	f200 80dd 	bhi.w	800b316 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b15c:	6833      	ldr	r3, [r6, #0]
 800b15e:	0798      	lsls	r0, r3, #30
 800b160:	d5f6      	bpl.n	800b150 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b162:	6833      	ldr	r3, [r6, #0]
 800b164:	6922      	ldr	r2, [r4, #16]
 800b166:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800b16a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800b16e:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b170:	6823      	ldr	r3, [r4, #0]
 800b172:	071a      	lsls	r2, r3, #28
 800b174:	d451      	bmi.n	800b21a <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b176:	0758      	lsls	r0, r3, #29
 800b178:	d52f      	bpl.n	800b1da <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800b17a:	4a6f      	ldr	r2, [pc, #444]	; (800b338 <HAL_RCC_OscConfig+0x290>)
 800b17c:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b17e:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800b182:	d07f      	beq.n	800b284 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800b184:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b186:	4e6e      	ldr	r6, [pc, #440]	; (800b340 <HAL_RCC_OscConfig+0x298>)
 800b188:	6833      	ldr	r3, [r6, #0]
 800b18a:	05d9      	lsls	r1, r3, #23
 800b18c:	f140 80b3 	bpl.w	800b2f6 <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b190:	68a3      	ldr	r3, [r4, #8]
 800b192:	2b01      	cmp	r3, #1
 800b194:	f000 80c3 	beq.w	800b31e <HAL_RCC_OscConfig+0x276>
 800b198:	2b05      	cmp	r3, #5
 800b19a:	f000 812c 	beq.w	800b3f6 <HAL_RCC_OscConfig+0x34e>
 800b19e:	4e66      	ldr	r6, [pc, #408]	; (800b338 <HAL_RCC_OscConfig+0x290>)
 800b1a0:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b1a2:	f022 0201 	bic.w	r2, r2, #1
 800b1a6:	6732      	str	r2, [r6, #112]	; 0x70
 800b1a8:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b1aa:	f022 0204 	bic.w	r2, r2, #4
 800b1ae:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b1b0:	2b00      	cmp	r3, #0
 800b1b2:	f040 80b9 	bne.w	800b328 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800b1b6:	f7fd fe39 	bl	8008e2c <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b1ba:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800b1be:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b1c0:	e005      	b.n	800b1ce <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b1c2:	f7fd fe33 	bl	8008e2c <HAL_GetTick>
 800b1c6:	1bc0      	subs	r0, r0, r7
 800b1c8:	4540      	cmp	r0, r8
 800b1ca:	f200 80a4 	bhi.w	800b316 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b1ce:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800b1d0:	0798      	lsls	r0, r3, #30
 800b1d2:	d4f6      	bmi.n	800b1c2 <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800b1d4:	2d00      	cmp	r5, #0
 800b1d6:	f040 8106 	bne.w	800b3e6 <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800b1da:	69a0      	ldr	r0, [r4, #24]
 800b1dc:	b1c8      	cbz	r0, 800b212 <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800b1de:	4d56      	ldr	r5, [pc, #344]	; (800b338 <HAL_RCC_OscConfig+0x290>)
 800b1e0:	68ab      	ldr	r3, [r5, #8]
 800b1e2:	f003 030c 	and.w	r3, r3, #12
 800b1e6:	2b08      	cmp	r3, #8
 800b1e8:	f000 80c9 	beq.w	800b37e <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800b1ec:	4b53      	ldr	r3, [pc, #332]	; (800b33c <HAL_RCC_OscConfig+0x294>)
 800b1ee:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b1f0:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800b1f2:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b1f4:	f000 8109 	beq.w	800b40a <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b1f8:	f7fd fe18 	bl	8008e2c <HAL_GetTick>
 800b1fc:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b1fe:	e005      	b.n	800b20c <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b200:	f7fd fe14 	bl	8008e2c <HAL_GetTick>
 800b204:	1b00      	subs	r0, r0, r4
 800b206:	2802      	cmp	r0, #2
 800b208:	f200 8085 	bhi.w	800b316 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b20c:	682b      	ldr	r3, [r5, #0]
 800b20e:	019b      	lsls	r3, r3, #6
 800b210:	d4f6      	bmi.n	800b200 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800b212:	2000      	movs	r0, #0
}
 800b214:	b002      	add	sp, #8
 800b216:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800b21a:	6963      	ldr	r3, [r4, #20]
 800b21c:	b30b      	cbz	r3, 800b262 <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800b21e:	4b47      	ldr	r3, [pc, #284]	; (800b33c <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b220:	4e45      	ldr	r6, [pc, #276]	; (800b338 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800b222:	2201      	movs	r2, #1
 800b224:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b228:	f7fd fe00 	bl	8008e2c <HAL_GetTick>
 800b22c:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b22e:	e004      	b.n	800b23a <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b230:	f7fd fdfc 	bl	8008e2c <HAL_GetTick>
 800b234:	1b40      	subs	r0, r0, r5
 800b236:	2802      	cmp	r0, #2
 800b238:	d86d      	bhi.n	800b316 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b23a:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b23c:	079b      	lsls	r3, r3, #30
 800b23e:	d5f7      	bpl.n	800b230 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b240:	6823      	ldr	r3, [r4, #0]
 800b242:	e798      	b.n	800b176 <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b244:	6852      	ldr	r2, [r2, #4]
 800b246:	0256      	lsls	r6, r2, #9
 800b248:	f53f af76 	bmi.w	800b138 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800b24c:	4a3a      	ldr	r2, [pc, #232]	; (800b338 <HAL_RCC_OscConfig+0x290>)
 800b24e:	6812      	ldr	r2, [r2, #0]
 800b250:	0795      	lsls	r5, r2, #30
 800b252:	d544      	bpl.n	800b2de <HAL_RCC_OscConfig+0x236>
 800b254:	68e2      	ldr	r2, [r4, #12]
 800b256:	2a01      	cmp	r2, #1
 800b258:	d041      	beq.n	800b2de <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800b25a:	2001      	movs	r0, #1
}
 800b25c:	b002      	add	sp, #8
 800b25e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800b262:	4a36      	ldr	r2, [pc, #216]	; (800b33c <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b264:	4e34      	ldr	r6, [pc, #208]	; (800b338 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800b266:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b26a:	f7fd fddf 	bl	8008e2c <HAL_GetTick>
 800b26e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b270:	e004      	b.n	800b27c <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b272:	f7fd fddb 	bl	8008e2c <HAL_GetTick>
 800b276:	1b40      	subs	r0, r0, r5
 800b278:	2802      	cmp	r0, #2
 800b27a:	d84c      	bhi.n	800b316 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b27c:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b27e:	079f      	lsls	r7, r3, #30
 800b280:	d4f7      	bmi.n	800b272 <HAL_RCC_OscConfig+0x1ca>
 800b282:	e7dd      	b.n	800b240 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800b284:	9301      	str	r3, [sp, #4]
 800b286:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b288:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800b28c:	6413      	str	r3, [r2, #64]	; 0x40
 800b28e:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b290:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b294:	9301      	str	r3, [sp, #4]
 800b296:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800b298:	2501      	movs	r5, #1
 800b29a:	e774      	b.n	800b186 <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b29c:	684a      	ldr	r2, [r1, #4]
 800b29e:	0250      	lsls	r0, r2, #9
 800b2a0:	f57f af19 	bpl.w	800b0d6 <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800b2a4:	4a24      	ldr	r2, [pc, #144]	; (800b338 <HAL_RCC_OscConfig+0x290>)
 800b2a6:	6812      	ldr	r2, [r2, #0]
 800b2a8:	0391      	lsls	r1, r2, #14
 800b2aa:	f57f af37 	bpl.w	800b11c <HAL_RCC_OscConfig+0x74>
 800b2ae:	6862      	ldr	r2, [r4, #4]
 800b2b0:	2a00      	cmp	r2, #0
 800b2b2:	f47f af33 	bne.w	800b11c <HAL_RCC_OscConfig+0x74>
 800b2b6:	e7d0      	b.n	800b25a <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b2b8:	4a1f      	ldr	r2, [pc, #124]	; (800b338 <HAL_RCC_OscConfig+0x290>)
 800b2ba:	6813      	ldr	r3, [r2, #0]
 800b2bc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800b2c0:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b2c2:	f7fd fdb3 	bl	8008e2c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b2c6:	4e1c      	ldr	r6, [pc, #112]	; (800b338 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800b2c8:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b2ca:	e004      	b.n	800b2d6 <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b2cc:	f7fd fdae 	bl	8008e2c <HAL_GetTick>
 800b2d0:	1b40      	subs	r0, r0, r5
 800b2d2:	2864      	cmp	r0, #100	; 0x64
 800b2d4:	d81f      	bhi.n	800b316 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b2d6:	6833      	ldr	r3, [r6, #0]
 800b2d8:	039a      	lsls	r2, r3, #14
 800b2da:	d5f7      	bpl.n	800b2cc <HAL_RCC_OscConfig+0x224>
 800b2dc:	e71d      	b.n	800b11a <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b2de:	4916      	ldr	r1, [pc, #88]	; (800b338 <HAL_RCC_OscConfig+0x290>)
 800b2e0:	6920      	ldr	r0, [r4, #16]
 800b2e2:	680a      	ldr	r2, [r1, #0]
 800b2e4:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800b2e8:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800b2ec:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b2ee:	071a      	lsls	r2, r3, #28
 800b2f0:	f57f af41 	bpl.w	800b176 <HAL_RCC_OscConfig+0xce>
 800b2f4:	e791      	b.n	800b21a <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800b2f6:	6833      	ldr	r3, [r6, #0]
 800b2f8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b2fc:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800b2fe:	f7fd fd95 	bl	8008e2c <HAL_GetTick>
 800b302:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b304:	6833      	ldr	r3, [r6, #0]
 800b306:	05da      	lsls	r2, r3, #23
 800b308:	f53f af42 	bmi.w	800b190 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800b30c:	f7fd fd8e 	bl	8008e2c <HAL_GetTick>
 800b310:	1bc0      	subs	r0, r0, r7
 800b312:	2802      	cmp	r0, #2
 800b314:	d9f6      	bls.n	800b304 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800b316:	2003      	movs	r0, #3
}
 800b318:	b002      	add	sp, #8
 800b31a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b31e:	4a06      	ldr	r2, [pc, #24]	; (800b338 <HAL_RCC_OscConfig+0x290>)
 800b320:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800b322:	f043 0301 	orr.w	r3, r3, #1
 800b326:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800b328:	f7fd fd80 	bl	8008e2c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b32c:	4f02      	ldr	r7, [pc, #8]	; (800b338 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800b32e:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b330:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b334:	e00b      	b.n	800b34e <HAL_RCC_OscConfig+0x2a6>
 800b336:	bf00      	nop
 800b338:	40023800 	.word	0x40023800
 800b33c:	42470000 	.word	0x42470000
 800b340:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b344:	f7fd fd72 	bl	8008e2c <HAL_GetTick>
 800b348:	1b80      	subs	r0, r0, r6
 800b34a:	4540      	cmp	r0, r8
 800b34c:	d8e3      	bhi.n	800b316 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b34e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800b350:	079b      	lsls	r3, r3, #30
 800b352:	d5f7      	bpl.n	800b344 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800b354:	2d00      	cmp	r5, #0
 800b356:	f43f af40 	beq.w	800b1da <HAL_RCC_OscConfig+0x132>
 800b35a:	e044      	b.n	800b3e6 <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800b35c:	4a42      	ldr	r2, [pc, #264]	; (800b468 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b35e:	4e43      	ldr	r6, [pc, #268]	; (800b46c <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800b360:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b362:	f7fd fd63 	bl	8008e2c <HAL_GetTick>
 800b366:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b368:	e004      	b.n	800b374 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b36a:	f7fd fd5f 	bl	8008e2c <HAL_GetTick>
 800b36e:	1b40      	subs	r0, r0, r5
 800b370:	2802      	cmp	r0, #2
 800b372:	d8d0      	bhi.n	800b316 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b374:	6833      	ldr	r3, [r6, #0]
 800b376:	0799      	lsls	r1, r3, #30
 800b378:	d4f7      	bmi.n	800b36a <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b37a:	6823      	ldr	r3, [r4, #0]
 800b37c:	e6f9      	b.n	800b172 <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800b37e:	2801      	cmp	r0, #1
 800b380:	f43f af48 	beq.w	800b214 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800b384:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b386:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b388:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b38c:	4291      	cmp	r1, r2
 800b38e:	f47f af64 	bne.w	800b25a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b392:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b394:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b398:	4291      	cmp	r1, r2
 800b39a:	f47f af5e 	bne.w	800b25a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b39e:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b3a0:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800b3a4:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b3a6:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800b3aa:	f47f af56 	bne.w	800b25a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b3ae:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800b3b0:	0852      	lsrs	r2, r2, #1
 800b3b2:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800b3b6:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b3b8:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800b3bc:	f47f af4d 	bne.w	800b25a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800b3c0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b3c2:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b3c6:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800b3ca:	bf14      	ite	ne
 800b3cc:	2001      	movne	r0, #1
 800b3ce:	2000      	moveq	r0, #0
 800b3d0:	e720      	b.n	800b214 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b3d2:	4b26      	ldr	r3, [pc, #152]	; (800b46c <HAL_RCC_OscConfig+0x3c4>)
 800b3d4:	681a      	ldr	r2, [r3, #0]
 800b3d6:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800b3da:	601a      	str	r2, [r3, #0]
 800b3dc:	681a      	ldr	r2, [r3, #0]
 800b3de:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800b3e2:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b3e4:	e76d      	b.n	800b2c2 <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800b3e6:	4a21      	ldr	r2, [pc, #132]	; (800b46c <HAL_RCC_OscConfig+0x3c4>)
 800b3e8:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b3ea:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800b3ee:	6413      	str	r3, [r2, #64]	; 0x40
 800b3f0:	e6f3      	b.n	800b1da <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800b3f2:	2001      	movs	r0, #1
}
 800b3f4:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b3f6:	4b1d      	ldr	r3, [pc, #116]	; (800b46c <HAL_RCC_OscConfig+0x3c4>)
 800b3f8:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b3fa:	f042 0204 	orr.w	r2, r2, #4
 800b3fe:	671a      	str	r2, [r3, #112]	; 0x70
 800b400:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b402:	f042 0201 	orr.w	r2, r2, #1
 800b406:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b408:	e78e      	b.n	800b328 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800b40a:	f7fd fd0f 	bl	8008e2c <HAL_GetTick>
 800b40e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b410:	e005      	b.n	800b41e <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b412:	f7fd fd0b 	bl	8008e2c <HAL_GetTick>
 800b416:	1b80      	subs	r0, r0, r6
 800b418:	2802      	cmp	r0, #2
 800b41a:	f63f af7c 	bhi.w	800b316 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b41e:	682b      	ldr	r3, [r5, #0]
 800b420:	0199      	lsls	r1, r3, #6
 800b422:	d4f6      	bmi.n	800b412 <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b424:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800b428:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b42a:	430b      	orrs	r3, r1
 800b42c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800b430:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800b434:	0852      	lsrs	r2, r2, #1
 800b436:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800b43a:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800b43c:	490a      	ldr	r1, [pc, #40]	; (800b468 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b43e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800b442:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b444:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800b446:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800b448:	f7fd fcf0 	bl	8008e2c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b44c:	4d07      	ldr	r5, [pc, #28]	; (800b46c <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800b44e:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b450:	e005      	b.n	800b45e <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b452:	f7fd fceb 	bl	8008e2c <HAL_GetTick>
 800b456:	1b00      	subs	r0, r0, r4
 800b458:	2802      	cmp	r0, #2
 800b45a:	f63f af5c 	bhi.w	800b316 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b45e:	682b      	ldr	r3, [r5, #0]
 800b460:	019a      	lsls	r2, r3, #6
 800b462:	d5f6      	bpl.n	800b452 <HAL_RCC_OscConfig+0x3aa>
 800b464:	e6d5      	b.n	800b212 <HAL_RCC_OscConfig+0x16a>
 800b466:	bf00      	nop
 800b468:	42470000 	.word	0x42470000
 800b46c:	40023800 	.word	0x40023800

0800b470 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b470:	4916      	ldr	r1, [pc, #88]	; (800b4cc <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800b472:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b474:	688b      	ldr	r3, [r1, #8]
 800b476:	f003 030c 	and.w	r3, r3, #12
 800b47a:	2b04      	cmp	r3, #4
 800b47c:	d01b      	beq.n	800b4b6 <HAL_RCC_GetSysClockFreq+0x46>
 800b47e:	2b08      	cmp	r3, #8
 800b480:	d117      	bne.n	800b4b2 <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b482:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b484:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b486:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b488:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b48c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b490:	d113      	bne.n	800b4ba <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b492:	480f      	ldr	r0, [pc, #60]	; (800b4d0 <HAL_RCC_GetSysClockFreq+0x60>)
 800b494:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b498:	fba1 0100 	umull	r0, r1, r1, r0
 800b49c:	f7f4 fef8 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800b4a0:	4b0a      	ldr	r3, [pc, #40]	; (800b4cc <HAL_RCC_GetSysClockFreq+0x5c>)
 800b4a2:	685b      	ldr	r3, [r3, #4]
 800b4a4:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800b4a8:	3301      	adds	r3, #1
 800b4aa:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800b4ac:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800b4b0:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800b4b2:	4807      	ldr	r0, [pc, #28]	; (800b4d0 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800b4b4:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b4b6:	4807      	ldr	r0, [pc, #28]	; (800b4d4 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800b4b8:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b4ba:	4806      	ldr	r0, [pc, #24]	; (800b4d4 <HAL_RCC_GetSysClockFreq+0x64>)
 800b4bc:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b4c0:	2300      	movs	r3, #0
 800b4c2:	fba1 0100 	umull	r0, r1, r1, r0
 800b4c6:	f7f4 fee3 	bl	8000290 <__aeabi_uldivmod>
 800b4ca:	e7e9      	b.n	800b4a0 <HAL_RCC_GetSysClockFreq+0x30>
 800b4cc:	40023800 	.word	0x40023800
 800b4d0:	00f42400 	.word	0x00f42400
 800b4d4:	007a1200 	.word	0x007a1200

0800b4d8 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800b4d8:	2800      	cmp	r0, #0
 800b4da:	f000 8087 	beq.w	800b5ec <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b4de:	4a48      	ldr	r2, [pc, #288]	; (800b600 <HAL_RCC_ClockConfig+0x128>)
 800b4e0:	6813      	ldr	r3, [r2, #0]
 800b4e2:	f003 030f 	and.w	r3, r3, #15
 800b4e6:	428b      	cmp	r3, r1
{
 800b4e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b4ec:	460d      	mov	r5, r1
 800b4ee:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b4f0:	d209      	bcs.n	800b506 <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b4f2:	b2cb      	uxtb	r3, r1
 800b4f4:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b4f6:	6813      	ldr	r3, [r2, #0]
 800b4f8:	f003 030f 	and.w	r3, r3, #15
 800b4fc:	428b      	cmp	r3, r1
 800b4fe:	d002      	beq.n	800b506 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800b500:	2001      	movs	r0, #1
}
 800b502:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800b506:	6823      	ldr	r3, [r4, #0]
 800b508:	0798      	lsls	r0, r3, #30
 800b50a:	d514      	bpl.n	800b536 <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b50c:	0759      	lsls	r1, r3, #29
 800b50e:	d504      	bpl.n	800b51a <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800b510:	493c      	ldr	r1, [pc, #240]	; (800b604 <HAL_RCC_ClockConfig+0x12c>)
 800b512:	688a      	ldr	r2, [r1, #8]
 800b514:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800b518:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b51a:	071a      	lsls	r2, r3, #28
 800b51c:	d504      	bpl.n	800b528 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800b51e:	4939      	ldr	r1, [pc, #228]	; (800b604 <HAL_RCC_ClockConfig+0x12c>)
 800b520:	688a      	ldr	r2, [r1, #8]
 800b522:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800b526:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800b528:	4936      	ldr	r1, [pc, #216]	; (800b604 <HAL_RCC_ClockConfig+0x12c>)
 800b52a:	68a0      	ldr	r0, [r4, #8]
 800b52c:	688a      	ldr	r2, [r1, #8]
 800b52e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800b532:	4302      	orrs	r2, r0
 800b534:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800b536:	07df      	lsls	r7, r3, #31
 800b538:	d521      	bpl.n	800b57e <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800b53a:	6862      	ldr	r2, [r4, #4]
 800b53c:	2a01      	cmp	r2, #1
 800b53e:	d057      	beq.n	800b5f0 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b540:	1e93      	subs	r3, r2, #2
 800b542:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b544:	4b2f      	ldr	r3, [pc, #188]	; (800b604 <HAL_RCC_ClockConfig+0x12c>)
 800b546:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b548:	d94d      	bls.n	800b5e6 <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b54a:	0799      	lsls	r1, r3, #30
 800b54c:	d5d8      	bpl.n	800b500 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800b54e:	4e2d      	ldr	r6, [pc, #180]	; (800b604 <HAL_RCC_ClockConfig+0x12c>)
 800b550:	68b3      	ldr	r3, [r6, #8]
 800b552:	f023 0303 	bic.w	r3, r3, #3
 800b556:	4313      	orrs	r3, r2
 800b558:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800b55a:	f7fd fc67 	bl	8008e2c <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b55e:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800b562:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b564:	e004      	b.n	800b570 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b566:	f7fd fc61 	bl	8008e2c <HAL_GetTick>
 800b56a:	1bc0      	subs	r0, r0, r7
 800b56c:	4540      	cmp	r0, r8
 800b56e:	d844      	bhi.n	800b5fa <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b570:	68b3      	ldr	r3, [r6, #8]
 800b572:	6862      	ldr	r2, [r4, #4]
 800b574:	f003 030c 	and.w	r3, r3, #12
 800b578:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800b57c:	d1f3      	bne.n	800b566 <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800b57e:	4a20      	ldr	r2, [pc, #128]	; (800b600 <HAL_RCC_ClockConfig+0x128>)
 800b580:	6813      	ldr	r3, [r2, #0]
 800b582:	f003 030f 	and.w	r3, r3, #15
 800b586:	42ab      	cmp	r3, r5
 800b588:	d906      	bls.n	800b598 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b58a:	b2eb      	uxtb	r3, r5
 800b58c:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b58e:	6813      	ldr	r3, [r2, #0]
 800b590:	f003 030f 	and.w	r3, r3, #15
 800b594:	42ab      	cmp	r3, r5
 800b596:	d1b3      	bne.n	800b500 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b598:	6823      	ldr	r3, [r4, #0]
 800b59a:	075a      	lsls	r2, r3, #29
 800b59c:	d506      	bpl.n	800b5ac <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800b59e:	4919      	ldr	r1, [pc, #100]	; (800b604 <HAL_RCC_ClockConfig+0x12c>)
 800b5a0:	68e0      	ldr	r0, [r4, #12]
 800b5a2:	688a      	ldr	r2, [r1, #8]
 800b5a4:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800b5a8:	4302      	orrs	r2, r0
 800b5aa:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b5ac:	071b      	lsls	r3, r3, #28
 800b5ae:	d507      	bpl.n	800b5c0 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800b5b0:	4a14      	ldr	r2, [pc, #80]	; (800b604 <HAL_RCC_ClockConfig+0x12c>)
 800b5b2:	6921      	ldr	r1, [r4, #16]
 800b5b4:	6893      	ldr	r3, [r2, #8]
 800b5b6:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800b5ba:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800b5be:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b5c0:	f7ff ff56 	bl	800b470 <HAL_RCC_GetSysClockFreq>
 800b5c4:	4a0f      	ldr	r2, [pc, #60]	; (800b604 <HAL_RCC_ClockConfig+0x12c>)
 800b5c6:	4c10      	ldr	r4, [pc, #64]	; (800b608 <HAL_RCC_ClockConfig+0x130>)
 800b5c8:	6892      	ldr	r2, [r2, #8]
 800b5ca:	4910      	ldr	r1, [pc, #64]	; (800b60c <HAL_RCC_ClockConfig+0x134>)
 800b5cc:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800b5d0:	4603      	mov	r3, r0
 800b5d2:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800b5d4:	480e      	ldr	r0, [pc, #56]	; (800b610 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b5d6:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800b5d8:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b5da:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800b5dc:	f7f6 fd98 	bl	8002110 <HAL_InitTick>
  return HAL_OK;
 800b5e0:	2000      	movs	r0, #0
}
 800b5e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b5e6:	0198      	lsls	r0, r3, #6
 800b5e8:	d4b1      	bmi.n	800b54e <HAL_RCC_ClockConfig+0x76>
 800b5ea:	e789      	b.n	800b500 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800b5ec:	2001      	movs	r0, #1
}
 800b5ee:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b5f0:	4b04      	ldr	r3, [pc, #16]	; (800b604 <HAL_RCC_ClockConfig+0x12c>)
 800b5f2:	681b      	ldr	r3, [r3, #0]
 800b5f4:	039e      	lsls	r6, r3, #14
 800b5f6:	d4aa      	bmi.n	800b54e <HAL_RCC_ClockConfig+0x76>
 800b5f8:	e782      	b.n	800b500 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800b5fa:	2003      	movs	r0, #3
 800b5fc:	e781      	b.n	800b502 <HAL_RCC_ClockConfig+0x2a>
 800b5fe:	bf00      	nop
 800b600:	40023c00 	.word	0x40023c00
 800b604:	40023800 	.word	0x40023800
 800b608:	0802c62c 	.word	0x0802c62c
 800b60c:	20000078 	.word	0x20000078
 800b610:	20000080 	.word	0x20000080

0800b614 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b614:	4b04      	ldr	r3, [pc, #16]	; (800b628 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800b616:	4905      	ldr	r1, [pc, #20]	; (800b62c <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b618:	689b      	ldr	r3, [r3, #8]
 800b61a:	4a05      	ldr	r2, [pc, #20]	; (800b630 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800b61c:	6808      	ldr	r0, [r1, #0]
 800b61e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800b622:	5cd3      	ldrb	r3, [r2, r3]
}
 800b624:	40d8      	lsrs	r0, r3
 800b626:	4770      	bx	lr
 800b628:	40023800 	.word	0x40023800
 800b62c:	20000078 	.word	0x20000078
 800b630:	0802c63c 	.word	0x0802c63c

0800b634 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800b634:	4b0e      	ldr	r3, [pc, #56]	; (800b670 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800b636:	220f      	movs	r2, #15
 800b638:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800b63a:	689a      	ldr	r2, [r3, #8]
 800b63c:	f002 0203 	and.w	r2, r2, #3
 800b640:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800b642:	689a      	ldr	r2, [r3, #8]
 800b644:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800b648:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800b64a:	689a      	ldr	r2, [r3, #8]
 800b64c:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800b650:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b652:	689b      	ldr	r3, [r3, #8]
 800b654:	08db      	lsrs	r3, r3, #3
{
 800b656:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b658:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b65c:	4c05      	ldr	r4, [pc, #20]	; (800b674 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b65e:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b660:	6823      	ldr	r3, [r4, #0]
}
 800b662:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b666:	f003 030f 	and.w	r3, r3, #15
 800b66a:	600b      	str	r3, [r1, #0]
}
 800b66c:	4770      	bx	lr
 800b66e:	bf00      	nop
 800b670:	40023800 	.word	0x40023800
 800b674:	40023c00 	.word	0x40023c00

0800b678 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800b678:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800b67a:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800b67c:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800b680:	b083      	sub	sp, #12
 800b682:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800b684:	d111      	bne.n	800b6aa <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800b686:	f013 0f0c 	tst.w	r3, #12
 800b68a:	d16f      	bne.n	800b76c <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800b68c:	0698      	lsls	r0, r3, #26
 800b68e:	f100 80c2 	bmi.w	800b816 <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800b692:	f013 0310 	ands.w	r3, r3, #16
 800b696:	f000 80bb 	beq.w	800b810 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800b69a:	4b89      	ldr	r3, [pc, #548]	; (800b8c0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800b69c:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800b6a0:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800b6a4:	2000      	movs	r0, #0
}
 800b6a6:	b003      	add	sp, #12
 800b6a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800b6aa:	4b86      	ldr	r3, [pc, #536]	; (800b8c4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b6ac:	4e86      	ldr	r6, [pc, #536]	; (800b8c8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800b6ae:	2200      	movs	r2, #0
 800b6b0:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800b6b2:	f7fd fbbb 	bl	8008e2c <HAL_GetTick>
 800b6b6:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b6b8:	e004      	b.n	800b6c4 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800b6ba:	f7fd fbb7 	bl	8008e2c <HAL_GetTick>
 800b6be:	1b43      	subs	r3, r0, r5
 800b6c0:	2b02      	cmp	r3, #2
 800b6c2:	d850      	bhi.n	800b766 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b6c4:	6833      	ldr	r3, [r6, #0]
 800b6c6:	0118      	lsls	r0, r3, #4
 800b6c8:	d4f7      	bmi.n	800b6ba <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800b6ca:	6823      	ldr	r3, [r4, #0]
 800b6cc:	07d9      	lsls	r1, r3, #31
 800b6ce:	d506      	bpl.n	800b6de <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800b6d0:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800b6d4:	0712      	lsls	r2, r2, #28
 800b6d6:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800b6da:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800b6de:	079a      	lsls	r2, r3, #30
 800b6e0:	d515      	bpl.n	800b70e <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800b6e2:	4979      	ldr	r1, [pc, #484]	; (800b8c8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800b6e4:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800b6e6:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800b6ea:	6865      	ldr	r5, [r4, #4]
 800b6ec:	0612      	lsls	r2, r2, #24
 800b6ee:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800b6f2:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800b6f6:	4302      	orrs	r2, r0
 800b6f8:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800b6fc:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800b700:	69e2      	ldr	r2, [r4, #28]
 800b702:	f020 001f 	bic.w	r0, r0, #31
 800b706:	3a01      	subs	r2, #1
 800b708:	4302      	orrs	r2, r0
 800b70a:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800b70e:	065b      	lsls	r3, r3, #25
 800b710:	d509      	bpl.n	800b726 <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800b712:	1d20      	adds	r0, r4, #4
 800b714:	c80b      	ldmia	r0, {r0, r1, r3}
 800b716:	061b      	lsls	r3, r3, #24
 800b718:	4a6b      	ldr	r2, [pc, #428]	; (800b8c8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b71a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b71e:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800b722:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800b726:	4b67      	ldr	r3, [pc, #412]	; (800b8c4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b728:	4e67      	ldr	r6, [pc, #412]	; (800b8c8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800b72a:	2201      	movs	r2, #1
 800b72c:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800b72e:	f7fd fb7d 	bl	8008e2c <HAL_GetTick>
 800b732:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b734:	e004      	b.n	800b740 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800b736:	f7fd fb79 	bl	8008e2c <HAL_GetTick>
 800b73a:	1b40      	subs	r0, r0, r5
 800b73c:	2802      	cmp	r0, #2
 800b73e:	d812      	bhi.n	800b766 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b740:	6833      	ldr	r3, [r6, #0]
 800b742:	011f      	lsls	r7, r3, #4
 800b744:	d5f7      	bpl.n	800b736 <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800b746:	6823      	ldr	r3, [r4, #0]
 800b748:	e79d      	b.n	800b686 <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800b74a:	f7fd fb6f 	bl	8008e2c <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b74e:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800b752:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b754:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800b756:	079b      	lsls	r3, r3, #30
 800b758:	f100 80a5 	bmi.w	800b8a6 <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b75c:	f7fd fb66 	bl	8008e2c <HAL_GetTick>
 800b760:	1b80      	subs	r0, r0, r6
 800b762:	42b8      	cmp	r0, r7
 800b764:	d9f6      	bls.n	800b754 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800b766:	2003      	movs	r0, #3
}
 800b768:	b003      	add	sp, #12
 800b76a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800b76c:	4b55      	ldr	r3, [pc, #340]	; (800b8c4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b76e:	4e56      	ldr	r6, [pc, #344]	; (800b8c8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800b770:	2200      	movs	r2, #0
 800b772:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800b774:	f7fd fb5a 	bl	8008e2c <HAL_GetTick>
 800b778:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b77a:	e004      	b.n	800b786 <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800b77c:	f7fd fb56 	bl	8008e2c <HAL_GetTick>
 800b780:	1b43      	subs	r3, r0, r5
 800b782:	2b02      	cmp	r3, #2
 800b784:	d8ef      	bhi.n	800b766 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b786:	6833      	ldr	r3, [r6, #0]
 800b788:	0098      	lsls	r0, r3, #2
 800b78a:	d4f7      	bmi.n	800b77c <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800b78c:	6822      	ldr	r2, [r4, #0]
 800b78e:	0751      	lsls	r1, r2, #29
 800b790:	d515      	bpl.n	800b7be <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800b792:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800b794:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800b798:	6920      	ldr	r0, [r4, #16]
 800b79a:	061b      	lsls	r3, r3, #24
 800b79c:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800b7a0:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b7a4:	430b      	orrs	r3, r1
 800b7a6:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800b7aa:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800b7ae:	6a21      	ldr	r1, [r4, #32]
 800b7b0:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800b7b4:	3901      	subs	r1, #1
 800b7b6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800b7ba:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800b7be:	0713      	lsls	r3, r2, #28
 800b7c0:	d514      	bpl.n	800b7ec <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800b7c2:	4a41      	ldr	r2, [pc, #260]	; (800b8c8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800b7c4:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800b7c6:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800b7ca:	6920      	ldr	r0, [r4, #16]
 800b7cc:	071b      	lsls	r3, r3, #28
 800b7ce:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800b7d2:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b7d6:	430b      	orrs	r3, r1
 800b7d8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800b7dc:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800b7e0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b7e2:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800b7e6:	430b      	orrs	r3, r1
 800b7e8:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800b7ec:	4b35      	ldr	r3, [pc, #212]	; (800b8c4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b7ee:	4e36      	ldr	r6, [pc, #216]	; (800b8c8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800b7f0:	2201      	movs	r2, #1
 800b7f2:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800b7f4:	f7fd fb1a 	bl	8008e2c <HAL_GetTick>
 800b7f8:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b7fa:	e004      	b.n	800b806 <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800b7fc:	f7fd fb16 	bl	8008e2c <HAL_GetTick>
 800b800:	1b40      	subs	r0, r0, r5
 800b802:	2802      	cmp	r0, #2
 800b804:	d8af      	bhi.n	800b766 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b806:	6833      	ldr	r3, [r6, #0]
 800b808:	009f      	lsls	r7, r3, #2
 800b80a:	d5f7      	bpl.n	800b7fc <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800b80c:	6823      	ldr	r3, [r4, #0]
 800b80e:	e73d      	b.n	800b68c <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800b810:	4618      	mov	r0, r3
}
 800b812:	b003      	add	sp, #12
 800b814:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800b816:	4b2c      	ldr	r3, [pc, #176]	; (800b8c8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800b818:	4d2c      	ldr	r5, [pc, #176]	; (800b8cc <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800b81a:	2200      	movs	r2, #0
 800b81c:	9201      	str	r2, [sp, #4]
 800b81e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800b820:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800b824:	641a      	str	r2, [r3, #64]	; 0x40
 800b826:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b828:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b82c:	9301      	str	r3, [sp, #4]
 800b82e:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800b830:	682b      	ldr	r3, [r5, #0]
 800b832:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b836:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800b838:	f7fd faf8 	bl	8008e2c <HAL_GetTick>
 800b83c:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800b83e:	e004      	b.n	800b84a <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800b840:	f7fd faf4 	bl	8008e2c <HAL_GetTick>
 800b844:	1b83      	subs	r3, r0, r6
 800b846:	2b02      	cmp	r3, #2
 800b848:	d88d      	bhi.n	800b766 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800b84a:	682b      	ldr	r3, [r5, #0]
 800b84c:	05d9      	lsls	r1, r3, #23
 800b84e:	d5f7      	bpl.n	800b840 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800b850:	4d1d      	ldr	r5, [pc, #116]	; (800b8c8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b852:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800b854:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b856:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800b85a:	d111      	bne.n	800b880 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800b85c:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800b860:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800b864:	d021      	beq.n	800b8aa <HAL_RCCEx_PeriphCLKConfig+0x232>
 800b866:	4918      	ldr	r1, [pc, #96]	; (800b8c8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b868:	688a      	ldr	r2, [r1, #8]
 800b86a:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800b86e:	608a      	str	r2, [r1, #8]
 800b870:	4a15      	ldr	r2, [pc, #84]	; (800b8c8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b872:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800b874:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b878:	430b      	orrs	r3, r1
 800b87a:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800b87c:	6823      	ldr	r3, [r4, #0]
 800b87e:	e708      	b.n	800b692 <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b880:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800b884:	4291      	cmp	r1, r2
 800b886:	d0eb      	beq.n	800b860 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800b888:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800b88a:	4a0e      	ldr	r2, [pc, #56]	; (800b8c4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800b88c:	2101      	movs	r1, #1
 800b88e:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800b892:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800b896:	2100      	movs	r1, #0
 800b898:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800b89c:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800b89e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800b8a0:	07da      	lsls	r2, r3, #31
 800b8a2:	f53f af52 	bmi.w	800b74a <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800b8a6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800b8a8:	e7d8      	b.n	800b85c <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800b8aa:	4807      	ldr	r0, [pc, #28]	; (800b8c8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b8ac:	6882      	ldr	r2, [r0, #8]
 800b8ae:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800b8b2:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800b8b6:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800b8ba:	430a      	orrs	r2, r1
 800b8bc:	6082      	str	r2, [r0, #8]
 800b8be:	e7d7      	b.n	800b870 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800b8c0:	42471000 	.word	0x42471000
 800b8c4:	42470000 	.word	0x42470000
 800b8c8:	40023800 	.word	0x40023800
 800b8cc:	40007000 	.word	0x40007000

0800b8d0 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800b8d0:	b1f0      	cbz	r0, 800b910 <HAL_SDRAM_Init+0x40>
{
 800b8d2:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800b8d4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800b8d8:	460d      	mov	r5, r1
 800b8da:	4604      	mov	r4, r0
 800b8dc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b8e0:	b18b      	cbz	r3, 800b906 <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800b8e2:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b8e4:	2302      	movs	r3, #2
 800b8e6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800b8ea:	f851 0b04 	ldr.w	r0, [r1], #4
 800b8ee:	f000 ffcd 	bl	800c88c <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800b8f2:	e9d4 0200 	ldrd	r0, r2, [r4]
 800b8f6:	4629      	mov	r1, r5
 800b8f8:	f001 f806 	bl	800c908 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800b8fc:	2301      	movs	r3, #1
 800b8fe:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800b902:	2000      	movs	r0, #0
}
 800b904:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800b906:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800b90a:	f7f6 fb99 	bl	8002040 <HAL_SDRAM_MspInit>
 800b90e:	e7e8      	b.n	800b8e2 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800b910:	2001      	movs	r0, #1
}
 800b912:	4770      	bx	lr

0800b914 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800b914:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800b916:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800b91a:	2b02      	cmp	r3, #2
{
 800b91c:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800b91e:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800b920:	d004      	beq.n	800b92c <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800b922:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800b926:	2c01      	cmp	r4, #1
 800b928:	d001      	beq.n	800b92e <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800b92a:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800b92c:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b92e:	460e      	mov	r6, r1
 800b930:	2302      	movs	r3, #2
 800b932:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800b936:	6828      	ldr	r0, [r5, #0]
 800b938:	f001 f832 	bl	800c9a0 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800b93c:	6833      	ldr	r3, [r6, #0]
 800b93e:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800b940:	bf06      	itte	eq
 800b942:	2305      	moveq	r3, #5
 800b944:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800b948:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800b94c:	2000      	movs	r0, #0
}
 800b94e:	bd70      	pop	{r4, r5, r6, pc}

0800b950 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800b950:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800b952:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800b956:	2b02      	cmp	r3, #2
{
 800b958:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800b95a:	b2d8      	uxtb	r0, r3
 800b95c:	d005      	beq.n	800b96a <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800b95e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800b962:	2b01      	cmp	r3, #1
 800b964:	b2dd      	uxtb	r5, r3
 800b966:	d001      	beq.n	800b96c <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800b968:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800b96a:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b96c:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800b96e:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b970:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800b974:	f001 f83e 	bl	800c9f4 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800b978:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800b97c:	2000      	movs	r0, #0
}
 800b97e:	bd38      	pop	{r3, r4, r5, pc}

0800b980 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800b980:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b984:	b082      	sub	sp, #8
 800b986:	461d      	mov	r5, r3
 800b988:	4616      	mov	r6, r2
 800b98a:	460c      	mov	r4, r1
 800b98c:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800b98e:	f7fd fa4d 	bl	8008e2c <HAL_GetTick>
 800b992:	4435      	add	r5, r6
 800b994:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800b996:	f7fd fa49 	bl	8008e2c <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800b99a:	4b27      	ldr	r3, [pc, #156]	; (800ba38 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800b99c:	681b      	ldr	r3, [r3, #0]
 800b99e:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800b9a2:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800b9a6:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800b9a8:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800b9aa:	1c73      	adds	r3, r6, #1
 800b9ac:	6839      	ldr	r1, [r7, #0]
 800b9ae:	d107      	bne.n	800b9c0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800b9b0:	688b      	ldr	r3, [r1, #8]
 800b9b2:	ea34 0303 	bics.w	r3, r4, r3
 800b9b6:	d0fb      	beq.n	800b9b0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800b9b8:	2000      	movs	r0, #0
}
 800b9ba:	b002      	add	sp, #8
 800b9bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800b9c0:	688b      	ldr	r3, [r1, #8]
 800b9c2:	ea34 0303 	bics.w	r3, r4, r3
 800b9c6:	d1f7      	bne.n	800b9b8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800b9c8:	f7fd fa30 	bl	8008e2c <HAL_GetTick>
 800b9cc:	eba0 0008 	sub.w	r0, r0, r8
 800b9d0:	42a8      	cmp	r0, r5
 800b9d2:	d208      	bcs.n	800b9e6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800b9d4:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800b9d6:	2b00      	cmp	r3, #0
      count--;
 800b9d8:	9b01      	ldr	r3, [sp, #4]
 800b9da:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800b9de:	bf08      	it	eq
 800b9e0:	2500      	moveq	r5, #0
      count--;
 800b9e2:	9301      	str	r3, [sp, #4]
 800b9e4:	e7e1      	b.n	800b9aa <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b9e6:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800b9ea:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b9ec:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800b9f0:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800b9f4:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b9f6:	d013      	beq.n	800ba20 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800b9f8:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800b9fa:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800b9fe:	d107      	bne.n	800ba10 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800ba00:	681a      	ldr	r2, [r3, #0]
 800ba02:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800ba06:	601a      	str	r2, [r3, #0]
 800ba08:	681a      	ldr	r2, [r3, #0]
 800ba0a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800ba0e:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800ba10:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800ba12:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800ba14:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800ba18:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800ba1c:	2003      	movs	r0, #3
 800ba1e:	e7cc      	b.n	800b9ba <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ba20:	68ba      	ldr	r2, [r7, #8]
 800ba22:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800ba26:	d002      	beq.n	800ba2e <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800ba28:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800ba2c:	d1e4      	bne.n	800b9f8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800ba2e:	681a      	ldr	r2, [r3, #0]
 800ba30:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800ba34:	601a      	str	r2, [r3, #0]
 800ba36:	e7df      	b.n	800b9f8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800ba38:	20000078 	.word	0x20000078

0800ba3c <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800ba3c:	b538      	push	{r3, r4, r5, lr}
 800ba3e:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ba40:	6842      	ldr	r2, [r0, #4]
 800ba42:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800ba46:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ba48:	d006      	beq.n	800ba58 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800ba4a:	460a      	mov	r2, r1
 800ba4c:	2101      	movs	r1, #1
 800ba4e:	f7ff ff97 	bl	800b980 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800ba52:	b978      	cbnz	r0, 800ba74 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800ba54:	2000      	movs	r0, #0
}
 800ba56:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ba58:	6882      	ldr	r2, [r0, #8]
 800ba5a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800ba5e:	d01c      	beq.n	800ba9a <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800ba60:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800ba64:	d00c      	beq.n	800ba80 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800ba66:	460a      	mov	r2, r1
 800ba68:	4620      	mov	r0, r4
 800ba6a:	2180      	movs	r1, #128	; 0x80
 800ba6c:	f7ff ff88 	bl	800b980 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800ba70:	2800      	cmp	r0, #0
 800ba72:	d0ef      	beq.n	800ba54 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ba74:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800ba76:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800ba7a:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ba7c:	6563      	str	r3, [r4, #84]	; 0x54
}
 800ba7e:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800ba80:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800ba82:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800ba84:	6829      	ldr	r1, [r5, #0]
 800ba86:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800ba8a:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800ba8c:	2101      	movs	r1, #1
 800ba8e:	f7ff ff77 	bl	800b980 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800ba92:	2800      	cmp	r0, #0
 800ba94:	d1ee      	bne.n	800ba74 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800ba96:	2000      	movs	r0, #0
 800ba98:	e7dd      	b.n	800ba56 <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800ba9a:	6800      	ldr	r0, [r0, #0]
 800ba9c:	6802      	ldr	r2, [r0, #0]
 800ba9e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800baa2:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800baa4:	460a      	mov	r2, r1
 800baa6:	4620      	mov	r0, r4
 800baa8:	2180      	movs	r1, #128	; 0x80
 800baaa:	f7ff ff69 	bl	800b980 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800baae:	2800      	cmp	r0, #0
 800bab0:	d0d0      	beq.n	800ba54 <SPI_EndRxTransaction+0x18>
 800bab2:	e7df      	b.n	800ba74 <SPI_EndRxTransaction+0x38>

0800bab4 <HAL_SPI_Init>:
  if (hspi == NULL)
 800bab4:	2800      	cmp	r0, #0
 800bab6:	d05c      	beq.n	800bb72 <HAL_SPI_Init+0xbe>
{
 800bab8:	b570      	push	{r4, r5, r6, lr}
 800baba:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800babc:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800babe:	2800      	cmp	r0, #0
 800bac0:	d047      	beq.n	800bb52 <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800bac2:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800bac4:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800bac8:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800bacc:	2200      	movs	r2, #0
 800bace:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800bad0:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800bad4:	2b00      	cmp	r3, #0
 800bad6:	d042      	beq.n	800bb5e <HAL_SPI_Init+0xaa>
 800bad8:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800bada:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800badc:	68a5      	ldr	r5, [r4, #8]
 800bade:	69a2      	ldr	r2, [r4, #24]
 800bae0:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800bae2:	2302      	movs	r3, #2
 800bae4:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800bae8:	680b      	ldr	r3, [r1, #0]
 800baea:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800baee:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800baf0:	6863      	ldr	r3, [r4, #4]
 800baf2:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800baf6:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800bafa:	432b      	orrs	r3, r5
 800bafc:	68e5      	ldr	r5, [r4, #12]
 800bafe:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800bb02:	432b      	orrs	r3, r5
 800bb04:	6925      	ldr	r5, [r4, #16]
 800bb06:	f005 0502 	and.w	r5, r5, #2
 800bb0a:	432b      	orrs	r3, r5
 800bb0c:	6965      	ldr	r5, [r4, #20]
 800bb0e:	f005 0501 	and.w	r5, r5, #1
 800bb12:	432b      	orrs	r3, r5
 800bb14:	69e5      	ldr	r5, [r4, #28]
 800bb16:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800bb1a:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800bb1e:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800bb22:	4333      	orrs	r3, r6
 800bb24:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bb26:	0c12      	lsrs	r2, r2, #16
 800bb28:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bb2c:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bb30:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bb34:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bb38:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bb3a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bb3c:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bb3e:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800bb40:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bb42:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800bb46:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bb48:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800bb4a:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800bb4c:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800bb50:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bb52:	6863      	ldr	r3, [r4, #4]
 800bb54:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800bb58:	d0b6      	beq.n	800bac8 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800bb5a:	61e0      	str	r0, [r4, #28]
 800bb5c:	e7b4      	b.n	800bac8 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800bb5e:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800bb60:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800bb64:	f7f6 fa04 	bl	8001f70 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bb68:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bb6c:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800bb70:	e7b3      	b.n	800bada <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800bb72:	2001      	movs	r0, #1
}
 800bb74:	4770      	bx	lr
 800bb76:	bf00      	nop

0800bb78 <HAL_SPI_Transmit>:
{
 800bb78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bb7c:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800bb7e:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800bb82:	2801      	cmp	r0, #1
{
 800bb84:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800bb86:	f000 8085 	beq.w	800bc94 <HAL_SPI_Transmit+0x11c>
 800bb8a:	461d      	mov	r5, r3
 800bb8c:	2301      	movs	r3, #1
 800bb8e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800bb92:	4688      	mov	r8, r1
 800bb94:	4617      	mov	r7, r2
 800bb96:	f7fd f949 	bl	8008e2c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800bb9a:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800bb9e:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800bba0:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800bba2:	b2d8      	uxtb	r0, r3
 800bba4:	d009      	beq.n	800bbba <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800bba6:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800bba8:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800bbaa:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800bbac:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800bbb0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800bbb4:	b002      	add	sp, #8
 800bbb6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800bbba:	f1b8 0f00 	cmp.w	r8, #0
 800bbbe:	d0f3      	beq.n	800bba8 <HAL_SPI_Transmit+0x30>
 800bbc0:	2f00      	cmp	r7, #0
 800bbc2:	d0f1      	beq.n	800bba8 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bbc4:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800bbc6:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800bbc8:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bbcc:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800bbce:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bbd0:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800bbd4:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800bbd8:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bbdc:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800bbde:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800bbe0:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800bbe2:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800bbe4:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800bbe6:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bbe8:	f000 8085 	beq.w	800bcf6 <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bbec:	6803      	ldr	r3, [r0, #0]
 800bbee:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800bbf0:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bbf2:	d403      	bmi.n	800bbfc <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800bbf4:	6803      	ldr	r3, [r0, #0]
 800bbf6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800bbfa:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800bbfc:	68e3      	ldr	r3, [r4, #12]
 800bbfe:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800bc02:	d04b      	beq.n	800bc9c <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bc04:	6863      	ldr	r3, [r4, #4]
 800bc06:	2b00      	cmp	r3, #0
 800bc08:	f000 8097 	beq.w	800bd3a <HAL_SPI_Transmit+0x1c2>
 800bc0c:	2f01      	cmp	r7, #1
 800bc0e:	f000 8094 	beq.w	800bd3a <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800bc12:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bc14:	b29b      	uxth	r3, r3
 800bc16:	b1ab      	cbz	r3, 800bc44 <HAL_SPI_Transmit+0xcc>
 800bc18:	1c68      	adds	r0, r5, #1
 800bc1a:	f040 8083 	bne.w	800bd24 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bc1e:	6823      	ldr	r3, [r4, #0]
 800bc20:	689a      	ldr	r2, [r3, #8]
 800bc22:	0791      	lsls	r1, r2, #30
 800bc24:	f140 8094 	bpl.w	800bd50 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bc28:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bc2a:	7812      	ldrb	r2, [r2, #0]
 800bc2c:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800bc2e:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bc30:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bc32:	3901      	subs	r1, #1
 800bc34:	b289      	uxth	r1, r1
 800bc36:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bc38:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bc3a:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800bc3c:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bc3e:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800bc40:	2900      	cmp	r1, #0
 800bc42:	d1ec      	bne.n	800bc1e <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bc44:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bc46:	4b5b      	ldr	r3, [pc, #364]	; (800bdb4 <HAL_SPI_Transmit+0x23c>)
 800bc48:	4a5b      	ldr	r2, [pc, #364]	; (800bdb8 <HAL_SPI_Transmit+0x240>)
 800bc4a:	681b      	ldr	r3, [r3, #0]
 800bc4c:	fba2 2303 	umull	r2, r3, r2, r3
 800bc50:	0d5b      	lsrs	r3, r3, #21
 800bc52:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800bc56:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bc5a:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bc5e:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bc60:	d107      	bne.n	800bc72 <HAL_SPI_Transmit+0xfa>
 800bc62:	e098      	b.n	800bd96 <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800bc64:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bc66:	6822      	ldr	r2, [r4, #0]
      count--;
 800bc68:	3b01      	subs	r3, #1
 800bc6a:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bc6c:	6893      	ldr	r3, [r2, #8]
 800bc6e:	061b      	lsls	r3, r3, #24
 800bc70:	d502      	bpl.n	800bc78 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800bc72:	9b01      	ldr	r3, [sp, #4]
 800bc74:	2b00      	cmp	r3, #0
 800bc76:	d1f5      	bne.n	800bc64 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800bc78:	68a3      	ldr	r3, [r4, #8]
 800bc7a:	b933      	cbnz	r3, 800bc8a <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800bc7c:	6822      	ldr	r2, [r4, #0]
 800bc7e:	9300      	str	r3, [sp, #0]
 800bc80:	68d3      	ldr	r3, [r2, #12]
 800bc82:	9300      	str	r3, [sp, #0]
 800bc84:	6893      	ldr	r3, [r2, #8]
 800bc86:	9300      	str	r3, [sp, #0]
 800bc88:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800bc8a:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800bc8c:	3800      	subs	r0, #0
 800bc8e:	bf18      	it	ne
 800bc90:	2001      	movne	r0, #1
error:
 800bc92:	e789      	b.n	800bba8 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800bc94:	2002      	movs	r0, #2
}
 800bc96:	b002      	add	sp, #8
 800bc98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bc9c:	6861      	ldr	r1, [r4, #4]
 800bc9e:	2900      	cmp	r1, #0
 800bca0:	d176      	bne.n	800bd90 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bca2:	4643      	mov	r3, r8
 800bca4:	f833 7b02 	ldrh.w	r7, [r3], #2
 800bca8:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800bcaa:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bcac:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bcae:	3b01      	subs	r3, #1
 800bcb0:	b29b      	uxth	r3, r3
 800bcb2:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bcb4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bcb6:	b29b      	uxth	r3, r3
 800bcb8:	2b00      	cmp	r3, #0
 800bcba:	d0c4      	beq.n	800bc46 <HAL_SPI_Transmit+0xce>
 800bcbc:	1c6b      	adds	r3, r5, #1
 800bcbe:	d15e      	bne.n	800bd7e <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bcc0:	6883      	ldr	r3, [r0, #8]
 800bcc2:	079f      	lsls	r7, r3, #30
 800bcc4:	d50f      	bpl.n	800bce6 <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bcc6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bcc8:	f832 3b02 	ldrh.w	r3, [r2], #2
 800bccc:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800bcce:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800bcd0:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bcd2:	3b01      	subs	r3, #1
 800bcd4:	b29b      	uxth	r3, r3
 800bcd6:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bcd8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bcda:	b29b      	uxth	r3, r3
 800bcdc:	2b00      	cmp	r3, #0
 800bcde:	d0b1      	beq.n	800bc44 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bce0:	6883      	ldr	r3, [r0, #8]
 800bce2:	079f      	lsls	r7, r3, #30
 800bce4:	d4ef      	bmi.n	800bcc6 <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bce6:	f7fd f8a1 	bl	8008e2c <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800bcea:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bcec:	b29b      	uxth	r3, r3
 800bcee:	2b00      	cmp	r3, #0
 800bcf0:	d0a8      	beq.n	800bc44 <HAL_SPI_Transmit+0xcc>
 800bcf2:	6820      	ldr	r0, [r4, #0]
 800bcf4:	e7e4      	b.n	800bcc0 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800bcf6:	6803      	ldr	r3, [r0, #0]
 800bcf8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800bcfc:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800bcfe:	6803      	ldr	r3, [r0, #0]
 800bd00:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800bd04:	6003      	str	r3, [r0, #0]
 800bd06:	e771      	b.n	800bbec <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bd08:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bd0a:	7812      	ldrb	r2, [r2, #0]
 800bd0c:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800bd0e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bd10:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bd12:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bd14:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800bd16:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bd18:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bd1a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bd1c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bd1e:	b29b      	uxth	r3, r3
 800bd20:	2b00      	cmp	r3, #0
 800bd22:	d08f      	beq.n	800bc44 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bd24:	6823      	ldr	r3, [r4, #0]
 800bd26:	689a      	ldr	r2, [r3, #8]
 800bd28:	0792      	lsls	r2, r2, #30
 800bd2a:	d4ed      	bmi.n	800bd08 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bd2c:	f7fd f87e 	bl	8008e2c <HAL_GetTick>
 800bd30:	1b80      	subs	r0, r0, r6
 800bd32:	42a8      	cmp	r0, r5
 800bd34:	d3f2      	bcc.n	800bd1c <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800bd36:	2003      	movs	r0, #3
 800bd38:	e736      	b.n	800bba8 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bd3a:	f898 3000 	ldrb.w	r3, [r8]
 800bd3e:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800bd40:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bd42:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bd44:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bd46:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800bd48:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bd4a:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bd4c:	86e3      	strh	r3, [r4, #54]	; 0x36
 800bd4e:	e760      	b.n	800bc12 <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bd50:	f7fd f86c 	bl	8008e2c <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800bd54:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bd56:	b29b      	uxth	r3, r3
 800bd58:	2b00      	cmp	r3, #0
 800bd5a:	f47f af60 	bne.w	800bc1e <HAL_SPI_Transmit+0xa6>
 800bd5e:	e771      	b.n	800bc44 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bd60:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800bd62:	f831 3b02 	ldrh.w	r3, [r1], #2
 800bd66:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800bd68:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800bd6a:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bd6c:	3b01      	subs	r3, #1
 800bd6e:	b29b      	uxth	r3, r3
 800bd70:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bd72:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bd74:	b29b      	uxth	r3, r3
 800bd76:	2b00      	cmp	r3, #0
 800bd78:	f43f af64 	beq.w	800bc44 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bd7c:	6822      	ldr	r2, [r4, #0]
 800bd7e:	6893      	ldr	r3, [r2, #8]
 800bd80:	0799      	lsls	r1, r3, #30
 800bd82:	d4ed      	bmi.n	800bd60 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bd84:	f7fd f852 	bl	8008e2c <HAL_GetTick>
 800bd88:	1b80      	subs	r0, r0, r6
 800bd8a:	42a8      	cmp	r0, r5
 800bd8c:	d3f1      	bcc.n	800bd72 <HAL_SPI_Transmit+0x1fa>
 800bd8e:	e7d2      	b.n	800bd36 <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bd90:	2f01      	cmp	r7, #1
 800bd92:	d18f      	bne.n	800bcb4 <HAL_SPI_Transmit+0x13c>
 800bd94:	e785      	b.n	800bca2 <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800bd96:	4633      	mov	r3, r6
 800bd98:	462a      	mov	r2, r5
 800bd9a:	2180      	movs	r1, #128	; 0x80
 800bd9c:	4620      	mov	r0, r4
 800bd9e:	f7ff fdef 	bl	800b980 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bda2:	2800      	cmp	r0, #0
 800bda4:	f43f af68 	beq.w	800bc78 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bda8:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800bdaa:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bdac:	4313      	orrs	r3, r2
 800bdae:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800bdb0:	6562      	str	r2, [r4, #84]	; 0x54
 800bdb2:	e761      	b.n	800bc78 <HAL_SPI_Transmit+0x100>
 800bdb4:	20000078 	.word	0x20000078
 800bdb8:	165e9f81 	.word	0x165e9f81

0800bdbc <HAL_SPI_TransmitReceive>:
{
 800bdbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bdc0:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800bdc2:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800bdc6:	2801      	cmp	r0, #1
{
 800bdc8:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800bdca:	f000 80ac 	beq.w	800bf26 <HAL_SPI_TransmitReceive+0x16a>
 800bdce:	461e      	mov	r6, r3
 800bdd0:	2301      	movs	r3, #1
 800bdd2:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800bdd6:	4690      	mov	r8, r2
 800bdd8:	460f      	mov	r7, r1
 800bdda:	f7fd f827 	bl	8008e2c <HAL_GetTick>
 800bdde:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800bde0:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800bde4:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800bde6:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800bde8:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800bdea:	d011      	beq.n	800be10 <HAL_SPI_TransmitReceive+0x54>
 800bdec:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800bdf0:	d009      	beq.n	800be06 <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800bdf2:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800bdf4:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800bdf6:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800bdf8:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800bdfc:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800be00:	b002      	add	sp, #8
 800be02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800be06:	68a1      	ldr	r1, [r4, #8]
 800be08:	2900      	cmp	r1, #0
 800be0a:	d1f2      	bne.n	800bdf2 <HAL_SPI_TransmitReceive+0x36>
 800be0c:	2a04      	cmp	r2, #4
 800be0e:	d1f0      	bne.n	800bdf2 <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800be10:	2f00      	cmp	r7, #0
 800be12:	f000 808c 	beq.w	800bf2e <HAL_SPI_TransmitReceive+0x172>
 800be16:	f1b8 0f00 	cmp.w	r8, #0
 800be1a:	f000 8088 	beq.w	800bf2e <HAL_SPI_TransmitReceive+0x172>
 800be1e:	2e00      	cmp	r6, #0
 800be20:	f000 8085 	beq.w	800bf2e <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800be24:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800be28:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800be2c:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800be2e:	bf1c      	itt	ne
 800be30:	2205      	movne	r2, #5
 800be32:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800be36:	2200      	movs	r2, #0
 800be38:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800be3a:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800be3e:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800be40:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800be42:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800be44:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800be46:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800be48:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800be4a:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800be4c:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800be4e:	d403      	bmi.n	800be58 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800be50:	6811      	ldr	r1, [r2, #0]
 800be52:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800be56:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800be58:	68e1      	ldr	r1, [r4, #12]
 800be5a:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800be5e:	f000 809e 	beq.w	800bf9e <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800be62:	2b00      	cmp	r3, #0
 800be64:	f000 8091 	beq.w	800bf8a <HAL_SPI_TransmitReceive+0x1ce>
 800be68:	2e01      	cmp	r6, #1
 800be6a:	f000 808e 	beq.w	800bf8a <HAL_SPI_TransmitReceive+0x1ce>
 800be6e:	9b08      	ldr	r3, [sp, #32]
 800be70:	3301      	adds	r3, #1
        txallowed = 1U;
 800be72:	f04f 0601 	mov.w	r6, #1
 800be76:	d028      	beq.n	800beca <HAL_SPI_TransmitReceive+0x10e>
 800be78:	e05b      	b.n	800bf32 <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800be7a:	6821      	ldr	r1, [r4, #0]
 800be7c:	688b      	ldr	r3, [r1, #8]
 800be7e:	0798      	lsls	r0, r3, #30
 800be80:	d50f      	bpl.n	800bea2 <HAL_SPI_TransmitReceive+0xe6>
 800be82:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800be84:	b29b      	uxth	r3, r3
 800be86:	b163      	cbz	r3, 800bea2 <HAL_SPI_TransmitReceive+0xe6>
 800be88:	b15e      	cbz	r6, 800bea2 <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800be8a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800be8c:	781b      	ldrb	r3, [r3, #0]
 800be8e:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800be90:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800be92:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800be94:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800be96:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800be98:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800be9a:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800be9c:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800be9e:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800bea0:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bea2:	688a      	ldr	r2, [r1, #8]
 800bea4:	f012 0201 	ands.w	r2, r2, #1
 800bea8:	d00d      	beq.n	800bec6 <HAL_SPI_TransmitReceive+0x10a>
 800beaa:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800beac:	b29b      	uxth	r3, r3
 800beae:	b153      	cbz	r3, 800bec6 <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800beb0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800beb2:	68c9      	ldr	r1, [r1, #12]
 800beb4:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800beb6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800beb8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800beba:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800bebc:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800bebe:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800bec0:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bec2:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800bec4:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800bec6:	f7fc ffb1 	bl	8008e2c <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800beca:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800becc:	b292      	uxth	r2, r2
 800bece:	2a00      	cmp	r2, #0
 800bed0:	d1d3      	bne.n	800be7a <HAL_SPI_TransmitReceive+0xbe>
 800bed2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bed4:	b29b      	uxth	r3, r3
 800bed6:	2b00      	cmp	r3, #0
 800bed8:	d1cf      	bne.n	800be7a <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800beda:	4b79      	ldr	r3, [pc, #484]	; (800c0c0 <HAL_SPI_TransmitReceive+0x304>)
 800bedc:	4a79      	ldr	r2, [pc, #484]	; (800c0c4 <HAL_SPI_TransmitReceive+0x308>)
 800bede:	681b      	ldr	r3, [r3, #0]
 800bee0:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bee4:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bee6:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800beea:	0d5b      	lsrs	r3, r3, #21
 800beec:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bef0:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bef4:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bef6:	d107      	bne.n	800bf08 <HAL_SPI_TransmitReceive+0x14c>
 800bef8:	e0d2      	b.n	800c0a0 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800befa:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800befc:	6822      	ldr	r2, [r4, #0]
      count--;
 800befe:	3b01      	subs	r3, #1
 800bf00:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bf02:	6893      	ldr	r3, [r2, #8]
 800bf04:	061b      	lsls	r3, r3, #24
 800bf06:	d502      	bpl.n	800bf0e <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800bf08:	9b01      	ldr	r3, [sp, #4]
 800bf0a:	2b00      	cmp	r3, #0
 800bf0c:	d1f5      	bne.n	800befa <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800bf0e:	68a0      	ldr	r0, [r4, #8]
 800bf10:	2800      	cmp	r0, #0
 800bf12:	f040 8082 	bne.w	800c01a <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800bf16:	6823      	ldr	r3, [r4, #0]
 800bf18:	9000      	str	r0, [sp, #0]
 800bf1a:	68da      	ldr	r2, [r3, #12]
 800bf1c:	9200      	str	r2, [sp, #0]
 800bf1e:	689b      	ldr	r3, [r3, #8]
 800bf20:	9300      	str	r3, [sp, #0]
 800bf22:	9b00      	ldr	r3, [sp, #0]
 800bf24:	e766      	b.n	800bdf4 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800bf26:	2002      	movs	r0, #2
}
 800bf28:	b002      	add	sp, #8
 800bf2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800bf2e:	2001      	movs	r0, #1
 800bf30:	e760      	b.n	800bdf4 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800bf32:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bf34:	b29b      	uxth	r3, r3
 800bf36:	b91b      	cbnz	r3, 800bf40 <HAL_SPI_TransmitReceive+0x184>
 800bf38:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bf3a:	b29b      	uxth	r3, r3
 800bf3c:	2b00      	cmp	r3, #0
 800bf3e:	d0cc      	beq.n	800beda <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800bf40:	6822      	ldr	r2, [r4, #0]
 800bf42:	6893      	ldr	r3, [r2, #8]
 800bf44:	0799      	lsls	r1, r3, #30
 800bf46:	d50f      	bpl.n	800bf68 <HAL_SPI_TransmitReceive+0x1ac>
 800bf48:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bf4a:	b29b      	uxth	r3, r3
 800bf4c:	b163      	cbz	r3, 800bf68 <HAL_SPI_TransmitReceive+0x1ac>
 800bf4e:	b15e      	cbz	r6, 800bf68 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800bf50:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800bf52:	781b      	ldrb	r3, [r3, #0]
 800bf54:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800bf56:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800bf58:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bf5a:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800bf5c:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800bf5e:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800bf60:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bf62:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800bf64:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800bf66:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bf68:	6893      	ldr	r3, [r2, #8]
 800bf6a:	f013 0301 	ands.w	r3, r3, #1
 800bf6e:	d004      	beq.n	800bf7a <HAL_SPI_TransmitReceive+0x1be>
 800bf70:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800bf72:	b289      	uxth	r1, r1
 800bf74:	2900      	cmp	r1, #0
 800bf76:	f040 8087 	bne.w	800c088 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800bf7a:	f7fc ff57 	bl	8008e2c <HAL_GetTick>
 800bf7e:	9b08      	ldr	r3, [sp, #32]
 800bf80:	1b40      	subs	r0, r0, r5
 800bf82:	4298      	cmp	r0, r3
 800bf84:	d3d5      	bcc.n	800bf32 <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800bf86:	2003      	movs	r0, #3
 800bf88:	e734      	b.n	800bdf4 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bf8a:	783b      	ldrb	r3, [r7, #0]
 800bf8c:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800bf8e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bf90:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bf92:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bf94:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800bf96:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bf98:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bf9a:	86e3      	strh	r3, [r4, #54]	; 0x36
 800bf9c:	e767      	b.n	800be6e <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bf9e:	2b00      	cmp	r3, #0
 800bfa0:	d13d      	bne.n	800c01e <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bfa2:	f837 3b02 	ldrh.w	r3, [r7], #2
 800bfa6:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800bfa8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800bfaa:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bfac:	3b01      	subs	r3, #1
 800bfae:	b29b      	uxth	r3, r3
 800bfb0:	86e3      	strh	r3, [r4, #54]	; 0x36
 800bfb2:	9b08      	ldr	r3, [sp, #32]
 800bfb4:	3301      	adds	r3, #1
{
 800bfb6:	f04f 0601 	mov.w	r6, #1
 800bfba:	d025      	beq.n	800c008 <HAL_SPI_TransmitReceive+0x24c>
 800bfbc:	e032      	b.n	800c024 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800bfbe:	6823      	ldr	r3, [r4, #0]
 800bfc0:	689a      	ldr	r2, [r3, #8]
 800bfc2:	0792      	lsls	r2, r2, #30
 800bfc4:	d50d      	bpl.n	800bfe2 <HAL_SPI_TransmitReceive+0x226>
 800bfc6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800bfc8:	b292      	uxth	r2, r2
 800bfca:	b152      	cbz	r2, 800bfe2 <HAL_SPI_TransmitReceive+0x226>
 800bfcc:	b14e      	cbz	r6, 800bfe2 <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bfce:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800bfd0:	f831 2b02 	ldrh.w	r2, [r1], #2
 800bfd4:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800bfd6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800bfd8:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bfda:	3a01      	subs	r2, #1
 800bfdc:	b292      	uxth	r2, r2
        txallowed = 0U;
 800bfde:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800bfe0:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bfe2:	689a      	ldr	r2, [r3, #8]
 800bfe4:	f012 0201 	ands.w	r2, r2, #1
 800bfe8:	d00c      	beq.n	800c004 <HAL_SPI_TransmitReceive+0x248>
 800bfea:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800bfec:	b289      	uxth	r1, r1
 800bfee:	b149      	cbz	r1, 800c004 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800bff0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800bff2:	68db      	ldr	r3, [r3, #12]
 800bff4:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800bff8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800bffa:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bffc:	3b01      	subs	r3, #1
 800bffe:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800c000:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800c002:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c004:	f7fc ff12 	bl	8008e2c <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c008:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c00a:	b29b      	uxth	r3, r3
 800c00c:	2b00      	cmp	r3, #0
 800c00e:	d1d6      	bne.n	800bfbe <HAL_SPI_TransmitReceive+0x202>
 800c010:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c012:	b29b      	uxth	r3, r3
 800c014:	2b00      	cmp	r3, #0
 800c016:	d1d2      	bne.n	800bfbe <HAL_SPI_TransmitReceive+0x202>
 800c018:	e75f      	b.n	800beda <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800c01a:	2000      	movs	r0, #0
 800c01c:	e6ea      	b.n	800bdf4 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c01e:	2e01      	cmp	r6, #1
 800c020:	d1c7      	bne.n	800bfb2 <HAL_SPI_TransmitReceive+0x1f6>
 800c022:	e7be      	b.n	800bfa2 <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c024:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c026:	b29b      	uxth	r3, r3
 800c028:	b923      	cbnz	r3, 800c034 <HAL_SPI_TransmitReceive+0x278>
 800c02a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c02c:	b29b      	uxth	r3, r3
 800c02e:	2b00      	cmp	r3, #0
 800c030:	f43f af53 	beq.w	800beda <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c034:	6822      	ldr	r2, [r4, #0]
 800c036:	6893      	ldr	r3, [r2, #8]
 800c038:	079f      	lsls	r7, r3, #30
 800c03a:	d50d      	bpl.n	800c058 <HAL_SPI_TransmitReceive+0x29c>
 800c03c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c03e:	b29b      	uxth	r3, r3
 800c040:	b153      	cbz	r3, 800c058 <HAL_SPI_TransmitReceive+0x29c>
 800c042:	b14e      	cbz	r6, 800c058 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c044:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c046:	f831 3b02 	ldrh.w	r3, [r1], #2
 800c04a:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800c04c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c04e:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c050:	3b01      	subs	r3, #1
 800c052:	b29b      	uxth	r3, r3
 800c054:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800c056:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c058:	6893      	ldr	r3, [r2, #8]
 800c05a:	f013 0301 	ands.w	r3, r3, #1
 800c05e:	d00c      	beq.n	800c07a <HAL_SPI_TransmitReceive+0x2be>
 800c060:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c062:	b289      	uxth	r1, r1
 800c064:	b149      	cbz	r1, 800c07a <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c066:	68d1      	ldr	r1, [r2, #12]
 800c068:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c06a:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800c06e:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800c070:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c072:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c074:	3b01      	subs	r3, #1
 800c076:	b29b      	uxth	r3, r3
 800c078:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c07a:	f7fc fed7 	bl	8008e2c <HAL_GetTick>
 800c07e:	9b08      	ldr	r3, [sp, #32]
 800c080:	1b40      	subs	r0, r0, r5
 800c082:	4298      	cmp	r0, r3
 800c084:	d3ce      	bcc.n	800c024 <HAL_SPI_TransmitReceive+0x268>
 800c086:	e77e      	b.n	800bf86 <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800c088:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800c08a:	68d2      	ldr	r2, [r2, #12]
 800c08c:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800c08e:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800c090:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c092:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800c094:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800c096:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800c098:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c09a:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800c09c:	461e      	mov	r6, r3
 800c09e:	e76c      	b.n	800bf7a <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c0a0:	9a08      	ldr	r2, [sp, #32]
 800c0a2:	462b      	mov	r3, r5
 800c0a4:	2180      	movs	r1, #128	; 0x80
 800c0a6:	4620      	mov	r0, r4
 800c0a8:	f7ff fc6a 	bl	800b980 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c0ac:	2800      	cmp	r0, #0
 800c0ae:	f43f af2e 	beq.w	800bf0e <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c0b2:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c0b4:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c0b6:	4313      	orrs	r3, r2
 800c0b8:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800c0ba:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c0bc:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800c0be:	e699      	b.n	800bdf4 <HAL_SPI_TransmitReceive+0x38>
 800c0c0:	20000078 	.word	0x20000078
 800c0c4:	165e9f81 	.word	0x165e9f81

0800c0c8 <HAL_SPI_Receive>:
{
 800c0c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c0cc:	6846      	ldr	r6, [r0, #4]
 800c0ce:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800c0d2:	b082      	sub	sp, #8
 800c0d4:	4604      	mov	r4, r0
 800c0d6:	4690      	mov	r8, r2
 800c0d8:	461d      	mov	r5, r3
 800c0da:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c0dc:	d06e      	beq.n	800c1bc <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800c0de:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800c0e2:	2b01      	cmp	r3, #1
 800c0e4:	d076      	beq.n	800c1d4 <HAL_SPI_Receive+0x10c>
 800c0e6:	2301      	movs	r3, #1
 800c0e8:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c0ec:	f7fc fe9e 	bl	8008e2c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c0f0:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800c0f4:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800c0f8:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c0fa:	fa5f f08c 	uxtb.w	r0, ip
 800c0fe:	d009      	beq.n	800c114 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800c100:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c102:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c104:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c106:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c10a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c10e:	b002      	add	sp, #8
 800c110:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c114:	2f00      	cmp	r7, #0
 800c116:	d0f4      	beq.n	800c102 <HAL_SPI_Receive+0x3a>
 800c118:	f1b8 0f00 	cmp.w	r8, #0
 800c11c:	d0f1      	beq.n	800c102 <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c11e:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800c120:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c122:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800c126:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800c128:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c12c:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800c130:	f04f 0104 	mov.w	r1, #4
 800c134:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800c138:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c13c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800c13e:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800c140:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800c142:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800c146:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800c148:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c14a:	d107      	bne.n	800c15c <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800c14c:	6811      	ldr	r1, [r2, #0]
 800c14e:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800c152:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800c154:	6811      	ldr	r1, [r2, #0]
 800c156:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800c15a:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c15c:	6811      	ldr	r1, [r2, #0]
 800c15e:	0648      	lsls	r0, r1, #25
 800c160:	d403      	bmi.n	800c16a <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800c162:	6811      	ldr	r1, [r2, #0]
 800c164:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800c168:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800c16a:	68e1      	ldr	r1, [r4, #12]
 800c16c:	2900      	cmp	r1, #0
 800c16e:	d054      	beq.n	800c21a <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800c170:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c172:	b289      	uxth	r1, r1
 800c174:	b1a9      	cbz	r1, 800c1a2 <HAL_SPI_Receive+0xda>
 800c176:	1c69      	adds	r1, r5, #1
 800c178:	d13e      	bne.n	800c1f8 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c17a:	6893      	ldr	r3, [r2, #8]
 800c17c:	07db      	lsls	r3, r3, #31
 800c17e:	d544      	bpl.n	800c20a <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c180:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c182:	68d1      	ldr	r1, [r2, #12]
 800c184:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800c188:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c18c:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c18e:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c192:	fa1f fc8c 	uxth.w	ip, ip
 800c196:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c19a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c19c:	b29b      	uxth	r3, r3
 800c19e:	2b00      	cmp	r3, #0
 800c1a0:	d1eb      	bne.n	800c17a <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800c1a2:	4632      	mov	r2, r6
 800c1a4:	4629      	mov	r1, r5
 800c1a6:	4620      	mov	r0, r4
 800c1a8:	f7ff fc48 	bl	800ba3c <SPI_EndRxTransaction>
 800c1ac:	b108      	cbz	r0, 800c1b2 <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c1ae:	2320      	movs	r3, #32
 800c1b0:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c1b2:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c1b4:	3800      	subs	r0, #0
 800c1b6:	bf18      	it	ne
 800c1b8:	2001      	movne	r0, #1
error :
 800c1ba:	e7a2      	b.n	800c102 <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c1bc:	6883      	ldr	r3, [r0, #8]
 800c1be:	2b00      	cmp	r3, #0
 800c1c0:	d18d      	bne.n	800c0de <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c1c2:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c1c4:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c1c6:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c1c8:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c1cc:	460a      	mov	r2, r1
 800c1ce:	f7ff fdf5 	bl	800bdbc <HAL_SPI_TransmitReceive>
 800c1d2:	e79c      	b.n	800c10e <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800c1d4:	2002      	movs	r0, #2
}
 800c1d6:	b002      	add	sp, #8
 800c1d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c1dc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c1de:	68db      	ldr	r3, [r3, #12]
 800c1e0:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800c1e4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c1e6:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c1e8:	3b01      	subs	r3, #1
 800c1ea:	b29b      	uxth	r3, r3
 800c1ec:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c1ee:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c1f0:	b29b      	uxth	r3, r3
 800c1f2:	2b00      	cmp	r3, #0
 800c1f4:	d0d5      	beq.n	800c1a2 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c1f6:	6823      	ldr	r3, [r4, #0]
 800c1f8:	689a      	ldr	r2, [r3, #8]
 800c1fa:	07d2      	lsls	r2, r2, #31
 800c1fc:	d4ee      	bmi.n	800c1dc <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c1fe:	f7fc fe15 	bl	8008e2c <HAL_GetTick>
 800c202:	1b80      	subs	r0, r0, r6
 800c204:	42a8      	cmp	r0, r5
 800c206:	d243      	bcs.n	800c290 <HAL_SPI_Receive+0x1c8>
 800c208:	e7f1      	b.n	800c1ee <HAL_SPI_Receive+0x126>
 800c20a:	f7fc fe0f 	bl	8008e2c <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c20e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c210:	b29b      	uxth	r3, r3
 800c212:	2b00      	cmp	r3, #0
 800c214:	d0c5      	beq.n	800c1a2 <HAL_SPI_Receive+0xda>
 800c216:	6822      	ldr	r2, [r4, #0]
 800c218:	e7af      	b.n	800c17a <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800c21a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800c21c:	b292      	uxth	r2, r2
 800c21e:	2a00      	cmp	r2, #0
 800c220:	d0bf      	beq.n	800c1a2 <HAL_SPI_Receive+0xda>
 800c222:	1c6f      	adds	r7, r5, #1
 800c224:	d013      	beq.n	800c24e <HAL_SPI_Receive+0x186>
 800c226:	e02b      	b.n	800c280 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c228:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c22a:	7b1b      	ldrb	r3, [r3, #12]
 800c22c:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c22e:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c232:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c234:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c238:	fa1f fc8c 	uxth.w	ip, ip
 800c23c:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c240:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c242:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800c244:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c246:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800c248:	2b00      	cmp	r3, #0
 800c24a:	d0aa      	beq.n	800c1a2 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c24c:	6823      	ldr	r3, [r4, #0]
 800c24e:	689a      	ldr	r2, [r3, #8]
 800c250:	07d0      	lsls	r0, r2, #31
 800c252:	d4e9      	bmi.n	800c228 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c254:	f7fc fdea 	bl	8008e2c <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c258:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c25a:	b29b      	uxth	r3, r3
 800c25c:	2b00      	cmp	r3, #0
 800c25e:	d1f5      	bne.n	800c24c <HAL_SPI_Receive+0x184>
 800c260:	e79f      	b.n	800c1a2 <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c262:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c264:	7b1b      	ldrb	r3, [r3, #12]
 800c266:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c268:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c26a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c26c:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c26e:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800c270:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c272:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c274:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c276:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c278:	b29b      	uxth	r3, r3
 800c27a:	2b00      	cmp	r3, #0
 800c27c:	d091      	beq.n	800c1a2 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c27e:	6823      	ldr	r3, [r4, #0]
 800c280:	689a      	ldr	r2, [r3, #8]
 800c282:	07d1      	lsls	r1, r2, #31
 800c284:	d4ed      	bmi.n	800c262 <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c286:	f7fc fdd1 	bl	8008e2c <HAL_GetTick>
 800c28a:	1b80      	subs	r0, r0, r6
 800c28c:	42a8      	cmp	r0, r5
 800c28e:	d3f2      	bcc.n	800c276 <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800c290:	2003      	movs	r0, #3
 800c292:	e736      	b.n	800c102 <HAL_SPI_Receive+0x3a>

0800c294 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800c294:	2800      	cmp	r0, #0
 800c296:	f000 8087 	beq.w	800c3a8 <HAL_TIM_Base_Init+0x114>
{
 800c29a:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800c29c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c2a0:	4604      	mov	r4, r0
 800c2a2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c2a6:	2b00      	cmp	r3, #0
 800c2a8:	d079      	beq.n	800c39e <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800c2aa:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c2ac:	493f      	ldr	r1, [pc, #252]	; (800c3ac <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c2ae:	2302      	movs	r3, #2
 800c2b0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c2b4:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800c2b6:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c2b8:	d05d      	beq.n	800c376 <HAL_TIM_Base_Init+0xe2>
 800c2ba:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800c2be:	d031      	beq.n	800c324 <HAL_TIM_Base_Init+0x90>
 800c2c0:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800c2c4:	428a      	cmp	r2, r1
 800c2c6:	d02d      	beq.n	800c324 <HAL_TIM_Base_Init+0x90>
 800c2c8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c2cc:	428a      	cmp	r2, r1
 800c2ce:	d029      	beq.n	800c324 <HAL_TIM_Base_Init+0x90>
 800c2d0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c2d4:	428a      	cmp	r2, r1
 800c2d6:	d025      	beq.n	800c324 <HAL_TIM_Base_Init+0x90>
 800c2d8:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800c2dc:	428a      	cmp	r2, r1
 800c2de:	d04a      	beq.n	800c376 <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800c2e0:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800c2e4:	428a      	cmp	r2, r1
 800c2e6:	d021      	beq.n	800c32c <HAL_TIM_Base_Init+0x98>
 800c2e8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c2ec:	428a      	cmp	r2, r1
 800c2ee:	d01d      	beq.n	800c32c <HAL_TIM_Base_Init+0x98>
 800c2f0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c2f4:	428a      	cmp	r2, r1
 800c2f6:	d019      	beq.n	800c32c <HAL_TIM_Base_Init+0x98>
 800c2f8:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800c2fc:	428a      	cmp	r2, r1
 800c2fe:	d015      	beq.n	800c32c <HAL_TIM_Base_Init+0x98>
 800c300:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c304:	428a      	cmp	r2, r1
 800c306:	d011      	beq.n	800c32c <HAL_TIM_Base_Init+0x98>
 800c308:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c30c:	428a      	cmp	r2, r1
 800c30e:	d00d      	beq.n	800c32c <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c310:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c312:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c314:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c318:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800c31a:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800c31c:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c31e:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c320:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800c322:	e010      	b.n	800c346 <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800c324:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c326:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c32a:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c32c:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c32e:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800c330:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c334:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c336:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c33a:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c33c:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800c33e:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800c340:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c342:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c344:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800c346:	2301      	movs	r3, #1
 800c348:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800c34a:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c34e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800c352:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800c356:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800c35a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c35e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800c362:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c366:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800c36a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800c36e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800c372:	2000      	movs	r0, #0
}
 800c374:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800c376:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c378:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c37a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c37e:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800c380:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c384:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c386:	69a1      	ldr	r1, [r4, #24]
 800c388:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c38c:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800c38e:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c390:	68e3      	ldr	r3, [r4, #12]
 800c392:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c394:	6863      	ldr	r3, [r4, #4]
 800c396:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800c398:	6963      	ldr	r3, [r4, #20]
 800c39a:	6313      	str	r3, [r2, #48]	; 0x30
 800c39c:	e7d3      	b.n	800c346 <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800c39e:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800c3a2:	f7f5 fe21 	bl	8001fe8 <HAL_TIM_Base_MspInit>
 800c3a6:	e780      	b.n	800c2aa <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800c3a8:	2001      	movs	r0, #1
}
 800c3aa:	4770      	bx	lr
 800c3ac:	40010000 	.word	0x40010000

0800c3b0 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800c3b0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c3b4:	2b01      	cmp	r3, #1
 800c3b6:	d12f      	bne.n	800c418 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c3b8:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c3ba:	4919      	ldr	r1, [pc, #100]	; (800c420 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c3bc:	2202      	movs	r2, #2
 800c3be:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c3c2:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c3c4:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c3c6:	f042 0201 	orr.w	r2, r2, #1
 800c3ca:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c3cc:	d019      	beq.n	800c402 <HAL_TIM_Base_Start_IT+0x52>
 800c3ce:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c3d2:	d016      	beq.n	800c402 <HAL_TIM_Base_Start_IT+0x52>
 800c3d4:	4a13      	ldr	r2, [pc, #76]	; (800c424 <HAL_TIM_Base_Start_IT+0x74>)
 800c3d6:	4293      	cmp	r3, r2
 800c3d8:	d013      	beq.n	800c402 <HAL_TIM_Base_Start_IT+0x52>
 800c3da:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c3de:	4293      	cmp	r3, r2
 800c3e0:	d00f      	beq.n	800c402 <HAL_TIM_Base_Start_IT+0x52>
 800c3e2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c3e6:	4293      	cmp	r3, r2
 800c3e8:	d00b      	beq.n	800c402 <HAL_TIM_Base_Start_IT+0x52>
 800c3ea:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c3ee:	4293      	cmp	r3, r2
 800c3f0:	d007      	beq.n	800c402 <HAL_TIM_Base_Start_IT+0x52>
 800c3f2:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800c3f6:	4293      	cmp	r3, r2
 800c3f8:	d003      	beq.n	800c402 <HAL_TIM_Base_Start_IT+0x52>
 800c3fa:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800c3fe:	4293      	cmp	r3, r2
 800c400:	d104      	bne.n	800c40c <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800c402:	689a      	ldr	r2, [r3, #8]
 800c404:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800c408:	2a06      	cmp	r2, #6
 800c40a:	d007      	beq.n	800c41c <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800c40c:	681a      	ldr	r2, [r3, #0]
 800c40e:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800c412:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800c414:	601a      	str	r2, [r3, #0]
 800c416:	4770      	bx	lr
    return HAL_ERROR;
 800c418:	2001      	movs	r0, #1
 800c41a:	4770      	bx	lr
  return HAL_OK;
 800c41c:	2000      	movs	r0, #0
}
 800c41e:	4770      	bx	lr
 800c420:	40010000 	.word	0x40010000
 800c424:	40000400 	.word	0x40000400

0800c428 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800c428:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800c42c:	2b01      	cmp	r3, #1
 800c42e:	d075      	beq.n	800c51c <HAL_TIM_ConfigClockSource+0xf4>
 800c430:	4602      	mov	r2, r0
{
 800c432:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c434:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800c436:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c438:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800c43c:	2001      	movs	r0, #1
 800c43e:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800c442:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c444:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800c448:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800c44c:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800c44e:	680b      	ldr	r3, [r1, #0]
 800c450:	2b60      	cmp	r3, #96	; 0x60
 800c452:	d065      	beq.n	800c520 <HAL_TIM_ConfigClockSource+0xf8>
 800c454:	d824      	bhi.n	800c4a0 <HAL_TIM_ConfigClockSource+0x78>
 800c456:	2b40      	cmp	r3, #64	; 0x40
 800c458:	d07c      	beq.n	800c554 <HAL_TIM_ConfigClockSource+0x12c>
 800c45a:	d94b      	bls.n	800c4f4 <HAL_TIM_ConfigClockSource+0xcc>
 800c45c:	2b50      	cmp	r3, #80	; 0x50
 800c45e:	d117      	bne.n	800c490 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c460:	684b      	ldr	r3, [r1, #4]
 800c462:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800c464:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c466:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c46a:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c46c:	6a23      	ldr	r3, [r4, #32]
 800c46e:	f023 0301 	bic.w	r3, r3, #1
 800c472:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c474:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c476:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c47a:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800c47e:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800c480:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800c482:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800c484:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c488:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800c48c:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800c48e:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800c490:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800c492:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800c494:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c498:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800c49c:	bc30      	pop	{r4, r5}
 800c49e:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800c4a0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c4a4:	d038      	beq.n	800c518 <HAL_TIM_ConfigClockSource+0xf0>
 800c4a6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800c4aa:	d110      	bne.n	800c4ce <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c4ac:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800c4b0:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c4b2:	432b      	orrs	r3, r5
 800c4b4:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c4b6:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c4ba:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800c4be:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800c4c0:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800c4c2:	68a3      	ldr	r3, [r4, #8]
 800c4c4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800c4c8:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800c4ca:	60a3      	str	r3, [r4, #8]
      break;
 800c4cc:	e7e0      	b.n	800c490 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c4ce:	2b70      	cmp	r3, #112	; 0x70
 800c4d0:	d1de      	bne.n	800c490 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c4d2:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800c4d6:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c4d8:	432b      	orrs	r3, r5
 800c4da:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c4dc:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c4e0:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800c4e4:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800c4e6:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800c4e8:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800c4ea:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800c4ee:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800c4f0:	60a3      	str	r3, [r4, #8]
      break;
 800c4f2:	e7cd      	b.n	800c490 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c4f4:	2b20      	cmp	r3, #32
 800c4f6:	d002      	beq.n	800c4fe <HAL_TIM_ConfigClockSource+0xd6>
 800c4f8:	d90a      	bls.n	800c510 <HAL_TIM_ConfigClockSource+0xe8>
 800c4fa:	2b30      	cmp	r3, #48	; 0x30
 800c4fc:	d1c8      	bne.n	800c490 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800c4fe:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c500:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c504:	430b      	orrs	r3, r1
 800c506:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800c50a:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c50c:	60a3      	str	r3, [r4, #8]
}
 800c50e:	e7bf      	b.n	800c490 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c510:	f033 0110 	bics.w	r1, r3, #16
 800c514:	d1bc      	bne.n	800c490 <HAL_TIM_ConfigClockSource+0x68>
 800c516:	e7f2      	b.n	800c4fe <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800c518:	2000      	movs	r0, #0
 800c51a:	e7b9      	b.n	800c490 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800c51c:	2002      	movs	r0, #2
}
 800c51e:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c520:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800c522:	6848      	ldr	r0, [r1, #4]
 800c524:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c526:	f023 0310 	bic.w	r3, r3, #16
 800c52a:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c52c:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800c52e:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800c530:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800c534:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800c538:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800c53c:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800c540:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800c542:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800c544:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c546:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c54a:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800c54e:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c550:	60a3      	str	r3, [r4, #8]
}
 800c552:	e79d      	b.n	800c490 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c554:	684b      	ldr	r3, [r1, #4]
 800c556:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800c558:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c55a:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c55e:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c560:	6a23      	ldr	r3, [r4, #32]
 800c562:	f023 0301 	bic.w	r3, r3, #1
 800c566:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c568:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c56a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c56e:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800c572:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800c574:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800c576:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c578:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c57c:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800c580:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c582:	60a3      	str	r3, [r4, #8]
}
 800c584:	e784      	b.n	800c490 <HAL_TIM_ConfigClockSource+0x68>
 800c586:	bf00      	nop

0800c588 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800c588:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800c58c:	2a01      	cmp	r2, #1
 800c58e:	d050      	beq.n	800c632 <HAL_TIM_SlaveConfigSynchro+0xaa>
 800c590:	4603      	mov	r3, r0
{
 800c592:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c594:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800c596:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c598:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800c59c:	2001      	movs	r0, #1
 800c59e:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800c5a2:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800c5a4:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800c5a6:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c5a8:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800c5ac:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800c5ae:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800c5b2:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800c5b4:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800c5b6:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800c5b8:	d060      	beq.n	800c67c <HAL_TIM_SlaveConfigSynchro+0xf4>
 800c5ba:	d90f      	bls.n	800c5dc <HAL_TIM_SlaveConfigSynchro+0x54>
 800c5bc:	2860      	cmp	r0, #96	; 0x60
 800c5be:	d03a      	beq.n	800c636 <HAL_TIM_SlaveConfigSynchro+0xae>
 800c5c0:	2870      	cmp	r0, #112	; 0x70
 800c5c2:	d10e      	bne.n	800c5e2 <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c5c4:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800c5c8:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c5ca:	432a      	orrs	r2, r5
 800c5cc:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c5ce:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c5d2:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800c5d6:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800c5d8:	60a2      	str	r2, [r4, #8]
 800c5da:	e00f      	b.n	800c5fc <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800c5dc:	2840      	cmp	r0, #64	; 0x40
 800c5de:	d03d      	beq.n	800c65c <HAL_TIM_SlaveConfigSynchro+0xd4>
 800c5e0:	d907      	bls.n	800c5f2 <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800c5e2:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800c5e4:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800c5e6:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800c5ea:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800c5ee:	bc30      	pop	{r4, r5}
 800c5f0:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800c5f2:	2820      	cmp	r0, #32
 800c5f4:	d002      	beq.n	800c5fc <HAL_TIM_SlaveConfigSynchro+0x74>
 800c5f6:	d912      	bls.n	800c61e <HAL_TIM_SlaveConfigSynchro+0x96>
 800c5f8:	2830      	cmp	r0, #48	; 0x30
 800c5fa:	d1f2      	bne.n	800c5e2 <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800c5fc:	68e2      	ldr	r2, [r4, #12]
 800c5fe:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c602:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800c604:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800c606:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800c608:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800c60a:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800c60e:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800c610:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c614:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800c618:	4608      	mov	r0, r1
}
 800c61a:	bc30      	pop	{r4, r5}
 800c61c:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800c61e:	f030 0210 	bics.w	r2, r0, #16
 800c622:	d0eb      	beq.n	800c5fc <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800c624:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800c626:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800c628:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800c62c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800c630:	e7dd      	b.n	800c5ee <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800c632:	2002      	movs	r0, #2
}
 800c634:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c636:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800c638:	6888      	ldr	r0, [r1, #8]
 800c63a:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c63c:	f022 0210 	bic.w	r2, r2, #16
 800c640:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c642:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800c644:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800c646:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800c64a:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800c64e:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800c652:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800c656:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800c658:	6222      	str	r2, [r4, #32]
 800c65a:	e7cf      	b.n	800c5fc <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800c65c:	2d05      	cmp	r5, #5
 800c65e:	d0c0      	beq.n	800c5e2 <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800c660:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800c662:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800c664:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800c666:	f022 0201 	bic.w	r2, r2, #1
 800c66a:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800c66c:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c66e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800c672:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800c676:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800c678:	6220      	str	r0, [r4, #32]
      break;
 800c67a:	e7bf      	b.n	800c5fc <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c67c:	688a      	ldr	r2, [r1, #8]
 800c67e:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800c680:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c682:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c686:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c688:	6a22      	ldr	r2, [r4, #32]
 800c68a:	f022 0201 	bic.w	r2, r2, #1
 800c68e:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c690:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c692:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c696:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800c69a:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800c69c:	6221      	str	r1, [r4, #32]
 800c69e:	e7ad      	b.n	800c5fc <HAL_TIM_SlaveConfigSynchro+0x74>

0800c6a0 <HAL_TIM_OC_DelayElapsedCallback>:
 800c6a0:	4770      	bx	lr
 800c6a2:	bf00      	nop

0800c6a4 <HAL_TIM_IC_CaptureCallback>:
 800c6a4:	4770      	bx	lr
 800c6a6:	bf00      	nop

0800c6a8 <HAL_TIM_PWM_PulseFinishedCallback>:
 800c6a8:	4770      	bx	lr
 800c6aa:	bf00      	nop

0800c6ac <HAL_TIM_TriggerCallback>:
 800c6ac:	4770      	bx	lr
 800c6ae:	bf00      	nop

0800c6b0 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c6b0:	6803      	ldr	r3, [r0, #0]
 800c6b2:	691a      	ldr	r2, [r3, #16]
 800c6b4:	0791      	lsls	r1, r2, #30
{
 800c6b6:	b510      	push	{r4, lr}
 800c6b8:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c6ba:	d502      	bpl.n	800c6c2 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800c6bc:	68da      	ldr	r2, [r3, #12]
 800c6be:	0792      	lsls	r2, r2, #30
 800c6c0:	d45f      	bmi.n	800c782 <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800c6c2:	691a      	ldr	r2, [r3, #16]
 800c6c4:	0750      	lsls	r0, r2, #29
 800c6c6:	d502      	bpl.n	800c6ce <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800c6c8:	68da      	ldr	r2, [r3, #12]
 800c6ca:	0751      	lsls	r1, r2, #29
 800c6cc:	d446      	bmi.n	800c75c <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800c6ce:	691a      	ldr	r2, [r3, #16]
 800c6d0:	0712      	lsls	r2, r2, #28
 800c6d2:	d502      	bpl.n	800c6da <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800c6d4:	68da      	ldr	r2, [r3, #12]
 800c6d6:	0710      	lsls	r0, r2, #28
 800c6d8:	d42e      	bmi.n	800c738 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800c6da:	691a      	ldr	r2, [r3, #16]
 800c6dc:	06d2      	lsls	r2, r2, #27
 800c6de:	d502      	bpl.n	800c6e6 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800c6e0:	68da      	ldr	r2, [r3, #12]
 800c6e2:	06d0      	lsls	r0, r2, #27
 800c6e4:	d418      	bmi.n	800c718 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800c6e6:	691a      	ldr	r2, [r3, #16]
 800c6e8:	07d1      	lsls	r1, r2, #31
 800c6ea:	d502      	bpl.n	800c6f2 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800c6ec:	68da      	ldr	r2, [r3, #12]
 800c6ee:	07d2      	lsls	r2, r2, #31
 800c6f0:	d45d      	bmi.n	800c7ae <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800c6f2:	691a      	ldr	r2, [r3, #16]
 800c6f4:	0610      	lsls	r0, r2, #24
 800c6f6:	d502      	bpl.n	800c6fe <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800c6f8:	68da      	ldr	r2, [r3, #12]
 800c6fa:	0611      	lsls	r1, r2, #24
 800c6fc:	d45f      	bmi.n	800c7be <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800c6fe:	691a      	ldr	r2, [r3, #16]
 800c700:	0652      	lsls	r2, r2, #25
 800c702:	d502      	bpl.n	800c70a <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800c704:	68da      	ldr	r2, [r3, #12]
 800c706:	0650      	lsls	r0, r2, #25
 800c708:	d461      	bmi.n	800c7ce <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800c70a:	691a      	ldr	r2, [r3, #16]
 800c70c:	0691      	lsls	r1, r2, #26
 800c70e:	d502      	bpl.n	800c716 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800c710:	68da      	ldr	r2, [r3, #12]
 800c712:	0692      	lsls	r2, r2, #26
 800c714:	d443      	bmi.n	800c79e <HAL_TIM_IRQHandler+0xee>
}
 800c716:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800c718:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800c71c:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800c71e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800c720:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c722:	69db      	ldr	r3, [r3, #28]
 800c724:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800c728:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c72a:	d064      	beq.n	800c7f6 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800c72c:	f7ff ffba 	bl	800c6a4 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c730:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800c732:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c734:	7722      	strb	r2, [r4, #28]
 800c736:	e7d6      	b.n	800c6e6 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800c738:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800c73c:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800c73e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800c740:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c742:	69db      	ldr	r3, [r3, #28]
 800c744:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800c746:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c748:	d152      	bne.n	800c7f0 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c74a:	f7ff ffa9 	bl	800c6a0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c74e:	4620      	mov	r0, r4
 800c750:	f7ff ffaa 	bl	800c6a8 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c754:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800c756:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c758:	7722      	strb	r2, [r4, #28]
 800c75a:	e7be      	b.n	800c6da <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800c75c:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800c760:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800c762:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800c764:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c766:	699b      	ldr	r3, [r3, #24]
 800c768:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800c76c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c76e:	d13c      	bne.n	800c7ea <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c770:	f7ff ff96 	bl	800c6a0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c774:	4620      	mov	r0, r4
 800c776:	f7ff ff97 	bl	800c6a8 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c77a:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800c77c:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c77e:	7722      	strb	r2, [r4, #28]
 800c780:	e7a5      	b.n	800c6ce <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800c782:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800c786:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800c788:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800c78a:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800c78c:	699b      	ldr	r3, [r3, #24]
 800c78e:	079b      	lsls	r3, r3, #30
 800c790:	d025      	beq.n	800c7de <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800c792:	f7ff ff87 	bl	800c6a4 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c796:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800c798:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c79a:	7722      	strb	r2, [r4, #28]
 800c79c:	e791      	b.n	800c6c2 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c79e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800c7a2:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c7a4:	611a      	str	r2, [r3, #16]
}
 800c7a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800c7aa:	f000 b86b 	b.w	800c884 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800c7ae:	f06f 0201 	mvn.w	r2, #1
 800c7b2:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800c7b4:	4620      	mov	r0, r4
 800c7b6:	f7f5 f9d5 	bl	8001b64 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800c7ba:	6823      	ldr	r3, [r4, #0]
 800c7bc:	e799      	b.n	800c6f2 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800c7be:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800c7c2:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800c7c4:	4620      	mov	r0, r4
 800c7c6:	f000 f85f 	bl	800c888 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800c7ca:	6823      	ldr	r3, [r4, #0]
 800c7cc:	e797      	b.n	800c6fe <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800c7ce:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800c7d2:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800c7d4:	4620      	mov	r0, r4
 800c7d6:	f7ff ff69 	bl	800c6ac <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800c7da:	6823      	ldr	r3, [r4, #0]
 800c7dc:	e795      	b.n	800c70a <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800c7de:	f7ff ff5f 	bl	800c6a0 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c7e2:	4620      	mov	r0, r4
 800c7e4:	f7ff ff60 	bl	800c6a8 <HAL_TIM_PWM_PulseFinishedCallback>
 800c7e8:	e7d5      	b.n	800c796 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800c7ea:	f7ff ff5b 	bl	800c6a4 <HAL_TIM_IC_CaptureCallback>
 800c7ee:	e7c4      	b.n	800c77a <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800c7f0:	f7ff ff58 	bl	800c6a4 <HAL_TIM_IC_CaptureCallback>
 800c7f4:	e7ae      	b.n	800c754 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c7f6:	f7ff ff53 	bl	800c6a0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c7fa:	4620      	mov	r0, r4
 800c7fc:	f7ff ff54 	bl	800c6a8 <HAL_TIM_PWM_PulseFinishedCallback>
 800c800:	e796      	b.n	800c730 <HAL_TIM_IRQHandler+0x80>
 800c802:	bf00      	nop

0800c804 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800c804:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800c808:	2b01      	cmp	r3, #1
 800c80a:	d037      	beq.n	800c87c <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800c80c:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c80e:	2202      	movs	r2, #2
{
 800c810:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c812:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800c816:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800c818:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800c81a:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800c81c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800c820:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800c822:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c824:	4a16      	ldr	r2, [pc, #88]	; (800c880 <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800c826:	4293      	cmp	r3, r2
 800c828:	d01a      	beq.n	800c860 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c82a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c82e:	d017      	beq.n	800c860 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c830:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800c834:	4293      	cmp	r3, r2
 800c836:	d013      	beq.n	800c860 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c838:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c83c:	4293      	cmp	r3, r2
 800c83e:	d00f      	beq.n	800c860 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c840:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c844:	4293      	cmp	r3, r2
 800c846:	d00b      	beq.n	800c860 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c848:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c84c:	4293      	cmp	r3, r2
 800c84e:	d007      	beq.n	800c860 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c850:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800c854:	4293      	cmp	r3, r2
 800c856:	d003      	beq.n	800c860 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c858:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800c85c:	4293      	cmp	r3, r2
 800c85e:	d104      	bne.n	800c86a <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800c860:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800c862:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800c866:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800c868:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800c86a:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800c86c:	2201      	movs	r2, #1
 800c86e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c872:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800c876:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800c878:	4618      	mov	r0, r3
}
 800c87a:	4770      	bx	lr
  __HAL_LOCK(htim);
 800c87c:	2002      	movs	r0, #2
}
 800c87e:	4770      	bx	lr
 800c880:	40010000 	.word	0x40010000

0800c884 <HAL_TIMEx_CommutCallback>:
 800c884:	4770      	bx	lr
 800c886:	bf00      	nop

0800c888 <HAL_TIMEx_BreakCallback>:
 800c888:	4770      	bx	lr
 800c88a:	bf00      	nop

0800c88c <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800c88c:	680b      	ldr	r3, [r1, #0]
{
 800c88e:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800c890:	b9d3      	cbnz	r3, 800c8c8 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c892:	6803      	ldr	r3, [r0, #0]
 800c894:	684c      	ldr	r4, [r1, #4]
 800c896:	688a      	ldr	r2, [r1, #8]
 800c898:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800c89c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800c8a0:	4323      	orrs	r3, r4
 800c8a2:	4313      	orrs	r3, r2
 800c8a4:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800c8a8:	4323      	orrs	r3, r4
 800c8aa:	4313      	orrs	r3, r2
 800c8ac:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800c8b0:	4323      	orrs	r3, r4
 800c8b2:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800c8b6:	4313      	orrs	r3, r2
 800c8b8:	432b      	orrs	r3, r5
 800c8ba:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800c8bc:	4323      	orrs	r3, r4
 800c8be:	4313      	orrs	r3, r2
 800c8c0:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800c8c2:	bc30      	pop	{r4, r5}
 800c8c4:	2000      	movs	r0, #0
 800c8c6:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c8c8:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800c8cc:	6803      	ldr	r3, [r0, #0]
 800c8ce:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800c8d2:	4323      	orrs	r3, r4
 800c8d4:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800c8d6:	4313      	orrs	r3, r2
 800c8d8:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800c8da:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c8dc:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800c8de:	6843      	ldr	r3, [r0, #4]
 800c8e0:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800c8e4:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800c8e8:	4313      	orrs	r3, r2
 800c8ea:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800c8ee:	4323      	orrs	r3, r4
 800c8f0:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800c8f4:	4313      	orrs	r3, r2
 800c8f6:	432b      	orrs	r3, r5
 800c8f8:	698a      	ldr	r2, [r1, #24]
 800c8fa:	4323      	orrs	r3, r4
 800c8fc:	4313      	orrs	r3, r2
 800c8fe:	6043      	str	r3, [r0, #4]
}
 800c900:	bc30      	pop	{r4, r5}
 800c902:	2000      	movs	r0, #0
 800c904:	4770      	bx	lr
 800c906:	bf00      	nop

0800c908 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800c908:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c90a:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800c90c:	bb02      	cbnz	r2, 800c950 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c90e:	e9d1 2400 	ldrd	r2, r4, [r1]
 800c912:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800c916:	3c01      	subs	r4, #1
 800c918:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800c91c:	3a01      	subs	r2, #1
 800c91e:	4313      	orrs	r3, r2
 800c920:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800c924:	3c01      	subs	r4, #1
 800c926:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800c92a:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800c92e:	3a01      	subs	r2, #1
 800c930:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800c934:	698a      	ldr	r2, [r1, #24]
 800c936:	1e69      	subs	r1, r5, #1
 800c938:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800c93c:	1e61      	subs	r1, r4, #1
 800c93e:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800c942:	3a01      	subs	r2, #1
 800c944:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800c948:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800c94a:	bc30      	pop	{r4, r5}
 800c94c:	2000      	movs	r0, #0
 800c94e:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c950:	68cc      	ldr	r4, [r1, #12]
 800c952:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800c954:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c956:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800c95a:	3c01      	subs	r4, #1
 800c95c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800c960:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800c964:	3a01      	subs	r2, #1
 800c966:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800c96a:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800c96c:	e9d1 2400 	ldrd	r2, r4, [r1]
 800c970:	68c3      	ldr	r3, [r0, #12]
 800c972:	3c01      	subs	r4, #1
 800c974:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800c978:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800c97c:	3a01      	subs	r2, #1
 800c97e:	690c      	ldr	r4, [r1, #16]
 800c980:	4313      	orrs	r3, r2
 800c982:	698a      	ldr	r2, [r1, #24]
 800c984:	1e69      	subs	r1, r5, #1
 800c986:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800c98a:	1e61      	subs	r1, r4, #1
 800c98c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800c990:	3a01      	subs	r2, #1
 800c992:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800c996:	60c3      	str	r3, [r0, #12]
}
 800c998:	bc30      	pop	{r4, r5}
 800c99a:	2000      	movs	r0, #0
 800c99c:	4770      	bx	lr
 800c99e:	bf00      	nop

0800c9a0 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800c9a0:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800c9a2:	680b      	ldr	r3, [r1, #0]
{
 800c9a4:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800c9a6:	684a      	ldr	r2, [r1, #4]
{
 800c9a8:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800c9aa:	4313      	orrs	r3, r2
 800c9ac:	6900      	ldr	r0, [r0, #16]
 800c9ae:	68ca      	ldr	r2, [r1, #12]
 800c9b0:	0d80      	lsrs	r0, r0, #22
 800c9b2:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800c9b6:	688a      	ldr	r2, [r1, #8]
 800c9b8:	0580      	lsls	r0, r0, #22
 800c9ba:	4303      	orrs	r3, r0
 800c9bc:	3a01      	subs	r2, #1
 800c9be:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800c9c2:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800c9c4:	f7fc fa32 	bl	8008e2c <HAL_GetTick>
 800c9c8:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800c9ca:	1c6b      	adds	r3, r5, #1
 800c9cc:	d105      	bne.n	800c9da <FMC_SDRAM_SendCommand+0x3a>
 800c9ce:	69a3      	ldr	r3, [r4, #24]
 800c9d0:	f013 0320 	ands.w	r3, r3, #32
 800c9d4:	d1fb      	bne.n	800c9ce <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800c9d6:	4618      	mov	r0, r3
}
 800c9d8:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800c9da:	69a3      	ldr	r3, [r4, #24]
 800c9dc:	f013 0320 	ands.w	r3, r3, #32
 800c9e0:	d0f9      	beq.n	800c9d6 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800c9e2:	b125      	cbz	r5, 800c9ee <FMC_SDRAM_SendCommand+0x4e>
 800c9e4:	f7fc fa22 	bl	8008e2c <HAL_GetTick>
 800c9e8:	1b80      	subs	r0, r0, r6
 800c9ea:	42a8      	cmp	r0, r5
 800c9ec:	d9ed      	bls.n	800c9ca <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800c9ee:	2003      	movs	r0, #3
}
 800c9f0:	bd70      	pop	{r4, r5, r6, pc}
 800c9f2:	bf00      	nop

0800c9f4 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800c9f4:	6943      	ldr	r3, [r0, #20]
 800c9f6:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800c9fa:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800c9fc:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800ca00:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800ca04:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800ca06:	6151      	str	r1, [r2, #20]
}
 800ca08:	4770      	bx	lr
 800ca0a:	bf00      	nop

0800ca0c <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800ca0c:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800ca0e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ca12:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800ca14:	f002 fafe 	bl	800f014 <xTaskGetSchedulerState>
 800ca18:	2801      	cmp	r0, #1
 800ca1a:	d100      	bne.n	800ca1e <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800ca1c:	bd08      	pop	{r3, pc}
 800ca1e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800ca22:	f000 bc3f 	b.w	800d2a4 <xPortSysTickHandler>
 800ca26:	bf00      	nop

0800ca28 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800ca28:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800ca2c:	b92b      	cbnz	r3, 800ca3a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800ca2e:	4b06      	ldr	r3, [pc, #24]	; (800ca48 <osKernelInitialize+0x20>)
 800ca30:	6818      	ldr	r0, [r3, #0]
 800ca32:	b928      	cbnz	r0, 800ca40 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800ca34:	2201      	movs	r2, #1
 800ca36:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800ca38:	4770      	bx	lr
    stat = osErrorISR;
 800ca3a:	f06f 0005 	mvn.w	r0, #5
 800ca3e:	4770      	bx	lr
    } else {
      stat = osError;
 800ca40:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800ca44:	4770      	bx	lr
 800ca46:	bf00      	nop
 800ca48:	20002c84 	.word	0x20002c84

0800ca4c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800ca4c:	b510      	push	{r4, lr}
 800ca4e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800ca52:	b974      	cbnz	r4, 800ca72 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800ca54:	4b08      	ldr	r3, [pc, #32]	; (800ca78 <osKernelStart+0x2c>)
 800ca56:	681a      	ldr	r2, [r3, #0]
 800ca58:	2a01      	cmp	r2, #1
 800ca5a:	d107      	bne.n	800ca6c <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800ca5c:	4907      	ldr	r1, [pc, #28]	; (800ca7c <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800ca5e:	2202      	movs	r2, #2
 800ca60:	77cc      	strb	r4, [r1, #31]
 800ca62:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800ca64:	f002 f8b0 	bl	800ebc8 <vTaskStartScheduler>
      stat = osOK;
 800ca68:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800ca6a:	bd10      	pop	{r4, pc}
      stat = osError;
 800ca6c:	f04f 30ff 	mov.w	r0, #4294967295
}
 800ca70:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800ca72:	f06f 0005 	mvn.w	r0, #5
}
 800ca76:	bd10      	pop	{r4, pc}
 800ca78:	20002c84 	.word	0x20002c84
 800ca7c:	e000ed00 	.word	0xe000ed00

0800ca80 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800ca80:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ca82:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800ca84:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800ca86:	4615      	mov	r5, r2
  hTask = NULL;
 800ca88:	9405      	str	r4, [sp, #20]
 800ca8a:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800ca8e:	b9ea      	cbnz	r2, 800cacc <osThreadNew+0x4c>
 800ca90:	b350      	cbz	r0, 800cae8 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800ca92:	b1f5      	cbz	r5, 800cad2 <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800ca94:	69ab      	ldr	r3, [r5, #24]
 800ca96:	bb5b      	cbnz	r3, 800caf0 <osThreadNew+0x70>
 800ca98:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800ca9a:	686a      	ldr	r2, [r5, #4]
 800ca9c:	07d2      	lsls	r2, r2, #31
 800ca9e:	d423      	bmi.n	800cae8 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800caa0:	696e      	ldr	r6, [r5, #20]
 800caa2:	b34e      	cbz	r6, 800caf8 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800caa4:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800caa8:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800caaa:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800caac:	b34c      	cbz	r4, 800cb02 <osThreadNew+0x82>
 800caae:	68ea      	ldr	r2, [r5, #12]
 800cab0:	2aab      	cmp	r2, #171	; 0xab
 800cab2:	d919      	bls.n	800cae8 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cab4:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cab6:	b1bd      	cbz	r5, 800cae8 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cab8:	b1b6      	cbz	r6, 800cae8 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800caba:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800cabe:	9300      	str	r3, [sp, #0]
 800cac0:	4662      	mov	r2, ip
 800cac2:	460b      	mov	r3, r1
 800cac4:	4639      	mov	r1, r7
 800cac6:	f001 ffbd 	bl	800ea44 <xTaskCreateStatic>
 800caca:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800cacc:	4620      	mov	r0, r4
 800cace:	b007      	add	sp, #28
 800cad0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cad2:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800cad4:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800cad6:	ac05      	add	r4, sp, #20
 800cad8:	9300      	str	r3, [sp, #0]
 800cada:	9401      	str	r4, [sp, #4]
 800cadc:	460b      	mov	r3, r1
 800cade:	4629      	mov	r1, r5
 800cae0:	f001 ffea 	bl	800eab8 <xTaskCreate>
 800cae4:	2801      	cmp	r0, #1
 800cae6:	d00a      	beq.n	800cafe <osThreadNew+0x7e>
        return (NULL);
 800cae8:	2400      	movs	r4, #0
}
 800caea:	4620      	mov	r0, r4
 800caec:	b007      	add	sp, #28
 800caee:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800caf0:	1e5c      	subs	r4, r3, #1
 800caf2:	2c37      	cmp	r4, #55	; 0x37
 800caf4:	d9d1      	bls.n	800ca9a <osThreadNew+0x1a>
 800caf6:	e7f7      	b.n	800cae8 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800caf8:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800cafc:	e7d4      	b.n	800caa8 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800cafe:	9c05      	ldr	r4, [sp, #20]
 800cb00:	e7e4      	b.n	800cacc <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800cb02:	68ee      	ldr	r6, [r5, #12]
 800cb04:	2e00      	cmp	r6, #0
 800cb06:	d1e1      	bne.n	800cacc <osThreadNew+0x4c>
 800cb08:	692d      	ldr	r5, [r5, #16]
 800cb0a:	2d00      	cmp	r5, #0
 800cb0c:	d1de      	bne.n	800cacc <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800cb0e:	fa1f f28c 	uxth.w	r2, ip
 800cb12:	463d      	mov	r5, r7
 800cb14:	e7df      	b.n	800cad6 <osThreadNew+0x56>
 800cb16:	bf00      	nop

0800cb18 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800cb18:	b510      	push	{r4, lr}
 800cb1a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800cb1e:	b92c      	cbnz	r4, 800cb2c <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800cb20:	b900      	cbnz	r0, 800cb24 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800cb22:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800cb24:	f001 fffa 	bl	800eb1c <vTaskDelay>
    stat = osOK;
 800cb28:	4620      	mov	r0, r4
}
 800cb2a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800cb2c:	f06f 0005 	mvn.w	r0, #5
}
 800cb30:	bd10      	pop	{r4, pc}
 800cb32:	bf00      	nop

0800cb34 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800cb34:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cb36:	b083      	sub	sp, #12
 800cb38:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800cb3c:	b9fe      	cbnz	r6, 800cb7e <osSemaphoreNew+0x4a>
 800cb3e:	b1f0      	cbz	r0, 800cb7e <osSemaphoreNew+0x4a>
 800cb40:	4288      	cmp	r0, r1
 800cb42:	460f      	mov	r7, r1
 800cb44:	d31b      	bcc.n	800cb7e <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800cb46:	4615      	mov	r5, r2
 800cb48:	b192      	cbz	r2, 800cb70 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800cb4a:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800cb4e:	b1d2      	cbz	r2, 800cb86 <osSemaphoreNew+0x52>
 800cb50:	2b4f      	cmp	r3, #79	; 0x4f
 800cb52:	d914      	bls.n	800cb7e <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800cb54:	2801      	cmp	r0, #1
 800cb56:	d038      	beq.n	800cbca <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800cb58:	f000 fd8a 	bl	800d670 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800cb5c:	4604      	mov	r4, r0
 800cb5e:	b170      	cbz	r0, 800cb7e <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800cb60:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800cb62:	4620      	mov	r0, r4
 800cb64:	4629      	mov	r1, r5
 800cb66:	f001 fc35 	bl	800e3d4 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800cb6a:	4620      	mov	r0, r4
 800cb6c:	b003      	add	sp, #12
 800cb6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800cb70:	2801      	cmp	r0, #1
 800cb72:	d012      	beq.n	800cb9a <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800cb74:	f000 fddc 	bl	800d730 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800cb78:	4604      	mov	r4, r0
 800cb7a:	2800      	cmp	r0, #0
 800cb7c:	d1f1      	bne.n	800cb62 <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800cb7e:	2400      	movs	r4, #0
}
 800cb80:	4620      	mov	r0, r4
 800cb82:	b003      	add	sp, #12
 800cb84:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800cb86:	2b00      	cmp	r3, #0
 800cb88:	d1f9      	bne.n	800cb7e <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800cb8a:	2801      	cmp	r0, #1
 800cb8c:	d005      	beq.n	800cb9a <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800cb8e:	f000 fdcf 	bl	800d730 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800cb92:	4604      	mov	r4, r0
 800cb94:	2800      	cmp	r0, #0
 800cb96:	d1e3      	bne.n	800cb60 <osSemaphoreNew+0x2c>
 800cb98:	e7f1      	b.n	800cb7e <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800cb9a:	2203      	movs	r2, #3
 800cb9c:	2100      	movs	r1, #0
 800cb9e:	2001      	movs	r0, #1
 800cba0:	f000 fd24 	bl	800d5ec <xQueueGenericCreate>
 800cba4:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800cba6:	2c00      	cmp	r4, #0
 800cba8:	d0e9      	beq.n	800cb7e <osSemaphoreNew+0x4a>
 800cbaa:	b917      	cbnz	r7, 800cbb2 <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800cbac:	2d00      	cmp	r5, #0
 800cbae:	d1d7      	bne.n	800cb60 <osSemaphoreNew+0x2c>
 800cbb0:	e7d7      	b.n	800cb62 <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800cbb2:	2300      	movs	r3, #0
 800cbb4:	461a      	mov	r2, r3
 800cbb6:	4619      	mov	r1, r3
 800cbb8:	4620      	mov	r0, r4
 800cbba:	f000 fdff 	bl	800d7bc <xQueueGenericSend>
 800cbbe:	2801      	cmp	r0, #1
 800cbc0:	d0f4      	beq.n	800cbac <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800cbc2:	4620      	mov	r0, r4
 800cbc4:	f001 fbc0 	bl	800e348 <vQueueDelete>
 800cbc8:	e7d9      	b.n	800cb7e <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800cbca:	4613      	mov	r3, r2
 800cbcc:	2203      	movs	r2, #3
 800cbce:	9200      	str	r2, [sp, #0]
 800cbd0:	4631      	mov	r1, r6
 800cbd2:	4632      	mov	r2, r6
 800cbd4:	f000 fc9c 	bl	800d510 <xQueueGenericCreateStatic>
 800cbd8:	4604      	mov	r4, r0
 800cbda:	e7e4      	b.n	800cba6 <osSemaphoreNew+0x72>

0800cbdc <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800cbdc:	b370      	cbz	r0, 800cc3c <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800cbde:	b510      	push	{r4, lr}
 800cbe0:	460c      	mov	r4, r1
 800cbe2:	b082      	sub	sp, #8
 800cbe4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800cbe8:	b1c3      	cbz	r3, 800cc1c <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800cbea:	bb21      	cbnz	r1, 800cc36 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800cbec:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800cbee:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800cbf0:	f001 fb28 	bl	800e244 <xQueueReceiveFromISR>
 800cbf4:	2801      	cmp	r0, #1
 800cbf6:	d11a      	bne.n	800cc2e <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800cbf8:	9b01      	ldr	r3, [sp, #4]
 800cbfa:	b913      	cbnz	r3, 800cc02 <osSemaphoreAcquire+0x26>
  stat = osOK;
 800cbfc:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800cbfe:	b002      	add	sp, #8
 800cc00:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800cc02:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cc06:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cc0a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cc0e:	f3bf 8f4f 	dsb	sy
 800cc12:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cc16:	4620      	mov	r0, r4
}
 800cc18:	b002      	add	sp, #8
 800cc1a:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800cc1c:	f001 f988 	bl	800df30 <xQueueSemaphoreTake>
 800cc20:	2801      	cmp	r0, #1
 800cc22:	d0eb      	beq.n	800cbfc <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800cc24:	b11c      	cbz	r4, 800cc2e <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800cc26:	f06f 0001 	mvn.w	r0, #1
}
 800cc2a:	b002      	add	sp, #8
 800cc2c:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800cc2e:	f06f 0002 	mvn.w	r0, #2
}
 800cc32:	b002      	add	sp, #8
 800cc34:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800cc36:	f06f 0003 	mvn.w	r0, #3
 800cc3a:	e7e0      	b.n	800cbfe <osSemaphoreAcquire+0x22>
 800cc3c:	f06f 0003 	mvn.w	r0, #3
}
 800cc40:	4770      	bx	lr
 800cc42:	bf00      	nop

0800cc44 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800cc44:	b330      	cbz	r0, 800cc94 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800cc46:	b510      	push	{r4, lr}
 800cc48:	b082      	sub	sp, #8
 800cc4a:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800cc4e:	b1ab      	cbz	r3, 800cc7c <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800cc50:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800cc52:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800cc54:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800cc56:	f000 ff95 	bl	800db84 <xQueueGiveFromISR>
 800cc5a:	2801      	cmp	r0, #1
 800cc5c:	d117      	bne.n	800cc8e <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800cc5e:	9b01      	ldr	r3, [sp, #4]
 800cc60:	b193      	cbz	r3, 800cc88 <osSemaphoreRelease+0x44>
 800cc62:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cc66:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cc6a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cc6e:	f3bf 8f4f 	dsb	sy
 800cc72:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cc76:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800cc78:	b002      	add	sp, #8
 800cc7a:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800cc7c:	461a      	mov	r2, r3
 800cc7e:	4619      	mov	r1, r3
 800cc80:	f000 fd9c 	bl	800d7bc <xQueueGenericSend>
 800cc84:	2801      	cmp	r0, #1
 800cc86:	d102      	bne.n	800cc8e <osSemaphoreRelease+0x4a>
  stat = osOK;
 800cc88:	2000      	movs	r0, #0
}
 800cc8a:	b002      	add	sp, #8
 800cc8c:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800cc8e:	f06f 0002 	mvn.w	r0, #2
 800cc92:	e7fa      	b.n	800cc8a <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800cc94:	f06f 0003 	mvn.w	r0, #3
}
 800cc98:	4770      	bx	lr
 800cc9a:	bf00      	nop

0800cc9c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800cc9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cc9e:	b085      	sub	sp, #20
 800cca0:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800cca4:	b987      	cbnz	r7, 800ccc8 <osMessageQueueNew+0x2c>
 800cca6:	4605      	mov	r5, r0
 800cca8:	b170      	cbz	r0, 800ccc8 <osMessageQueueNew+0x2c>
 800ccaa:	b169      	cbz	r1, 800ccc8 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800ccac:	4614      	mov	r4, r2
 800ccae:	b1ea      	cbz	r2, 800ccec <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800ccb0:	6893      	ldr	r3, [r2, #8]
 800ccb2:	b163      	cbz	r3, 800ccce <osMessageQueueNew+0x32>
 800ccb4:	68d2      	ldr	r2, [r2, #12]
 800ccb6:	2a4f      	cmp	r2, #79	; 0x4f
 800ccb8:	d906      	bls.n	800ccc8 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800ccba:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800ccbc:	b122      	cbz	r2, 800ccc8 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800ccbe:	6966      	ldr	r6, [r4, #20]
 800ccc0:	fb01 f505 	mul.w	r5, r1, r5
 800ccc4:	42ae      	cmp	r6, r5
 800ccc6:	d21c      	bcs.n	800cd02 <osMessageQueueNew+0x66>
  hQueue = NULL;
 800ccc8:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800ccca:	b005      	add	sp, #20
 800cccc:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800ccce:	68d3      	ldr	r3, [r2, #12]
 800ccd0:	2b00      	cmp	r3, #0
 800ccd2:	d1f9      	bne.n	800ccc8 <osMessageQueueNew+0x2c>
 800ccd4:	6913      	ldr	r3, [r2, #16]
 800ccd6:	2b00      	cmp	r3, #0
 800ccd8:	d1f6      	bne.n	800ccc8 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800ccda:	6952      	ldr	r2, [r2, #20]
 800ccdc:	2a00      	cmp	r2, #0
 800ccde:	d1f3      	bne.n	800ccc8 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800cce0:	f000 fc84 	bl	800d5ec <xQueueGenericCreate>
    if (hQueue != NULL) {
 800cce4:	2800      	cmp	r0, #0
 800cce6:	d0ef      	beq.n	800ccc8 <osMessageQueueNew+0x2c>
        name = attr->name;
 800cce8:	6824      	ldr	r4, [r4, #0]
 800ccea:	e003      	b.n	800ccf4 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800ccec:	f000 fc7e 	bl	800d5ec <xQueueGenericCreate>
    if (hQueue != NULL) {
 800ccf0:	2800      	cmp	r0, #0
 800ccf2:	d0e9      	beq.n	800ccc8 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800ccf4:	4621      	mov	r1, r4
 800ccf6:	9003      	str	r0, [sp, #12]
 800ccf8:	f001 fb6c 	bl	800e3d4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800ccfc:	9803      	ldr	r0, [sp, #12]
}
 800ccfe:	b005      	add	sp, #20
 800cd00:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800cd02:	9700      	str	r7, [sp, #0]
 800cd04:	f000 fc04 	bl	800d510 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800cd08:	2800      	cmp	r0, #0
 800cd0a:	d1ed      	bne.n	800cce8 <osMessageQueueNew+0x4c>
 800cd0c:	e7dc      	b.n	800ccc8 <osMessageQueueNew+0x2c>
 800cd0e:	bf00      	nop

0800cd10 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800cd10:	b570      	push	{r4, r5, r6, lr}
 800cd12:	461c      	mov	r4, r3
 800cd14:	b082      	sub	sp, #8
 800cd16:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800cd1a:	b1be      	cbz	r6, 800cd4c <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800cd1c:	b350      	cbz	r0, 800cd74 <osMessageQueuePut+0x64>
 800cd1e:	b349      	cbz	r1, 800cd74 <osMessageQueuePut+0x64>
 800cd20:	bb43      	cbnz	r3, 800cd74 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800cd22:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800cd24:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800cd26:	f000 fec7 	bl	800dab8 <xQueueGenericSendFromISR>
 800cd2a:	2801      	cmp	r0, #1
 800cd2c:	d11e      	bne.n	800cd6c <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800cd2e:	9b01      	ldr	r3, [sp, #4]
 800cd30:	b1cb      	cbz	r3, 800cd66 <osMessageQueuePut+0x56>
 800cd32:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cd36:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cd3a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cd3e:	f3bf 8f4f 	dsb	sy
 800cd42:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cd46:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800cd48:	b002      	add	sp, #8
 800cd4a:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800cd4c:	b190      	cbz	r0, 800cd74 <osMessageQueuePut+0x64>
 800cd4e:	b189      	cbz	r1, 800cd74 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800cd50:	4633      	mov	r3, r6
 800cd52:	4622      	mov	r2, r4
 800cd54:	f000 fd32 	bl	800d7bc <xQueueGenericSend>
 800cd58:	2801      	cmp	r0, #1
 800cd5a:	d004      	beq.n	800cd66 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800cd5c:	b134      	cbz	r4, 800cd6c <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800cd5e:	f06f 0001 	mvn.w	r0, #1
}
 800cd62:	b002      	add	sp, #8
 800cd64:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800cd66:	2000      	movs	r0, #0
}
 800cd68:	b002      	add	sp, #8
 800cd6a:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800cd6c:	f06f 0002 	mvn.w	r0, #2
}
 800cd70:	b002      	add	sp, #8
 800cd72:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800cd74:	f06f 0003 	mvn.w	r0, #3
 800cd78:	e7e6      	b.n	800cd48 <osMessageQueuePut+0x38>
 800cd7a:	bf00      	nop

0800cd7c <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800cd7c:	b530      	push	{r4, r5, lr}
 800cd7e:	461c      	mov	r4, r3
 800cd80:	b083      	sub	sp, #12
 800cd82:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800cd86:	b1bb      	cbz	r3, 800cdb8 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800cd88:	b348      	cbz	r0, 800cdde <osMessageQueueGet+0x62>
 800cd8a:	b341      	cbz	r1, 800cdde <osMessageQueueGet+0x62>
 800cd8c:	bb3c      	cbnz	r4, 800cdde <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800cd8e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800cd90:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800cd92:	f001 fa57 	bl	800e244 <xQueueReceiveFromISR>
 800cd96:	2801      	cmp	r0, #1
 800cd98:	d11d      	bne.n	800cdd6 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800cd9a:	9b01      	ldr	r3, [sp, #4]
 800cd9c:	b1c3      	cbz	r3, 800cdd0 <osMessageQueueGet+0x54>
 800cd9e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cda2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cda6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cdaa:	f3bf 8f4f 	dsb	sy
 800cdae:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cdb2:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800cdb4:	b003      	add	sp, #12
 800cdb6:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800cdb8:	b188      	cbz	r0, 800cdde <osMessageQueueGet+0x62>
 800cdba:	b181      	cbz	r1, 800cdde <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800cdbc:	4622      	mov	r2, r4
 800cdbe:	f000 ff39 	bl	800dc34 <xQueueReceive>
 800cdc2:	2801      	cmp	r0, #1
 800cdc4:	d004      	beq.n	800cdd0 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800cdc6:	b134      	cbz	r4, 800cdd6 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800cdc8:	f06f 0001 	mvn.w	r0, #1
}
 800cdcc:	b003      	add	sp, #12
 800cdce:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800cdd0:	2000      	movs	r0, #0
}
 800cdd2:	b003      	add	sp, #12
 800cdd4:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800cdd6:	f06f 0002 	mvn.w	r0, #2
}
 800cdda:	b003      	add	sp, #12
 800cddc:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800cdde:	f06f 0003 	mvn.w	r0, #3
 800cde2:	e7e7      	b.n	800cdb4 <osMessageQueueGet+0x38>

0800cde4 <osMessageQueueGetCount>:
 800cde4:	b130      	cbz	r0, 800cdf4 <osMessageQueueGetCount+0x10>
 800cde6:	f3ef 8305 	mrs	r3, IPSR
 800cdea:	b10b      	cbz	r3, 800cdf0 <osMessageQueueGetCount+0xc>
 800cdec:	f001 ba9e 	b.w	800e32c <uxQueueMessagesWaitingFromISR>
 800cdf0:	f001 ba86 	b.w	800e300 <uxQueueMessagesWaiting>
 800cdf4:	4770      	bx	lr
 800cdf6:	bf00      	nop

0800cdf8 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800cdf8:	4b04      	ldr	r3, [pc, #16]	; (800ce0c <vApplicationGetIdleTaskMemory+0x14>)
 800cdfa:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800cdfc:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800cdfe:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800ce00:	4c03      	ldr	r4, [pc, #12]	; (800ce10 <vApplicationGetIdleTaskMemory+0x18>)
 800ce02:	600c      	str	r4, [r1, #0]
}
 800ce04:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800ce08:	6013      	str	r3, [r2, #0]
}
 800ce0a:	4770      	bx	lr
 800ce0c:	20002bd8 	.word	0x20002bd8
 800ce10:	200029d8 	.word	0x200029d8

0800ce14 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800ce14:	4b05      	ldr	r3, [pc, #20]	; (800ce2c <vApplicationGetTimerTaskMemory+0x18>)
 800ce16:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800ce18:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800ce1a:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800ce1e:	4c04      	ldr	r4, [pc, #16]	; (800ce30 <vApplicationGetTimerTaskMemory+0x1c>)
 800ce20:	600c      	str	r4, [r1, #0]
}
 800ce22:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800ce26:	6013      	str	r3, [r2, #0]
}
 800ce28:	4770      	bx	lr
 800ce2a:	bf00      	nop
 800ce2c:	20003088 	.word	0x20003088
 800ce30:	20002c88 	.word	0x20002c88

0800ce34 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800ce34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ce38:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800ce3a:	f001 ff41 	bl	800ecc0 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800ce3e:	4a54      	ldr	r2, [pc, #336]	; (800cf90 <pvPortMalloc+0x15c>)
 800ce40:	6816      	ldr	r6, [r2, #0]
 800ce42:	2e00      	cmp	r6, #0
 800ce44:	d06e      	beq.n	800cf24 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800ce46:	4b53      	ldr	r3, [pc, #332]	; (800cf94 <pvPortMalloc+0x160>)
 800ce48:	681f      	ldr	r7, [r3, #0]
 800ce4a:	423d      	tst	r5, r7
 800ce4c:	d12e      	bne.n	800ceac <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800ce4e:	b36d      	cbz	r5, 800ceac <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800ce50:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800ce54:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800ce56:	bf1c      	itt	ne
 800ce58:	f024 0407 	bicne.w	r4, r4, #7
 800ce5c:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800ce5e:	b32c      	cbz	r4, 800ceac <pvPortMalloc+0x78>
 800ce60:	f8df c144 	ldr.w	ip, [pc, #324]	; 800cfa8 <pvPortMalloc+0x174>
 800ce64:	f8dc 5000 	ldr.w	r5, [ip]
 800ce68:	42a5      	cmp	r5, r4
 800ce6a:	d31f      	bcc.n	800ceac <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800ce6c:	484a      	ldr	r0, [pc, #296]	; (800cf98 <pvPortMalloc+0x164>)
 800ce6e:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800ce70:	e003      	b.n	800ce7a <pvPortMalloc+0x46>
 800ce72:	681a      	ldr	r2, [r3, #0]
 800ce74:	b122      	cbz	r2, 800ce80 <pvPortMalloc+0x4c>
 800ce76:	4618      	mov	r0, r3
 800ce78:	4613      	mov	r3, r2
 800ce7a:	6859      	ldr	r1, [r3, #4]
 800ce7c:	42a1      	cmp	r1, r4
 800ce7e:	d3f8      	bcc.n	800ce72 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800ce80:	42b3      	cmp	r3, r6
 800ce82:	d013      	beq.n	800ceac <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800ce84:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800ce86:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800ce88:	f858 eb08 	ldr.w	lr, [r8], #8
 800ce8c:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800ce90:	2a10      	cmp	r2, #16
 800ce92:	d929      	bls.n	800cee8 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800ce94:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800ce96:	0748      	lsls	r0, r1, #29
 800ce98:	d00f      	beq.n	800ceba <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800ce9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ce9e:	f383 8811 	msr	BASEPRI, r3
 800cea2:	f3bf 8f6f 	isb	sy
 800cea6:	f3bf 8f4f 	dsb	sy
 800ceaa:	e7fe      	b.n	800ceaa <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800ceac:	f001 ff10 	bl	800ecd0 <xTaskResumeAll>
 800ceb0:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800ceb4:	4640      	mov	r0, r8
 800ceb6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800ceba:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800cebc:	4a36      	ldr	r2, [pc, #216]	; (800cf98 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800cebe:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800cec0:	4614      	mov	r4, r2
 800cec2:	6812      	ldr	r2, [r2, #0]
 800cec4:	4291      	cmp	r1, r2
 800cec6:	d8fb      	bhi.n	800cec0 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800cec8:	6860      	ldr	r0, [r4, #4]
 800ceca:	eb04 0e00 	add.w	lr, r4, r0
 800cece:	4571      	cmp	r1, lr
 800ced0:	d04b      	beq.n	800cf6a <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800ced2:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ced6:	eb01 000e 	add.w	r0, r1, lr
 800ceda:	4282      	cmp	r2, r0
 800cedc:	d051      	beq.n	800cf82 <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800cede:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cee0:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800cee2:	bf18      	it	ne
 800cee4:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800cee6:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800cee8:	4a2c      	ldr	r2, [pc, #176]	; (800cf9c <pvPortMalloc+0x168>)
 800ceea:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800ceec:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800ceee:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800cef0:	bf38      	it	cc
 800cef2:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800cef4:	4a2a      	ldr	r2, [pc, #168]	; (800cfa0 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800cef6:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800cefa:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800cefc:	2000      	movs	r0, #0
 800cefe:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800cf02:	6813      	ldr	r3, [r2, #0]
 800cf04:	3301      	adds	r3, #1
 800cf06:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800cf08:	f001 fee2 	bl	800ecd0 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800cf0c:	f018 0f07 	tst.w	r8, #7
 800cf10:	d0d0      	beq.n	800ceb4 <pvPortMalloc+0x80>
 800cf12:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cf16:	f383 8811 	msr	BASEPRI, r3
 800cf1a:	f3bf 8f6f 	isb	sy
 800cf1e:	f3bf 8f4f 	dsb	sy
 800cf22:	e7fe      	b.n	800cf22 <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800cf24:	4b1f      	ldr	r3, [pc, #124]	; (800cfa4 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800cf26:	075e      	lsls	r6, r3, #29
 800cf28:	d118      	bne.n	800cf5c <pvPortMalloc+0x128>
 800cf2a:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800cf2e:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800cf30:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800cf32:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800cf36:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cf38:	4a18      	ldr	r2, [pc, #96]	; (800cf9c <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800cf3a:	4817      	ldr	r0, [pc, #92]	; (800cf98 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800cf3c:	4c15      	ldr	r4, [pc, #84]	; (800cf94 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800cf3e:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800cf40:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cf42:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cf44:	4a18      	ldr	r2, [pc, #96]	; (800cfa8 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800cf46:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cf4a:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800cf4c:	2200      	movs	r2, #0
 800cf4e:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800cf50:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800cf52:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800cf56:	e9c1 6300 	strd	r6, r3, [r1]
}
 800cf5a:	e776      	b.n	800ce4a <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800cf5c:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800cf5e:	f021 0107 	bic.w	r1, r1, #7
 800cf62:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800cf66:	460b      	mov	r3, r1
 800cf68:	e7e2      	b.n	800cf30 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cf6a:	6849      	ldr	r1, [r1, #4]
 800cf6c:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cf70:	eb04 010e 	add.w	r1, r4, lr
 800cf74:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cf76:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cf7a:	d001      	beq.n	800cf80 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cf7c:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800cf7e:	e7b2      	b.n	800cee6 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cf80:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800cf82:	42b2      	cmp	r2, r6
 800cf84:	d0ab      	beq.n	800cede <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800cf86:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cf88:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800cf8a:	4470      	add	r0, lr
 800cf8c:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cf8e:	e7a6      	b.n	800cede <pvPortMalloc+0xaa>
 800cf90:	20003134 	.word	0x20003134
 800cf94:	20013138 	.word	0x20013138
 800cf98:	2001314c 	.word	0x2001314c
 800cf9c:	20013140 	.word	0x20013140
 800cfa0:	20013144 	.word	0x20013144
 800cfa4:	20003138 	.word	0x20003138
 800cfa8:	2001313c 	.word	0x2001313c

0800cfac <vPortFree>:
	if( pv != NULL )
 800cfac:	b1d0      	cbz	r0, 800cfe4 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800cfae:	4a2c      	ldr	r2, [pc, #176]	; (800d060 <vPortFree+0xb4>)
 800cfb0:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800cfb4:	6812      	ldr	r2, [r2, #0]
 800cfb6:	4213      	tst	r3, r2
 800cfb8:	d00b      	beq.n	800cfd2 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800cfba:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800cfbe:	b191      	cbz	r1, 800cfe6 <vPortFree+0x3a>
 800cfc0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cfc4:	f383 8811 	msr	BASEPRI, r3
 800cfc8:	f3bf 8f6f 	isb	sy
 800cfcc:	f3bf 8f4f 	dsb	sy
 800cfd0:	e7fe      	b.n	800cfd0 <vPortFree+0x24>
 800cfd2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cfd6:	f383 8811 	msr	BASEPRI, r3
 800cfda:	f3bf 8f6f 	isb	sy
 800cfde:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800cfe2:	e7fe      	b.n	800cfe2 <vPortFree+0x36>
 800cfe4:	4770      	bx	lr
{
 800cfe6:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800cfe8:	ea23 0302 	bic.w	r3, r3, r2
{
 800cfec:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800cfee:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800cff2:	4c1c      	ldr	r4, [pc, #112]	; (800d064 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800cff4:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800cff6:	f001 fe63 	bl	800ecc0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800cffa:	9801      	ldr	r0, [sp, #4]
 800cffc:	6822      	ldr	r2, [r4, #0]
 800cffe:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d002:	4b19      	ldr	r3, [pc, #100]	; (800d068 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d004:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800d006:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d008:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d00a:	461a      	mov	r2, r3
 800d00c:	681b      	ldr	r3, [r3, #0]
 800d00e:	4298      	cmp	r0, r3
 800d010:	d8fb      	bhi.n	800d00a <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d012:	6854      	ldr	r4, [r2, #4]
 800d014:	eb02 0e04 	add.w	lr, r2, r4
 800d018:	4570      	cmp	r0, lr
 800d01a:	d010      	beq.n	800d03e <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d01c:	eb00 0c01 	add.w	ip, r0, r1
 800d020:	4563      	cmp	r3, ip
 800d022:	d014      	beq.n	800d04e <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800d024:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d026:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d028:	bf18      	it	ne
 800d02a:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800d02c:	4a0f      	ldr	r2, [pc, #60]	; (800d06c <vPortFree+0xc0>)
 800d02e:	6813      	ldr	r3, [r2, #0]
 800d030:	3301      	adds	r3, #1
 800d032:	6013      	str	r3, [r2, #0]
}
 800d034:	b002      	add	sp, #8
 800d036:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800d03a:	f001 be49 	b.w	800ecd0 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d03e:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d040:	1850      	adds	r0, r2, r1
 800d042:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d044:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d046:	d001      	beq.n	800d04c <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d048:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800d04a:	e7ef      	b.n	800d02c <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d04c:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d04e:	4c08      	ldr	r4, [pc, #32]	; (800d070 <vPortFree+0xc4>)
 800d050:	6824      	ldr	r4, [r4, #0]
 800d052:	42a3      	cmp	r3, r4
 800d054:	d0e6      	beq.n	800d024 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d056:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d05a:	4421      	add	r1, r4
 800d05c:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d05e:	e7e1      	b.n	800d024 <vPortFree+0x78>
 800d060:	20013138 	.word	0x20013138
 800d064:	2001313c 	.word	0x2001313c
 800d068:	2001314c 	.word	0x2001314c
 800d06c:	20013148 	.word	0x20013148
 800d070:	20003134 	.word	0x20003134

0800d074 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d074:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d078:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d07c:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d07e:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d082:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d086:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800d088:	4770      	bx	lr
 800d08a:	bf00      	nop

0800d08c <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800d08c:	2300      	movs	r3, #0
 800d08e:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800d090:	4770      	bx	lr
 800d092:	bf00      	nop

0800d094 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800d094:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800d096:	689a      	ldr	r2, [r3, #8]
 800d098:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d09a:	6802      	ldr	r2, [r0, #0]
{
 800d09c:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d09e:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800d0a0:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d0a2:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d0a4:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800d0a6:	6099      	str	r1, [r3, #8]
}
 800d0a8:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800d0ac:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d0ae:	6002      	str	r2, [r0, #0]
}
 800d0b0:	4770      	bx	lr
 800d0b2:	bf00      	nop

0800d0b4 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800d0b4:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800d0b6:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800d0b8:	1c6b      	adds	r3, r5, #1
 800d0ba:	d010      	beq.n	800d0de <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800d0bc:	f100 0308 	add.w	r3, r0, #8
 800d0c0:	461c      	mov	r4, r3
 800d0c2:	685b      	ldr	r3, [r3, #4]
 800d0c4:	681a      	ldr	r2, [r3, #0]
 800d0c6:	42aa      	cmp	r2, r5
 800d0c8:	d9fa      	bls.n	800d0c0 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d0ca:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d0cc:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d0ce:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800d0d0:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800d0d2:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800d0d4:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800d0d6:	6108      	str	r0, [r1, #16]
}
 800d0d8:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800d0da:	6002      	str	r2, [r0, #0]
}
 800d0dc:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800d0de:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d0e0:	6863      	ldr	r3, [r4, #4]
 800d0e2:	e7f2      	b.n	800d0ca <vListInsert+0x16>

0800d0e4 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800d0e4:	6903      	ldr	r3, [r0, #16]
{
 800d0e6:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d0e8:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800d0ec:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d0ee:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800d0f0:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800d0f2:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800d0f4:	bf08      	it	eq
 800d0f6:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800d0f8:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800d0fa:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800d0fe:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800d100:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800d102:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800d104:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800d106:	6818      	ldr	r0, [r3, #0]
}
 800d108:	4770      	bx	lr
 800d10a:	bf00      	nop

0800d10c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800d10c:	4808      	ldr	r0, [pc, #32]	; (800d130 <prvPortStartFirstTask+0x24>)
 800d10e:	6800      	ldr	r0, [r0, #0]
 800d110:	6800      	ldr	r0, [r0, #0]
 800d112:	f380 8808 	msr	MSP, r0
 800d116:	f04f 0000 	mov.w	r0, #0
 800d11a:	f380 8814 	msr	CONTROL, r0
 800d11e:	b662      	cpsie	i
 800d120:	b661      	cpsie	f
 800d122:	f3bf 8f4f 	dsb	sy
 800d126:	f3bf 8f6f 	isb	sy
 800d12a:	df00      	svc	0
 800d12c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800d12e:	0000      	.short	0x0000
 800d130:	e000ed08 	.word	0xe000ed08

0800d134 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800d134:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800d144 <vPortEnableVFP+0x10>
 800d138:	6801      	ldr	r1, [r0, #0]
 800d13a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800d13e:	6001      	str	r1, [r0, #0]
 800d140:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800d142:	0000      	.short	0x0000
 800d144:	e000ed88 	.word	0xe000ed88

0800d148 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800d148:	4b0e      	ldr	r3, [pc, #56]	; (800d184 <prvTaskExitError+0x3c>)
 800d14a:	681b      	ldr	r3, [r3, #0]
{
 800d14c:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800d14e:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800d150:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800d152:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800d154:	d008      	beq.n	800d168 <prvTaskExitError+0x20>
 800d156:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d15a:	f383 8811 	msr	BASEPRI, r3
 800d15e:	f3bf 8f6f 	isb	sy
 800d162:	f3bf 8f4f 	dsb	sy
 800d166:	e7fe      	b.n	800d166 <prvTaskExitError+0x1e>
 800d168:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d16c:	f383 8811 	msr	BASEPRI, r3
 800d170:	f3bf 8f6f 	isb	sy
 800d174:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d178:	9b01      	ldr	r3, [sp, #4]
 800d17a:	2b00      	cmp	r3, #0
 800d17c:	d0fc      	beq.n	800d178 <prvTaskExitError+0x30>
}
 800d17e:	b002      	add	sp, #8
 800d180:	4770      	bx	lr
 800d182:	bf00      	nop
 800d184:	20000084 	.word	0x20000084

0800d188 <pxPortInitialiseStack>:
{
 800d188:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d18a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d18e:	4c07      	ldr	r4, [pc, #28]	; (800d1ac <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d190:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d194:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d198:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d19c:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d1a0:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800d1a4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d1a8:	3844      	subs	r0, #68	; 0x44
 800d1aa:	4770      	bx	lr
 800d1ac:	0800d149 	.word	0x0800d149

0800d1b0 <SVC_Handler>:
	__asm volatile (
 800d1b0:	4b07      	ldr	r3, [pc, #28]	; (800d1d0 <pxCurrentTCBConst2>)
 800d1b2:	6819      	ldr	r1, [r3, #0]
 800d1b4:	6808      	ldr	r0, [r1, #0]
 800d1b6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d1ba:	f380 8809 	msr	PSP, r0
 800d1be:	f3bf 8f6f 	isb	sy
 800d1c2:	f04f 0000 	mov.w	r0, #0
 800d1c6:	f380 8811 	msr	BASEPRI, r0
 800d1ca:	4770      	bx	lr
 800d1cc:	f3af 8000 	nop.w

0800d1d0 <pxCurrentTCBConst2>:
 800d1d0:	200131a0 	.word	0x200131a0

0800d1d4 <vPortEnterCritical>:
 800d1d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d1d8:	f383 8811 	msr	BASEPRI, r3
 800d1dc:	f3bf 8f6f 	isb	sy
 800d1e0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800d1e4:	4a0b      	ldr	r2, [pc, #44]	; (800d214 <vPortEnterCritical+0x40>)
 800d1e6:	6813      	ldr	r3, [r2, #0]
 800d1e8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800d1ea:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800d1ec:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800d1ee:	d000      	beq.n	800d1f2 <vPortEnterCritical+0x1e>
}
 800d1f0:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800d1f2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d1f6:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800d1fa:	b2db      	uxtb	r3, r3
 800d1fc:	2b00      	cmp	r3, #0
 800d1fe:	d0f7      	beq.n	800d1f0 <vPortEnterCritical+0x1c>
 800d200:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d204:	f383 8811 	msr	BASEPRI, r3
 800d208:	f3bf 8f6f 	isb	sy
 800d20c:	f3bf 8f4f 	dsb	sy
 800d210:	e7fe      	b.n	800d210 <vPortEnterCritical+0x3c>
 800d212:	bf00      	nop
 800d214:	20000084 	.word	0x20000084

0800d218 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800d218:	4a08      	ldr	r2, [pc, #32]	; (800d23c <vPortExitCritical+0x24>)
 800d21a:	6813      	ldr	r3, [r2, #0]
 800d21c:	b943      	cbnz	r3, 800d230 <vPortExitCritical+0x18>
 800d21e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d222:	f383 8811 	msr	BASEPRI, r3
 800d226:	f3bf 8f6f 	isb	sy
 800d22a:	f3bf 8f4f 	dsb	sy
 800d22e:	e7fe      	b.n	800d22e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800d230:	3b01      	subs	r3, #1
 800d232:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800d234:	b90b      	cbnz	r3, 800d23a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800d236:	f383 8811 	msr	BASEPRI, r3
}
 800d23a:	4770      	bx	lr
 800d23c:	20000084 	.word	0x20000084

0800d240 <PendSV_Handler>:
	__asm volatile
 800d240:	f3ef 8009 	mrs	r0, PSP
 800d244:	f3bf 8f6f 	isb	sy
 800d248:	4b15      	ldr	r3, [pc, #84]	; (800d2a0 <pxCurrentTCBConst>)
 800d24a:	681a      	ldr	r2, [r3, #0]
 800d24c:	f01e 0f10 	tst.w	lr, #16
 800d250:	bf08      	it	eq
 800d252:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800d256:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d25a:	6010      	str	r0, [r2, #0]
 800d25c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800d260:	f04f 0050 	mov.w	r0, #80	; 0x50
 800d264:	f380 8811 	msr	BASEPRI, r0
 800d268:	f3bf 8f4f 	dsb	sy
 800d26c:	f3bf 8f6f 	isb	sy
 800d270:	f001 fd54 	bl	800ed1c <vTaskSwitchContext>
 800d274:	f04f 0000 	mov.w	r0, #0
 800d278:	f380 8811 	msr	BASEPRI, r0
 800d27c:	bc09      	pop	{r0, r3}
 800d27e:	6819      	ldr	r1, [r3, #0]
 800d280:	6808      	ldr	r0, [r1, #0]
 800d282:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d286:	f01e 0f10 	tst.w	lr, #16
 800d28a:	bf08      	it	eq
 800d28c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800d290:	f380 8809 	msr	PSP, r0
 800d294:	f3bf 8f6f 	isb	sy
 800d298:	4770      	bx	lr
 800d29a:	bf00      	nop
 800d29c:	f3af 8000 	nop.w

0800d2a0 <pxCurrentTCBConst>:
 800d2a0:	200131a0 	.word	0x200131a0

0800d2a4 <xPortSysTickHandler>:
{
 800d2a4:	b508      	push	{r3, lr}
	__asm volatile
 800d2a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2aa:	f383 8811 	msr	BASEPRI, r3
 800d2ae:	f3bf 8f6f 	isb	sy
 800d2b2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800d2b6:	f001 fd21 	bl	800ecfc <xTaskIncrementTick>
 800d2ba:	b128      	cbz	r0, 800d2c8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800d2bc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d2c0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d2c4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800d2c8:	2300      	movs	r3, #0
 800d2ca:	f383 8811 	msr	BASEPRI, r3
}
 800d2ce:	bd08      	pop	{r3, pc}

0800d2d0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d2d0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800d2d4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d2d6:	4906      	ldr	r1, [pc, #24]	; (800d2f0 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d2d8:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800d2da:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d2dc:	680b      	ldr	r3, [r1, #0]
 800d2de:	4905      	ldr	r1, [pc, #20]	; (800d2f4 <vPortSetupTimerInterrupt+0x24>)
 800d2e0:	fba1 1303 	umull	r1, r3, r1, r3
 800d2e4:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d2e6:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d2e8:	3b01      	subs	r3, #1
 800d2ea:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d2ec:	6110      	str	r0, [r2, #16]
}
 800d2ee:	4770      	bx	lr
 800d2f0:	20000078 	.word	0x20000078
 800d2f4:	10624dd3 	.word	0x10624dd3

0800d2f8 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d2f8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d2fc:	4a49      	ldr	r2, [pc, #292]	; (800d424 <xPortStartScheduler+0x12c>)
 800d2fe:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800d302:	4291      	cmp	r1, r2
 800d304:	d043      	beq.n	800d38e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d306:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800d30a:	4b47      	ldr	r3, [pc, #284]	; (800d428 <xPortStartScheduler+0x130>)
 800d30c:	429a      	cmp	r2, r3
 800d30e:	d035      	beq.n	800d37c <xPortStartScheduler+0x84>
{
 800d310:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d312:	4b46      	ldr	r3, [pc, #280]	; (800d42c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d314:	4846      	ldr	r0, [pc, #280]	; (800d430 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d316:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d318:	4c46      	ldr	r4, [pc, #280]	; (800d434 <xPortStartScheduler+0x13c>)
{
 800d31a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d31c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d31e:	b2d2      	uxtb	r2, r2
 800d320:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d322:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d324:	781b      	ldrb	r3, [r3, #0]
 800d326:	b2db      	uxtb	r3, r3
 800d328:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d32c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d330:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d334:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d338:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d33a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d33c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d33e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d340:	bf48      	it	mi
 800d342:	2206      	movmi	r2, #6
 800d344:	d511      	bpl.n	800d36a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800d346:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800d34a:	005b      	lsls	r3, r3, #1
 800d34c:	b2db      	uxtb	r3, r3
 800d34e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d352:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800d356:	0609      	lsls	r1, r1, #24
 800d358:	4610      	mov	r0, r2
 800d35a:	f102 32ff 	add.w	r2, r2, #4294967295
 800d35e:	d4f2      	bmi.n	800d346 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800d360:	2803      	cmp	r0, #3
 800d362:	6020      	str	r0, [r4, #0]
 800d364:	f88d 3007 	strb.w	r3, [sp, #7]
 800d368:	d01a      	beq.n	800d3a0 <xPortStartScheduler+0xa8>
	__asm volatile
 800d36a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d36e:	f383 8811 	msr	BASEPRI, r3
 800d372:	f3bf 8f6f 	isb	sy
 800d376:	f3bf 8f4f 	dsb	sy
 800d37a:	e7fe      	b.n	800d37a <xPortStartScheduler+0x82>
 800d37c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d380:	f383 8811 	msr	BASEPRI, r3
 800d384:	f3bf 8f6f 	isb	sy
 800d388:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d38c:	e7fe      	b.n	800d38c <xPortStartScheduler+0x94>
 800d38e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d392:	f383 8811 	msr	BASEPRI, r3
 800d396:	f3bf 8f6f 	isb	sy
 800d39a:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d39e:	e7fe      	b.n	800d39e <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d3a0:	9b02      	ldr	r3, [sp, #8]
 800d3a2:	4a22      	ldr	r2, [pc, #136]	; (800d42c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d3a4:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d3a8:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d3ac:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d3ae:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d3b0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d3b2:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d3b6:	4c20      	ldr	r4, [pc, #128]	; (800d438 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d3b8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800d3bc:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800d3c0:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800d3c4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800d3c8:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d3cc:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800d3ce:	f7ff ff7f 	bl	800d2d0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800d3d2:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800d3d4:	f7ff feae 	bl	800d134 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800d3d8:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800d3dc:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800d3e0:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800d3e4:	f7ff fe92 	bl	800d10c <prvPortStartFirstTask>
	vTaskSwitchContext();
 800d3e8:	f001 fc98 	bl	800ed1c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800d3ec:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800d3ee:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800d3f0:	3301      	adds	r3, #1
 800d3f2:	d008      	beq.n	800d406 <xPortStartScheduler+0x10e>
 800d3f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3f8:	f383 8811 	msr	BASEPRI, r3
 800d3fc:	f3bf 8f6f 	isb	sy
 800d400:	f3bf 8f4f 	dsb	sy
 800d404:	e7fe      	b.n	800d404 <xPortStartScheduler+0x10c>
 800d406:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d40a:	f383 8811 	msr	BASEPRI, r3
 800d40e:	f3bf 8f6f 	isb	sy
 800d412:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d416:	9b03      	ldr	r3, [sp, #12]
 800d418:	2b00      	cmp	r3, #0
 800d41a:	d0fc      	beq.n	800d416 <xPortStartScheduler+0x11e>
}
 800d41c:	2000      	movs	r0, #0
 800d41e:	b004      	add	sp, #16
 800d420:	bd70      	pop	{r4, r5, r6, pc}
 800d422:	bf00      	nop
 800d424:	410fc271 	.word	0x410fc271
 800d428:	410fc270 	.word	0x410fc270
 800d42c:	e000e400 	.word	0xe000e400
 800d430:	20013154 	.word	0x20013154
 800d434:	20013158 	.word	0x20013158
 800d438:	20000084 	.word	0x20000084

0800d43c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800d43c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800d440:	2b0f      	cmp	r3, #15
 800d442:	d90e      	bls.n	800d462 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d444:	4911      	ldr	r1, [pc, #68]	; (800d48c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d446:	4a12      	ldr	r2, [pc, #72]	; (800d490 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d448:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d44a:	7812      	ldrb	r2, [r2, #0]
 800d44c:	429a      	cmp	r2, r3
 800d44e:	d908      	bls.n	800d462 <vPortValidateInterruptPriority+0x26>
 800d450:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d454:	f383 8811 	msr	BASEPRI, r3
 800d458:	f3bf 8f6f 	isb	sy
 800d45c:	f3bf 8f4f 	dsb	sy
 800d460:	e7fe      	b.n	800d460 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800d462:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d466:	4a0b      	ldr	r2, [pc, #44]	; (800d494 <vPortValidateInterruptPriority+0x58>)
 800d468:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800d46c:	6812      	ldr	r2, [r2, #0]
 800d46e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800d472:	4293      	cmp	r3, r2
 800d474:	d908      	bls.n	800d488 <vPortValidateInterruptPriority+0x4c>
 800d476:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d47a:	f383 8811 	msr	BASEPRI, r3
 800d47e:	f3bf 8f6f 	isb	sy
 800d482:	f3bf 8f4f 	dsb	sy
 800d486:	e7fe      	b.n	800d486 <vPortValidateInterruptPriority+0x4a>
	}
 800d488:	4770      	bx	lr
 800d48a:	bf00      	nop
 800d48c:	e000e3f0 	.word	0xe000e3f0
 800d490:	20013154 	.word	0x20013154
 800d494:	20013158 	.word	0x20013158

0800d498 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800d498:	b570      	push	{r4, r5, r6, lr}
 800d49a:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d49c:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d49e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d4a0:	b920      	cbnz	r0, 800d4ac <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d4a2:	6825      	ldr	r5, [r4, #0]
 800d4a4:	b34d      	cbz	r5, 800d4fa <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d4a6:	3601      	adds	r6, #1
 800d4a8:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800d4aa:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800d4ac:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d4ae:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800d4b0:	b97d      	cbnz	r5, 800d4d2 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d4b2:	6860      	ldr	r0, [r4, #4]
 800d4b4:	f01b fbaf 	bl	8028c16 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d4b8:	6863      	ldr	r3, [r4, #4]
 800d4ba:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d4bc:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d4be:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d4c0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d4c2:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800d4c4:	bf24      	itt	cs
 800d4c6:	6823      	ldrcs	r3, [r4, #0]
 800d4c8:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d4ca:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d4cc:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d4ce:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d4d0:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800d4d2:	68e0      	ldr	r0, [r4, #12]
 800d4d4:	f01b fb9f 	bl	8028c16 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d4d8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d4da:	68e3      	ldr	r3, [r4, #12]
 800d4dc:	4251      	negs	r1, r2
 800d4de:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d4e0:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d4e2:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d4e4:	4293      	cmp	r3, r2
 800d4e6:	d202      	bcs.n	800d4ee <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800d4e8:	68a3      	ldr	r3, [r4, #8]
 800d4ea:	440b      	add	r3, r1
 800d4ec:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800d4ee:	2d02      	cmp	r5, #2
 800d4f0:	d008      	beq.n	800d504 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d4f2:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d4f4:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d4f6:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d4f8:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d4fa:	68a0      	ldr	r0, [r4, #8]
 800d4fc:	f001 fde0 	bl	800f0c0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800d500:	60a5      	str	r5, [r4, #8]
 800d502:	e7d0      	b.n	800d4a6 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d504:	2e01      	cmp	r6, #1
 800d506:	bf38      	it	cc
 800d508:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800d50a:	2000      	movs	r0, #0
 800d50c:	e7cc      	b.n	800d4a8 <prvCopyDataToQueue+0x10>
 800d50e:	bf00      	nop

0800d510 <xQueueGenericCreateStatic>:
	{
 800d510:	b530      	push	{r4, r5, lr}
 800d512:	b083      	sub	sp, #12
 800d514:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d518:	b940      	cbnz	r0, 800d52c <xQueueGenericCreateStatic+0x1c>
 800d51a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d51e:	f383 8811 	msr	BASEPRI, r3
 800d522:	f3bf 8f6f 	isb	sy
 800d526:	f3bf 8f4f 	dsb	sy
 800d52a:	e7fe      	b.n	800d52a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800d52c:	461d      	mov	r5, r3
 800d52e:	b17b      	cbz	r3, 800d550 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d530:	b302      	cbz	r2, 800d574 <xQueueGenericCreateStatic+0x64>
 800d532:	b1b1      	cbz	r1, 800d562 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d534:	2350      	movs	r3, #80	; 0x50
 800d536:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d538:	9b01      	ldr	r3, [sp, #4]
 800d53a:	2b50      	cmp	r3, #80	; 0x50
 800d53c:	d023      	beq.n	800d586 <xQueueGenericCreateStatic+0x76>
 800d53e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d542:	f383 8811 	msr	BASEPRI, r3
 800d546:	f3bf 8f6f 	isb	sy
 800d54a:	f3bf 8f4f 	dsb	sy
 800d54e:	e7fe      	b.n	800d54e <xQueueGenericCreateStatic+0x3e>
 800d550:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d554:	f383 8811 	msr	BASEPRI, r3
 800d558:	f3bf 8f6f 	isb	sy
 800d55c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d560:	e7fe      	b.n	800d560 <xQueueGenericCreateStatic+0x50>
 800d562:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d566:	f383 8811 	msr	BASEPRI, r3
 800d56a:	f3bf 8f6f 	isb	sy
 800d56e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d572:	e7fe      	b.n	800d572 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d574:	bb89      	cbnz	r1, 800d5da <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d576:	2250      	movs	r2, #80	; 0x50
 800d578:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d57a:	9a01      	ldr	r2, [sp, #4]
 800d57c:	2a50      	cmp	r2, #80	; 0x50
 800d57e:	d1de      	bne.n	800d53e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d580:	9a01      	ldr	r2, [sp, #4]
 800d582:	462a      	mov	r2, r5
 800d584:	e000      	b.n	800d588 <xQueueGenericCreateStatic+0x78>
 800d586:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d588:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d58a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800d58c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d590:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800d594:	f7ff fe1e 	bl	800d1d4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d598:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800d59c:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d59e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d5a0:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d5a4:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d5a6:	4401      	add	r1, r0
 800d5a8:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d5aa:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d5ac:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d5ae:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d5b0:	21ff      	movs	r1, #255	; 0xff
 800d5b2:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d5b6:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d5b8:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d5bc:	f105 0010 	add.w	r0, r5, #16
 800d5c0:	f7ff fd58 	bl	800d074 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d5c4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d5c8:	f7ff fd54 	bl	800d074 <vListInitialise>
	taskEXIT_CRITICAL();
 800d5cc:	f7ff fe24 	bl	800d218 <vPortExitCritical>
	}
 800d5d0:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d5d2:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800d5d6:	b003      	add	sp, #12
 800d5d8:	bd30      	pop	{r4, r5, pc}
 800d5da:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d5de:	f383 8811 	msr	BASEPRI, r3
 800d5e2:	f3bf 8f6f 	isb	sy
 800d5e6:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d5ea:	e7fe      	b.n	800d5ea <xQueueGenericCreateStatic+0xda>

0800d5ec <xQueueGenericCreate>:
	{
 800d5ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d5ee:	b940      	cbnz	r0, 800d602 <xQueueGenericCreate+0x16>
 800d5f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d5f4:	f383 8811 	msr	BASEPRI, r3
 800d5f8:	f3bf 8f6f 	isb	sy
 800d5fc:	f3bf 8f4f 	dsb	sy
 800d600:	e7fe      	b.n	800d600 <xQueueGenericCreate+0x14>
 800d602:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d604:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d608:	3050      	adds	r0, #80	; 0x50
 800d60a:	460e      	mov	r6, r1
 800d60c:	4617      	mov	r7, r2
 800d60e:	f7ff fc11 	bl	800ce34 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d612:	4604      	mov	r4, r0
 800d614:	b340      	cbz	r0, 800d668 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d616:	2300      	movs	r3, #0
 800d618:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d61c:	b336      	cbz	r6, 800d66c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d61e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800d622:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800d624:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800d628:	f7ff fdd4 	bl	800d1d4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d62c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800d630:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d632:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d634:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d638:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d63a:	440a      	add	r2, r1
 800d63c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d63e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d640:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d642:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d644:	22ff      	movs	r2, #255	; 0xff
 800d646:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d64a:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d64c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d650:	f104 0010 	add.w	r0, r4, #16
 800d654:	f7ff fd0e 	bl	800d074 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d658:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d65c:	f7ff fd0a 	bl	800d074 <vListInitialise>
	taskEXIT_CRITICAL();
 800d660:	f7ff fdda 	bl	800d218 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800d664:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800d668:	4620      	mov	r0, r4
 800d66a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d66c:	4603      	mov	r3, r0
 800d66e:	e7d8      	b.n	800d622 <xQueueGenericCreate+0x36>

0800d670 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800d670:	b940      	cbnz	r0, 800d684 <xQueueCreateCountingSemaphoreStatic+0x14>
 800d672:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d676:	f383 8811 	msr	BASEPRI, r3
 800d67a:	f3bf 8f6f 	isb	sy
 800d67e:	f3bf 8f4f 	dsb	sy
 800d682:	e7fe      	b.n	800d682 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d684:	4288      	cmp	r0, r1
 800d686:	d208      	bcs.n	800d69a <xQueueCreateCountingSemaphoreStatic+0x2a>
 800d688:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d68c:	f383 8811 	msr	BASEPRI, r3
 800d690:	f3bf 8f6f 	isb	sy
 800d694:	f3bf 8f4f 	dsb	sy
 800d698:	e7fe      	b.n	800d698 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800d69a:	b530      	push	{r4, r5, lr}
 800d69c:	4615      	mov	r5, r2
 800d69e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800d6a0:	2a00      	cmp	r2, #0
 800d6a2:	d03c      	beq.n	800d71e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d6a4:	2350      	movs	r3, #80	; 0x50
 800d6a6:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d6a8:	9b03      	ldr	r3, [sp, #12]
 800d6aa:	2b50      	cmp	r3, #80	; 0x50
 800d6ac:	d008      	beq.n	800d6c0 <xQueueCreateCountingSemaphoreStatic+0x50>
 800d6ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6b2:	f383 8811 	msr	BASEPRI, r3
 800d6b6:	f3bf 8f6f 	isb	sy
 800d6ba:	f3bf 8f4f 	dsb	sy
 800d6be:	e7fe      	b.n	800d6be <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800d6c0:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d6c2:	2301      	movs	r3, #1
 800d6c4:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800d6c8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800d6ca:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800d6ce:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d6d0:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800d6d2:	f7ff fd7f 	bl	800d1d4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d6d6:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800d6da:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d6dc:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d6de:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d6e2:	1ac3      	subs	r3, r0, r3
 800d6e4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d6e6:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800d6e8:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800d6ec:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d6f0:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d6f2:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800d6f4:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d6f8:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d6fa:	f105 0010 	add.w	r0, r5, #16
 800d6fe:	f7ff fcb9 	bl	800d074 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d702:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d706:	f7ff fcb5 	bl	800d074 <vListInitialise>
	taskEXIT_CRITICAL();
 800d70a:	f7ff fd85 	bl	800d218 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d70e:	9901      	ldr	r1, [sp, #4]
 800d710:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800d712:	2302      	movs	r3, #2
	}
 800d714:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d716:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800d71a:	b005      	add	sp, #20
 800d71c:	bd30      	pop	{r4, r5, pc}
 800d71e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d722:	f383 8811 	msr	BASEPRI, r3
 800d726:	f3bf 8f6f 	isb	sy
 800d72a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d72e:	e7fe      	b.n	800d72e <xQueueCreateCountingSemaphoreStatic+0xbe>

0800d730 <xQueueCreateCountingSemaphore>:
	{
 800d730:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800d732:	b940      	cbnz	r0, 800d746 <xQueueCreateCountingSemaphore+0x16>
 800d734:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d738:	f383 8811 	msr	BASEPRI, r3
 800d73c:	f3bf 8f6f 	isb	sy
 800d740:	f3bf 8f4f 	dsb	sy
 800d744:	e7fe      	b.n	800d744 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d746:	4288      	cmp	r0, r1
 800d748:	460e      	mov	r6, r1
 800d74a:	4604      	mov	r4, r0
 800d74c:	d208      	bcs.n	800d760 <xQueueCreateCountingSemaphore+0x30>
 800d74e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d752:	f383 8811 	msr	BASEPRI, r3
 800d756:	f3bf 8f6f 	isb	sy
 800d75a:	f3bf 8f4f 	dsb	sy
 800d75e:	e7fe      	b.n	800d75e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d760:	2050      	movs	r0, #80	; 0x50
 800d762:	f7ff fb67 	bl	800ce34 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d766:	4605      	mov	r5, r0
 800d768:	b330      	cbz	r0, 800d7b8 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d76a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800d76c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d770:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800d774:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800d776:	f7ff fd2d 	bl	800d1d4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d77a:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800d77e:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d780:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d782:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d786:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d788:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d78a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d78c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800d78e:	22ff      	movs	r2, #255	; 0xff
 800d790:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d794:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d796:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800d798:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d79c:	f105 0010 	add.w	r0, r5, #16
 800d7a0:	f7ff fc68 	bl	800d074 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d7a4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d7a8:	f7ff fc64 	bl	800d074 <vListInitialise>
	taskEXIT_CRITICAL();
 800d7ac:	f7ff fd34 	bl	800d218 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800d7b0:	2302      	movs	r3, #2
 800d7b2:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d7b6:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800d7b8:	4628      	mov	r0, r5
 800d7ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d7bc <xQueueGenericSend>:
{
 800d7bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d7c0:	b085      	sub	sp, #20
 800d7c2:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800d7c4:	2800      	cmp	r0, #0
 800d7c6:	f000 80a4 	beq.w	800d912 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d7ca:	4688      	mov	r8, r1
 800d7cc:	461f      	mov	r7, r3
 800d7ce:	4604      	mov	r4, r0
 800d7d0:	2900      	cmp	r1, #0
 800d7d2:	f000 8091 	beq.w	800d8f8 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800d7d6:	2f02      	cmp	r7, #2
 800d7d8:	d10b      	bne.n	800d7f2 <xQueueGenericSend+0x36>
 800d7da:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d7dc:	2b01      	cmp	r3, #1
 800d7de:	d008      	beq.n	800d7f2 <xQueueGenericSend+0x36>
 800d7e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7e4:	f383 8811 	msr	BASEPRI, r3
 800d7e8:	f3bf 8f6f 	isb	sy
 800d7ec:	f3bf 8f4f 	dsb	sy
 800d7f0:	e7fe      	b.n	800d7f0 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d7f2:	f001 fc0f 	bl	800f014 <xTaskGetSchedulerState>
 800d7f6:	4605      	mov	r5, r0
 800d7f8:	2800      	cmp	r0, #0
 800d7fa:	f000 8093 	beq.w	800d924 <xQueueGenericSend+0x168>
 800d7fe:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d800:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800d804:	f7ff fce6 	bl	800d1d4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800d808:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d80a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d80c:	429a      	cmp	r2, r3
 800d80e:	f0c0 80ef 	bcc.w	800d9f0 <xQueueGenericSend+0x234>
 800d812:	2f02      	cmp	r7, #2
 800d814:	f000 80ec 	beq.w	800d9f0 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800d818:	9801      	ldr	r0, [sp, #4]
 800d81a:	2800      	cmp	r0, #0
 800d81c:	f000 8101 	beq.w	800da22 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800d820:	2d00      	cmp	r5, #0
 800d822:	f000 80e1 	beq.w	800d9e8 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800d826:	f7ff fcf7 	bl	800d218 <vPortExitCritical>
		vTaskSuspendAll();
 800d82a:	f001 fa49 	bl	800ecc0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800d82e:	f7ff fcd1 	bl	800d1d4 <vPortEnterCritical>
 800d832:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d836:	2bff      	cmp	r3, #255	; 0xff
 800d838:	bf04      	itt	eq
 800d83a:	2300      	moveq	r3, #0
 800d83c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800d840:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d844:	2bff      	cmp	r3, #255	; 0xff
 800d846:	bf04      	itt	eq
 800d848:	2300      	moveq	r3, #0
 800d84a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800d84e:	f7ff fce3 	bl	800d218 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800d852:	a901      	add	r1, sp, #4
 800d854:	a802      	add	r0, sp, #8
 800d856:	f001 fb8f 	bl	800ef78 <xTaskCheckForTimeOut>
 800d85a:	2800      	cmp	r0, #0
 800d85c:	f040 80e6 	bne.w	800da2c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800d860:	f7ff fcb8 	bl	800d1d4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800d864:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d866:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d868:	429a      	cmp	r2, r3
 800d86a:	d068      	beq.n	800d93e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800d86c:	f7ff fcd4 	bl	800d218 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d870:	f7ff fcb0 	bl	800d1d4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d874:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800d878:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d87a:	2d00      	cmp	r5, #0
 800d87c:	dc04      	bgt.n	800d888 <xQueueGenericSend+0xcc>
 800d87e:	e011      	b.n	800d8a4 <xQueueGenericSend+0xe8>
			--cTxLock;
 800d880:	1e6a      	subs	r2, r5, #1
 800d882:	b2d3      	uxtb	r3, r2
 800d884:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d886:	b16b      	cbz	r3, 800d8a4 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d888:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d88a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d88c:	b153      	cbz	r3, 800d8a4 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d88e:	f001 fb1f 	bl	800eed0 <xTaskRemoveFromEventList>
 800d892:	2800      	cmp	r0, #0
 800d894:	d0f4      	beq.n	800d880 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800d896:	f001 fbb7 	bl	800f008 <vTaskMissedYield>
			--cTxLock;
 800d89a:	1e6a      	subs	r2, r5, #1
 800d89c:	b2d3      	uxtb	r3, r2
 800d89e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d8a0:	2b00      	cmp	r3, #0
 800d8a2:	d1f1      	bne.n	800d888 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800d8a4:	23ff      	movs	r3, #255	; 0xff
 800d8a6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d8aa:	f7ff fcb5 	bl	800d218 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d8ae:	f7ff fc91 	bl	800d1d4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d8b2:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800d8b6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d8b8:	2d00      	cmp	r5, #0
 800d8ba:	dd14      	ble.n	800d8e6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d8bc:	f104 0910 	add.w	r9, r4, #16
 800d8c0:	e003      	b.n	800d8ca <xQueueGenericSend+0x10e>
				--cRxLock;
 800d8c2:	1e6a      	subs	r2, r5, #1
 800d8c4:	b2d3      	uxtb	r3, r2
 800d8c6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d8c8:	b16b      	cbz	r3, 800d8e6 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d8ca:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d8cc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d8ce:	b153      	cbz	r3, 800d8e6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d8d0:	f001 fafe 	bl	800eed0 <xTaskRemoveFromEventList>
 800d8d4:	2800      	cmp	r0, #0
 800d8d6:	d0f4      	beq.n	800d8c2 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800d8d8:	f001 fb96 	bl	800f008 <vTaskMissedYield>
				--cRxLock;
 800d8dc:	1e6a      	subs	r2, r5, #1
 800d8de:	b2d3      	uxtb	r3, r2
 800d8e0:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d8e2:	2b00      	cmp	r3, #0
 800d8e4:	d1f1      	bne.n	800d8ca <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800d8e6:	23ff      	movs	r3, #255	; 0xff
 800d8e8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d8ec:	f7ff fc94 	bl	800d218 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800d8f0:	f001 f9ee 	bl	800ecd0 <xTaskResumeAll>
 800d8f4:	2501      	movs	r5, #1
 800d8f6:	e785      	b.n	800d804 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d8f8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d8fa:	2b00      	cmp	r3, #0
 800d8fc:	f43f af6b 	beq.w	800d7d6 <xQueueGenericSend+0x1a>
 800d900:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d904:	f383 8811 	msr	BASEPRI, r3
 800d908:	f3bf 8f6f 	isb	sy
 800d90c:	f3bf 8f4f 	dsb	sy
 800d910:	e7fe      	b.n	800d910 <xQueueGenericSend+0x154>
 800d912:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d916:	f383 8811 	msr	BASEPRI, r3
 800d91a:	f3bf 8f6f 	isb	sy
 800d91e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d922:	e7fe      	b.n	800d922 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d924:	9b01      	ldr	r3, [sp, #4]
 800d926:	2b00      	cmp	r3, #0
 800d928:	f43f af6a 	beq.w	800d800 <xQueueGenericSend+0x44>
 800d92c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d930:	f383 8811 	msr	BASEPRI, r3
 800d934:	f3bf 8f6f 	isb	sy
 800d938:	f3bf 8f4f 	dsb	sy
 800d93c:	e7fe      	b.n	800d93c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800d93e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800d942:	f7ff fc69 	bl	800d218 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800d946:	9901      	ldr	r1, [sp, #4]
 800d948:	4648      	mov	r0, r9
 800d94a:	f001 fa33 	bl	800edb4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800d94e:	f7ff fc41 	bl	800d1d4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d952:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d956:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d958:	2d00      	cmp	r5, #0
 800d95a:	dc04      	bgt.n	800d966 <xQueueGenericSend+0x1aa>
 800d95c:	e011      	b.n	800d982 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800d95e:	1e6b      	subs	r3, r5, #1
 800d960:	b2da      	uxtb	r2, r3
 800d962:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d964:	b16a      	cbz	r2, 800d982 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d966:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d968:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d96a:	b153      	cbz	r3, 800d982 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d96c:	f001 fab0 	bl	800eed0 <xTaskRemoveFromEventList>
 800d970:	2800      	cmp	r0, #0
 800d972:	d0f4      	beq.n	800d95e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800d974:	f001 fb48 	bl	800f008 <vTaskMissedYield>
			--cTxLock;
 800d978:	1e6b      	subs	r3, r5, #1
 800d97a:	b2da      	uxtb	r2, r3
 800d97c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d97e:	2a00      	cmp	r2, #0
 800d980:	d1f1      	bne.n	800d966 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800d982:	23ff      	movs	r3, #255	; 0xff
 800d984:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d988:	f7ff fc46 	bl	800d218 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d98c:	f7ff fc22 	bl	800d1d4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d990:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d994:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d996:	2d00      	cmp	r5, #0
 800d998:	dc04      	bgt.n	800d9a4 <xQueueGenericSend+0x1e8>
 800d99a:	e011      	b.n	800d9c0 <xQueueGenericSend+0x204>
				--cRxLock;
 800d99c:	1e6b      	subs	r3, r5, #1
 800d99e:	b2da      	uxtb	r2, r3
 800d9a0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d9a2:	b16a      	cbz	r2, 800d9c0 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d9a4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d9a6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d9a8:	b153      	cbz	r3, 800d9c0 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d9aa:	f001 fa91 	bl	800eed0 <xTaskRemoveFromEventList>
 800d9ae:	2800      	cmp	r0, #0
 800d9b0:	d0f4      	beq.n	800d99c <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800d9b2:	f001 fb29 	bl	800f008 <vTaskMissedYield>
				--cRxLock;
 800d9b6:	1e6b      	subs	r3, r5, #1
 800d9b8:	b2da      	uxtb	r2, r3
 800d9ba:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d9bc:	2a00      	cmp	r2, #0
 800d9be:	d1f1      	bne.n	800d9a4 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800d9c0:	23ff      	movs	r3, #255	; 0xff
 800d9c2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d9c6:	f7ff fc27 	bl	800d218 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800d9ca:	f001 f981 	bl	800ecd0 <xTaskResumeAll>
 800d9ce:	2800      	cmp	r0, #0
 800d9d0:	d190      	bne.n	800d8f4 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800d9d2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d9d6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d9da:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d9de:	f3bf 8f4f 	dsb	sy
 800d9e2:	f3bf 8f6f 	isb	sy
 800d9e6:	e785      	b.n	800d8f4 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800d9e8:	a802      	add	r0, sp, #8
 800d9ea:	f001 fab9 	bl	800ef60 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800d9ee:	e71a      	b.n	800d826 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d9f0:	463a      	mov	r2, r7
 800d9f2:	4641      	mov	r1, r8
 800d9f4:	4620      	mov	r0, r4
 800d9f6:	f7ff fd4f 	bl	800d498 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d9fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d9fc:	2b00      	cmp	r3, #0
 800d9fe:	d153      	bne.n	800daa8 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800da00:	b148      	cbz	r0, 800da16 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800da02:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800da06:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800da0a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800da0e:	f3bf 8f4f 	dsb	sy
 800da12:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800da16:	f7ff fbff 	bl	800d218 <vPortExitCritical>
				return pdPASS;
 800da1a:	2001      	movs	r0, #1
}
 800da1c:	b005      	add	sp, #20
 800da1e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800da22:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800da24:	f7ff fbf8 	bl	800d218 <vPortExitCritical>
					return errQUEUE_FULL;
 800da28:	9800      	ldr	r0, [sp, #0]
 800da2a:	e7f7      	b.n	800da1c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800da2c:	f7ff fbd2 	bl	800d1d4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800da30:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800da34:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800da36:	2d00      	cmp	r5, #0
 800da38:	dd10      	ble.n	800da5c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800da3a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800da3e:	e003      	b.n	800da48 <xQueueGenericSend+0x28c>
			--cTxLock;
 800da40:	1e6b      	subs	r3, r5, #1
 800da42:	b2da      	uxtb	r2, r3
 800da44:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800da46:	b14a      	cbz	r2, 800da5c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800da48:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800da4a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800da4c:	b133      	cbz	r3, 800da5c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800da4e:	f001 fa3f 	bl	800eed0 <xTaskRemoveFromEventList>
 800da52:	2800      	cmp	r0, #0
 800da54:	d0f4      	beq.n	800da40 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800da56:	f001 fad7 	bl	800f008 <vTaskMissedYield>
 800da5a:	e7f1      	b.n	800da40 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800da5c:	23ff      	movs	r3, #255	; 0xff
 800da5e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800da62:	f7ff fbd9 	bl	800d218 <vPortExitCritical>
	taskENTER_CRITICAL();
 800da66:	f7ff fbb5 	bl	800d1d4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800da6a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800da6e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800da70:	2d00      	cmp	r5, #0
 800da72:	dd10      	ble.n	800da96 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800da74:	f104 0610 	add.w	r6, r4, #16
 800da78:	e003      	b.n	800da82 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800da7a:	1e6b      	subs	r3, r5, #1
 800da7c:	b2da      	uxtb	r2, r3
 800da7e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800da80:	b14a      	cbz	r2, 800da96 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800da82:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800da84:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800da86:	b133      	cbz	r3, 800da96 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800da88:	f001 fa22 	bl	800eed0 <xTaskRemoveFromEventList>
 800da8c:	2800      	cmp	r0, #0
 800da8e:	d0f4      	beq.n	800da7a <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800da90:	f001 faba 	bl	800f008 <vTaskMissedYield>
 800da94:	e7f1      	b.n	800da7a <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800da96:	23ff      	movs	r3, #255	; 0xff
 800da98:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800da9c:	f7ff fbbc 	bl	800d218 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800daa0:	f001 f916 	bl	800ecd0 <xTaskResumeAll>
			return errQUEUE_FULL;
 800daa4:	2000      	movs	r0, #0
 800daa6:	e7b9      	b.n	800da1c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800daa8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800daac:	f001 fa10 	bl	800eed0 <xTaskRemoveFromEventList>
 800dab0:	2800      	cmp	r0, #0
 800dab2:	d0b0      	beq.n	800da16 <xQueueGenericSend+0x25a>
 800dab4:	e7a5      	b.n	800da02 <xQueueGenericSend+0x246>
 800dab6:	bf00      	nop

0800dab8 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800dab8:	2800      	cmp	r0, #0
 800daba:	d04b      	beq.n	800db54 <xQueueGenericSendFromISR+0x9c>
{
 800dabc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dac0:	460e      	mov	r6, r1
 800dac2:	4617      	mov	r7, r2
 800dac4:	461d      	mov	r5, r3
 800dac6:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dac8:	b321      	cbz	r1, 800db14 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800daca:	2d02      	cmp	r5, #2
 800dacc:	d10b      	bne.n	800dae6 <xQueueGenericSendFromISR+0x2e>
 800dace:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dad0:	2b01      	cmp	r3, #1
 800dad2:	d008      	beq.n	800dae6 <xQueueGenericSendFromISR+0x2e>
 800dad4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dad8:	f383 8811 	msr	BASEPRI, r3
 800dadc:	f3bf 8f6f 	isb	sy
 800dae0:	f3bf 8f4f 	dsb	sy
 800dae4:	e7fe      	b.n	800dae4 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800dae6:	f7ff fca9 	bl	800d43c <vPortValidateInterruptPriority>
	__asm volatile
 800daea:	f3ef 8811 	mrs	r8, BASEPRI
 800daee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800daf2:	f383 8811 	msr	BASEPRI, r3
 800daf6:	f3bf 8f6f 	isb	sy
 800dafa:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800dafe:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800db00:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800db02:	429a      	cmp	r2, r3
 800db04:	d312      	bcc.n	800db2c <xQueueGenericSendFromISR+0x74>
 800db06:	2d02      	cmp	r5, #2
 800db08:	d010      	beq.n	800db2c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800db0a:	2000      	movs	r0, #0
	__asm volatile
 800db0c:	f388 8811 	msr	BASEPRI, r8
}
 800db10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800db14:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800db16:	2b00      	cmp	r3, #0
 800db18:	d0d7      	beq.n	800daca <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800db1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db1e:	f383 8811 	msr	BASEPRI, r3
 800db22:	f3bf 8f6f 	isb	sy
 800db26:	f3bf 8f4f 	dsb	sy
 800db2a:	e7fe      	b.n	800db2a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800db2c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800db2e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800db32:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800db34:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800db36:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800db38:	4620      	mov	r0, r4
 800db3a:	f7ff fcad 	bl	800d498 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800db3e:	1c6b      	adds	r3, r5, #1
 800db40:	d011      	beq.n	800db66 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800db42:	1c6b      	adds	r3, r5, #1
 800db44:	b25b      	sxtb	r3, r3
 800db46:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800db4a:	2001      	movs	r0, #1
	__asm volatile
 800db4c:	f388 8811 	msr	BASEPRI, r8
}
 800db50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800db54:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db58:	f383 8811 	msr	BASEPRI, r3
 800db5c:	f3bf 8f6f 	isb	sy
 800db60:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800db64:	e7fe      	b.n	800db64 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800db66:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800db68:	2b00      	cmp	r3, #0
 800db6a:	d0ee      	beq.n	800db4a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800db6c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800db70:	f001 f9ae 	bl	800eed0 <xTaskRemoveFromEventList>
 800db74:	2800      	cmp	r0, #0
 800db76:	d0e8      	beq.n	800db4a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800db78:	2f00      	cmp	r7, #0
 800db7a:	d0e6      	beq.n	800db4a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800db7c:	2001      	movs	r0, #1
 800db7e:	6038      	str	r0, [r7, #0]
 800db80:	e7c4      	b.n	800db0c <xQueueGenericSendFromISR+0x54>
 800db82:	bf00      	nop

0800db84 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800db84:	b370      	cbz	r0, 800dbe4 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800db86:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800db88:	b570      	push	{r4, r5, r6, lr}
 800db8a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800db8c:	b143      	cbz	r3, 800dba0 <xQueueGiveFromISR+0x1c>
 800db8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db92:	f383 8811 	msr	BASEPRI, r3
 800db96:	f3bf 8f6f 	isb	sy
 800db9a:	f3bf 8f4f 	dsb	sy
 800db9e:	e7fe      	b.n	800db9e <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800dba0:	6803      	ldr	r3, [r0, #0]
 800dba2:	460c      	mov	r4, r1
 800dba4:	b33b      	cbz	r3, 800dbf6 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800dba6:	f7ff fc49 	bl	800d43c <vPortValidateInterruptPriority>
	__asm volatile
 800dbaa:	f3ef 8511 	mrs	r5, BASEPRI
 800dbae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbb2:	f383 8811 	msr	BASEPRI, r3
 800dbb6:	f3bf 8f6f 	isb	sy
 800dbba:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dbbe:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800dbc0:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800dbc2:	429a      	cmp	r2, r3
 800dbc4:	d923      	bls.n	800dc0e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800dbc6:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800dbca:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800dbcc:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800dbce:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800dbd0:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800dbd2:	d020      	beq.n	800dc16 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800dbd4:	3301      	adds	r3, #1
 800dbd6:	b25b      	sxtb	r3, r3
 800dbd8:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800dbdc:	2001      	movs	r0, #1
	__asm volatile
 800dbde:	f385 8811 	msr	BASEPRI, r5
}
 800dbe2:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800dbe4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbe8:	f383 8811 	msr	BASEPRI, r3
 800dbec:	f3bf 8f6f 	isb	sy
 800dbf0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800dbf4:	e7fe      	b.n	800dbf4 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800dbf6:	6883      	ldr	r3, [r0, #8]
 800dbf8:	2b00      	cmp	r3, #0
 800dbfa:	d0d4      	beq.n	800dba6 <xQueueGiveFromISR+0x22>
 800dbfc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc00:	f383 8811 	msr	BASEPRI, r3
 800dc04:	f3bf 8f6f 	isb	sy
 800dc08:	f3bf 8f4f 	dsb	sy
 800dc0c:	e7fe      	b.n	800dc0c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800dc0e:	2000      	movs	r0, #0
	__asm volatile
 800dc10:	f385 8811 	msr	BASEPRI, r5
}
 800dc14:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dc16:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800dc18:	2b00      	cmp	r3, #0
 800dc1a:	d0df      	beq.n	800dbdc <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dc1c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800dc20:	f001 f956 	bl	800eed0 <xTaskRemoveFromEventList>
 800dc24:	2800      	cmp	r0, #0
 800dc26:	d0d9      	beq.n	800dbdc <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800dc28:	2c00      	cmp	r4, #0
 800dc2a:	d0d7      	beq.n	800dbdc <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800dc2c:	2001      	movs	r0, #1
 800dc2e:	6020      	str	r0, [r4, #0]
 800dc30:	e7ee      	b.n	800dc10 <xQueueGiveFromISR+0x8c>
 800dc32:	bf00      	nop

0800dc34 <xQueueReceive>:
{
 800dc34:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dc38:	b085      	sub	sp, #20
 800dc3a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800dc3c:	2800      	cmp	r0, #0
 800dc3e:	f000 815c 	beq.w	800defa <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dc42:	460f      	mov	r7, r1
 800dc44:	4604      	mov	r4, r0
 800dc46:	2900      	cmp	r1, #0
 800dc48:	d079      	beq.n	800dd3e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dc4a:	f001 f9e3 	bl	800f014 <xTaskGetSchedulerState>
 800dc4e:	2800      	cmp	r0, #0
 800dc50:	f000 8081 	beq.w	800dd56 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800dc54:	f7ff fabe 	bl	800d1d4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dc58:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800dc5a:	2d00      	cmp	r5, #0
 800dc5c:	f040 8138 	bne.w	800ded0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800dc60:	9b01      	ldr	r3, [sp, #4]
 800dc62:	2b00      	cmp	r3, #0
 800dc64:	f000 80d5 	beq.w	800de12 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800dc68:	a802      	add	r0, sp, #8
 800dc6a:	f001 f979 	bl	800ef60 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800dc6e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dc70:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800dc74:	f7ff fad0 	bl	800d218 <vPortExitCritical>
		vTaskSuspendAll();
 800dc78:	f001 f822 	bl	800ecc0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800dc7c:	f7ff faaa 	bl	800d1d4 <vPortEnterCritical>
 800dc80:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dc84:	2bff      	cmp	r3, #255	; 0xff
 800dc86:	bf08      	it	eq
 800dc88:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800dc8c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dc90:	2bff      	cmp	r3, #255	; 0xff
 800dc92:	bf08      	it	eq
 800dc94:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800dc98:	f7ff fabe 	bl	800d218 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800dc9c:	a901      	add	r1, sp, #4
 800dc9e:	a802      	add	r0, sp, #8
 800dca0:	f001 f96a 	bl	800ef78 <xTaskCheckForTimeOut>
 800dca4:	2800      	cmp	r0, #0
 800dca6:	d163      	bne.n	800dd70 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800dca8:	f7ff fa94 	bl	800d1d4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800dcac:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800dcae:	2b00      	cmp	r3, #0
 800dcb0:	f000 80b5 	beq.w	800de1e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800dcb4:	f7ff fab0 	bl	800d218 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dcb8:	f7ff fa8c 	bl	800d1d4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dcbc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dcc0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dcc2:	2d00      	cmp	r5, #0
 800dcc4:	dc04      	bgt.n	800dcd0 <xQueueReceive+0x9c>
 800dcc6:	e011      	b.n	800dcec <xQueueReceive+0xb8>
			--cTxLock;
 800dcc8:	1e6b      	subs	r3, r5, #1
 800dcca:	b2da      	uxtb	r2, r3
 800dccc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dcce:	b16a      	cbz	r2, 800dcec <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dcd0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dcd2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dcd4:	b153      	cbz	r3, 800dcec <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dcd6:	f001 f8fb 	bl	800eed0 <xTaskRemoveFromEventList>
 800dcda:	2800      	cmp	r0, #0
 800dcdc:	d0f4      	beq.n	800dcc8 <xQueueReceive+0x94>
						vTaskMissedYield();
 800dcde:	f001 f993 	bl	800f008 <vTaskMissedYield>
			--cTxLock;
 800dce2:	1e6b      	subs	r3, r5, #1
 800dce4:	b2da      	uxtb	r2, r3
 800dce6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dce8:	2a00      	cmp	r2, #0
 800dcea:	d1f1      	bne.n	800dcd0 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800dcec:	23ff      	movs	r3, #255	; 0xff
 800dcee:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dcf2:	f7ff fa91 	bl	800d218 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dcf6:	f7ff fa6d 	bl	800d1d4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dcfa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dcfe:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dd00:	2d00      	cmp	r5, #0
 800dd02:	dd14      	ble.n	800dd2e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd04:	f104 0910 	add.w	r9, r4, #16
 800dd08:	e003      	b.n	800dd12 <xQueueReceive+0xde>
				--cRxLock;
 800dd0a:	1e6b      	subs	r3, r5, #1
 800dd0c:	b2da      	uxtb	r2, r3
 800dd0e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dd10:	b16a      	cbz	r2, 800dd2e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dd12:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd14:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dd16:	b153      	cbz	r3, 800dd2e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd18:	f001 f8da 	bl	800eed0 <xTaskRemoveFromEventList>
 800dd1c:	2800      	cmp	r0, #0
 800dd1e:	d0f4      	beq.n	800dd0a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800dd20:	f001 f972 	bl	800f008 <vTaskMissedYield>
				--cRxLock;
 800dd24:	1e6b      	subs	r3, r5, #1
 800dd26:	b2da      	uxtb	r2, r3
 800dd28:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dd2a:	2a00      	cmp	r2, #0
 800dd2c:	d1f1      	bne.n	800dd12 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800dd2e:	23ff      	movs	r3, #255	; 0xff
 800dd30:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dd34:	f7ff fa70 	bl	800d218 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800dd38:	f000 ffca 	bl	800ecd0 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800dd3c:	e060      	b.n	800de00 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dd3e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800dd40:	2b00      	cmp	r3, #0
 800dd42:	d082      	beq.n	800dc4a <xQueueReceive+0x16>
	__asm volatile
 800dd44:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd48:	f383 8811 	msr	BASEPRI, r3
 800dd4c:	f3bf 8f6f 	isb	sy
 800dd50:	f3bf 8f4f 	dsb	sy
 800dd54:	e7fe      	b.n	800dd54 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dd56:	9b01      	ldr	r3, [sp, #4]
 800dd58:	2b00      	cmp	r3, #0
 800dd5a:	f43f af7b 	beq.w	800dc54 <xQueueReceive+0x20>
 800dd5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd62:	f383 8811 	msr	BASEPRI, r3
 800dd66:	f3bf 8f6f 	isb	sy
 800dd6a:	f3bf 8f4f 	dsb	sy
 800dd6e:	e7fe      	b.n	800dd6e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800dd70:	f7ff fa30 	bl	800d1d4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dd74:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dd78:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dd7a:	2d00      	cmp	r5, #0
 800dd7c:	dc04      	bgt.n	800dd88 <xQueueReceive+0x154>
 800dd7e:	e011      	b.n	800dda4 <xQueueReceive+0x170>
			--cTxLock;
 800dd80:	1e6b      	subs	r3, r5, #1
 800dd82:	b2da      	uxtb	r2, r3
 800dd84:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dd86:	b16a      	cbz	r2, 800dda4 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dd88:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dd8a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dd8c:	b153      	cbz	r3, 800dda4 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dd8e:	f001 f89f 	bl	800eed0 <xTaskRemoveFromEventList>
 800dd92:	2800      	cmp	r0, #0
 800dd94:	d0f4      	beq.n	800dd80 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800dd96:	f001 f937 	bl	800f008 <vTaskMissedYield>
			--cTxLock;
 800dd9a:	1e6b      	subs	r3, r5, #1
 800dd9c:	b2da      	uxtb	r2, r3
 800dd9e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dda0:	2a00      	cmp	r2, #0
 800dda2:	d1f1      	bne.n	800dd88 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800dda4:	23ff      	movs	r3, #255	; 0xff
 800dda6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ddaa:	f7ff fa35 	bl	800d218 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ddae:	f7ff fa11 	bl	800d1d4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ddb2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ddb6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ddb8:	2d00      	cmp	r5, #0
 800ddba:	dd14      	ble.n	800dde6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ddbc:	f104 0910 	add.w	r9, r4, #16
 800ddc0:	e003      	b.n	800ddca <xQueueReceive+0x196>
				--cRxLock;
 800ddc2:	1e6b      	subs	r3, r5, #1
 800ddc4:	b2da      	uxtb	r2, r3
 800ddc6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ddc8:	b16a      	cbz	r2, 800dde6 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ddca:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ddcc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ddce:	b153      	cbz	r3, 800dde6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ddd0:	f001 f87e 	bl	800eed0 <xTaskRemoveFromEventList>
 800ddd4:	2800      	cmp	r0, #0
 800ddd6:	d0f4      	beq.n	800ddc2 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800ddd8:	f001 f916 	bl	800f008 <vTaskMissedYield>
				--cRxLock;
 800dddc:	1e6b      	subs	r3, r5, #1
 800ddde:	b2da      	uxtb	r2, r3
 800dde0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dde2:	2a00      	cmp	r2, #0
 800dde4:	d1f1      	bne.n	800ddca <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800dde6:	23ff      	movs	r3, #255	; 0xff
 800dde8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ddec:	f7ff fa14 	bl	800d218 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800ddf0:	f000 ff6e 	bl	800ecd0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800ddf4:	f7ff f9ee 	bl	800d1d4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ddf8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ddfa:	b153      	cbz	r3, 800de12 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800ddfc:	f7ff fa0c 	bl	800d218 <vPortExitCritical>
		taskENTER_CRITICAL();
 800de00:	f7ff f9e8 	bl	800d1d4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800de04:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800de06:	2d00      	cmp	r5, #0
 800de08:	d162      	bne.n	800ded0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800de0a:	9b01      	ldr	r3, [sp, #4]
 800de0c:	2b00      	cmp	r3, #0
 800de0e:	f47f af31 	bne.w	800dc74 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800de12:	f7ff fa01 	bl	800d218 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800de16:	2000      	movs	r0, #0
}
 800de18:	b005      	add	sp, #20
 800de1a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800de1e:	f7ff f9fb 	bl	800d218 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800de22:	9901      	ldr	r1, [sp, #4]
 800de24:	4630      	mov	r0, r6
 800de26:	f000 ffc5 	bl	800edb4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800de2a:	f7ff f9d3 	bl	800d1d4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800de2e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800de32:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800de34:	2d00      	cmp	r5, #0
 800de36:	dc04      	bgt.n	800de42 <xQueueReceive+0x20e>
 800de38:	e011      	b.n	800de5e <xQueueReceive+0x22a>
			--cTxLock;
 800de3a:	1e6b      	subs	r3, r5, #1
 800de3c:	b2da      	uxtb	r2, r3
 800de3e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800de40:	b16a      	cbz	r2, 800de5e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800de42:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800de44:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800de46:	b153      	cbz	r3, 800de5e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800de48:	f001 f842 	bl	800eed0 <xTaskRemoveFromEventList>
 800de4c:	2800      	cmp	r0, #0
 800de4e:	d0f4      	beq.n	800de3a <xQueueReceive+0x206>
						vTaskMissedYield();
 800de50:	f001 f8da 	bl	800f008 <vTaskMissedYield>
			--cTxLock;
 800de54:	1e6b      	subs	r3, r5, #1
 800de56:	b2da      	uxtb	r2, r3
 800de58:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800de5a:	2a00      	cmp	r2, #0
 800de5c:	d1f1      	bne.n	800de42 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800de5e:	23ff      	movs	r3, #255	; 0xff
 800de60:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800de64:	f7ff f9d8 	bl	800d218 <vPortExitCritical>
	taskENTER_CRITICAL();
 800de68:	f7ff f9b4 	bl	800d1d4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800de6c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800de70:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800de72:	2d00      	cmp	r5, #0
 800de74:	dd14      	ble.n	800dea0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de76:	f104 0910 	add.w	r9, r4, #16
 800de7a:	e003      	b.n	800de84 <xQueueReceive+0x250>
				--cRxLock;
 800de7c:	1e6b      	subs	r3, r5, #1
 800de7e:	b2da      	uxtb	r2, r3
 800de80:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800de82:	b16a      	cbz	r2, 800dea0 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800de84:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de86:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800de88:	b153      	cbz	r3, 800dea0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de8a:	f001 f821 	bl	800eed0 <xTaskRemoveFromEventList>
 800de8e:	2800      	cmp	r0, #0
 800de90:	d0f4      	beq.n	800de7c <xQueueReceive+0x248>
					vTaskMissedYield();
 800de92:	f001 f8b9 	bl	800f008 <vTaskMissedYield>
				--cRxLock;
 800de96:	1e6b      	subs	r3, r5, #1
 800de98:	b2da      	uxtb	r2, r3
 800de9a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800de9c:	2a00      	cmp	r2, #0
 800de9e:	d1f1      	bne.n	800de84 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800dea0:	23ff      	movs	r3, #255	; 0xff
 800dea2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dea6:	f7ff f9b7 	bl	800d218 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800deaa:	f000 ff11 	bl	800ecd0 <xTaskResumeAll>
 800deae:	2800      	cmp	r0, #0
 800deb0:	d1a6      	bne.n	800de00 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800deb2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800deb6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800deba:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800debe:	f3bf 8f4f 	dsb	sy
 800dec2:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800dec6:	f7ff f985 	bl	800d1d4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800deca:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800decc:	2d00      	cmp	r5, #0
 800dece:	d09c      	beq.n	800de0a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800ded0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ded2:	b152      	cbz	r2, 800deea <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ded4:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ded6:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ded8:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800deda:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800dedc:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800dede:	bf24      	itt	cs
 800dee0:	6821      	ldrcs	r1, [r4, #0]
 800dee2:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800dee4:	4638      	mov	r0, r7
 800dee6:	f01a fe96 	bl	8028c16 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800deea:	3d01      	subs	r5, #1
 800deec:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800deee:	6923      	ldr	r3, [r4, #16]
 800def0:	b963      	cbnz	r3, 800df0c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800def2:	f7ff f991 	bl	800d218 <vPortExitCritical>
				return pdPASS;
 800def6:	2001      	movs	r0, #1
 800def8:	e78e      	b.n	800de18 <xQueueReceive+0x1e4>
 800defa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800defe:	f383 8811 	msr	BASEPRI, r3
 800df02:	f3bf 8f6f 	isb	sy
 800df06:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800df0a:	e7fe      	b.n	800df0a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800df0c:	f104 0010 	add.w	r0, r4, #16
 800df10:	f000 ffde 	bl	800eed0 <xTaskRemoveFromEventList>
 800df14:	2800      	cmp	r0, #0
 800df16:	d0ec      	beq.n	800def2 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800df18:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800df1c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800df20:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800df24:	f3bf 8f4f 	dsb	sy
 800df28:	f3bf 8f6f 	isb	sy
 800df2c:	e7e1      	b.n	800def2 <xQueueReceive+0x2be>
 800df2e:	bf00      	nop

0800df30 <xQueueSemaphoreTake>:
{
 800df30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800df34:	b084      	sub	sp, #16
 800df36:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800df38:	2800      	cmp	r0, #0
 800df3a:	d05c      	beq.n	800dff6 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800df3c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800df3e:	4604      	mov	r4, r0
 800df40:	b147      	cbz	r7, 800df54 <xQueueSemaphoreTake+0x24>
 800df42:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df46:	f383 8811 	msr	BASEPRI, r3
 800df4a:	f3bf 8f6f 	isb	sy
 800df4e:	f3bf 8f4f 	dsb	sy
 800df52:	e7fe      	b.n	800df52 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800df54:	f001 f85e 	bl	800f014 <xTaskGetSchedulerState>
 800df58:	4605      	mov	r5, r0
 800df5a:	2800      	cmp	r0, #0
 800df5c:	d054      	beq.n	800e008 <xQueueSemaphoreTake+0xd8>
 800df5e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800df60:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800df64:	f7ff f936 	bl	800d1d4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800df68:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800df6a:	2b00      	cmp	r3, #0
 800df6c:	f040 8148 	bne.w	800e200 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800df70:	9b01      	ldr	r3, [sp, #4]
 800df72:	2b00      	cmp	r3, #0
 800df74:	f000 813a 	beq.w	800e1ec <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800df78:	2d00      	cmp	r5, #0
 800df7a:	f000 809d 	beq.w	800e0b8 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800df7e:	f7ff f94b 	bl	800d218 <vPortExitCritical>
		vTaskSuspendAll();
 800df82:	f000 fe9d 	bl	800ecc0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800df86:	f7ff f925 	bl	800d1d4 <vPortEnterCritical>
 800df8a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800df8e:	2bff      	cmp	r3, #255	; 0xff
 800df90:	bf04      	itt	eq
 800df92:	2300      	moveq	r3, #0
 800df94:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800df98:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800df9c:	2bff      	cmp	r3, #255	; 0xff
 800df9e:	bf04      	itt	eq
 800dfa0:	2300      	moveq	r3, #0
 800dfa2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800dfa6:	f7ff f937 	bl	800d218 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800dfaa:	a901      	add	r1, sp, #4
 800dfac:	a802      	add	r0, sp, #8
 800dfae:	f000 ffe3 	bl	800ef78 <xTaskCheckForTimeOut>
 800dfb2:	2800      	cmp	r0, #0
 800dfb4:	d135      	bne.n	800e022 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800dfb6:	f7ff f90d 	bl	800d1d4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800dfba:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800dfbc:	2b00      	cmp	r3, #0
 800dfbe:	f000 80a4 	beq.w	800e10a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800dfc2:	f7ff f929 	bl	800d218 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dfc6:	f7ff f905 	bl	800d1d4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dfca:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dfce:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dfd0:	2d00      	cmp	r5, #0
 800dfd2:	dc05      	bgt.n	800dfe0 <xQueueSemaphoreTake+0xb0>
 800dfd4:	e074      	b.n	800e0c0 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800dfd6:	1e6b      	subs	r3, r5, #1
 800dfd8:	b2da      	uxtb	r2, r3
 800dfda:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dfdc:	2a00      	cmp	r2, #0
 800dfde:	d06f      	beq.n	800e0c0 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dfe0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dfe2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dfe4:	2b00      	cmp	r3, #0
 800dfe6:	d06b      	beq.n	800e0c0 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dfe8:	f000 ff72 	bl	800eed0 <xTaskRemoveFromEventList>
 800dfec:	2800      	cmp	r0, #0
 800dfee:	d0f2      	beq.n	800dfd6 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800dff0:	f001 f80a 	bl	800f008 <vTaskMissedYield>
 800dff4:	e7ef      	b.n	800dfd6 <xQueueSemaphoreTake+0xa6>
 800dff6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dffa:	f383 8811 	msr	BASEPRI, r3
 800dffe:	f3bf 8f6f 	isb	sy
 800e002:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800e006:	e7fe      	b.n	800e006 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e008:	9b01      	ldr	r3, [sp, #4]
 800e00a:	2b00      	cmp	r3, #0
 800e00c:	f000 80d4 	beq.w	800e1b8 <xQueueSemaphoreTake+0x288>
 800e010:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e014:	f383 8811 	msr	BASEPRI, r3
 800e018:	f3bf 8f6f 	isb	sy
 800e01c:	f3bf 8f4f 	dsb	sy
 800e020:	e7fe      	b.n	800e020 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800e022:	f7ff f8d7 	bl	800d1d4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e026:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e02a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e02c:	2d00      	cmp	r5, #0
 800e02e:	dc04      	bgt.n	800e03a <xQueueSemaphoreTake+0x10a>
 800e030:	e011      	b.n	800e056 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800e032:	1e6b      	subs	r3, r5, #1
 800e034:	b2da      	uxtb	r2, r3
 800e036:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e038:	b16a      	cbz	r2, 800e056 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e03a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e03c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e03e:	b153      	cbz	r3, 800e056 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e040:	f000 ff46 	bl	800eed0 <xTaskRemoveFromEventList>
 800e044:	2800      	cmp	r0, #0
 800e046:	d0f4      	beq.n	800e032 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800e048:	f000 ffde 	bl	800f008 <vTaskMissedYield>
			--cTxLock;
 800e04c:	1e6b      	subs	r3, r5, #1
 800e04e:	b2da      	uxtb	r2, r3
 800e050:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e052:	2a00      	cmp	r2, #0
 800e054:	d1f1      	bne.n	800e03a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800e056:	23ff      	movs	r3, #255	; 0xff
 800e058:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e05c:	f7ff f8dc 	bl	800d218 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e060:	f7ff f8b8 	bl	800d1d4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e064:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e068:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e06a:	2d00      	cmp	r5, #0
 800e06c:	dd14      	ble.n	800e098 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e06e:	f104 0810 	add.w	r8, r4, #16
 800e072:	e003      	b.n	800e07c <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800e074:	1e6b      	subs	r3, r5, #1
 800e076:	b2da      	uxtb	r2, r3
 800e078:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e07a:	b16a      	cbz	r2, 800e098 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e07c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e07e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e080:	b153      	cbz	r3, 800e098 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e082:	f000 ff25 	bl	800eed0 <xTaskRemoveFromEventList>
 800e086:	2800      	cmp	r0, #0
 800e088:	d0f4      	beq.n	800e074 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800e08a:	f000 ffbd 	bl	800f008 <vTaskMissedYield>
				--cRxLock;
 800e08e:	1e6b      	subs	r3, r5, #1
 800e090:	b2da      	uxtb	r2, r3
 800e092:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e094:	2a00      	cmp	r2, #0
 800e096:	d1f1      	bne.n	800e07c <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800e098:	23ff      	movs	r3, #255	; 0xff
 800e09a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e09e:	f7ff f8bb 	bl	800d218 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e0a2:	f000 fe15 	bl	800ecd0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800e0a6:	f7ff f895 	bl	800d1d4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e0aa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e0ac:	2b00      	cmp	r3, #0
 800e0ae:	d07c      	beq.n	800e1aa <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800e0b0:	f7ff f8b2 	bl	800d218 <vPortExitCritical>
	return xReturn;
 800e0b4:	2501      	movs	r5, #1
 800e0b6:	e755      	b.n	800df64 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e0b8:	a802      	add	r0, sp, #8
 800e0ba:	f000 ff51 	bl	800ef60 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800e0be:	e75e      	b.n	800df7e <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e0c0:	23ff      	movs	r3, #255	; 0xff
 800e0c2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e0c6:	f7ff f8a7 	bl	800d218 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e0ca:	f7ff f883 	bl	800d1d4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e0ce:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e0d2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e0d4:	2d00      	cmp	r5, #0
 800e0d6:	dd10      	ble.n	800e0fa <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e0d8:	f104 0810 	add.w	r8, r4, #16
 800e0dc:	e003      	b.n	800e0e6 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800e0de:	1e6b      	subs	r3, r5, #1
 800e0e0:	b2da      	uxtb	r2, r3
 800e0e2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e0e4:	b14a      	cbz	r2, 800e0fa <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e0e6:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e0e8:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e0ea:	b133      	cbz	r3, 800e0fa <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e0ec:	f000 fef0 	bl	800eed0 <xTaskRemoveFromEventList>
 800e0f0:	2800      	cmp	r0, #0
 800e0f2:	d0f4      	beq.n	800e0de <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800e0f4:	f000 ff88 	bl	800f008 <vTaskMissedYield>
 800e0f8:	e7f1      	b.n	800e0de <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800e0fa:	23ff      	movs	r3, #255	; 0xff
 800e0fc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e100:	f7ff f88a 	bl	800d218 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e104:	f000 fde4 	bl	800ecd0 <xTaskResumeAll>
 800e108:	e7d4      	b.n	800e0b4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800e10a:	f7ff f885 	bl	800d218 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e10e:	6823      	ldr	r3, [r4, #0]
 800e110:	2b00      	cmp	r3, #0
 800e112:	d062      	beq.n	800e1da <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e114:	9901      	ldr	r1, [sp, #4]
 800e116:	4630      	mov	r0, r6
 800e118:	f000 fe4c 	bl	800edb4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e11c:	f7ff f85a 	bl	800d1d4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e120:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e124:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e126:	2d00      	cmp	r5, #0
 800e128:	dc04      	bgt.n	800e134 <xQueueSemaphoreTake+0x204>
 800e12a:	e00d      	b.n	800e148 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800e12c:	1e6b      	subs	r3, r5, #1
 800e12e:	b2da      	uxtb	r2, r3
 800e130:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e132:	b14a      	cbz	r2, 800e148 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e134:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e136:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e138:	b133      	cbz	r3, 800e148 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e13a:	f000 fec9 	bl	800eed0 <xTaskRemoveFromEventList>
 800e13e:	2800      	cmp	r0, #0
 800e140:	d0f4      	beq.n	800e12c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800e142:	f000 ff61 	bl	800f008 <vTaskMissedYield>
 800e146:	e7f1      	b.n	800e12c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e148:	23ff      	movs	r3, #255	; 0xff
 800e14a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e14e:	f7ff f863 	bl	800d218 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e152:	f7ff f83f 	bl	800d1d4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e156:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e15a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e15c:	2d00      	cmp	r5, #0
 800e15e:	dd10      	ble.n	800e182 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e160:	f104 0810 	add.w	r8, r4, #16
 800e164:	e003      	b.n	800e16e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800e166:	1e6b      	subs	r3, r5, #1
 800e168:	b2da      	uxtb	r2, r3
 800e16a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e16c:	b14a      	cbz	r2, 800e182 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e16e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e170:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e172:	b133      	cbz	r3, 800e182 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e174:	f000 feac 	bl	800eed0 <xTaskRemoveFromEventList>
 800e178:	2800      	cmp	r0, #0
 800e17a:	d0f4      	beq.n	800e166 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800e17c:	f000 ff44 	bl	800f008 <vTaskMissedYield>
 800e180:	e7f1      	b.n	800e166 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800e182:	23ff      	movs	r3, #255	; 0xff
 800e184:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e188:	f7ff f846 	bl	800d218 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e18c:	f000 fda0 	bl	800ecd0 <xTaskResumeAll>
 800e190:	2800      	cmp	r0, #0
 800e192:	d18f      	bne.n	800e0b4 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800e194:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e198:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e19c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e1a0:	f3bf 8f4f 	dsb	sy
 800e1a4:	f3bf 8f6f 	isb	sy
 800e1a8:	e784      	b.n	800e0b4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800e1aa:	f7ff f835 	bl	800d218 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800e1ae:	b92f      	cbnz	r7, 800e1bc <xQueueSemaphoreTake+0x28c>
}
 800e1b0:	4638      	mov	r0, r7
 800e1b2:	b004      	add	sp, #16
 800e1b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e1b8:	4607      	mov	r7, r0
 800e1ba:	e6d1      	b.n	800df60 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800e1bc:	f7ff f80a 	bl	800d1d4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800e1c0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800e1c2:	b119      	cbz	r1, 800e1cc <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800e1c4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e1c6:	6819      	ldr	r1, [r3, #0]
 800e1c8:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800e1cc:	68a0      	ldr	r0, [r4, #8]
 800e1ce:	f000 ffbd 	bl	800f14c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800e1d2:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800e1d4:	f7ff f820 	bl	800d218 <vPortExitCritical>
 800e1d8:	e7ea      	b.n	800e1b0 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800e1da:	f7fe fffb 	bl	800d1d4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e1de:	68a0      	ldr	r0, [r4, #8]
 800e1e0:	f000 ff28 	bl	800f034 <xTaskPriorityInherit>
 800e1e4:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800e1e6:	f7ff f817 	bl	800d218 <vPortExitCritical>
 800e1ea:	e793      	b.n	800e114 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800e1ec:	b197      	cbz	r7, 800e214 <xQueueSemaphoreTake+0x2e4>
 800e1ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1f2:	f383 8811 	msr	BASEPRI, r3
 800e1f6:	f3bf 8f6f 	isb	sy
 800e1fa:	f3bf 8f4f 	dsb	sy
 800e1fe:	e7fe      	b.n	800e1fe <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e200:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800e202:	3b01      	subs	r3, #1
 800e204:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e206:	b1ca      	cbz	r2, 800e23c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e208:	6923      	ldr	r3, [r4, #16]
 800e20a:	b933      	cbnz	r3, 800e21a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800e20c:	f7ff f804 	bl	800d218 <vPortExitCritical>
				return pdPASS;
 800e210:	2701      	movs	r7, #1
 800e212:	e7cd      	b.n	800e1b0 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800e214:	f7ff f800 	bl	800d218 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800e218:	e7ca      	b.n	800e1b0 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e21a:	f104 0010 	add.w	r0, r4, #16
 800e21e:	f000 fe57 	bl	800eed0 <xTaskRemoveFromEventList>
 800e222:	2800      	cmp	r0, #0
 800e224:	d0f2      	beq.n	800e20c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800e226:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e22a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e22e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e232:	f3bf 8f4f 	dsb	sy
 800e236:	f3bf 8f6f 	isb	sy
 800e23a:	e7e7      	b.n	800e20c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800e23c:	f000 ffda 	bl	800f1f4 <pvTaskIncrementMutexHeldCount>
 800e240:	60a0      	str	r0, [r4, #8]
 800e242:	e7e1      	b.n	800e208 <xQueueSemaphoreTake+0x2d8>

0800e244 <xQueueReceiveFromISR>:
{
 800e244:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800e248:	b310      	cbz	r0, 800e290 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e24a:	460e      	mov	r6, r1
 800e24c:	4617      	mov	r7, r2
 800e24e:	4604      	mov	r4, r0
 800e250:	b191      	cbz	r1, 800e278 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e252:	f7ff f8f3 	bl	800d43c <vPortValidateInterruptPriority>
	__asm volatile
 800e256:	f3ef 8911 	mrs	r9, BASEPRI
 800e25a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e25e:	f383 8811 	msr	BASEPRI, r3
 800e262:	f3bf 8f6f 	isb	sy
 800e266:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e26a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e26c:	b9cd      	cbnz	r5, 800e2a2 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800e26e:	4628      	mov	r0, r5
	__asm volatile
 800e270:	f389 8811 	msr	BASEPRI, r9
}
 800e274:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e278:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e27a:	2b00      	cmp	r3, #0
 800e27c:	d0e9      	beq.n	800e252 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800e27e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e282:	f383 8811 	msr	BASEPRI, r3
 800e286:	f3bf 8f6f 	isb	sy
 800e28a:	f3bf 8f4f 	dsb	sy
 800e28e:	e7fe      	b.n	800e28e <xQueueReceiveFromISR+0x4a>
 800e290:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e294:	f383 8811 	msr	BASEPRI, r3
 800e298:	f3bf 8f6f 	isb	sy
 800e29c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e2a0:	e7fe      	b.n	800e2a0 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800e2a2:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e2a6:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800e2a8:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e2ac:	b152      	cbz	r2, 800e2c4 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e2ae:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e2b0:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e2b2:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e2b4:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e2b6:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e2b8:	bf24      	itt	cs
 800e2ba:	6821      	ldrcs	r1, [r4, #0]
 800e2bc:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e2be:	4630      	mov	r0, r6
 800e2c0:	f01a fca9 	bl	8028c16 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e2c4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800e2c6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e2ca:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800e2cc:	d009      	beq.n	800e2e2 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800e2ce:	f108 0301 	add.w	r3, r8, #1
 800e2d2:	b25b      	sxtb	r3, r3
 800e2d4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800e2d8:	2001      	movs	r0, #1
	__asm volatile
 800e2da:	f389 8811 	msr	BASEPRI, r9
}
 800e2de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e2e2:	6923      	ldr	r3, [r4, #16]
 800e2e4:	2b00      	cmp	r3, #0
 800e2e6:	d0f7      	beq.n	800e2d8 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e2e8:	f104 0010 	add.w	r0, r4, #16
 800e2ec:	f000 fdf0 	bl	800eed0 <xTaskRemoveFromEventList>
 800e2f0:	2800      	cmp	r0, #0
 800e2f2:	d0f1      	beq.n	800e2d8 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800e2f4:	2f00      	cmp	r7, #0
 800e2f6:	d0ef      	beq.n	800e2d8 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800e2f8:	2001      	movs	r0, #1
 800e2fa:	6038      	str	r0, [r7, #0]
 800e2fc:	e7b8      	b.n	800e270 <xQueueReceiveFromISR+0x2c>
 800e2fe:	bf00      	nop

0800e300 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800e300:	b158      	cbz	r0, 800e31a <uxQueueMessagesWaiting+0x1a>
{
 800e302:	b510      	push	{r4, lr}
 800e304:	4604      	mov	r4, r0
 800e306:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800e308:	f7fe ff64 	bl	800d1d4 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800e30c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800e30e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800e310:	f7fe ff82 	bl	800d218 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e314:	9801      	ldr	r0, [sp, #4]
 800e316:	b002      	add	sp, #8
 800e318:	bd10      	pop	{r4, pc}
	__asm volatile
 800e31a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e31e:	f383 8811 	msr	BASEPRI, r3
 800e322:	f3bf 8f6f 	isb	sy
 800e326:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800e32a:	e7fe      	b.n	800e32a <uxQueueMessagesWaiting+0x2a>

0800e32c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800e32c:	b108      	cbz	r0, 800e332 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800e32e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e330:	4770      	bx	lr
 800e332:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e336:	f383 8811 	msr	BASEPRI, r3
 800e33a:	f3bf 8f6f 	isb	sy
 800e33e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e342:	e7fe      	b.n	800e342 <uxQueueMessagesWaitingFromISR+0x16>
 800e344:	0000      	movs	r0, r0
	...

0800e348 <vQueueDelete>:
	configASSERT( pxQueue );
 800e348:	b1f0      	cbz	r0, 800e388 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e34a:	4b21      	ldr	r3, [pc, #132]	; (800e3d0 <vQueueDelete+0x88>)
 800e34c:	685a      	ldr	r2, [r3, #4]
 800e34e:	4290      	cmp	r0, r2
 800e350:	d025      	beq.n	800e39e <vQueueDelete+0x56>
 800e352:	68da      	ldr	r2, [r3, #12]
 800e354:	4290      	cmp	r0, r2
 800e356:	d02c      	beq.n	800e3b2 <vQueueDelete+0x6a>
 800e358:	695a      	ldr	r2, [r3, #20]
 800e35a:	4290      	cmp	r0, r2
 800e35c:	d02b      	beq.n	800e3b6 <vQueueDelete+0x6e>
 800e35e:	69da      	ldr	r2, [r3, #28]
 800e360:	4290      	cmp	r0, r2
 800e362:	d02a      	beq.n	800e3ba <vQueueDelete+0x72>
 800e364:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800e366:	4290      	cmp	r0, r2
 800e368:	d029      	beq.n	800e3be <vQueueDelete+0x76>
 800e36a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e36c:	4290      	cmp	r0, r2
 800e36e:	d01e      	beq.n	800e3ae <vQueueDelete+0x66>
 800e370:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800e372:	4290      	cmp	r0, r2
 800e374:	d025      	beq.n	800e3c2 <vQueueDelete+0x7a>
 800e376:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800e378:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e37a:	bf08      	it	eq
 800e37c:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e37e:	d00f      	beq.n	800e3a0 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800e380:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800e384:	b14b      	cbz	r3, 800e39a <vQueueDelete+0x52>
}
 800e386:	4770      	bx	lr
 800e388:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e38c:	f383 8811 	msr	BASEPRI, r3
 800e390:	f3bf 8f6f 	isb	sy
 800e394:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e398:	e7fe      	b.n	800e398 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800e39a:	f7fe be07 	b.w	800cfac <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e39e:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800e3a0:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800e3c8 <vQueueDelete+0x80>
 800e3a4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800e3a8:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800e3ac:	e7e8      	b.n	800e380 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e3ae:	2205      	movs	r2, #5
 800e3b0:	e7f6      	b.n	800e3a0 <vQueueDelete+0x58>
 800e3b2:	2201      	movs	r2, #1
 800e3b4:	e7f4      	b.n	800e3a0 <vQueueDelete+0x58>
 800e3b6:	2202      	movs	r2, #2
 800e3b8:	e7f2      	b.n	800e3a0 <vQueueDelete+0x58>
 800e3ba:	2203      	movs	r2, #3
 800e3bc:	e7f0      	b.n	800e3a0 <vQueueDelete+0x58>
 800e3be:	2204      	movs	r2, #4
 800e3c0:	e7ee      	b.n	800e3a0 <vQueueDelete+0x58>
 800e3c2:	2206      	movs	r2, #6
 800e3c4:	e7ec      	b.n	800e3a0 <vQueueDelete+0x58>
 800e3c6:	bf00      	nop
	...
 800e3d0:	20013160 	.word	0x20013160

0800e3d4 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800e3d4:	4b12      	ldr	r3, [pc, #72]	; (800e420 <vQueueAddToRegistry+0x4c>)
 800e3d6:	681a      	ldr	r2, [r3, #0]
 800e3d8:	b17a      	cbz	r2, 800e3fa <vQueueAddToRegistry+0x26>
 800e3da:	689a      	ldr	r2, [r3, #8]
 800e3dc:	b162      	cbz	r2, 800e3f8 <vQueueAddToRegistry+0x24>
 800e3de:	691a      	ldr	r2, [r3, #16]
 800e3e0:	b192      	cbz	r2, 800e408 <vQueueAddToRegistry+0x34>
 800e3e2:	699a      	ldr	r2, [r3, #24]
 800e3e4:	b192      	cbz	r2, 800e40c <vQueueAddToRegistry+0x38>
 800e3e6:	6a1a      	ldr	r2, [r3, #32]
 800e3e8:	b192      	cbz	r2, 800e410 <vQueueAddToRegistry+0x3c>
 800e3ea:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800e3ec:	b192      	cbz	r2, 800e414 <vQueueAddToRegistry+0x40>
 800e3ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800e3f0:	b192      	cbz	r2, 800e418 <vQueueAddToRegistry+0x44>
 800e3f2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800e3f4:	b192      	cbz	r2, 800e41c <vQueueAddToRegistry+0x48>
	}
 800e3f6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e3f8:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e3fa:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800e3fe:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e402:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800e406:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e408:	2202      	movs	r2, #2
 800e40a:	e7f6      	b.n	800e3fa <vQueueAddToRegistry+0x26>
 800e40c:	2203      	movs	r2, #3
 800e40e:	e7f4      	b.n	800e3fa <vQueueAddToRegistry+0x26>
 800e410:	2204      	movs	r2, #4
 800e412:	e7f2      	b.n	800e3fa <vQueueAddToRegistry+0x26>
 800e414:	2205      	movs	r2, #5
 800e416:	e7f0      	b.n	800e3fa <vQueueAddToRegistry+0x26>
 800e418:	2206      	movs	r2, #6
 800e41a:	e7ee      	b.n	800e3fa <vQueueAddToRegistry+0x26>
 800e41c:	2207      	movs	r2, #7
 800e41e:	e7ec      	b.n	800e3fa <vQueueAddToRegistry+0x26>
 800e420:	20013160 	.word	0x20013160

0800e424 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800e424:	b570      	push	{r4, r5, r6, lr}
 800e426:	4605      	mov	r5, r0
 800e428:	460e      	mov	r6, r1
 800e42a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800e42c:	f7fe fed2 	bl	800d1d4 <vPortEnterCritical>
 800e430:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e434:	2bff      	cmp	r3, #255	; 0xff
 800e436:	bf04      	itt	eq
 800e438:	2300      	moveq	r3, #0
 800e43a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800e43e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e442:	2bff      	cmp	r3, #255	; 0xff
 800e444:	bf04      	itt	eq
 800e446:	2300      	moveq	r3, #0
 800e448:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800e44c:	f7fe fee4 	bl	800d218 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800e450:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800e452:	2b00      	cmp	r3, #0
 800e454:	d043      	beq.n	800e4de <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800e456:	f7fe febd 	bl	800d1d4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e45a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e45e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e460:	2c00      	cmp	r4, #0
 800e462:	dd14      	ble.n	800e48e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e464:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800e468:	e003      	b.n	800e472 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800e46a:	1e63      	subs	r3, r4, #1
 800e46c:	b2da      	uxtb	r2, r3
 800e46e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e470:	b16a      	cbz	r2, 800e48e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e472:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e474:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e476:	b153      	cbz	r3, 800e48e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e478:	f000 fd2a 	bl	800eed0 <xTaskRemoveFromEventList>
 800e47c:	2800      	cmp	r0, #0
 800e47e:	d0f4      	beq.n	800e46a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800e480:	f000 fdc2 	bl	800f008 <vTaskMissedYield>
			--cTxLock;
 800e484:	1e63      	subs	r3, r4, #1
 800e486:	b2da      	uxtb	r2, r3
 800e488:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e48a:	2a00      	cmp	r2, #0
 800e48c:	d1f1      	bne.n	800e472 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e48e:	23ff      	movs	r3, #255	; 0xff
 800e490:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e494:	f7fe fec0 	bl	800d218 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e498:	f7fe fe9c 	bl	800d1d4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e49c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e4a0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e4a2:	2c00      	cmp	r4, #0
 800e4a4:	dd14      	ble.n	800e4d0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e4a6:	f105 0610 	add.w	r6, r5, #16
 800e4aa:	e003      	b.n	800e4b4 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800e4ac:	1e63      	subs	r3, r4, #1
 800e4ae:	b2da      	uxtb	r2, r3
 800e4b0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e4b2:	b16a      	cbz	r2, 800e4d0 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e4b4:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e4b6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e4b8:	b153      	cbz	r3, 800e4d0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e4ba:	f000 fd09 	bl	800eed0 <xTaskRemoveFromEventList>
 800e4be:	2800      	cmp	r0, #0
 800e4c0:	d0f4      	beq.n	800e4ac <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800e4c2:	f000 fda1 	bl	800f008 <vTaskMissedYield>
				--cRxLock;
 800e4c6:	1e63      	subs	r3, r4, #1
 800e4c8:	b2da      	uxtb	r2, r3
 800e4ca:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e4cc:	2a00      	cmp	r2, #0
 800e4ce:	d1f1      	bne.n	800e4b4 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800e4d0:	23ff      	movs	r3, #255	; 0xff
 800e4d2:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800e4d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800e4da:	f7fe be9d 	b.w	800d218 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800e4de:	4622      	mov	r2, r4
 800e4e0:	4631      	mov	r1, r6
 800e4e2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e4e6:	f000 fca9 	bl	800ee3c <vTaskPlaceOnEventListRestricted>
 800e4ea:	e7b4      	b.n	800e456 <vQueueWaitForMessageRestricted+0x32>

0800e4ec <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800e4ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e4f0:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800e4f2:	f7fe fe6f 	bl	800d1d4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800e4f6:	4a34      	ldr	r2, [pc, #208]	; (800e5c8 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800e4f8:	4e34      	ldr	r6, [pc, #208]	; (800e5cc <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800e4fa:	6813      	ldr	r3, [r2, #0]
 800e4fc:	3301      	adds	r3, #1
 800e4fe:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800e500:	6833      	ldr	r3, [r6, #0]
 800e502:	2b00      	cmp	r3, #0
 800e504:	d032      	beq.n	800e56c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800e506:	4c32      	ldr	r4, [pc, #200]	; (800e5d0 <prvAddNewTaskToReadyList+0xe4>)
 800e508:	6823      	ldr	r3, [r4, #0]
 800e50a:	b33b      	cbz	r3, 800e55c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e50c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e50e:	4f31      	ldr	r7, [pc, #196]	; (800e5d4 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800e510:	4a31      	ldr	r2, [pc, #196]	; (800e5d8 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800e512:	4932      	ldr	r1, [pc, #200]	; (800e5dc <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800e514:	6813      	ldr	r3, [r2, #0]
 800e516:	3301      	adds	r3, #1
 800e518:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800e51a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800e51c:	680b      	ldr	r3, [r1, #0]
 800e51e:	4283      	cmp	r3, r0
 800e520:	bf38      	it	cc
 800e522:	6008      	strcc	r0, [r1, #0]
 800e524:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800e528:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800e52c:	1d29      	adds	r1, r5, #4
 800e52e:	f7fe fdb1 	bl	800d094 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800e532:	f7fe fe71 	bl	800d218 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800e536:	6823      	ldr	r3, [r4, #0]
 800e538:	b173      	cbz	r3, 800e558 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800e53a:	6832      	ldr	r2, [r6, #0]
 800e53c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800e53e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800e540:	429a      	cmp	r2, r3
 800e542:	d209      	bcs.n	800e558 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800e544:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e548:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e54c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e550:	f3bf 8f4f 	dsb	sy
 800e554:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800e558:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e55c:	6833      	ldr	r3, [r6, #0]
 800e55e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e560:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e562:	4f1c      	ldr	r7, [pc, #112]	; (800e5d4 <prvAddNewTaskToReadyList+0xe8>)
 800e564:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800e566:	bf98      	it	ls
 800e568:	6035      	strls	r5, [r6, #0]
 800e56a:	e7d1      	b.n	800e510 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800e56c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800e56e:	6813      	ldr	r3, [r2, #0]
 800e570:	2b01      	cmp	r3, #1
 800e572:	d003      	beq.n	800e57c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e574:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e576:	4f17      	ldr	r7, [pc, #92]	; (800e5d4 <prvAddNewTaskToReadyList+0xe8>)
 800e578:	4c15      	ldr	r4, [pc, #84]	; (800e5d0 <prvAddNewTaskToReadyList+0xe4>)
 800e57a:	e7c9      	b.n	800e510 <prvAddNewTaskToReadyList+0x24>
 800e57c:	4f15      	ldr	r7, [pc, #84]	; (800e5d4 <prvAddNewTaskToReadyList+0xe8>)
 800e57e:	463c      	mov	r4, r7
 800e580:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e584:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e586:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e588:	f7fe fd74 	bl	800d074 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e58c:	45a0      	cmp	r8, r4
 800e58e:	d1f9      	bne.n	800e584 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800e590:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800e5f4 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800e594:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800e5f8 <prvAddNewTaskToReadyList+0x10c>
 800e598:	4c0d      	ldr	r4, [pc, #52]	; (800e5d0 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800e59a:	4648      	mov	r0, r9
 800e59c:	f7fe fd6a 	bl	800d074 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800e5a0:	4640      	mov	r0, r8
 800e5a2:	f7fe fd67 	bl	800d074 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800e5a6:	480e      	ldr	r0, [pc, #56]	; (800e5e0 <prvAddNewTaskToReadyList+0xf4>)
 800e5a8:	f7fe fd64 	bl	800d074 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800e5ac:	480d      	ldr	r0, [pc, #52]	; (800e5e4 <prvAddNewTaskToReadyList+0xf8>)
 800e5ae:	f7fe fd61 	bl	800d074 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800e5b2:	480d      	ldr	r0, [pc, #52]	; (800e5e8 <prvAddNewTaskToReadyList+0xfc>)
 800e5b4:	f7fe fd5e 	bl	800d074 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800e5b8:	4b0c      	ldr	r3, [pc, #48]	; (800e5ec <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800e5ba:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800e5bc:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800e5c0:	4b0b      	ldr	r3, [pc, #44]	; (800e5f0 <prvAddNewTaskToReadyList+0x104>)
 800e5c2:	f8c3 8000 	str.w	r8, [r3]
}
 800e5c6:	e7a3      	b.n	800e510 <prvAddNewTaskToReadyList+0x24>
 800e5c8:	2001360c 	.word	0x2001360c
 800e5cc:	200131a0 	.word	0x200131a0
 800e5d0:	20013668 	.word	0x20013668
 800e5d4:	200131ac 	.word	0x200131ac
 800e5d8:	20013618 	.word	0x20013618
 800e5dc:	2001361c 	.word	0x2001361c
 800e5e0:	20013654 	.word	0x20013654
 800e5e4:	20013680 	.word	0x20013680
 800e5e8:	2001366c 	.word	0x2001366c
 800e5ec:	200131a4 	.word	0x200131a4
 800e5f0:	200131a8 	.word	0x200131a8
 800e5f4:	20013620 	.word	0x20013620
 800e5f8:	20013634 	.word	0x20013634

0800e5fc <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e5fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e600:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800e602:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e606:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800e60a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e60c:	4606      	mov	r6, r0
 800e60e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e610:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e612:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e614:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e616:	f01a f9d8 	bl	80289ca <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800e61a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e61c:	f1a9 0904 	sub.w	r9, r9, #4
 800e620:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800e622:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800e626:	2d00      	cmp	r5, #0
 800e628:	d079      	beq.n	800e71e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e62a:	782b      	ldrb	r3, [r5, #0]
 800e62c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800e630:	2b00      	cmp	r3, #0
 800e632:	d03b      	beq.n	800e6ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e634:	786b      	ldrb	r3, [r5, #1]
 800e636:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800e63a:	2b00      	cmp	r3, #0
 800e63c:	d036      	beq.n	800e6ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e63e:	78ab      	ldrb	r3, [r5, #2]
 800e640:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800e644:	b393      	cbz	r3, 800e6ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e646:	78eb      	ldrb	r3, [r5, #3]
 800e648:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800e64c:	b373      	cbz	r3, 800e6ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e64e:	792b      	ldrb	r3, [r5, #4]
 800e650:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800e654:	b353      	cbz	r3, 800e6ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e656:	796b      	ldrb	r3, [r5, #5]
 800e658:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800e65c:	b333      	cbz	r3, 800e6ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e65e:	79ab      	ldrb	r3, [r5, #6]
 800e660:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800e664:	b313      	cbz	r3, 800e6ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e666:	79eb      	ldrb	r3, [r5, #7]
 800e668:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800e66c:	b1f3      	cbz	r3, 800e6ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e66e:	7a2b      	ldrb	r3, [r5, #8]
 800e670:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800e674:	b1d3      	cbz	r3, 800e6ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e676:	7a6b      	ldrb	r3, [r5, #9]
 800e678:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800e67c:	b1b3      	cbz	r3, 800e6ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e67e:	7aab      	ldrb	r3, [r5, #10]
 800e680:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800e684:	b193      	cbz	r3, 800e6ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e686:	7aeb      	ldrb	r3, [r5, #11]
 800e688:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800e68c:	b173      	cbz	r3, 800e6ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e68e:	7b2b      	ldrb	r3, [r5, #12]
 800e690:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800e694:	b153      	cbz	r3, 800e6ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e696:	7b6b      	ldrb	r3, [r5, #13]
 800e698:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800e69c:	b133      	cbz	r3, 800e6ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e69e:	7bab      	ldrb	r3, [r5, #14]
 800e6a0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800e6a4:	b113      	cbz	r3, 800e6ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e6a6:	7beb      	ldrb	r3, [r5, #15]
 800e6a8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800e6ac:	2300      	movs	r3, #0
 800e6ae:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800e6b2:	9d08      	ldr	r5, [sp, #32]
 800e6b4:	2d37      	cmp	r5, #55	; 0x37
 800e6b6:	bf28      	it	cs
 800e6b8:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800e6ba:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800e6be:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800e6c0:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e6c2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800e6c4:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e6c8:	f7fe fce0 	bl	800d08c <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e6cc:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800e6d0:	f104 0018 	add.w	r0, r4, #24
 800e6d4:	f7fe fcda 	bl	800d08c <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e6d8:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800e6da:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e6de:	4651      	mov	r1, sl
 800e6e0:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800e6e2:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800e6e4:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800e6e6:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800e6ea:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e6ee:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e6f2:	f01a f96a 	bl	80289ca <memset>
 800e6f6:	4b0b      	ldr	r3, [pc, #44]	; (800e724 <prvInitialiseNewTask.constprop.0+0x128>)
 800e6f8:	65e3      	str	r3, [r4, #92]	; 0x5c
 800e6fa:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800e6fe:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e700:	463a      	mov	r2, r7
 800e702:	4631      	mov	r1, r6
 800e704:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e706:	6625      	str	r5, [r4, #96]	; 0x60
 800e708:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e70a:	f7fe fd3d 	bl	800d188 <pxPortInitialiseStack>
 800e70e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800e710:	f1b8 0f00 	cmp.w	r8, #0
 800e714:	d001      	beq.n	800e71a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800e716:	f8c8 4000 	str.w	r4, [r8]
}
 800e71a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800e71e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800e722:	e7c6      	b.n	800e6b2 <prvInitialiseNewTask.constprop.0+0xb6>
 800e724:	20014130 	.word	0x20014130

0800e728 <prvIdleTask>:
{
 800e728:	b580      	push	{r7, lr}
 800e72a:	4d23      	ldr	r5, [pc, #140]	; (800e7b8 <prvIdleTask+0x90>)
 800e72c:	4f23      	ldr	r7, [pc, #140]	; (800e7bc <prvIdleTask+0x94>)
 800e72e:	4e24      	ldr	r6, [pc, #144]	; (800e7c0 <prvIdleTask+0x98>)
 800e730:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800e7c4 <prvIdleTask+0x9c>
				taskYIELD();
 800e734:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800e738:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e73c:	682b      	ldr	r3, [r5, #0]
 800e73e:	b35b      	cbz	r3, 800e798 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800e740:	f7fe fd48 	bl	800d1d4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e744:	68fb      	ldr	r3, [r7, #12]
 800e746:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e748:	1d20      	adds	r0, r4, #4
 800e74a:	f7fe fccb 	bl	800d0e4 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800e74e:	6833      	ldr	r3, [r6, #0]
 800e750:	3b01      	subs	r3, #1
 800e752:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800e754:	682b      	ldr	r3, [r5, #0]
 800e756:	3b01      	subs	r3, #1
 800e758:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800e75a:	f7fe fd5d 	bl	800d218 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800e75e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e762:	f01a f97b 	bl	8028a5c <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800e766:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800e76a:	b163      	cbz	r3, 800e786 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800e76c:	2b01      	cmp	r3, #1
 800e76e:	d01e      	beq.n	800e7ae <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800e770:	2b02      	cmp	r3, #2
 800e772:	d0e3      	beq.n	800e73c <prvIdleTask+0x14>
 800e774:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e778:	f383 8811 	msr	BASEPRI, r3
 800e77c:	f3bf 8f6f 	isb	sy
 800e780:	f3bf 8f4f 	dsb	sy
 800e784:	e7fe      	b.n	800e784 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800e786:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e788:	f7fe fc10 	bl	800cfac <vPortFree>
				vPortFree( pxTCB );
 800e78c:	4620      	mov	r0, r4
 800e78e:	f7fe fc0d 	bl	800cfac <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e792:	682b      	ldr	r3, [r5, #0]
 800e794:	2b00      	cmp	r3, #0
 800e796:	d1d3      	bne.n	800e740 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800e798:	f8d8 3000 	ldr.w	r3, [r8]
 800e79c:	2b01      	cmp	r3, #1
 800e79e:	d9cd      	bls.n	800e73c <prvIdleTask+0x14>
				taskYIELD();
 800e7a0:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800e7a4:	f3bf 8f4f 	dsb	sy
 800e7a8:	f3bf 8f6f 	isb	sy
 800e7ac:	e7c6      	b.n	800e73c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800e7ae:	4620      	mov	r0, r4
 800e7b0:	f7fe fbfc 	bl	800cfac <vPortFree>
 800e7b4:	e7c2      	b.n	800e73c <prvIdleTask+0x14>
 800e7b6:	bf00      	nop
 800e7b8:	20013610 	.word	0x20013610
 800e7bc:	20013680 	.word	0x20013680
 800e7c0:	2001360c 	.word	0x2001360c
 800e7c4:	200131ac 	.word	0x200131ac

0800e7c8 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800e7c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800e7cc:	4b47      	ldr	r3, [pc, #284]	; (800e8ec <xTaskIncrementTick.part.0+0x124>)
 800e7ce:	681e      	ldr	r6, [r3, #0]
 800e7d0:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800e7d2:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800e7d4:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800e7d6:	2e00      	cmp	r6, #0
 800e7d8:	d040      	beq.n	800e85c <xTaskIncrementTick.part.0+0x94>
 800e7da:	f8df b124 	ldr.w	fp, [pc, #292]	; 800e900 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800e7de:	f8db 3000 	ldr.w	r3, [fp]
 800e7e2:	429e      	cmp	r6, r3
 800e7e4:	d347      	bcc.n	800e876 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e7e6:	4f42      	ldr	r7, [pc, #264]	; (800e8f0 <xTaskIncrementTick.part.0+0x128>)
 800e7e8:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800e904 <xTaskIncrementTick.part.0+0x13c>
 800e7ec:	683b      	ldr	r3, [r7, #0]
 800e7ee:	f8df a118 	ldr.w	sl, [pc, #280]	; 800e908 <xTaskIncrementTick.part.0+0x140>
 800e7f2:	681d      	ldr	r5, [r3, #0]
 800e7f4:	2d00      	cmp	r5, #0
 800e7f6:	d073      	beq.n	800e8e0 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800e7f8:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800e90c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800e7fc:	2500      	movs	r5, #0
 800e7fe:	e022      	b.n	800e846 <xTaskIncrementTick.part.0+0x7e>
 800e800:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e802:	f7fe fc6f 	bl	800d0e4 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e806:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800e808:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e80a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e80e:	b113      	cbz	r3, 800e816 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e810:	f7fe fc68 	bl	800d0e4 <uxListRemove>
 800e814:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800e816:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e818:	f8d8 2000 	ldr.w	r2, [r8]
 800e81c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800e820:	4293      	cmp	r3, r2
 800e822:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800e826:	bf88      	it	hi
 800e828:	f8c8 3000 	strhi.w	r3, [r8]
 800e82c:	f7fe fc32 	bl	800d094 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e830:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e834:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e836:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e838:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e83a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800e83c:	4291      	cmp	r1, r2
 800e83e:	bf28      	it	cs
 800e840:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e842:	2b00      	cmp	r3, #0
 800e844:	d04c      	beq.n	800e8e0 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e846:	683b      	ldr	r3, [r7, #0]
 800e848:	68db      	ldr	r3, [r3, #12]
 800e84a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800e84c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e84e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800e850:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e852:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800e854:	d2d4      	bcs.n	800e800 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800e856:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800e85a:	e011      	b.n	800e880 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800e85c:	4b24      	ldr	r3, [pc, #144]	; (800e8f0 <xTaskIncrementTick.part.0+0x128>)
 800e85e:	681a      	ldr	r2, [r3, #0]
 800e860:	6812      	ldr	r2, [r2, #0]
 800e862:	b30a      	cbz	r2, 800e8a8 <xTaskIncrementTick.part.0+0xe0>
 800e864:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e868:	f383 8811 	msr	BASEPRI, r3
 800e86c:	f3bf 8f6f 	isb	sy
 800e870:	f3bf 8f4f 	dsb	sy
 800e874:	e7fe      	b.n	800e874 <xTaskIncrementTick.part.0+0xac>
 800e876:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800e904 <xTaskIncrementTick.part.0+0x13c>
 800e87a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800e908 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800e87e:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800e880:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800e884:	491b      	ldr	r1, [pc, #108]	; (800e8f4 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800e886:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e888:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800e88c:	009b      	lsls	r3, r3, #2
 800e88e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800e892:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800e894:	2a02      	cmp	r2, #2
 800e896:	bf28      	it	cs
 800e898:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800e89a:	2b00      	cmp	r3, #0
}
 800e89c:	bf0c      	ite	eq
 800e89e:	4628      	moveq	r0, r5
 800e8a0:	2001      	movne	r0, #1
 800e8a2:	b003      	add	sp, #12
 800e8a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800e8a8:	4a13      	ldr	r2, [pc, #76]	; (800e8f8 <xTaskIncrementTick.part.0+0x130>)
 800e8aa:	6818      	ldr	r0, [r3, #0]
 800e8ac:	6811      	ldr	r1, [r2, #0]
 800e8ae:	6019      	str	r1, [r3, #0]
 800e8b0:	4912      	ldr	r1, [pc, #72]	; (800e8fc <xTaskIncrementTick.part.0+0x134>)
 800e8b2:	6010      	str	r0, [r2, #0]
 800e8b4:	680a      	ldr	r2, [r1, #0]
 800e8b6:	3201      	adds	r2, #1
 800e8b8:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e8ba:	681a      	ldr	r2, [r3, #0]
 800e8bc:	6812      	ldr	r2, [r2, #0]
 800e8be:	b932      	cbnz	r2, 800e8ce <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800e8c0:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800e900 <xTaskIncrementTick.part.0+0x138>
 800e8c4:	f04f 33ff 	mov.w	r3, #4294967295
 800e8c8:	f8cb 3000 	str.w	r3, [fp]
 800e8cc:	e787      	b.n	800e7de <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e8ce:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e8d0:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800e900 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e8d4:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e8d6:	68db      	ldr	r3, [r3, #12]
 800e8d8:	685b      	ldr	r3, [r3, #4]
 800e8da:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800e8de:	e77e      	b.n	800e7de <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e8e0:	f04f 33ff 	mov.w	r3, #4294967295
 800e8e4:	f8cb 3000 	str.w	r3, [fp]
					break;
 800e8e8:	e7ca      	b.n	800e880 <xTaskIncrementTick.part.0+0xb8>
 800e8ea:	bf00      	nop
 800e8ec:	20013694 	.word	0x20013694
 800e8f0:	200131a4 	.word	0x200131a4
 800e8f4:	20013698 	.word	0x20013698
 800e8f8:	200131a8 	.word	0x200131a8
 800e8fc:	2001364c 	.word	0x2001364c
 800e900:	20013648 	.word	0x20013648
 800e904:	200131ac 	.word	0x200131ac
 800e908:	200131a0 	.word	0x200131a0
 800e90c:	2001361c 	.word	0x2001361c

0800e910 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800e910:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800e914:	4d41      	ldr	r5, [pc, #260]	; (800ea1c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800e916:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800e918:	f7fe fc5c 	bl	800d1d4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800e91c:	682b      	ldr	r3, [r5, #0]
 800e91e:	3b01      	subs	r3, #1
 800e920:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e922:	682b      	ldr	r3, [r5, #0]
 800e924:	2b00      	cmp	r3, #0
 800e926:	d161      	bne.n	800e9ec <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800e928:	4b3d      	ldr	r3, [pc, #244]	; (800ea20 <xTaskResumeAll.part.0+0x110>)
 800e92a:	681b      	ldr	r3, [r3, #0]
 800e92c:	2b00      	cmp	r3, #0
 800e92e:	d05d      	beq.n	800e9ec <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e930:	4e3c      	ldr	r6, [pc, #240]	; (800ea24 <xTaskResumeAll.part.0+0x114>)
 800e932:	6833      	ldr	r3, [r6, #0]
 800e934:	2b00      	cmp	r3, #0
 800e936:	d06e      	beq.n	800ea16 <xTaskResumeAll.part.0+0x106>
 800e938:	4f3b      	ldr	r7, [pc, #236]	; (800ea28 <xTaskResumeAll.part.0+0x118>)
 800e93a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800ea38 <xTaskResumeAll.part.0+0x128>
 800e93e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800ea3c <xTaskResumeAll.part.0+0x12c>
 800e942:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800ea40 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e946:	68f3      	ldr	r3, [r6, #12]
 800e948:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e94a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e94e:	f104 0018 	add.w	r0, r4, #24
 800e952:	f7fe fbc7 	bl	800d0e4 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e956:	4658      	mov	r0, fp
 800e958:	f7fe fbc4 	bl	800d0e4 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800e95c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e95e:	683a      	ldr	r2, [r7, #0]
 800e960:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800e964:	4293      	cmp	r3, r2
 800e966:	4659      	mov	r1, fp
 800e968:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800e96c:	bf88      	it	hi
 800e96e:	603b      	strhi	r3, [r7, #0]
 800e970:	f7fe fb90 	bl	800d094 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e974:	f8d8 3000 	ldr.w	r3, [r8]
 800e978:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e97a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e97c:	429a      	cmp	r2, r3
 800e97e:	d33d      	bcc.n	800e9fc <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800e980:	2301      	movs	r3, #1
 800e982:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e986:	6833      	ldr	r3, [r6, #0]
 800e988:	2b00      	cmp	r3, #0
 800e98a:	d1dc      	bne.n	800e946 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e98c:	4b27      	ldr	r3, [pc, #156]	; (800ea2c <xTaskResumeAll.part.0+0x11c>)
 800e98e:	681a      	ldr	r2, [r3, #0]
 800e990:	6812      	ldr	r2, [r2, #0]
 800e992:	2a00      	cmp	r2, #0
 800e994:	d03a      	beq.n	800ea0c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e996:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e998:	4b25      	ldr	r3, [pc, #148]	; (800ea30 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e99a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e99c:	68d2      	ldr	r2, [r2, #12]
 800e99e:	6852      	ldr	r2, [r2, #4]
 800e9a0:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800e9a2:	4e24      	ldr	r6, [pc, #144]	; (800ea34 <xTaskResumeAll.part.0+0x124>)
 800e9a4:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800e9a6:	b194      	cbz	r4, 800e9ce <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800e9a8:	2701      	movs	r7, #1
 800e9aa:	e006      	b.n	800e9ba <xTaskResumeAll.part.0+0xaa>
 800e9ac:	f7ff ff0c 	bl	800e7c8 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800e9b0:	b108      	cbz	r0, 800e9b6 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800e9b2:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e9b6:	3c01      	subs	r4, #1
 800e9b8:	d008      	beq.n	800e9cc <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e9ba:	682b      	ldr	r3, [r5, #0]
 800e9bc:	2b00      	cmp	r3, #0
 800e9be:	d0f5      	beq.n	800e9ac <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800e9c0:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e9c2:	3c01      	subs	r4, #1
		++xPendedTicks;
 800e9c4:	f103 0301 	add.w	r3, r3, #1
 800e9c8:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e9ca:	d1f6      	bne.n	800e9ba <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800e9cc:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800e9ce:	f8da 3000 	ldr.w	r3, [sl]
 800e9d2:	b15b      	cbz	r3, 800e9ec <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800e9d4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e9d8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e9dc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e9e0:	f3bf 8f4f 	dsb	sy
 800e9e4:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800e9e8:	2001      	movs	r0, #1
 800e9ea:	e000      	b.n	800e9ee <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800e9ec:	2000      	movs	r0, #0
 800e9ee:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800e9f0:	f7fe fc12 	bl	800d218 <vPortExitCritical>
}
 800e9f4:	9801      	ldr	r0, [sp, #4]
 800e9f6:	b003      	add	sp, #12
 800e9f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e9fc:	6833      	ldr	r3, [r6, #0]
 800e9fe:	2b00      	cmp	r3, #0
 800ea00:	d1a1      	bne.n	800e946 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ea02:	4b0a      	ldr	r3, [pc, #40]	; (800ea2c <xTaskResumeAll.part.0+0x11c>)
 800ea04:	681a      	ldr	r2, [r3, #0]
 800ea06:	6812      	ldr	r2, [r2, #0]
 800ea08:	2a00      	cmp	r2, #0
 800ea0a:	d1c4      	bne.n	800e996 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800ea0c:	4b08      	ldr	r3, [pc, #32]	; (800ea30 <xTaskResumeAll.part.0+0x120>)
 800ea0e:	f04f 32ff 	mov.w	r2, #4294967295
 800ea12:	601a      	str	r2, [r3, #0]
 800ea14:	e7c5      	b.n	800e9a2 <xTaskResumeAll.part.0+0x92>
 800ea16:	f8df a028 	ldr.w	sl, [pc, #40]	; 800ea40 <xTaskResumeAll.part.0+0x130>
 800ea1a:	e7c2      	b.n	800e9a2 <xTaskResumeAll.part.0+0x92>
 800ea1c:	20013614 	.word	0x20013614
 800ea20:	2001360c 	.word	0x2001360c
 800ea24:	20013654 	.word	0x20013654
 800ea28:	2001361c 	.word	0x2001361c
 800ea2c:	200131a4 	.word	0x200131a4
 800ea30:	20013648 	.word	0x20013648
 800ea34:	20013650 	.word	0x20013650
 800ea38:	200131ac 	.word	0x200131ac
 800ea3c:	200131a0 	.word	0x200131a0
 800ea40:	20013698 	.word	0x20013698

0800ea44 <xTaskCreateStatic>:
	{
 800ea44:	b530      	push	{r4, r5, lr}
 800ea46:	b087      	sub	sp, #28
 800ea48:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800ea4a:	b1c4      	cbz	r4, 800ea7e <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800ea4c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800ea4e:	b16d      	cbz	r5, 800ea6c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800ea50:	25ac      	movs	r5, #172	; 0xac
 800ea52:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800ea54:	9d05      	ldr	r5, [sp, #20]
 800ea56:	2dac      	cmp	r5, #172	; 0xac
 800ea58:	d01a      	beq.n	800ea90 <xTaskCreateStatic+0x4c>
 800ea5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea5e:	f383 8811 	msr	BASEPRI, r3
 800ea62:	f3bf 8f6f 	isb	sy
 800ea66:	f3bf 8f4f 	dsb	sy
 800ea6a:	e7fe      	b.n	800ea6a <xTaskCreateStatic+0x26>
 800ea6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea70:	f383 8811 	msr	BASEPRI, r3
 800ea74:	f3bf 8f6f 	isb	sy
 800ea78:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800ea7c:	e7fe      	b.n	800ea7c <xTaskCreateStatic+0x38>
 800ea7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea82:	f383 8811 	msr	BASEPRI, r3
 800ea86:	f3bf 8f6f 	isb	sy
 800ea8a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800ea8e:	e7fe      	b.n	800ea8e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800ea90:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800ea92:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800ea94:	2402      	movs	r4, #2
 800ea96:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ea9a:	ac04      	add	r4, sp, #16
 800ea9c:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800eaa0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800eaa2:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800eaa4:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800eaa6:	f7ff fda9 	bl	800e5fc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800eaaa:	980c      	ldr	r0, [sp, #48]	; 0x30
 800eaac:	f7ff fd1e 	bl	800e4ec <prvAddNewTaskToReadyList>
	}
 800eab0:	9804      	ldr	r0, [sp, #16]
 800eab2:	b007      	add	sp, #28
 800eab4:	bd30      	pop	{r4, r5, pc}
 800eab6:	bf00      	nop

0800eab8 <xTaskCreate>:
	{
 800eab8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800eabc:	4607      	mov	r7, r0
 800eabe:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800eac0:	0090      	lsls	r0, r2, #2
	{
 800eac2:	4615      	mov	r5, r2
 800eac4:	4688      	mov	r8, r1
 800eac6:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800eac8:	f7fe f9b4 	bl	800ce34 <pvPortMalloc>
			if( pxStack != NULL )
 800eacc:	b1d8      	cbz	r0, 800eb06 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800eace:	4604      	mov	r4, r0
 800ead0:	20ac      	movs	r0, #172	; 0xac
 800ead2:	f7fe f9af 	bl	800ce34 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800ead6:	4606      	mov	r6, r0
 800ead8:	b1d0      	cbz	r0, 800eb10 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800eada:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800eadc:	2400      	movs	r4, #0
 800eade:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800eae2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800eae4:	9401      	str	r4, [sp, #4]
 800eae6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800eae8:	9602      	str	r6, [sp, #8]
 800eaea:	464b      	mov	r3, r9
 800eaec:	462a      	mov	r2, r5
 800eaee:	4641      	mov	r1, r8
 800eaf0:	4638      	mov	r0, r7
 800eaf2:	9400      	str	r4, [sp, #0]
 800eaf4:	f7ff fd82 	bl	800e5fc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800eaf8:	4630      	mov	r0, r6
 800eafa:	f7ff fcf7 	bl	800e4ec <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800eafe:	2001      	movs	r0, #1
	}
 800eb00:	b005      	add	sp, #20
 800eb02:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800eb06:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800eb0a:	b005      	add	sp, #20
 800eb0c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800eb10:	4620      	mov	r0, r4
 800eb12:	f7fe fa4b 	bl	800cfac <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800eb16:	f04f 30ff 	mov.w	r0, #4294967295
 800eb1a:	e7f1      	b.n	800eb00 <xTaskCreate+0x48>

0800eb1c <vTaskDelay>:
	{
 800eb1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800eb1e:	b950      	cbnz	r0, 800eb36 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800eb20:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eb24:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eb28:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eb2c:	f3bf 8f4f 	dsb	sy
 800eb30:	f3bf 8f6f 	isb	sy
	}
 800eb34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800eb36:	4d1e      	ldr	r5, [pc, #120]	; (800ebb0 <vTaskDelay+0x94>)
 800eb38:	682b      	ldr	r3, [r5, #0]
 800eb3a:	b143      	cbz	r3, 800eb4e <vTaskDelay+0x32>
 800eb3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb40:	f383 8811 	msr	BASEPRI, r3
 800eb44:	f3bf 8f6f 	isb	sy
 800eb48:	f3bf 8f4f 	dsb	sy
 800eb4c:	e7fe      	b.n	800eb4c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800eb4e:	682b      	ldr	r3, [r5, #0]
 800eb50:	3301      	adds	r3, #1
 800eb52:	4604      	mov	r4, r0
 800eb54:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800eb56:	4b17      	ldr	r3, [pc, #92]	; (800ebb4 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800eb58:	4e17      	ldr	r6, [pc, #92]	; (800ebb8 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800eb5a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800eb5c:	6830      	ldr	r0, [r6, #0]
 800eb5e:	3004      	adds	r0, #4
 800eb60:	f7fe fac0 	bl	800d0e4 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800eb64:	6833      	ldr	r3, [r6, #0]
 800eb66:	19e4      	adds	r4, r4, r7
 800eb68:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800eb6a:	d310      	bcc.n	800eb8e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eb6c:	4b13      	ldr	r3, [pc, #76]	; (800ebbc <vTaskDelay+0xa0>)
 800eb6e:	6818      	ldr	r0, [r3, #0]
 800eb70:	6831      	ldr	r1, [r6, #0]
 800eb72:	3104      	adds	r1, #4
 800eb74:	f7fe fa9e 	bl	800d0b4 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800eb78:	682b      	ldr	r3, [r5, #0]
 800eb7a:	b9a3      	cbnz	r3, 800eba6 <vTaskDelay+0x8a>
 800eb7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb80:	f383 8811 	msr	BASEPRI, r3
 800eb84:	f3bf 8f6f 	isb	sy
 800eb88:	f3bf 8f4f 	dsb	sy
 800eb8c:	e7fe      	b.n	800eb8c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eb8e:	4b0c      	ldr	r3, [pc, #48]	; (800ebc0 <vTaskDelay+0xa4>)
 800eb90:	6818      	ldr	r0, [r3, #0]
 800eb92:	6831      	ldr	r1, [r6, #0]
 800eb94:	3104      	adds	r1, #4
 800eb96:	f7fe fa8d 	bl	800d0b4 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800eb9a:	4b0a      	ldr	r3, [pc, #40]	; (800ebc4 <vTaskDelay+0xa8>)
 800eb9c:	681a      	ldr	r2, [r3, #0]
 800eb9e:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800eba0:	bf38      	it	cc
 800eba2:	601c      	strcc	r4, [r3, #0]
 800eba4:	e7e8      	b.n	800eb78 <vTaskDelay+0x5c>
 800eba6:	f7ff feb3 	bl	800e910 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800ebaa:	2800      	cmp	r0, #0
 800ebac:	d0b8      	beq.n	800eb20 <vTaskDelay+0x4>
	}
 800ebae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ebb0:	20013614 	.word	0x20013614
 800ebb4:	20013694 	.word	0x20013694
 800ebb8:	200131a0 	.word	0x200131a0
 800ebbc:	200131a8 	.word	0x200131a8
 800ebc0:	200131a4 	.word	0x200131a4
 800ebc4:	20013648 	.word	0x20013648

0800ebc8 <vTaskStartScheduler>:
{
 800ebc8:	b530      	push	{r4, r5, lr}
 800ebca:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ebcc:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800ebce:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ebd0:	a906      	add	r1, sp, #24
 800ebd2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800ebd4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ebd8:	f7fe f90e 	bl	800cdf8 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800ebdc:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800ebe0:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800ebe2:	b1bb      	cbz	r3, 800ec14 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800ebe4:	b16d      	cbz	r5, 800ec02 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800ebe6:	21ac      	movs	r1, #172	; 0xac
 800ebe8:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800ebea:	9909      	ldr	r1, [sp, #36]	; 0x24
 800ebec:	29ac      	cmp	r1, #172	; 0xac
 800ebee:	d01a      	beq.n	800ec26 <vTaskStartScheduler+0x5e>
 800ebf0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ebf4:	f383 8811 	msr	BASEPRI, r3
 800ebf8:	f3bf 8f6f 	isb	sy
 800ebfc:	f3bf 8f4f 	dsb	sy
 800ec00:	e7fe      	b.n	800ec00 <vTaskStartScheduler+0x38>
 800ec02:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec06:	f383 8811 	msr	BASEPRI, r3
 800ec0a:	f3bf 8f6f 	isb	sy
 800ec0e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800ec12:	e7fe      	b.n	800ec12 <vTaskStartScheduler+0x4a>
 800ec14:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec18:	f383 8811 	msr	BASEPRI, r3
 800ec1c:	f3bf 8f6f 	isb	sy
 800ec20:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800ec24:	e7fe      	b.n	800ec24 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800ec26:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ec28:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800ec2a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800ec2c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ec30:	4623      	mov	r3, r4
 800ec32:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800ec36:	491b      	ldr	r1, [pc, #108]	; (800eca4 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800ec38:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ec3a:	9400      	str	r4, [sp, #0]
 800ec3c:	481a      	ldr	r0, [pc, #104]	; (800eca8 <vTaskStartScheduler+0xe0>)
 800ec3e:	f7ff fcdd 	bl	800e5fc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ec42:	4628      	mov	r0, r5
 800ec44:	f7ff fc52 	bl	800e4ec <prvAddNewTaskToReadyList>
		return xReturn;
 800ec48:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800ec4a:	b1eb      	cbz	r3, 800ec88 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800ec4c:	f000 fc6e 	bl	800f52c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800ec50:	2801      	cmp	r0, #1
 800ec52:	d11b      	bne.n	800ec8c <vTaskStartScheduler+0xc4>
 800ec54:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec58:	f383 8811 	msr	BASEPRI, r3
 800ec5c:	f3bf 8f6f 	isb	sy
 800ec60:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ec64:	4b11      	ldr	r3, [pc, #68]	; (800ecac <vTaskStartScheduler+0xe4>)
 800ec66:	4a12      	ldr	r2, [pc, #72]	; (800ecb0 <vTaskStartScheduler+0xe8>)
 800ec68:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800ec6a:	4912      	ldr	r1, [pc, #72]	; (800ecb4 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ec6c:	3358      	adds	r3, #88	; 0x58
 800ec6e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800ec70:	4a11      	ldr	r2, [pc, #68]	; (800ecb8 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800ec72:	4b12      	ldr	r3, [pc, #72]	; (800ecbc <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800ec74:	f04f 35ff 	mov.w	r5, #4294967295
 800ec78:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800ec7a:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800ec7c:	601c      	str	r4, [r3, #0]
}
 800ec7e:	b00b      	add	sp, #44	; 0x2c
 800ec80:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800ec84:	f7fe bb38 	b.w	800d2f8 <xPortStartScheduler>
}
 800ec88:	b00b      	add	sp, #44	; 0x2c
 800ec8a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800ec8c:	3001      	adds	r0, #1
 800ec8e:	d1fb      	bne.n	800ec88 <vTaskStartScheduler+0xc0>
 800ec90:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec94:	f383 8811 	msr	BASEPRI, r3
 800ec98:	f3bf 8f6f 	isb	sy
 800ec9c:	f3bf 8f4f 	dsb	sy
 800eca0:	e7fe      	b.n	800eca0 <vTaskStartScheduler+0xd8>
 800eca2:	bf00      	nop
 800eca4:	0802c660 	.word	0x0802c660
 800eca8:	0800e729 	.word	0x0800e729
 800ecac:	200131a0 	.word	0x200131a0
 800ecb0:	20000160 	.word	0x20000160
 800ecb4:	20013648 	.word	0x20013648
 800ecb8:	20013668 	.word	0x20013668
 800ecbc:	20013694 	.word	0x20013694

0800ecc0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800ecc0:	4a02      	ldr	r2, [pc, #8]	; (800eccc <vTaskSuspendAll+0xc>)
 800ecc2:	6813      	ldr	r3, [r2, #0]
 800ecc4:	3301      	adds	r3, #1
 800ecc6:	6013      	str	r3, [r2, #0]
}
 800ecc8:	4770      	bx	lr
 800ecca:	bf00      	nop
 800eccc:	20013614 	.word	0x20013614

0800ecd0 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800ecd0:	4b06      	ldr	r3, [pc, #24]	; (800ecec <xTaskResumeAll+0x1c>)
 800ecd2:	681b      	ldr	r3, [r3, #0]
 800ecd4:	b943      	cbnz	r3, 800ece8 <xTaskResumeAll+0x18>
 800ecd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecda:	f383 8811 	msr	BASEPRI, r3
 800ecde:	f3bf 8f6f 	isb	sy
 800ece2:	f3bf 8f4f 	dsb	sy
 800ece6:	e7fe      	b.n	800ece6 <xTaskResumeAll+0x16>
 800ece8:	f7ff be12 	b.w	800e910 <xTaskResumeAll.part.0>
 800ecec:	20013614 	.word	0x20013614

0800ecf0 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800ecf0:	4b01      	ldr	r3, [pc, #4]	; (800ecf8 <xTaskGetTickCount+0x8>)
 800ecf2:	6818      	ldr	r0, [r3, #0]
}
 800ecf4:	4770      	bx	lr
 800ecf6:	bf00      	nop
 800ecf8:	20013694 	.word	0x20013694

0800ecfc <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ecfc:	4b05      	ldr	r3, [pc, #20]	; (800ed14 <xTaskIncrementTick+0x18>)
 800ecfe:	681b      	ldr	r3, [r3, #0]
 800ed00:	b90b      	cbnz	r3, 800ed06 <xTaskIncrementTick+0xa>
 800ed02:	f7ff bd61 	b.w	800e7c8 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800ed06:	4a04      	ldr	r2, [pc, #16]	; (800ed18 <xTaskIncrementTick+0x1c>)
 800ed08:	6813      	ldr	r3, [r2, #0]
 800ed0a:	3301      	adds	r3, #1
}
 800ed0c:	2000      	movs	r0, #0
		++xPendedTicks;
 800ed0e:	6013      	str	r3, [r2, #0]
}
 800ed10:	4770      	bx	lr
 800ed12:	bf00      	nop
 800ed14:	20013614 	.word	0x20013614
 800ed18:	20013650 	.word	0x20013650

0800ed1c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800ed1c:	4b1f      	ldr	r3, [pc, #124]	; (800ed9c <vTaskSwitchContext+0x80>)
 800ed1e:	681b      	ldr	r3, [r3, #0]
 800ed20:	b11b      	cbz	r3, 800ed2a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800ed22:	4b1f      	ldr	r3, [pc, #124]	; (800eda0 <vTaskSwitchContext+0x84>)
 800ed24:	2201      	movs	r2, #1
 800ed26:	601a      	str	r2, [r3, #0]
 800ed28:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800ed2a:	4a1d      	ldr	r2, [pc, #116]	; (800eda0 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ed2c:	491d      	ldr	r1, [pc, #116]	; (800eda4 <vTaskSwitchContext+0x88>)
{
 800ed2e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ed30:	4c1d      	ldr	r4, [pc, #116]	; (800eda8 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800ed32:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ed34:	6823      	ldr	r3, [r4, #0]
 800ed36:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800ed3a:	0092      	lsls	r2, r2, #2
 800ed3c:	0098      	lsls	r0, r3, #2
 800ed3e:	588a      	ldr	r2, [r1, r2]
 800ed40:	b942      	cbnz	r2, 800ed54 <vTaskSwitchContext+0x38>
 800ed42:	b313      	cbz	r3, 800ed8a <vTaskSwitchContext+0x6e>
 800ed44:	3b01      	subs	r3, #1
 800ed46:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800ed4a:	0098      	lsls	r0, r3, #2
 800ed4c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800ed50:	2a00      	cmp	r2, #0
 800ed52:	d0f6      	beq.n	800ed42 <vTaskSwitchContext+0x26>
 800ed54:	4418      	add	r0, r3
 800ed56:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800ed5a:	4662      	mov	r2, ip
 800ed5c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800ed60:	6849      	ldr	r1, [r1, #4]
 800ed62:	f8cc 1004 	str.w	r1, [ip, #4]
 800ed66:	3208      	adds	r2, #8
 800ed68:	4291      	cmp	r1, r2
 800ed6a:	bf08      	it	eq
 800ed6c:	6849      	ldreq	r1, [r1, #4]
 800ed6e:	4a0f      	ldr	r2, [pc, #60]	; (800edac <vTaskSwitchContext+0x90>)
 800ed70:	bf08      	it	eq
 800ed72:	f8cc 1004 	streq.w	r1, [ip, #4]
 800ed76:	68c9      	ldr	r1, [r1, #12]
 800ed78:	6011      	str	r1, [r2, #0]
 800ed7a:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ed7c:	6813      	ldr	r3, [r2, #0]
 800ed7e:	4a0c      	ldr	r2, [pc, #48]	; (800edb0 <vTaskSwitchContext+0x94>)
}
 800ed80:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ed84:	3358      	adds	r3, #88	; 0x58
 800ed86:	6013      	str	r3, [r2, #0]
}
 800ed88:	4770      	bx	lr
 800ed8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed8e:	f383 8811 	msr	BASEPRI, r3
 800ed92:	f3bf 8f6f 	isb	sy
 800ed96:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ed9a:	e7fe      	b.n	800ed9a <vTaskSwitchContext+0x7e>
 800ed9c:	20013614 	.word	0x20013614
 800eda0:	20013698 	.word	0x20013698
 800eda4:	200131ac 	.word	0x200131ac
 800eda8:	2001361c 	.word	0x2001361c
 800edac:	200131a0 	.word	0x200131a0
 800edb0:	20000160 	.word	0x20000160

0800edb4 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800edb4:	b1d0      	cbz	r0, 800edec <vTaskPlaceOnEventList+0x38>
{
 800edb6:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800edb8:	4d1a      	ldr	r5, [pc, #104]	; (800ee24 <vTaskPlaceOnEventList+0x70>)
 800edba:	460c      	mov	r4, r1
 800edbc:	6829      	ldr	r1, [r5, #0]
 800edbe:	3118      	adds	r1, #24
 800edc0:	f7fe f978 	bl	800d0b4 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800edc4:	4b18      	ldr	r3, [pc, #96]	; (800ee28 <vTaskPlaceOnEventList+0x74>)
 800edc6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800edc8:	6828      	ldr	r0, [r5, #0]
 800edca:	3004      	adds	r0, #4
 800edcc:	f7fe f98a 	bl	800d0e4 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800edd0:	1c63      	adds	r3, r4, #1
 800edd2:	d014      	beq.n	800edfe <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800edd4:	682b      	ldr	r3, [r5, #0]
 800edd6:	19a4      	adds	r4, r4, r6
 800edd8:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800edda:	d317      	bcc.n	800ee0c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eddc:	4b13      	ldr	r3, [pc, #76]	; (800ee2c <vTaskPlaceOnEventList+0x78>)
 800edde:	6818      	ldr	r0, [r3, #0]
 800ede0:	6829      	ldr	r1, [r5, #0]
}
 800ede2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ede6:	3104      	adds	r1, #4
 800ede8:	f7fe b964 	b.w	800d0b4 <vListInsert>
 800edec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800edf0:	f383 8811 	msr	BASEPRI, r3
 800edf4:	f3bf 8f6f 	isb	sy
 800edf8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800edfc:	e7fe      	b.n	800edfc <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800edfe:	6829      	ldr	r1, [r5, #0]
 800ee00:	480b      	ldr	r0, [pc, #44]	; (800ee30 <vTaskPlaceOnEventList+0x7c>)
}
 800ee02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ee06:	3104      	adds	r1, #4
 800ee08:	f7fe b944 	b.w	800d094 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ee0c:	4b09      	ldr	r3, [pc, #36]	; (800ee34 <vTaskPlaceOnEventList+0x80>)
 800ee0e:	6818      	ldr	r0, [r3, #0]
 800ee10:	6829      	ldr	r1, [r5, #0]
 800ee12:	3104      	adds	r1, #4
 800ee14:	f7fe f94e 	bl	800d0b4 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800ee18:	4b07      	ldr	r3, [pc, #28]	; (800ee38 <vTaskPlaceOnEventList+0x84>)
 800ee1a:	681a      	ldr	r2, [r3, #0]
 800ee1c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800ee1e:	bf38      	it	cc
 800ee20:	601c      	strcc	r4, [r3, #0]
}
 800ee22:	bd70      	pop	{r4, r5, r6, pc}
 800ee24:	200131a0 	.word	0x200131a0
 800ee28:	20013694 	.word	0x20013694
 800ee2c:	200131a8 	.word	0x200131a8
 800ee30:	2001366c 	.word	0x2001366c
 800ee34:	200131a4 	.word	0x200131a4
 800ee38:	20013648 	.word	0x20013648

0800ee3c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800ee3c:	b330      	cbz	r0, 800ee8c <vTaskPlaceOnEventListRestricted+0x50>
	{
 800ee3e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800ee40:	4e1d      	ldr	r6, [pc, #116]	; (800eeb8 <vTaskPlaceOnEventListRestricted+0x7c>)
 800ee42:	460c      	mov	r4, r1
 800ee44:	6831      	ldr	r1, [r6, #0]
 800ee46:	4615      	mov	r5, r2
 800ee48:	3118      	adds	r1, #24
 800ee4a:	f7fe f923 	bl	800d094 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800ee4e:	4b1b      	ldr	r3, [pc, #108]	; (800eebc <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800ee50:	b985      	cbnz	r5, 800ee74 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800ee52:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ee54:	6830      	ldr	r0, [r6, #0]
 800ee56:	3004      	adds	r0, #4
 800ee58:	f7fe f944 	bl	800d0e4 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800ee5c:	6833      	ldr	r3, [r6, #0]
 800ee5e:	1964      	adds	r4, r4, r5
 800ee60:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800ee62:	d31c      	bcc.n	800ee9e <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ee64:	4b16      	ldr	r3, [pc, #88]	; (800eec0 <vTaskPlaceOnEventListRestricted+0x84>)
 800ee66:	6818      	ldr	r0, [r3, #0]
 800ee68:	6831      	ldr	r1, [r6, #0]
	}
 800ee6a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ee6e:	3104      	adds	r1, #4
 800ee70:	f7fe b920 	b.w	800d0b4 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800ee74:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ee76:	6830      	ldr	r0, [r6, #0]
 800ee78:	3004      	adds	r0, #4
 800ee7a:	f7fe f933 	bl	800d0e4 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ee7e:	6831      	ldr	r1, [r6, #0]
 800ee80:	4810      	ldr	r0, [pc, #64]	; (800eec4 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800ee82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ee86:	3104      	adds	r1, #4
 800ee88:	f7fe b904 	b.w	800d094 <vListInsertEnd>
 800ee8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee90:	f383 8811 	msr	BASEPRI, r3
 800ee94:	f3bf 8f6f 	isb	sy
 800ee98:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800ee9c:	e7fe      	b.n	800ee9c <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ee9e:	4b0a      	ldr	r3, [pc, #40]	; (800eec8 <vTaskPlaceOnEventListRestricted+0x8c>)
 800eea0:	6818      	ldr	r0, [r3, #0]
 800eea2:	6831      	ldr	r1, [r6, #0]
 800eea4:	3104      	adds	r1, #4
 800eea6:	f7fe f905 	bl	800d0b4 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800eeaa:	4b08      	ldr	r3, [pc, #32]	; (800eecc <vTaskPlaceOnEventListRestricted+0x90>)
 800eeac:	681a      	ldr	r2, [r3, #0]
 800eeae:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800eeb0:	bf38      	it	cc
 800eeb2:	601c      	strcc	r4, [r3, #0]
	}
 800eeb4:	bd70      	pop	{r4, r5, r6, pc}
 800eeb6:	bf00      	nop
 800eeb8:	200131a0 	.word	0x200131a0
 800eebc:	20013694 	.word	0x20013694
 800eec0:	200131a8 	.word	0x200131a8
 800eec4:	2001366c 	.word	0x2001366c
 800eec8:	200131a4 	.word	0x200131a4
 800eecc:	20013648 	.word	0x20013648

0800eed0 <xTaskRemoveFromEventList>:
{
 800eed0:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eed2:	68c3      	ldr	r3, [r0, #12]
 800eed4:	68dc      	ldr	r4, [r3, #12]
{
 800eed6:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800eed8:	2c00      	cmp	r4, #0
 800eeda:	d02b      	beq.n	800ef34 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800eedc:	f104 0518 	add.w	r5, r4, #24
 800eee0:	4628      	mov	r0, r5
 800eee2:	f7fe f8ff 	bl	800d0e4 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800eee6:	4b18      	ldr	r3, [pc, #96]	; (800ef48 <xTaskRemoveFromEventList+0x78>)
 800eee8:	681b      	ldr	r3, [r3, #0]
 800eeea:	b17b      	cbz	r3, 800ef0c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800eeec:	4817      	ldr	r0, [pc, #92]	; (800ef4c <xTaskRemoveFromEventList+0x7c>)
 800eeee:	4629      	mov	r1, r5
 800eef0:	f7fe f8d0 	bl	800d094 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800eef4:	4b16      	ldr	r3, [pc, #88]	; (800ef50 <xTaskRemoveFromEventList+0x80>)
 800eef6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800eef8:	681b      	ldr	r3, [r3, #0]
 800eefa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eefc:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800eefe:	bf85      	ittet	hi
 800ef00:	4b14      	ldrhi	r3, [pc, #80]	; (800ef54 <xTaskRemoveFromEventList+0x84>)
 800ef02:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800ef04:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800ef06:	6018      	strhi	r0, [r3, #0]
}
 800ef08:	b003      	add	sp, #12
 800ef0a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800ef0c:	1d21      	adds	r1, r4, #4
 800ef0e:	4608      	mov	r0, r1
 800ef10:	9101      	str	r1, [sp, #4]
 800ef12:	f7fe f8e7 	bl	800d0e4 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800ef16:	4a10      	ldr	r2, [pc, #64]	; (800ef58 <xTaskRemoveFromEventList+0x88>)
 800ef18:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ef1a:	6810      	ldr	r0, [r2, #0]
 800ef1c:	9901      	ldr	r1, [sp, #4]
 800ef1e:	4283      	cmp	r3, r0
 800ef20:	480e      	ldr	r0, [pc, #56]	; (800ef5c <xTaskRemoveFromEventList+0x8c>)
 800ef22:	bf88      	it	hi
 800ef24:	6013      	strhi	r3, [r2, #0]
 800ef26:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800ef2a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800ef2e:	f7fe f8b1 	bl	800d094 <vListInsertEnd>
 800ef32:	e7df      	b.n	800eef4 <xTaskRemoveFromEventList+0x24>
 800ef34:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef38:	f383 8811 	msr	BASEPRI, r3
 800ef3c:	f3bf 8f6f 	isb	sy
 800ef40:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800ef44:	e7fe      	b.n	800ef44 <xTaskRemoveFromEventList+0x74>
 800ef46:	bf00      	nop
 800ef48:	20013614 	.word	0x20013614
 800ef4c:	20013654 	.word	0x20013654
 800ef50:	200131a0 	.word	0x200131a0
 800ef54:	20013698 	.word	0x20013698
 800ef58:	2001361c 	.word	0x2001361c
 800ef5c:	200131ac 	.word	0x200131ac

0800ef60 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800ef60:	4a03      	ldr	r2, [pc, #12]	; (800ef70 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800ef62:	4b04      	ldr	r3, [pc, #16]	; (800ef74 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800ef64:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800ef66:	681b      	ldr	r3, [r3, #0]
 800ef68:	e9c0 2300 	strd	r2, r3, [r0]
}
 800ef6c:	4770      	bx	lr
 800ef6e:	bf00      	nop
 800ef70:	2001364c 	.word	0x2001364c
 800ef74:	20013694 	.word	0x20013694

0800ef78 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800ef78:	b328      	cbz	r0, 800efc6 <xTaskCheckForTimeOut+0x4e>
{
 800ef7a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ef7c:	460d      	mov	r5, r1
 800ef7e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800ef80:	b1c1      	cbz	r1, 800efb4 <xTaskCheckForTimeOut+0x3c>
 800ef82:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800ef84:	f7fe f926 	bl	800d1d4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800ef88:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800ef8a:	4a1d      	ldr	r2, [pc, #116]	; (800f000 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800ef8c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800ef8e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800ef90:	d030      	beq.n	800eff4 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800ef92:	f8df c070 	ldr.w	ip, [pc, #112]	; 800f004 <xTaskCheckForTimeOut+0x8c>
 800ef96:	e9d4 6000 	ldrd	r6, r0, [r4]
 800ef9a:	f8dc 7000 	ldr.w	r7, [ip]
 800ef9e:	42be      	cmp	r6, r7
 800efa0:	d01a      	beq.n	800efd8 <xTaskCheckForTimeOut+0x60>
 800efa2:	4288      	cmp	r0, r1
 800efa4:	d818      	bhi.n	800efd8 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800efa6:	2001      	movs	r0, #1
 800efa8:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800efaa:	f7fe f935 	bl	800d218 <vPortExitCritical>
}
 800efae:	9801      	ldr	r0, [sp, #4]
 800efb0:	b003      	add	sp, #12
 800efb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800efb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800efb8:	f383 8811 	msr	BASEPRI, r3
 800efbc:	f3bf 8f6f 	isb	sy
 800efc0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800efc4:	e7fe      	b.n	800efc4 <xTaskCheckForTimeOut+0x4c>
 800efc6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800efca:	f383 8811 	msr	BASEPRI, r3
 800efce:	f3bf 8f6f 	isb	sy
 800efd2:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800efd6:	e7fe      	b.n	800efd6 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800efd8:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800efdc:	4573      	cmp	r3, lr
 800efde:	d90b      	bls.n	800eff8 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800efe0:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800efe2:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800efe6:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800efe8:	4403      	add	r3, r0
 800efea:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800efec:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800efee:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800eff2:	e7d9      	b.n	800efa8 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800eff4:	2000      	movs	r0, #0
 800eff6:	e7d7      	b.n	800efa8 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800eff8:	2300      	movs	r3, #0
 800effa:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800effc:	2001      	movs	r0, #1
 800effe:	e7d3      	b.n	800efa8 <xTaskCheckForTimeOut+0x30>
 800f000:	20013694 	.word	0x20013694
 800f004:	2001364c 	.word	0x2001364c

0800f008 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800f008:	4b01      	ldr	r3, [pc, #4]	; (800f010 <vTaskMissedYield+0x8>)
 800f00a:	2201      	movs	r2, #1
 800f00c:	601a      	str	r2, [r3, #0]
}
 800f00e:	4770      	bx	lr
 800f010:	20013698 	.word	0x20013698

0800f014 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800f014:	4b05      	ldr	r3, [pc, #20]	; (800f02c <xTaskGetSchedulerState+0x18>)
 800f016:	681b      	ldr	r3, [r3, #0]
 800f018:	b133      	cbz	r3, 800f028 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f01a:	4b05      	ldr	r3, [pc, #20]	; (800f030 <xTaskGetSchedulerState+0x1c>)
 800f01c:	6818      	ldr	r0, [r3, #0]
 800f01e:	fab0 f080 	clz	r0, r0
 800f022:	0940      	lsrs	r0, r0, #5
 800f024:	0040      	lsls	r0, r0, #1
 800f026:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800f028:	2001      	movs	r0, #1
	}
 800f02a:	4770      	bx	lr
 800f02c:	20013668 	.word	0x20013668
 800f030:	20013614 	.word	0x20013614

0800f034 <xTaskPriorityInherit>:
	{
 800f034:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800f036:	4604      	mov	r4, r0
	{
 800f038:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800f03a:	b1c8      	cbz	r0, 800f070 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800f03c:	4d1d      	ldr	r5, [pc, #116]	; (800f0b4 <xTaskPriorityInherit+0x80>)
 800f03e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800f040:	682a      	ldr	r2, [r5, #0]
 800f042:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f044:	4293      	cmp	r3, r2
 800f046:	d215      	bcs.n	800f074 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f048:	6982      	ldr	r2, [r0, #24]
 800f04a:	2a00      	cmp	r2, #0
 800f04c:	db04      	blt.n	800f058 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f04e:	682a      	ldr	r2, [r5, #0]
 800f050:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f052:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800f056:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800f058:	4e17      	ldr	r6, [pc, #92]	; (800f0b8 <xTaskPriorityInherit+0x84>)
 800f05a:	6962      	ldr	r2, [r4, #20]
 800f05c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f060:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800f064:	429a      	cmp	r2, r3
 800f066:	d00e      	beq.n	800f086 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f068:	682b      	ldr	r3, [r5, #0]
 800f06a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f06c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800f06e:	2001      	movs	r0, #1
	}
 800f070:	b002      	add	sp, #8
 800f072:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800f074:	682b      	ldr	r3, [r5, #0]
 800f076:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800f078:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f07a:	4298      	cmp	r0, r3
 800f07c:	bf2c      	ite	cs
 800f07e:	2000      	movcs	r0, #0
 800f080:	2001      	movcc	r0, #1
	}
 800f082:	b002      	add	sp, #8
 800f084:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f086:	1d21      	adds	r1, r4, #4
 800f088:	4608      	mov	r0, r1
 800f08a:	9101      	str	r1, [sp, #4]
 800f08c:	f7fe f82a 	bl	800d0e4 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f090:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f092:	4b0a      	ldr	r3, [pc, #40]	; (800f0bc <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f094:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f096:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f098:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f09a:	4290      	cmp	r0, r2
 800f09c:	bf88      	it	hi
 800f09e:	6018      	strhi	r0, [r3, #0]
 800f0a0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f0a4:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800f0a8:	9901      	ldr	r1, [sp, #4]
 800f0aa:	f7fd fff3 	bl	800d094 <vListInsertEnd>
				xReturn = pdTRUE;
 800f0ae:	2001      	movs	r0, #1
 800f0b0:	e7de      	b.n	800f070 <xTaskPriorityInherit+0x3c>
 800f0b2:	bf00      	nop
 800f0b4:	200131a0 	.word	0x200131a0
 800f0b8:	200131ac 	.word	0x200131ac
 800f0bc:	2001361c 	.word	0x2001361c

0800f0c0 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800f0c0:	b318      	cbz	r0, 800f10a <xTaskPriorityDisinherit+0x4a>
	{
 800f0c2:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800f0c4:	4b1e      	ldr	r3, [pc, #120]	; (800f140 <xTaskPriorityDisinherit+0x80>)
 800f0c6:	681c      	ldr	r4, [r3, #0]
 800f0c8:	4284      	cmp	r4, r0
	{
 800f0ca:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800f0cc:	d008      	beq.n	800f0e0 <xTaskPriorityDisinherit+0x20>
 800f0ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0d2:	f383 8811 	msr	BASEPRI, r3
 800f0d6:	f3bf 8f6f 	isb	sy
 800f0da:	f3bf 8f4f 	dsb	sy
 800f0de:	e7fe      	b.n	800f0de <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800f0e0:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800f0e2:	b14b      	cbz	r3, 800f0f8 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f0e4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f0e6:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800f0e8:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f0ea:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800f0ec:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f0ee:	d000      	beq.n	800f0f2 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800f0f0:	b16b      	cbz	r3, 800f10e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800f0f2:	2000      	movs	r0, #0
	}
 800f0f4:	b002      	add	sp, #8
 800f0f6:	bd10      	pop	{r4, pc}
 800f0f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0fc:	f383 8811 	msr	BASEPRI, r3
 800f100:	f3bf 8f6f 	isb	sy
 800f104:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800f108:	e7fe      	b.n	800f108 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800f10a:	2000      	movs	r0, #0
	}
 800f10c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f10e:	1d21      	adds	r1, r4, #4
 800f110:	4608      	mov	r0, r1
 800f112:	9101      	str	r1, [sp, #4]
 800f114:	f7fd ffe6 	bl	800d0e4 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f118:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800f11a:	4a0a      	ldr	r2, [pc, #40]	; (800f144 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f11c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f11e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800f122:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800f124:	6810      	ldr	r0, [r2, #0]
 800f126:	9901      	ldr	r1, [sp, #4]
 800f128:	4283      	cmp	r3, r0
 800f12a:	4807      	ldr	r0, [pc, #28]	; (800f148 <xTaskPriorityDisinherit+0x88>)
 800f12c:	bf88      	it	hi
 800f12e:	6013      	strhi	r3, [r2, #0]
 800f130:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f134:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f138:	f7fd ffac 	bl	800d094 <vListInsertEnd>
					xReturn = pdTRUE;
 800f13c:	2001      	movs	r0, #1
		return xReturn;
 800f13e:	e7d9      	b.n	800f0f4 <xTaskPriorityDisinherit+0x34>
 800f140:	200131a0 	.word	0x200131a0
 800f144:	2001361c 	.word	0x2001361c
 800f148:	200131ac 	.word	0x200131ac

0800f14c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800f14c:	2800      	cmp	r0, #0
 800f14e:	d041      	beq.n	800f1d4 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800f150:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800f152:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800f154:	b083      	sub	sp, #12
 800f156:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800f158:	b153      	cbz	r3, 800f170 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800f15a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800f15c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f15e:	4281      	cmp	r1, r0
 800f160:	bf38      	it	cc
 800f162:	4601      	movcc	r1, r0
 800f164:	428a      	cmp	r2, r1
 800f166:	d001      	beq.n	800f16c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800f168:	2b01      	cmp	r3, #1
 800f16a:	d00a      	beq.n	800f182 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800f16c:	b003      	add	sp, #12
 800f16e:	bd30      	pop	{r4, r5, pc}
 800f170:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f174:	f383 8811 	msr	BASEPRI, r3
 800f178:	f3bf 8f6f 	isb	sy
 800f17c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800f180:	e7fe      	b.n	800f180 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800f182:	4b19      	ldr	r3, [pc, #100]	; (800f1e8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800f184:	681b      	ldr	r3, [r3, #0]
 800f186:	42a3      	cmp	r3, r4
 800f188:	d025      	beq.n	800f1d6 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f18a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800f18c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f18e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f190:	bfa8      	it	ge
 800f192:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800f196:	4d15      	ldr	r5, [pc, #84]	; (800f1ec <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f198:	bfa8      	it	ge
 800f19a:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800f19c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800f1a0:	6961      	ldr	r1, [r4, #20]
 800f1a2:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800f1a6:	4299      	cmp	r1, r3
 800f1a8:	d1e0      	bne.n	800f16c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f1aa:	1d21      	adds	r1, r4, #4
 800f1ac:	4608      	mov	r0, r1
 800f1ae:	9101      	str	r1, [sp, #4]
 800f1b0:	f7fd ff98 	bl	800d0e4 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800f1b4:	4b0e      	ldr	r3, [pc, #56]	; (800f1f0 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800f1b6:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800f1b8:	681a      	ldr	r2, [r3, #0]
 800f1ba:	9901      	ldr	r1, [sp, #4]
 800f1bc:	4290      	cmp	r0, r2
 800f1be:	bf88      	it	hi
 800f1c0:	6018      	strhi	r0, [r3, #0]
 800f1c2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f1c6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800f1ca:	b003      	add	sp, #12
 800f1cc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800f1d0:	f7fd bf60 	b.w	800d094 <vListInsertEnd>
 800f1d4:	4770      	bx	lr
 800f1d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f1da:	f383 8811 	msr	BASEPRI, r3
 800f1de:	f3bf 8f6f 	isb	sy
 800f1e2:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800f1e6:	e7fe      	b.n	800f1e6 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800f1e8:	200131a0 	.word	0x200131a0
 800f1ec:	200131ac 	.word	0x200131ac
 800f1f0:	2001361c 	.word	0x2001361c

0800f1f4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800f1f4:	4b04      	ldr	r3, [pc, #16]	; (800f208 <pvTaskIncrementMutexHeldCount+0x14>)
 800f1f6:	681a      	ldr	r2, [r3, #0]
 800f1f8:	b11a      	cbz	r2, 800f202 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800f1fa:	6819      	ldr	r1, [r3, #0]
 800f1fc:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800f1fe:	3201      	adds	r2, #1
 800f200:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800f202:	6818      	ldr	r0, [r3, #0]
	}
 800f204:	4770      	bx	lr
 800f206:	bf00      	nop
 800f208:	200131a0 	.word	0x200131a0

0800f20c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800f20c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f210:	4e22      	ldr	r6, [pc, #136]	; (800f29c <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800f212:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800f2a4 <prvSwitchTimerLists+0x98>
{
 800f216:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800f218:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f21c:	e00d      	b.n	800f23a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f21e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f220:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f222:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f224:	1d25      	adds	r5, r4, #4
 800f226:	4628      	mov	r0, r5
 800f228:	f7fd ff5c 	bl	800d0e4 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f22c:	6a23      	ldr	r3, [r4, #32]
 800f22e:	4620      	mov	r0, r4
 800f230:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f232:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800f236:	075b      	lsls	r3, r3, #29
 800f238:	d40a      	bmi.n	800f250 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f23a:	6833      	ldr	r3, [r6, #0]
 800f23c:	681a      	ldr	r2, [r3, #0]
 800f23e:	2a00      	cmp	r2, #0
 800f240:	d1ed      	bne.n	800f21e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800f242:	4a17      	ldr	r2, [pc, #92]	; (800f2a0 <prvSwitchTimerLists+0x94>)
 800f244:	6811      	ldr	r1, [r2, #0]
 800f246:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800f248:	6013      	str	r3, [r2, #0]
}
 800f24a:	b005      	add	sp, #20
 800f24c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800f250:	69a3      	ldr	r3, [r4, #24]
 800f252:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800f254:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f256:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800f258:	d205      	bcs.n	800f266 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f25a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800f25c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f25e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f260:	f7fd ff28 	bl	800d0b4 <vListInsert>
 800f264:	e7e9      	b.n	800f23a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800f266:	f8d9 3000 	ldr.w	r3, [r9]
 800f26a:	b16b      	cbz	r3, 800f288 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f26c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f270:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f272:	f7ff fecf 	bl	800f014 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f276:	2300      	movs	r3, #0
 800f278:	f8d9 0000 	ldr.w	r0, [r9]
 800f27c:	461a      	mov	r2, r3
 800f27e:	4669      	mov	r1, sp
 800f280:	f7fe fa9c 	bl	800d7bc <xQueueGenericSend>
				configASSERT( xResult );
 800f284:	2800      	cmp	r0, #0
 800f286:	d1d8      	bne.n	800f23a <prvSwitchTimerLists+0x2e>
 800f288:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f28c:	f383 8811 	msr	BASEPRI, r3
 800f290:	f3bf 8f6f 	isb	sy
 800f294:	f3bf 8f4f 	dsb	sy
 800f298:	e7fe      	b.n	800f298 <prvSwitchTimerLists+0x8c>
 800f29a:	bf00      	nop
 800f29c:	2001369c 	.word	0x2001369c
 800f2a0:	200136a0 	.word	0x200136a0
 800f2a4:	200137c0 	.word	0x200137c0

0800f2a8 <prvTimerTask>:
{
 800f2a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f2ac:	4e9b      	ldr	r6, [pc, #620]	; (800f51c <prvTimerTask+0x274>)
 800f2ae:	4d9c      	ldr	r5, [pc, #624]	; (800f520 <prvTimerTask+0x278>)
 800f2b0:	4c9c      	ldr	r4, [pc, #624]	; (800f524 <prvTimerTask+0x27c>)
 800f2b2:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800f2b4:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800f2b8:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800f2bc:	6833      	ldr	r3, [r6, #0]
 800f2be:	681f      	ldr	r7, [r3, #0]
 800f2c0:	2f00      	cmp	r7, #0
 800f2c2:	f000 80a8 	beq.w	800f416 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f2c6:	68db      	ldr	r3, [r3, #12]
 800f2c8:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800f2ca:	f7ff fcf9 	bl	800ecc0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f2ce:	f7ff fd0f 	bl	800ecf0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f2d2:	682a      	ldr	r2, [r5, #0]
 800f2d4:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800f2d6:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f2d8:	f0c0 80ae 	bcc.w	800f438 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f2dc:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800f2de:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f2e0:	f240 80b4 	bls.w	800f44c <prvTimerTask+0x1a4>
 800f2e4:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800f2e6:	6820      	ldr	r0, [r4, #0]
 800f2e8:	eba7 010a 	sub.w	r1, r7, sl
 800f2ec:	f7ff f89a 	bl	800e424 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800f2f0:	f7ff fcee 	bl	800ecd0 <xTaskResumeAll>
 800f2f4:	b928      	cbnz	r0, 800f302 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800f2f6:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800f2fa:	f3bf 8f4f 	dsb	sy
 800f2fe:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800f302:	6820      	ldr	r0, [r4, #0]
 800f304:	2200      	movs	r2, #0
 800f306:	a902      	add	r1, sp, #8
 800f308:	f7fe fc94 	bl	800dc34 <xQueueReceive>
 800f30c:	2800      	cmp	r0, #0
 800f30e:	d0d5      	beq.n	800f2bc <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800f310:	9b02      	ldr	r3, [sp, #8]
 800f312:	2b00      	cmp	r3, #0
 800f314:	db76      	blt.n	800f404 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800f316:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800f318:	697b      	ldr	r3, [r7, #20]
 800f31a:	b113      	cbz	r3, 800f322 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f31c:	1d38      	adds	r0, r7, #4
 800f31e:	f7fd fee1 	bl	800d0e4 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800f322:	f7ff fce5 	bl	800ecf0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f326:	682b      	ldr	r3, [r5, #0]
 800f328:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800f32a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f32c:	f0c0 808b 	bcc.w	800f446 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800f330:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800f332:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800f336:	2b09      	cmp	r3, #9
 800f338:	d8e3      	bhi.n	800f302 <prvTimerTask+0x5a>
 800f33a:	e8df f003 	tbb	[pc, r3]
 800f33e:	0505      	.short	0x0505
 800f340:	5a3d5305 	.word	0x5a3d5305
 800f344:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f348:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f34c:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f34e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f350:	f043 0301 	orr.w	r3, r3, #1
 800f354:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f358:	9b03      	ldr	r3, [sp, #12]
 800f35a:	1899      	adds	r1, r3, r2
 800f35c:	bf2c      	ite	cs
 800f35e:	2001      	movcs	r0, #1
 800f360:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800f362:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f364:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f366:	f200 808c 	bhi.w	800f482 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f36a:	ebaa 0303 	sub.w	r3, sl, r3
 800f36e:	429a      	cmp	r2, r3
 800f370:	d832      	bhi.n	800f3d8 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f372:	6a3b      	ldr	r3, [r7, #32]
 800f374:	4638      	mov	r0, r7
 800f376:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f378:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f37c:	075b      	lsls	r3, r3, #29
 800f37e:	d5c0      	bpl.n	800f302 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800f380:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f382:	9903      	ldr	r1, [sp, #12]
 800f384:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800f386:	b172      	cbz	r2, 800f3a6 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f388:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f38a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800f38e:	2300      	movs	r3, #0
 800f390:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f392:	f7ff fe3f 	bl	800f014 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f396:	2300      	movs	r3, #0
 800f398:	6820      	ldr	r0, [r4, #0]
 800f39a:	461a      	mov	r2, r3
 800f39c:	a906      	add	r1, sp, #24
 800f39e:	f7fe fa0d 	bl	800d7bc <xQueueGenericSend>
							configASSERT( xResult );
 800f3a2:	2800      	cmp	r0, #0
 800f3a4:	d1ad      	bne.n	800f302 <prvTimerTask+0x5a>
 800f3a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f3aa:	f383 8811 	msr	BASEPRI, r3
 800f3ae:	f3bf 8f6f 	isb	sy
 800f3b2:	f3bf 8f4f 	dsb	sy
 800f3b6:	e7fe      	b.n	800f3b6 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f3b8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f3bc:	f043 0301 	orr.w	r3, r3, #1
 800f3c0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800f3c4:	9b03      	ldr	r3, [sp, #12]
 800f3c6:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f3c8:	2b00      	cmp	r3, #0
 800f3ca:	f000 809d 	beq.w	800f508 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800f3ce:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 800f3d0:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f3d2:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f3d4:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 800f3d6:	d85e      	bhi.n	800f496 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f3d8:	4b53      	ldr	r3, [pc, #332]	; (800f528 <prvTimerTask+0x280>)
 800f3da:	1d39      	adds	r1, r7, #4
 800f3dc:	6818      	ldr	r0, [r3, #0]
 800f3de:	f7fd fe69 	bl	800d0b4 <vListInsert>
	return xProcessTimerNow;
 800f3e2:	e78e      	b.n	800f302 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f3e4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f3e8:	f023 0301 	bic.w	r3, r3, #1
 800f3ec:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 800f3f0:	e787      	b.n	800f302 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800f3f2:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f3f6:	079a      	lsls	r2, r3, #30
 800f3f8:	d552      	bpl.n	800f4a0 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f3fa:	f023 0301 	bic.w	r3, r3, #1
 800f3fe:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 800f402:	e77e      	b.n	800f302 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800f404:	9b03      	ldr	r3, [sp, #12]
 800f406:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800f40a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800f40c:	9b02      	ldr	r3, [sp, #8]
 800f40e:	2b00      	cmp	r3, #0
 800f410:	f6ff af77 	blt.w	800f302 <prvTimerTask+0x5a>
 800f414:	e77f      	b.n	800f316 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 800f416:	f7ff fc53 	bl	800ecc0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f41a:	f7ff fc69 	bl	800ecf0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f41e:	682a      	ldr	r2, [r5, #0]
 800f420:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 800f422:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f424:	d808      	bhi.n	800f438 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f426:	4b40      	ldr	r3, [pc, #256]	; (800f528 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 800f428:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f42c:	681a      	ldr	r2, [r3, #0]
 800f42e:	6812      	ldr	r2, [r2, #0]
 800f430:	fab2 f282 	clz	r2, r2
 800f434:	0952      	lsrs	r2, r2, #5
 800f436:	e756      	b.n	800f2e6 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 800f438:	f7ff fee8 	bl	800f20c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800f43c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 800f440:	f7ff fc46 	bl	800ecd0 <xTaskResumeAll>
 800f444:	e75d      	b.n	800f302 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 800f446:	f7ff fee1 	bl	800f20c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 800f44a:	e771      	b.n	800f330 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 800f44c:	f7ff fc40 	bl	800ecd0 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f450:	6832      	ldr	r2, [r6, #0]
 800f452:	68d2      	ldr	r2, [r2, #12]
 800f454:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f458:	f10b 0104 	add.w	r1, fp, #4
 800f45c:	4608      	mov	r0, r1
 800f45e:	9101      	str	r1, [sp, #4]
 800f460:	f7fd fe40 	bl	800d0e4 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f464:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 800f468:	9901      	ldr	r1, [sp, #4]
 800f46a:	f010 0f04 	tst.w	r0, #4
 800f46e:	d11b      	bne.n	800f4a8 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f470:	f020 0001 	bic.w	r0, r0, #1
 800f474:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f478:	f8db 3020 	ldr.w	r3, [fp, #32]
 800f47c:	4658      	mov	r0, fp
 800f47e:	4798      	blx	r3
}
 800f480:	e73f      	b.n	800f302 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800f482:	4553      	cmp	r3, sl
 800f484:	d902      	bls.n	800f48c <prvTimerTask+0x1e4>
 800f486:	2800      	cmp	r0, #0
 800f488:	f43f af73 	beq.w	800f372 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f48c:	6830      	ldr	r0, [r6, #0]
 800f48e:	1d39      	adds	r1, r7, #4
 800f490:	f7fd fe10 	bl	800d0b4 <vListInsert>
	return xProcessTimerNow;
 800f494:	e735      	b.n	800f302 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f496:	6830      	ldr	r0, [r6, #0]
 800f498:	1d39      	adds	r1, r7, #4
 800f49a:	f7fd fe0b 	bl	800d0b4 <vListInsert>
 800f49e:	e730      	b.n	800f302 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 800f4a0:	4638      	mov	r0, r7
 800f4a2:	f7fd fd83 	bl	800cfac <vPortFree>
 800f4a6:	e72c      	b.n	800f302 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f4a8:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f4ac:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f4b0:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 800f4b2:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f4b4:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f4b8:	d903      	bls.n	800f4c2 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f4ba:	6830      	ldr	r0, [r6, #0]
 800f4bc:	f7fd fdfa 	bl	800d0b4 <vListInsert>
	return xProcessTimerNow;
 800f4c0:	e7da      	b.n	800f478 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f4c2:	ebaa 0307 	sub.w	r3, sl, r7
 800f4c6:	429a      	cmp	r2, r3
 800f4c8:	d819      	bhi.n	800f4fe <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 800f4ca:	6823      	ldr	r3, [r4, #0]
 800f4cc:	b173      	cbz	r3, 800f4ec <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 800f4ce:	2300      	movs	r3, #0
 800f4d0:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f4d2:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f4d4:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f4d8:	f7ff fd9c 	bl	800f014 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f4dc:	2300      	movs	r3, #0
 800f4de:	6820      	ldr	r0, [r4, #0]
 800f4e0:	461a      	mov	r2, r3
 800f4e2:	a906      	add	r1, sp, #24
 800f4e4:	f7fe f96a 	bl	800d7bc <xQueueGenericSend>
			configASSERT( xResult );
 800f4e8:	2800      	cmp	r0, #0
 800f4ea:	d1c5      	bne.n	800f478 <prvTimerTask+0x1d0>
 800f4ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f4f0:	f383 8811 	msr	BASEPRI, r3
 800f4f4:	f3bf 8f6f 	isb	sy
 800f4f8:	f3bf 8f4f 	dsb	sy
 800f4fc:	e7fe      	b.n	800f4fc <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f4fe:	4b0a      	ldr	r3, [pc, #40]	; (800f528 <prvTimerTask+0x280>)
 800f500:	6818      	ldr	r0, [r3, #0]
 800f502:	f7fd fdd7 	bl	800d0b4 <vListInsert>
	return xProcessTimerNow;
 800f506:	e7b7      	b.n	800f478 <prvTimerTask+0x1d0>
 800f508:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f50c:	f383 8811 	msr	BASEPRI, r3
 800f510:	f3bf 8f6f 	isb	sy
 800f514:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f518:	e7fe      	b.n	800f518 <prvTimerTask+0x270>
 800f51a:	bf00      	nop
 800f51c:	2001369c 	.word	0x2001369c
 800f520:	2001376c 	.word	0x2001376c
 800f524:	200137c0 	.word	0x200137c0
 800f528:	200136a0 	.word	0x200136a0

0800f52c <xTimerCreateTimerTask>:
{
 800f52c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800f52e:	4c23      	ldr	r4, [pc, #140]	; (800f5bc <xTimerCreateTimerTask+0x90>)
{
 800f530:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 800f532:	f7fd fe4f 	bl	800d1d4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800f536:	6825      	ldr	r5, [r4, #0]
 800f538:	b335      	cbz	r5, 800f588 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800f53a:	f7fd fe6d 	bl	800d218 <vPortExitCritical>
	if( xTimerQueue != NULL )
 800f53e:	6823      	ldr	r3, [r4, #0]
 800f540:	b1cb      	cbz	r3, 800f576 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800f542:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f544:	aa07      	add	r2, sp, #28
 800f546:	a906      	add	r1, sp, #24
 800f548:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800f54a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f54e:	f7fd fc61 	bl	800ce14 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800f552:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 800f556:	2302      	movs	r3, #2
 800f558:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800f55c:	9300      	str	r3, [sp, #0]
 800f55e:	9a07      	ldr	r2, [sp, #28]
 800f560:	4917      	ldr	r1, [pc, #92]	; (800f5c0 <xTimerCreateTimerTask+0x94>)
 800f562:	4818      	ldr	r0, [pc, #96]	; (800f5c4 <xTimerCreateTimerTask+0x98>)
 800f564:	4623      	mov	r3, r4
 800f566:	f7ff fa6d 	bl	800ea44 <xTaskCreateStatic>
 800f56a:	4b17      	ldr	r3, [pc, #92]	; (800f5c8 <xTimerCreateTimerTask+0x9c>)
 800f56c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800f56e:	b110      	cbz	r0, 800f576 <xTimerCreateTimerTask+0x4a>
}
 800f570:	2001      	movs	r0, #1
 800f572:	b009      	add	sp, #36	; 0x24
 800f574:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f576:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f57a:	f383 8811 	msr	BASEPRI, r3
 800f57e:	f3bf 8f6f 	isb	sy
 800f582:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800f586:	e7fe      	b.n	800f586 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 800f588:	4f10      	ldr	r7, [pc, #64]	; (800f5cc <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 800f58a:	4e11      	ldr	r6, [pc, #68]	; (800f5d0 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 800f58c:	4638      	mov	r0, r7
 800f58e:	f7fd fd71 	bl	800d074 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800f592:	4630      	mov	r0, r6
 800f594:	f7fd fd6e 	bl	800d074 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800f598:	4a0e      	ldr	r2, [pc, #56]	; (800f5d4 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f59a:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 800f59c:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800f59e:	4a0e      	ldr	r2, [pc, #56]	; (800f5d8 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f5a0:	4b0e      	ldr	r3, [pc, #56]	; (800f5dc <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 800f5a2:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f5a4:	2110      	movs	r1, #16
 800f5a6:	4a0e      	ldr	r2, [pc, #56]	; (800f5e0 <xTimerCreateTimerTask+0xb4>)
 800f5a8:	200a      	movs	r0, #10
 800f5aa:	f7fd ffb1 	bl	800d510 <xQueueGenericCreateStatic>
 800f5ae:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 800f5b0:	2800      	cmp	r0, #0
 800f5b2:	d0c2      	beq.n	800f53a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800f5b4:	490b      	ldr	r1, [pc, #44]	; (800f5e4 <xTimerCreateTimerTask+0xb8>)
 800f5b6:	f7fe ff0d 	bl	800e3d4 <vQueueAddToRegistry>
 800f5ba:	e7be      	b.n	800f53a <xTimerCreateTimerTask+0xe>
 800f5bc:	200137c0 	.word	0x200137c0
 800f5c0:	0802c670 	.word	0x0802c670
 800f5c4:	0800f2a9 	.word	0x0800f2a9
 800f5c8:	200137c4 	.word	0x200137c4
 800f5cc:	20013744 	.word	0x20013744
 800f5d0:	20013758 	.word	0x20013758
 800f5d4:	2001369c 	.word	0x2001369c
 800f5d8:	200136a0 	.word	0x200136a0
 800f5dc:	20013770 	.word	0x20013770
 800f5e0:	200136a4 	.word	0x200136a4
 800f5e4:	0802c668 	.word	0x0802c668

0800f5e8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800f5e8:	8880      	ldrh	r0, [r0, #4]
 800f5ea:	4770      	bx	lr

0800f5ec <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800f5ec:	b570      	push	{r4, r5, r6, lr}
 800f5ee:	6803      	ldr	r3, [r0, #0]
 800f5f0:	4605      	mov	r5, r0
 800f5f2:	460c      	mov	r4, r1
 800f5f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f5f6:	2100      	movs	r1, #0
 800f5f8:	4798      	blx	r3
 800f5fa:	682b      	ldr	r3, [r5, #0]
 800f5fc:	4606      	mov	r6, r0
 800f5fe:	6a1b      	ldr	r3, [r3, #32]
 800f600:	4628      	mov	r0, r5
 800f602:	4798      	blx	r3
 800f604:	1ba4      	subs	r4, r4, r6
 800f606:	b2a4      	uxth	r4, r4
 800f608:	fbb4 f0f0 	udiv	r0, r4, r0
 800f60c:	bd70      	pop	{r4, r5, r6, pc}

0800f60e <_ZN8touchgfx17AbstractPartition5clearEv>:
 800f60e:	2300      	movs	r3, #0
 800f610:	8083      	strh	r3, [r0, #4]
 800f612:	4770      	bx	lr

0800f614 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800f614:	b510      	push	{r4, lr}
 800f616:	6803      	ldr	r3, [r0, #0]
 800f618:	8881      	ldrh	r1, [r0, #4]
 800f61a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f61c:	4604      	mov	r4, r0
 800f61e:	4798      	blx	r3
 800f620:	88a3      	ldrh	r3, [r4, #4]
 800f622:	3301      	adds	r3, #1
 800f624:	80a3      	strh	r3, [r4, #4]
 800f626:	bd10      	pop	{r4, pc}

0800f628 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800f628:	6803      	ldr	r3, [r0, #0]
 800f62a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f62c:	4718      	bx	r3

0800f62e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800f62e:	4770      	bx	lr

0800f630 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800f630:	4a02      	ldr	r2, [pc, #8]	; (800f63c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800f632:	6002      	str	r2, [r0, #0]
 800f634:	2200      	movs	r2, #0
 800f636:	8082      	strh	r2, [r0, #4]
 800f638:	4770      	bx	lr
 800f63a:	bf00      	nop
 800f63c:	0802c680 	.word	0x0802c680

0800f640 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800f640:	b510      	push	{r4, lr}
 800f642:	6803      	ldr	r3, [r0, #0]
 800f644:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800f648:	4604      	mov	r4, r0
 800f64a:	4798      	blx	r3
 800f64c:	b110      	cbz	r0, 800f654 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800f64e:	4620      	mov	r0, r4
 800f650:	f7f1 fe10 	bl	8001274 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800f654:	bd10      	pop	{r4, pc}

0800f656 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800f656:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800f65a:	4770      	bx	lr

0800f65c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800f65c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800f660:	4770      	bx	lr

0800f662 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800f662:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800f666:	4770      	bx	lr

0800f668 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800f668:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800f66c:	4770      	bx	lr

0800f66e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800f66e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f670:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800f674:	461e      	mov	r6, r3
 800f676:	6803      	ldr	r3, [r0, #0]
 800f678:	460f      	mov	r7, r1
 800f67a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f67e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800f682:	4604      	mov	r4, r0
 800f684:	4615      	mov	r5, r2
 800f686:	4798      	blx	r3
 800f688:	b93e      	cbnz	r6, 800f69a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800f68a:	1bed      	subs	r5, r5, r7
 800f68c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800f690:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800f694:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800f698:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f69a:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800f69e:	e7f7      	b.n	800f690 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800f6a0 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800f6a0:	b510      	push	{r4, lr}
 800f6a2:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f6a6:	600c      	str	r4, [r1, #0]
 800f6a8:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f6ac:	6011      	str	r1, [r2, #0]
 800f6ae:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f6b2:	801a      	strh	r2, [r3, #0]
 800f6b4:	9b02      	ldr	r3, [sp, #8]
 800f6b6:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800f6ba:	801a      	strh	r2, [r3, #0]
 800f6bc:	bd10      	pop	{r4, pc}

0800f6be <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800f6be:	b510      	push	{r4, lr}
 800f6c0:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f6c4:	600c      	str	r4, [r1, #0]
 800f6c6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f6ca:	6011      	str	r1, [r2, #0]
 800f6cc:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f6d0:	801a      	strh	r2, [r3, #0]
 800f6d2:	bd10      	pop	{r4, pc}

0800f6d4 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800f6d4:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f6d8:	600b      	str	r3, [r1, #0]
 800f6da:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f6de:	6013      	str	r3, [r2, #0]
 800f6e0:	4770      	bx	lr

0800f6e2 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800f6e2:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800f6e6:	4770      	bx	lr

0800f6e8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800f6e8:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800f6ec:	4770      	bx	lr

0800f6ee <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800f6ee:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800f6f2:	4770      	bx	lr

0800f6f4 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800f6f4:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800f6f8:	4770      	bx	lr

0800f6fa <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800f6fa:	4770      	bx	lr

0800f6fc <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800f6fc:	b510      	push	{r4, lr}
 800f6fe:	21b4      	movs	r1, #180	; 0xb4
 800f700:	4604      	mov	r4, r0
 800f702:	f018 f96c 	bl	80279de <_ZdlPvj>
 800f706:	4620      	mov	r0, r4
 800f708:	bd10      	pop	{r4, pc}

0800f70a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800f70a:	b570      	push	{r4, r5, r6, lr}
 800f70c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800f710:	428d      	cmp	r5, r1
 800f712:	bfb8      	it	lt
 800f714:	460d      	movlt	r5, r1
 800f716:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f71a:	428d      	cmp	r5, r1
 800f71c:	4604      	mov	r4, r0
 800f71e:	bfa8      	it	ge
 800f720:	460d      	movge	r5, r1
 800f722:	4616      	mov	r6, r2
 800f724:	b99a      	cbnz	r2, 800f74e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800f726:	6803      	ldr	r3, [r0, #0]
 800f728:	4629      	mov	r1, r5
 800f72a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f72e:	4798      	blx	r3
 800f730:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f734:	b368      	cbz	r0, 800f792 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f736:	6803      	ldr	r3, [r0, #0]
 800f738:	68db      	ldr	r3, [r3, #12]
 800f73a:	4798      	blx	r3
 800f73c:	b348      	cbz	r0, 800f792 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f73e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f742:	6803      	ldr	r3, [r0, #0]
 800f744:	4621      	mov	r1, r4
 800f746:	689b      	ldr	r3, [r3, #8]
 800f748:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f74c:	4718      	bx	r3
 800f74e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800f752:	2b00      	cmp	r3, #0
 800f754:	dd08      	ble.n	800f768 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800f756:	f005 fbe3 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
 800f75a:	4621      	mov	r1, r4
 800f75c:	3004      	adds	r0, #4
 800f75e:	f005 fc2c 	bl	8014fba <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f762:	2300      	movs	r3, #0
 800f764:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f768:	6823      	ldr	r3, [r4, #0]
 800f76a:	4620      	mov	r0, r4
 800f76c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800f770:	4798      	blx	r3
 800f772:	2300      	movs	r3, #0
 800f774:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800f778:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800f77c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800f780:	f005 fbce 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
 800f784:	4621      	mov	r1, r4
 800f786:	3004      	adds	r0, #4
 800f788:	f005 fcc0 	bl	801510c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800f78c:	2301      	movs	r3, #1
 800f78e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f792:	bd70      	pop	{r4, r5, r6, pc}

0800f794 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800f794:	b510      	push	{r4, lr}
 800f796:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f79a:	4299      	cmp	r1, r3
 800f79c:	bfb8      	it	lt
 800f79e:	4619      	movlt	r1, r3
 800f7a0:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f7a4:	4299      	cmp	r1, r3
 800f7a6:	bfa8      	it	ge
 800f7a8:	4619      	movge	r1, r3
 800f7aa:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800f7ae:	428b      	cmp	r3, r1
 800f7b0:	4604      	mov	r4, r0
 800f7b2:	d010      	beq.n	800f7d6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f7b4:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800f7b8:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800f7bc:	b158      	cbz	r0, 800f7d6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f7be:	6803      	ldr	r3, [r0, #0]
 800f7c0:	68db      	ldr	r3, [r3, #12]
 800f7c2:	4798      	blx	r3
 800f7c4:	b138      	cbz	r0, 800f7d6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f7c6:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800f7ca:	6803      	ldr	r3, [r0, #0]
 800f7cc:	4621      	mov	r1, r4
 800f7ce:	689b      	ldr	r3, [r3, #8]
 800f7d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f7d4:	4718      	bx	r3
 800f7d6:	bd10      	pop	{r4, pc}

0800f7d8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800f7d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f7da:	4604      	mov	r4, r0
 800f7dc:	460d      	mov	r5, r1
 800f7de:	b1a9      	cbz	r1, 800f80c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800f7e0:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800f7e4:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800f7e8:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800f7ec:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800f7f0:	ab01      	add	r3, sp, #4
 800f7f2:	1a12      	subs	r2, r2, r0
 800f7f4:	1b89      	subs	r1, r1, r6
 800f7f6:	1a38      	subs	r0, r7, r0
 800f7f8:	f006 fe48 	bl	801648c <_ZN8touchgfx6muldivElllRl>
 800f7fc:	4629      	mov	r1, r5
 800f7fe:	ab01      	add	r3, sp, #4
 800f800:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800f804:	4430      	add	r0, r6
 800f806:	f006 fe41 	bl	801648c <_ZN8touchgfx6muldivElllRl>
 800f80a:	b285      	uxth	r5, r0
 800f80c:	4628      	mov	r0, r5
 800f80e:	b003      	add	sp, #12
 800f810:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f812 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800f812:	b570      	push	{r4, r5, r6, lr}
 800f814:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800f818:	4604      	mov	r4, r0
 800f81a:	2b00      	cmp	r3, #0
 800f81c:	d035      	beq.n	800f88a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f81e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800f822:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800f826:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800f82a:	3001      	adds	r0, #1
 800f82c:	1ad2      	subs	r2, r2, r3
 800f82e:	b212      	sxth	r2, r2
 800f830:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800f834:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800f838:	2100      	movs	r1, #0
 800f83a:	b280      	uxth	r0, r0
 800f83c:	47a8      	blx	r5
 800f83e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800f842:	6823      	ldr	r3, [r4, #0]
 800f844:	4401      	add	r1, r0
 800f846:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f84a:	4620      	mov	r0, r4
 800f84c:	4798      	blx	r3
 800f84e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800f852:	429a      	cmp	r2, r3
 800f854:	db19      	blt.n	800f88a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f856:	2500      	movs	r5, #0
 800f858:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800f85c:	f005 fb60 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
 800f860:	4621      	mov	r1, r4
 800f862:	3004      	adds	r0, #4
 800f864:	f005 fba9 	bl	8014fba <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f868:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f86c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800f870:	b158      	cbz	r0, 800f88a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f872:	6803      	ldr	r3, [r0, #0]
 800f874:	68db      	ldr	r3, [r3, #12]
 800f876:	4798      	blx	r3
 800f878:	b138      	cbz	r0, 800f88a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f87a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f87e:	6803      	ldr	r3, [r0, #0]
 800f880:	4621      	mov	r1, r4
 800f882:	689b      	ldr	r3, [r3, #8]
 800f884:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f888:	4718      	bx	r3
 800f88a:	bd70      	pop	{r4, r5, r6, pc}

0800f88c <_ZN8touchgfx8DrawableC1Ev>:
 800f88c:	4a0a      	ldr	r2, [pc, #40]	; (800f8b8 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800f88e:	6002      	str	r2, [r0, #0]
 800f890:	2200      	movs	r2, #0
 800f892:	8082      	strh	r2, [r0, #4]
 800f894:	80c2      	strh	r2, [r0, #6]
 800f896:	8102      	strh	r2, [r0, #8]
 800f898:	8142      	strh	r2, [r0, #10]
 800f89a:	8182      	strh	r2, [r0, #12]
 800f89c:	81c2      	strh	r2, [r0, #14]
 800f89e:	8202      	strh	r2, [r0, #16]
 800f8a0:	8242      	strh	r2, [r0, #18]
 800f8a2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800f8a6:	61c2      	str	r2, [r0, #28]
 800f8a8:	8402      	strh	r2, [r0, #32]
 800f8aa:	8442      	strh	r2, [r0, #34]	; 0x22
 800f8ac:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800f8b0:	2201      	movs	r2, #1
 800f8b2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800f8b6:	4770      	bx	lr
 800f8b8:	0802ce20 	.word	0x0802ce20

0800f8bc <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800f8bc:	b570      	push	{r4, r5, r6, lr}
 800f8be:	6803      	ldr	r3, [r0, #0]
 800f8c0:	4604      	mov	r4, r0
 800f8c2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f8c4:	4615      	mov	r5, r2
 800f8c6:	4798      	blx	r3
 800f8c8:	6823      	ldr	r3, [r4, #0]
 800f8ca:	4629      	mov	r1, r5
 800f8cc:	4620      	mov	r0, r4
 800f8ce:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f8d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f8d4:	4718      	bx	r3

0800f8d6 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800f8d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f8da:	4604      	mov	r4, r0
 800f8dc:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800f8e0:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800f8e4:	460e      	mov	r6, r1
 800f8e6:	4615      	mov	r5, r2
 800f8e8:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800f8ec:	4619      	mov	r1, r3
 800f8ee:	463a      	mov	r2, r7
 800f8f0:	3058      	adds	r0, #88	; 0x58
 800f8f2:	4698      	mov	r8, r3
 800f8f4:	f7ff ffe2 	bl	800f8bc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f8f8:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800f8fc:	4446      	add	r6, r8
 800f8fe:	42b3      	cmp	r3, r6
 800f900:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800f904:	bfb8      	it	lt
 800f906:	8126      	strhlt	r6, [r4, #8]
 800f908:	443d      	add	r5, r7
 800f90a:	42ab      	cmp	r3, r5
 800f90c:	bfb8      	it	lt
 800f90e:	8165      	strhlt	r5, [r4, #10]
 800f910:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f914 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800f914:	b510      	push	{r4, lr}
 800f916:	4604      	mov	r4, r0
 800f918:	302c      	adds	r0, #44	; 0x2c
 800f91a:	f002 fdf8 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800f91e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800f922:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800f926:	4620      	mov	r0, r4
 800f928:	f7ff ffc8 	bl	800f8bc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f92c:	bd10      	pop	{r4, pc}
	...

0800f930 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800f930:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f932:	4604      	mov	r4, r0
 800f934:	4626      	mov	r6, r4
 800f936:	2500      	movs	r5, #0
 800f938:	f7ff ffa8 	bl	800f88c <_ZN8touchgfx8DrawableC1Ev>
 800f93c:	4b23      	ldr	r3, [pc, #140]	; (800f9cc <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800f93e:	62a5      	str	r5, [r4, #40]	; 0x28
 800f940:	f846 3b2c 	str.w	r3, [r6], #44
 800f944:	2226      	movs	r2, #38	; 0x26
 800f946:	4629      	mov	r1, r5
 800f948:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800f94c:	4630      	mov	r0, r6
 800f94e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800f952:	f019 f83a 	bl	80289ca <memset>
 800f956:	4630      	mov	r0, r6
 800f958:	f7ff ff98 	bl	800f88c <_ZN8touchgfx8DrawableC1Ev>
 800f95c:	a902      	add	r1, sp, #8
 800f95e:	4b1c      	ldr	r3, [pc, #112]	; (800f9d0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800f960:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f962:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800f966:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800f96a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800f96e:	4630      	mov	r0, r6
 800f970:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800f974:	f002 fdcb 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800f978:	4638      	mov	r0, r7
 800f97a:	f7ff ff87 	bl	800f88c <_ZN8touchgfx8DrawableC1Ev>
 800f97e:	4b15      	ldr	r3, [pc, #84]	; (800f9d4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800f980:	65a3      	str	r3, [r4, #88]	; 0x58
 800f982:	2364      	movs	r3, #100	; 0x64
 800f984:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800f988:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800f98c:	4b12      	ldr	r3, [pc, #72]	; (800f9d8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800f98e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800f992:	4629      	mov	r1, r5
 800f994:	4630      	mov	r0, r6
 800f996:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800f99a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800f99e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800f9a2:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800f9a6:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800f9aa:	f7f1 fbc5 	bl	8001138 <_ZN8touchgfx8Drawable4setXEs>
 800f9ae:	4629      	mov	r1, r5
 800f9b0:	4630      	mov	r0, r6
 800f9b2:	f7f1 fbc3 	bl	800113c <_ZN8touchgfx8Drawable4setYEs>
 800f9b6:	4631      	mov	r1, r6
 800f9b8:	4620      	mov	r0, r4
 800f9ba:	f000 f819 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f9be:	4620      	mov	r0, r4
 800f9c0:	4639      	mov	r1, r7
 800f9c2:	f000 f815 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f9c6:	4620      	mov	r0, r4
 800f9c8:	b003      	add	sp, #12
 800f9ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f9cc:	0802c6b4 	.word	0x0802c6b4
 800f9d0:	0802ccdc 	.word	0x0802ccdc
 800f9d4:	0802c788 	.word	0x0802c788
 800f9d8:	08016beb 	.word	0x08016beb

0800f9dc <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800f9dc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f9de:	2000      	movs	r0, #0
 800f9e0:	b12b      	cbz	r3, 800f9ee <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f9e2:	b920      	cbnz	r0, 800f9ee <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f9e4:	1a5a      	subs	r2, r3, r1
 800f9e6:	4250      	negs	r0, r2
 800f9e8:	4150      	adcs	r0, r2
 800f9ea:	699b      	ldr	r3, [r3, #24]
 800f9ec:	e7f8      	b.n	800f9e0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800f9ee:	4770      	bx	lr

0800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800f9f0:	2300      	movs	r3, #0
 800f9f2:	6148      	str	r0, [r1, #20]
 800f9f4:	618b      	str	r3, [r1, #24]
 800f9f6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f9f8:	b913      	cbnz	r3, 800fa00 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800f9fa:	6281      	str	r1, [r0, #40]	; 0x28
 800f9fc:	4770      	bx	lr
 800f9fe:	4613      	mov	r3, r2
 800fa00:	699a      	ldr	r2, [r3, #24]
 800fa02:	2a00      	cmp	r2, #0
 800fa04:	d1fb      	bne.n	800f9fe <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800fa06:	6199      	str	r1, [r3, #24]
 800fa08:	4770      	bx	lr

0800fa0a <_ZN8touchgfx9Container9removeAllEv>:
 800fa0a:	2200      	movs	r2, #0
 800fa0c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fa0e:	b123      	cbz	r3, 800fa1a <_ZN8touchgfx9Container9removeAllEv+0x10>
 800fa10:	6999      	ldr	r1, [r3, #24]
 800fa12:	6281      	str	r1, [r0, #40]	; 0x28
 800fa14:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800fa18:	e7f8      	b.n	800fa0c <_ZN8touchgfx9Container9removeAllEv+0x2>
 800fa1a:	4770      	bx	lr

0800fa1c <_ZN8touchgfx9Container6unlinkEv>:
 800fa1c:	2300      	movs	r3, #0
 800fa1e:	6283      	str	r3, [r0, #40]	; 0x28
 800fa20:	4770      	bx	lr

0800fa22 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800fa22:	2200      	movs	r2, #0
 800fa24:	8002      	strh	r2, [r0, #0]
 800fa26:	8042      	strh	r2, [r0, #2]
 800fa28:	8082      	strh	r2, [r0, #4]
 800fa2a:	80c2      	strh	r2, [r0, #6]
 800fa2c:	4770      	bx	lr

0800fa2e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800fa2e:	b570      	push	{r4, r5, r6, lr}
 800fa30:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fa32:	460d      	mov	r5, r1
 800fa34:	4616      	mov	r6, r2
 800fa36:	b13c      	cbz	r4, 800fa48 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800fa38:	6823      	ldr	r3, [r4, #0]
 800fa3a:	4620      	mov	r0, r4
 800fa3c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800fa3e:	4632      	mov	r2, r6
 800fa40:	4629      	mov	r1, r5
 800fa42:	4798      	blx	r3
 800fa44:	69a4      	ldr	r4, [r4, #24]
 800fa46:	e7f6      	b.n	800fa36 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800fa48:	bd70      	pop	{r4, r5, r6, pc}

0800fa4a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800fa4a:	b538      	push	{r3, r4, r5, lr}
 800fa4c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fa4e:	460d      	mov	r5, r1
 800fa50:	b134      	cbz	r4, 800fa60 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800fa52:	682b      	ldr	r3, [r5, #0]
 800fa54:	4621      	mov	r1, r4
 800fa56:	689b      	ldr	r3, [r3, #8]
 800fa58:	4628      	mov	r0, r5
 800fa5a:	4798      	blx	r3
 800fa5c:	69a4      	ldr	r4, [r4, #24]
 800fa5e:	e7f7      	b.n	800fa50 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800fa60:	bd38      	pop	{r3, r4, r5, pc}

0800fa62 <_ZN8touchgfx9ContainerD1Ev>:
 800fa62:	4770      	bx	lr

0800fa64 <_ZN8touchgfx9ContainerD0Ev>:
 800fa64:	b510      	push	{r4, lr}
 800fa66:	212c      	movs	r1, #44	; 0x2c
 800fa68:	4604      	mov	r4, r0
 800fa6a:	f017 ffb8 	bl	80279de <_ZdlPvj>
 800fa6e:	4620      	mov	r0, r4
 800fa70:	bd10      	pop	{r4, pc}

0800fa72 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800fa72:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fa74:	b19b      	cbz	r3, 800fa9e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800fa76:	428b      	cmp	r3, r1
 800fa78:	d109      	bne.n	800fa8e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800fa7a:	699a      	ldr	r2, [r3, #24]
 800fa7c:	2100      	movs	r1, #0
 800fa7e:	6159      	str	r1, [r3, #20]
 800fa80:	6282      	str	r2, [r0, #40]	; 0x28
 800fa82:	b902      	cbnz	r2, 800fa86 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800fa84:	4770      	bx	lr
 800fa86:	6199      	str	r1, [r3, #24]
 800fa88:	4770      	bx	lr
 800fa8a:	4613      	mov	r3, r2
 800fa8c:	b13a      	cbz	r2, 800fa9e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800fa8e:	699a      	ldr	r2, [r3, #24]
 800fa90:	428a      	cmp	r2, r1
 800fa92:	d1fa      	bne.n	800fa8a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800fa94:	698a      	ldr	r2, [r1, #24]
 800fa96:	619a      	str	r2, [r3, #24]
 800fa98:	2300      	movs	r3, #0
 800fa9a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800fa9e:	4770      	bx	lr

0800faa0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800faa0:	b410      	push	{r4}
 800faa2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800faa4:	4604      	mov	r4, r0
 800faa6:	b92b      	cbnz	r3, 800fab4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800faa8:	6803      	ldr	r3, [r0, #0]
 800faaa:	f85d 4b04 	ldr.w	r4, [sp], #4
 800faae:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800fab0:	4611      	mov	r1, r2
 800fab2:	4718      	bx	r3
 800fab4:	b941      	cbnz	r1, 800fac8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800fab6:	6193      	str	r3, [r2, #24]
 800fab8:	6282      	str	r2, [r0, #40]	; 0x28
 800faba:	6154      	str	r4, [r2, #20]
 800fabc:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fac0:	4770      	bx	lr
 800fac2:	4603      	mov	r3, r0
 800fac4:	2800      	cmp	r0, #0
 800fac6:	d0f9      	beq.n	800fabc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800fac8:	4299      	cmp	r1, r3
 800faca:	6998      	ldr	r0, [r3, #24]
 800facc:	d1f9      	bne.n	800fac2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800face:	6190      	str	r0, [r2, #24]
 800fad0:	618a      	str	r2, [r1, #24]
 800fad2:	e7f2      	b.n	800faba <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800fad4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800fad4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fad8:	461f      	mov	r7, r3
 800fada:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800fade:	460d      	mov	r5, r1
 800fae0:	4616      	mov	r6, r2
 800fae2:	b103      	cbz	r3, 800fae6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800fae4:	6038      	str	r0, [r7, #0]
 800fae6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fae8:	b314      	cbz	r4, 800fb30 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800faea:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800faee:	b1eb      	cbz	r3, 800fb2c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800faf0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800faf4:	428d      	cmp	r5, r1
 800faf6:	db19      	blt.n	800fb2c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800faf8:	8923      	ldrh	r3, [r4, #8]
 800fafa:	b289      	uxth	r1, r1
 800fafc:	440b      	add	r3, r1
 800fafe:	b21b      	sxth	r3, r3
 800fb00:	429d      	cmp	r5, r3
 800fb02:	da13      	bge.n	800fb2c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fb04:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800fb08:	4296      	cmp	r6, r2
 800fb0a:	db0f      	blt.n	800fb2c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fb0c:	8963      	ldrh	r3, [r4, #10]
 800fb0e:	b292      	uxth	r2, r2
 800fb10:	4413      	add	r3, r2
 800fb12:	b21b      	sxth	r3, r3
 800fb14:	429e      	cmp	r6, r3
 800fb16:	da09      	bge.n	800fb2c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fb18:	6823      	ldr	r3, [r4, #0]
 800fb1a:	1ab2      	subs	r2, r6, r2
 800fb1c:	1a69      	subs	r1, r5, r1
 800fb1e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800fb22:	b212      	sxth	r2, r2
 800fb24:	463b      	mov	r3, r7
 800fb26:	b209      	sxth	r1, r1
 800fb28:	4620      	mov	r0, r4
 800fb2a:	47c0      	blx	r8
 800fb2c:	69a4      	ldr	r4, [r4, #24]
 800fb2e:	e7db      	b.n	800fae8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800fb30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fb34 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800fb34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb38:	4c6e      	ldr	r4, [pc, #440]	; (800fcf4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800fb3a:	b0a1      	sub	sp, #132	; 0x84
 800fb3c:	6824      	ldr	r4, [r4, #0]
 800fb3e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800fb40:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800fb44:	9303      	str	r3, [sp, #12]
 800fb46:	2400      	movs	r4, #0
 800fb48:	802c      	strh	r4, [r5, #0]
 800fb4a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800fb4c:	802c      	strh	r4, [r5, #0]
 800fb4e:	601c      	str	r4, [r3, #0]
 800fb50:	4606      	mov	r6, r0
 800fb52:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800fb56:	f7ff ffbd 	bl	800fad4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800fb5a:	f1b9 0f03 	cmp.w	r9, #3
 800fb5e:	f340 80c2 	ble.w	800fce6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800fb62:	4631      	mov	r1, r6
 800fb64:	a80c      	add	r0, sp, #48	; 0x30
 800fb66:	f006 fb5f 	bl	8016228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fb6a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800fb6e:	9306      	str	r3, [sp, #24]
 800fb70:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800fb74:	9307      	str	r3, [sp, #28]
 800fb76:	9b03      	ldr	r3, [sp, #12]
 800fb78:	f8d3 a000 	ldr.w	sl, [r3]
 800fb7c:	f1ba 0f00 	cmp.w	sl, #0
 800fb80:	f000 80b4 	beq.w	800fcec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800fb84:	4651      	mov	r1, sl
 800fb86:	a810      	add	r0, sp, #64	; 0x40
 800fb88:	f006 fb4e 	bl	8016228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fb8c:	9b01      	ldr	r3, [sp, #4]
 800fb8e:	9a06      	ldr	r2, [sp, #24]
 800fb90:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800fb94:	189d      	adds	r5, r3, r2
 800fb96:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800fb9a:	9a07      	ldr	r2, [sp, #28]
 800fb9c:	2002      	movs	r0, #2
 800fb9e:	fb91 f1f0 	sdiv	r1, r1, r0
 800fba2:	4419      	add	r1, r3
 800fba4:	1a6d      	subs	r5, r5, r1
 800fba6:	9b02      	ldr	r3, [sp, #8]
 800fba8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800fbac:	4413      	add	r3, r2
 800fbae:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800fbb2:	fb92 f2f0 	sdiv	r2, r2, r0
 800fbb6:	440a      	add	r2, r1
 800fbb8:	1a9b      	subs	r3, r3, r2
 800fbba:	435b      	muls	r3, r3
 800fbbc:	fb05 3505 	mla	r5, r5, r5, r3
 800fbc0:	4f4d      	ldr	r7, [pc, #308]	; (800fcf8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800fbc2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800fbc4:	ac10      	add	r4, sp, #64	; 0x40
 800fbc6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800fbc8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800fbca:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800fbcc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800fbce:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800fbd0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800fbd4:	f1b9 0f0c 	cmp.w	r9, #12
 800fbd8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800fbdc:	f04f 0303 	mov.w	r3, #3
 800fbe0:	bfc8      	it	gt
 800fbe2:	4698      	movgt	r8, r3
 800fbe4:	f8cd 9000 	str.w	r9, [sp]
 800fbe8:	f04f 0400 	mov.w	r4, #0
 800fbec:	bfdc      	itt	le
 800fbee:	f109 32ff 	addle.w	r2, r9, #4294967295
 800fbf2:	fb92 f8f3 	sdivle	r8, r2, r3
 800fbf6:	1c63      	adds	r3, r4, #1
 800fbf8:	aa10      	add	r2, sp, #64	; 0x40
 800fbfa:	f004 0401 	and.w	r4, r4, #1
 800fbfe:	9308      	str	r3, [sp, #32]
 800fc00:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800fc04:	9b00      	ldr	r3, [sp, #0]
 800fc06:	fb93 f3f8 	sdiv	r3, r3, r8
 800fc0a:	b29b      	uxth	r3, r3
 800fc0c:	3404      	adds	r4, #4
 800fc0e:	f04f 0b00 	mov.w	fp, #0
 800fc12:	9304      	str	r3, [sp, #16]
 800fc14:	9a04      	ldr	r2, [sp, #16]
 800fc16:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800fc1a:	fb13 f302 	smulbb	r3, r3, r2
 800fc1e:	9a01      	ldr	r2, [sp, #4]
 800fc20:	b29b      	uxth	r3, r3
 800fc22:	1899      	adds	r1, r3, r2
 800fc24:	9305      	str	r3, [sp, #20]
 800fc26:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800fc2a:	b209      	sxth	r1, r1
 800fc2c:	4299      	cmp	r1, r3
 800fc2e:	db4d      	blt.n	800fccc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fc30:	8932      	ldrh	r2, [r6, #8]
 800fc32:	4413      	add	r3, r2
 800fc34:	b21b      	sxth	r3, r3
 800fc36:	4299      	cmp	r1, r3
 800fc38:	da48      	bge.n	800fccc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fc3a:	9b04      	ldr	r3, [sp, #16]
 800fc3c:	6827      	ldr	r7, [r4, #0]
 800fc3e:	fb17 f703 	smulbb	r7, r7, r3
 800fc42:	9b02      	ldr	r3, [sp, #8]
 800fc44:	b2bf      	uxth	r7, r7
 800fc46:	18fa      	adds	r2, r7, r3
 800fc48:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800fc4c:	b212      	sxth	r2, r2
 800fc4e:	429a      	cmp	r2, r3
 800fc50:	db3c      	blt.n	800fccc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fc52:	8970      	ldrh	r0, [r6, #10]
 800fc54:	4403      	add	r3, r0
 800fc56:	b21b      	sxth	r3, r3
 800fc58:	429a      	cmp	r2, r3
 800fc5a:	da37      	bge.n	800fccc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fc5c:	2300      	movs	r3, #0
 800fc5e:	930b      	str	r3, [sp, #44]	; 0x2c
 800fc60:	4630      	mov	r0, r6
 800fc62:	ab0b      	add	r3, sp, #44	; 0x2c
 800fc64:	f7ff ff36 	bl	800fad4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800fc68:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800fc6a:	b37a      	cbz	r2, 800fccc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fc6c:	4552      	cmp	r2, sl
 800fc6e:	d02d      	beq.n	800fccc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fc70:	4611      	mov	r1, r2
 800fc72:	a80e      	add	r0, sp, #56	; 0x38
 800fc74:	9209      	str	r2, [sp, #36]	; 0x24
 800fc76:	f006 fad7 	bl	8016228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fc7a:	9a06      	ldr	r2, [sp, #24]
 800fc7c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800fc80:	9b01      	ldr	r3, [sp, #4]
 800fc82:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800fc86:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800fc8a:	4413      	add	r3, r2
 800fc8c:	f04f 0e02 	mov.w	lr, #2
 800fc90:	fb91 f1fe 	sdiv	r1, r1, lr
 800fc94:	4401      	add	r1, r0
 800fc96:	1a58      	subs	r0, r3, r1
 800fc98:	9a07      	ldr	r2, [sp, #28]
 800fc9a:	9b02      	ldr	r3, [sp, #8]
 800fc9c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800fca0:	fb9c fcfe 	sdiv	ip, ip, lr
 800fca4:	4413      	add	r3, r2
 800fca6:	448c      	add	ip, r1
 800fca8:	eba3 030c 	sub.w	r3, r3, ip
 800fcac:	435b      	muls	r3, r3
 800fcae:	fb00 3300 	mla	r3, r0, r0, r3
 800fcb2:	42ab      	cmp	r3, r5
 800fcb4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800fcb6:	d208      	bcs.n	800fcca <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800fcb8:	9803      	ldr	r0, [sp, #12]
 800fcba:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800fcbc:	6001      	str	r1, [r0, #0]
 800fcbe:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800fcc0:	9805      	ldr	r0, [sp, #20]
 800fcc2:	8008      	strh	r0, [r1, #0]
 800fcc4:	992b      	ldr	r1, [sp, #172]	; 0xac
 800fcc6:	461d      	mov	r5, r3
 800fcc8:	800f      	strh	r7, [r1, #0]
 800fcca:	4692      	mov	sl, r2
 800fccc:	f10b 0b01 	add.w	fp, fp, #1
 800fcd0:	f1bb 0f04 	cmp.w	fp, #4
 800fcd4:	f104 0408 	add.w	r4, r4, #8
 800fcd8:	d19c      	bne.n	800fc14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800fcda:	9b00      	ldr	r3, [sp, #0]
 800fcdc:	9c08      	ldr	r4, [sp, #32]
 800fcde:	444b      	add	r3, r9
 800fce0:	4544      	cmp	r4, r8
 800fce2:	9300      	str	r3, [sp, #0]
 800fce4:	d187      	bne.n	800fbf6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800fce6:	b021      	add	sp, #132	; 0x84
 800fce8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fcec:	f04f 35ff 	mov.w	r5, #4294967295
 800fcf0:	e766      	b.n	800fbc0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800fcf2:	bf00      	nop
 800fcf4:	200137d4 	.word	0x200137d4
 800fcf8:	080296d8 	.word	0x080296d8

0800fcfc <_ZN8touchgfx4RectaNERKS0_>:
 800fcfc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fd00:	f9b1 7000 	ldrsh.w	r7, [r1]
 800fd04:	888c      	ldrh	r4, [r1, #4]
 800fd06:	f9b0 9000 	ldrsh.w	r9, [r0]
 800fd0a:	443c      	add	r4, r7
 800fd0c:	b2a4      	uxth	r4, r4
 800fd0e:	fa0f f884 	sxth.w	r8, r4
 800fd12:	45c1      	cmp	r9, r8
 800fd14:	da2f      	bge.n	800fd76 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fd16:	8882      	ldrh	r2, [r0, #4]
 800fd18:	444a      	add	r2, r9
 800fd1a:	b292      	uxth	r2, r2
 800fd1c:	fa0f fe82 	sxth.w	lr, r2
 800fd20:	4577      	cmp	r7, lr
 800fd22:	da28      	bge.n	800fd76 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fd24:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800fd28:	88cb      	ldrh	r3, [r1, #6]
 800fd2a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800fd2e:	442b      	add	r3, r5
 800fd30:	b21b      	sxth	r3, r3
 800fd32:	429e      	cmp	r6, r3
 800fd34:	da1f      	bge.n	800fd76 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fd36:	88c3      	ldrh	r3, [r0, #6]
 800fd38:	4433      	add	r3, r6
 800fd3a:	b29b      	uxth	r3, r3
 800fd3c:	fa0f fc83 	sxth.w	ip, r3
 800fd40:	4565      	cmp	r5, ip
 800fd42:	da18      	bge.n	800fd76 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fd44:	454f      	cmp	r7, r9
 800fd46:	bfb8      	it	lt
 800fd48:	464f      	movlt	r7, r9
 800fd4a:	42b5      	cmp	r5, r6
 800fd4c:	bfb8      	it	lt
 800fd4e:	4635      	movlt	r5, r6
 800fd50:	45f0      	cmp	r8, lr
 800fd52:	bfd8      	it	le
 800fd54:	4622      	movle	r2, r4
 800fd56:	1bd2      	subs	r2, r2, r7
 800fd58:	8082      	strh	r2, [r0, #4]
 800fd5a:	884a      	ldrh	r2, [r1, #2]
 800fd5c:	88c9      	ldrh	r1, [r1, #6]
 800fd5e:	8007      	strh	r7, [r0, #0]
 800fd60:	440a      	add	r2, r1
 800fd62:	b292      	uxth	r2, r2
 800fd64:	b211      	sxth	r1, r2
 800fd66:	458c      	cmp	ip, r1
 800fd68:	bfa8      	it	ge
 800fd6a:	4613      	movge	r3, r2
 800fd6c:	1b5b      	subs	r3, r3, r5
 800fd6e:	80c3      	strh	r3, [r0, #6]
 800fd70:	8045      	strh	r5, [r0, #2]
 800fd72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fd76:	2300      	movs	r3, #0
 800fd78:	8003      	strh	r3, [r0, #0]
 800fd7a:	8043      	strh	r3, [r0, #2]
 800fd7c:	8083      	strh	r3, [r0, #4]
 800fd7e:	80c3      	strh	r3, [r0, #6]
 800fd80:	e7f7      	b.n	800fd72 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800fd82 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800fd82:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fd86:	2b00      	cmp	r3, #0
 800fd88:	dd06      	ble.n	800fd98 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800fd8a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800fd8e:	2800      	cmp	r0, #0
 800fd90:	bfcc      	ite	gt
 800fd92:	2000      	movgt	r0, #0
 800fd94:	2001      	movle	r0, #1
 800fd96:	4770      	bx	lr
 800fd98:	2001      	movs	r0, #1
 800fd9a:	4770      	bx	lr

0800fd9c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800fd9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fda0:	2300      	movs	r3, #0
 800fda2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800fda4:	8003      	strh	r3, [r0, #0]
 800fda6:	4604      	mov	r4, r0
 800fda8:	8043      	strh	r3, [r0, #2]
 800fdaa:	8083      	strh	r3, [r0, #4]
 800fdac:	80c3      	strh	r3, [r0, #6]
 800fdae:	2d00      	cmp	r5, #0
 800fdb0:	d040      	beq.n	800fe34 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800fdb2:	1d28      	adds	r0, r5, #4
 800fdb4:	f7ff ffe5 	bl	800fd82 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fdb8:	b988      	cbnz	r0, 800fdde <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800fdba:	4620      	mov	r0, r4
 800fdbc:	f7ff ffe1 	bl	800fd82 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fdc0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800fdc4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800fdc8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800fdcc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800fdd0:	b138      	cbz	r0, 800fde2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800fdd2:	8022      	strh	r2, [r4, #0]
 800fdd4:	8063      	strh	r3, [r4, #2]
 800fdd6:	f8a4 e004 	strh.w	lr, [r4, #4]
 800fdda:	f8a4 c006 	strh.w	ip, [r4, #6]
 800fdde:	69ad      	ldr	r5, [r5, #24]
 800fde0:	e7e5      	b.n	800fdae <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800fde2:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fde6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fdea:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800fdee:	4290      	cmp	r0, r2
 800fdf0:	4607      	mov	r7, r0
 800fdf2:	bfa8      	it	ge
 800fdf4:	4617      	movge	r7, r2
 800fdf6:	4472      	add	r2, lr
 800fdf8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800fdfc:	8027      	strh	r7, [r4, #0]
 800fdfe:	4299      	cmp	r1, r3
 800fe00:	460e      	mov	r6, r1
 800fe02:	4440      	add	r0, r8
 800fe04:	bfa8      	it	ge
 800fe06:	461e      	movge	r6, r3
 800fe08:	4471      	add	r1, lr
 800fe0a:	4463      	add	r3, ip
 800fe0c:	b200      	sxth	r0, r0
 800fe0e:	b212      	sxth	r2, r2
 800fe10:	b209      	sxth	r1, r1
 800fe12:	b21b      	sxth	r3, r3
 800fe14:	4290      	cmp	r0, r2
 800fe16:	bfac      	ite	ge
 800fe18:	ebc7 0200 	rsbge	r2, r7, r0
 800fe1c:	ebc7 0202 	rsblt	r2, r7, r2
 800fe20:	4299      	cmp	r1, r3
 800fe22:	bfac      	ite	ge
 800fe24:	ebc6 0301 	rsbge	r3, r6, r1
 800fe28:	ebc6 0303 	rsblt	r3, r6, r3
 800fe2c:	8066      	strh	r6, [r4, #2]
 800fe2e:	80a2      	strh	r2, [r4, #4]
 800fe30:	80e3      	strh	r3, [r4, #6]
 800fe32:	e7d4      	b.n	800fdde <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800fe34:	4620      	mov	r0, r4
 800fe36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fe3a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800fe3a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800fe3e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800fe42:	b383      	cbz	r3, 800fea6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800fe44:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fe46:	b374      	cbz	r4, 800fea6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800fe48:	f9b1 5000 	ldrsh.w	r5, [r1]
 800fe4c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800fe50:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800fe54:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800fe58:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fe5c:	b303      	cbz	r3, 800fea0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800fe5e:	4668      	mov	r0, sp
 800fe60:	1d21      	adds	r1, r4, #4
 800fe62:	f8ad 5000 	strh.w	r5, [sp]
 800fe66:	f8ad 6002 	strh.w	r6, [sp, #2]
 800fe6a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800fe6e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800fe72:	f7ff ff43 	bl	800fcfc <_ZN8touchgfx4RectaNERKS0_>
 800fe76:	4668      	mov	r0, sp
 800fe78:	f7ff ff83 	bl	800fd82 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fe7c:	b980      	cbnz	r0, 800fea0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800fe7e:	f8bd 3000 	ldrh.w	r3, [sp]
 800fe82:	88a2      	ldrh	r2, [r4, #4]
 800fe84:	1a9b      	subs	r3, r3, r2
 800fe86:	f8ad 3000 	strh.w	r3, [sp]
 800fe8a:	88e2      	ldrh	r2, [r4, #6]
 800fe8c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800fe90:	1a9b      	subs	r3, r3, r2
 800fe92:	f8ad 3002 	strh.w	r3, [sp, #2]
 800fe96:	6823      	ldr	r3, [r4, #0]
 800fe98:	4669      	mov	r1, sp
 800fe9a:	689b      	ldr	r3, [r3, #8]
 800fe9c:	4620      	mov	r0, r4
 800fe9e:	4798      	blx	r3
 800fea0:	69a4      	ldr	r4, [r4, #24]
 800fea2:	2c00      	cmp	r4, #0
 800fea4:	d1d8      	bne.n	800fe58 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800fea6:	b002      	add	sp, #8
 800fea8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800feac <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800feac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800feae:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800feb2:	460d      	mov	r5, r1
 800feb4:	4616      	mov	r6, r2
 800feb6:	b323      	cbz	r3, 800ff02 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800feb8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800feba:	b314      	cbz	r4, 800ff02 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800febc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fec0:	b1eb      	cbz	r3, 800fefe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800fec2:	6828      	ldr	r0, [r5, #0]
 800fec4:	6869      	ldr	r1, [r5, #4]
 800fec6:	466b      	mov	r3, sp
 800fec8:	c303      	stmia	r3!, {r0, r1}
 800feca:	4668      	mov	r0, sp
 800fecc:	1d21      	adds	r1, r4, #4
 800fece:	f7ff ff15 	bl	800fcfc <_ZN8touchgfx4RectaNERKS0_>
 800fed2:	4668      	mov	r0, sp
 800fed4:	f7ff ff55 	bl	800fd82 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fed8:	b988      	cbnz	r0, 800fefe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800feda:	f8bd 3000 	ldrh.w	r3, [sp]
 800fede:	88a2      	ldrh	r2, [r4, #4]
 800fee0:	1a9b      	subs	r3, r3, r2
 800fee2:	f8ad 3000 	strh.w	r3, [sp]
 800fee6:	88e2      	ldrh	r2, [r4, #6]
 800fee8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800feec:	1a9b      	subs	r3, r3, r2
 800feee:	f8ad 3002 	strh.w	r3, [sp, #2]
 800fef2:	6823      	ldr	r3, [r4, #0]
 800fef4:	4632      	mov	r2, r6
 800fef6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800fef8:	4669      	mov	r1, sp
 800fefa:	4620      	mov	r0, r4
 800fefc:	4798      	blx	r3
 800fefe:	69a4      	ldr	r4, [r4, #24]
 800ff00:	e7db      	b.n	800feba <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800ff02:	b002      	add	sp, #8
 800ff04:	bd70      	pop	{r4, r5, r6, pc}

0800ff06 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800ff06:	b513      	push	{r0, r1, r4, lr}
 800ff08:	6803      	ldr	r3, [r0, #0]
 800ff0a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800ff0e:	2300      	movs	r3, #0
 800ff10:	e9cd 3300 	strd	r3, r3, [sp]
 800ff14:	466b      	mov	r3, sp
 800ff16:	47a0      	blx	r4
 800ff18:	b002      	add	sp, #8
 800ff1a:	bd10      	pop	{r4, pc}

0800ff1c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800ff1c:	2301      	movs	r3, #1
 800ff1e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800ff22:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800ff26:	4770      	bx	lr

0800ff28 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800ff28:	2301      	movs	r3, #1
 800ff2a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800ff2e:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800ff32:	4770      	bx	lr

0800ff34 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800ff34:	6843      	ldr	r3, [r0, #4]
 800ff36:	2201      	movs	r2, #1
 800ff38:	725a      	strb	r2, [r3, #9]
 800ff3a:	6840      	ldr	r0, [r0, #4]
 800ff3c:	6803      	ldr	r3, [r0, #0]
 800ff3e:	691b      	ldr	r3, [r3, #16]
 800ff40:	4718      	bx	r3

0800ff42 <_ZN8touchgfx3HAL8flushDMAEv>:
 800ff42:	6840      	ldr	r0, [r0, #4]
 800ff44:	6803      	ldr	r3, [r0, #0]
 800ff46:	689b      	ldr	r3, [r3, #8]
 800ff48:	4718      	bx	r3

0800ff4a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800ff4a:	b530      	push	{r4, r5, lr}
 800ff4c:	b08b      	sub	sp, #44	; 0x2c
 800ff4e:	6804      	ldr	r4, [r0, #0]
 800ff50:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800ff54:	9509      	str	r5, [sp, #36]	; 0x24
 800ff56:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800ff5a:	9508      	str	r5, [sp, #32]
 800ff5c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800ff60:	9507      	str	r5, [sp, #28]
 800ff62:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800ff66:	9506      	str	r5, [sp, #24]
 800ff68:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800ff6c:	9505      	str	r5, [sp, #20]
 800ff6e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800ff72:	9504      	str	r5, [sp, #16]
 800ff74:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800ff78:	9503      	str	r5, [sp, #12]
 800ff7a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800ff7e:	9502      	str	r5, [sp, #8]
 800ff80:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800ff84:	e9cd 3500 	strd	r3, r5, [sp]
 800ff88:	4613      	mov	r3, r2
 800ff8a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800ff8c:	2200      	movs	r2, #0
 800ff8e:	47a0      	blx	r4
 800ff90:	b00b      	add	sp, #44	; 0x2c
 800ff92:	bd30      	pop	{r4, r5, pc}

0800ff94 <_ZN8touchgfx3HAL10beginFrameEv>:
 800ff94:	4b04      	ldr	r3, [pc, #16]	; (800ffa8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800ff96:	781b      	ldrb	r3, [r3, #0]
 800ff98:	b123      	cbz	r3, 800ffa4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800ff9a:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 800ff9e:	f080 0001 	eor.w	r0, r0, #1
 800ffa2:	4770      	bx	lr
 800ffa4:	2001      	movs	r0, #1
 800ffa6:	4770      	bx	lr
 800ffa8:	200137d2 	.word	0x200137d2

0800ffac <_ZN8touchgfx3HAL8endFrameEv>:
 800ffac:	b510      	push	{r4, lr}
 800ffae:	4604      	mov	r4, r0
 800ffb0:	6840      	ldr	r0, [r0, #4]
 800ffb2:	6803      	ldr	r3, [r0, #0]
 800ffb4:	689b      	ldr	r3, [r3, #8]
 800ffb6:	4798      	blx	r3
 800ffb8:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 800ffbc:	b113      	cbz	r3, 800ffc4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800ffbe:	2301      	movs	r3, #1
 800ffc0:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800ffc4:	bd10      	pop	{r4, pc}

0800ffc6 <_ZN8touchgfx3HAL10initializeEv>:
 800ffc6:	b510      	push	{r4, lr}
 800ffc8:	4604      	mov	r4, r0
 800ffca:	f7f0 fd0f 	bl	80009ec <_ZN8touchgfx10OSWrappers10initializeEv>
 800ffce:	f7f0 fc1b 	bl	8000808 <_ZN8touchgfx4GPIO4initEv>
 800ffd2:	6860      	ldr	r0, [r4, #4]
 800ffd4:	6803      	ldr	r3, [r0, #0]
 800ffd6:	68db      	ldr	r3, [r3, #12]
 800ffd8:	4798      	blx	r3
 800ffda:	68e0      	ldr	r0, [r4, #12]
 800ffdc:	6803      	ldr	r3, [r0, #0]
 800ffde:	689b      	ldr	r3, [r3, #8]
 800ffe0:	4798      	blx	r3
 800ffe2:	6823      	ldr	r3, [r4, #0]
 800ffe4:	4620      	mov	r0, r4
 800ffe6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800ffe8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ffec:	4718      	bx	r3
	...

0800fff0 <_ZN8touchgfx3HAL4tickEv>:
 800fff0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fff2:	6803      	ldr	r3, [r0, #0]
 800fff4:	4d5b      	ldr	r5, [pc, #364]	; (8010164 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800fff6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800fffa:	4604      	mov	r4, r0
 800fffc:	4798      	blx	r3
 800fffe:	2800      	cmp	r0, #0
 8010000:	f000 8095 	beq.w	801012e <_ZN8touchgfx3HAL4tickEv+0x13e>
 8010004:	2001      	movs	r0, #1
 8010006:	f7f0 fbb1 	bl	800076c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801000a:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 801000e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010012:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 8010016:	2600      	movs	r6, #0
 8010018:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 801001c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8010020:	b133      	cbz	r3, 8010030 <_ZN8touchgfx3HAL4tickEv+0x40>
 8010022:	6823      	ldr	r3, [r4, #0]
 8010024:	4620      	mov	r0, r4
 8010026:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 801002a:	4798      	blx	r3
 801002c:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8010030:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8010034:	6862      	ldr	r2, [r4, #4]
 8010036:	f083 0301 	eor.w	r3, r3, #1
 801003a:	7253      	strb	r3, [r2, #9]
 801003c:	2601      	movs	r6, #1
 801003e:	702e      	strb	r6, [r5, #0]
 8010040:	f004 ff6e 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
 8010044:	6803      	ldr	r3, [r0, #0]
 8010046:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010048:	4798      	blx	r3
 801004a:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 801004e:	b90b      	cbnz	r3, 8010054 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010050:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 8010054:	f004 ff64 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
 8010058:	6803      	ldr	r3, [r0, #0]
 801005a:	695b      	ldr	r3, [r3, #20]
 801005c:	4798      	blx	r3
 801005e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010060:	6803      	ldr	r3, [r0, #0]
 8010062:	691b      	ldr	r3, [r3, #16]
 8010064:	4798      	blx	r3
 8010066:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 801006a:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 801006e:	3b01      	subs	r3, #1
 8010070:	b2db      	uxtb	r3, r3
 8010072:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010076:	b10a      	cbz	r2, 801007c <_ZN8touchgfx3HAL4tickEv+0x8c>
 8010078:	2b00      	cmp	r3, #0
 801007a:	d1eb      	bne.n	8010054 <_ZN8touchgfx3HAL4tickEv+0x64>
 801007c:	4a3a      	ldr	r2, [pc, #232]	; (8010168 <_ZN8touchgfx3HAL4tickEv+0x178>)
 801007e:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 8010082:	7813      	ldrb	r3, [r2, #0]
 8010084:	3301      	adds	r3, #1
 8010086:	b25b      	sxtb	r3, r3
 8010088:	4299      	cmp	r1, r3
 801008a:	7013      	strb	r3, [r2, #0]
 801008c:	dc10      	bgt.n	80100b0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 801008e:	68e0      	ldr	r0, [r4, #12]
 8010090:	2300      	movs	r3, #0
 8010092:	7013      	strb	r3, [r2, #0]
 8010094:	6803      	ldr	r3, [r0, #0]
 8010096:	aa03      	add	r2, sp, #12
 8010098:	68db      	ldr	r3, [r3, #12]
 801009a:	a902      	add	r1, sp, #8
 801009c:	4798      	blx	r3
 801009e:	6823      	ldr	r3, [r4, #0]
 80100a0:	2800      	cmp	r0, #0
 80100a2:	d050      	beq.n	8010146 <_ZN8touchgfx3HAL4tickEv+0x156>
 80100a4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80100a8:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 80100ac:	4620      	mov	r0, r4
 80100ae:	4798      	blx	r3
 80100b0:	6960      	ldr	r0, [r4, #20]
 80100b2:	2300      	movs	r3, #0
 80100b4:	f88d 3007 	strb.w	r3, [sp, #7]
 80100b8:	b158      	cbz	r0, 80100d2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 80100ba:	6803      	ldr	r3, [r0, #0]
 80100bc:	f10d 0107 	add.w	r1, sp, #7
 80100c0:	68db      	ldr	r3, [r3, #12]
 80100c2:	4798      	blx	r3
 80100c4:	b128      	cbz	r0, 80100d2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 80100c6:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 80100c8:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80100cc:	6803      	ldr	r3, [r0, #0]
 80100ce:	68db      	ldr	r3, [r3, #12]
 80100d0:	4798      	blx	r3
 80100d2:	f104 001c 	add.w	r0, r4, #28
 80100d6:	f015 fcc5 	bl	8025a64 <_ZN8touchgfx8Gestures4tickEv>
 80100da:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 80100de:	b30b      	cbz	r3, 8010124 <_ZN8touchgfx3HAL4tickEv+0x134>
 80100e0:	6920      	ldr	r0, [r4, #16]
 80100e2:	6803      	ldr	r3, [r0, #0]
 80100e4:	691b      	ldr	r3, [r3, #16]
 80100e6:	4798      	blx	r3
 80100e8:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80100ea:	4606      	mov	r6, r0
 80100ec:	b903      	cbnz	r3, 80100f0 <_ZN8touchgfx3HAL4tickEv+0x100>
 80100ee:	6760      	str	r0, [r4, #116]	; 0x74
 80100f0:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80100f2:	4a1e      	ldr	r2, [pc, #120]	; (801016c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 80100f4:	1af3      	subs	r3, r6, r3
 80100f6:	4293      	cmp	r3, r2
 80100f8:	d914      	bls.n	8010124 <_ZN8touchgfx3HAL4tickEv+0x134>
 80100fa:	6920      	ldr	r0, [r4, #16]
 80100fc:	6803      	ldr	r3, [r0, #0]
 80100fe:	699b      	ldr	r3, [r3, #24]
 8010100:	4798      	blx	r3
 8010102:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010104:	2264      	movs	r2, #100	; 0x64
 8010106:	1af3      	subs	r3, r6, r3
 8010108:	fbb3 f3f2 	udiv	r3, r3, r2
 801010c:	fbb0 f0f3 	udiv	r0, r0, r3
 8010110:	2800      	cmp	r0, #0
 8010112:	dc1d      	bgt.n	8010150 <_ZN8touchgfx3HAL4tickEv+0x160>
 8010114:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8010118:	6920      	ldr	r0, [r4, #16]
 801011a:	6803      	ldr	r3, [r0, #0]
 801011c:	2100      	movs	r1, #0
 801011e:	69db      	ldr	r3, [r3, #28]
 8010120:	4798      	blx	r3
 8010122:	6766      	str	r6, [r4, #116]	; 0x74
 8010124:	f004 fefc 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
 8010128:	6803      	ldr	r3, [r0, #0]
 801012a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801012c:	4798      	blx	r3
 801012e:	6823      	ldr	r3, [r4, #0]
 8010130:	4620      	mov	r0, r4
 8010132:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8010136:	4798      	blx	r3
 8010138:	2001      	movs	r0, #1
 801013a:	f7f0 fb2f 	bl	800079c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801013e:	2300      	movs	r3, #0
 8010140:	702b      	strb	r3, [r5, #0]
 8010142:	b004      	add	sp, #16
 8010144:	bd70      	pop	{r4, r5, r6, pc}
 8010146:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 801014a:	4620      	mov	r0, r4
 801014c:	4798      	blx	r3
 801014e:	e7af      	b.n	80100b0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010150:	2863      	cmp	r0, #99	; 0x63
 8010152:	bfcb      	itete	gt
 8010154:	2300      	movgt	r3, #0
 8010156:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 801015a:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 801015e:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 8010162:	e7d9      	b.n	8010118 <_ZN8touchgfx3HAL4tickEv+0x128>
 8010164:	200137d8 	.word	0x200137d8
 8010168:	200137d9 	.word	0x200137d9
 801016c:	05f5e100 	.word	0x05f5e100

08010170 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8010170:	b510      	push	{r4, lr}
 8010172:	4604      	mov	r4, r0
 8010174:	f7f0 fc6a 	bl	8000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8010178:	6863      	ldr	r3, [r4, #4]
 801017a:	2200      	movs	r2, #0
 801017c:	729a      	strb	r2, [r3, #10]
 801017e:	bd10      	pop	{r4, pc}

08010180 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8010180:	65c1      	str	r1, [r0, #92]	; 0x5c
 8010182:	301c      	adds	r0, #28
 8010184:	f015 bc6c 	b.w	8025a60 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08010188 <_ZN8touchgfx3HAL5touchEll>:
 8010188:	b530      	push	{r4, r5, lr}
 801018a:	b087      	sub	sp, #28
 801018c:	4604      	mov	r4, r0
 801018e:	a804      	add	r0, sp, #16
 8010190:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8010194:	f004 fc90 	bl	8014ab8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8010198:	9b04      	ldr	r3, [sp, #16]
 801019a:	f8ad 300c 	strh.w	r3, [sp, #12]
 801019e:	a906      	add	r1, sp, #24
 80101a0:	9b05      	ldr	r3, [sp, #20]
 80101a2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 80101a6:	a803      	add	r0, sp, #12
 80101a8:	f004 fcd8 	bl	8014b5c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 80101ac:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 80101b0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80101b4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80101b8:	f104 001c 	add.w	r0, r4, #28
 80101bc:	b189      	cbz	r1, 80101e2 <_ZN8touchgfx3HAL5touchEll+0x5a>
 80101be:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 80101c2:	9300      	str	r3, [sp, #0]
 80101c4:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 80101c8:	4613      	mov	r3, r2
 80101ca:	462a      	mov	r2, r5
 80101cc:	f015 fc58 	bl	8025a80 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 80101d0:	b128      	cbz	r0, 80101de <_ZN8touchgfx3HAL5touchEll+0x56>
 80101d2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80101d6:	6623      	str	r3, [r4, #96]	; 0x60
 80101d8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80101dc:	6663      	str	r3, [r4, #100]	; 0x64
 80101de:	b007      	add	sp, #28
 80101e0:	bd30      	pop	{r4, r5, pc}
 80101e2:	f015 fc8d 	bl	8025b00 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80101e6:	2301      	movs	r3, #1
 80101e8:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 80101ec:	e7f1      	b.n	80101d2 <_ZN8touchgfx3HAL5touchEll+0x4a>

080101ee <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 80101ee:	b510      	push	{r4, lr}
 80101f0:	2b00      	cmp	r3, #0
 80101f2:	d046      	beq.n	8010282 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80101f4:	ea81 0002 	eor.w	r0, r1, r2
 80101f8:	07c4      	lsls	r4, r0, #31
 80101fa:	d508      	bpl.n	801020e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 80101fc:	440b      	add	r3, r1
 80101fe:	3a01      	subs	r2, #1
 8010200:	428b      	cmp	r3, r1
 8010202:	d93e      	bls.n	8010282 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010204:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010208:	f801 0b01 	strb.w	r0, [r1], #1
 801020c:	e7f8      	b.n	8010200 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 801020e:	07d0      	lsls	r0, r2, #31
 8010210:	bf42      	ittt	mi
 8010212:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8010216:	f801 0b01 	strbmi.w	r0, [r1], #1
 801021a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 801021e:	2b01      	cmp	r3, #1
 8010220:	d911      	bls.n	8010246 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010222:	ea81 0402 	eor.w	r4, r1, r2
 8010226:	07a4      	lsls	r4, r4, #30
 8010228:	4610      	mov	r0, r2
 801022a:	d022      	beq.n	8010272 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 801022c:	f023 0401 	bic.w	r4, r3, #1
 8010230:	440c      	add	r4, r1
 8010232:	428c      	cmp	r4, r1
 8010234:	4602      	mov	r2, r0
 8010236:	d904      	bls.n	8010242 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8010238:	8812      	ldrh	r2, [r2, #0]
 801023a:	f821 2b02 	strh.w	r2, [r1], #2
 801023e:	3002      	adds	r0, #2
 8010240:	e7f7      	b.n	8010232 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8010242:	f003 0301 	and.w	r3, r3, #1
 8010246:	f023 0003 	bic.w	r0, r3, #3
 801024a:	4408      	add	r0, r1
 801024c:	4288      	cmp	r0, r1
 801024e:	4614      	mov	r4, r2
 8010250:	d904      	bls.n	801025c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8010252:	6824      	ldr	r4, [r4, #0]
 8010254:	f841 4b04 	str.w	r4, [r1], #4
 8010258:	3204      	adds	r2, #4
 801025a:	e7f7      	b.n	801024c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 801025c:	f003 0303 	and.w	r3, r3, #3
 8010260:	440b      	add	r3, r1
 8010262:	3a01      	subs	r2, #1
 8010264:	428b      	cmp	r3, r1
 8010266:	d90c      	bls.n	8010282 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010268:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 801026c:	f801 0b01 	strb.w	r0, [r1], #1
 8010270:	e7f8      	b.n	8010264 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8010272:	0790      	lsls	r0, r2, #30
 8010274:	d0e7      	beq.n	8010246 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010276:	f832 0b02 	ldrh.w	r0, [r2], #2
 801027a:	f821 0b02 	strh.w	r0, [r1], #2
 801027e:	3b02      	subs	r3, #2
 8010280:	e7e1      	b.n	8010246 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010282:	2001      	movs	r0, #1
 8010284:	bd10      	pop	{r4, pc}

08010286 <_ZN8touchgfx3HAL7noTouchEv>:
 8010286:	b510      	push	{r4, lr}
 8010288:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 801028c:	4604      	mov	r4, r0
 801028e:	b153      	cbz	r3, 80102a6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8010290:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8010294:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8010298:	2101      	movs	r1, #1
 801029a:	301c      	adds	r0, #28
 801029c:	f015 fc30 	bl	8025b00 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80102a0:	2300      	movs	r3, #0
 80102a2:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 80102a6:	bd10      	pop	{r4, pc}

080102a8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 80102a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80102ac:	b085      	sub	sp, #20
 80102ae:	ad04      	add	r5, sp, #16
 80102b0:	4604      	mov	r4, r0
 80102b2:	2000      	movs	r0, #0
 80102b4:	f845 0d04 	str.w	r0, [r5, #-4]!
 80102b8:	69a0      	ldr	r0, [r4, #24]
 80102ba:	6806      	ldr	r6, [r0, #0]
 80102bc:	9501      	str	r5, [sp, #4]
 80102be:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 80102c2:	9500      	str	r5, [sp, #0]
 80102c4:	6835      	ldr	r5, [r6, #0]
 80102c6:	4699      	mov	r9, r3
 80102c8:	460f      	mov	r7, r1
 80102ca:	4690      	mov	r8, r2
 80102cc:	47a8      	blx	r5
 80102ce:	4d10      	ldr	r5, [pc, #64]	; (8010310 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 80102d0:	4606      	mov	r6, r0
 80102d2:	f8a5 9000 	strh.w	r9, [r5]
 80102d6:	f7f3 f9ed 	bl	80036b4 <_ZN8touchgfx3HAL3lcdEv>
 80102da:	6803      	ldr	r3, [r0, #0]
 80102dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80102de:	4798      	blx	r3
 80102e0:	b128      	cbz	r0, 80102ee <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 80102e2:	2801      	cmp	r0, #1
 80102e4:	d00b      	beq.n	80102fe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 80102e6:	4630      	mov	r0, r6
 80102e8:	b005      	add	sp, #20
 80102ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80102ee:	882b      	ldrh	r3, [r5, #0]
 80102f0:	fb08 7203 	mla	r2, r8, r3, r7
 80102f4:	9b03      	ldr	r3, [sp, #12]
 80102f6:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 80102fa:	63e3      	str	r3, [r4, #60]	; 0x3c
 80102fc:	e7f3      	b.n	80102e6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 80102fe:	882a      	ldrh	r2, [r5, #0]
 8010300:	9b03      	ldr	r3, [sp, #12]
 8010302:	fb08 7202 	mla	r2, r8, r2, r7
 8010306:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801030a:	1a9a      	subs	r2, r3, r2
 801030c:	63e2      	str	r2, [r4, #60]	; 0x3c
 801030e:	e7ea      	b.n	80102e6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010310:	200137ce 	.word	0x200137ce

08010314 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8010314:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010316:	b08b      	sub	sp, #44	; 0x2c
 8010318:	4617      	mov	r7, r2
 801031a:	4604      	mov	r4, r0
 801031c:	460e      	mov	r6, r1
 801031e:	461d      	mov	r5, r3
 8010320:	f7f3 f9c8 	bl	80036b4 <_ZN8touchgfx3HAL3lcdEv>
 8010324:	6803      	ldr	r3, [r0, #0]
 8010326:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010328:	4798      	blx	r3
 801032a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801032e:	9007      	str	r0, [sp, #28]
 8010330:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010334:	4b0d      	ldr	r3, [pc, #52]	; (801036c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8010336:	6822      	ldr	r2, [r4, #0]
 8010338:	881b      	ldrh	r3, [r3, #0]
 801033a:	9306      	str	r3, [sp, #24]
 801033c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8010340:	9305      	str	r3, [sp, #20]
 8010342:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8010346:	9304      	str	r3, [sp, #16]
 8010348:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801034c:	9303      	str	r3, [sp, #12]
 801034e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010352:	9302      	str	r3, [sp, #8]
 8010354:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010358:	e9cd 5300 	strd	r5, r3, [sp]
 801035c:	4631      	mov	r1, r6
 801035e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8010360:	463b      	mov	r3, r7
 8010362:	2200      	movs	r2, #0
 8010364:	4620      	mov	r0, r4
 8010366:	47a8      	blx	r5
 8010368:	b00b      	add	sp, #44	; 0x2c
 801036a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801036c:	200137ce 	.word	0x200137ce

08010370 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8010370:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010374:	4698      	mov	r8, r3
 8010376:	6803      	ldr	r3, [r0, #0]
 8010378:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 801037a:	4b15      	ldr	r3, [pc, #84]	; (80103d0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 801037c:	b08b      	sub	sp, #44	; 0x2c
 801037e:	4617      	mov	r7, r2
 8010380:	f8b3 9000 	ldrh.w	r9, [r3]
 8010384:	460e      	mov	r6, r1
 8010386:	4604      	mov	r4, r0
 8010388:	f7f3 f994 	bl	80036b4 <_ZN8touchgfx3HAL3lcdEv>
 801038c:	6803      	ldr	r3, [r0, #0]
 801038e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010390:	4798      	blx	r3
 8010392:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8010396:	e9cd 0308 	strd	r0, r3, [sp, #32]
 801039a:	2302      	movs	r3, #2
 801039c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 80103a0:	2301      	movs	r3, #1
 80103a2:	9305      	str	r3, [sp, #20]
 80103a4:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80103a8:	9304      	str	r3, [sp, #16]
 80103aa:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80103ae:	9303      	str	r3, [sp, #12]
 80103b0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80103b4:	9302      	str	r3, [sp, #8]
 80103b6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80103ba:	2200      	movs	r2, #0
 80103bc:	e9cd 8300 	strd	r8, r3, [sp]
 80103c0:	4631      	mov	r1, r6
 80103c2:	463b      	mov	r3, r7
 80103c4:	4620      	mov	r0, r4
 80103c6:	47a8      	blx	r5
 80103c8:	b00b      	add	sp, #44	; 0x2c
 80103ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80103ce:	bf00      	nop
 80103d0:	200137ce 	.word	0x200137ce

080103d4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 80103d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80103d8:	4698      	mov	r8, r3
 80103da:	6803      	ldr	r3, [r0, #0]
 80103dc:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 80103de:	4b11      	ldr	r3, [pc, #68]	; (8010424 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 80103e0:	b087      	sub	sp, #28
 80103e2:	f8b3 9000 	ldrh.w	r9, [r3]
 80103e6:	460e      	mov	r6, r1
 80103e8:	4617      	mov	r7, r2
 80103ea:	4604      	mov	r4, r0
 80103ec:	f7f3 f962 	bl	80036b4 <_ZN8touchgfx3HAL3lcdEv>
 80103f0:	6803      	ldr	r3, [r0, #0]
 80103f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80103f4:	4798      	blx	r3
 80103f6:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 80103fa:	f8cd 900c 	str.w	r9, [sp, #12]
 80103fe:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8010402:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8010406:	9302      	str	r3, [sp, #8]
 8010408:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 801040c:	9301      	str	r3, [sp, #4]
 801040e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8010412:	9300      	str	r3, [sp, #0]
 8010414:	463a      	mov	r2, r7
 8010416:	4643      	mov	r3, r8
 8010418:	4631      	mov	r1, r6
 801041a:	4620      	mov	r0, r4
 801041c:	47a8      	blx	r5
 801041e:	b007      	add	sp, #28
 8010420:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010424:	200137ce 	.word	0x200137ce

08010428 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8010428:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801042c:	4604      	mov	r4, r0
 801042e:	b08f      	sub	sp, #60	; 0x3c
 8010430:	4610      	mov	r0, r2
 8010432:	460d      	mov	r5, r1
 8010434:	4691      	mov	r9, r2
 8010436:	461e      	mov	r6, r3
 8010438:	f007 fefc 	bl	8018234 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801043c:	2800      	cmp	r0, #0
 801043e:	f000 809d 	beq.w	801057c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8010442:	6823      	ldr	r3, [r4, #0]
 8010444:	f8df b198 	ldr.w	fp, [pc, #408]	; 80105e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8010448:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801044a:	f8df a198 	ldr.w	sl, [pc, #408]	; 80105e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 801044e:	4f61      	ldr	r7, [pc, #388]	; (80105d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010450:	4620      	mov	r0, r4
 8010452:	4798      	blx	r3
 8010454:	6823      	ldr	r3, [r4, #0]
 8010456:	4620      	mov	r0, r4
 8010458:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801045a:	4798      	blx	r3
 801045c:	f8bb 3000 	ldrh.w	r3, [fp]
 8010460:	9301      	str	r3, [sp, #4]
 8010462:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8010466:	f8ba 3000 	ldrh.w	r3, [sl]
 801046a:	9302      	str	r3, [sp, #8]
 801046c:	883b      	ldrh	r3, [r7, #0]
 801046e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8010472:	9303      	str	r3, [sp, #12]
 8010474:	4b58      	ldr	r3, [pc, #352]	; (80105d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010476:	9305      	str	r3, [sp, #20]
 8010478:	881a      	ldrh	r2, [r3, #0]
 801047a:	9204      	str	r2, [sp, #16]
 801047c:	4640      	mov	r0, r8
 801047e:	f007 ff6d 	bl	801835c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010482:	8038      	strh	r0, [r7, #0]
 8010484:	4640      	mov	r0, r8
 8010486:	f007 ff9d 	bl	80183c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801048a:	9b05      	ldr	r3, [sp, #20]
 801048c:	b280      	uxth	r0, r0
 801048e:	8018      	strh	r0, [r3, #0]
 8010490:	4b52      	ldr	r3, [pc, #328]	; (80105dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8010492:	781b      	ldrb	r3, [r3, #0]
 8010494:	2b00      	cmp	r3, #0
 8010496:	d174      	bne.n	8010582 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8010498:	883b      	ldrh	r3, [r7, #0]
 801049a:	f8ab 3000 	strh.w	r3, [fp]
 801049e:	f8aa 0000 	strh.w	r0, [sl]
 80104a2:	4648      	mov	r0, r9
 80104a4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 80104a8:	f007 fec4 	bl	8018234 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80104ac:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 80104b0:	2200      	movs	r2, #0
 80104b2:	4611      	mov	r1, r2
 80104b4:	4628      	mov	r0, r5
 80104b6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 80104ba:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 80104be:	f7f2 f83e 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 80104c2:	2301      	movs	r3, #1
 80104c4:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 80104c8:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 80104cc:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80104d0:	2b00      	cmp	r3, #0
 80104d2:	dd5c      	ble.n	801058e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80104d4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80104d8:	2b00      	cmp	r3, #0
 80104da:	dd58      	ble.n	801058e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80104dc:	462a      	mov	r2, r5
 80104de:	ab0a      	add	r3, sp, #40	; 0x28
 80104e0:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80104e4:	6851      	ldr	r1, [r2, #4]
 80104e6:	c303      	stmia	r3!, {r0, r1}
 80104e8:	4631      	mov	r1, r6
 80104ea:	a80a      	add	r0, sp, #40	; 0x28
 80104ec:	f7ff fc06 	bl	800fcfc <_ZN8touchgfx4RectaNERKS0_>
 80104f0:	4b38      	ldr	r3, [pc, #224]	; (80105d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80104f2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80104f6:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80104fa:	2100      	movs	r1, #0
 80104fc:	aa0a      	add	r2, sp, #40	; 0x28
 80104fe:	4b36      	ldr	r3, [pc, #216]	; (80105d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010500:	910c      	str	r1, [sp, #48]	; 0x30
 8010502:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010506:	f9b3 3000 	ldrsh.w	r3, [r3]
 801050a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801050e:	ab08      	add	r3, sp, #32
 8010510:	e883 0003 	stmia.w	r3, {r0, r1}
 8010514:	4618      	mov	r0, r3
 8010516:	a90c      	add	r1, sp, #48	; 0x30
 8010518:	f7ff fbf0 	bl	800fcfc <_ZN8touchgfx4RectaNERKS0_>
 801051c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 801051e:	2b00      	cmp	r3, #0
 8010520:	d13c      	bne.n	801059c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8010522:	2000      	movs	r0, #0
 8010524:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8010528:	2600      	movs	r6, #0
 801052a:	682a      	ldr	r2, [r5, #0]
 801052c:	696b      	ldr	r3, [r5, #20]
 801052e:	616e      	str	r6, [r5, #20]
 8010530:	9305      	str	r3, [sp, #20]
 8010532:	6892      	ldr	r2, [r2, #8]
 8010534:	a908      	add	r1, sp, #32
 8010536:	4628      	mov	r0, r5
 8010538:	4790      	blx	r2
 801053a:	9b05      	ldr	r3, [sp, #20]
 801053c:	616b      	str	r3, [r5, #20]
 801053e:	4652      	mov	r2, sl
 8010540:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8010544:	4649      	mov	r1, r9
 8010546:	4628      	mov	r0, r5
 8010548:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 801054c:	f7f1 fff7 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8010550:	4b23      	ldr	r3, [pc, #140]	; (80105e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8010552:	9a01      	ldr	r2, [sp, #4]
 8010554:	801a      	strh	r2, [r3, #0]
 8010556:	4b23      	ldr	r3, [pc, #140]	; (80105e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8010558:	9a02      	ldr	r2, [sp, #8]
 801055a:	801a      	strh	r2, [r3, #0]
 801055c:	4b1d      	ldr	r3, [pc, #116]	; (80105d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801055e:	9a03      	ldr	r2, [sp, #12]
 8010560:	801a      	strh	r2, [r3, #0]
 8010562:	4b1d      	ldr	r3, [pc, #116]	; (80105d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010564:	9a04      	ldr	r2, [sp, #16]
 8010566:	801a      	strh	r2, [r3, #0]
 8010568:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 801056c:	6823      	ldr	r3, [r4, #0]
 801056e:	4620      	mov	r0, r4
 8010570:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010572:	4798      	blx	r3
 8010574:	6823      	ldr	r3, [r4, #0]
 8010576:	4620      	mov	r0, r4
 8010578:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801057a:	4798      	blx	r3
 801057c:	b00f      	add	sp, #60	; 0x3c
 801057e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010582:	883b      	ldrh	r3, [r7, #0]
 8010584:	f8ab 0000 	strh.w	r0, [fp]
 8010588:	f8aa 3000 	strh.w	r3, [sl]
 801058c:	e789      	b.n	80104a2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 801058e:	462a      	mov	r2, r5
 8010590:	ab0a      	add	r3, sp, #40	; 0x28
 8010592:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010596:	6851      	ldr	r1, [r2, #4]
 8010598:	c303      	stmia	r3!, {r0, r1}
 801059a:	e7a9      	b.n	80104f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 801059c:	a807      	add	r0, sp, #28
 801059e:	f008 f84d 	bl	801863c <_ZNK8touchgfx6Bitmap9getFormatEv>
 80105a2:	4606      	mov	r6, r0
 80105a4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80105a6:	6803      	ldr	r3, [r0, #0]
 80105a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80105aa:	4798      	blx	r3
 80105ac:	4286      	cmp	r6, r0
 80105ae:	d1b8      	bne.n	8010522 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 80105b0:	f7f3 f880 	bl	80036b4 <_ZN8touchgfx3HAL3lcdEv>
 80105b4:	6803      	ldr	r3, [r0, #0]
 80105b6:	4606      	mov	r6, r0
 80105b8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80105ba:	9305      	str	r3, [sp, #20]
 80105bc:	a807      	add	r0, sp, #28
 80105be:	f008 f83d 	bl	801863c <_ZNK8touchgfx6Bitmap9getFormatEv>
 80105c2:	9b05      	ldr	r3, [sp, #20]
 80105c4:	4601      	mov	r1, r0
 80105c6:	4630      	mov	r0, r6
 80105c8:	4798      	blx	r3
 80105ca:	f080 0001 	eor.w	r0, r0, #1
 80105ce:	b2c0      	uxtb	r0, r0
 80105d0:	e7a8      	b.n	8010524 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 80105d2:	bf00      	nop
 80105d4:	200137c8 	.word	0x200137c8
 80105d8:	200137ca 	.word	0x200137ca
 80105dc:	200137cc 	.word	0x200137cc
 80105e0:	200137ce 	.word	0x200137ce
 80105e4:	200137d0 	.word	0x200137d0

080105e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 80105e8:	b510      	push	{r4, lr}
 80105ea:	4b07      	ldr	r3, [pc, #28]	; (8010608 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 80105ec:	781b      	ldrb	r3, [r3, #0]
 80105ee:	4604      	mov	r4, r0
 80105f0:	b13b      	cbz	r3, 8010602 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80105f2:	6803      	ldr	r3, [r0, #0]
 80105f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80105f6:	4798      	blx	r3
 80105f8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80105fa:	4283      	cmp	r3, r0
 80105fc:	d101      	bne.n	8010602 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80105fe:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8010600:	bd10      	pop	{r4, pc}
 8010602:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010604:	e7fc      	b.n	8010600 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8010606:	bf00      	nop
 8010608:	200137d2 	.word	0x200137d2

0801060c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 801060c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010610:	b08a      	sub	sp, #40	; 0x28
 8010612:	461d      	mov	r5, r3
 8010614:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010618:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801061c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010620:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010624:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010628:	f8ad 301a 	strh.w	r3, [sp, #26]
 801062c:	2400      	movs	r4, #0
 801062e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010632:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8010636:	f8ad 301c 	strh.w	r3, [sp, #28]
 801063a:	4690      	mov	r8, r2
 801063c:	4607      	mov	r7, r0
 801063e:	9404      	str	r4, [sp, #16]
 8010640:	f88d 4020 	strb.w	r4, [sp, #32]
 8010644:	f7ff ffd0 	bl	80105e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010648:	fb06 8505 	mla	r5, r6, r5, r8
 801064c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010650:	6878      	ldr	r0, [r7, #4]
 8010652:	9505      	str	r5, [sp, #20]
 8010654:	f8ad 601e 	strh.w	r6, [sp, #30]
 8010658:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 801065c:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8010660:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8010664:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010668:	6803      	ldr	r3, [r0, #0]
 801066a:	a901      	add	r1, sp, #4
 801066c:	685b      	ldr	r3, [r3, #4]
 801066e:	4798      	blx	r3
 8010670:	b00a      	add	sp, #40	; 0x28
 8010672:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010676 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8010676:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801067a:	b08b      	sub	sp, #44	; 0x2c
 801067c:	2400      	movs	r4, #0
 801067e:	461d      	mov	r5, r3
 8010680:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8010684:	4688      	mov	r8, r1
 8010686:	4691      	mov	r9, r2
 8010688:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 801068c:	9404      	str	r4, [sp, #16]
 801068e:	4607      	mov	r7, r0
 8010690:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010694:	f7ff ffa8 	bl	80105e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010698:	fb06 9505 	mla	r5, r6, r5, r9
 801069c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80106a0:	f8ad 3018 	strh.w	r3, [sp, #24]
 80106a4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80106a8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80106ac:	6878      	ldr	r0, [r7, #4]
 80106ae:	9505      	str	r5, [sp, #20]
 80106b0:	f8ad 301a 	strh.w	r3, [sp, #26]
 80106b4:	f8ad 401c 	strh.w	r4, [sp, #28]
 80106b8:	f8ad 601e 	strh.w	r6, [sp, #30]
 80106bc:	f8cd 8010 	str.w	r8, [sp, #16]
 80106c0:	f8ad 4020 	strh.w	r4, [sp, #32]
 80106c4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80106c8:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80106cc:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80106d0:	6803      	ldr	r3, [r0, #0]
 80106d2:	a901      	add	r1, sp, #4
 80106d4:	685b      	ldr	r3, [r3, #4]
 80106d6:	4798      	blx	r3
 80106d8:	b00b      	add	sp, #44	; 0x2c
 80106da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

080106e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 80106e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80106e4:	b08a      	sub	sp, #40	; 0x28
 80106e6:	4698      	mov	r8, r3
 80106e8:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 80106ec:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 80106f0:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 80106f4:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 80106f8:	2300      	movs	r3, #0
 80106fa:	2d0b      	cmp	r5, #11
 80106fc:	4606      	mov	r6, r0
 80106fe:	9304      	str	r3, [sp, #16]
 8010700:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8010704:	d138      	bne.n	8010778 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8010706:	2380      	movs	r3, #128	; 0x80
 8010708:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801070c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010710:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010714:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010718:	f8ad 301a 	strh.w	r3, [sp, #26]
 801071c:	f88d 0020 	strb.w	r0, [sp, #32]
 8010720:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010724:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010728:	4630      	mov	r0, r6
 801072a:	9203      	str	r2, [sp, #12]
 801072c:	f7ff ff5c 	bl	80105e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010730:	2c0b      	cmp	r4, #11
 8010732:	bf98      	it	ls
 8010734:	4b1b      	ldrls	r3, [pc, #108]	; (80107a4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8010736:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 801073a:	bf98      	it	ls
 801073c:	5d19      	ldrbls	r1, [r3, r4]
 801073e:	f8ad 701e 	strh.w	r7, [sp, #30]
 8010742:	bf88      	it	hi
 8010744:	2100      	movhi	r1, #0
 8010746:	fb02 8307 	mla	r3, r2, r7, r8
 801074a:	10c9      	asrs	r1, r1, #3
 801074c:	fb01 0003 	mla	r0, r1, r3, r0
 8010750:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8010754:	9005      	str	r0, [sp, #20]
 8010756:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 801075a:	6870      	ldr	r0, [r6, #4]
 801075c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8010760:	2300      	movs	r3, #0
 8010762:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010766:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801076a:	6803      	ldr	r3, [r0, #0]
 801076c:	a901      	add	r1, sp, #4
 801076e:	685b      	ldr	r3, [r3, #4]
 8010770:	4798      	blx	r3
 8010772:	b00a      	add	sp, #40	; 0x28
 8010774:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010778:	2d02      	cmp	r5, #2
 801077a:	d109      	bne.n	8010790 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 801077c:	28ff      	cmp	r0, #255	; 0xff
 801077e:	d105      	bne.n	801078c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8010780:	f1bc 0f00 	cmp.w	ip, #0
 8010784:	bf14      	ite	ne
 8010786:	2340      	movne	r3, #64	; 0x40
 8010788:	2320      	moveq	r3, #32
 801078a:	e7bd      	b.n	8010708 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801078c:	2340      	movs	r3, #64	; 0x40
 801078e:	e7bb      	b.n	8010708 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010790:	28ff      	cmp	r0, #255	; 0xff
 8010792:	d105      	bne.n	80107a0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8010794:	f1bc 0f00 	cmp.w	ip, #0
 8010798:	bf14      	ite	ne
 801079a:	2304      	movne	r3, #4
 801079c:	2301      	moveq	r3, #1
 801079e:	e7b3      	b.n	8010708 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80107a0:	2304      	movs	r3, #4
 80107a2:	e7b1      	b.n	8010708 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80107a4:	0802c810 	.word	0x0802c810

080107a8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 80107a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80107ac:	b08b      	sub	sp, #44	; 0x2c
 80107ae:	461d      	mov	r5, r3
 80107b0:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 80107b4:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 80107b8:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 80107bc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80107c0:	bf14      	ite	ne
 80107c2:	2308      	movne	r3, #8
 80107c4:	2302      	moveq	r3, #2
 80107c6:	2400      	movs	r4, #0
 80107c8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80107cc:	4688      	mov	r8, r1
 80107ce:	4693      	mov	fp, r2
 80107d0:	9404      	str	r4, [sp, #16]
 80107d2:	4607      	mov	r7, r0
 80107d4:	f7ff ff08 	bl	80105e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80107d8:	2e0b      	cmp	r6, #11
 80107da:	bf98      	it	ls
 80107dc:	4b15      	ldrls	r3, [pc, #84]	; (8010834 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 80107de:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80107e2:	bf98      	it	ls
 80107e4:	5d9c      	ldrbls	r4, [r3, r6]
 80107e6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80107ea:	f8ad 3018 	strh.w	r3, [sp, #24]
 80107ee:	fb05 b50a 	mla	r5, r5, sl, fp
 80107f2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80107f6:	f8ad 301a 	strh.w	r3, [sp, #26]
 80107fa:	10e4      	asrs	r4, r4, #3
 80107fc:	fb04 0405 	mla	r4, r4, r5, r0
 8010800:	2300      	movs	r3, #0
 8010802:	6878      	ldr	r0, [r7, #4]
 8010804:	9405      	str	r4, [sp, #20]
 8010806:	f8ad 301c 	strh.w	r3, [sp, #28]
 801080a:	f8ad a01e 	strh.w	sl, [sp, #30]
 801080e:	f8cd 8010 	str.w	r8, [sp, #16]
 8010812:	f88d 9020 	strb.w	r9, [sp, #32]
 8010816:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 801081a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801081e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8010822:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8010826:	6803      	ldr	r3, [r0, #0]
 8010828:	a901      	add	r1, sp, #4
 801082a:	685b      	ldr	r3, [r3, #4]
 801082c:	4798      	blx	r3
 801082e:	b00b      	add	sp, #44	; 0x2c
 8010830:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010834:	0802c810 	.word	0x0802c810

08010838 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8010838:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801083c:	461e      	mov	r6, r3
 801083e:	4b0a      	ldr	r3, [pc, #40]	; (8010868 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8010840:	460f      	mov	r7, r1
 8010842:	881d      	ldrh	r5, [r3, #0]
 8010844:	4690      	mov	r8, r2
 8010846:	f7f2 ff35 	bl	80036b4 <_ZN8touchgfx3HAL3lcdEv>
 801084a:	6803      	ldr	r3, [r0, #0]
 801084c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801084e:	4798      	blx	r3
 8010850:	280b      	cmp	r0, #11
 8010852:	bf9a      	itte	ls
 8010854:	4b05      	ldrls	r3, [pc, #20]	; (801086c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8010856:	5c1c      	ldrbls	r4, [r3, r0]
 8010858:	2400      	movhi	r4, #0
 801085a:	fb08 7005 	mla	r0, r8, r5, r7
 801085e:	10e4      	asrs	r4, r4, #3
 8010860:	fb04 6000 	mla	r0, r4, r0, r6
 8010864:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010868:	200137ce 	.word	0x200137ce
 801086c:	0802c810 	.word	0x0802c810

08010870 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8010870:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010872:	b08b      	sub	sp, #44	; 0x2c
 8010874:	461f      	mov	r7, r3
 8010876:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801087a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801087e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010882:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010886:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801088a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801088e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010892:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010896:	2500      	movs	r5, #0
 8010898:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 801089c:	f88d 3020 	strb.w	r3, [sp, #32]
 80108a0:	4604      	mov	r4, r0
 80108a2:	4616      	mov	r6, r2
 80108a4:	9504      	str	r5, [sp, #16]
 80108a6:	f7ff fe9f 	bl	80105e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80108aa:	463a      	mov	r2, r7
 80108ac:	4631      	mov	r1, r6
 80108ae:	4603      	mov	r3, r0
 80108b0:	4620      	mov	r0, r4
 80108b2:	f7ff ffc1 	bl	8010838 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80108b6:	4b0e      	ldr	r3, [pc, #56]	; (80108f0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 80108b8:	9005      	str	r0, [sp, #20]
 80108ba:	881b      	ldrh	r3, [r3, #0]
 80108bc:	f8ad 301e 	strh.w	r3, [sp, #30]
 80108c0:	f7f2 fef8 	bl	80036b4 <_ZN8touchgfx3HAL3lcdEv>
 80108c4:	6803      	ldr	r3, [r0, #0]
 80108c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80108c8:	4798      	blx	r3
 80108ca:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80108cc:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 80108d0:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80108d4:	9304      	str	r3, [sp, #16]
 80108d6:	6860      	ldr	r0, [r4, #4]
 80108d8:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80108dc:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80108e0:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 80108e4:	6803      	ldr	r3, [r0, #0]
 80108e6:	a901      	add	r1, sp, #4
 80108e8:	685b      	ldr	r3, [r3, #4]
 80108ea:	4798      	blx	r3
 80108ec:	b00b      	add	sp, #44	; 0x2c
 80108ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80108f0:	200137ce 	.word	0x200137ce

080108f4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 80108f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80108f6:	b08d      	sub	sp, #52	; 0x34
 80108f8:	466b      	mov	r3, sp
 80108fa:	e883 0006 	stmia.w	r3, {r1, r2}
 80108fe:	2300      	movs	r3, #0
 8010900:	9306      	str	r3, [sp, #24]
 8010902:	6803      	ldr	r3, [r0, #0]
 8010904:	f8bd 6000 	ldrh.w	r6, [sp]
 8010908:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801090a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 801090e:	2501      	movs	r5, #1
 8010910:	9503      	str	r5, [sp, #12]
 8010912:	4604      	mov	r4, r0
 8010914:	4798      	blx	r3
 8010916:	463a      	mov	r2, r7
 8010918:	4631      	mov	r1, r6
 801091a:	4603      	mov	r3, r0
 801091c:	4620      	mov	r0, r4
 801091e:	f7ff ff8b 	bl	8010838 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010922:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8010924:	9307      	str	r3, [sp, #28]
 8010926:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801092a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801092e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010932:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010936:	4b0f      	ldr	r3, [pc, #60]	; (8010974 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8010938:	9004      	str	r0, [sp, #16]
 801093a:	881b      	ldrh	r3, [r3, #0]
 801093c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8010940:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8010944:	f7f2 feb6 	bl	80036b4 <_ZN8touchgfx3HAL3lcdEv>
 8010948:	6803      	ldr	r3, [r0, #0]
 801094a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801094c:	4798      	blx	r3
 801094e:	23ff      	movs	r3, #255	; 0xff
 8010950:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8010954:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8010958:	6860      	ldr	r0, [r4, #4]
 801095a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 801095e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8010962:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8010966:	6803      	ldr	r3, [r0, #0]
 8010968:	a903      	add	r1, sp, #12
 801096a:	685b      	ldr	r3, [r3, #4]
 801096c:	4798      	blx	r3
 801096e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8010970:	b00d      	add	sp, #52	; 0x34
 8010972:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010974:	200137ce 	.word	0x200137ce

08010978 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8010978:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801097c:	b08c      	sub	sp, #48	; 0x30
 801097e:	461e      	mov	r6, r3
 8010980:	466d      	mov	r5, sp
 8010982:	2300      	movs	r3, #0
 8010984:	e885 0006 	stmia.w	r5, {r1, r2}
 8010988:	9306      	str	r3, [sp, #24]
 801098a:	6803      	ldr	r3, [r0, #0]
 801098c:	f8bd 7000 	ldrh.w	r7, [sp]
 8010990:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010992:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8010996:	2501      	movs	r5, #1
 8010998:	9503      	str	r5, [sp, #12]
 801099a:	4604      	mov	r4, r0
 801099c:	4798      	blx	r3
 801099e:	4642      	mov	r2, r8
 80109a0:	4639      	mov	r1, r7
 80109a2:	4603      	mov	r3, r0
 80109a4:	4620      	mov	r0, r4
 80109a6:	f7ff ff47 	bl	8010838 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80109aa:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80109ae:	f8ad 3020 	strh.w	r3, [sp, #32]
 80109b2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80109b6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80109ba:	4b11      	ldr	r3, [pc, #68]	; (8010a00 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 80109bc:	9004      	str	r0, [sp, #16]
 80109be:	881b      	ldrh	r3, [r3, #0]
 80109c0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80109c4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80109c6:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80109ca:	9607      	str	r6, [sp, #28]
 80109cc:	f7f2 fe72 	bl	80036b4 <_ZN8touchgfx3HAL3lcdEv>
 80109d0:	6803      	ldr	r3, [r0, #0]
 80109d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80109d4:	4798      	blx	r3
 80109d6:	23ff      	movs	r3, #255	; 0xff
 80109d8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80109dc:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80109e0:	6860      	ldr	r0, [r4, #4]
 80109e2:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80109e6:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80109ea:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80109ee:	6803      	ldr	r3, [r0, #0]
 80109f0:	a903      	add	r1, sp, #12
 80109f2:	685b      	ldr	r3, [r3, #4]
 80109f4:	4798      	blx	r3
 80109f6:	4630      	mov	r0, r6
 80109f8:	b00c      	add	sp, #48	; 0x30
 80109fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80109fe:	bf00      	nop
 8010a00:	200137ce 	.word	0x200137ce

08010a04 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8010a04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010a06:	b085      	sub	sp, #20
 8010a08:	ac02      	add	r4, sp, #8
 8010a0a:	e884 0006 	stmia.w	r4, {r1, r2}
 8010a0e:	4605      	mov	r5, r0
 8010a10:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8010a14:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8010a18:	f7ff fde6 	bl	80105e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010a1c:	463a      	mov	r2, r7
 8010a1e:	4603      	mov	r3, r0
 8010a20:	4631      	mov	r1, r6
 8010a22:	4628      	mov	r0, r5
 8010a24:	f7ff ff08 	bl	8010838 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010a28:	4a05      	ldr	r2, [pc, #20]	; (8010a40 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8010a2a:	682b      	ldr	r3, [r5, #0]
 8010a2c:	8812      	ldrh	r2, [r2, #0]
 8010a2e:	9200      	str	r2, [sp, #0]
 8010a30:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8010a32:	e894 0006 	ldmia.w	r4, {r1, r2}
 8010a36:	4603      	mov	r3, r0
 8010a38:	4628      	mov	r0, r5
 8010a3a:	47b0      	blx	r6
 8010a3c:	b005      	add	sp, #20
 8010a3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010a40:	200137ce 	.word	0x200137ce

08010a44 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8010a44:	b570      	push	{r4, r5, r6, lr}
 8010a46:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8010a4a:	4604      	mov	r4, r0
 8010a4c:	b19b      	cbz	r3, 8010a76 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8010a4e:	2002      	movs	r0, #2
 8010a50:	f7ef febc 	bl	80007cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8010a54:	2300      	movs	r3, #0
 8010a56:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8010a5a:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8010a5e:	6823      	ldr	r3, [r4, #0]
 8010a60:	4620      	mov	r0, r4
 8010a62:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8010a66:	f7ff fdbf 	bl	80105e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010a6a:	462b      	mov	r3, r5
 8010a6c:	4601      	mov	r1, r0
 8010a6e:	4620      	mov	r0, r4
 8010a70:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010a74:	4718      	bx	r3
 8010a76:	bd70      	pop	{r4, r5, r6, pc}

08010a78 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8010a78:	b538      	push	{r3, r4, r5, lr}
 8010a7a:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8010a7e:	428b      	cmp	r3, r1
 8010a80:	4604      	mov	r4, r0
 8010a82:	460d      	mov	r5, r1
 8010a84:	d006      	beq.n	8010a94 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8010a86:	6803      	ldr	r3, [r0, #0]
 8010a88:	b929      	cbnz	r1, 8010a96 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8010a8a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8010a8e:	4798      	blx	r3
 8010a90:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8010a94:	bd38      	pop	{r3, r4, r5, pc}
 8010a96:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8010a9a:	e7f8      	b.n	8010a8e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08010a9c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8010a9c:	b510      	push	{r4, lr}
 8010a9e:	4b0d      	ldr	r3, [pc, #52]	; (8010ad4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8010aa0:	781b      	ldrb	r3, [r3, #0]
 8010aa2:	4604      	mov	r4, r0
 8010aa4:	b95b      	cbnz	r3, 8010abe <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010aa6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8010aaa:	2b02      	cmp	r3, #2
 8010aac:	d007      	beq.n	8010abe <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010aae:	6840      	ldr	r0, [r0, #4]
 8010ab0:	f000 f92c 	bl	8010d0c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8010ab4:	b118      	cbz	r0, 8010abe <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010ab6:	6862      	ldr	r2, [r4, #4]
 8010ab8:	7a53      	ldrb	r3, [r2, #9]
 8010aba:	2b00      	cmp	r3, #0
 8010abc:	d0fc      	beq.n	8010ab8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8010abe:	f7ef ffbd 	bl	8000a3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8010ac2:	4620      	mov	r0, r4
 8010ac4:	2100      	movs	r1, #0
 8010ac6:	f7ff ffd7 	bl	8010a78 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010aca:	4620      	mov	r0, r4
 8010acc:	f7ff fd8c 	bl	80105e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010ad0:	bd10      	pop	{r4, pc}
 8010ad2:	bf00      	nop
 8010ad4:	200137d2 	.word	0x200137d2

08010ad8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8010ad8:	b570      	push	{r4, r5, r6, lr}
 8010ada:	4604      	mov	r4, r0
 8010adc:	6803      	ldr	r3, [r0, #0]
 8010ade:	b919      	cbnz	r1, 8010ae8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8010ae0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010ae2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010ae6:	4718      	bx	r3
 8010ae8:	2200      	movs	r2, #0
 8010aea:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 8010aee:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 8010af2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010af4:	4798      	blx	r3
 8010af6:	6863      	ldr	r3, [r4, #4]
 8010af8:	2101      	movs	r1, #1
 8010afa:	4605      	mov	r5, r0
 8010afc:	7299      	strb	r1, [r3, #10]
 8010afe:	4620      	mov	r0, r4
 8010b00:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 8010b04:	f7ff ffb8 	bl	8010a78 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010b08:	4628      	mov	r0, r5
 8010b0a:	bd70      	pop	{r4, r5, r6, pc}

08010b0c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8010b0c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8010b10:	1a13      	subs	r3, r2, r0
 8010b12:	4258      	negs	r0, r3
 8010b14:	4158      	adcs	r0, r3
 8010b16:	4770      	bx	lr

08010b18 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8010b18:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8010b1c:	1a9b      	subs	r3, r3, r2
 8010b1e:	2b00      	cmp	r3, #0
 8010b20:	bfdc      	itt	le
 8010b22:	6882      	ldrle	r2, [r0, #8]
 8010b24:	189b      	addle	r3, r3, r2
 8010b26:	2b01      	cmp	r3, #1
 8010b28:	bfcc      	ite	gt
 8010b2a:	2000      	movgt	r0, #0
 8010b2c:	2001      	movle	r0, #1
 8010b2e:	4770      	bx	lr

08010b30 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8010b30:	6902      	ldr	r2, [r0, #16]
 8010b32:	6843      	ldr	r3, [r0, #4]
 8010b34:	2024      	movs	r0, #36	; 0x24
 8010b36:	fb00 3002 	mla	r0, r0, r2, r3
 8010b3a:	4770      	bx	lr

08010b3c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8010b3c:	6803      	ldr	r3, [r0, #0]
 8010b3e:	691b      	ldr	r3, [r3, #16]
 8010b40:	4718      	bx	r3

08010b42 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8010b42:	b570      	push	{r4, r5, r6, lr}
 8010b44:	2301      	movs	r3, #1
 8010b46:	7203      	strb	r3, [r0, #8]
 8010b48:	4604      	mov	r4, r0
 8010b4a:	6840      	ldr	r0, [r0, #4]
 8010b4c:	6803      	ldr	r3, [r0, #0]
 8010b4e:	699b      	ldr	r3, [r3, #24]
 8010b50:	4798      	blx	r3
 8010b52:	6803      	ldr	r3, [r0, #0]
 8010b54:	2b40      	cmp	r3, #64	; 0x40
 8010b56:	4605      	mov	r5, r0
 8010b58:	d00c      	beq.n	8010b74 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010b5a:	d810      	bhi.n	8010b7e <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8010b5c:	2b04      	cmp	r3, #4
 8010b5e:	d01d      	beq.n	8010b9c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8010b60:	d804      	bhi.n	8010b6c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8010b62:	2b01      	cmp	r3, #1
 8010b64:	d006      	beq.n	8010b74 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010b66:	2b02      	cmp	r3, #2
 8010b68:	d02c      	beq.n	8010bc4 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8010b6a:	bd70      	pop	{r4, r5, r6, pc}
 8010b6c:	2b08      	cmp	r3, #8
 8010b6e:	d01d      	beq.n	8010bac <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8010b70:	2b20      	cmp	r3, #32
 8010b72:	d1fa      	bne.n	8010b6a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8010b74:	6823      	ldr	r3, [r4, #0]
 8010b76:	4620      	mov	r0, r4
 8010b78:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010b7a:	4798      	blx	r3
 8010b7c:	e013      	b.n	8010ba6 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8010b7e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8010b82:	d0f7      	beq.n	8010b74 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010b84:	d804      	bhi.n	8010b90 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8010b86:	2b80      	cmp	r3, #128	; 0x80
 8010b88:	d0f4      	beq.n	8010b74 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010b8a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8010b8e:	e7f0      	b.n	8010b72 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8010b90:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8010b94:	d0ee      	beq.n	8010b74 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010b96:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8010b9a:	e7e5      	b.n	8010b68 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8010b9c:	6823      	ldr	r3, [r4, #0]
 8010b9e:	7f01      	ldrb	r1, [r0, #28]
 8010ba0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010ba2:	4620      	mov	r0, r4
 8010ba4:	4798      	blx	r3
 8010ba6:	6823      	ldr	r3, [r4, #0]
 8010ba8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010baa:	e006      	b.n	8010bba <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8010bac:	6823      	ldr	r3, [r4, #0]
 8010bae:	7f01      	ldrb	r1, [r0, #28]
 8010bb0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010bb2:	4620      	mov	r0, r4
 8010bb4:	4798      	blx	r3
 8010bb6:	6823      	ldr	r3, [r4, #0]
 8010bb8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010bba:	4629      	mov	r1, r5
 8010bbc:	4620      	mov	r0, r4
 8010bbe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010bc2:	4718      	bx	r3
 8010bc4:	6823      	ldr	r3, [r4, #0]
 8010bc6:	4620      	mov	r0, r4
 8010bc8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010bca:	4798      	blx	r3
 8010bcc:	e7f3      	b.n	8010bb6 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08010bce <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8010bce:	4770      	bx	lr

08010bd0 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8010bd0:	4770      	bx	lr

08010bd2 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8010bd2:	4770      	bx	lr

08010bd4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8010bd4:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8010bd8:	1ad2      	subs	r2, r2, r3
 8010bda:	2a00      	cmp	r2, #0
 8010bdc:	b510      	push	{r4, lr}
 8010bde:	bfdc      	itt	le
 8010be0:	6884      	ldrle	r4, [r0, #8]
 8010be2:	1912      	addle	r2, r2, r4
 8010be4:	2a01      	cmp	r2, #1
 8010be6:	dd16      	ble.n	8010c16 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8010be8:	6842      	ldr	r2, [r0, #4]
 8010bea:	2424      	movs	r4, #36	; 0x24
 8010bec:	fb04 2303 	mla	r3, r4, r3, r2
 8010bf0:	f101 0220 	add.w	r2, r1, #32
 8010bf4:	f851 4b04 	ldr.w	r4, [r1], #4
 8010bf8:	f843 4b04 	str.w	r4, [r3], #4
 8010bfc:	4291      	cmp	r1, r2
 8010bfe:	d1f9      	bne.n	8010bf4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8010c00:	780a      	ldrb	r2, [r1, #0]
 8010c02:	701a      	strb	r2, [r3, #0]
 8010c04:	68c3      	ldr	r3, [r0, #12]
 8010c06:	6882      	ldr	r2, [r0, #8]
 8010c08:	f3bf 8f5b 	dmb	ish
 8010c0c:	3301      	adds	r3, #1
 8010c0e:	429a      	cmp	r2, r3
 8010c10:	bfd8      	it	le
 8010c12:	1a9b      	suble	r3, r3, r2
 8010c14:	60c3      	str	r3, [r0, #12]
 8010c16:	bd10      	pop	{r4, pc}

08010c18 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8010c18:	6903      	ldr	r3, [r0, #16]
 8010c1a:	6882      	ldr	r2, [r0, #8]
 8010c1c:	f3bf 8f5b 	dmb	ish
 8010c20:	3301      	adds	r3, #1
 8010c22:	429a      	cmp	r2, r3
 8010c24:	bfd8      	it	le
 8010c26:	1a9b      	suble	r3, r3, r2
 8010c28:	6103      	str	r3, [r0, #16]
 8010c2a:	4770      	bx	lr

08010c2c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8010c2c:	b570      	push	{r4, r5, r6, lr}
 8010c2e:	4604      	mov	r4, r0
 8010c30:	460e      	mov	r6, r1
 8010c32:	6860      	ldr	r0, [r4, #4]
 8010c34:	6803      	ldr	r3, [r0, #0]
 8010c36:	685b      	ldr	r3, [r3, #4]
 8010c38:	4798      	blx	r3
 8010c3a:	2800      	cmp	r0, #0
 8010c3c:	d1f9      	bne.n	8010c32 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8010c3e:	4d0d      	ldr	r5, [pc, #52]	; (8010c74 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8010c40:	6828      	ldr	r0, [r5, #0]
 8010c42:	6803      	ldr	r3, [r0, #0]
 8010c44:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010c46:	4798      	blx	r3
 8010c48:	f7ef ff06 	bl	8000a58 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8010c4c:	6828      	ldr	r0, [r5, #0]
 8010c4e:	2101      	movs	r1, #1
 8010c50:	f7ff ff12 	bl	8010a78 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010c54:	6860      	ldr	r0, [r4, #4]
 8010c56:	6803      	ldr	r3, [r0, #0]
 8010c58:	4631      	mov	r1, r6
 8010c5a:	689b      	ldr	r3, [r3, #8]
 8010c5c:	4798      	blx	r3
 8010c5e:	6823      	ldr	r3, [r4, #0]
 8010c60:	4620      	mov	r0, r4
 8010c62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010c64:	4798      	blx	r3
 8010c66:	6828      	ldr	r0, [r5, #0]
 8010c68:	6803      	ldr	r3, [r0, #0]
 8010c6a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010c6e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8010c70:	4718      	bx	r3
 8010c72:	bf00      	nop
 8010c74:	200137d4 	.word	0x200137d4

08010c78 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8010c78:	b508      	push	{r3, lr}
 8010c7a:	f7ef fedf 	bl	8000a3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8010c7e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010c82:	f7ef bee3 	b.w	8000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08010c86 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8010c86:	b510      	push	{r4, lr}
 8010c88:	2114      	movs	r1, #20
 8010c8a:	4604      	mov	r4, r0
 8010c8c:	f016 fea7 	bl	80279de <_ZdlPvj>
 8010c90:	4620      	mov	r0, r4
 8010c92:	bd10      	pop	{r4, pc}

08010c94 <_ZN8touchgfx13DMA_Interface5startEv>:
 8010c94:	b510      	push	{r4, lr}
 8010c96:	4604      	mov	r4, r0
 8010c98:	6840      	ldr	r0, [r0, #4]
 8010c9a:	6803      	ldr	r3, [r0, #0]
 8010c9c:	681b      	ldr	r3, [r3, #0]
 8010c9e:	4798      	blx	r3
 8010ca0:	b948      	cbnz	r0, 8010cb6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010ca2:	7a63      	ldrb	r3, [r4, #9]
 8010ca4:	b13b      	cbz	r3, 8010cb6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010ca6:	7a23      	ldrb	r3, [r4, #8]
 8010ca8:	b92b      	cbnz	r3, 8010cb6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010caa:	6823      	ldr	r3, [r4, #0]
 8010cac:	4620      	mov	r0, r4
 8010cae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010cb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010cb4:	4718      	bx	r3
 8010cb6:	bd10      	pop	{r4, pc}

08010cb8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8010cb8:	b570      	push	{r4, r5, r6, lr}
 8010cba:	4604      	mov	r4, r0
 8010cbc:	6840      	ldr	r0, [r0, #4]
 8010cbe:	6803      	ldr	r3, [r0, #0]
 8010cc0:	681b      	ldr	r3, [r3, #0]
 8010cc2:	4798      	blx	r3
 8010cc4:	4605      	mov	r5, r0
 8010cc6:	b930      	cbnz	r0, 8010cd6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8010cc8:	7a23      	ldrb	r3, [r4, #8]
 8010cca:	b123      	cbz	r3, 8010cd6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8010ccc:	6860      	ldr	r0, [r4, #4]
 8010cce:	6803      	ldr	r3, [r0, #0]
 8010cd0:	695b      	ldr	r3, [r3, #20]
 8010cd2:	4798      	blx	r3
 8010cd4:	7225      	strb	r5, [r4, #8]
 8010cd6:	6860      	ldr	r0, [r4, #4]
 8010cd8:	6803      	ldr	r3, [r0, #0]
 8010cda:	681b      	ldr	r3, [r3, #0]
 8010cdc:	4798      	blx	r3
 8010cde:	b928      	cbnz	r0, 8010cec <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8010ce0:	6823      	ldr	r3, [r4, #0]
 8010ce2:	4620      	mov	r0, r4
 8010ce4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010ce6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010cea:	4718      	bx	r3
 8010cec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010cf0:	f7ef beba 	b.w	8000a68 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08010cf4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8010cf4:	b510      	push	{r4, lr}
 8010cf6:	4c04      	ldr	r4, [pc, #16]	; (8010d08 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8010cf8:	6082      	str	r2, [r0, #8]
 8010cfa:	2200      	movs	r2, #0
 8010cfc:	e9c0 4100 	strd	r4, r1, [r0]
 8010d00:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8010d04:	bd10      	pop	{r4, pc}
 8010d06:	bf00      	nop
 8010d08:	0802c824 	.word	0x0802c824

08010d0c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8010d0c:	6840      	ldr	r0, [r0, #4]
 8010d0e:	6803      	ldr	r3, [r0, #0]
 8010d10:	681b      	ldr	r3, [r3, #0]
 8010d12:	4718      	bx	r3

08010d14 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8010d14:	4b06      	ldr	r3, [pc, #24]	; (8010d30 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 8010d16:	60c1      	str	r1, [r0, #12]
 8010d18:	094a      	lsrs	r2, r1, #5
 8010d1a:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8010d1e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8010d22:	4313      	orrs	r3, r2
 8010d24:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8010d28:	4319      	orrs	r1, r3
 8010d2a:	8201      	strh	r1, [r0, #16]
 8010d2c:	4770      	bx	lr
 8010d2e:	bf00      	nop
 8010d30:	fffff800 	.word	0xfffff800

08010d34 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8010d34:	f1a0 0008 	sub.w	r0, r0, #8
 8010d38:	e7ec      	b.n	8010d14 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8010d3a:	bf00      	nop

08010d3c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8010d3c:	b508      	push	{r3, lr}
 8010d3e:	4b05      	ldr	r3, [pc, #20]	; (8010d54 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8010d40:	6818      	ldr	r0, [r3, #0]
 8010d42:	6803      	ldr	r3, [r0, #0]
 8010d44:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8010d48:	4798      	blx	r3
 8010d4a:	1e43      	subs	r3, r0, #1
 8010d4c:	4258      	negs	r0, r3
 8010d4e:	4158      	adcs	r0, r3
 8010d50:	bd08      	pop	{r3, pc}
 8010d52:	bf00      	nop
 8010d54:	200137d4 	.word	0x200137d4

08010d58 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8010d58:	4770      	bx	lr

08010d5a <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8010d5a:	3808      	subs	r0, #8
 8010d5c:	4770      	bx	lr

08010d5e <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8010d5e:	b430      	push	{r4, r5}
 8010d60:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8010d64:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8010d68:	8a02      	ldrh	r2, [r0, #16]
 8010d6a:	9202      	str	r2, [sp, #8]
 8010d6c:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8010d70:	68c2      	ldr	r2, [r0, #12]
 8010d72:	4629      	mov	r1, r5
 8010d74:	4620      	mov	r0, r4
 8010d76:	bc30      	pop	{r4, r5}
 8010d78:	f7f0 b83a 	b.w	8000df0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08010d7c <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8010d7c:	f7f0 b82e 	b.w	8000ddc <_ZN8touchgfx5paint8tearDownEv>

08010d80 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8010d80:	b510      	push	{r4, lr}
 8010d82:	2114      	movs	r1, #20
 8010d84:	4604      	mov	r4, r0
 8010d86:	f016 fe2a 	bl	80279de <_ZdlPvj>
 8010d8a:	4620      	mov	r0, r4
 8010d8c:	bd10      	pop	{r4, pc}

08010d8e <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8010d8e:	f1a0 0008 	sub.w	r0, r0, #8
 8010d92:	e7f5      	b.n	8010d80 <_ZN8touchgfx13PainterRGB565D0Ev>

08010d94 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8010d94:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010d96:	6803      	ldr	r3, [r0, #0]
 8010d98:	460d      	mov	r5, r1
 8010d9a:	4604      	mov	r4, r0
 8010d9c:	4601      	mov	r1, r0
 8010d9e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010da0:	a802      	add	r0, sp, #8
 8010da2:	4798      	blx	r3
 8010da4:	6828      	ldr	r0, [r5, #0]
 8010da6:	6869      	ldr	r1, [r5, #4]
 8010da8:	466b      	mov	r3, sp
 8010daa:	c303      	stmia	r3!, {r0, r1}
 8010dac:	4668      	mov	r0, sp
 8010dae:	4619      	mov	r1, r3
 8010db0:	f7fe ffa4 	bl	800fcfc <_ZN8touchgfx4RectaNERKS0_>
 8010db4:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8010db6:	b188      	cbz	r0, 8010ddc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010db8:	6803      	ldr	r3, [r0, #0]
 8010dba:	1d21      	adds	r1, r4, #4
 8010dbc:	68db      	ldr	r3, [r3, #12]
 8010dbe:	4798      	blx	r3
 8010dc0:	b160      	cbz	r0, 8010ddc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010dc2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8010dc6:	2b00      	cmp	r3, #0
 8010dc8:	dd08      	ble.n	8010ddc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010dca:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8010dce:	2d00      	cmp	r5, #0
 8010dd0:	dd04      	ble.n	8010ddc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010dd2:	4a2b      	ldr	r2, [pc, #172]	; (8010e80 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8010dd4:	7812      	ldrb	r2, [r2, #0]
 8010dd6:	b11a      	cbz	r2, 8010de0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8010dd8:	2a01      	cmp	r2, #1
 8010dda:	d029      	beq.n	8010e30 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8010ddc:	b004      	add	sp, #16
 8010dde:	bd70      	pop	{r4, r5, r6, pc}
 8010de0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010de4:	441d      	add	r5, r3
 8010de6:	b2ad      	uxth	r5, r5
 8010de8:	b22e      	sxth	r6, r5
 8010dea:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8010dee:	42b3      	cmp	r3, r6
 8010df0:	daf4      	bge.n	8010ddc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010df2:	6823      	ldr	r3, [r4, #0]
 8010df4:	4669      	mov	r1, sp
 8010df6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8010df8:	4620      	mov	r0, r4
 8010dfa:	4798      	blx	r3
 8010dfc:	b940      	cbnz	r0, 8010e10 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8010dfe:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8010e02:	2b01      	cmp	r3, #1
 8010e04:	d004      	beq.n	8010e10 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8010e06:	3301      	adds	r3, #1
 8010e08:	105b      	asrs	r3, r3, #1
 8010e0a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010e0e:	e7f0      	b.n	8010df2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8010e10:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8010e14:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010e18:	4413      	add	r3, r2
 8010e1a:	b29b      	uxth	r3, r3
 8010e1c:	441a      	add	r2, r3
 8010e1e:	b212      	sxth	r2, r2
 8010e20:	4296      	cmp	r6, r2
 8010e22:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010e26:	dae0      	bge.n	8010dea <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8010e28:	1aeb      	subs	r3, r5, r3
 8010e2a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010e2e:	e7dc      	b.n	8010dea <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8010e30:	f8bd 5000 	ldrh.w	r5, [sp]
 8010e34:	441d      	add	r5, r3
 8010e36:	b2ad      	uxth	r5, r5
 8010e38:	b22e      	sxth	r6, r5
 8010e3a:	f9bd 3000 	ldrsh.w	r3, [sp]
 8010e3e:	42b3      	cmp	r3, r6
 8010e40:	dacc      	bge.n	8010ddc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010e42:	6823      	ldr	r3, [r4, #0]
 8010e44:	4669      	mov	r1, sp
 8010e46:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8010e48:	4620      	mov	r0, r4
 8010e4a:	4798      	blx	r3
 8010e4c:	b940      	cbnz	r0, 8010e60 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8010e4e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8010e52:	2b01      	cmp	r3, #1
 8010e54:	d004      	beq.n	8010e60 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8010e56:	3301      	adds	r3, #1
 8010e58:	105b      	asrs	r3, r3, #1
 8010e5a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010e5e:	e7f0      	b.n	8010e42 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8010e60:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8010e64:	f8bd 3000 	ldrh.w	r3, [sp]
 8010e68:	4413      	add	r3, r2
 8010e6a:	b29b      	uxth	r3, r3
 8010e6c:	441a      	add	r2, r3
 8010e6e:	b212      	sxth	r2, r2
 8010e70:	4296      	cmp	r6, r2
 8010e72:	f8ad 3000 	strh.w	r3, [sp]
 8010e76:	dae0      	bge.n	8010e3a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8010e78:	1aeb      	subs	r3, r5, r3
 8010e7a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010e7e:	e7dc      	b.n	8010e3a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8010e80:	200137cc 	.word	0x200137cc

08010e84 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8010e84:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010e86:	6803      	ldr	r3, [r0, #0]
 8010e88:	4604      	mov	r4, r0
 8010e8a:	4601      	mov	r1, r0
 8010e8c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010e8e:	4668      	mov	r0, sp
 8010e90:	4798      	blx	r3
 8010e92:	2100      	movs	r1, #0
 8010e94:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8010e98:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010e9c:	9102      	str	r1, [sp, #8]
 8010e9e:	4668      	mov	r0, sp
 8010ea0:	a902      	add	r1, sp, #8
 8010ea2:	f8ad 200c 	strh.w	r2, [sp, #12]
 8010ea6:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010eaa:	f7fe ff27 	bl	800fcfc <_ZN8touchgfx4RectaNERKS0_>
 8010eae:	6823      	ldr	r3, [r4, #0]
 8010eb0:	4669      	mov	r1, sp
 8010eb2:	691b      	ldr	r3, [r3, #16]
 8010eb4:	4620      	mov	r0, r4
 8010eb6:	4798      	blx	r3
 8010eb8:	b004      	add	sp, #16
 8010eba:	bd10      	pop	{r4, pc}

08010ebc <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8010ebc:	2101      	movs	r1, #1
 8010ebe:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8010ec2:	490b      	ldr	r1, [pc, #44]	; (8010ef0 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8010ec4:	6001      	str	r1, [r0, #0]
 8010ec6:	2200      	movs	r2, #0
 8010ec8:	21ff      	movs	r1, #255	; 0xff
 8010eca:	8082      	strh	r2, [r0, #4]
 8010ecc:	80c2      	strh	r2, [r0, #6]
 8010ece:	8102      	strh	r2, [r0, #8]
 8010ed0:	8142      	strh	r2, [r0, #10]
 8010ed2:	8182      	strh	r2, [r0, #12]
 8010ed4:	81c2      	strh	r2, [r0, #14]
 8010ed6:	8202      	strh	r2, [r0, #16]
 8010ed8:	8242      	strh	r2, [r0, #18]
 8010eda:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8010ede:	61c2      	str	r2, [r0, #28]
 8010ee0:	8402      	strh	r2, [r0, #32]
 8010ee2:	8442      	strh	r2, [r0, #34]	; 0x22
 8010ee4:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8010ee8:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8010eec:	6282      	str	r2, [r0, #40]	; 0x28
 8010eee:	4770      	bx	lr
 8010ef0:	0802c880 	.word	0x0802c880

08010ef4 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8010ef4:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8010ef8:	4602      	mov	r2, r0
 8010efa:	cb03      	ldmia	r3!, {r0, r1}
 8010efc:	6010      	str	r0, [r2, #0]
 8010efe:	6051      	str	r1, [r2, #4]
 8010f00:	4610      	mov	r0, r2
 8010f02:	4770      	bx	lr

08010f04 <_ZN8touchgfx4LineD1Ev>:
 8010f04:	4770      	bx	lr

08010f06 <_ZN8touchgfx4LineD0Ev>:
 8010f06:	b510      	push	{r4, lr}
 8010f08:	2170      	movs	r1, #112	; 0x70
 8010f0a:	4604      	mov	r4, r0
 8010f0c:	f016 fd67 	bl	80279de <_ZdlPvj>
 8010f10:	4620      	mov	r0, r4
 8010f12:	bd10      	pop	{r4, pc}

08010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8010f14:	b507      	push	{r0, r1, r2, lr}
 8010f16:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8010f1a:	ab01      	add	r3, sp, #4
 8010f1c:	6809      	ldr	r1, [r1, #0]
 8010f1e:	6800      	ldr	r0, [r0, #0]
 8010f20:	f005 fab4 	bl	801648c <_ZN8touchgfx6muldivElllRl>
 8010f24:	b003      	add	sp, #12
 8010f26:	f85d fb04 	ldr.w	pc, [sp], #4

08010f2a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8010f2a:	6800      	ldr	r0, [r0, #0]
 8010f2c:	2800      	cmp	r0, #0
 8010f2e:	bfb9      	ittee	lt
 8010f30:	2320      	movlt	r3, #32
 8010f32:	fb90 f0f3 	sdivlt	r0, r0, r3
 8010f36:	301f      	addge	r0, #31
 8010f38:	1140      	asrge	r0, r0, #5
 8010f3a:	4770      	bx	lr

08010f3c <_ZNK8touchgfx4Line17invalidateContentEv>:
 8010f3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f40:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 8010f44:	b089      	sub	sp, #36	; 0x24
 8010f46:	4604      	mov	r4, r0
 8010f48:	b353      	cbz	r3, 8010fa0 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8010f4a:	6803      	ldr	r3, [r0, #0]
 8010f4c:	4601      	mov	r1, r0
 8010f4e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010f50:	a802      	add	r0, sp, #8
 8010f52:	4798      	blx	r3
 8010f54:	2220      	movs	r2, #32
 8010f56:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8010f5a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8010f5c:	fb9a f0f2 	sdiv	r0, sl, r2
 8010f60:	fb91 f5f2 	sdiv	r5, r1, r2
 8010f64:	1b40      	subs	r0, r0, r5
 8010f66:	2800      	cmp	r0, #0
 8010f68:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010f6a:	fb93 f6f2 	sdiv	r6, r3, r2
 8010f6e:	bfb8      	it	lt
 8010f70:	4240      	neglt	r0, r0
 8010f72:	0076      	lsls	r6, r6, #1
 8010f74:	4286      	cmp	r6, r0
 8010f76:	f8d4 b000 	ldr.w	fp, [r4]
 8010f7a:	dc0c      	bgt.n	8010f96 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8010f7c:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8010f7e:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 8010f82:	fb95 f0f2 	sdiv	r0, r5, r2
 8010f86:	fb98 f7f2 	sdiv	r7, r8, r2
 8010f8a:	1bc0      	subs	r0, r0, r7
 8010f8c:	2800      	cmp	r0, #0
 8010f8e:	bfb8      	it	lt
 8010f90:	4240      	neglt	r0, r0
 8010f92:	4286      	cmp	r6, r0
 8010f94:	dd07      	ble.n	8010fa6 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8010f96:	f8db 3010 	ldr.w	r3, [fp, #16]
 8010f9a:	a902      	add	r1, sp, #8
 8010f9c:	4620      	mov	r0, r4
 8010f9e:	4798      	blx	r3
 8010fa0:	b009      	add	sp, #36	; 0x24
 8010fa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010fa6:	3301      	adds	r3, #1
 8010fa8:	2002      	movs	r0, #2
 8010faa:	f10d 0920 	add.w	r9, sp, #32
 8010fae:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8010fb2:	4103      	asrs	r3, r0
 8010fb4:	f849 3d08 	str.w	r3, [r9, #-8]!
 8010fb8:	eb01 060a 	add.w	r6, r1, sl
 8010fbc:	eb08 0705 	add.w	r7, r8, r5
 8010fc0:	fb96 f6f0 	sdiv	r6, r6, r0
 8010fc4:	fb97 f7f0 	sdiv	r7, r7, r0
 8010fc8:	4648      	mov	r0, r9
 8010fca:	9101      	str	r1, [sp, #4]
 8010fcc:	b236      	sxth	r6, r6
 8010fce:	b23f      	sxth	r7, r7
 8010fd0:	fb96 f6f2 	sdiv	r6, r6, r2
 8010fd4:	fb97 f7f2 	sdiv	r7, r7, r2
 8010fd8:	f7ff ffa7 	bl	8010f2a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8010fdc:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010fe0:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8010fe4:	9901      	ldr	r1, [sp, #4]
 8010fe6:	4293      	cmp	r3, r2
 8010fe8:	fa1f fe87 	uxth.w	lr, r7
 8010fec:	fa1f fc86 	uxth.w	ip, r6
 8010ff0:	eba1 0a0a 	sub.w	sl, r1, sl
 8010ff4:	b280      	uxth	r0, r0
 8010ff6:	da54      	bge.n	80110a2 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8010ff8:	ebac 0100 	sub.w	r1, ip, r0
 8010ffc:	b289      	uxth	r1, r1
 8010ffe:	4460      	add	r0, ip
 8011000:	f1ba 0f00 	cmp.w	sl, #0
 8011004:	b20e      	sxth	r6, r1
 8011006:	b280      	uxth	r0, r0
 8011008:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 801100c:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8011010:	da29      	bge.n	8011066 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8011012:	eba8 0505 	sub.w	r5, r8, r5
 8011016:	2d00      	cmp	r5, #0
 8011018:	da2a      	bge.n	8011070 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 801101a:	fa1f f88a 	uxth.w	r8, sl
 801101e:	eba0 0008 	sub.w	r0, r0, r8
 8011022:	fa1f f58c 	uxth.w	r5, ip
 8011026:	4443      	add	r3, r8
 8011028:	f8ad 0014 	strh.w	r0, [sp, #20]
 801102c:	1a59      	subs	r1, r3, r1
 801102e:	ebae 0005 	sub.w	r0, lr, r5
 8011032:	f8ad a010 	strh.w	sl, [sp, #16]
 8011036:	f8ad c012 	strh.w	ip, [sp, #18]
 801103a:	f8ad 0016 	strh.w	r0, [sp, #22]
 801103e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011042:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011046:	f8ad 101c 	strh.w	r1, [sp, #28]
 801104a:	442a      	add	r2, r5
 801104c:	eba2 0e0e 	sub.w	lr, r2, lr
 8011050:	f8ad e01e 	strh.w	lr, [sp, #30]
 8011054:	f8db 3010 	ldr.w	r3, [fp, #16]
 8011058:	a904      	add	r1, sp, #16
 801105a:	4620      	mov	r0, r4
 801105c:	4798      	blx	r3
 801105e:	6823      	ldr	r3, [r4, #0]
 8011060:	4649      	mov	r1, r9
 8011062:	691b      	ldr	r3, [r3, #16]
 8011064:	e79a      	b.n	8010f9c <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8011066:	d003      	beq.n	8011070 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8011068:	eba8 0505 	sub.w	r5, r8, r5
 801106c:	2d00      	cmp	r5, #0
 801106e:	dcd4      	bgt.n	801101a <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8011070:	fa1f f88a 	uxth.w	r8, sl
 8011074:	4443      	add	r3, r8
 8011076:	fa1f f58c 	uxth.w	r5, ip
 801107a:	1a59      	subs	r1, r3, r1
 801107c:	eba0 0008 	sub.w	r0, r0, r8
 8011080:	ebae 0305 	sub.w	r3, lr, r5
 8011084:	f8ad 6010 	strh.w	r6, [sp, #16]
 8011088:	f8ad c012 	strh.w	ip, [sp, #18]
 801108c:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011090:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011094:	f8ad a018 	strh.w	sl, [sp, #24]
 8011098:	f8ad 701a 	strh.w	r7, [sp, #26]
 801109c:	f8ad 001c 	strh.w	r0, [sp, #28]
 80110a0:	e7d3      	b.n	801104a <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 80110a2:	ebae 0100 	sub.w	r1, lr, r0
 80110a6:	b289      	uxth	r1, r1
 80110a8:	4470      	add	r0, lr
 80110aa:	f1ba 0f00 	cmp.w	sl, #0
 80110ae:	b20f      	sxth	r7, r1
 80110b0:	b280      	uxth	r0, r0
 80110b2:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 80110b6:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 80110ba:	da20      	bge.n	80110fe <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 80110bc:	eba8 0505 	sub.w	r5, r8, r5
 80110c0:	2d00      	cmp	r5, #0
 80110c2:	da21      	bge.n	8011108 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 80110c4:	fa1f f88e 	uxth.w	r8, lr
 80110c8:	fa1f f58a 	uxth.w	r5, sl
 80110cc:	4443      	add	r3, r8
 80110ce:	442a      	add	r2, r5
 80110d0:	f8ad e010 	strh.w	lr, [sp, #16]
 80110d4:	1b40      	subs	r0, r0, r5
 80110d6:	ebac 0e08 	sub.w	lr, ip, r8
 80110da:	1a51      	subs	r1, r2, r1
 80110dc:	eba3 0c0c 	sub.w	ip, r3, ip
 80110e0:	f8ad a012 	strh.w	sl, [sp, #18]
 80110e4:	f8ad e014 	strh.w	lr, [sp, #20]
 80110e8:	f8ad 0016 	strh.w	r0, [sp, #22]
 80110ec:	f8ad 6018 	strh.w	r6, [sp, #24]
 80110f0:	f8ad 701a 	strh.w	r7, [sp, #26]
 80110f4:	f8ad c01c 	strh.w	ip, [sp, #28]
 80110f8:	f8ad 101e 	strh.w	r1, [sp, #30]
 80110fc:	e7aa      	b.n	8011054 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 80110fe:	d003      	beq.n	8011108 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011100:	eba8 0505 	sub.w	r5, r8, r5
 8011104:	2d00      	cmp	r5, #0
 8011106:	dcdd      	bgt.n	80110c4 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8011108:	fa1f f58e 	uxth.w	r5, lr
 801110c:	fa1f f88a 	uxth.w	r8, sl
 8011110:	4442      	add	r2, r8
 8011112:	442b      	add	r3, r5
 8011114:	f8ad 7012 	strh.w	r7, [sp, #18]
 8011118:	1a51      	subs	r1, r2, r1
 801111a:	ebac 0705 	sub.w	r7, ip, r5
 801111e:	eba0 0008 	sub.w	r0, r0, r8
 8011122:	eba3 0c0c 	sub.w	ip, r3, ip
 8011126:	f8ad e010 	strh.w	lr, [sp, #16]
 801112a:	f8ad 7014 	strh.w	r7, [sp, #20]
 801112e:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011132:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011136:	f8ad a01a 	strh.w	sl, [sp, #26]
 801113a:	f8ad c01c 	strh.w	ip, [sp, #28]
 801113e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011142:	e787      	b.n	8011054 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08011144 <_ZN8touchgfx7CWRUtil4sineEi>:
 8011144:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8011148:	fb90 f2f3 	sdiv	r2, r0, r3
 801114c:	fb02 0013 	mls	r0, r2, r3, r0
 8011150:	2800      	cmp	r0, #0
 8011152:	bfb8      	it	lt
 8011154:	18c0      	addlt	r0, r0, r3
 8011156:	285a      	cmp	r0, #90	; 0x5a
 8011158:	4b09      	ldr	r3, [pc, #36]	; (8011180 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 801115a:	dc02      	bgt.n	8011162 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 801115c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8011160:	4770      	bx	lr
 8011162:	28b4      	cmp	r0, #180	; 0xb4
 8011164:	dc02      	bgt.n	801116c <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8011166:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 801116a:	e7f7      	b.n	801115c <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 801116c:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8011170:	bfd4      	ite	le
 8011172:	38b4      	suble	r0, #180	; 0xb4
 8011174:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8011178:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801117c:	4240      	negs	r0, r0
 801117e:	4770      	bx	lr
 8011180:	0802c94c 	.word	0x0802c94c

08011184 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8011184:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8011188:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801118a:	fb90 f2f3 	sdiv	r2, r0, r3
 801118e:	fb02 0013 	mls	r0, r2, r3, r0
 8011192:	2800      	cmp	r0, #0
 8011194:	bfb8      	it	lt
 8011196:	18c0      	addlt	r0, r0, r3
 8011198:	1144      	asrs	r4, r0, #5
 801119a:	f000 061f 	and.w	r6, r0, #31
 801119e:	4620      	mov	r0, r4
 80111a0:	f7ff ffd0 	bl	8011144 <_ZN8touchgfx7CWRUtil4sineEi>
 80111a4:	4605      	mov	r5, r0
 80111a6:	b90e      	cbnz	r6, 80111ac <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 80111a8:	b002      	add	sp, #8
 80111aa:	bd70      	pop	{r4, r5, r6, pc}
 80111ac:	1c60      	adds	r0, r4, #1
 80111ae:	f7ff ffc9 	bl	8011144 <_ZN8touchgfx7CWRUtil4sineEi>
 80111b2:	ab01      	add	r3, sp, #4
 80111b4:	2220      	movs	r2, #32
 80111b6:	4631      	mov	r1, r6
 80111b8:	1b40      	subs	r0, r0, r5
 80111ba:	f005 f967 	bl	801648c <_ZN8touchgfx6muldivElllRl>
 80111be:	4428      	add	r0, r5
 80111c0:	e7f2      	b.n	80111a8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

080111c2 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 80111c2:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 80111c6:	bf2c      	ite	cs
 80111c8:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 80111cc:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 80111d0:	2300      	movs	r3, #0
 80111d2:	1899      	adds	r1, r3, r2
 80111d4:	4288      	cmp	r0, r1
 80111d6:	bf24      	itt	cs
 80111d8:	1853      	addcs	r3, r2, r1
 80111da:	1a40      	subcs	r0, r0, r1
 80111dc:	0892      	lsrs	r2, r2, #2
 80111de:	ea4f 0353 	mov.w	r3, r3, lsr #1
 80111e2:	d1f6      	bne.n	80111d2 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 80111e4:	4618      	mov	r0, r3
 80111e6:	4770      	bx	lr

080111e8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 80111e8:	b510      	push	{r4, lr}
 80111ea:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 80111ee:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 80111f2:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 80111f6:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 80111fa:	13a4      	asrs	r4, r4, #14
 80111fc:	139b      	asrs	r3, r3, #14
 80111fe:	429c      	cmp	r4, r3
 8011200:	bfb8      	it	lt
 8011202:	461c      	movlt	r4, r3
 8011204:	2c01      	cmp	r4, #1
 8011206:	dd07      	ble.n	8011218 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8011208:	fb91 f1f4 	sdiv	r1, r1, r4
 801120c:	fb90 f0f4 	sdiv	r0, r0, r4
 8011210:	f7ff ffea 	bl	80111e8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011214:	4360      	muls	r0, r4
 8011216:	bd10      	pop	{r4, pc}
 8011218:	4340      	muls	r0, r0
 801121a:	fb01 0001 	mla	r0, r1, r1, r0
 801121e:	f7ff ffd0 	bl	80111c2 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8011222:	e7f8      	b.n	8011216 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08011224 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8011224:	2800      	cmp	r0, #0
 8011226:	b508      	push	{r3, lr}
 8011228:	da05      	bge.n	8011236 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 801122a:	4240      	negs	r0, r0
 801122c:	f7ff fffa 	bl	8011224 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011230:	4240      	negs	r0, r0
 8011232:	b240      	sxtb	r0, r0
 8011234:	bd08      	pop	{r3, pc}
 8011236:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 801123a:	dc11      	bgt.n	8011260 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 801123c:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8011240:	dd09      	ble.n	8011256 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8011242:	4340      	muls	r0, r0
 8011244:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8011248:	f7ff ffbb 	bl	80111c2 <_ZN8touchgfx7CWRUtil5isqrtEm>
 801124c:	f7ff ffea 	bl	8011224 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011250:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8011254:	e7ed      	b.n	8011232 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8011256:	3003      	adds	r0, #3
 8011258:	10c0      	asrs	r0, r0, #3
 801125a:	4b02      	ldr	r3, [pc, #8]	; (8011264 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 801125c:	5618      	ldrsb	r0, [r3, r0]
 801125e:	e7e9      	b.n	8011234 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8011260:	2000      	movs	r0, #0
 8011262:	e7e7      	b.n	8011234 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8011264:	0802c8f0 	.word	0x0802c8f0

08011268 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8011268:	4281      	cmp	r1, r0
 801126a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801126c:	460c      	mov	r4, r1
 801126e:	4615      	mov	r5, r2
 8011270:	dd07      	ble.n	8011282 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8011272:	4601      	mov	r1, r0
 8011274:	4620      	mov	r0, r4
 8011276:	f7ff fff7 	bl	8011268 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 801127a:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 801127e:	b003      	add	sp, #12
 8011280:	bd30      	pop	{r4, r5, pc}
 8011282:	f7ff ffb1 	bl	80111e8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011286:	6028      	str	r0, [r5, #0]
 8011288:	2800      	cmp	r0, #0
 801128a:	d0f8      	beq.n	801127e <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 801128c:	4602      	mov	r2, r0
 801128e:	ab01      	add	r3, sp, #4
 8011290:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8011294:	4620      	mov	r0, r4
 8011296:	f005 f8f9 	bl	801648c <_ZN8touchgfx6muldivElllRl>
 801129a:	f7ff ffc3 	bl	8011224 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 801129e:	e7ee      	b.n	801127e <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

080112a0 <_ZN8touchgfx4LineC1Ev>:
 80112a0:	b510      	push	{r4, lr}
 80112a2:	4604      	mov	r4, r0
 80112a4:	f7ff fe0a 	bl	8010ebc <_ZN8touchgfx12CanvasWidgetC1Ev>
 80112a8:	4b0c      	ldr	r3, [pc, #48]	; (80112dc <_ZN8touchgfx4LineC1Ev+0x3c>)
 80112aa:	6023      	str	r3, [r4, #0]
 80112ac:	2220      	movs	r2, #32
 80112ae:	2300      	movs	r3, #0
 80112b0:	63e2      	str	r2, [r4, #60]	; 0x3c
 80112b2:	2212      	movs	r2, #18
 80112b4:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80112b8:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 80112bc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80112c0:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 80112c4:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 80112c8:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 80112cc:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 80112d0:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 80112d4:	66e2      	str	r2, [r4, #108]	; 0x6c
 80112d6:	60a3      	str	r3, [r4, #8]
 80112d8:	4620      	mov	r0, r4
 80112da:	bd10      	pop	{r4, pc}
 80112dc:	0802ca0c 	.word	0x0802ca0c

080112e0 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 80112e0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80112e4:	6b47      	ldr	r7, [r0, #52]	; 0x34
 80112e6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80112e8:	6b85      	ldr	r5, [r0, #56]	; 0x38
 80112ea:	6b02      	ldr	r2, [r0, #48]	; 0x30
 80112ec:	1aff      	subs	r7, r7, r3
 80112ee:	4604      	mov	r4, r0
 80112f0:	eba5 0502 	sub.w	r5, r5, r2
 80112f4:	d142      	bne.n	801137c <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 80112f6:	b955      	cbnz	r5, 801130e <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 80112f8:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 80112fc:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8011300:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8011304:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8011308:	b002      	add	sp, #8
 801130a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801130e:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8011312:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8011316:	4629      	mov	r1, r5
 8011318:	4642      	mov	r2, r8
 801131a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801131c:	f005 f8d5 	bl	80164ca <_ZN8touchgfx6muldivElll>
 8011320:	2502      	movs	r5, #2
 8011322:	4642      	mov	r2, r8
 8011324:	fb90 f6f5 	sdiv	r6, r0, r5
 8011328:	4639      	mov	r1, r7
 801132a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801132c:	f005 f8cd 	bl	80164ca <_ZN8touchgfx6muldivElll>
 8011330:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8011334:	fb90 f5f5 	sdiv	r5, r0, r5
 8011338:	f1b9 0f00 	cmp.w	r9, #0
 801133c:	d067      	beq.n	801140e <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 801133e:	f1b9 0f02 	cmp.w	r9, #2
 8011342:	d878      	bhi.n	8011436 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8011344:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011346:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8011348:	1b93      	subs	r3, r2, r6
 801134a:	1b5b      	subs	r3, r3, r5
 801134c:	6463      	str	r3, [r4, #68]	; 0x44
 801134e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011350:	18e9      	adds	r1, r5, r3
 8011352:	1b89      	subs	r1, r1, r6
 8011354:	6561      	str	r1, [r4, #84]	; 0x54
 8011356:	1b81      	subs	r1, r0, r6
 8011358:	4429      	add	r1, r5
 801135a:	64a1      	str	r1, [r4, #72]	; 0x48
 801135c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 801135e:	4430      	add	r0, r6
 8011360:	186f      	adds	r7, r5, r1
 8011362:	4432      	add	r2, r6
 8011364:	1b49      	subs	r1, r1, r5
 8011366:	4437      	add	r7, r6
 8011368:	4428      	add	r0, r5
 801136a:	4431      	add	r1, r6
 801136c:	1b52      	subs	r2, r2, r5
 801136e:	1b5b      	subs	r3, r3, r5
 8011370:	65a7      	str	r7, [r4, #88]	; 0x58
 8011372:	64e0      	str	r0, [r4, #76]	; 0x4c
 8011374:	65e1      	str	r1, [r4, #92]	; 0x5c
 8011376:	6522      	str	r2, [r4, #80]	; 0x50
 8011378:	1b9b      	subs	r3, r3, r6
 801137a:	e05b      	b.n	8011434 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 801137c:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8011380:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8011384:	2d00      	cmp	r5, #0
 8011386:	d0c6      	beq.n	8011316 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8011388:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 801138c:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8011390:	fb93 f2f8 	sdiv	r2, r3, r8
 8011394:	fb08 3312 	mls	r3, r8, r2, r3
 8011398:	b353      	cbz	r3, 80113f0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 801139a:	fb98 f2f3 	sdiv	r2, r8, r3
 801139e:	fb03 8812 	mls	r8, r3, r2, r8
 80113a2:	f1b8 0f00 	cmp.w	r8, #0
 80113a6:	d1f3      	bne.n	8011390 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 80113a8:	2b01      	cmp	r3, #1
 80113aa:	bf1c      	itt	ne
 80113ac:	fb95 f5f3 	sdivne	r5, r5, r3
 80113b0:	fb97 f7f3 	sdivne	r7, r7, r3
 80113b4:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 80113b8:	f24b 5104 	movw	r1, #46340	; 0xb504
 80113bc:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 80113c0:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 80113c4:	428b      	cmp	r3, r1
 80113c6:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 80113ca:	4608      	mov	r0, r1
 80113cc:	dd01      	ble.n	80113d2 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 80113ce:	428a      	cmp	r2, r1
 80113d0:	dc10      	bgt.n	80113f4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 80113d2:	fb90 f3f3 	sdiv	r3, r0, r3
 80113d6:	fb90 f2f2 	sdiv	r2, r0, r2
 80113da:	4293      	cmp	r3, r2
 80113dc:	bfa8      	it	ge
 80113de:	4613      	movge	r3, r2
 80113e0:	435f      	muls	r7, r3
 80113e2:	435d      	muls	r5, r3
 80113e4:	4629      	mov	r1, r5
 80113e6:	4638      	mov	r0, r7
 80113e8:	f7ff fefe 	bl	80111e8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80113ec:	4680      	mov	r8, r0
 80113ee:	e792      	b.n	8011316 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 80113f0:	4643      	mov	r3, r8
 80113f2:	e7d9      	b.n	80113a8 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 80113f4:	fb93 f3f1 	sdiv	r3, r3, r1
 80113f8:	fb92 f2f1 	sdiv	r2, r2, r1
 80113fc:	4293      	cmp	r3, r2
 80113fe:	bfcc      	ite	gt
 8011400:	3301      	addgt	r3, #1
 8011402:	1c53      	addle	r3, r2, #1
 8011404:	fb97 f7f3 	sdiv	r7, r7, r3
 8011408:	fb95 f5f3 	sdiv	r5, r5, r3
 801140c:	e7ea      	b.n	80113e4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 801140e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011410:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8011412:	1b93      	subs	r3, r2, r6
 8011414:	6463      	str	r3, [r4, #68]	; 0x44
 8011416:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011418:	18e9      	adds	r1, r5, r3
 801141a:	6561      	str	r1, [r4, #84]	; 0x54
 801141c:	1b81      	subs	r1, r0, r6
 801141e:	64a1      	str	r1, [r4, #72]	; 0x48
 8011420:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8011422:	4430      	add	r0, r6
 8011424:	186f      	adds	r7, r5, r1
 8011426:	4432      	add	r2, r6
 8011428:	1b49      	subs	r1, r1, r5
 801142a:	65a7      	str	r7, [r4, #88]	; 0x58
 801142c:	64e0      	str	r0, [r4, #76]	; 0x4c
 801142e:	65e1      	str	r1, [r4, #92]	; 0x5c
 8011430:	6522      	str	r2, [r4, #80]	; 0x50
 8011432:	1b5b      	subs	r3, r3, r5
 8011434:	6623      	str	r3, [r4, #96]	; 0x60
 8011436:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8011438:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801143a:	9200      	str	r2, [sp, #0]
 801143c:	9301      	str	r3, [sp, #4]
 801143e:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8011442:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8011446:	680f      	ldr	r7, [r1, #0]
 8011448:	9800      	ldr	r0, [sp, #0]
 801144a:	42ba      	cmp	r2, r7
 801144c:	bfa8      	it	ge
 801144e:	463a      	movge	r2, r7
 8011450:	4287      	cmp	r7, r0
 8011452:	bfc8      	it	gt
 8011454:	9700      	strgt	r7, [sp, #0]
 8011456:	690f      	ldr	r7, [r1, #16]
 8011458:	9801      	ldr	r0, [sp, #4]
 801145a:	42bb      	cmp	r3, r7
 801145c:	bfa8      	it	ge
 801145e:	463b      	movge	r3, r7
 8011460:	3104      	adds	r1, #4
 8011462:	4287      	cmp	r7, r0
 8011464:	bfc8      	it	gt
 8011466:	9701      	strgt	r7, [sp, #4]
 8011468:	458c      	cmp	ip, r1
 801146a:	d1ec      	bne.n	8011446 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 801146c:	4668      	mov	r0, sp
 801146e:	2720      	movs	r7, #32
 8011470:	fb92 f8f7 	sdiv	r8, r2, r7
 8011474:	fb93 f7f7 	sdiv	r7, r3, r7
 8011478:	f7ff fd57 	bl	8010f2a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801147c:	4682      	mov	sl, r0
 801147e:	a801      	add	r0, sp, #4
 8011480:	f7ff fd53 	bl	8010f2a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8011484:	ebaa 0208 	sub.w	r2, sl, r8
 8011488:	1bc0      	subs	r0, r0, r7
 801148a:	f1b9 0f01 	cmp.w	r9, #1
 801148e:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8011492:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8011496:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 801149a:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 801149e:	f47f af33 	bne.w	8011308 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 80114a2:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 80114a4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80114a6:	1b83      	subs	r3, r0, r6
 80114a8:	6463      	str	r3, [r4, #68]	; 0x44
 80114aa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80114ac:	18ea      	adds	r2, r5, r3
 80114ae:	6562      	str	r2, [r4, #84]	; 0x54
 80114b0:	1b8a      	subs	r2, r1, r6
 80114b2:	64a2      	str	r2, [r4, #72]	; 0x48
 80114b4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80114b6:	4431      	add	r1, r6
 80114b8:	18af      	adds	r7, r5, r2
 80114ba:	4406      	add	r6, r0
 80114bc:	1b52      	subs	r2, r2, r5
 80114be:	1b5d      	subs	r5, r3, r5
 80114c0:	65a7      	str	r7, [r4, #88]	; 0x58
 80114c2:	64e1      	str	r1, [r4, #76]	; 0x4c
 80114c4:	65e2      	str	r2, [r4, #92]	; 0x5c
 80114c6:	6526      	str	r6, [r4, #80]	; 0x50
 80114c8:	6625      	str	r5, [r4, #96]	; 0x60
 80114ca:	e71d      	b.n	8011308 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

080114cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 80114cc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80114ce:	428b      	cmp	r3, r1
 80114d0:	d102      	bne.n	80114d8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 80114d2:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80114d4:	4293      	cmp	r3, r2
 80114d6:	d003      	beq.n	80114e0 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 80114d8:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 80114dc:	f7ff bf00 	b.w	80112e0 <_ZN8touchgfx4Line17updateCachedShapeEv>
 80114e0:	4770      	bx	lr

080114e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 80114e2:	6b43      	ldr	r3, [r0, #52]	; 0x34
 80114e4:	428b      	cmp	r3, r1
 80114e6:	d102      	bne.n	80114ee <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 80114e8:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80114ea:	4293      	cmp	r3, r2
 80114ec:	d003      	beq.n	80114f6 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 80114ee:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 80114f2:	f7ff bef5 	b.w	80112e0 <_ZN8touchgfx4Line17updateCachedShapeEv>
 80114f6:	4770      	bx	lr

080114f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 80114f8:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 80114fc:	f7ff bef0 	b.w	80112e0 <_ZN8touchgfx4Line17updateCachedShapeEv>

08011500 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8011500:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011504:	b0a0      	sub	sp, #128	; 0x80
 8011506:	4604      	mov	r4, r0
 8011508:	460a      	mov	r2, r1
 801150a:	4601      	mov	r1, r0
 801150c:	a804      	add	r0, sp, #16
 801150e:	f014 fc47 	bl	8025da0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8011512:	2300      	movs	r3, #0
 8011514:	9301      	str	r3, [sp, #4]
 8011516:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 801151a:	2b01      	cmp	r3, #1
 801151c:	d17c      	bne.n	8011618 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 801151e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8011520:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011522:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8011524:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8011526:	1ac0      	subs	r0, r0, r3
 8011528:	eba1 0102 	sub.w	r1, r1, r2
 801152c:	d437      	bmi.n	801159e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 801152e:	2900      	cmp	r1, #0
 8011530:	aa01      	add	r2, sp, #4
 8011532:	db2e      	blt.n	8011592 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8011534:	f7ff fe98 	bl	8011268 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011538:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 801153c:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801153e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8011540:	a804      	add	r0, sp, #16
 8011542:	f014 fdad 	bl	80260a0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8011546:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8011548:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 801154a:	a804      	add	r0, sp, #16
 801154c:	f014 fdf5 	bl	802613a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011550:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8011552:	2db3      	cmp	r5, #179	; 0xb3
 8011554:	dc33      	bgt.n	80115be <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8011556:	eba6 0805 	sub.w	r8, r6, r5
 801155a:	4640      	mov	r0, r8
 801155c:	f7ff fdf2 	bl	8011144 <_ZN8touchgfx7CWRUtil4sineEi>
 8011560:	a902      	add	r1, sp, #8
 8011562:	9002      	str	r0, [sp, #8]
 8011564:	a801      	add	r0, sp, #4
 8011566:	f7ff fcd5 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801156a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801156c:	1847      	adds	r7, r0, r1
 801156e:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8011572:	f7ff fde7 	bl	8011144 <_ZN8touchgfx7CWRUtil4sineEi>
 8011576:	a903      	add	r1, sp, #12
 8011578:	9003      	str	r0, [sp, #12]
 801157a:	a801      	add	r0, sp, #4
 801157c:	f7ff fcca 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011580:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8011582:	4639      	mov	r1, r7
 8011584:	1a12      	subs	r2, r2, r0
 8011586:	a804      	add	r0, sp, #16
 8011588:	f014 fdd7 	bl	802613a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801158c:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 801158e:	441d      	add	r5, r3
 8011590:	e7df      	b.n	8011552 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8011592:	4249      	negs	r1, r1
 8011594:	f7ff fe68 	bl	8011268 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011598:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 801159c:	e7ce      	b.n	801153c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801159e:	2900      	cmp	r1, #0
 80115a0:	f1c0 0000 	rsb	r0, r0, #0
 80115a4:	aa01      	add	r2, sp, #4
 80115a6:	db04      	blt.n	80115b2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 80115a8:	f7ff fe5e 	bl	8011268 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80115ac:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 80115b0:	e7c4      	b.n	801153c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80115b2:	4249      	negs	r1, r1
 80115b4:	f7ff fe58 	bl	8011268 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80115b8:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 80115bc:	e7be      	b.n	801153c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80115be:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80115c0:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80115c2:	a804      	add	r0, sp, #16
 80115c4:	f014 fdb9 	bl	802613a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80115c8:	6e22      	ldr	r2, [r4, #96]	; 0x60
 80115ca:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80115cc:	a804      	add	r0, sp, #16
 80115ce:	f014 fdb4 	bl	802613a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80115d2:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80115d4:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 80115d8:	2d00      	cmp	r5, #0
 80115da:	dd31      	ble.n	8011640 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 80115dc:	eb05 0806 	add.w	r8, r5, r6
 80115e0:	4640      	mov	r0, r8
 80115e2:	f7ff fdaf 	bl	8011144 <_ZN8touchgfx7CWRUtil4sineEi>
 80115e6:	a902      	add	r1, sp, #8
 80115e8:	9002      	str	r0, [sp, #8]
 80115ea:	a801      	add	r0, sp, #4
 80115ec:	f7ff fc92 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80115f0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80115f2:	1847      	adds	r7, r0, r1
 80115f4:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 80115f8:	f7ff fda4 	bl	8011144 <_ZN8touchgfx7CWRUtil4sineEi>
 80115fc:	a903      	add	r1, sp, #12
 80115fe:	9003      	str	r0, [sp, #12]
 8011600:	a801      	add	r0, sp, #4
 8011602:	f7ff fc87 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011606:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8011608:	4639      	mov	r1, r7
 801160a:	1a12      	subs	r2, r2, r0
 801160c:	a804      	add	r0, sp, #16
 801160e:	f014 fd94 	bl	802613a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011612:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8011614:	1aed      	subs	r5, r5, r3
 8011616:	e7df      	b.n	80115d8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8011618:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801161a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 801161c:	a804      	add	r0, sp, #16
 801161e:	f014 fd3f 	bl	80260a0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8011622:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8011624:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8011626:	a804      	add	r0, sp, #16
 8011628:	f014 fd87 	bl	802613a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801162c:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 801162e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8011630:	a804      	add	r0, sp, #16
 8011632:	f014 fd82 	bl	802613a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011636:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8011638:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801163a:	a804      	add	r0, sp, #16
 801163c:	f014 fd7d 	bl	802613a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011640:	21ff      	movs	r1, #255	; 0xff
 8011642:	a804      	add	r0, sp, #16
 8011644:	f014 fc68 	bl	8025f18 <_ZN8touchgfx6Canvas6renderEh>
 8011648:	4b04      	ldr	r3, [pc, #16]	; (801165c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 801164a:	9304      	str	r3, [sp, #16]
 801164c:	4604      	mov	r4, r0
 801164e:	a80c      	add	r0, sp, #48	; 0x30
 8011650:	f001 f8cc 	bl	80127ec <_ZN8touchgfx7OutlineD1Ev>
 8011654:	4620      	mov	r0, r4
 8011656:	b020      	add	sp, #128	; 0x80
 8011658:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801165c:	0802d234 	.word	0x0802d234

08011660 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8011660:	2000      	movs	r0, #0
 8011662:	4770      	bx	lr

08011664 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8011664:	4b07      	ldr	r3, [pc, #28]	; (8011684 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8011666:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011668:	881b      	ldrh	r3, [r3, #0]
 801166a:	4293      	cmp	r3, r2
 801166c:	bf81      	itttt	hi
 801166e:	4b06      	ldrhi	r3, [pc, #24]	; (8011688 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8011670:	681b      	ldrhi	r3, [r3, #0]
 8011672:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8011676:	7858      	ldrbhi	r0, [r3, #1]
 8011678:	bf8c      	ite	hi
 801167a:	f000 0003 	andhi.w	r0, r0, #3
 801167e:	2000      	movls	r0, #0
 8011680:	4770      	bx	lr
 8011682:	bf00      	nop
 8011684:	20013830 	.word	0x20013830
 8011688:	2001382c 	.word	0x2001382c

0801168c <_ZN8touchgfx8TextAreaD1Ev>:
 801168c:	4770      	bx	lr
	...

08011690 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8011690:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011694:	4b10      	ldr	r3, [pc, #64]	; (80116d8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8011696:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011698:	881b      	ldrh	r3, [r3, #0]
 801169a:	428b      	cmp	r3, r1
 801169c:	4604      	mov	r4, r0
 801169e:	d918      	bls.n	80116d2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 80116a0:	6803      	ldr	r3, [r0, #0]
 80116a2:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 80116a4:	4b0d      	ldr	r3, [pc, #52]	; (80116dc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 80116a6:	6818      	ldr	r0, [r3, #0]
 80116a8:	f7f6 fc44 	bl	8007f34 <_ZNK8touchgfx5Texts7getTextEt>
 80116ac:	6823      	ldr	r3, [r4, #0]
 80116ae:	4606      	mov	r6, r0
 80116b0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80116b2:	4620      	mov	r0, r4
 80116b4:	4798      	blx	r3
 80116b6:	6823      	ldr	r3, [r4, #0]
 80116b8:	4607      	mov	r7, r0
 80116ba:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80116be:	4620      	mov	r0, r4
 80116c0:	4798      	blx	r3
 80116c2:	463a      	mov	r2, r7
 80116c4:	4603      	mov	r3, r0
 80116c6:	4631      	mov	r1, r6
 80116c8:	4620      	mov	r0, r4
 80116ca:	46ac      	mov	ip, r5
 80116cc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80116d0:	4760      	bx	ip
 80116d2:	2000      	movs	r0, #0
 80116d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80116d8:	20013830 	.word	0x20013830
 80116dc:	20013838 	.word	0x20013838

080116e0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 80116e0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80116e4:	4b17      	ldr	r3, [pc, #92]	; (8011744 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 80116e6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80116e8:	881b      	ldrh	r3, [r3, #0]
 80116ea:	428b      	cmp	r3, r1
 80116ec:	4604      	mov	r4, r0
 80116ee:	d926      	bls.n	801173e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 80116f0:	4b15      	ldr	r3, [pc, #84]	; (8011748 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 80116f2:	681b      	ldr	r3, [r3, #0]
 80116f4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 80116f8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 80116fc:	4b13      	ldr	r3, [pc, #76]	; (801174c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 80116fe:	7855      	ldrb	r5, [r2, #1]
 8011700:	681b      	ldr	r3, [r3, #0]
 8011702:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8011706:	6833      	ldr	r3, [r6, #0]
 8011708:	69df      	ldr	r7, [r3, #28]
 801170a:	4b11      	ldr	r3, [pc, #68]	; (8011750 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 801170c:	6818      	ldr	r0, [r3, #0]
 801170e:	f7f6 fc11 	bl	8007f34 <_ZNK8touchgfx5Texts7getTextEt>
 8011712:	6823      	ldr	r3, [r4, #0]
 8011714:	4680      	mov	r8, r0
 8011716:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011718:	4620      	mov	r0, r4
 801171a:	4798      	blx	r3
 801171c:	6823      	ldr	r3, [r4, #0]
 801171e:	4681      	mov	r9, r0
 8011720:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011724:	4620      	mov	r0, r4
 8011726:	4798      	blx	r3
 8011728:	f3c5 0581 	ubfx	r5, r5, #2, #2
 801172c:	9000      	str	r0, [sp, #0]
 801172e:	464b      	mov	r3, r9
 8011730:	4642      	mov	r2, r8
 8011732:	4629      	mov	r1, r5
 8011734:	4630      	mov	r0, r6
 8011736:	47b8      	blx	r7
 8011738:	b003      	add	sp, #12
 801173a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801173e:	2000      	movs	r0, #0
 8011740:	e7fa      	b.n	8011738 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8011742:	bf00      	nop
 8011744:	20013830 	.word	0x20013830
 8011748:	2001382c 	.word	0x2001382c
 801174c:	20013834 	.word	0x20013834
 8011750:	20013838 	.word	0x20013838

08011754 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8011754:	b40e      	push	{r1, r2, r3}
 8011756:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801175a:	4b2f      	ldr	r3, [pc, #188]	; (8011818 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 801175c:	881a      	ldrh	r2, [r3, #0]
 801175e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8011760:	429a      	cmp	r2, r3
 8011762:	b09d      	sub	sp, #116	; 0x74
 8011764:	4604      	mov	r4, r0
 8011766:	d954      	bls.n	8011812 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8011768:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 801181c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 801176c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8011820 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8011770:	aa26      	add	r2, sp, #152	; 0x98
 8011772:	9202      	str	r2, [sp, #8]
 8011774:	f8d9 2000 	ldr.w	r2, [r9]
 8011778:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801177c:	f8d8 3000 	ldr.w	r3, [r8]
 8011780:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011784:	682b      	ldr	r3, [r5, #0]
 8011786:	4628      	mov	r0, r5
 8011788:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801178a:	4798      	blx	r3
 801178c:	b207      	sxth	r7, r0
 801178e:	4606      	mov	r6, r0
 8011790:	a803      	add	r0, sp, #12
 8011792:	f005 fa57 	bl	8016c44 <_ZN8touchgfx12TextProviderC1Ev>
 8011796:	682b      	ldr	r3, [r5, #0]
 8011798:	4628      	mov	r0, r5
 801179a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801179c:	4798      	blx	r3
 801179e:	682b      	ldr	r3, [r5, #0]
 80117a0:	4682      	mov	sl, r0
 80117a2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80117a4:	4628      	mov	r0, r5
 80117a6:	4798      	blx	r3
 80117a8:	4653      	mov	r3, sl
 80117aa:	9000      	str	r0, [sp, #0]
 80117ac:	9a02      	ldr	r2, [sp, #8]
 80117ae:	9925      	ldr	r1, [sp, #148]	; 0x94
 80117b0:	a803      	add	r0, sp, #12
 80117b2:	f005 faa2 	bl	8016cfa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80117b6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80117b8:	f8d9 3000 	ldr.w	r3, [r9]
 80117bc:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 80117c0:	8925      	ldrh	r5, [r4, #8]
 80117c2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 80117c6:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 80117ca:	eba5 050c 	sub.w	r5, r5, ip
 80117ce:	784a      	ldrb	r2, [r1, #1]
 80117d0:	f8d8 3000 	ldr.w	r3, [r8]
 80117d4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 80117d8:	b22d      	sxth	r5, r5
 80117da:	9500      	str	r5, [sp, #0]
 80117dc:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80117e0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80117e4:	a803      	add	r0, sp, #12
 80117e6:	f002 feed 	bl	80145c4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 80117ea:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 80117ee:	18b9      	adds	r1, r7, r2
 80117f0:	2900      	cmp	r1, #0
 80117f2:	b203      	sxth	r3, r0
 80117f4:	dd0b      	ble.n	801180e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 80117f6:	3b01      	subs	r3, #1
 80117f8:	fb13 f302 	smulbb	r3, r3, r2
 80117fc:	fb16 3300 	smlabb	r3, r6, r0, r3
 8011800:	b21f      	sxth	r7, r3
 8011802:	4638      	mov	r0, r7
 8011804:	b01d      	add	sp, #116	; 0x74
 8011806:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801180a:	b003      	add	sp, #12
 801180c:	4770      	bx	lr
 801180e:	2b00      	cmp	r3, #0
 8011810:	dcf7      	bgt.n	8011802 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011812:	2700      	movs	r7, #0
 8011814:	e7f5      	b.n	8011802 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011816:	bf00      	nop
 8011818:	20013830 	.word	0x20013830
 801181c:	2001382c 	.word	0x2001382c
 8011820:	20013834 	.word	0x20013834

08011824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8011824:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011828:	4bbc      	ldr	r3, [pc, #752]	; (8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 801182a:	460c      	mov	r4, r1
 801182c:	881b      	ldrh	r3, [r3, #0]
 801182e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8011830:	428b      	cmp	r3, r1
 8011832:	b0a9      	sub	sp, #164	; 0xa4
 8011834:	4680      	mov	r8, r0
 8011836:	d809      	bhi.n	801184c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8011838:	2300      	movs	r3, #0
 801183a:	f04f 32ff 	mov.w	r2, #4294967295
 801183e:	e9c0 3200 	strd	r3, r2, [r0]
 8011842:	6083      	str	r3, [r0, #8]
 8011844:	4640      	mov	r0, r8
 8011846:	b029      	add	sp, #164	; 0xa4
 8011848:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801184c:	4eb4      	ldr	r6, [pc, #720]	; (8011b20 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 801184e:	6833      	ldr	r3, [r6, #0]
 8011850:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8011854:	4bb3      	ldr	r3, [pc, #716]	; (8011b24 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8011856:	681b      	ldr	r3, [r3, #0]
 8011858:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801185c:	4bb2      	ldr	r3, [pc, #712]	; (8011b28 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801185e:	6818      	ldr	r0, [r3, #0]
 8011860:	f7f6 fb68 	bl	8007f34 <_ZNK8touchgfx5Texts7getTextEt>
 8011864:	682b      	ldr	r3, [r5, #0]
 8011866:	4681      	mov	r9, r0
 8011868:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801186a:	4628      	mov	r0, r5
 801186c:	4798      	blx	r3
 801186e:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8011870:	b203      	sxth	r3, r0
 8011872:	4407      	add	r7, r0
 8011874:	9304      	str	r3, [sp, #16]
 8011876:	b2bb      	uxth	r3, r7
 8011878:	9303      	str	r3, [sp, #12]
 801187a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 801187e:	4682      	mov	sl, r0
 8011880:	a80f      	add	r0, sp, #60	; 0x3c
 8011882:	2b00      	cmp	r3, #0
 8011884:	f040 80a6 	bne.w	80119d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8011888:	f005 f9dc 	bl	8016c44 <_ZN8touchgfx12TextProviderC1Ev>
 801188c:	682b      	ldr	r3, [r5, #0]
 801188e:	4628      	mov	r0, r5
 8011890:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011892:	4798      	blx	r3
 8011894:	682b      	ldr	r3, [r5, #0]
 8011896:	4606      	mov	r6, r0
 8011898:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801189a:	4628      	mov	r0, r5
 801189c:	4798      	blx	r3
 801189e:	6823      	ldr	r3, [r4, #0]
 80118a0:	4607      	mov	r7, r0
 80118a2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80118a4:	4620      	mov	r0, r4
 80118a6:	4798      	blx	r3
 80118a8:	6823      	ldr	r3, [r4, #0]
 80118aa:	4683      	mov	fp, r0
 80118ac:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80118b0:	4620      	mov	r0, r4
 80118b2:	4798      	blx	r3
 80118b4:	463b      	mov	r3, r7
 80118b6:	e9cd b000 	strd	fp, r0, [sp]
 80118ba:	4649      	mov	r1, r9
 80118bc:	4632      	mov	r2, r6
 80118be:	a80f      	add	r0, sp, #60	; 0x3c
 80118c0:	f005 fa30 	bl	8016d24 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80118c4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80118c8:	f8df b254 	ldr.w	fp, [pc, #596]	; 8011b20 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 80118cc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80118d0:	f04f 0600 	mov.w	r6, #0
 80118d4:	bf0c      	ite	eq
 80118d6:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 80118da:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 80118de:	4637      	mov	r7, r6
 80118e0:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80118e2:	f8db 3000 	ldr.w	r3, [fp]
 80118e6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80118ea:	4629      	mov	r1, r5
 80118ec:	785b      	ldrb	r3, [r3, #1]
 80118ee:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80118f2:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80118f6:	a80f      	add	r0, sp, #60	; 0x3c
 80118f8:	f002 fb7f 	bl	8013ffa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80118fc:	9b03      	ldr	r3, [sp, #12]
 80118fe:	4286      	cmp	r6, r0
 8011900:	bfb8      	it	lt
 8011902:	4606      	movlt	r6, r0
 8011904:	3701      	adds	r7, #1
 8011906:	eba9 0903 	sub.w	r9, r9, r3
 801190a:	a80f      	add	r0, sp, #60	; 0x3c
 801190c:	b236      	sxth	r6, r6
 801190e:	b2bf      	uxth	r7, r7
 8011910:	fa0f f989 	sxth.w	r9, r9
 8011914:	f005 f9bd 	bl	8016c92 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8011918:	b918      	cbnz	r0, 8011922 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801191a:	7a2b      	ldrb	r3, [r5, #8]
 801191c:	444b      	add	r3, r9
 801191e:	2b00      	cmp	r3, #0
 8011920:	dcde      	bgt.n	80118e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8011922:	9b03      	ldr	r3, [sp, #12]
 8011924:	9a04      	ldr	r2, [sp, #16]
 8011926:	f895 9009 	ldrb.w	r9, [r5, #9]
 801192a:	fb13 f707 	smulbb	r7, r3, r7
 801192e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8011930:	1aff      	subs	r7, r7, r3
 8011932:	b2bf      	uxth	r7, r7
 8011934:	b23b      	sxth	r3, r7
 8011936:	429a      	cmp	r2, r3
 8011938:	bfa8      	it	ge
 801193a:	4657      	movge	r7, sl
 801193c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011940:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011944:	6823      	ldr	r3, [r4, #0]
 8011946:	bf08      	it	eq
 8011948:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 801194c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801194e:	bf18      	it	ne
 8011950:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8011954:	4620      	mov	r0, r4
 8011956:	4798      	blx	r3
 8011958:	444f      	add	r7, r9
 801195a:	fa1f f987 	uxth.w	r9, r7
 801195e:	2801      	cmp	r0, #1
 8011960:	fa0f f789 	sxth.w	r7, r9
 8011964:	b2b3      	uxth	r3, r6
 8011966:	f000 80e1 	beq.w	8011b2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 801196a:	2802      	cmp	r0, #2
 801196c:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8011970:	f000 80e2 	beq.w	8011b38 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8011974:	7aea      	ldrb	r2, [r5, #11]
 8011976:	7b2d      	ldrb	r5, [r5, #12]
 8011978:	b236      	sxth	r6, r6
 801197a:	1ab6      	subs	r6, r6, r2
 801197c:	442a      	add	r2, r5
 801197e:	4413      	add	r3, r2
 8011980:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8011984:	fa1f fa86 	uxth.w	sl, r6
 8011988:	b29b      	uxth	r3, r3
 801198a:	2a02      	cmp	r2, #2
 801198c:	fa0f fb8a 	sxth.w	fp, sl
 8011990:	b21e      	sxth	r6, r3
 8011992:	f000 80d5 	beq.w	8011b40 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8011996:	2a03      	cmp	r2, #3
 8011998:	f000 80dd 	beq.w	8011b56 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 801199c:	2a01      	cmp	r2, #1
 801199e:	f040 80e5 	bne.w	8011b6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 80119a2:	8925      	ldrh	r5, [r4, #8]
 80119a4:	4633      	mov	r3, r6
 80119a6:	eba5 0909 	sub.w	r9, r5, r9
 80119aa:	463e      	mov	r6, r7
 80119ac:	465d      	mov	r5, fp
 80119ae:	461f      	mov	r7, r3
 80119b0:	fa0f fb89 	sxth.w	fp, r9
 80119b4:	4b5c      	ldr	r3, [pc, #368]	; (8011b28 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80119b6:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80119b8:	6818      	ldr	r0, [r3, #0]
 80119ba:	f7f6 fabb 	bl	8007f34 <_ZNK8touchgfx5Texts7getTextEt>
 80119be:	f8a8 b000 	strh.w	fp, [r8]
 80119c2:	f8a8 5002 	strh.w	r5, [r8, #2]
 80119c6:	f8a8 6004 	strh.w	r6, [r8, #4]
 80119ca:	f8a8 7006 	strh.w	r7, [r8, #6]
 80119ce:	f8c8 0008 	str.w	r0, [r8, #8]
 80119d2:	e737      	b.n	8011844 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 80119d4:	f005 f936 	bl	8016c44 <_ZN8touchgfx12TextProviderC1Ev>
 80119d8:	682b      	ldr	r3, [r5, #0]
 80119da:	4628      	mov	r0, r5
 80119dc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80119de:	4798      	blx	r3
 80119e0:	682b      	ldr	r3, [r5, #0]
 80119e2:	4607      	mov	r7, r0
 80119e4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80119e6:	4628      	mov	r0, r5
 80119e8:	4798      	blx	r3
 80119ea:	6823      	ldr	r3, [r4, #0]
 80119ec:	4683      	mov	fp, r0
 80119ee:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80119f0:	4620      	mov	r0, r4
 80119f2:	4798      	blx	r3
 80119f4:	6822      	ldr	r2, [r4, #0]
 80119f6:	9005      	str	r0, [sp, #20]
 80119f8:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 80119fc:	4620      	mov	r0, r4
 80119fe:	4790      	blx	r2
 8011a00:	9b05      	ldr	r3, [sp, #20]
 8011a02:	9001      	str	r0, [sp, #4]
 8011a04:	463a      	mov	r2, r7
 8011a06:	4649      	mov	r1, r9
 8011a08:	9300      	str	r3, [sp, #0]
 8011a0a:	a80f      	add	r0, sp, #60	; 0x3c
 8011a0c:	465b      	mov	r3, fp
 8011a0e:	f005 f989 	bl	8016d24 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011a12:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011a16:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8011a1a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011a1c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8011a20:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011a24:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011a28:	bf0a      	itet	eq
 8011a2a:	464a      	moveq	r2, r9
 8011a2c:	461a      	movne	r2, r3
 8011a2e:	4699      	moveq	r9, r3
 8011a30:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8011a34:	1ad2      	subs	r2, r2, r3
 8011a36:	6833      	ldr	r3, [r6, #0]
 8011a38:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8011a3c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8011a40:	af0f      	add	r7, sp, #60	; 0x3c
 8011a42:	7859      	ldrb	r1, [r3, #1]
 8011a44:	9707      	str	r7, [sp, #28]
 8011a46:	2300      	movs	r3, #0
 8011a48:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8011a4c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011a50:	f88d 1020 	strb.w	r1, [sp, #32]
 8011a54:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8011a58:	9509      	str	r5, [sp, #36]	; 0x24
 8011a5a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8011a5e:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8011a62:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8011a66:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011a6a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8011a6e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8011a72:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8011a76:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011a7a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8011a7e:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8011a82:	b350      	cbz	r0, 8011ada <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011a84:	682b      	ldr	r3, [r5, #0]
 8011a86:	4628      	mov	r0, r5
 8011a88:	695b      	ldr	r3, [r3, #20]
 8011a8a:	4798      	blx	r3
 8011a8c:	4607      	mov	r7, r0
 8011a8e:	b320      	cbz	r0, 8011ada <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011a90:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011a92:	6803      	ldr	r3, [r0, #0]
 8011a94:	4639      	mov	r1, r7
 8011a96:	68db      	ldr	r3, [r3, #12]
 8011a98:	4798      	blx	r3
 8011a9a:	4606      	mov	r6, r0
 8011a9c:	b1e8      	cbz	r0, 8011ada <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011a9e:	7b43      	ldrb	r3, [r0, #13]
 8011aa0:	7a82      	ldrb	r2, [r0, #10]
 8011aa2:	005b      	lsls	r3, r3, #1
 8011aa4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011aa8:	4313      	orrs	r3, r2
 8011aaa:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8011aae:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8011ab2:	2b06      	cmp	r3, #6
 8011ab4:	d111      	bne.n	8011ada <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011ab6:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011ab8:	6803      	ldr	r3, [r0, #0]
 8011aba:	4632      	mov	r2, r6
 8011abc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011abe:	4639      	mov	r1, r7
 8011ac0:	4798      	blx	r3
 8011ac2:	7b73      	ldrb	r3, [r6, #13]
 8011ac4:	005b      	lsls	r3, r3, #1
 8011ac6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011aca:	7ab3      	ldrb	r3, [r6, #10]
 8011acc:	4313      	orrs	r3, r2
 8011ace:	4418      	add	r0, r3
 8011ad0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011ad4:	4418      	add	r0, r3
 8011ad6:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8011ada:	2600      	movs	r6, #0
 8011adc:	4637      	mov	r7, r6
 8011ade:	a806      	add	r0, sp, #24
 8011ae0:	f002 fc6c 	bl	80143bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8011ae4:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8011ae8:	9b03      	ldr	r3, [sp, #12]
 8011aea:	4286      	cmp	r6, r0
 8011aec:	eba9 0903 	sub.w	r9, r9, r3
 8011af0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8011af4:	bfb8      	it	lt
 8011af6:	4606      	movlt	r6, r0
 8011af8:	3701      	adds	r7, #1
 8011afa:	b236      	sxth	r6, r6
 8011afc:	b2bf      	uxth	r7, r7
 8011afe:	fa0f f989 	sxth.w	r9, r9
 8011b02:	2b00      	cmp	r3, #0
 8011b04:	f43f af0d 	beq.w	8011922 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011b08:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8011b0c:	2b00      	cmp	r3, #0
 8011b0e:	f47f af08 	bne.w	8011922 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011b12:	7a2b      	ldrb	r3, [r5, #8]
 8011b14:	444b      	add	r3, r9
 8011b16:	2b00      	cmp	r3, #0
 8011b18:	dce1      	bgt.n	8011ade <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8011b1a:	e702      	b.n	8011922 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011b1c:	20013830 	.word	0x20013830
 8011b20:	2001382c 	.word	0x2001382c
 8011b24:	20013834 	.word	0x20013834
 8011b28:	20013838 	.word	0x20013838
 8011b2c:	ebaa 0606 	sub.w	r6, sl, r6
 8011b30:	2002      	movs	r0, #2
 8011b32:	fb96 f6f0 	sdiv	r6, r6, r0
 8011b36:	e71d      	b.n	8011974 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011b38:	441e      	add	r6, r3
 8011b3a:	ebaa 0606 	sub.w	r6, sl, r6
 8011b3e:	e719      	b.n	8011974 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011b40:	8925      	ldrh	r5, [r4, #8]
 8011b42:	1aed      	subs	r5, r5, r3
 8011b44:	eba5 050a 	sub.w	r5, r5, sl
 8011b48:	fa0f fb85 	sxth.w	fp, r5
 8011b4c:	8965      	ldrh	r5, [r4, #10]
 8011b4e:	eba5 0509 	sub.w	r5, r5, r9
 8011b52:	b22d      	sxth	r5, r5
 8011b54:	e72e      	b.n	80119b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011b56:	8965      	ldrh	r5, [r4, #10]
 8011b58:	1aed      	subs	r5, r5, r3
 8011b5a:	eba5 050a 	sub.w	r5, r5, sl
 8011b5e:	4633      	mov	r3, r6
 8011b60:	b22d      	sxth	r5, r5
 8011b62:	463e      	mov	r6, r7
 8011b64:	f04f 0b00 	mov.w	fp, #0
 8011b68:	461f      	mov	r7, r3
 8011b6a:	e723      	b.n	80119b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011b6c:	2500      	movs	r5, #0
 8011b6e:	e721      	b.n	80119b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08011b70 <_ZN8touchgfx8TextAreaD0Ev>:
 8011b70:	b510      	push	{r4, lr}
 8011b72:	2148      	movs	r1, #72	; 0x48
 8011b74:	4604      	mov	r4, r0
 8011b76:	f015 ff32 	bl	80279de <_ZdlPvj>
 8011b7a:	4620      	mov	r0, r4
 8011b7c:	bd10      	pop	{r4, pc}
	...

08011b80 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8011b80:	b513      	push	{r0, r1, r4, lr}
 8011b82:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8011b86:	4604      	mov	r4, r0
 8011b88:	b1fb      	cbz	r3, 8011bca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011b8a:	4b16      	ldr	r3, [pc, #88]	; (8011be4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8011b8c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011b8e:	881b      	ldrh	r3, [r3, #0]
 8011b90:	428b      	cmp	r3, r1
 8011b92:	d91a      	bls.n	8011bca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011b94:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011b98:	2b00      	cmp	r3, #0
 8011b9a:	dd16      	ble.n	8011bca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011b9c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011ba0:	2b00      	cmp	r3, #0
 8011ba2:	dd12      	ble.n	8011bca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011ba4:	4b10      	ldr	r3, [pc, #64]	; (8011be8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8011ba6:	6818      	ldr	r0, [r3, #0]
 8011ba8:	f7f6 f9c4 	bl	8007f34 <_ZNK8touchgfx5Texts7getTextEt>
 8011bac:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011bb0:	6822      	ldr	r2, [r4, #0]
 8011bb2:	2b00      	cmp	r3, #0
 8011bb4:	db06      	blt.n	8011bc4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011bb6:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8011bba:	2b00      	cmp	r3, #0
 8011bbc:	db02      	blt.n	8011bc4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011bbe:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011bc0:	4298      	cmp	r0, r3
 8011bc2:	d004      	beq.n	8011bce <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8011bc4:	6953      	ldr	r3, [r2, #20]
 8011bc6:	4620      	mov	r0, r4
 8011bc8:	4798      	blx	r3
 8011bca:	b002      	add	sp, #8
 8011bcc:	bd10      	pop	{r4, pc}
 8011bce:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8011bd2:	c903      	ldmia	r1, {r0, r1}
 8011bd4:	466b      	mov	r3, sp
 8011bd6:	e883 0003 	stmia.w	r3, {r0, r1}
 8011bda:	6912      	ldr	r2, [r2, #16]
 8011bdc:	4619      	mov	r1, r3
 8011bde:	4620      	mov	r0, r4
 8011be0:	4790      	blx	r2
 8011be2:	e7f2      	b.n	8011bca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011be4:	20013830 	.word	0x20013830
 8011be8:	20013838 	.word	0x20013838

08011bec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8011bec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011bf0:	4b44      	ldr	r3, [pc, #272]	; (8011d04 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8011bf2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011bf4:	881b      	ldrh	r3, [r3, #0]
 8011bf6:	4293      	cmp	r3, r2
 8011bf8:	b08e      	sub	sp, #56	; 0x38
 8011bfa:	4604      	mov	r4, r0
 8011bfc:	d97e      	bls.n	8011cfc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011bfe:	6808      	ldr	r0, [r1, #0]
 8011c00:	4d41      	ldr	r5, [pc, #260]	; (8011d08 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8011c02:	6849      	ldr	r1, [r1, #4]
 8011c04:	ab05      	add	r3, sp, #20
 8011c06:	c303      	stmia	r3!, {r0, r1}
 8011c08:	4611      	mov	r1, r2
 8011c0a:	6828      	ldr	r0, [r5, #0]
 8011c0c:	f7f6 f992 	bl	8007f34 <_ZNK8touchgfx5Texts7getTextEt>
 8011c10:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011c14:	2b00      	cmp	r3, #0
 8011c16:	db11      	blt.n	8011c3c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011c18:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8011c1c:	2b00      	cmp	r3, #0
 8011c1e:	db0d      	blt.n	8011c3c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011c20:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011c22:	4298      	cmp	r0, r3
 8011c24:	d10a      	bne.n	8011c3c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011c26:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8011c2a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011c2e:	ab09      	add	r3, sp, #36	; 0x24
 8011c30:	e883 0003 	stmia.w	r3, {r0, r1}
 8011c34:	4619      	mov	r1, r3
 8011c36:	a805      	add	r0, sp, #20
 8011c38:	f7fe f860 	bl	800fcfc <_ZN8touchgfx4RectaNERKS0_>
 8011c3c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011c40:	2b00      	cmp	r3, #0
 8011c42:	dd5b      	ble.n	8011cfc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011c44:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8011c48:	2b00      	cmp	r3, #0
 8011c4a:	dd57      	ble.n	8011cfc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011c4c:	4f2f      	ldr	r7, [pc, #188]	; (8011d0c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8011c4e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011c50:	683b      	ldr	r3, [r7, #0]
 8011c52:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8011c56:	4b2e      	ldr	r3, [pc, #184]	; (8011d10 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8011c58:	681b      	ldr	r3, [r3, #0]
 8011c5a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8011c5e:	2e00      	cmp	r6, #0
 8011c60:	d04c      	beq.n	8011cfc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011c62:	6823      	ldr	r3, [r4, #0]
 8011c64:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8011c68:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011c6a:	4620      	mov	r0, r4
 8011c6c:	4798      	blx	r3
 8011c6e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011c70:	683b      	ldr	r3, [r7, #0]
 8011c72:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8011c76:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8011c7a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8011c7e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8011c80:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011c84:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8011c88:	785b      	ldrb	r3, [r3, #1]
 8011c8a:	9609      	str	r6, [sp, #36]	; 0x24
 8011c8c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011c90:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8011c94:	4b1f      	ldr	r3, [pc, #124]	; (8011d14 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8011c96:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8011c9a:	681b      	ldr	r3, [r3, #0]
 8011c9c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8011ca0:	910b      	str	r1, [sp, #44]	; 0x2c
 8011ca2:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8011ca6:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8011caa:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8011cae:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8011cb2:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011cb6:	b10a      	cbz	r2, 8011cbc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8011cb8:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8011cba:	b906      	cbnz	r6, 8011cbe <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8011cbc:	689e      	ldr	r6, [r3, #8]
 8011cbe:	af07      	add	r7, sp, #28
 8011cc0:	4621      	mov	r1, r4
 8011cc2:	4638      	mov	r0, r7
 8011cc4:	f004 fab0 	bl	8016228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011cc8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011cca:	6828      	ldr	r0, [r5, #0]
 8011ccc:	f7f6 f932 	bl	8007f34 <_ZNK8touchgfx5Texts7getTextEt>
 8011cd0:	6823      	ldr	r3, [r4, #0]
 8011cd2:	4605      	mov	r5, r0
 8011cd4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011cd6:	4620      	mov	r0, r4
 8011cd8:	4798      	blx	r3
 8011cda:	6823      	ldr	r3, [r4, #0]
 8011cdc:	4680      	mov	r8, r0
 8011cde:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011ce2:	4620      	mov	r0, r4
 8011ce4:	4798      	blx	r3
 8011ce6:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8011cea:	ab09      	add	r3, sp, #36	; 0x24
 8011cec:	9300      	str	r3, [sp, #0]
 8011cee:	9501      	str	r5, [sp, #4]
 8011cf0:	ab05      	add	r3, sp, #20
 8011cf2:	e897 0006 	ldmia.w	r7, {r1, r2}
 8011cf6:	4630      	mov	r0, r6
 8011cf8:	f7f6 f8ce 	bl	8007e98 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8011cfc:	b00e      	add	sp, #56	; 0x38
 8011cfe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011d02:	bf00      	nop
 8011d04:	20013830 	.word	0x20013830
 8011d08:	20013838 	.word	0x20013838
 8011d0c:	2001382c 	.word	0x2001382c
 8011d10:	20013834 	.word	0x20013834
 8011d14:	200137d4 	.word	0x200137d4

08011d18 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8011d18:	b538      	push	{r3, r4, r5, lr}
 8011d1a:	4b0e      	ldr	r3, [pc, #56]	; (8011d54 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8011d1c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011d1e:	881b      	ldrh	r3, [r3, #0]
 8011d20:	429a      	cmp	r2, r3
 8011d22:	4604      	mov	r4, r0
 8011d24:	d214      	bcs.n	8011d50 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8011d26:	6803      	ldr	r3, [r0, #0]
 8011d28:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8011d2a:	4798      	blx	r3
 8011d2c:	6823      	ldr	r3, [r4, #0]
 8011d2e:	4605      	mov	r5, r0
 8011d30:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8011d32:	4620      	mov	r0, r4
 8011d34:	4798      	blx	r3
 8011d36:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011d3a:	b22d      	sxth	r5, r5
 8011d3c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011d40:	4601      	mov	r1, r0
 8011d42:	bf06      	itte	eq
 8011d44:	4602      	moveq	r2, r0
 8011d46:	4629      	moveq	r1, r5
 8011d48:	462a      	movne	r2, r5
 8011d4a:	4620      	mov	r0, r4
 8011d4c:	f7fd fdb6 	bl	800f8bc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011d50:	bd38      	pop	{r3, r4, r5, pc}
 8011d52:	bf00      	nop
 8011d54:	20013830 	.word	0x20013830

08011d58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8011d58:	b530      	push	{r4, r5, lr}
 8011d5a:	888b      	ldrh	r3, [r1, #4]
 8011d5c:	8583      	strh	r3, [r0, #44]	; 0x2c
 8011d5e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011d62:	b085      	sub	sp, #20
 8011d64:	4604      	mov	r4, r0
 8011d66:	b923      	cbnz	r3, 8011d72 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8011d68:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011d6c:	b90b      	cbnz	r3, 8011d72 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8011d6e:	f7ff ffd3 	bl	8011d18 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8011d72:	6823      	ldr	r3, [r4, #0]
 8011d74:	466d      	mov	r5, sp
 8011d76:	4621      	mov	r1, r4
 8011d78:	4628      	mov	r0, r5
 8011d7a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8011d7e:	4798      	blx	r3
 8011d80:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8011d84:	343c      	adds	r4, #60	; 0x3c
 8011d86:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8011d8a:	b005      	add	sp, #20
 8011d8c:	bd30      	pop	{r4, r5, pc}

08011d8e <_ZNK8touchgfx3Box12getSolidRectEv>:
 8011d8e:	2300      	movs	r3, #0
 8011d90:	8083      	strh	r3, [r0, #4]
 8011d92:	80c3      	strh	r3, [r0, #6]
 8011d94:	8003      	strh	r3, [r0, #0]
 8011d96:	8043      	strh	r3, [r0, #2]
 8011d98:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8011d9c:	2bff      	cmp	r3, #255	; 0xff
 8011d9e:	bf01      	itttt	eq
 8011da0:	890b      	ldrheq	r3, [r1, #8]
 8011da2:	8083      	strheq	r3, [r0, #4]
 8011da4:	894b      	ldrheq	r3, [r1, #10]
 8011da6:	80c3      	strheq	r3, [r0, #6]
 8011da8:	4770      	bx	lr
	...

08011dac <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8011dac:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011dae:	4604      	mov	r4, r0
 8011db0:	6808      	ldr	r0, [r1, #0]
 8011db2:	6849      	ldr	r1, [r1, #4]
 8011db4:	466b      	mov	r3, sp
 8011db6:	c303      	stmia	r3!, {r0, r1}
 8011db8:	6823      	ldr	r3, [r4, #0]
 8011dba:	4669      	mov	r1, sp
 8011dbc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011dbe:	4620      	mov	r0, r4
 8011dc0:	4798      	blx	r3
 8011dc2:	4b08      	ldr	r3, [pc, #32]	; (8011de4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8011dc4:	681b      	ldr	r3, [r3, #0]
 8011dc6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011dca:	b10a      	cbz	r2, 8011dd0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8011dcc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8011dce:	b900      	cbnz	r0, 8011dd2 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8011dd0:	6898      	ldr	r0, [r3, #8]
 8011dd2:	6803      	ldr	r3, [r0, #0]
 8011dd4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8011dd6:	6a1d      	ldr	r5, [r3, #32]
 8011dd8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8011ddc:	4669      	mov	r1, sp
 8011dde:	47a8      	blx	r5
 8011de0:	b003      	add	sp, #12
 8011de2:	bd30      	pop	{r4, r5, pc}
 8011de4:	200137d4 	.word	0x200137d4

08011de8 <_ZN8touchgfx3BoxD1Ev>:
 8011de8:	4770      	bx	lr

08011dea <_ZN8touchgfx3BoxD0Ev>:
 8011dea:	b510      	push	{r4, lr}
 8011dec:	212c      	movs	r1, #44	; 0x2c
 8011dee:	4604      	mov	r4, r0
 8011df0:	f015 fdf5 	bl	80279de <_ZdlPvj>
 8011df4:	4620      	mov	r0, r4
 8011df6:	bd10      	pop	{r4, pc}

08011df8 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8011df8:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8011dfc:	b12a      	cbz	r2, 8011e0a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8011dfe:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8011e02:	b112      	cbz	r2, 8011e0a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8011e04:	6803      	ldr	r3, [r0, #0]
 8011e06:	695b      	ldr	r3, [r3, #20]
 8011e08:	4718      	bx	r3
 8011e0a:	4770      	bx	lr

08011e0c <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8011e0c:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8011e10:	600b      	str	r3, [r1, #0]
 8011e12:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8011e16:	6013      	str	r3, [r2, #0]
 8011e18:	4770      	bx	lr

08011e1a <_ZN8touchgfx5Gauge8setWidthEs>:
 8011e1a:	8101      	strh	r1, [r0, #8]
 8011e1c:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8011e20:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8011e24:	4770      	bx	lr

08011e26 <_ZN8touchgfx5Gauge9setHeightEs>:
 8011e26:	8141      	strh	r1, [r0, #10]
 8011e28:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8011e2c:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8011e30:	4770      	bx	lr

08011e32 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8011e32:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8011e36:	4770      	bx	lr

08011e38 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8011e38:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8011e3c:	4770      	bx	lr

08011e3e <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8011e3e:	4770      	bx	lr

08011e40 <_ZN8touchgfx5GaugeD1Ev>:
 8011e40:	4770      	bx	lr

08011e42 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8011e42:	b538      	push	{r3, r4, r5, lr}
 8011e44:	4604      	mov	r4, r0
 8011e46:	460d      	mov	r5, r1
 8011e48:	f7fd fc51 	bl	800f6ee <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8011e4c:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8011e50:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8011e54:	bd38      	pop	{r3, r4, r5, pc}

08011e56 <_ZN8touchgfx5GaugeD0Ev>:
 8011e56:	b510      	push	{r4, lr}
 8011e58:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8011e5c:	4604      	mov	r4, r0
 8011e5e:	f015 fdbe 	bl	80279de <_ZdlPvj>
 8011e62:	4620      	mov	r0, r4
 8011e64:	bd10      	pop	{r4, pc}

08011e66 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8011e66:	b510      	push	{r4, lr}
 8011e68:	6803      	ldr	r3, [r0, #0]
 8011e6a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8011e6e:	4604      	mov	r4, r0
 8011e70:	4798      	blx	r3
 8011e72:	b170      	cbz	r0, 8011e92 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8011e74:	6823      	ldr	r3, [r4, #0]
 8011e76:	4620      	mov	r0, r4
 8011e78:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8011e7c:	4798      	blx	r3
 8011e7e:	b140      	cbz	r0, 8011e92 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8011e80:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8011e84:	b12b      	cbz	r3, 8011e92 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8011e86:	6823      	ldr	r3, [r4, #0]
 8011e88:	4620      	mov	r0, r4
 8011e8a:	695b      	ldr	r3, [r3, #20]
 8011e8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011e90:	4718      	bx	r3
 8011e92:	bd10      	pop	{r4, pc}

08011e94 <_ZN8touchgfx5GaugeC1Ev>:
 8011e94:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011e96:	4604      	mov	r4, r0
 8011e98:	4626      	mov	r6, r4
 8011e9a:	f7fd fd49 	bl	800f930 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8011e9e:	4b18      	ldr	r3, [pc, #96]	; (8011f00 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8011ea0:	f846 3bb4 	str.w	r3, [r6], #180
 8011ea4:	a902      	add	r1, sp, #8
 8011ea6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011eaa:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8011eae:	4630      	mov	r0, r6
 8011eb0:	f014 ff7c 	bl	8026dac <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8011eb4:	2500      	movs	r5, #0
 8011eb6:	2301      	movs	r3, #1
 8011eb8:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8011ebc:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8011ec0:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8011ec4:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8011ec8:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8011ecc:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8011ed0:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8011ed4:	4638      	mov	r0, r7
 8011ed6:	f014 f9ad 	bl	8026234 <_ZN8touchgfx6CircleC1Ev>
 8011eda:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8011ede:	4620      	mov	r0, r4
 8011ee0:	f7fd fdc7 	bl	800fa72 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8011ee4:	4639      	mov	r1, r7
 8011ee6:	4620      	mov	r0, r4
 8011ee8:	f7fd fd82 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011eec:	4620      	mov	r0, r4
 8011eee:	4631      	mov	r1, r6
 8011ef0:	f7fd fd7e 	bl	800f9f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011ef4:	4620      	mov	r0, r4
 8011ef6:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8011efa:	b003      	add	sp, #12
 8011efc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011efe:	bf00      	nop
 8011f00:	0802cb7c 	.word	0x0802cb7c

08011f04 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8011f04:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8011f08:	4770      	bx	lr

08011f0a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8011f0a:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8011f0e:	4770      	bx	lr

08011f10 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8011f10:	b538      	push	{r3, r4, r5, lr}
 8011f12:	8902      	ldrh	r2, [r0, #8]
 8011f14:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011f18:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8011f1c:	4604      	mov	r4, r0
 8011f1e:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8011f22:	2200      	movs	r2, #0
 8011f24:	4611      	mov	r1, r2
 8011f26:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8011f2a:	4628      	mov	r0, r5
 8011f2c:	f7f0 fb07 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 8011f30:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8011f34:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8011f38:	1a9b      	subs	r3, r3, r2
 8011f3a:	ee07 3a90 	vmov	s15, r3
 8011f3e:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8011f42:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8011f46:	1a9b      	subs	r3, r3, r2
 8011f48:	ee07 3a10 	vmov	s14, r3
 8011f4c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011f50:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011f54:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8011f58:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8011f5c:	4628      	mov	r0, r5
 8011f5e:	f014 ff71 	bl	8026e44 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011f62:	4b16      	ldr	r3, [pc, #88]	; (8011fbc <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8011f64:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8011f68:	4628      	mov	r0, r5
 8011f6a:	f014 ff6b 	bl	8026e44 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011f6e:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8011f72:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8011f76:	ee07 3a90 	vmov	s15, r3
 8011f7a:	ee07 2a10 	vmov	s14, r2
 8011f7e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011f82:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011f86:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8011f8a:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8011f8e:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8011f92:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8011f96:	4628      	mov	r0, r5
 8011f98:	f014 ff54 	bl	8026e44 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011f9c:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8011fa0:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8011fa4:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8011fa8:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8011fac:	4628      	mov	r0, r5
 8011fae:	f014 ff49 	bl	8026e44 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011fb2:	2301      	movs	r3, #1
 8011fb4:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8011fb8:	bd38      	pop	{r3, r4, r5, pc}
 8011fba:	bf00      	nop
 8011fbc:	43960000 	.word	0x43960000

08011fc0 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8011fc0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011fc2:	4604      	mov	r4, r0
 8011fc4:	a802      	add	r0, sp, #8
 8011fc6:	4616      	mov	r6, r2
 8011fc8:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8011fcc:	461d      	mov	r5, r3
 8011fce:	4601      	mov	r1, r0
 8011fd0:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8011fd4:	f015 f88c 	bl	80270f0 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8011fd8:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8011fdc:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8011fe0:	4620      	mov	r0, r4
 8011fe2:	f7ff ff95 	bl	8011f10 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8011fe6:	b002      	add	sp, #8
 8011fe8:	bd70      	pop	{r4, r5, r6, pc}

08011fea <_ZN8touchgfx5Gauge9setCenterEii>:
 8011fea:	b570      	push	{r4, r5, r6, lr}
 8011fec:	4606      	mov	r6, r0
 8011fee:	460d      	mov	r5, r1
 8011ff0:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8011ff4:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8011ff8:	4614      	mov	r4, r2
 8011ffa:	f7ff ff89 	bl	8011f10 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8011ffe:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8012002:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8012006:	1aa4      	subs	r4, r4, r2
 8012008:	1a6d      	subs	r5, r5, r1
 801200a:	0164      	lsls	r4, r4, #5
 801200c:	016d      	lsls	r5, r5, #5
 801200e:	3410      	adds	r4, #16
 8012010:	3510      	adds	r5, #16
 8012012:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8012016:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 801201a:	bd70      	pop	{r4, r5, r6, pc}

0801201c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 801201c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801201e:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8012020:	0149      	lsls	r1, r1, #5
 8012022:	4299      	cmp	r1, r3
 8012024:	4604      	mov	r4, r0
 8012026:	9101      	str	r1, [sp, #4]
 8012028:	d00b      	beq.n	8012042 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 801202a:	4601      	mov	r1, r0
 801202c:	aa01      	add	r2, sp, #4
 801202e:	a802      	add	r0, sp, #8
 8012030:	f014 fafe 	bl	8026630 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8012034:	9b01      	ldr	r3, [sp, #4]
 8012036:	63e3      	str	r3, [r4, #60]	; 0x3c
 8012038:	6823      	ldr	r3, [r4, #0]
 801203a:	a902      	add	r1, sp, #8
 801203c:	691b      	ldr	r3, [r3, #16]
 801203e:	4620      	mov	r0, r4
 8012040:	4798      	blx	r3
 8012042:	b004      	add	sp, #16
 8012044:	bd10      	pop	{r4, pc}
	...

08012048 <_ZN8touchgfx5Gauge8setValueEi>:
 8012048:	b570      	push	{r4, r5, r6, lr}
 801204a:	4604      	mov	r4, r0
 801204c:	f7fd fba2 	bl	800f794 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8012050:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8012054:	429a      	cmp	r2, r3
 8012056:	bfac      	ite	ge
 8012058:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 801205c:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8012060:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012064:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8012068:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 801206c:	1ac9      	subs	r1, r1, r3
 801206e:	2900      	cmp	r1, #0
 8012070:	bfb8      	it	lt
 8012072:	4249      	neglt	r1, r1
 8012074:	b289      	uxth	r1, r1
 8012076:	4620      	mov	r0, r4
 8012078:	f7fd fbae 	bl	800f7d8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 801207c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8012080:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8012084:	eddf 6a19 	vldr	s13, [pc, #100]	; 80120ec <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8012088:	ed9f 7a19 	vldr	s14, [pc, #100]	; 80120f0 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 801208c:	429a      	cmp	r2, r3
 801208e:	4605      	mov	r5, r0
 8012090:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8012094:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012098:	da15      	bge.n	80120c6 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 801209a:	1b5b      	subs	r3, r3, r5
 801209c:	ee07 3a90 	vmov	s15, r3
 80120a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80120a4:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 80120a8:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 80120ac:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 80120b0:	ee21 1a07 	vmul.f32	s2, s2, s14
 80120b4:	f014 fe35 	bl	8026d22 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 80120b8:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 80120bc:	1b49      	subs	r1, r1, r5
 80120be:	4630      	mov	r0, r6
 80120c0:	f7ff ffac 	bl	801201c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 80120c4:	bd70      	pop	{r4, r5, r6, pc}
 80120c6:	442b      	add	r3, r5
 80120c8:	ee07 3a90 	vmov	s15, r3
 80120cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80120d0:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 80120d4:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 80120d8:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 80120dc:	ee21 1a07 	vmul.f32	s2, s2, s14
 80120e0:	f014 fe1f 	bl	8026d22 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 80120e4:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 80120e8:	4429      	add	r1, r5
 80120ea:	e7e8      	b.n	80120be <_ZN8touchgfx5Gauge8setValueEi+0x76>
 80120ec:	43340000 	.word	0x43340000
 80120f0:	40490fdb 	.word	0x40490fdb

080120f4 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 80120f4:	b510      	push	{r4, lr}
 80120f6:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 80120fa:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 80120fe:	0149      	lsls	r1, r1, #5
 8012100:	0152      	lsls	r2, r2, #5
 8012102:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8012106:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 801210a:	4604      	mov	r4, r0
 801210c:	f7fd faec 	bl	800f6e8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8012110:	4601      	mov	r1, r0
 8012112:	4620      	mov	r0, r4
 8012114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012118:	f7ff bf96 	b.w	8012048 <_ZN8touchgfx5Gauge8setValueEi>

0801211c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 801211c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012120:	4770      	bx	lr

08012122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8012122:	b570      	push	{r4, r5, r6, lr}
 8012124:	880b      	ldrh	r3, [r1, #0]
 8012126:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8012128:	4605      	mov	r5, r0
 801212a:	8813      	ldrh	r3, [r2, #0]
 801212c:	f825 3f30 	strh.w	r3, [r5, #48]!
 8012130:	4604      	mov	r4, r0
 8012132:	4628      	mov	r0, r5
 8012134:	f006 f912 	bl	801835c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012138:	4606      	mov	r6, r0
 801213a:	4628      	mov	r0, r5
 801213c:	f006 f942 	bl	80183c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012140:	6823      	ldr	r3, [r4, #0]
 8012142:	4605      	mov	r5, r0
 8012144:	4631      	mov	r1, r6
 8012146:	4620      	mov	r0, r4
 8012148:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801214a:	4798      	blx	r3
 801214c:	6823      	ldr	r3, [r4, #0]
 801214e:	4629      	mov	r1, r5
 8012150:	4620      	mov	r0, r4
 8012152:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012154:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012158:	4718      	bx	r3

0801215a <_ZN8touchgfx14AbstractButton13executeActionEv>:
 801215a:	b510      	push	{r4, lr}
 801215c:	4604      	mov	r4, r0
 801215e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8012160:	b150      	cbz	r0, 8012178 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8012162:	6803      	ldr	r3, [r0, #0]
 8012164:	68db      	ldr	r3, [r3, #12]
 8012166:	4798      	blx	r3
 8012168:	b130      	cbz	r0, 8012178 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801216a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801216c:	6803      	ldr	r3, [r0, #0]
 801216e:	4621      	mov	r1, r4
 8012170:	689b      	ldr	r3, [r3, #8]
 8012172:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012176:	4718      	bx	r3
 8012178:	bd10      	pop	{r4, pc}

0801217a <_ZNK8touchgfx6Button12getSolidRectEv>:
 801217a:	b510      	push	{r4, lr}
 801217c:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8012180:	2bff      	cmp	r3, #255	; 0xff
 8012182:	4604      	mov	r4, r0
 8012184:	d006      	beq.n	8012194 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8012186:	2300      	movs	r3, #0
 8012188:	8003      	strh	r3, [r0, #0]
 801218a:	8043      	strh	r3, [r0, #2]
 801218c:	8083      	strh	r3, [r0, #4]
 801218e:	80c3      	strh	r3, [r0, #6]
 8012190:	4620      	mov	r0, r4
 8012192:	bd10      	pop	{r4, pc}
 8012194:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8012198:	b11b      	cbz	r3, 80121a2 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 801219a:	3130      	adds	r1, #48	; 0x30
 801219c:	f006 f946 	bl	801842c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80121a0:	e7f6      	b.n	8012190 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 80121a2:	312e      	adds	r1, #46	; 0x2e
 80121a4:	e7fa      	b.n	801219c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

080121a8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 80121a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80121ac:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80121b0:	b08a      	sub	sp, #40	; 0x28
 80121b2:	4604      	mov	r4, r0
 80121b4:	4688      	mov	r8, r1
 80121b6:	2b00      	cmp	r3, #0
 80121b8:	d066      	beq.n	8012288 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 80121ba:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80121bc:	f8ad 3014 	strh.w	r3, [sp, #20]
 80121c0:	a805      	add	r0, sp, #20
 80121c2:	f006 f8cb 	bl	801835c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80121c6:	4607      	mov	r7, r0
 80121c8:	a805      	add	r0, sp, #20
 80121ca:	f006 f8fb 	bl	80183c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80121ce:	f9b8 6000 	ldrsh.w	r6, [r8]
 80121d2:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 80121d6:	4432      	add	r2, r6
 80121d8:	b292      	uxth	r2, r2
 80121da:	2300      	movs	r3, #0
 80121dc:	fa0f fc82 	sxth.w	ip, r2
 80121e0:	459c      	cmp	ip, r3
 80121e2:	9306      	str	r3, [sp, #24]
 80121e4:	dd52      	ble.n	801228c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80121e6:	42b7      	cmp	r7, r6
 80121e8:	dd50      	ble.n	801228c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80121ea:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 80121ee:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80121f2:	442b      	add	r3, r5
 80121f4:	b29b      	uxth	r3, r3
 80121f6:	b219      	sxth	r1, r3
 80121f8:	2900      	cmp	r1, #0
 80121fa:	dd47      	ble.n	801228c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80121fc:	42a8      	cmp	r0, r5
 80121fe:	dd45      	ble.n	801228c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012200:	4567      	cmp	r7, ip
 8012202:	bfb8      	it	lt
 8012204:	b2ba      	uxthlt	r2, r7
 8012206:	4288      	cmp	r0, r1
 8012208:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 801220c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8012210:	bfb8      	it	lt
 8012212:	b283      	uxthlt	r3, r0
 8012214:	1b92      	subs	r2, r2, r6
 8012216:	1b5b      	subs	r3, r3, r5
 8012218:	f8ad 201c 	strh.w	r2, [sp, #28]
 801221c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012220:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012224:	f8ad 501a 	strh.w	r5, [sp, #26]
 8012228:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801222c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012230:	429a      	cmp	r2, r3
 8012232:	d026      	beq.n	8012282 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012234:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012238:	2b00      	cmp	r3, #0
 801223a:	dd22      	ble.n	8012282 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801223c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8012240:	2b00      	cmp	r3, #0
 8012242:	dd1e      	ble.n	8012282 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012244:	2300      	movs	r3, #0
 8012246:	e9cd 3308 	strd	r3, r3, [sp, #32]
 801224a:	6823      	ldr	r3, [r4, #0]
 801224c:	a908      	add	r1, sp, #32
 801224e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012250:	4620      	mov	r0, r4
 8012252:	4798      	blx	r3
 8012254:	4b0f      	ldr	r3, [pc, #60]	; (8012294 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8012256:	681b      	ldr	r3, [r3, #0]
 8012258:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801225c:	b10a      	cbz	r2, 8012262 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 801225e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012260:	b900      	cbnz	r0, 8012264 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8012262:	6898      	ldr	r0, [r3, #8]
 8012264:	6801      	ldr	r1, [r0, #0]
 8012266:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801226a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801226e:	2501      	movs	r5, #1
 8012270:	9502      	str	r5, [sp, #8]
 8012272:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8012276:	9401      	str	r4, [sp, #4]
 8012278:	ac06      	add	r4, sp, #24
 801227a:	9400      	str	r4, [sp, #0]
 801227c:	688c      	ldr	r4, [r1, #8]
 801227e:	a905      	add	r1, sp, #20
 8012280:	47a0      	blx	r4
 8012282:	b00a      	add	sp, #40	; 0x28
 8012284:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012288:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 801228a:	e797      	b.n	80121bc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 801228c:	2300      	movs	r3, #0
 801228e:	9307      	str	r3, [sp, #28]
 8012290:	e7ca      	b.n	8012228 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8012292:	bf00      	nop
 8012294:	200137d4 	.word	0x200137d4

08012298 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8012298:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 801229c:	b12a      	cbz	r2, 80122aa <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 801229e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80122a2:	b112      	cbz	r2, 80122aa <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80122a4:	6803      	ldr	r3, [r0, #0]
 80122a6:	695b      	ldr	r3, [r3, #20]
 80122a8:	4718      	bx	r3
 80122aa:	4770      	bx	lr

080122ac <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 80122ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80122b0:	4b2f      	ldr	r3, [pc, #188]	; (8012370 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 80122b2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80122b4:	881b      	ldrh	r3, [r3, #0]
 80122b6:	4293      	cmp	r3, r2
 80122b8:	b08d      	sub	sp, #52	; 0x34
 80122ba:	4604      	mov	r4, r0
 80122bc:	460f      	mov	r7, r1
 80122be:	d954      	bls.n	801236a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80122c0:	4b2c      	ldr	r3, [pc, #176]	; (8012374 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 80122c2:	6819      	ldr	r1, [r3, #0]
 80122c4:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 80122c8:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 80122cc:	4a2a      	ldr	r2, [pc, #168]	; (8012378 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 80122ce:	6812      	ldr	r2, [r2, #0]
 80122d0:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 80122d4:	2900      	cmp	r1, #0
 80122d6:	d048      	beq.n	801236a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80122d8:	785a      	ldrb	r2, [r3, #1]
 80122da:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 80122de:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80122e2:	4b26      	ldr	r3, [pc, #152]	; (801237c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 80122e4:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 80122e8:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 80122ec:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 80122f0:	6b26      	ldr	r6, [r4, #48]	; 0x30
 80122f2:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 80122f6:	9107      	str	r1, [sp, #28]
 80122f8:	f3c2 0801 	ubfx	r8, r2, #0, #2
 80122fc:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8012300:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8012304:	681a      	ldr	r2, [r3, #0]
 8012306:	f88d 8020 	strb.w	r8, [sp, #32]
 801230a:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 801230e:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8012312:	9609      	str	r6, [sp, #36]	; 0x24
 8012314:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8012318:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 801231c:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8012320:	b10b      	cbz	r3, 8012326 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8012322:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8012324:	b905      	cbnz	r5, 8012328 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8012326:	6895      	ldr	r5, [r2, #8]
 8012328:	ae05      	add	r6, sp, #20
 801232a:	4621      	mov	r1, r4
 801232c:	4630      	mov	r0, r6
 801232e:	f003 ff7b 	bl	8016228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012332:	4b13      	ldr	r3, [pc, #76]	; (8012380 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8012334:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012336:	6818      	ldr	r0, [r3, #0]
 8012338:	f7f5 fdfc 	bl	8007f34 <_ZNK8touchgfx5Texts7getTextEt>
 801233c:	6823      	ldr	r3, [r4, #0]
 801233e:	4680      	mov	r8, r0
 8012340:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012342:	4620      	mov	r0, r4
 8012344:	4798      	blx	r3
 8012346:	6823      	ldr	r3, [r4, #0]
 8012348:	4681      	mov	r9, r0
 801234a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801234e:	4620      	mov	r0, r4
 8012350:	4798      	blx	r3
 8012352:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8012356:	ab07      	add	r3, sp, #28
 8012358:	9300      	str	r3, [sp, #0]
 801235a:	f8cd 8004 	str.w	r8, [sp, #4]
 801235e:	463b      	mov	r3, r7
 8012360:	e896 0006 	ldmia.w	r6, {r1, r2}
 8012364:	4628      	mov	r0, r5
 8012366:	f7f5 fd97 	bl	8007e98 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801236a:	b00d      	add	sp, #52	; 0x34
 801236c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012370:	20013830 	.word	0x20013830
 8012374:	2001382c 	.word	0x2001382c
 8012378:	20013834 	.word	0x20013834
 801237c:	200137d4 	.word	0x200137d4
 8012380:	20013838 	.word	0x20013838

08012384 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8012384:	4770      	bx	lr

08012386 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 8012386:	4770      	bx	lr

08012388 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8012388:	b510      	push	{r4, lr}
 801238a:	213c      	movs	r1, #60	; 0x3c
 801238c:	4604      	mov	r4, r0
 801238e:	f015 fb26 	bl	80279de <_ZdlPvj>
 8012392:	4620      	mov	r0, r4
 8012394:	bd10      	pop	{r4, pc}

08012396 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8012396:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801239a:	461c      	mov	r4, r3
 801239c:	4606      	mov	r6, r0
 801239e:	9f06      	ldr	r7, [sp, #24]
 80123a0:	f7ff febf 	bl	8012122 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80123a4:	8823      	ldrh	r3, [r4, #0]
 80123a6:	86b3      	strh	r3, [r6, #52]	; 0x34
 80123a8:	883b      	ldrh	r3, [r7, #0]
 80123aa:	86f3      	strh	r3, [r6, #54]	; 0x36
 80123ac:	4638      	mov	r0, r7
 80123ae:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 80123b2:	f005 ffd3 	bl	801835c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80123b6:	f04f 0802 	mov.w	r8, #2
 80123ba:	fb95 f5f8 	sdiv	r5, r5, r8
 80123be:	b2ad      	uxth	r5, r5
 80123c0:	fb90 f0f8 	sdiv	r0, r0, r8
 80123c4:	1a2d      	subs	r5, r5, r0
 80123c6:	8735      	strh	r5, [r6, #56]	; 0x38
 80123c8:	4638      	mov	r0, r7
 80123ca:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 80123ce:	fb94 f4f8 	sdiv	r4, r4, r8
 80123d2:	f005 fff7 	bl	80183c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80123d6:	b2a4      	uxth	r4, r4
 80123d8:	fb90 f0f8 	sdiv	r0, r0, r8
 80123dc:	1a24      	subs	r4, r4, r0
 80123de:	8774      	strh	r4, [r6, #58]	; 0x3a
 80123e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080123e4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 80123e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80123e8:	4604      	mov	r4, r0
 80123ea:	b08c      	sub	sp, #48	; 0x30
 80123ec:	460d      	mov	r5, r1
 80123ee:	f7ff fedb 	bl	80121a8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80123f2:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80123f6:	2b00      	cmp	r3, #0
 80123f8:	d05d      	beq.n	80124b6 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 80123fa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80123fc:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012400:	a805      	add	r0, sp, #20
 8012402:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8012406:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 801240a:	f005 ffa7 	bl	801835c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801240e:	4606      	mov	r6, r0
 8012410:	a805      	add	r0, sp, #20
 8012412:	f005 ffd7 	bl	80183c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012416:	6869      	ldr	r1, [r5, #4]
 8012418:	f8ad 001e 	strh.w	r0, [sp, #30]
 801241c:	6828      	ldr	r0, [r5, #0]
 801241e:	f8ad 8018 	strh.w	r8, [sp, #24]
 8012422:	ab08      	add	r3, sp, #32
 8012424:	ad08      	add	r5, sp, #32
 8012426:	c303      	stmia	r3!, {r0, r1}
 8012428:	a906      	add	r1, sp, #24
 801242a:	4628      	mov	r0, r5
 801242c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012430:	f8ad 601c 	strh.w	r6, [sp, #28]
 8012434:	f7fd fc62 	bl	800fcfc <_ZN8touchgfx4RectaNERKS0_>
 8012438:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801243c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012440:	429a      	cmp	r2, r3
 8012442:	d035      	beq.n	80124b0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8012444:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8012448:	2b00      	cmp	r3, #0
 801244a:	dd31      	ble.n	80124b0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 801244c:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8012450:	2b00      	cmp	r3, #0
 8012452:	dd2d      	ble.n	80124b0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8012454:	2300      	movs	r3, #0
 8012456:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 801245a:	6823      	ldr	r3, [r4, #0]
 801245c:	a90a      	add	r1, sp, #40	; 0x28
 801245e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012460:	4620      	mov	r0, r4
 8012462:	4798      	blx	r3
 8012464:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8012468:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 801246a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801246e:	1a9b      	subs	r3, r3, r2
 8012470:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012474:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8012476:	1ac9      	subs	r1, r1, r3
 8012478:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 801247c:	490f      	ldr	r1, [pc, #60]	; (80124bc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 801247e:	6809      	ldr	r1, [r1, #0]
 8012480:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8012484:	b108      	cbz	r0, 801248a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8012486:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8012488:	b900      	cbnz	r0, 801248c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 801248a:	6888      	ldr	r0, [r1, #8]
 801248c:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8012490:	440b      	add	r3, r1
 8012492:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8012496:	2601      	movs	r6, #1
 8012498:	440a      	add	r2, r1
 801249a:	6801      	ldr	r1, [r0, #0]
 801249c:	9602      	str	r6, [sp, #8]
 801249e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80124a2:	e9cd 5400 	strd	r5, r4, [sp]
 80124a6:	b21b      	sxth	r3, r3
 80124a8:	688c      	ldr	r4, [r1, #8]
 80124aa:	b212      	sxth	r2, r2
 80124ac:	a905      	add	r1, sp, #20
 80124ae:	47a0      	blx	r4
 80124b0:	b00c      	add	sp, #48	; 0x30
 80124b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80124b6:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80124b8:	e7a0      	b.n	80123fc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 80124ba:	bf00      	nop
 80124bc:	200137d4 	.word	0x200137d4

080124c0 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 80124c0:	b510      	push	{r4, lr}
 80124c2:	2101      	movs	r1, #1
 80124c4:	2200      	movs	r2, #0
 80124c6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80124ca:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80124ce:	4c0e      	ldr	r4, [pc, #56]	; (8012508 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 80124d0:	8082      	strh	r2, [r0, #4]
 80124d2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80124d6:	80c2      	strh	r2, [r0, #6]
 80124d8:	8102      	strh	r2, [r0, #8]
 80124da:	8142      	strh	r2, [r0, #10]
 80124dc:	8182      	strh	r2, [r0, #12]
 80124de:	81c2      	strh	r2, [r0, #14]
 80124e0:	8202      	strh	r2, [r0, #16]
 80124e2:	8242      	strh	r2, [r0, #18]
 80124e4:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80124e8:	61c2      	str	r2, [r0, #28]
 80124ea:	8402      	strh	r2, [r0, #32]
 80124ec:	8442      	strh	r2, [r0, #34]	; 0x22
 80124ee:	6282      	str	r2, [r0, #40]	; 0x28
 80124f0:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80124f4:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80124f6:	8601      	strh	r1, [r0, #48]	; 0x30
 80124f8:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80124fc:	6004      	str	r4, [r0, #0]
 80124fe:	8681      	strh	r1, [r0, #52]	; 0x34
 8012500:	86c1      	strh	r1, [r0, #54]	; 0x36
 8012502:	8702      	strh	r2, [r0, #56]	; 0x38
 8012504:	8742      	strh	r2, [r0, #58]	; 0x3a
 8012506:	bd10      	pop	{r4, pc}
 8012508:	0802cc64 	.word	0x0802cc64

0801250c <_ZN8touchgfx5ImageD1Ev>:
 801250c:	4770      	bx	lr

0801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 801250e:	b570      	push	{r4, r5, r6, lr}
 8012510:	880b      	ldrh	r3, [r1, #0]
 8012512:	84c3      	strh	r3, [r0, #38]	; 0x26
 8012514:	4604      	mov	r4, r0
 8012516:	4608      	mov	r0, r1
 8012518:	460d      	mov	r5, r1
 801251a:	f005 ff1f 	bl	801835c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801251e:	4606      	mov	r6, r0
 8012520:	4628      	mov	r0, r5
 8012522:	f005 ff4f 	bl	80183c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012526:	6823      	ldr	r3, [r4, #0]
 8012528:	4605      	mov	r5, r0
 801252a:	4631      	mov	r1, r6
 801252c:	4620      	mov	r0, r4
 801252e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012530:	4798      	blx	r3
 8012532:	6823      	ldr	r3, [r4, #0]
 8012534:	4629      	mov	r1, r5
 8012536:	4620      	mov	r0, r4
 8012538:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801253a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801253e:	4718      	bx	r3

08012540 <_ZN8touchgfx5ImageD0Ev>:
 8012540:	b510      	push	{r4, lr}
 8012542:	212c      	movs	r1, #44	; 0x2c
 8012544:	4604      	mov	r4, r0
 8012546:	f015 fa4a 	bl	80279de <_ZdlPvj>
 801254a:	4620      	mov	r0, r4
 801254c:	bd10      	pop	{r4, pc}

0801254e <_ZNK8touchgfx5Image12getSolidRectEv>:
 801254e:	b510      	push	{r4, lr}
 8012550:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8012554:	2bff      	cmp	r3, #255	; 0xff
 8012556:	4604      	mov	r4, r0
 8012558:	d006      	beq.n	8012568 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 801255a:	2300      	movs	r3, #0
 801255c:	8003      	strh	r3, [r0, #0]
 801255e:	8043      	strh	r3, [r0, #2]
 8012560:	8083      	strh	r3, [r0, #4]
 8012562:	80c3      	strh	r3, [r0, #6]
 8012564:	4620      	mov	r0, r4
 8012566:	bd10      	pop	{r4, pc}
 8012568:	3126      	adds	r1, #38	; 0x26
 801256a:	f005 ff5f 	bl	801842c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801256e:	e7f9      	b.n	8012564 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08012570 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8012570:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8012574:	b12a      	cbz	r2, 8012582 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8012576:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801257a:	b112      	cbz	r2, 8012582 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 801257c:	6803      	ldr	r3, [r0, #0]
 801257e:	695b      	ldr	r3, [r3, #20]
 8012580:	4718      	bx	r3
 8012582:	4770      	bx	lr

08012584 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8012584:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012588:	4604      	mov	r4, r0
 801258a:	b088      	sub	sp, #32
 801258c:	f854 3b26 	ldr.w	r3, [r4], #38
 8012590:	2500      	movs	r5, #0
 8012592:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012594:	460f      	mov	r7, r1
 8012596:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801259a:	a904      	add	r1, sp, #16
 801259c:	4606      	mov	r6, r0
 801259e:	4798      	blx	r3
 80125a0:	4620      	mov	r0, r4
 80125a2:	f005 fedb 	bl	801835c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80125a6:	4680      	mov	r8, r0
 80125a8:	4620      	mov	r0, r4
 80125aa:	f005 ff0b 	bl	80183c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80125ae:	9506      	str	r5, [sp, #24]
 80125b0:	ad06      	add	r5, sp, #24
 80125b2:	f8ad 001e 	strh.w	r0, [sp, #30]
 80125b6:	4639      	mov	r1, r7
 80125b8:	4628      	mov	r0, r5
 80125ba:	f8ad 801c 	strh.w	r8, [sp, #28]
 80125be:	f7fd fb9d 	bl	800fcfc <_ZN8touchgfx4RectaNERKS0_>
 80125c2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80125c6:	2b00      	cmp	r3, #0
 80125c8:	dd19      	ble.n	80125fe <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80125ca:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80125ce:	2b00      	cmp	r3, #0
 80125d0:	dd15      	ble.n	80125fe <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80125d2:	4b0c      	ldr	r3, [pc, #48]	; (8012604 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 80125d4:	681b      	ldr	r3, [r3, #0]
 80125d6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80125da:	b10a      	cbz	r2, 80125e0 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 80125dc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80125de:	b900      	cbnz	r0, 80125e2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 80125e0:	6898      	ldr	r0, [r3, #8]
 80125e2:	6801      	ldr	r1, [r0, #0]
 80125e4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80125e8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80125ec:	2701      	movs	r7, #1
 80125ee:	9702      	str	r7, [sp, #8]
 80125f0:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 80125f4:	e9cd 5600 	strd	r5, r6, [sp]
 80125f8:	688d      	ldr	r5, [r1, #8]
 80125fa:	4621      	mov	r1, r4
 80125fc:	47a8      	blx	r5
 80125fe:	b008      	add	sp, #32
 8012600:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012604:	200137d4 	.word	0x200137d4

08012608 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8012608:	4770      	bx	lr

0801260a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 801260a:	b510      	push	{r4, lr}
 801260c:	2148      	movs	r1, #72	; 0x48
 801260e:	4604      	mov	r4, r0
 8012610:	f015 f9e5 	bl	80279de <_ZdlPvj>
 8012614:	4620      	mov	r0, r4
 8012616:	bd10      	pop	{r4, pc}

08012618 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8012618:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801261c:	b08d      	sub	sp, #52	; 0x34
 801261e:	4604      	mov	r4, r0
 8012620:	460f      	mov	r7, r1
 8012622:	f7ff fdc1 	bl	80121a8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8012626:	4a55      	ldr	r2, [pc, #340]	; (801277c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8012628:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801262a:	8812      	ldrh	r2, [r2, #0]
 801262c:	429a      	cmp	r2, r3
 801262e:	f240 8082 	bls.w	8012736 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012632:	4d53      	ldr	r5, [pc, #332]	; (8012780 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8012634:	682a      	ldr	r2, [r5, #0]
 8012636:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801263a:	4b52      	ldr	r3, [pc, #328]	; (8012784 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 801263c:	681b      	ldr	r3, [r3, #0]
 801263e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8012642:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 8012646:	2200      	movs	r2, #0
 8012648:	e9cd 2203 	strd	r2, r2, [sp, #12]
 801264c:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8012650:	2a03      	cmp	r2, #3
 8012652:	d811      	bhi.n	8012678 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8012654:	e8df f002 	tbb	[pc, r2]
 8012658:	89727902 	.word	0x89727902
 801265c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8012660:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8012664:	1ad2      	subs	r2, r2, r3
 8012666:	2002      	movs	r0, #2
 8012668:	f8ad 1010 	strh.w	r1, [sp, #16]
 801266c:	fb92 f2f0 	sdiv	r2, r2, r0
 8012670:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012674:	f8ad 200e 	strh.w	r2, [sp, #14]
 8012678:	f10d 080c 	add.w	r8, sp, #12
 801267c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8012680:	f10d 0914 	add.w	r9, sp, #20
 8012684:	e889 0003 	stmia.w	r9, {r0, r1}
 8012688:	4639      	mov	r1, r7
 801268a:	4648      	mov	r0, r9
 801268c:	f7fd fb36 	bl	800fcfc <_ZN8touchgfx4RectaNERKS0_>
 8012690:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012694:	2b00      	cmp	r3, #0
 8012696:	dd4e      	ble.n	8012736 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012698:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801269c:	2b00      	cmp	r3, #0
 801269e:	dd4a      	ble.n	8012736 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80126a0:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80126a4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80126a8:	1a9b      	subs	r3, r3, r2
 80126aa:	f8ad 3014 	strh.w	r3, [sp, #20]
 80126ae:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 80126b2:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 80126b6:	1a9b      	subs	r3, r3, r2
 80126b8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80126bc:	6823      	ldr	r3, [r4, #0]
 80126be:	4641      	mov	r1, r8
 80126c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80126c2:	4620      	mov	r0, r4
 80126c4:	4798      	blx	r3
 80126c6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80126ca:	2b00      	cmp	r3, #0
 80126cc:	d053      	beq.n	8012776 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 80126ce:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80126d0:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80126d2:	682b      	ldr	r3, [r5, #0]
 80126d4:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 80126d8:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 80126dc:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80126e0:	785b      	ldrb	r3, [r3, #1]
 80126e2:	9209      	str	r2, [sp, #36]	; 0x24
 80126e4:	f3c3 0501 	ubfx	r5, r3, #0, #2
 80126e8:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80126ec:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 80126f0:	2300      	movs	r3, #0
 80126f2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80126f6:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 80126fa:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80126fe:	4b22      	ldr	r3, [pc, #136]	; (8012788 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8012700:	9607      	str	r6, [sp, #28]
 8012702:	681b      	ldr	r3, [r3, #0]
 8012704:	f88d 5020 	strb.w	r5, [sp, #32]
 8012708:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801270c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012710:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8012714:	b10a      	cbz	r2, 801271a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8012716:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8012718:	b904      	cbnz	r4, 801271c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 801271a:	689c      	ldr	r4, [r3, #8]
 801271c:	4b1b      	ldr	r3, [pc, #108]	; (801278c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 801271e:	6818      	ldr	r0, [r3, #0]
 8012720:	f7f5 fc08 	bl	8007f34 <_ZNK8touchgfx5Texts7getTextEt>
 8012724:	ab07      	add	r3, sp, #28
 8012726:	9001      	str	r0, [sp, #4]
 8012728:	9300      	str	r3, [sp, #0]
 801272a:	e898 0006 	ldmia.w	r8, {r1, r2}
 801272e:	464b      	mov	r3, r9
 8012730:	4620      	mov	r0, r4
 8012732:	f7f5 fbb1 	bl	8007e98 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8012736:	b00d      	add	sp, #52	; 0x34
 8012738:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801273c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8012740:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8012744:	1ad2      	subs	r2, r2, r3
 8012746:	3201      	adds	r2, #1
 8012748:	e78d      	b.n	8012666 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 801274a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801274e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8012752:	1ad2      	subs	r2, r2, r3
 8012754:	3201      	adds	r2, #1
 8012756:	2002      	movs	r0, #2
 8012758:	f8ad 3010 	strh.w	r3, [sp, #16]
 801275c:	fb92 f2f0 	sdiv	r2, r2, r0
 8012760:	f8ad 1012 	strh.w	r1, [sp, #18]
 8012764:	f8ad 200c 	strh.w	r2, [sp, #12]
 8012768:	e786      	b.n	8012678 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 801276a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801276e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8012772:	1ad2      	subs	r2, r2, r3
 8012774:	e7ef      	b.n	8012756 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8012776:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8012778:	e7aa      	b.n	80126d0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 801277a:	bf00      	nop
 801277c:	20013830 	.word	0x20013830
 8012780:	2001382c 	.word	0x2001382c
 8012784:	20013834 	.word	0x20013834
 8012788:	200137d4 	.word	0x200137d4
 801278c:	20013838 	.word	0x20013838

08012790 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8012790:	b510      	push	{r4, lr}
 8012792:	2101      	movs	r1, #1
 8012794:	4c13      	ldr	r4, [pc, #76]	; (80127e4 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8012796:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801279a:	2200      	movs	r2, #0
 801279c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80127a0:	6004      	str	r4, [r0, #0]
 80127a2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80127a6:	4c10      	ldr	r4, [pc, #64]	; (80127e8 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 80127a8:	8082      	strh	r2, [r0, #4]
 80127aa:	80c2      	strh	r2, [r0, #6]
 80127ac:	8102      	strh	r2, [r0, #8]
 80127ae:	8142      	strh	r2, [r0, #10]
 80127b0:	8182      	strh	r2, [r0, #12]
 80127b2:	81c2      	strh	r2, [r0, #14]
 80127b4:	8202      	strh	r2, [r0, #16]
 80127b6:	8242      	strh	r2, [r0, #18]
 80127b8:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80127bc:	61c2      	str	r2, [r0, #28]
 80127be:	8402      	strh	r2, [r0, #32]
 80127c0:	8442      	strh	r2, [r0, #34]	; 0x22
 80127c2:	6282      	str	r2, [r0, #40]	; 0x28
 80127c4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80127c8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80127ca:	8601      	strh	r1, [r0, #48]	; 0x30
 80127cc:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80127d0:	6344      	str	r4, [r0, #52]	; 0x34
 80127d2:	8701      	strh	r1, [r0, #56]	; 0x38
 80127d4:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 80127d8:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 80127dc:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 80127e0:	bd10      	pop	{r4, pc}
 80127e2:	bf00      	nop
 80127e4:	0802cd48 	.word	0x0802cd48
 80127e8:	0802a1cc 	.word	0x0802a1cc

080127ec <_ZN8touchgfx7OutlineD1Ev>:
 80127ec:	4770      	bx	lr

080127ee <_ZN8touchgfx7OutlineD0Ev>:
 80127ee:	b510      	push	{r4, lr}
 80127f0:	2130      	movs	r1, #48	; 0x30
 80127f2:	4604      	mov	r4, r0
 80127f4:	f015 f8f3 	bl	80279de <_ZdlPvj>
 80127f8:	4620      	mov	r0, r4
 80127fa:	bd10      	pop	{r4, pc}

080127fc <_ZN8touchgfx7Outline5resetEv>:
 80127fc:	b510      	push	{r4, lr}
 80127fe:	4604      	mov	r4, r0
 8012800:	f000 fe96 	bl	8013530 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8012804:	60e0      	str	r0, [r4, #12]
 8012806:	f000 fe99 	bl	801353c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801280a:	68e3      	ldr	r3, [r4, #12]
 801280c:	6123      	str	r3, [r4, #16]
 801280e:	08c0      	lsrs	r0, r0, #3
 8012810:	2200      	movs	r2, #0
 8012812:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8012816:	3801      	subs	r0, #1
 8012818:	6060      	str	r0, [r4, #4]
 801281a:	60a2      	str	r2, [r4, #8]
 801281c:	8019      	strh	r1, [r3, #0]
 801281e:	8059      	strh	r1, [r3, #2]
 8012820:	809a      	strh	r2, [r3, #4]
 8012822:	80da      	strh	r2, [r3, #6]
 8012824:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8012826:	f023 0301 	bic.w	r3, r3, #1
 801282a:	f043 0302 	orr.w	r3, r3, #2
 801282e:	6263      	str	r3, [r4, #36]	; 0x24
 8012830:	bd10      	pop	{r4, pc}
	...

08012834 <_ZN8touchgfx7OutlineC1Ev>:
 8012834:	b510      	push	{r4, lr}
 8012836:	4b0a      	ldr	r3, [pc, #40]	; (8012860 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8012838:	6003      	str	r3, [r0, #0]
 801283a:	2300      	movs	r3, #0
 801283c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8012840:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8012844:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8012848:	e9c0 3307 	strd	r3, r3, [r0, #28]
 801284c:	6243      	str	r3, [r0, #36]	; 0x24
 801284e:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8012852:	4604      	mov	r4, r0
 8012854:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8012858:	f7ff ffd0 	bl	80127fc <_ZN8touchgfx7Outline5resetEv>
 801285c:	4620      	mov	r0, r4
 801285e:	bd10      	pop	{r4, pc}
 8012860:	0802cdbc 	.word	0x0802cdbc

08012864 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8012864:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012868:	b093      	sub	sp, #76	; 0x4c
 801286a:	1156      	asrs	r6, r2, #5
 801286c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801286e:	9305      	str	r3, [sp, #20]
 8012870:	f004 051f 	and.w	r5, r4, #31
 8012874:	1153      	asrs	r3, r2, #5
 8012876:	9504      	str	r5, [sp, #16]
 8012878:	1165      	asrs	r5, r4, #5
 801287a:	9303      	str	r3, [sp, #12]
 801287c:	42ae      	cmp	r6, r5
 801287e:	ea4f 1364 	mov.w	r3, r4, asr #5
 8012882:	9306      	str	r3, [sp, #24]
 8012884:	f002 031f 	and.w	r3, r2, #31
 8012888:	f040 80f8 	bne.w	8012a7c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 801288c:	9c04      	ldr	r4, [sp, #16]
 801288e:	9a05      	ldr	r2, [sp, #20]
 8012890:	42a3      	cmp	r3, r4
 8012892:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8012896:	6902      	ldr	r2, [r0, #16]
 8012898:	d125      	bne.n	80128e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801289a:	f9b2 3000 	ldrsh.w	r3, [r2]
 801289e:	459e      	cmp	lr, r3
 80128a0:	d103      	bne.n	80128aa <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 80128a2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 80128a6:	429e      	cmp	r6, r3
 80128a8:	d035      	beq.n	8012916 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80128aa:	88d1      	ldrh	r1, [r2, #6]
 80128ac:	8893      	ldrh	r3, [r2, #4]
 80128ae:	430b      	orrs	r3, r1
 80128b0:	d010      	beq.n	80128d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80128b2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 80128b6:	2b00      	cmp	r3, #0
 80128b8:	db0c      	blt.n	80128d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80128ba:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80128bc:	428b      	cmp	r3, r1
 80128be:	da09      	bge.n	80128d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80128c0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 80128c4:	428b      	cmp	r3, r1
 80128c6:	bf38      	it	cc
 80128c8:	3208      	addcc	r2, #8
 80128ca:	f103 0301 	add.w	r3, r3, #1
 80128ce:	bf38      	it	cc
 80128d0:	6102      	strcc	r2, [r0, #16]
 80128d2:	6083      	str	r3, [r0, #8]
 80128d4:	6903      	ldr	r3, [r0, #16]
 80128d6:	9a03      	ldr	r2, [sp, #12]
 80128d8:	f8a3 e000 	strh.w	lr, [r3]
 80128dc:	805a      	strh	r2, [r3, #2]
 80128de:	2200      	movs	r2, #0
 80128e0:	809a      	strh	r2, [r3, #4]
 80128e2:	80da      	strh	r2, [r3, #6]
 80128e4:	e017      	b.n	8012916 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80128e6:	9c05      	ldr	r4, [sp, #20]
 80128e8:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 80128ec:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 80128f0:	f004 041f 	and.w	r4, r4, #31
 80128f4:	114e      	asrs	r6, r1, #5
 80128f6:	9402      	str	r4, [sp, #8]
 80128f8:	9c04      	ldr	r4, [sp, #16]
 80128fa:	4576      	cmp	r6, lr
 80128fc:	f001 0c1f 	and.w	ip, r1, #31
 8012900:	eba4 0403 	sub.w	r4, r4, r3
 8012904:	d10a      	bne.n	801291c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8012906:	9b02      	ldr	r3, [sp, #8]
 8012908:	449c      	add	ip, r3
 801290a:	44a0      	add	r8, r4
 801290c:	fb04 a40c 	mla	r4, r4, ip, sl
 8012910:	f8a2 8004 	strh.w	r8, [r2, #4]
 8012914:	80d4      	strh	r4, [r2, #6]
 8012916:	b013      	add	sp, #76	; 0x4c
 8012918:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801291c:	9d05      	ldr	r5, [sp, #20]
 801291e:	1a69      	subs	r1, r5, r1
 8012920:	bf5b      	ittet	pl
 8012922:	f1cc 0520 	rsbpl	r5, ip, #32
 8012926:	436c      	mulpl	r4, r5
 8012928:	2500      	movmi	r5, #0
 801292a:	2520      	movpl	r5, #32
 801292c:	bf44      	itt	mi
 801292e:	fb04 f40c 	mulmi.w	r4, r4, ip
 8012932:	4249      	negmi	r1, r1
 8012934:	9501      	str	r5, [sp, #4]
 8012936:	9f01      	ldr	r7, [sp, #4]
 8012938:	fb94 f5f1 	sdiv	r5, r4, r1
 801293c:	fb01 4415 	mls	r4, r1, r5, r4
 8012940:	bf54      	ite	pl
 8012942:	f04f 0901 	movpl.w	r9, #1
 8012946:	f04f 39ff 	movmi.w	r9, #4294967295
 801294a:	2c00      	cmp	r4, #0
 801294c:	bfb8      	it	lt
 801294e:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8012952:	44bc      	add	ip, r7
 8012954:	44a8      	add	r8, r5
 8012956:	fb05 ac0c 	mla	ip, r5, ip, sl
 801295a:	f8a2 8004 	strh.w	r8, [r2, #4]
 801295e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8012962:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012966:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801296a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 801296e:	bfb8      	it	lt
 8012970:	1864      	addlt	r4, r4, r1
 8012972:	ea58 0202 	orrs.w	r2, r8, r2
 8012976:	444e      	add	r6, r9
 8012978:	d011      	beq.n	801299e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801297a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801297e:	f1b8 0f00 	cmp.w	r8, #0
 8012982:	db0c      	blt.n	801299e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012984:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8012986:	4590      	cmp	r8, r2
 8012988:	da09      	bge.n	801299e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801298a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 801298e:	4590      	cmp	r8, r2
 8012990:	bf3c      	itt	cc
 8012992:	f10c 0208 	addcc.w	r2, ip, #8
 8012996:	6102      	strcc	r2, [r0, #16]
 8012998:	f108 0201 	add.w	r2, r8, #1
 801299c:	6082      	str	r2, [r0, #8]
 801299e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80129a2:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80129a6:	f8ac 6000 	strh.w	r6, [ip]
 80129aa:	2700      	movs	r7, #0
 80129ac:	45b6      	cmp	lr, r6
 80129ae:	f8ac 2002 	strh.w	r2, [ip, #2]
 80129b2:	f8ac 7004 	strh.w	r7, [ip, #4]
 80129b6:	f8ac 7006 	strh.w	r7, [ip, #6]
 80129ba:	442b      	add	r3, r5
 80129bc:	d04d      	beq.n	8012a5a <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 80129be:	9f04      	ldr	r7, [sp, #16]
 80129c0:	1aff      	subs	r7, r7, r3
 80129c2:	443d      	add	r5, r7
 80129c4:	016d      	lsls	r5, r5, #5
 80129c6:	fb95 f8f1 	sdiv	r8, r5, r1
 80129ca:	fb01 5518 	mls	r5, r1, r8, r5
 80129ce:	2d00      	cmp	r5, #0
 80129d0:	bfb8      	it	lt
 80129d2:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80129d6:	f108 0701 	add.w	r7, r8, #1
 80129da:	bfb8      	it	lt
 80129dc:	186d      	addlt	r5, r5, r1
 80129de:	1a64      	subs	r4, r4, r1
 80129e0:	9703      	str	r7, [sp, #12]
 80129e2:	f04f 0a00 	mov.w	sl, #0
 80129e6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80129ea:	1964      	adds	r4, r4, r5
 80129ec:	bf58      	it	pl
 80129ee:	9f03      	ldrpl	r7, [sp, #12]
 80129f0:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80129f4:	bf48      	it	mi
 80129f6:	4647      	movmi	r7, r8
 80129f8:	44bb      	add	fp, r7
 80129fa:	f8ac b004 	strh.w	fp, [ip, #4]
 80129fe:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012a02:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012a06:	f8ac b006 	strh.w	fp, [ip, #6]
 8012a0a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012a0e:	443b      	add	r3, r7
 8012a10:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012a14:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012a18:	bf58      	it	pl
 8012a1a:	1a64      	subpl	r4, r4, r1
 8012a1c:	ea5b 0707 	orrs.w	r7, fp, r7
 8012a20:	444e      	add	r6, r9
 8012a22:	d011      	beq.n	8012a48 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012a24:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8012a28:	f1bb 0f00 	cmp.w	fp, #0
 8012a2c:	db0c      	blt.n	8012a48 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012a2e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012a30:	45bb      	cmp	fp, r7
 8012a32:	da09      	bge.n	8012a48 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012a34:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012a38:	45bb      	cmp	fp, r7
 8012a3a:	bf3c      	itt	cc
 8012a3c:	f10c 0708 	addcc.w	r7, ip, #8
 8012a40:	6107      	strcc	r7, [r0, #16]
 8012a42:	f10b 0701 	add.w	r7, fp, #1
 8012a46:	6087      	str	r7, [r0, #8]
 8012a48:	6907      	ldr	r7, [r0, #16]
 8012a4a:	45b6      	cmp	lr, r6
 8012a4c:	803e      	strh	r6, [r7, #0]
 8012a4e:	807a      	strh	r2, [r7, #2]
 8012a50:	f8a7 a004 	strh.w	sl, [r7, #4]
 8012a54:	f8a7 a006 	strh.w	sl, [r7, #6]
 8012a58:	d1c5      	bne.n	80129e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 8012a5a:	9a04      	ldr	r2, [sp, #16]
 8012a5c:	1ad3      	subs	r3, r2, r3
 8012a5e:	6902      	ldr	r2, [r0, #16]
 8012a60:	8891      	ldrh	r1, [r2, #4]
 8012a62:	88d6      	ldrh	r6, [r2, #6]
 8012a64:	4419      	add	r1, r3
 8012a66:	8091      	strh	r1, [r2, #4]
 8012a68:	9902      	ldr	r1, [sp, #8]
 8012a6a:	f101 0c20 	add.w	ip, r1, #32
 8012a6e:	9901      	ldr	r1, [sp, #4]
 8012a70:	ebac 0c01 	sub.w	ip, ip, r1
 8012a74:	fb03 630c 	mla	r3, r3, ip, r6
 8012a78:	80d3      	strh	r3, [r2, #6]
 8012a7a:	e74c      	b.n	8012916 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012a7c:	9d05      	ldr	r5, [sp, #20]
 8012a7e:	1aa2      	subs	r2, r4, r2
 8012a80:	eba5 0501 	sub.w	r5, r5, r1
 8012a84:	9508      	str	r5, [sp, #32]
 8012a86:	9202      	str	r2, [sp, #8]
 8012a88:	f140 8128 	bpl.w	8012cdc <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8012a8c:	9a03      	ldr	r2, [sp, #12]
 8012a8e:	2a00      	cmp	r2, #0
 8012a90:	f6ff af41 	blt.w	8012916 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012a94:	9a02      	ldr	r2, [sp, #8]
 8012a96:	4252      	negs	r2, r2
 8012a98:	9202      	str	r2, [sp, #8]
 8012a9a:	9a06      	ldr	r2, [sp, #24]
 8012a9c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8012aa0:	f04f 34ff 	mov.w	r4, #4294967295
 8012aa4:	9206      	str	r2, [sp, #24]
 8012aa6:	462a      	mov	r2, r5
 8012aa8:	940b      	str	r4, [sp, #44]	; 0x2c
 8012aaa:	435a      	muls	r2, r3
 8012aac:	2400      	movs	r4, #0
 8012aae:	9d02      	ldr	r5, [sp, #8]
 8012ab0:	9401      	str	r4, [sp, #4]
 8012ab2:	9c02      	ldr	r4, [sp, #8]
 8012ab4:	fb92 f4f4 	sdiv	r4, r2, r4
 8012ab8:	fb05 2214 	mls	r2, r5, r4, r2
 8012abc:	2a00      	cmp	r2, #0
 8012abe:	9207      	str	r2, [sp, #28]
 8012ac0:	bfbc      	itt	lt
 8012ac2:	1952      	addlt	r2, r2, r5
 8012ac4:	9207      	strlt	r2, [sp, #28]
 8012ac6:	9a01      	ldr	r2, [sp, #4]
 8012ac8:	6905      	ldr	r5, [r0, #16]
 8012aca:	bfb8      	it	lt
 8012acc:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012ad0:	eb04 0901 	add.w	r9, r4, r1
 8012ad4:	429a      	cmp	r2, r3
 8012ad6:	ea4f 1669 	mov.w	r6, r9, asr #5
 8012ada:	f040 8112 	bne.w	8012d02 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 8012ade:	f9b5 3000 	ldrsh.w	r3, [r5]
 8012ae2:	429e      	cmp	r6, r3
 8012ae4:	d104      	bne.n	8012af0 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8012ae6:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8012aea:	9a03      	ldr	r2, [sp, #12]
 8012aec:	429a      	cmp	r2, r3
 8012aee:	d01b      	beq.n	8012b28 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012af0:	88ea      	ldrh	r2, [r5, #6]
 8012af2:	88ab      	ldrh	r3, [r5, #4]
 8012af4:	4313      	orrs	r3, r2
 8012af6:	d010      	beq.n	8012b1a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012af8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8012afc:	2a00      	cmp	r2, #0
 8012afe:	db0c      	blt.n	8012b1a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012b00:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012b02:	429a      	cmp	r2, r3
 8012b04:	da09      	bge.n	8012b1a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012b06:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8012b0a:	429a      	cmp	r2, r3
 8012b0c:	bf38      	it	cc
 8012b0e:	3508      	addcc	r5, #8
 8012b10:	f102 0201 	add.w	r2, r2, #1
 8012b14:	bf38      	it	cc
 8012b16:	6105      	strcc	r5, [r0, #16]
 8012b18:	6082      	str	r2, [r0, #8]
 8012b1a:	6903      	ldr	r3, [r0, #16]
 8012b1c:	9a03      	ldr	r2, [sp, #12]
 8012b1e:	805a      	strh	r2, [r3, #2]
 8012b20:	2200      	movs	r2, #0
 8012b22:	801e      	strh	r6, [r3, #0]
 8012b24:	809a      	strh	r2, [r3, #4]
 8012b26:	80da      	strh	r2, [r3, #6]
 8012b28:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012b2a:	9a03      	ldr	r2, [sp, #12]
 8012b2c:	6901      	ldr	r1, [r0, #16]
 8012b2e:	441a      	add	r2, r3
 8012b30:	f9b1 3000 	ldrsh.w	r3, [r1]
 8012b34:	42b3      	cmp	r3, r6
 8012b36:	d103      	bne.n	8012b40 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8012b38:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8012b3c:	429a      	cmp	r2, r3
 8012b3e:	d01a      	beq.n	8012b76 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8012b40:	88cc      	ldrh	r4, [r1, #6]
 8012b42:	888b      	ldrh	r3, [r1, #4]
 8012b44:	4323      	orrs	r3, r4
 8012b46:	d010      	beq.n	8012b6a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012b48:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8012b4c:	2c00      	cmp	r4, #0
 8012b4e:	db0c      	blt.n	8012b6a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012b50:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012b52:	429c      	cmp	r4, r3
 8012b54:	da09      	bge.n	8012b6a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012b56:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8012b5a:	429c      	cmp	r4, r3
 8012b5c:	bf38      	it	cc
 8012b5e:	3108      	addcc	r1, #8
 8012b60:	f104 0401 	add.w	r4, r4, #1
 8012b64:	bf38      	it	cc
 8012b66:	6101      	strcc	r1, [r0, #16]
 8012b68:	6084      	str	r4, [r0, #8]
 8012b6a:	6903      	ldr	r3, [r0, #16]
 8012b6c:	2100      	movs	r1, #0
 8012b6e:	801e      	strh	r6, [r3, #0]
 8012b70:	805a      	strh	r2, [r3, #2]
 8012b72:	8099      	strh	r1, [r3, #4]
 8012b74:	80d9      	strh	r1, [r3, #6]
 8012b76:	9b06      	ldr	r3, [sp, #24]
 8012b78:	4293      	cmp	r3, r2
 8012b7a:	f000 8082 	beq.w	8012c82 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8012b7e:	9b08      	ldr	r3, [sp, #32]
 8012b80:	9c02      	ldr	r4, [sp, #8]
 8012b82:	9902      	ldr	r1, [sp, #8]
 8012b84:	015b      	lsls	r3, r3, #5
 8012b86:	fb93 f1f1 	sdiv	r1, r3, r1
 8012b8a:	fb04 3311 	mls	r3, r4, r1, r3
 8012b8e:	2b00      	cmp	r3, #0
 8012b90:	9103      	str	r1, [sp, #12]
 8012b92:	9308      	str	r3, [sp, #32]
 8012b94:	da04      	bge.n	8012ba0 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8012b96:	1e4b      	subs	r3, r1, #1
 8012b98:	9303      	str	r3, [sp, #12]
 8012b9a:	9b08      	ldr	r3, [sp, #32]
 8012b9c:	4423      	add	r3, r4
 8012b9e:	9308      	str	r3, [sp, #32]
 8012ba0:	9b07      	ldr	r3, [sp, #28]
 8012ba2:	9902      	ldr	r1, [sp, #8]
 8012ba4:	1a5b      	subs	r3, r3, r1
 8012ba6:	9307      	str	r3, [sp, #28]
 8012ba8:	9b01      	ldr	r3, [sp, #4]
 8012baa:	f1c3 0320 	rsb	r3, r3, #32
 8012bae:	930e      	str	r3, [sp, #56]	; 0x38
 8012bb0:	990e      	ldr	r1, [sp, #56]	; 0x38
 8012bb2:	9b01      	ldr	r3, [sp, #4]
 8012bb4:	1a5b      	subs	r3, r3, r1
 8012bb6:	464f      	mov	r7, r9
 8012bb8:	930a      	str	r3, [sp, #40]	; 0x28
 8012bba:	2600      	movs	r6, #0
 8012bbc:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8012bc0:	185b      	adds	r3, r3, r1
 8012bc2:	bf58      	it	pl
 8012bc4:	9902      	ldrpl	r1, [sp, #8]
 8012bc6:	9307      	str	r3, [sp, #28]
 8012bc8:	bf5d      	ittte	pl
 8012bca:	1a5b      	subpl	r3, r3, r1
 8012bcc:	9307      	strpl	r3, [sp, #28]
 8012bce:	9b03      	ldrpl	r3, [sp, #12]
 8012bd0:	9903      	ldrmi	r1, [sp, #12]
 8012bd2:	bf58      	it	pl
 8012bd4:	1c59      	addpl	r1, r3, #1
 8012bd6:	4489      	add	r9, r1
 8012bd8:	2a00      	cmp	r2, #0
 8012bda:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8012bde:	db2e      	blt.n	8012c3e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012be0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012be2:	4293      	cmp	r3, r2
 8012be4:	dd2b      	ble.n	8012c3e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012be6:	9c01      	ldr	r4, [sp, #4]
 8012be8:	6905      	ldr	r5, [r0, #16]
 8012bea:	46a0      	mov	r8, r4
 8012bec:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8012bee:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8012bf2:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8012bf6:	45a0      	cmp	r8, r4
 8012bf8:	f040 814f 	bne.w	8012e9a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8012bfc:	f9b5 1000 	ldrsh.w	r1, [r5]
 8012c00:	4551      	cmp	r1, sl
 8012c02:	d103      	bne.n	8012c0c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8012c04:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8012c08:	4291      	cmp	r1, r2
 8012c0a:	d018      	beq.n	8012c3e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012c0c:	ea5c 010e 	orrs.w	r1, ip, lr
 8012c10:	d00f      	beq.n	8012c32 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012c12:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8012c16:	2900      	cmp	r1, #0
 8012c18:	db0b      	blt.n	8012c32 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012c1a:	428b      	cmp	r3, r1
 8012c1c:	dd09      	ble.n	8012c32 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012c1e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8012c22:	4299      	cmp	r1, r3
 8012c24:	bf38      	it	cc
 8012c26:	3508      	addcc	r5, #8
 8012c28:	f101 0101 	add.w	r1, r1, #1
 8012c2c:	bf38      	it	cc
 8012c2e:	6105      	strcc	r5, [r0, #16]
 8012c30:	6081      	str	r1, [r0, #8]
 8012c32:	6903      	ldr	r3, [r0, #16]
 8012c34:	f8a3 a000 	strh.w	sl, [r3]
 8012c38:	805a      	strh	r2, [r3, #2]
 8012c3a:	809e      	strh	r6, [r3, #4]
 8012c3c:	80de      	strh	r6, [r3, #6]
 8012c3e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012c40:	6901      	ldr	r1, [r0, #16]
 8012c42:	441a      	add	r2, r3
 8012c44:	88cc      	ldrh	r4, [r1, #6]
 8012c46:	888b      	ldrh	r3, [r1, #4]
 8012c48:	4323      	orrs	r3, r4
 8012c4a:	d010      	beq.n	8012c6e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012c4c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8012c50:	2c00      	cmp	r4, #0
 8012c52:	db0c      	blt.n	8012c6e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012c54:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012c56:	429c      	cmp	r4, r3
 8012c58:	da09      	bge.n	8012c6e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012c5a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8012c5e:	429c      	cmp	r4, r3
 8012c60:	bf38      	it	cc
 8012c62:	3108      	addcc	r1, #8
 8012c64:	f104 0401 	add.w	r4, r4, #1
 8012c68:	bf38      	it	cc
 8012c6a:	6101      	strcc	r1, [r0, #16]
 8012c6c:	6084      	str	r4, [r0, #8]
 8012c6e:	6903      	ldr	r3, [r0, #16]
 8012c70:	f8a3 a000 	strh.w	sl, [r3]
 8012c74:	805a      	strh	r2, [r3, #2]
 8012c76:	809e      	strh	r6, [r3, #4]
 8012c78:	80de      	strh	r6, [r3, #6]
 8012c7a:	9b06      	ldr	r3, [sp, #24]
 8012c7c:	4293      	cmp	r3, r2
 8012c7e:	464f      	mov	r7, r9
 8012c80:	d19c      	bne.n	8012bbc <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8012c82:	9b01      	ldr	r3, [sp, #4]
 8012c84:	6907      	ldr	r7, [r0, #16]
 8012c86:	f1c3 0620 	rsb	r6, r3, #32
 8012c8a:	9b05      	ldr	r3, [sp, #20]
 8012c8c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8012c90:	9b04      	ldr	r3, [sp, #16]
 8012c92:	429e      	cmp	r6, r3
 8012c94:	f040 81cc 	bne.w	8013030 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8012c98:	f9b7 3000 	ldrsh.w	r3, [r7]
 8012c9c:	459e      	cmp	lr, r3
 8012c9e:	d104      	bne.n	8012caa <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8012ca0:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8012ca4:	429a      	cmp	r2, r3
 8012ca6:	f43f ae36 	beq.w	8012916 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012caa:	88f9      	ldrh	r1, [r7, #6]
 8012cac:	88bb      	ldrh	r3, [r7, #4]
 8012cae:	430b      	orrs	r3, r1
 8012cb0:	d010      	beq.n	8012cd4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012cb2:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8012cb6:	2b00      	cmp	r3, #0
 8012cb8:	db0c      	blt.n	8012cd4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012cba:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8012cbc:	428b      	cmp	r3, r1
 8012cbe:	da09      	bge.n	8012cd4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012cc0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8012cc4:	428b      	cmp	r3, r1
 8012cc6:	bf38      	it	cc
 8012cc8:	3708      	addcc	r7, #8
 8012cca:	f103 0301 	add.w	r3, r3, #1
 8012cce:	bf38      	it	cc
 8012cd0:	6107      	strcc	r7, [r0, #16]
 8012cd2:	6083      	str	r3, [r0, #8]
 8012cd4:	6903      	ldr	r3, [r0, #16]
 8012cd6:	f8a3 e000 	strh.w	lr, [r3]
 8012cda:	e5ff      	b.n	80128dc <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8012cdc:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8012cde:	9c03      	ldr	r4, [sp, #12]
 8012ce0:	42a2      	cmp	r2, r4
 8012ce2:	f6ff ae18 	blt.w	8012916 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012ce6:	9c06      	ldr	r4, [sp, #24]
 8012ce8:	42a2      	cmp	r2, r4
 8012cea:	bfb8      	it	lt
 8012cec:	3201      	addlt	r2, #1
 8012cee:	9c08      	ldr	r4, [sp, #32]
 8012cf0:	bfb8      	it	lt
 8012cf2:	9206      	strlt	r2, [sp, #24]
 8012cf4:	f1c3 0220 	rsb	r2, r3, #32
 8012cf8:	4362      	muls	r2, r4
 8012cfa:	2401      	movs	r4, #1
 8012cfc:	940b      	str	r4, [sp, #44]	; 0x2c
 8012cfe:	2420      	movs	r4, #32
 8012d00:	e6d5      	b.n	8012aae <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8012d02:	f009 021f 	and.w	r2, r9, #31
 8012d06:	ea4f 1861 	mov.w	r8, r1, asr #5
 8012d0a:	920c      	str	r2, [sp, #48]	; 0x30
 8012d0c:	9a01      	ldr	r2, [sp, #4]
 8012d0e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8012d12:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8012d16:	45b0      	cmp	r8, r6
 8012d18:	f001 011f 	and.w	r1, r1, #31
 8012d1c:	eba2 0203 	sub.w	r2, r2, r3
 8012d20:	d108      	bne.n	8012d34 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8012d22:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012d24:	4419      	add	r1, r3
 8012d26:	4496      	add	lr, r2
 8012d28:	fb02 a101 	mla	r1, r2, r1, sl
 8012d2c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8012d30:	80e9      	strh	r1, [r5, #6]
 8012d32:	e6f9      	b.n	8012b28 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012d34:	2c00      	cmp	r4, #0
 8012d36:	f2c0 80a9 	blt.w	8012e8c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8012d3a:	2701      	movs	r7, #1
 8012d3c:	f1c1 0c20 	rsb	ip, r1, #32
 8012d40:	970a      	str	r7, [sp, #40]	; 0x28
 8012d42:	fb02 f20c 	mul.w	r2, r2, ip
 8012d46:	2720      	movs	r7, #32
 8012d48:	9709      	str	r7, [sp, #36]	; 0x24
 8012d4a:	fb92 fcf4 	sdiv	ip, r2, r4
 8012d4e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8012d50:	fb04 221c 	mls	r2, r4, ip, r2
 8012d54:	2a00      	cmp	r2, #0
 8012d56:	bfb8      	it	lt
 8012d58:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8012d5c:	4439      	add	r1, r7
 8012d5e:	fb0c a101 	mla	r1, ip, r1, sl
 8012d62:	80e9      	strh	r1, [r5, #6]
 8012d64:	44e6      	add	lr, ip
 8012d66:	990a      	ldr	r1, [sp, #40]	; 0x28
 8012d68:	f8a5 e004 	strh.w	lr, [r5, #4]
 8012d6c:	eb08 0501 	add.w	r5, r8, r1
 8012d70:	6901      	ldr	r1, [r0, #16]
 8012d72:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8012d76:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8012d7a:	bfb8      	it	lt
 8012d7c:	1912      	addlt	r2, r2, r4
 8012d7e:	ea58 070e 	orrs.w	r7, r8, lr
 8012d82:	d010      	beq.n	8012da6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012d84:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8012d88:	f1be 0f00 	cmp.w	lr, #0
 8012d8c:	db0b      	blt.n	8012da6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012d8e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012d90:	45be      	cmp	lr, r7
 8012d92:	da08      	bge.n	8012da6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012d94:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012d98:	45be      	cmp	lr, r7
 8012d9a:	bf3c      	itt	cc
 8012d9c:	3108      	addcc	r1, #8
 8012d9e:	6101      	strcc	r1, [r0, #16]
 8012da0:	f10e 0101 	add.w	r1, lr, #1
 8012da4:	6081      	str	r1, [r0, #8]
 8012da6:	6901      	ldr	r1, [r0, #16]
 8012da8:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8012dac:	800d      	strh	r5, [r1, #0]
 8012dae:	f04f 0e00 	mov.w	lr, #0
 8012db2:	42ae      	cmp	r6, r5
 8012db4:	f8a1 8002 	strh.w	r8, [r1, #2]
 8012db8:	f8a1 e004 	strh.w	lr, [r1, #4]
 8012dbc:	f8a1 e006 	strh.w	lr, [r1, #6]
 8012dc0:	4463      	add	r3, ip
 8012dc2:	d054      	beq.n	8012e6e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8012dc4:	9901      	ldr	r1, [sp, #4]
 8012dc6:	1ac9      	subs	r1, r1, r3
 8012dc8:	4461      	add	r1, ip
 8012dca:	0149      	lsls	r1, r1, #5
 8012dcc:	fb91 fef4 	sdiv	lr, r1, r4
 8012dd0:	fb04 111e 	mls	r1, r4, lr, r1
 8012dd4:	2900      	cmp	r1, #0
 8012dd6:	bfb8      	it	lt
 8012dd8:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8012ddc:	f10e 0701 	add.w	r7, lr, #1
 8012de0:	bfb8      	it	lt
 8012de2:	1909      	addlt	r1, r1, r4
 8012de4:	1b12      	subs	r2, r2, r4
 8012de6:	970d      	str	r7, [sp, #52]	; 0x34
 8012de8:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8012dec:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8012dee:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8012df2:	1852      	adds	r2, r2, r1
 8012df4:	bf54      	ite	pl
 8012df6:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8012dfa:	46f4      	movmi	ip, lr
 8012dfc:	44e3      	add	fp, ip
 8012dfe:	f8aa b004 	strh.w	fp, [sl, #4]
 8012e02:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8012e06:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8012e0a:	f8aa b006 	strh.w	fp, [sl, #6]
 8012e0e:	4463      	add	r3, ip
 8012e10:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012e14:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012e18:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8012e1c:	bf58      	it	pl
 8012e1e:	1b12      	subpl	r2, r2, r4
 8012e20:	443d      	add	r5, r7
 8012e22:	ea5b 070a 	orrs.w	r7, fp, sl
 8012e26:	d014      	beq.n	8012e52 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012e28:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8012e2c:	f1ba 0f00 	cmp.w	sl, #0
 8012e30:	db0f      	blt.n	8012e52 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012e32:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012e34:	45ba      	cmp	sl, r7
 8012e36:	da0c      	bge.n	8012e52 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012e38:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8012e3c:	45ba      	cmp	sl, r7
 8012e3e:	bf38      	it	cc
 8012e40:	f10c 0c08 	addcc.w	ip, ip, #8
 8012e44:	f10a 0a01 	add.w	sl, sl, #1
 8012e48:	bf38      	it	cc
 8012e4a:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8012e4e:	f8c0 a008 	str.w	sl, [r0, #8]
 8012e52:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012e56:	f04f 0700 	mov.w	r7, #0
 8012e5a:	42ae      	cmp	r6, r5
 8012e5c:	f8ac 5000 	strh.w	r5, [ip]
 8012e60:	f8ac 8002 	strh.w	r8, [ip, #2]
 8012e64:	f8ac 7004 	strh.w	r7, [ip, #4]
 8012e68:	f8ac 7006 	strh.w	r7, [ip, #6]
 8012e6c:	d1bc      	bne.n	8012de8 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8012e6e:	6904      	ldr	r4, [r0, #16]
 8012e70:	9a01      	ldr	r2, [sp, #4]
 8012e72:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012e74:	1ad3      	subs	r3, r2, r3
 8012e76:	88a2      	ldrh	r2, [r4, #4]
 8012e78:	441a      	add	r2, r3
 8012e7a:	80a2      	strh	r2, [r4, #4]
 8012e7c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012e7e:	3120      	adds	r1, #32
 8012e80:	1a89      	subs	r1, r1, r2
 8012e82:	88e2      	ldrh	r2, [r4, #6]
 8012e84:	fb03 2301 	mla	r3, r3, r1, r2
 8012e88:	80e3      	strh	r3, [r4, #6]
 8012e8a:	e64d      	b.n	8012b28 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012e8c:	f04f 37ff 	mov.w	r7, #4294967295
 8012e90:	970a      	str	r7, [sp, #40]	; 0x28
 8012e92:	434a      	muls	r2, r1
 8012e94:	4264      	negs	r4, r4
 8012e96:	2700      	movs	r7, #0
 8012e98:	e756      	b.n	8012d48 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8012e9a:	ea4f 1867 	mov.w	r8, r7, asr #5
 8012e9e:	f009 031f 	and.w	r3, r9, #31
 8012ea2:	45d0      	cmp	r8, sl
 8012ea4:	f007 071f 	and.w	r7, r7, #31
 8012ea8:	930f      	str	r3, [sp, #60]	; 0x3c
 8012eaa:	fa1f fc8c 	uxth.w	ip, ip
 8012eae:	fa1f fe8e 	uxth.w	lr, lr
 8012eb2:	d10a      	bne.n	8012eca <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8012eb4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012eb6:	449c      	add	ip, r3
 8012eb8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012eba:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012ebe:	441f      	add	r7, r3
 8012ec0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012ec2:	fb03 e707 	mla	r7, r3, r7, lr
 8012ec6:	80ef      	strh	r7, [r5, #6]
 8012ec8:	e6b9      	b.n	8012c3e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012eca:	2900      	cmp	r1, #0
 8012ecc:	f2c0 80a8 	blt.w	8013020 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8012ed0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8012ed2:	f1c7 0320 	rsb	r3, r7, #32
 8012ed6:	4363      	muls	r3, r4
 8012ed8:	2401      	movs	r4, #1
 8012eda:	940d      	str	r4, [sp, #52]	; 0x34
 8012edc:	2420      	movs	r4, #32
 8012ede:	940c      	str	r4, [sp, #48]	; 0x30
 8012ee0:	fb93 f4f1 	sdiv	r4, r3, r1
 8012ee4:	fb01 3b14 	mls	fp, r1, r4, r3
 8012ee8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012eea:	f1bb 0f00 	cmp.w	fp, #0
 8012eee:	bfb8      	it	lt
 8012ef0:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012ef4:	441f      	add	r7, r3
 8012ef6:	fb04 e707 	mla	r7, r4, r7, lr
 8012efa:	44a4      	add	ip, r4
 8012efc:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012f00:	80ef      	strh	r7, [r5, #6]
 8012f02:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012f06:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012f08:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8012f0c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012f10:	bfb8      	it	lt
 8012f12:	448b      	addlt	fp, r1
 8012f14:	eb08 0503 	add.w	r5, r8, r3
 8012f18:	ea5e 0307 	orrs.w	r3, lr, r7
 8012f1c:	d011      	beq.n	8012f42 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012f1e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8012f22:	f1be 0f00 	cmp.w	lr, #0
 8012f26:	db0c      	blt.n	8012f42 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012f28:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012f2a:	45be      	cmp	lr, r7
 8012f2c:	da09      	bge.n	8012f42 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012f2e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012f32:	45be      	cmp	lr, r7
 8012f34:	bf3c      	itt	cc
 8012f36:	f10c 0708 	addcc.w	r7, ip, #8
 8012f3a:	6107      	strcc	r7, [r0, #16]
 8012f3c:	f10e 0701 	add.w	r7, lr, #1
 8012f40:	6087      	str	r7, [r0, #8]
 8012f42:	6907      	ldr	r7, [r0, #16]
 8012f44:	b213      	sxth	r3, r2
 8012f46:	9310      	str	r3, [sp, #64]	; 0x40
 8012f48:	807b      	strh	r3, [r7, #2]
 8012f4a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012f4c:	803d      	strh	r5, [r7, #0]
 8012f4e:	4555      	cmp	r5, sl
 8012f50:	80be      	strh	r6, [r7, #4]
 8012f52:	80fe      	strh	r6, [r7, #6]
 8012f54:	eb04 0c03 	add.w	ip, r4, r3
 8012f58:	d051      	beq.n	8012ffe <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8012f5a:	9b01      	ldr	r3, [sp, #4]
 8012f5c:	eba3 070c 	sub.w	r7, r3, ip
 8012f60:	443c      	add	r4, r7
 8012f62:	0164      	lsls	r4, r4, #5
 8012f64:	fb94 f8f1 	sdiv	r8, r4, r1
 8012f68:	fb01 4418 	mls	r4, r1, r8, r4
 8012f6c:	2c00      	cmp	r4, #0
 8012f6e:	bfb8      	it	lt
 8012f70:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012f74:	ebab 0301 	sub.w	r3, fp, r1
 8012f78:	f108 0701 	add.w	r7, r8, #1
 8012f7c:	bfb8      	it	lt
 8012f7e:	1864      	addlt	r4, r4, r1
 8012f80:	9309      	str	r3, [sp, #36]	; 0x24
 8012f82:	9711      	str	r7, [sp, #68]	; 0x44
 8012f84:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012f86:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8012f8a:	191b      	adds	r3, r3, r4
 8012f8c:	bf58      	it	pl
 8012f8e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8012f90:	f8be b004 	ldrh.w	fp, [lr, #4]
 8012f94:	9309      	str	r3, [sp, #36]	; 0x24
 8012f96:	bf48      	it	mi
 8012f98:	4647      	movmi	r7, r8
 8012f9a:	44bb      	add	fp, r7
 8012f9c:	f8ae b004 	strh.w	fp, [lr, #4]
 8012fa0:	f8be b006 	ldrh.w	fp, [lr, #6]
 8012fa4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012fa8:	f8ae b006 	strh.w	fp, [lr, #6]
 8012fac:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8012fb0:	44bc      	add	ip, r7
 8012fb2:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8012fb4:	f8be b006 	ldrh.w	fp, [lr, #6]
 8012fb8:	443d      	add	r5, r7
 8012fba:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8012fbe:	bf5c      	itt	pl
 8012fc0:	1a5b      	subpl	r3, r3, r1
 8012fc2:	9309      	strpl	r3, [sp, #36]	; 0x24
 8012fc4:	ea5b 0307 	orrs.w	r3, fp, r7
 8012fc8:	d011      	beq.n	8012fee <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012fca:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8012fce:	f1bb 0f00 	cmp.w	fp, #0
 8012fd2:	db0c      	blt.n	8012fee <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012fd4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012fd6:	45bb      	cmp	fp, r7
 8012fd8:	da09      	bge.n	8012fee <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012fda:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012fde:	45bb      	cmp	fp, r7
 8012fe0:	bf3c      	itt	cc
 8012fe2:	f10e 0708 	addcc.w	r7, lr, #8
 8012fe6:	6107      	strcc	r7, [r0, #16]
 8012fe8:	f10b 0701 	add.w	r7, fp, #1
 8012fec:	6087      	str	r7, [r0, #8]
 8012fee:	6907      	ldr	r7, [r0, #16]
 8012ff0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012ff2:	803d      	strh	r5, [r7, #0]
 8012ff4:	4555      	cmp	r5, sl
 8012ff6:	807b      	strh	r3, [r7, #2]
 8012ff8:	80be      	strh	r6, [r7, #4]
 8012ffa:	80fe      	strh	r6, [r7, #6]
 8012ffc:	d1c2      	bne.n	8012f84 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8012ffe:	9b01      	ldr	r3, [sp, #4]
 8013000:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013002:	eba3 0c0c 	sub.w	ip, r3, ip
 8013006:	6903      	ldr	r3, [r0, #16]
 8013008:	8899      	ldrh	r1, [r3, #4]
 801300a:	4461      	add	r1, ip
 801300c:	8099      	strh	r1, [r3, #4]
 801300e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013010:	3720      	adds	r7, #32
 8013012:	1a7f      	subs	r7, r7, r1
 8013014:	88d9      	ldrh	r1, [r3, #6]
 8013016:	fb0c 1c07 	mla	ip, ip, r7, r1
 801301a:	f8a3 c006 	strh.w	ip, [r3, #6]
 801301e:	e60e      	b.n	8012c3e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013020:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013022:	f04f 34ff 	mov.w	r4, #4294967295
 8013026:	940d      	str	r4, [sp, #52]	; 0x34
 8013028:	437b      	muls	r3, r7
 801302a:	4249      	negs	r1, r1
 801302c:	2400      	movs	r4, #0
 801302e:	e756      	b.n	8012ede <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8013030:	9905      	ldr	r1, [sp, #20]
 8013032:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8013036:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 801303a:	f001 011f 	and.w	r1, r1, #31
 801303e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8013042:	9102      	str	r1, [sp, #8]
 8013044:	9904      	ldr	r1, [sp, #16]
 8013046:	45f3      	cmp	fp, lr
 8013048:	f009 0c1f 	and.w	ip, r9, #31
 801304c:	eba1 0406 	sub.w	r4, r1, r6
 8013050:	d108      	bne.n	8013064 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8013052:	9b02      	ldr	r3, [sp, #8]
 8013054:	449c      	add	ip, r3
 8013056:	44a0      	add	r8, r4
 8013058:	fb04 a40c 	mla	r4, r4, ip, sl
 801305c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013060:	80fc      	strh	r4, [r7, #6]
 8013062:	e458      	b.n	8012916 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013064:	9905      	ldr	r1, [sp, #20]
 8013066:	ebb1 0109 	subs.w	r1, r1, r9
 801306a:	bf5b      	ittet	pl
 801306c:	f1cc 0520 	rsbpl	r5, ip, #32
 8013070:	436c      	mulpl	r4, r5
 8013072:	2500      	movmi	r5, #0
 8013074:	2520      	movpl	r5, #32
 8013076:	bf44      	itt	mi
 8013078:	fb04 f40c 	mulmi.w	r4, r4, ip
 801307c:	4249      	negmi	r1, r1
 801307e:	9501      	str	r5, [sp, #4]
 8013080:	9b01      	ldr	r3, [sp, #4]
 8013082:	fb94 f5f1 	sdiv	r5, r4, r1
 8013086:	fb01 4415 	mls	r4, r1, r5, r4
 801308a:	bf54      	ite	pl
 801308c:	f04f 0901 	movpl.w	r9, #1
 8013090:	f04f 39ff 	movmi.w	r9, #4294967295
 8013094:	2c00      	cmp	r4, #0
 8013096:	bfb8      	it	lt
 8013098:	f105 35ff 	addlt.w	r5, r5, #4294967295
 801309c:	449c      	add	ip, r3
 801309e:	44a8      	add	r8, r5
 80130a0:	fb05 ac0c 	mla	ip, r5, ip, sl
 80130a4:	f8a7 8004 	strh.w	r8, [r7, #4]
 80130a8:	f8a7 c006 	strh.w	ip, [r7, #6]
 80130ac:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80130b0:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80130b4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80130b8:	bfb8      	it	lt
 80130ba:	1864      	addlt	r4, r4, r1
 80130bc:	ea58 0707 	orrs.w	r7, r8, r7
 80130c0:	eb0b 0309 	add.w	r3, fp, r9
 80130c4:	d011      	beq.n	80130ea <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 80130c6:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80130ca:	f1b8 0f00 	cmp.w	r8, #0
 80130ce:	db0c      	blt.n	80130ea <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 80130d0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80130d2:	45b8      	cmp	r8, r7
 80130d4:	da09      	bge.n	80130ea <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 80130d6:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 80130da:	45b8      	cmp	r8, r7
 80130dc:	bf3c      	itt	cc
 80130de:	f10c 0708 	addcc.w	r7, ip, #8
 80130e2:	6107      	strcc	r7, [r0, #16]
 80130e4:	f108 0701 	add.w	r7, r8, #1
 80130e8:	6087      	str	r7, [r0, #8]
 80130ea:	6907      	ldr	r7, [r0, #16]
 80130ec:	f04f 0c00 	mov.w	ip, #0
 80130f0:	b212      	sxth	r2, r2
 80130f2:	459e      	cmp	lr, r3
 80130f4:	803b      	strh	r3, [r7, #0]
 80130f6:	807a      	strh	r2, [r7, #2]
 80130f8:	f8a7 c004 	strh.w	ip, [r7, #4]
 80130fc:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013100:	442e      	add	r6, r5
 8013102:	d04d      	beq.n	80131a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8013104:	9f04      	ldr	r7, [sp, #16]
 8013106:	1bbf      	subs	r7, r7, r6
 8013108:	443d      	add	r5, r7
 801310a:	016d      	lsls	r5, r5, #5
 801310c:	fb95 f8f1 	sdiv	r8, r5, r1
 8013110:	fb01 5518 	mls	r5, r1, r8, r5
 8013114:	4565      	cmp	r5, ip
 8013116:	bfb8      	it	lt
 8013118:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801311c:	f108 0701 	add.w	r7, r8, #1
 8013120:	bfb8      	it	lt
 8013122:	186d      	addlt	r5, r5, r1
 8013124:	1a64      	subs	r4, r4, r1
 8013126:	9703      	str	r7, [sp, #12]
 8013128:	f04f 0a00 	mov.w	sl, #0
 801312c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013130:	1964      	adds	r4, r4, r5
 8013132:	bf58      	it	pl
 8013134:	9f03      	ldrpl	r7, [sp, #12]
 8013136:	f8bc b004 	ldrh.w	fp, [ip, #4]
 801313a:	bf48      	it	mi
 801313c:	4647      	movmi	r7, r8
 801313e:	44bb      	add	fp, r7
 8013140:	f8ac b004 	strh.w	fp, [ip, #4]
 8013144:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013148:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 801314c:	f8ac b006 	strh.w	fp, [ip, #6]
 8013150:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013154:	443e      	add	r6, r7
 8013156:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801315a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 801315e:	bf58      	it	pl
 8013160:	1a64      	subpl	r4, r4, r1
 8013162:	ea5b 0707 	orrs.w	r7, fp, r7
 8013166:	444b      	add	r3, r9
 8013168:	d011      	beq.n	801318e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801316a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 801316e:	f1bb 0f00 	cmp.w	fp, #0
 8013172:	db0c      	blt.n	801318e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013174:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013176:	45bb      	cmp	fp, r7
 8013178:	da09      	bge.n	801318e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801317a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 801317e:	45bb      	cmp	fp, r7
 8013180:	bf3c      	itt	cc
 8013182:	f10c 0708 	addcc.w	r7, ip, #8
 8013186:	6107      	strcc	r7, [r0, #16]
 8013188:	f10b 0701 	add.w	r7, fp, #1
 801318c:	6087      	str	r7, [r0, #8]
 801318e:	6907      	ldr	r7, [r0, #16]
 8013190:	459e      	cmp	lr, r3
 8013192:	803b      	strh	r3, [r7, #0]
 8013194:	807a      	strh	r2, [r7, #2]
 8013196:	f8a7 a004 	strh.w	sl, [r7, #4]
 801319a:	f8a7 a006 	strh.w	sl, [r7, #6]
 801319e:	d1c5      	bne.n	801312c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 80131a0:	9b04      	ldr	r3, [sp, #16]
 80131a2:	1b9e      	subs	r6, r3, r6
 80131a4:	6903      	ldr	r3, [r0, #16]
 80131a6:	889a      	ldrh	r2, [r3, #4]
 80131a8:	4432      	add	r2, r6
 80131aa:	809a      	strh	r2, [r3, #4]
 80131ac:	9a02      	ldr	r2, [sp, #8]
 80131ae:	f102 0c20 	add.w	ip, r2, #32
 80131b2:	9a01      	ldr	r2, [sp, #4]
 80131b4:	ebac 0c02 	sub.w	ip, ip, r2
 80131b8:	88da      	ldrh	r2, [r3, #6]
 80131ba:	fb06 260c 	mla	r6, r6, ip, r2
 80131be:	80de      	strh	r6, [r3, #6]
 80131c0:	f7ff bba9 	b.w	8012916 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

080131c4 <_ZN8touchgfx7Outline6lineToEii>:
 80131c4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80131c6:	079b      	lsls	r3, r3, #30
 80131c8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80131ca:	460e      	mov	r6, r1
 80131cc:	4615      	mov	r5, r2
 80131ce:	d511      	bpl.n	80131f4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 80131d0:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 80131d4:	ea86 0701 	eor.w	r7, r6, r1
 80131d8:	ea85 0302 	eor.w	r3, r5, r2
 80131dc:	433b      	orrs	r3, r7
 80131de:	d009      	beq.n	80131f4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 80131e0:	4633      	mov	r3, r6
 80131e2:	9500      	str	r5, [sp, #0]
 80131e4:	f7ff fb3e 	bl	8012864 <_ZN8touchgfx7Outline10renderLineEiiii>
 80131e8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80131ea:	e9c0 6505 	strd	r6, r5, [r0, #20]
 80131ee:	f043 0301 	orr.w	r3, r3, #1
 80131f2:	6243      	str	r3, [r0, #36]	; 0x24
 80131f4:	b003      	add	sp, #12
 80131f6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080131f8 <_ZN8touchgfx7Outline6moveToEii>:
 80131f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80131fa:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80131fc:	4615      	mov	r5, r2
 80131fe:	079a      	lsls	r2, r3, #30
 8013200:	4604      	mov	r4, r0
 8013202:	460e      	mov	r6, r1
 8013204:	d401      	bmi.n	801320a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8013206:	f7ff faf9 	bl	80127fc <_ZN8touchgfx7Outline5resetEv>
 801320a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801320c:	07db      	lsls	r3, r3, #31
 801320e:	d504      	bpl.n	801321a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8013210:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8013214:	4620      	mov	r0, r4
 8013216:	f7ff ffd5 	bl	80131c4 <_ZN8touchgfx7Outline6lineToEii>
 801321a:	6923      	ldr	r3, [r4, #16]
 801321c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013220:	1170      	asrs	r0, r6, #5
 8013222:	4290      	cmp	r0, r2
 8013224:	ea4f 1165 	mov.w	r1, r5, asr #5
 8013228:	d103      	bne.n	8013232 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 801322a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801322e:	4291      	cmp	r1, r2
 8013230:	d01a      	beq.n	8013268 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8013232:	88df      	ldrh	r7, [r3, #6]
 8013234:	889a      	ldrh	r2, [r3, #4]
 8013236:	433a      	orrs	r2, r7
 8013238:	d010      	beq.n	801325c <_ZN8touchgfx7Outline6moveToEii+0x64>
 801323a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801323e:	2a00      	cmp	r2, #0
 8013240:	db0c      	blt.n	801325c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8013242:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8013244:	42ba      	cmp	r2, r7
 8013246:	da09      	bge.n	801325c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8013248:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 801324c:	42ba      	cmp	r2, r7
 801324e:	bf38      	it	cc
 8013250:	3308      	addcc	r3, #8
 8013252:	f102 0201 	add.w	r2, r2, #1
 8013256:	bf38      	it	cc
 8013258:	6123      	strcc	r3, [r4, #16]
 801325a:	60a2      	str	r2, [r4, #8]
 801325c:	6923      	ldr	r3, [r4, #16]
 801325e:	2200      	movs	r2, #0
 8013260:	8018      	strh	r0, [r3, #0]
 8013262:	8059      	strh	r1, [r3, #2]
 8013264:	809a      	strh	r2, [r3, #4]
 8013266:	80da      	strh	r2, [r3, #6]
 8013268:	6166      	str	r6, [r4, #20]
 801326a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 801326e:	6225      	str	r5, [r4, #32]
 8013270:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08013272 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8013272:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013276:	b0d0      	sub	sp, #320	; 0x140
 8013278:	466c      	mov	r4, sp
 801327a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801327e:	4627      	mov	r7, r4
 8013280:	1a0d      	subs	r5, r1, r0
 8013282:	2d48      	cmp	r5, #72	; 0x48
 8013284:	f100 0308 	add.w	r3, r0, #8
 8013288:	f340 80d5 	ble.w	8013436 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801328c:	112d      	asrs	r5, r5, #4
 801328e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8013292:	f9b0 9000 	ldrsh.w	r9, [r0]
 8013296:	6816      	ldr	r6, [r2, #0]
 8013298:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 801329c:	6006      	str	r6, [r0, #0]
 801329e:	6856      	ldr	r6, [r2, #4]
 80132a0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80132a4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80132a8:	6046      	str	r6, [r0, #4]
 80132aa:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80132ae:	f8a2 8002 	strh.w	r8, [r2, #2]
 80132b2:	f8a2 e004 	strh.w	lr, [r2, #4]
 80132b6:	f8a2 c006 	strh.w	ip, [r2, #6]
 80132ba:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80132be:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 80132c2:	4565      	cmp	r5, ip
 80132c4:	f1a1 0208 	sub.w	r2, r1, #8
 80132c8:	db06      	blt.n	80132d8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 80132ca:	d119      	bne.n	8013300 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 80132cc:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 80132d0:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 80132d4:	42ae      	cmp	r6, r5
 80132d6:	dd13      	ble.n	8013300 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 80132d8:	460e      	mov	r6, r1
 80132da:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 80132de:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80132e2:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 80132e6:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 80132ea:	601d      	str	r5, [r3, #0]
 80132ec:	6875      	ldr	r5, [r6, #4]
 80132ee:	605d      	str	r5, [r3, #4]
 80132f0:	f821 9c08 	strh.w	r9, [r1, #-8]
 80132f4:	f821 cc06 	strh.w	ip, [r1, #-6]
 80132f8:	f821 8c04 	strh.w	r8, [r1, #-4]
 80132fc:	f821 ec02 	strh.w	lr, [r1, #-2]
 8013300:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8013304:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8013308:	42ae      	cmp	r6, r5
 801330a:	db06      	blt.n	801331a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 801330c:	d116      	bne.n	801333c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801330e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8013312:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8013316:	45ac      	cmp	ip, r5
 8013318:	da10      	bge.n	801333c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801331a:	681d      	ldr	r5, [r3, #0]
 801331c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8013320:	6005      	str	r5, [r0, #0]
 8013322:	685d      	ldr	r5, [r3, #4]
 8013324:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8013328:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801332c:	f8a0 8008 	strh.w	r8, [r0, #8]
 8013330:	6045      	str	r5, [r0, #4]
 8013332:	8146      	strh	r6, [r0, #10]
 8013334:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8013338:	f8a0 c00e 	strh.w	ip, [r0, #14]
 801333c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8013340:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8013344:	4565      	cmp	r5, ip
 8013346:	db06      	blt.n	8013356 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8013348:	d119      	bne.n	801337e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801334a:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 801334e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8013352:	42ae      	cmp	r6, r5
 8013354:	da13      	bge.n	801337e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8013356:	460e      	mov	r6, r1
 8013358:	f9b0 9000 	ldrsh.w	r9, [r0]
 801335c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8013360:	6005      	str	r5, [r0, #0]
 8013362:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8013366:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 801336a:	6875      	ldr	r5, [r6, #4]
 801336c:	6045      	str	r5, [r0, #4]
 801336e:	f821 9c08 	strh.w	r9, [r1, #-8]
 8013372:	f821 cc06 	strh.w	ip, [r1, #-6]
 8013376:	f821 8c04 	strh.w	r8, [r1, #-4]
 801337a:	f821 ec02 	strh.w	lr, [r1, #-2]
 801337e:	3308      	adds	r3, #8
 8013380:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8013384:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8013388:	45e6      	cmp	lr, ip
 801338a:	dbf8      	blt.n	801337e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801338c:	d105      	bne.n	801339a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801338e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8013392:	f9b0 5000 	ldrsh.w	r5, [r0]
 8013396:	42ae      	cmp	r6, r5
 8013398:	dbf1      	blt.n	801337e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801339a:	4615      	mov	r5, r2
 801339c:	3a08      	subs	r2, #8
 801339e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 80133a2:	45b4      	cmp	ip, r6
 80133a4:	dbf9      	blt.n	801339a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80133a6:	d105      	bne.n	80133b4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 80133a8:	f9b0 8000 	ldrsh.w	r8, [r0]
 80133ac:	f9b2 6000 	ldrsh.w	r6, [r2]
 80133b0:	45b0      	cmp	r8, r6
 80133b2:	dbf2      	blt.n	801339a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80133b4:	4293      	cmp	r3, r2
 80133b6:	f1a5 0608 	sub.w	r6, r5, #8
 80133ba:	d816      	bhi.n	80133ea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 80133bc:	f8d6 c000 	ldr.w	ip, [r6]
 80133c0:	f9b3 a000 	ldrsh.w	sl, [r3]
 80133c4:	f8c3 c000 	str.w	ip, [r3]
 80133c8:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 80133cc:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 80133d0:	f8d6 c004 	ldr.w	ip, [r6, #4]
 80133d4:	f8c3 c004 	str.w	ip, [r3, #4]
 80133d8:	f825 ac08 	strh.w	sl, [r5, #-8]
 80133dc:	f825 ec06 	strh.w	lr, [r5, #-6]
 80133e0:	f825 9c04 	strh.w	r9, [r5, #-4]
 80133e4:	f825 8c02 	strh.w	r8, [r5, #-2]
 80133e8:	e7c9      	b.n	801337e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80133ea:	f8d6 e000 	ldr.w	lr, [r6]
 80133ee:	f9b0 a000 	ldrsh.w	sl, [r0]
 80133f2:	f8c0 e000 	str.w	lr, [r0]
 80133f6:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 80133fa:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 80133fe:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8013402:	f8c0 e004 	str.w	lr, [r0, #4]
 8013406:	f825 ac08 	strh.w	sl, [r5, #-8]
 801340a:	f825 cc06 	strh.w	ip, [r5, #-6]
 801340e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8013412:	f825 8c02 	strh.w	r8, [r5, #-2]
 8013416:	1acd      	subs	r5, r1, r3
 8013418:	1a16      	subs	r6, r2, r0
 801341a:	10ed      	asrs	r5, r5, #3
 801341c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8013420:	bfb5      	itete	lt
 8013422:	e9c4 0200 	strdlt	r0, r2, [r4]
 8013426:	e9c4 3100 	strdge	r3, r1, [r4]
 801342a:	460a      	movlt	r2, r1
 801342c:	4603      	movge	r3, r0
 801342e:	3408      	adds	r4, #8
 8013430:	4618      	mov	r0, r3
 8013432:	4611      	mov	r1, r2
 8013434:	e724      	b.n	8013280 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8013436:	4299      	cmp	r1, r3
 8013438:	d928      	bls.n	801348c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 801343a:	f1a3 0210 	sub.w	r2, r3, #16
 801343e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8013442:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8013446:	45ac      	cmp	ip, r5
 8013448:	db06      	blt.n	8013458 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 801344a:	d11d      	bne.n	8013488 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 801344c:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8013450:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8013454:	42ae      	cmp	r6, r5
 8013456:	da17      	bge.n	8013488 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8013458:	4615      	mov	r5, r2
 801345a:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 801345e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8013462:	6116      	str	r6, [r2, #16]
 8013464:	686e      	ldr	r6, [r5, #4]
 8013466:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 801346a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 801346e:	f8a2 9008 	strh.w	r9, [r2, #8]
 8013472:	42a8      	cmp	r0, r5
 8013474:	6156      	str	r6, [r2, #20]
 8013476:	f8a2 c00a 	strh.w	ip, [r2, #10]
 801347a:	f8a2 800c 	strh.w	r8, [r2, #12]
 801347e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8013482:	f1a2 0208 	sub.w	r2, r2, #8
 8013486:	d1da      	bne.n	801343e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8013488:	3308      	adds	r3, #8
 801348a:	e7d4      	b.n	8013436 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801348c:	42bc      	cmp	r4, r7
 801348e:	d903      	bls.n	8013498 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8013490:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8013494:	3c08      	subs	r4, #8
 8013496:	e6f3      	b.n	8013280 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8013498:	b050      	add	sp, #320	; 0x140
 801349a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801349e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 801349e:	b510      	push	{r4, lr}
 80134a0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80134a2:	07da      	lsls	r2, r3, #31
 80134a4:	4604      	mov	r4, r0
 80134a6:	d507      	bpl.n	80134b8 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 80134a8:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 80134ac:	f7ff fe8a 	bl	80131c4 <_ZN8touchgfx7Outline6lineToEii>
 80134b0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80134b2:	f023 0301 	bic.w	r3, r3, #1
 80134b6:	6243      	str	r3, [r0, #36]	; 0x24
 80134b8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80134ba:	079b      	lsls	r3, r3, #30
 80134bc:	d521      	bpl.n	8013502 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 80134be:	6923      	ldr	r3, [r4, #16]
 80134c0:	88d9      	ldrh	r1, [r3, #6]
 80134c2:	889a      	ldrh	r2, [r3, #4]
 80134c4:	430a      	orrs	r2, r1
 80134c6:	d010      	beq.n	80134ea <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80134c8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80134cc:	2a00      	cmp	r2, #0
 80134ce:	db0c      	blt.n	80134ea <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80134d0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80134d2:	428a      	cmp	r2, r1
 80134d4:	da09      	bge.n	80134ea <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80134d6:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 80134da:	4291      	cmp	r1, r2
 80134dc:	bf88      	it	hi
 80134de:	3308      	addhi	r3, #8
 80134e0:	f102 0201 	add.w	r2, r2, #1
 80134e4:	bf88      	it	hi
 80134e6:	6123      	strhi	r3, [r4, #16]
 80134e8:	60a2      	str	r2, [r4, #8]
 80134ea:	68a1      	ldr	r1, [r4, #8]
 80134ec:	b129      	cbz	r1, 80134fa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80134ee:	6863      	ldr	r3, [r4, #4]
 80134f0:	4299      	cmp	r1, r3
 80134f2:	d802      	bhi.n	80134fa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80134f4:	68e0      	ldr	r0, [r4, #12]
 80134f6:	f7ff febc 	bl	8013272 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 80134fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80134fc:	f023 0302 	bic.w	r3, r3, #2
 8013500:	6263      	str	r3, [r4, #36]	; 0x24
 8013502:	68e0      	ldr	r0, [r4, #12]
 8013504:	bd10      	pop	{r4, pc}
	...

08013508 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8013508:	4b02      	ldr	r3, [pc, #8]	; (8013514 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 801350a:	6018      	str	r0, [r3, #0]
 801350c:	4b02      	ldr	r3, [pc, #8]	; (8013518 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 801350e:	6019      	str	r1, [r3, #0]
 8013510:	4770      	bx	lr
 8013512:	bf00      	nop
 8013514:	200137dc 	.word	0x200137dc
 8013518:	200137e0 	.word	0x200137e0

0801351c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 801351c:	4a02      	ldr	r2, [pc, #8]	; (8013528 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 801351e:	2300      	movs	r3, #0
 8013520:	6013      	str	r3, [r2, #0]
 8013522:	4a02      	ldr	r2, [pc, #8]	; (801352c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8013524:	6013      	str	r3, [r2, #0]
 8013526:	4770      	bx	lr
 8013528:	200137dc 	.word	0x200137dc
 801352c:	200137e0 	.word	0x200137e0

08013530 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8013530:	4b01      	ldr	r3, [pc, #4]	; (8013538 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8013532:	6818      	ldr	r0, [r3, #0]
 8013534:	4770      	bx	lr
 8013536:	bf00      	nop
 8013538:	200137dc 	.word	0x200137dc

0801353c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 801353c:	4b01      	ldr	r3, [pc, #4]	; (8013544 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 801353e:	6818      	ldr	r0, [r3, #0]
 8013540:	4770      	bx	lr
 8013542:	bf00      	nop
 8013544:	200137e0 	.word	0x200137e0

08013548 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8013548:	b510      	push	{r4, lr}
 801354a:	6803      	ldr	r3, [r0, #0]
 801354c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801354e:	460c      	mov	r4, r1
 8013550:	4798      	blx	r3
 8013552:	1b03      	subs	r3, r0, r4
 8013554:	4258      	negs	r0, r3
 8013556:	4158      	adcs	r0, r3
 8013558:	bd10      	pop	{r4, pc}
	...

0801355c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 801355c:	4b01      	ldr	r3, [pc, #4]	; (8013564 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 801355e:	6019      	str	r1, [r3, #0]
 8013560:	4770      	bx	lr
 8013562:	bf00      	nop
 8013564:	200137e4 	.word	0x200137e4

08013568 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013568:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801356c:	4696      	mov	lr, r2
 801356e:	4605      	mov	r5, r0
 8013570:	4614      	mov	r4, r2
 8013572:	460e      	mov	r6, r1
 8013574:	461f      	mov	r7, r3
 8013576:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801357a:	b097      	sub	sp, #92	; 0x5c
 801357c:	f10d 0c1c 	add.w	ip, sp, #28
 8013580:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013584:	f8de 3000 	ldr.w	r3, [lr]
 8013588:	f8cc 3000 	str.w	r3, [ip]
 801358c:	f104 0e14 	add.w	lr, r4, #20
 8013590:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013594:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8013598:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801359c:	f8de 3000 	ldr.w	r3, [lr]
 80135a0:	f8cc 3000 	str.w	r3, [ip]
 80135a4:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80135a8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80135ac:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80135b0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80135b4:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 80135b8:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 80135bc:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 80135c0:	f8de 3000 	ldr.w	r3, [lr]
 80135c4:	f8cc 3000 	str.w	r3, [ip]
 80135c8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80135ca:	682b      	ldr	r3, [r5, #0]
 80135cc:	9201      	str	r2, [sp, #4]
 80135ce:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80135d2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80135d4:	9200      	str	r2, [sp, #0]
 80135d6:	f8cd 8008 	str.w	r8, [sp, #8]
 80135da:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 80135de:	aa07      	add	r2, sp, #28
 80135e0:	463b      	mov	r3, r7
 80135e2:	4631      	mov	r1, r6
 80135e4:	4628      	mov	r0, r5
 80135e6:	47d8      	blx	fp
 80135e8:	46a6      	mov	lr, r4
 80135ea:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80135ee:	f10d 0c1c 	add.w	ip, sp, #28
 80135f2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80135f6:	f8de 3000 	ldr.w	r3, [lr]
 80135fa:	f8cc 3000 	str.w	r3, [ip]
 80135fe:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013602:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013606:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801360a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801360e:	343c      	adds	r4, #60	; 0x3c
 8013610:	f8de 3000 	ldr.w	r3, [lr]
 8013614:	f8cc 3000 	str.w	r3, [ip]
 8013618:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801361a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801361e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013622:	6823      	ldr	r3, [r4, #0]
 8013624:	f8cc 3000 	str.w	r3, [ip]
 8013628:	682b      	ldr	r3, [r5, #0]
 801362a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801362e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8013630:	9201      	str	r2, [sp, #4]
 8013632:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8013634:	9200      	str	r2, [sp, #0]
 8013636:	f8cd 8008 	str.w	r8, [sp, #8]
 801363a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 801363c:	aa07      	add	r2, sp, #28
 801363e:	463b      	mov	r3, r7
 8013640:	4631      	mov	r1, r6
 8013642:	4628      	mov	r0, r5
 8013644:	47a0      	blx	r4
 8013646:	b017      	add	sp, #92	; 0x5c
 8013648:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801364c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 801364c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013650:	b08d      	sub	sp, #52	; 0x34
 8013652:	4688      	mov	r8, r1
 8013654:	9916      	ldr	r1, [sp, #88]	; 0x58
 8013656:	f8d3 c000 	ldr.w	ip, [r3]
 801365a:	680f      	ldr	r7, [r1, #0]
 801365c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8013660:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8013664:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8013668:	edd3 6a07 	vldr	s13, [r3, #28]
 801366c:	9918      	ldr	r1, [sp, #96]	; 0x60
 801366e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8013672:	f9b1 9000 	ldrsh.w	r9, [r1]
 8013676:	f9ba 1000 	ldrsh.w	r1, [sl]
 801367a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 801367e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8013682:	eba7 070c 	sub.w	r7, r7, ip
 8013686:	42bc      	cmp	r4, r7
 8013688:	bfa8      	it	ge
 801368a:	463c      	movge	r4, r7
 801368c:	ee07 4a90 	vmov	s15, r4
 8013690:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8013694:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8013698:	ee25 4a04 	vmul.f32	s8, s10, s8
 801369c:	ee65 4a24 	vmul.f32	s9, s10, s9
 80136a0:	ee25 5a27 	vmul.f32	s10, s10, s15
 80136a4:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80136a8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80136ac:	eb09 0e0c 	add.w	lr, r9, ip
 80136b0:	4571      	cmp	r1, lr
 80136b2:	ee71 0aa4 	vadd.f32	s1, s3, s9
 80136b6:	ee32 1a05 	vadd.f32	s2, s4, s10
 80136ba:	ee36 0a84 	vadd.f32	s0, s13, s8
 80136be:	ee61 1a87 	vmul.f32	s3, s3, s14
 80136c2:	ee22 2a07 	vmul.f32	s4, s4, s14
 80136c6:	f340 808d 	ble.w	80137e4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 80136ca:	eba1 060e 	sub.w	r6, r1, lr
 80136ce:	fb96 f5f4 	sdiv	r5, r6, r4
 80136d2:	ee07 5a10 	vmov	s14, r5
 80136d6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80136da:	2d00      	cmp	r5, #0
 80136dc:	fb04 6615 	mls	r6, r4, r5, r6
 80136e0:	eea7 0a04 	vfma.f32	s0, s14, s8
 80136e4:	eee7 0a24 	vfma.f32	s1, s14, s9
 80136e8:	eea7 1a05 	vfma.f32	s2, s14, s10
 80136ec:	dd13      	ble.n	8013716 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 80136ee:	ee70 6a44 	vsub.f32	s13, s0, s8
 80136f2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 80136f6:	eef5 6a40 	vcmp.f32	s13, #0.0
 80136fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80136fe:	bf18      	it	ne
 8013700:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8013704:	ee31 2a45 	vsub.f32	s4, s2, s10
 8013708:	bf08      	it	eq
 801370a:	eeb0 7a67 	vmoveq.f32	s14, s15
 801370e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013712:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013716:	fb05 f204 	mul.w	r2, r5, r4
 801371a:	1abf      	subs	r7, r7, r2
 801371c:	4494      	add	ip, r2
 801371e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8013722:	4411      	add	r1, r2
 8013724:	eb09 020c 	add.w	r2, r9, ip
 8013728:	443a      	add	r2, r7
 801372a:	b209      	sxth	r1, r1
 801372c:	428a      	cmp	r2, r1
 801372e:	bfc4      	itt	gt
 8013730:	eba1 0209 	subgt.w	r2, r1, r9
 8013734:	eba2 070c 	subgt.w	r7, r2, ip
 8013738:	2f00      	cmp	r7, #0
 801373a:	dd50      	ble.n	80137de <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 801373c:	fb97 f1f4 	sdiv	r1, r7, r4
 8013740:	fb04 7211 	mls	r2, r4, r1, r7
 8013744:	b90a      	cbnz	r2, 801374a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8013746:	3901      	subs	r1, #1
 8013748:	4622      	mov	r2, r4
 801374a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 801374e:	6840      	ldr	r0, [r0, #4]
 8013750:	900b      	str	r0, [sp, #44]	; 0x2c
 8013752:	f8d0 a000 	ldr.w	sl, [r0]
 8013756:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8013758:	9008      	str	r0, [sp, #32]
 801375a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 801375e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8013760:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8013764:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8013768:	695b      	ldr	r3, [r3, #20]
 801376a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801376c:	445b      	add	r3, fp
 801376e:	eef0 6a42 	vmov.f32	s13, s4
 8013772:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8013776:	ee21 3a23 	vmul.f32	s6, s2, s7
 801377a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 801377e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013782:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013786:	9307      	str	r3, [sp, #28]
 8013788:	ee17 7a90 	vmov	r7, s15
 801378c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8013790:	eeb0 7a61 	vmov.f32	s14, s3
 8013794:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013798:	ee16 3a90 	vmov	r3, s13
 801379c:	fb97 f7f4 	sdiv	r7, r7, r4
 80137a0:	ee17 ca90 	vmov	ip, s15
 80137a4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80137a8:	fb9c fcf4 	sdiv	ip, ip, r4
 80137ac:	fb0c 3306 	mla	r3, ip, r6, r3
 80137b0:	9302      	str	r3, [sp, #8]
 80137b2:	ee17 3a10 	vmov	r3, s14
 80137b6:	44b6      	add	lr, r6
 80137b8:	fb04 e505 	mla	r5, r4, r5, lr
 80137bc:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 80137c0:	fb07 3706 	mla	r7, r7, r6, r3
 80137c4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 80137c8:	e9cd 4700 	strd	r4, r7, [sp]
 80137cc:	2900      	cmp	r1, #0
 80137ce:	bfcc      	ite	gt
 80137d0:	46a1      	movgt	r9, r4
 80137d2:	4691      	movle	r9, r2
 80137d4:	eba9 0306 	sub.w	r3, r9, r6
 80137d8:	f8da 4008 	ldr.w	r4, [sl, #8]
 80137dc:	47a0      	blx	r4
 80137de:	b00d      	add	sp, #52	; 0x34
 80137e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80137e4:	2500      	movs	r5, #0
 80137e6:	462e      	mov	r6, r5
 80137e8:	e799      	b.n	801371e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

080137ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80137ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80137f0:	b0db      	sub	sp, #364	; 0x16c
 80137f2:	461d      	mov	r5, r3
 80137f4:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 80137f8:	930a      	str	r3, [sp, #40]	; 0x28
 80137fa:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 80137fe:	930b      	str	r3, [sp, #44]	; 0x2c
 8013800:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8013804:	9310      	str	r3, [sp, #64]	; 0x40
 8013806:	6803      	ldr	r3, [r0, #0]
 8013808:	910f      	str	r1, [sp, #60]	; 0x3c
 801380a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801380c:	9009      	str	r0, [sp, #36]	; 0x24
 801380e:	4614      	mov	r4, r2
 8013810:	4629      	mov	r1, r5
 8013812:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8013816:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 801381a:	47b8      	blx	r7
 801381c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801381e:	6058      	str	r0, [r3, #4]
 8013820:	2800      	cmp	r0, #0
 8013822:	f000 83a1 	beq.w	8013f68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013826:	682b      	ldr	r3, [r5, #0]
 8013828:	9314      	str	r3, [sp, #80]	; 0x50
 801382a:	686b      	ldr	r3, [r5, #4]
 801382c:	9315      	str	r3, [sp, #84]	; 0x54
 801382e:	4bc4      	ldr	r3, [pc, #784]	; (8013b40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8013830:	ed94 7a02 	vldr	s14, [r4, #8]
 8013834:	7819      	ldrb	r1, [r3, #0]
 8013836:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 801383a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 801383e:	2900      	cmp	r1, #0
 8013840:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013844:	bf16      	itet	ne
 8013846:	4619      	movne	r1, r3
 8013848:	4611      	moveq	r1, r2
 801384a:	4613      	movne	r3, r2
 801384c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013850:	9116      	str	r1, [sp, #88]	; 0x58
 8013852:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8013856:	f240 8387 	bls.w	8013f68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801385a:	ed94 7a07 	vldr	s14, [r4, #28]
 801385e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013862:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013866:	f240 837f 	bls.w	8013f68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801386a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 801386e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013872:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013876:	f240 8377 	bls.w	8013f68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801387a:	6822      	ldr	r2, [r4, #0]
 801387c:	4bb1      	ldr	r3, [pc, #708]	; (8013b44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 801387e:	429a      	cmp	r2, r3
 8013880:	f2c0 8372 	blt.w	8013f68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013884:	49b0      	ldr	r1, [pc, #704]	; (8013b48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8013886:	6963      	ldr	r3, [r4, #20]
 8013888:	428a      	cmp	r2, r1
 801388a:	f300 836d 	bgt.w	8013f68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801388e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8013892:	48ae      	ldr	r0, [pc, #696]	; (8013b4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8013894:	33ff      	adds	r3, #255	; 0xff
 8013896:	4283      	cmp	r3, r0
 8013898:	f200 8366 	bhi.w	8013f68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801389c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801389e:	4dac      	ldr	r5, [pc, #688]	; (8013b50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 80138a0:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80138a4:	33ff      	adds	r3, #255	; 0xff
 80138a6:	42ab      	cmp	r3, r5
 80138a8:	f200 835e 	bhi.w	8013f68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80138ac:	6862      	ldr	r2, [r4, #4]
 80138ae:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 80138b2:	33ff      	adds	r3, #255	; 0xff
 80138b4:	4283      	cmp	r3, r0
 80138b6:	f200 8357 	bhi.w	8013f68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80138ba:	69a1      	ldr	r1, [r4, #24]
 80138bc:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 80138c0:	33ff      	adds	r3, #255	; 0xff
 80138c2:	4283      	cmp	r3, r0
 80138c4:	f200 8350 	bhi.w	8013f68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80138c8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80138ca:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 80138ce:	30ff      	adds	r0, #255	; 0xff
 80138d0:	42a8      	cmp	r0, r5
 80138d2:	f200 8349 	bhi.w	8013f68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80138d6:	428a      	cmp	r2, r1
 80138d8:	f280 8110 	bge.w	8013afc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 80138dc:	429a      	cmp	r2, r3
 80138de:	f300 8119 	bgt.w	8013b14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 80138e2:	4299      	cmp	r1, r3
 80138e4:	f280 811d 	bge.w	8013b22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 80138e8:	2502      	movs	r5, #2
 80138ea:	2701      	movs	r7, #1
 80138ec:	46a9      	mov	r9, r5
 80138ee:	46b8      	mov	r8, r7
 80138f0:	f04f 0a00 	mov.w	sl, #0
 80138f4:	4621      	mov	r1, r4
 80138f6:	a849      	add	r0, sp, #292	; 0x124
 80138f8:	f003 feec 	bl	80176d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 80138fc:	4622      	mov	r2, r4
 80138fe:	4653      	mov	r3, sl
 8013900:	a949      	add	r1, sp, #292	; 0x124
 8013902:	f8cd 9000 	str.w	r9, [sp]
 8013906:	a819      	add	r0, sp, #100	; 0x64
 8013908:	f004 f814 	bl	8017934 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801390c:	4622      	mov	r2, r4
 801390e:	4653      	mov	r3, sl
 8013910:	a949      	add	r1, sp, #292	; 0x124
 8013912:	f8cd 8000 	str.w	r8, [sp]
 8013916:	a829      	add	r0, sp, #164	; 0xa4
 8013918:	f004 f80c 	bl	8017934 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801391c:	4643      	mov	r3, r8
 801391e:	4622      	mov	r2, r4
 8013920:	a949      	add	r1, sp, #292	; 0x124
 8013922:	f8cd 9000 	str.w	r9, [sp]
 8013926:	a839      	add	r0, sp, #228	; 0xe4
 8013928:	f004 f804 	bl	8017934 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801392c:	42af      	cmp	r7, r5
 801392e:	bfb5      	itete	lt
 8013930:	2300      	movlt	r3, #0
 8013932:	2301      	movge	r3, #1
 8013934:	930e      	strlt	r3, [sp, #56]	; 0x38
 8013936:	930e      	strge	r3, [sp, #56]	; 0x38
 8013938:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801393a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801393e:	af12      	add	r7, sp, #72	; 0x48
 8013940:	bfb9      	ittee	lt
 8013942:	ad29      	addlt	r5, sp, #164	; 0xa4
 8013944:	ac19      	addlt	r4, sp, #100	; 0x64
 8013946:	ad19      	addge	r5, sp, #100	; 0x64
 8013948:	ac29      	addge	r4, sp, #164	; 0xa4
 801394a:	e887 0003 	stmia.w	r7, {r0, r1}
 801394e:	b928      	cbnz	r0, 801395c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8013950:	4b80      	ldr	r3, [pc, #512]	; (8013b54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8013952:	6818      	ldr	r0, [r3, #0]
 8013954:	6803      	ldr	r3, [r0, #0]
 8013956:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013958:	4798      	blx	r3
 801395a:	6038      	str	r0, [r7, #0]
 801395c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801395e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8013962:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013966:	930c      	str	r3, [sp, #48]	; 0x30
 8013968:	990c      	ldr	r1, [sp, #48]	; 0x30
 801396a:	6963      	ldr	r3, [r4, #20]
 801396c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801396e:	440b      	add	r3, r1
 8013970:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8013974:	4408      	add	r0, r1
 8013976:	b200      	sxth	r0, r0
 8013978:	4283      	cmp	r3, r0
 801397a:	900d      	str	r0, [sp, #52]	; 0x34
 801397c:	f280 80dd 	bge.w	8013b3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8013980:	428b      	cmp	r3, r1
 8013982:	da08      	bge.n	8013996 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013984:	2a00      	cmp	r2, #0
 8013986:	dd06      	ble.n	8013996 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013988:	1acb      	subs	r3, r1, r3
 801398a:	429a      	cmp	r2, r3
 801398c:	f2c0 80e4 	blt.w	8013b58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8013990:	2b00      	cmp	r3, #0
 8013992:	f300 80e2 	bgt.w	8013b5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8013996:	6967      	ldr	r7, [r4, #20]
 8013998:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801399a:	443b      	add	r3, r7
 801399c:	461f      	mov	r7, r3
 801399e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80139a0:	1bdf      	subs	r7, r3, r7
 80139a2:	4297      	cmp	r7, r2
 80139a4:	bfa8      	it	ge
 80139a6:	4617      	movge	r7, r2
 80139a8:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80139ac:	2f00      	cmp	r7, #0
 80139ae:	f340 8166 	ble.w	8013c7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 80139b2:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80139b4:	6829      	ldr	r1, [r5, #0]
 80139b6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80139ba:	f9bb 3000 	ldrsh.w	r3, [fp]
 80139be:	6820      	ldr	r0, [r4, #0]
 80139c0:	4411      	add	r1, r2
 80139c2:	4299      	cmp	r1, r3
 80139c4:	dd1a      	ble.n	80139fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80139c6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80139ca:	440b      	add	r3, r1
 80139cc:	4402      	add	r2, r0
 80139ce:	b21b      	sxth	r3, r3
 80139d0:	429a      	cmp	r2, r3
 80139d2:	dc13      	bgt.n	80139fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80139d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80139d6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80139d8:	681b      	ldr	r3, [r3, #0]
 80139da:	9206      	str	r2, [sp, #24]
 80139dc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80139de:	9205      	str	r2, [sp, #20]
 80139e0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80139e2:	9500      	str	r5, [sp, #0]
 80139e4:	e9cd b203 	strd	fp, r2, [sp, #12]
 80139e8:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80139ea:	9809      	ldr	r0, [sp, #36]	; 0x24
 80139ec:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80139f0:	a912      	add	r1, sp, #72	; 0x48
 80139f2:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80139f6:	aa49      	add	r2, sp, #292	; 0x124
 80139f8:	4623      	mov	r3, r4
 80139fa:	47c8      	blx	r9
 80139fc:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013a00:	441a      	add	r2, r3
 8013a02:	6963      	ldr	r3, [r4, #20]
 8013a04:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013a08:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8013a0c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013a10:	68a1      	ldr	r1, [r4, #8]
 8013a12:	ed94 6a08 	vldr	s12, [r4, #32]
 8013a16:	6022      	str	r2, [r4, #0]
 8013a18:	3301      	adds	r3, #1
 8013a1a:	6163      	str	r3, [r4, #20]
 8013a1c:	69a3      	ldr	r3, [r4, #24]
 8013a1e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013a22:	3b01      	subs	r3, #1
 8013a24:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8013a28:	61a3      	str	r3, [r4, #24]
 8013a2a:	6923      	ldr	r3, [r4, #16]
 8013a2c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013a30:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013a34:	edd4 6a07 	vldr	s13, [r4, #28]
 8013a38:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013a3c:	440b      	add	r3, r1
 8013a3e:	68e1      	ldr	r1, [r4, #12]
 8013a40:	6123      	str	r3, [r4, #16]
 8013a42:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013a46:	428b      	cmp	r3, r1
 8013a48:	edc4 6a07 	vstr	s13, [r4, #28]
 8013a4c:	db15      	blt.n	8013a7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8013a4e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8013a52:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013a56:	3201      	adds	r2, #1
 8013a58:	edc4 6a07 	vstr	s13, [r4, #28]
 8013a5c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8013a60:	6022      	str	r2, [r4, #0]
 8013a62:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013a66:	1a5b      	subs	r3, r3, r1
 8013a68:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013a6c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8013a70:	6123      	str	r3, [r4, #16]
 8013a72:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013a76:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013a7a:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013a7e:	441a      	add	r2, r3
 8013a80:	696b      	ldr	r3, [r5, #20]
 8013a82:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8013a86:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8013a8a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8013a8e:	68a9      	ldr	r1, [r5, #8]
 8013a90:	ed95 6a08 	vldr	s12, [r5, #32]
 8013a94:	602a      	str	r2, [r5, #0]
 8013a96:	3301      	adds	r3, #1
 8013a98:	616b      	str	r3, [r5, #20]
 8013a9a:	69ab      	ldr	r3, [r5, #24]
 8013a9c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013aa0:	3b01      	subs	r3, #1
 8013aa2:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8013aa6:	61ab      	str	r3, [r5, #24]
 8013aa8:	692b      	ldr	r3, [r5, #16]
 8013aaa:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013aae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013ab2:	edd5 6a07 	vldr	s13, [r5, #28]
 8013ab6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013aba:	440b      	add	r3, r1
 8013abc:	68e9      	ldr	r1, [r5, #12]
 8013abe:	612b      	str	r3, [r5, #16]
 8013ac0:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013ac4:	428b      	cmp	r3, r1
 8013ac6:	edc5 6a07 	vstr	s13, [r5, #28]
 8013aca:	db15      	blt.n	8013af8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8013acc:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8013ad0:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013ad4:	3201      	adds	r2, #1
 8013ad6:	edc5 6a07 	vstr	s13, [r5, #28]
 8013ada:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8013ade:	602a      	str	r2, [r5, #0]
 8013ae0:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013ae4:	1a5b      	subs	r3, r3, r1
 8013ae6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013aea:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8013aee:	612b      	str	r3, [r5, #16]
 8013af0:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013af4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013af8:	3f01      	subs	r7, #1
 8013afa:	e757      	b.n	80139ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8013afc:	4299      	cmp	r1, r3
 8013afe:	dc13      	bgt.n	8013b28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8013b00:	429a      	cmp	r2, r3
 8013b02:	da14      	bge.n	8013b2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8013b04:	2502      	movs	r5, #2
 8013b06:	2703      	movs	r7, #3
 8013b08:	46a9      	mov	r9, r5
 8013b0a:	f04f 0800 	mov.w	r8, #0
 8013b0e:	f04f 0a01 	mov.w	sl, #1
 8013b12:	e6ef      	b.n	80138f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013b14:	2501      	movs	r5, #1
 8013b16:	2700      	movs	r7, #0
 8013b18:	46a9      	mov	r9, r5
 8013b1a:	46b8      	mov	r8, r7
 8013b1c:	f04f 0a02 	mov.w	sl, #2
 8013b20:	e6e8      	b.n	80138f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013b22:	2501      	movs	r5, #1
 8013b24:	2702      	movs	r7, #2
 8013b26:	e6e1      	b.n	80138ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8013b28:	2500      	movs	r5, #0
 8013b2a:	2701      	movs	r7, #1
 8013b2c:	e7f4      	b.n	8013b18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8013b2e:	2702      	movs	r7, #2
 8013b30:	2503      	movs	r5, #3
 8013b32:	f04f 0900 	mov.w	r9, #0
 8013b36:	46b8      	mov	r8, r7
 8013b38:	e7e9      	b.n	8013b0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8013b3a:	4613      	mov	r3, r2
 8013b3c:	e728      	b.n	8013990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8013b3e:	bf00      	nop
 8013b40:	200137cc 	.word	0x200137cc
 8013b44:	fffd8f01 	.word	0xfffd8f01
 8013b48:	00027100 	.word	0x00027100
 8013b4c:	0004e1ff 	.word	0x0004e1ff
 8013b50:	0004e1fe 	.word	0x0004e1fe
 8013b54:	200137d4 	.word	0x200137d4
 8013b58:	4613      	mov	r3, r2
 8013b5a:	992b      	ldr	r1, [sp, #172]	; 0xac
 8013b5c:	9111      	str	r1, [sp, #68]	; 0x44
 8013b5e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8013b62:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8013b66:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8013b68:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8013b6c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8013b70:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8013b74:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8013b78:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8013b7c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8013b80:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8013b84:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8013b88:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8013b8c:	469e      	mov	lr, r3
 8013b8e:	469c      	mov	ip, r3
 8013b90:	f04f 0900 	mov.w	r9, #0
 8013b94:	f1bc 0f00 	cmp.w	ip, #0
 8013b98:	d147      	bne.n	8013c2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8013b9a:	eb03 0c07 	add.w	ip, r3, r7
 8013b9e:	1ad7      	subs	r7, r2, r3
 8013ba0:	f1b9 0f00 	cmp.w	r9, #0
 8013ba4:	d009      	beq.n	8013bba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8013ba6:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8013baa:	9029      	str	r0, [sp, #164]	; 0xa4
 8013bac:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8013bb0:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8013bb4:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8013bb8:	912d      	str	r1, [sp, #180]	; 0xb4
 8013bba:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8013bbc:	9111      	str	r1, [sp, #68]	; 0x44
 8013bbe:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8013bc2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8013bc6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8013bca:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8013bce:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8013bd2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8013bd6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8013bda:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8013bde:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8013be2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8013be6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8013bea:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8013bee:	f04f 0800 	mov.w	r8, #0
 8013bf2:	f1be 0f00 	cmp.w	lr, #0
 8013bf6:	d031      	beq.n	8013c5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8013bf8:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8013bfa:	4431      	add	r1, r6
 8013bfc:	4549      	cmp	r1, r9
 8013bfe:	4450      	add	r0, sl
 8013c00:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013c04:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013c08:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8013c0c:	db08      	blt.n	8013c20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8013c0e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013c12:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013c16:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013c1a:	3001      	adds	r0, #1
 8013c1c:	eba1 0109 	sub.w	r1, r1, r9
 8013c20:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013c24:	f04f 0801 	mov.w	r8, #1
 8013c28:	e7e3      	b.n	8013bf2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8013c2a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8013c2c:	4431      	add	r1, r6
 8013c2e:	4541      	cmp	r1, r8
 8013c30:	4450      	add	r0, sl
 8013c32:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013c36:	ee77 7a84 	vadd.f32	s15, s15, s8
 8013c3a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8013c3e:	db08      	blt.n	8013c52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8013c40:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013c44:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013c48:	ee77 7a86 	vadd.f32	s15, s15, s12
 8013c4c:	3001      	adds	r0, #1
 8013c4e:	eba1 0108 	sub.w	r1, r1, r8
 8013c52:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013c56:	f04f 0901 	mov.w	r9, #1
 8013c5a:	e79b      	b.n	8013b94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8013c5c:	449c      	add	ip, r3
 8013c5e:	1aff      	subs	r7, r7, r3
 8013c60:	f1b8 0f00 	cmp.w	r8, #0
 8013c64:	d009      	beq.n	8013c7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8013c66:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8013c6a:	9019      	str	r0, [sp, #100]	; 0x64
 8013c6c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8013c70:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8013c74:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8013c78:	911d      	str	r1, [sp, #116]	; 0x74
 8013c7a:	1ad2      	subs	r2, r2, r3
 8013c7c:	e68b      	b.n	8013996 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013c7e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013c80:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8013c82:	2b00      	cmp	r3, #0
 8013c84:	f000 80d1 	beq.w	8013e2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8013c88:	ad19      	add	r5, sp, #100	; 0x64
 8013c8a:	ac39      	add	r4, sp, #228	; 0xe4
 8013c8c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013c8e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8013c92:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013c96:	930c      	str	r3, [sp, #48]	; 0x30
 8013c98:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013c9a:	6963      	ldr	r3, [r4, #20]
 8013c9c:	440b      	add	r3, r1
 8013c9e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8013ca2:	4408      	add	r0, r1
 8013ca4:	b200      	sxth	r0, r0
 8013ca6:	4283      	cmp	r3, r0
 8013ca8:	900d      	str	r0, [sp, #52]	; 0x34
 8013caa:	f280 80c1 	bge.w	8013e30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8013cae:	428b      	cmp	r3, r1
 8013cb0:	da08      	bge.n	8013cc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013cb2:	2a00      	cmp	r2, #0
 8013cb4:	dd06      	ble.n	8013cc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013cb6:	1acb      	subs	r3, r1, r3
 8013cb8:	429a      	cmp	r2, r3
 8013cba:	f2c0 80bb 	blt.w	8013e34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8013cbe:	2b00      	cmp	r3, #0
 8013cc0:	f300 80b9 	bgt.w	8013e36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8013cc4:	6967      	ldr	r7, [r4, #20]
 8013cc6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013cc8:	443b      	add	r3, r7
 8013cca:	461f      	mov	r7, r3
 8013ccc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013cce:	1bdf      	subs	r7, r3, r7
 8013cd0:	4297      	cmp	r7, r2
 8013cd2:	bfa8      	it	ge
 8013cd4:	4617      	movge	r7, r2
 8013cd6:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8013cda:	2f00      	cmp	r7, #0
 8013cdc:	f340 813c 	ble.w	8013f58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8013ce0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013ce2:	6829      	ldr	r1, [r5, #0]
 8013ce4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013ce8:	f9bb 3000 	ldrsh.w	r3, [fp]
 8013cec:	6820      	ldr	r0, [r4, #0]
 8013cee:	4411      	add	r1, r2
 8013cf0:	4299      	cmp	r1, r3
 8013cf2:	dd1a      	ble.n	8013d2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013cf4:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8013cf8:	440b      	add	r3, r1
 8013cfa:	4402      	add	r2, r0
 8013cfc:	b21b      	sxth	r3, r3
 8013cfe:	429a      	cmp	r2, r3
 8013d00:	dc13      	bgt.n	8013d2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013d02:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013d04:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013d06:	681b      	ldr	r3, [r3, #0]
 8013d08:	9206      	str	r2, [sp, #24]
 8013d0a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013d0c:	9205      	str	r2, [sp, #20]
 8013d0e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013d10:	9500      	str	r5, [sp, #0]
 8013d12:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013d16:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8013d18:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013d1a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013d1e:	a912      	add	r1, sp, #72	; 0x48
 8013d20:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8013d24:	aa49      	add	r2, sp, #292	; 0x124
 8013d26:	4623      	mov	r3, r4
 8013d28:	47c8      	blx	r9
 8013d2a:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013d2e:	441a      	add	r2, r3
 8013d30:	6963      	ldr	r3, [r4, #20]
 8013d32:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013d36:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8013d3a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013d3e:	68a1      	ldr	r1, [r4, #8]
 8013d40:	ed94 6a08 	vldr	s12, [r4, #32]
 8013d44:	6022      	str	r2, [r4, #0]
 8013d46:	3301      	adds	r3, #1
 8013d48:	6163      	str	r3, [r4, #20]
 8013d4a:	69a3      	ldr	r3, [r4, #24]
 8013d4c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013d50:	3b01      	subs	r3, #1
 8013d52:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8013d56:	61a3      	str	r3, [r4, #24]
 8013d58:	6923      	ldr	r3, [r4, #16]
 8013d5a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013d5e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013d62:	edd4 6a07 	vldr	s13, [r4, #28]
 8013d66:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013d6a:	440b      	add	r3, r1
 8013d6c:	68e1      	ldr	r1, [r4, #12]
 8013d6e:	6123      	str	r3, [r4, #16]
 8013d70:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013d74:	428b      	cmp	r3, r1
 8013d76:	edc4 6a07 	vstr	s13, [r4, #28]
 8013d7a:	db15      	blt.n	8013da8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8013d7c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8013d80:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013d84:	3201      	adds	r2, #1
 8013d86:	edc4 6a07 	vstr	s13, [r4, #28]
 8013d8a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8013d8e:	6022      	str	r2, [r4, #0]
 8013d90:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013d94:	1a5b      	subs	r3, r3, r1
 8013d96:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013d9a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8013d9e:	6123      	str	r3, [r4, #16]
 8013da0:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013da4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013da8:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013dac:	441a      	add	r2, r3
 8013dae:	696b      	ldr	r3, [r5, #20]
 8013db0:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8013db4:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8013db8:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8013dbc:	68a9      	ldr	r1, [r5, #8]
 8013dbe:	ed95 6a08 	vldr	s12, [r5, #32]
 8013dc2:	602a      	str	r2, [r5, #0]
 8013dc4:	3301      	adds	r3, #1
 8013dc6:	616b      	str	r3, [r5, #20]
 8013dc8:	69ab      	ldr	r3, [r5, #24]
 8013dca:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013dce:	3b01      	subs	r3, #1
 8013dd0:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8013dd4:	61ab      	str	r3, [r5, #24]
 8013dd6:	692b      	ldr	r3, [r5, #16]
 8013dd8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013ddc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013de0:	edd5 6a07 	vldr	s13, [r5, #28]
 8013de4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013de8:	440b      	add	r3, r1
 8013dea:	68e9      	ldr	r1, [r5, #12]
 8013dec:	612b      	str	r3, [r5, #16]
 8013dee:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013df2:	428b      	cmp	r3, r1
 8013df4:	edc5 6a07 	vstr	s13, [r5, #28]
 8013df8:	db15      	blt.n	8013e26 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8013dfa:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8013dfe:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013e02:	3201      	adds	r2, #1
 8013e04:	edc5 6a07 	vstr	s13, [r5, #28]
 8013e08:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8013e0c:	602a      	str	r2, [r5, #0]
 8013e0e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013e12:	1a5b      	subs	r3, r3, r1
 8013e14:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013e18:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8013e1c:	612b      	str	r3, [r5, #16]
 8013e1e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013e22:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013e26:	3f01      	subs	r7, #1
 8013e28:	e757      	b.n	8013cda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8013e2a:	ad39      	add	r5, sp, #228	; 0xe4
 8013e2c:	ac19      	add	r4, sp, #100	; 0x64
 8013e2e:	e72d      	b.n	8013c8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8013e30:	4613      	mov	r3, r2
 8013e32:	e744      	b.n	8013cbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8013e34:	4613      	mov	r3, r2
 8013e36:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8013e3a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8013e3c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8013e40:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8013e44:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8013e48:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8013e4c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8013e50:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8013e54:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8013e58:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8013e5a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8013e5e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8013e62:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8013e66:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8013e6a:	960e      	str	r6, [sp, #56]	; 0x38
 8013e6c:	469e      	mov	lr, r3
 8013e6e:	461f      	mov	r7, r3
 8013e70:	f04f 0900 	mov.w	r9, #0
 8013e74:	2f00      	cmp	r7, #0
 8013e76:	d146      	bne.n	8013f06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8013e78:	449c      	add	ip, r3
 8013e7a:	1ad7      	subs	r7, r2, r3
 8013e7c:	f1b9 0f00 	cmp.w	r9, #0
 8013e80:	d009      	beq.n	8013e96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8013e82:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8013e86:	9039      	str	r0, [sp, #228]	; 0xe4
 8013e88:	913d      	str	r1, [sp, #244]	; 0xf4
 8013e8a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8013e8e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8013e92:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8013e96:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8013e98:	910e      	str	r1, [sp, #56]	; 0x38
 8013e9a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8013e9e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8013ea2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8013ea6:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8013eaa:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8013eae:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8013eb2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8013eb6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8013eba:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8013ebe:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8013ec2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8013ec6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8013eca:	f04f 0800 	mov.w	r8, #0
 8013ece:	f1be 0f00 	cmp.w	lr, #0
 8013ed2:	d030      	beq.n	8013f36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8013ed4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013ed6:	4431      	add	r1, r6
 8013ed8:	4549      	cmp	r1, r9
 8013eda:	4450      	add	r0, sl
 8013edc:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013ee0:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013ee4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8013ee8:	db08      	blt.n	8013efc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8013eea:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013eee:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013ef2:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013ef6:	3001      	adds	r0, #1
 8013ef8:	eba1 0109 	sub.w	r1, r1, r9
 8013efc:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013f00:	f04f 0801 	mov.w	r8, #1
 8013f04:	e7e3      	b.n	8013ece <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8013f06:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013f08:	4431      	add	r1, r6
 8013f0a:	4541      	cmp	r1, r8
 8013f0c:	4450      	add	r0, sl
 8013f0e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013f12:	ee77 7a84 	vadd.f32	s15, s15, s8
 8013f16:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8013f1a:	db08      	blt.n	8013f2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8013f1c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013f20:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013f24:	ee77 7a86 	vadd.f32	s15, s15, s12
 8013f28:	3001      	adds	r0, #1
 8013f2a:	eba1 0108 	sub.w	r1, r1, r8
 8013f2e:	3f01      	subs	r7, #1
 8013f30:	f04f 0901 	mov.w	r9, #1
 8013f34:	e79e      	b.n	8013e74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8013f36:	449c      	add	ip, r3
 8013f38:	1aff      	subs	r7, r7, r3
 8013f3a:	f1b8 0f00 	cmp.w	r8, #0
 8013f3e:	d009      	beq.n	8013f54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8013f40:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8013f44:	9019      	str	r0, [sp, #100]	; 0x64
 8013f46:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8013f4a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8013f4e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8013f52:	911d      	str	r1, [sp, #116]	; 0x74
 8013f54:	1ad2      	subs	r2, r2, r3
 8013f56:	e6b5      	b.n	8013cc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013f58:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013f5a:	681b      	ldr	r3, [r3, #0]
 8013f5c:	b923      	cbnz	r3, 8013f68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013f5e:	4b04      	ldr	r3, [pc, #16]	; (8013f70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8013f60:	6818      	ldr	r0, [r3, #0]
 8013f62:	6803      	ldr	r3, [r0, #0]
 8013f64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013f66:	4798      	blx	r3
 8013f68:	b05b      	add	sp, #364	; 0x16c
 8013f6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013f6e:	bf00      	nop
 8013f70:	200137d4 	.word	0x200137d4

08013f74 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8013f74:	b570      	push	{r4, r5, r6, lr}
 8013f76:	4604      	mov	r4, r0
 8013f78:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8013f7c:	9805      	ldr	r0, [sp, #20]
 8013f7e:	6061      	str	r1, [r4, #4]
 8013f80:	2500      	movs	r5, #0
 8013f82:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8013f86:	8263      	strh	r3, [r4, #18]
 8013f88:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013f8c:	8025      	strh	r5, [r4, #0]
 8013f8e:	7221      	strb	r1, [r4, #8]
 8013f90:	7266      	strb	r6, [r4, #9]
 8013f92:	60e0      	str	r0, [r4, #12]
 8013f94:	8222      	strh	r2, [r4, #16]
 8013f96:	82a3      	strh	r3, [r4, #20]
 8013f98:	82e5      	strh	r5, [r4, #22]
 8013f9a:	8325      	strh	r5, [r4, #24]
 8013f9c:	8365      	strh	r5, [r4, #26]
 8013f9e:	83a5      	strh	r5, [r4, #28]
 8013fa0:	83e5      	strh	r5, [r4, #30]
 8013fa2:	8425      	strh	r5, [r4, #32]
 8013fa4:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8013fa8:	b32e      	cbz	r6, 8013ff6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013faa:	6803      	ldr	r3, [r0, #0]
 8013fac:	695b      	ldr	r3, [r3, #20]
 8013fae:	4798      	blx	r3
 8013fb0:	4606      	mov	r6, r0
 8013fb2:	b300      	cbz	r0, 8013ff6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013fb4:	68e0      	ldr	r0, [r4, #12]
 8013fb6:	6803      	ldr	r3, [r0, #0]
 8013fb8:	4631      	mov	r1, r6
 8013fba:	68db      	ldr	r3, [r3, #12]
 8013fbc:	4798      	blx	r3
 8013fbe:	4605      	mov	r5, r0
 8013fc0:	b1c8      	cbz	r0, 8013ff6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013fc2:	7b43      	ldrb	r3, [r0, #13]
 8013fc4:	7a82      	ldrb	r2, [r0, #10]
 8013fc6:	005b      	lsls	r3, r3, #1
 8013fc8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013fcc:	4313      	orrs	r3, r2
 8013fce:	8423      	strh	r3, [r4, #32]
 8013fd0:	7a63      	ldrb	r3, [r4, #9]
 8013fd2:	2b06      	cmp	r3, #6
 8013fd4:	d10f      	bne.n	8013ff6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013fd6:	68e0      	ldr	r0, [r4, #12]
 8013fd8:	6803      	ldr	r3, [r0, #0]
 8013fda:	462a      	mov	r2, r5
 8013fdc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013fde:	4631      	mov	r1, r6
 8013fe0:	4798      	blx	r3
 8013fe2:	7b6b      	ldrb	r3, [r5, #13]
 8013fe4:	005b      	lsls	r3, r3, #1
 8013fe6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013fea:	7aab      	ldrb	r3, [r5, #10]
 8013fec:	4313      	orrs	r3, r2
 8013fee:	4418      	add	r0, r3
 8013ff0:	8c23      	ldrh	r3, [r4, #32]
 8013ff2:	4418      	add	r0, r3
 8013ff4:	8420      	strh	r0, [r4, #32]
 8013ff6:	4620      	mov	r0, r4
 8013ff8:	bd70      	pop	{r4, r5, r6, pc}

08013ffa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8013ffa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ffe:	2400      	movs	r4, #0
 8014000:	b085      	sub	sp, #20
 8014002:	4681      	mov	r9, r0
 8014004:	4688      	mov	r8, r1
 8014006:	4692      	mov	sl, r2
 8014008:	469b      	mov	fp, r3
 801400a:	4627      	mov	r7, r4
 801400c:	4625      	mov	r5, r4
 801400e:	4626      	mov	r6, r4
 8014010:	4554      	cmp	r4, sl
 8014012:	da2a      	bge.n	801406a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014014:	2300      	movs	r3, #0
 8014016:	9303      	str	r3, [sp, #12]
 8014018:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801401c:	429d      	cmp	r5, r3
 801401e:	d004      	beq.n	801402a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8014020:	f242 030b 	movw	r3, #8203	; 0x200b
 8014024:	429d      	cmp	r5, r3
 8014026:	bf18      	it	ne
 8014028:	462f      	movne	r7, r5
 801402a:	ab03      	add	r3, sp, #12
 801402c:	4642      	mov	r2, r8
 801402e:	4659      	mov	r1, fp
 8014030:	4648      	mov	r0, r9
 8014032:	f003 f965 	bl	8017300 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014036:	4605      	mov	r5, r0
 8014038:	b1b8      	cbz	r0, 801406a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801403a:	280a      	cmp	r0, #10
 801403c:	d015      	beq.n	801406a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801403e:	9a03      	ldr	r2, [sp, #12]
 8014040:	b18a      	cbz	r2, 8014066 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8014042:	7b50      	ldrb	r0, [r2, #13]
 8014044:	7a93      	ldrb	r3, [r2, #10]
 8014046:	8895      	ldrh	r5, [r2, #4]
 8014048:	0040      	lsls	r0, r0, #1
 801404a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801404e:	4303      	orrs	r3, r0
 8014050:	9301      	str	r3, [sp, #4]
 8014052:	f8d8 3000 	ldr.w	r3, [r8]
 8014056:	4639      	mov	r1, r7
 8014058:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801405a:	4640      	mov	r0, r8
 801405c:	4798      	blx	r3
 801405e:	9b01      	ldr	r3, [sp, #4]
 8014060:	4418      	add	r0, r3
 8014062:	4406      	add	r6, r0
 8014064:	b2b6      	uxth	r6, r6
 8014066:	3401      	adds	r4, #1
 8014068:	e7d2      	b.n	8014010 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 801406a:	4630      	mov	r0, r6
 801406c:	b005      	add	sp, #20
 801406e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014072 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8014072:	2a02      	cmp	r2, #2
 8014074:	b530      	push	{r4, r5, lr}
 8014076:	d011      	beq.n	801409c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8014078:	2a03      	cmp	r2, #3
 801407a:	d01c      	beq.n	80140b6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 801407c:	2a01      	cmp	r2, #1
 801407e:	d10c      	bne.n	801409a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014080:	888b      	ldrh	r3, [r1, #4]
 8014082:	8801      	ldrh	r1, [r0, #0]
 8014084:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8014088:	8844      	ldrh	r4, [r0, #2]
 801408a:	8004      	strh	r4, [r0, #0]
 801408c:	1a5b      	subs	r3, r3, r1
 801408e:	1a9b      	subs	r3, r3, r2
 8014090:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014094:	8043      	strh	r3, [r0, #2]
 8014096:	8081      	strh	r1, [r0, #4]
 8014098:	80c2      	strh	r2, [r0, #6]
 801409a:	bd30      	pop	{r4, r5, pc}
 801409c:	88cb      	ldrh	r3, [r1, #6]
 801409e:	8842      	ldrh	r2, [r0, #2]
 80140a0:	1a9b      	subs	r3, r3, r2
 80140a2:	88c2      	ldrh	r2, [r0, #6]
 80140a4:	1a9b      	subs	r3, r3, r2
 80140a6:	888a      	ldrh	r2, [r1, #4]
 80140a8:	8801      	ldrh	r1, [r0, #0]
 80140aa:	8043      	strh	r3, [r0, #2]
 80140ac:	1a52      	subs	r2, r2, r1
 80140ae:	8881      	ldrh	r1, [r0, #4]
 80140b0:	1a52      	subs	r2, r2, r1
 80140b2:	8002      	strh	r2, [r0, #0]
 80140b4:	e7f1      	b.n	801409a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80140b6:	88cb      	ldrh	r3, [r1, #6]
 80140b8:	8841      	ldrh	r1, [r0, #2]
 80140ba:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80140be:	f9b0 5000 	ldrsh.w	r5, [r0]
 80140c2:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80140c6:	8045      	strh	r5, [r0, #2]
 80140c8:	1a5b      	subs	r3, r3, r1
 80140ca:	1a9b      	subs	r3, r3, r2
 80140cc:	8003      	strh	r3, [r0, #0]
 80140ce:	8082      	strh	r2, [r0, #4]
 80140d0:	80c4      	strh	r4, [r0, #6]
 80140d2:	e7e2      	b.n	801409a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

080140d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 80140d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80140d8:	b09f      	sub	sp, #124	; 0x7c
 80140da:	9116      	str	r1, [sp, #88]	; 0x58
 80140dc:	9317      	str	r3, [sp, #92]	; 0x5c
 80140de:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80140e0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80140e2:	8809      	ldrh	r1, [r1, #0]
 80140e4:	889b      	ldrh	r3, [r3, #4]
 80140e6:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 80140ea:	9212      	str	r2, [sp, #72]	; 0x48
 80140ec:	440b      	add	r3, r1
 80140ee:	b21b      	sxth	r3, r3
 80140f0:	9310      	str	r3, [sp, #64]	; 0x40
 80140f2:	f8d8 3000 	ldr.w	r3, [r8]
 80140f6:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 80140fa:	7b19      	ldrb	r1, [r3, #12]
 80140fc:	7adb      	ldrb	r3, [r3, #11]
 80140fe:	9011      	str	r0, [sp, #68]	; 0x44
 8014100:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8014104:	9114      	str	r1, [sp, #80]	; 0x50
 8014106:	9315      	str	r3, [sp, #84]	; 0x54
 8014108:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 801410c:	2a00      	cmp	r2, #0
 801410e:	d06a      	beq.n	80141e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8014110:	f898 3010 	ldrb.w	r3, [r8, #16]
 8014114:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014116:	2b06      	cmp	r3, #6
 8014118:	bf14      	ite	ne
 801411a:	2301      	movne	r3, #1
 801411c:	2302      	moveq	r3, #2
 801411e:	4413      	add	r3, r2
 8014120:	f04f 0900 	mov.w	r9, #0
 8014124:	930f      	str	r3, [sp, #60]	; 0x3c
 8014126:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 801412a:	464c      	mov	r4, r9
 801412c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8014130:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8014134:	4293      	cmp	r3, r2
 8014136:	f280 808f 	bge.w	8014258 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801413a:	2300      	movs	r3, #0
 801413c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8014140:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8014144:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014148:	429c      	cmp	r4, r3
 801414a:	d006      	beq.n	801415a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 801414c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801414e:	f242 020b 	movw	r2, #8203	; 0x200b
 8014152:	4294      	cmp	r4, r2
 8014154:	bf18      	it	ne
 8014156:	4623      	movne	r3, r4
 8014158:	930d      	str	r3, [sp, #52]	; 0x34
 801415a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801415c:	992d      	ldr	r1, [sp, #180]	; 0xb4
 801415e:	f8d8 2000 	ldr.w	r2, [r8]
 8014162:	428b      	cmp	r3, r1
 8014164:	db41      	blt.n	80141ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8014166:	6813      	ldr	r3, [r2, #0]
 8014168:	4610      	mov	r0, r2
 801416a:	695b      	ldr	r3, [r3, #20]
 801416c:	4798      	blx	r3
 801416e:	4604      	mov	r4, r0
 8014170:	f8d8 0000 	ldr.w	r0, [r8]
 8014174:	6803      	ldr	r3, [r0, #0]
 8014176:	aa1d      	add	r2, sp, #116	; 0x74
 8014178:	689d      	ldr	r5, [r3, #8]
 801417a:	4621      	mov	r1, r4
 801417c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8014180:	47a8      	blx	r5
 8014182:	901c      	str	r0, [sp, #112]	; 0x70
 8014184:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014188:	429c      	cmp	r4, r3
 801418a:	f000 80eb 	beq.w	8014364 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801418e:	f242 030b 	movw	r3, #8203	; 0x200b
 8014192:	429c      	cmp	r4, r3
 8014194:	f000 80e6 	beq.w	8014364 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014198:	2c00      	cmp	r4, #0
 801419a:	f000 80f8 	beq.w	801438e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 801419e:	2c0a      	cmp	r4, #10
 80141a0:	d060      	beq.n	8014264 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80141a2:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80141a4:	b36a      	cbz	r2, 8014202 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 80141a6:	8894      	ldrh	r4, [r2, #4]
 80141a8:	f1bb 0f00 	cmp.w	fp, #0
 80141ac:	d03b      	beq.n	8014226 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 80141ae:	f892 900d 	ldrb.w	r9, [r2, #13]
 80141b2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80141b6:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80141ba:	f892 900a 	ldrb.w	r9, [r2, #10]
 80141be:	f1bb 0f01 	cmp.w	fp, #1
 80141c2:	ea49 0903 	orr.w	r9, r9, r3
 80141c6:	d134      	bne.n	8014232 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 80141c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80141ca:	eba6 0609 	sub.w	r6, r6, r9
 80141ce:	2b00      	cmp	r3, #0
 80141d0:	d14f      	bne.n	8014272 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80141d2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80141d4:	eb09 0306 	add.w	r3, r9, r6
 80141d8:	4413      	add	r3, r2
 80141da:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80141dc:	f9b2 2000 	ldrsh.w	r2, [r2]
 80141e0:	4293      	cmp	r3, r2
 80141e2:	da51      	bge.n	8014288 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80141e4:	e038      	b.n	8014258 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80141e6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80141e8:	e79a      	b.n	8014120 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 80141ea:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80141ee:	9301      	str	r3, [sp, #4]
 80141f0:	ab1d      	add	r3, sp, #116	; 0x74
 80141f2:	9300      	str	r3, [sp, #0]
 80141f4:	4659      	mov	r1, fp
 80141f6:	ab1c      	add	r3, sp, #112	; 0x70
 80141f8:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80141fa:	f003 f8ca 	bl	8017392 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 80141fe:	4604      	mov	r4, r0
 8014200:	e7c0      	b.n	8014184 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8014202:	f8d8 0000 	ldr.w	r0, [r8]
 8014206:	6803      	ldr	r3, [r0, #0]
 8014208:	691b      	ldr	r3, [r3, #16]
 801420a:	4798      	blx	r3
 801420c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014210:	4298      	cmp	r0, r3
 8014212:	f000 80a7 	beq.w	8014364 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014216:	f242 030b 	movw	r3, #8203	; 0x200b
 801421a:	4298      	cmp	r0, r3
 801421c:	f000 80a2 	beq.w	8014364 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014220:	f1bb 0f00 	cmp.w	fp, #0
 8014224:	d100      	bne.n	8014228 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8014226:	444e      	add	r6, r9
 8014228:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801422a:	2a00      	cmp	r2, #0
 801422c:	d1bf      	bne.n	80141ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 801422e:	4691      	mov	r9, r2
 8014230:	e098      	b.n	8014364 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014232:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014234:	2b00      	cmp	r3, #0
 8014236:	f000 80ac 	beq.w	8014392 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 801423a:	f1bb 0f00 	cmp.w	fp, #0
 801423e:	d118      	bne.n	8014272 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8014240:	f8d8 0000 	ldr.w	r0, [r8]
 8014244:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014246:	6803      	ldr	r3, [r0, #0]
 8014248:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801424a:	4798      	blx	r3
 801424c:	4406      	add	r6, r0
 801424e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014250:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014252:	1af3      	subs	r3, r6, r3
 8014254:	4293      	cmp	r3, r2
 8014256:	dd17      	ble.n	8014288 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8014258:	2c00      	cmp	r4, #0
 801425a:	f000 8098 	beq.w	801438e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 801425e:	2c0a      	cmp	r4, #10
 8014260:	f040 8086 	bne.w	8014370 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8014264:	240a      	movs	r4, #10
 8014266:	fab4 f084 	clz	r0, r4
 801426a:	0940      	lsrs	r0, r0, #5
 801426c:	b01f      	add	sp, #124	; 0x7c
 801426e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014272:	f8d8 0000 	ldr.w	r0, [r8]
 8014276:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014278:	6803      	ldr	r3, [r0, #0]
 801427a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801427c:	4798      	blx	r3
 801427e:	f1bb 0f01 	cmp.w	fp, #1
 8014282:	eba6 0600 	sub.w	r6, r6, r0
 8014286:	d0a4      	beq.n	80141d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8014288:	981c      	ldr	r0, [sp, #112]	; 0x70
 801428a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801428c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8014290:	f9b3 7000 	ldrsh.w	r7, [r3]
 8014294:	7b43      	ldrb	r3, [r0, #13]
 8014296:	015b      	lsls	r3, r3, #5
 8014298:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801429c:	7983      	ldrb	r3, [r0, #6]
 801429e:	4431      	add	r1, r6
 80142a0:	4313      	orrs	r3, r2
 80142a2:	440b      	add	r3, r1
 80142a4:	42bb      	cmp	r3, r7
 80142a6:	db5d      	blt.n	8014364 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80142a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80142aa:	4299      	cmp	r1, r3
 80142ac:	da5a      	bge.n	8014364 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80142ae:	f8d8 0000 	ldr.w	r0, [r8]
 80142b2:	6803      	ldr	r3, [r0, #0]
 80142b4:	42b7      	cmp	r7, r6
 80142b6:	bfc8      	it	gt
 80142b8:	1bbf      	subgt	r7, r7, r6
 80142ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80142bc:	bfcc      	ite	gt
 80142be:	b2bf      	uxthgt	r7, r7
 80142c0:	2700      	movle	r7, #0
 80142c2:	4798      	blx	r3
 80142c4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80142c6:	7b5a      	ldrb	r2, [r3, #13]
 80142c8:	00d1      	lsls	r1, r2, #3
 80142ca:	f401 7580 	and.w	r5, r1, #256	; 0x100
 80142ce:	7a19      	ldrb	r1, [r3, #8]
 80142d0:	4329      	orrs	r1, r5
 80142d2:	0655      	lsls	r5, r2, #25
 80142d4:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 80142d6:	bf44      	itt	mi
 80142d8:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 80142dc:	b209      	sxthmi	r1, r1
 80142de:	1945      	adds	r5, r0, r5
 80142e0:	1a6d      	subs	r5, r5, r1
 80142e2:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80142e4:	b2ad      	uxth	r5, r5
 80142e6:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 80142ea:	fa0f fa85 	sxth.w	sl, r5
 80142ee:	4551      	cmp	r1, sl
 80142f0:	dd3c      	ble.n	801436c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 80142f2:	0112      	lsls	r2, r2, #4
 80142f4:	79d8      	ldrb	r0, [r3, #7]
 80142f6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80142fa:	4302      	orrs	r2, r0
 80142fc:	4492      	add	sl, r2
 80142fe:	4551      	cmp	r1, sl
 8014300:	dc30      	bgt.n	8014364 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014302:	1b4d      	subs	r5, r1, r5
 8014304:	b22d      	sxth	r5, r5
 8014306:	468a      	mov	sl, r1
 8014308:	9319      	str	r3, [sp, #100]	; 0x64
 801430a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801430c:	f8d8 0000 	ldr.w	r0, [r8]
 8014310:	681a      	ldr	r2, [r3, #0]
 8014312:	6801      	ldr	r1, [r0, #0]
 8014314:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8014316:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8014318:	9313      	str	r3, [sp, #76]	; 0x4c
 801431a:	9218      	str	r2, [sp, #96]	; 0x60
 801431c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 801431e:	4788      	blx	r1
 8014320:	f898 1006 	ldrb.w	r1, [r8, #6]
 8014324:	910b      	str	r1, [sp, #44]	; 0x2c
 8014326:	f898 100e 	ldrb.w	r1, [r8, #14]
 801432a:	910a      	str	r1, [sp, #40]	; 0x28
 801432c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8014330:	9109      	str	r1, [sp, #36]	; 0x24
 8014332:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8014336:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8014338:	9305      	str	r3, [sp, #20]
 801433a:	b2ad      	uxth	r5, r5
 801433c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8014340:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8014344:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014346:	9304      	str	r3, [sp, #16]
 8014348:	4437      	add	r7, r6
 801434a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801434c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801434e:	9206      	str	r2, [sp, #24]
 8014350:	b23f      	sxth	r7, r7
 8014352:	f8cd a004 	str.w	sl, [sp, #4]
 8014356:	9700      	str	r7, [sp, #0]
 8014358:	681a      	ldr	r2, [r3, #0]
 801435a:	9916      	ldr	r1, [sp, #88]	; 0x58
 801435c:	685b      	ldr	r3, [r3, #4]
 801435e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014360:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014362:	47a8      	blx	r5
 8014364:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014366:	3301      	adds	r3, #1
 8014368:	930e      	str	r3, [sp, #56]	; 0x38
 801436a:	e6e1      	b.n	8014130 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 801436c:	2500      	movs	r5, #0
 801436e:	e7cb      	b.n	8014308 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8014370:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8014372:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014374:	3501      	adds	r5, #1
 8014376:	429d      	cmp	r5, r3
 8014378:	f6bf af75 	bge.w	8014266 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801437c:	4659      	mov	r1, fp
 801437e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8014380:	f7f3 fd46 	bl	8007e10 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8014384:	4604      	mov	r4, r0
 8014386:	b110      	cbz	r0, 801438e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8014388:	280a      	cmp	r0, #10
 801438a:	d1f2      	bne.n	8014372 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 801438c:	e76a      	b.n	8014264 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801438e:	2400      	movs	r4, #0
 8014390:	e769      	b.n	8014266 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8014392:	f1bb 0f00 	cmp.w	fp, #0
 8014396:	f43f af5a 	beq.w	801424e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 801439a:	e775      	b.n	8014288 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0801439c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801439c:	b530      	push	{r4, r5, lr}
 801439e:	8ac4      	ldrh	r4, [r0, #22]
 80143a0:	8b45      	ldrh	r5, [r0, #26]
 80143a2:	8343      	strh	r3, [r0, #26]
 80143a4:	442c      	add	r4, r5
 80143a6:	1ae4      	subs	r4, r4, r3
 80143a8:	82c4      	strh	r4, [r0, #22]
 80143aa:	8b83      	ldrh	r3, [r0, #28]
 80143ac:	8b04      	ldrh	r4, [r0, #24]
 80143ae:	4422      	add	r2, r4
 80143b0:	440c      	add	r4, r1
 80143b2:	1a59      	subs	r1, r3, r1
 80143b4:	83c2      	strh	r2, [r0, #30]
 80143b6:	8304      	strh	r4, [r0, #24]
 80143b8:	8381      	strh	r1, [r0, #28]
 80143ba:	bd30      	pop	{r4, r5, pc}

080143bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 80143bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80143c0:	4604      	mov	r4, r0
 80143c2:	8a47      	ldrh	r7, [r0, #18]
 80143c4:	68c0      	ldr	r0, [r0, #12]
 80143c6:	6803      	ldr	r3, [r0, #0]
 80143c8:	b085      	sub	sp, #20
 80143ca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80143cc:	4798      	blx	r3
 80143ce:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 80143d2:	7a63      	ldrb	r3, [r4, #9]
 80143d4:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 80143d8:	42b7      	cmp	r7, r6
 80143da:	f103 33ff 	add.w	r3, r3, #4294967295
 80143de:	bfac      	ite	ge
 80143e0:	f04f 0900 	movge.w	r9, #0
 80143e4:	f04f 0901 	movlt.w	r9, #1
 80143e8:	2b05      	cmp	r3, #5
 80143ea:	d804      	bhi.n	80143f6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 80143ec:	e8df f003 	tbb	[pc, r3]
 80143f0:	470e0854 	.word	0x470e0854
 80143f4:	4c4c      	.short	0x4c4c
 80143f6:	2500      	movs	r5, #0
 80143f8:	46a9      	mov	r9, r5
 80143fa:	462e      	mov	r6, r5
 80143fc:	462f      	mov	r7, r5
 80143fe:	e00d      	b.n	801441c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014400:	42b7      	cmp	r7, r6
 8014402:	bfb4      	ite	lt
 8014404:	2600      	movlt	r6, #0
 8014406:	2601      	movge	r6, #1
 8014408:	2500      	movs	r5, #0
 801440a:	e7f7      	b.n	80143fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801440c:	42b7      	cmp	r7, r6
 801440e:	464d      	mov	r5, r9
 8014410:	f04f 0900 	mov.w	r9, #0
 8014414:	bfb4      	ite	lt
 8014416:	2600      	movlt	r6, #0
 8014418:	2601      	movge	r6, #1
 801441a:	464f      	mov	r7, r9
 801441c:	f04f 0800 	mov.w	r8, #0
 8014420:	f8a4 8016 	strh.w	r8, [r4, #22]
 8014424:	f8a4 8018 	strh.w	r8, [r4, #24]
 8014428:	f8cd 8004 	str.w	r8, [sp, #4]
 801442c:	2300      	movs	r3, #0
 801442e:	9303      	str	r3, [sp, #12]
 8014430:	8823      	ldrh	r3, [r4, #0]
 8014432:	2b20      	cmp	r3, #32
 8014434:	d034      	beq.n	80144a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8014436:	f242 010b 	movw	r1, #8203	; 0x200b
 801443a:	1a5a      	subs	r2, r3, r1
 801443c:	f1d2 0a00 	rsbs	sl, r2, #0
 8014440:	eb4a 0a02 	adc.w	sl, sl, r2
 8014444:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8014448:	4293      	cmp	r3, r2
 801444a:	d009      	beq.n	8014460 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 801444c:	428b      	cmp	r3, r1
 801444e:	9a01      	ldr	r2, [sp, #4]
 8014450:	bf18      	it	ne
 8014452:	461a      	movne	r2, r3
 8014454:	9201      	str	r2, [sp, #4]
 8014456:	bf0c      	ite	eq
 8014458:	f04f 0a01 	moveq.w	sl, #1
 801445c:	f04f 0a00 	movne.w	sl, #0
 8014460:	ab03      	add	r3, sp, #12
 8014462:	68e2      	ldr	r2, [r4, #12]
 8014464:	7a21      	ldrb	r1, [r4, #8]
 8014466:	6860      	ldr	r0, [r4, #4]
 8014468:	f002 ff4a 	bl	8017300 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801446c:	8020      	strh	r0, [r4, #0]
 801446e:	b9d8      	cbnz	r0, 80144a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8014470:	8ba2      	ldrh	r2, [r4, #28]
 8014472:	2300      	movs	r3, #0
 8014474:	4611      	mov	r1, r2
 8014476:	4620      	mov	r0, r4
 8014478:	f7ff ff90 	bl	801439c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801447c:	e06e      	b.n	801455c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801447e:	2500      	movs	r5, #0
 8014480:	46a9      	mov	r9, r5
 8014482:	462e      	mov	r6, r5
 8014484:	2701      	movs	r7, #1
 8014486:	e7c9      	b.n	801441c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014488:	42b7      	cmp	r7, r6
 801448a:	f04f 0500 	mov.w	r5, #0
 801448e:	bfb4      	ite	lt
 8014490:	2700      	movlt	r7, #0
 8014492:	2701      	movge	r7, #1
 8014494:	462e      	mov	r6, r5
 8014496:	e7c1      	b.n	801441c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014498:	2500      	movs	r5, #0
 801449a:	46a9      	mov	r9, r5
 801449c:	2601      	movs	r6, #1
 801449e:	e7ad      	b.n	80143fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80144a0:	9301      	str	r3, [sp, #4]
 80144a2:	f04f 0a01 	mov.w	sl, #1
 80144a6:	e7db      	b.n	8014460 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80144a8:	8b63      	ldrh	r3, [r4, #26]
 80144aa:	280a      	cmp	r0, #10
 80144ac:	f103 0301 	add.w	r3, r3, #1
 80144b0:	8363      	strh	r3, [r4, #26]
 80144b2:	d0dd      	beq.n	8014470 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 80144b4:	9a03      	ldr	r2, [sp, #12]
 80144b6:	bb62      	cbnz	r2, 8014512 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 80144b8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80144bc:	4298      	cmp	r0, r3
 80144be:	d003      	beq.n	80144c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80144c0:	f242 030b 	movw	r3, #8203	; 0x200b
 80144c4:	4298      	cmp	r0, r3
 80144c6:	d1b1      	bne.n	801442c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80144c8:	8823      	ldrh	r3, [r4, #0]
 80144ca:	8ba1      	ldrh	r1, [r4, #28]
 80144cc:	2b20      	cmp	r3, #32
 80144ce:	d003      	beq.n	80144d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 80144d0:	f242 000b 	movw	r0, #8203	; 0x200b
 80144d4:	4283      	cmp	r3, r0
 80144d6:	d131      	bne.n	801453c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 80144d8:	f1ba 0f00 	cmp.w	sl, #0
 80144dc:	bf0a      	itet	eq
 80144de:	4688      	moveq	r8, r1
 80144e0:	4650      	movne	r0, sl
 80144e2:	2001      	moveq	r0, #1
 80144e4:	440a      	add	r2, r1
 80144e6:	8b23      	ldrh	r3, [r4, #24]
 80144e8:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 80144ec:	b292      	uxth	r2, r2
 80144ee:	83a2      	strh	r2, [r4, #28]
 80144f0:	4413      	add	r3, r2
 80144f2:	f1b9 0f00 	cmp.w	r9, #0
 80144f6:	d102      	bne.n	80144fe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 80144f8:	2d00      	cmp	r5, #0
 80144fa:	d042      	beq.n	8014582 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 80144fc:	b300      	cbz	r0, 8014540 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 80144fe:	8c21      	ldrh	r1, [r4, #32]
 8014500:	4419      	add	r1, r3
 8014502:	458c      	cmp	ip, r1
 8014504:	da37      	bge.n	8014576 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8014506:	8ae1      	ldrh	r1, [r4, #22]
 8014508:	2900      	cmp	r1, #0
 801450a:	d034      	beq.n	8014576 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801450c:	4563      	cmp	r3, ip
 801450e:	dd8d      	ble.n	801442c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014510:	e01d      	b.n	801454e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8014512:	8893      	ldrh	r3, [r2, #4]
 8014514:	8023      	strh	r3, [r4, #0]
 8014516:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801451a:	9901      	ldr	r1, [sp, #4]
 801451c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8014520:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8014524:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8014528:	ea4b 0b00 	orr.w	fp, fp, r0
 801452c:	68e0      	ldr	r0, [r4, #12]
 801452e:	6803      	ldr	r3, [r0, #0]
 8014530:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014532:	4798      	blx	r3
 8014534:	eb0b 0200 	add.w	r2, fp, r0
 8014538:	b292      	uxth	r2, r2
 801453a:	e7c5      	b.n	80144c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801453c:	2000      	movs	r0, #0
 801453e:	e7d1      	b.n	80144e4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8014540:	4563      	cmp	r3, ip
 8014542:	f77f af73 	ble.w	801442c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014546:	8ae3      	ldrh	r3, [r4, #22]
 8014548:	2b00      	cmp	r3, #0
 801454a:	f43f af6f 	beq.w	801442c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801454e:	2301      	movs	r3, #1
 8014550:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8014554:	8c22      	ldrh	r2, [r4, #32]
 8014556:	8be3      	ldrh	r3, [r4, #30]
 8014558:	4413      	add	r3, r2
 801455a:	83e3      	strh	r3, [r4, #30]
 801455c:	68e0      	ldr	r0, [r4, #12]
 801455e:	6803      	ldr	r3, [r0, #0]
 8014560:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014562:	4798      	blx	r3
 8014564:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8014568:	4418      	add	r0, r3
 801456a:	8a63      	ldrh	r3, [r4, #18]
 801456c:	1a18      	subs	r0, r3, r0
 801456e:	8260      	strh	r0, [r4, #18]
 8014570:	b005      	add	sp, #20
 8014572:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014576:	2300      	movs	r3, #0
 8014578:	4611      	mov	r1, r2
 801457a:	4620      	mov	r0, r4
 801457c:	f7ff ff0e 	bl	801439c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8014580:	e754      	b.n	801442c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014582:	4563      	cmp	r3, ip
 8014584:	dd14      	ble.n	80145b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8014586:	b117      	cbz	r7, 801458e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8014588:	2301      	movs	r3, #1
 801458a:	460a      	mov	r2, r1
 801458c:	e772      	b.n	8014474 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801458e:	2e00      	cmp	r6, #0
 8014590:	f43f af4c 	beq.w	801442c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014594:	2800      	cmp	r0, #0
 8014596:	f47f af49 	bne.w	801442c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801459a:	f1ba 0f00 	cmp.w	sl, #0
 801459e:	d002      	beq.n	80145a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 80145a0:	2301      	movs	r3, #1
 80145a2:	4642      	mov	r2, r8
 80145a4:	e767      	b.n	8014476 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 80145a6:	8ae3      	ldrh	r3, [r4, #22]
 80145a8:	2b00      	cmp	r3, #0
 80145aa:	f43f af3f 	beq.w	801442c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80145ae:	e7d5      	b.n	801455c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80145b0:	2800      	cmp	r0, #0
 80145b2:	f47f af3b 	bne.w	801442c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80145b6:	f1ba 0f00 	cmp.w	sl, #0
 80145ba:	f43f af37 	beq.w	801442c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80145be:	2301      	movs	r3, #1
 80145c0:	4642      	mov	r2, r8
 80145c2:	e7da      	b.n	801457a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

080145c4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 80145c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80145c6:	4605      	mov	r5, r0
 80145c8:	b08f      	sub	sp, #60	; 0x3c
 80145ca:	4617      	mov	r7, r2
 80145cc:	461c      	mov	r4, r3
 80145ce:	460e      	mov	r6, r1
 80145d0:	b1d1      	cbz	r1, 8014608 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 80145d2:	681b      	ldr	r3, [r3, #0]
 80145d4:	4620      	mov	r0, r4
 80145d6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80145d8:	4798      	blx	r3
 80145da:	4240      	negs	r0, r0
 80145dc:	b200      	sxth	r0, r0
 80145de:	e9cd 4001 	strd	r4, r0, [sp, #4]
 80145e2:	9603      	str	r6, [sp, #12]
 80145e4:	9700      	str	r7, [sp, #0]
 80145e6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80145ea:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80145ee:	4629      	mov	r1, r5
 80145f0:	a805      	add	r0, sp, #20
 80145f2:	f7ff fcbf 	bl	8013f74 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80145f6:	2401      	movs	r4, #1
 80145f8:	a805      	add	r0, sp, #20
 80145fa:	f7ff fedf 	bl	80143bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80145fe:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8014602:	b163      	cbz	r3, 801461e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8014604:	3401      	adds	r4, #1
 8014606:	e7f7      	b.n	80145f8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8014608:	f002 ff48 	bl	801749c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801460c:	2401      	movs	r4, #1
 801460e:	280a      	cmp	r0, #10
 8014610:	4628      	mov	r0, r5
 8014612:	bf08      	it	eq
 8014614:	3401      	addeq	r4, #1
 8014616:	f002 ff41 	bl	801749c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801461a:	2800      	cmp	r0, #0
 801461c:	d1f7      	bne.n	801460e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801461e:	b2a0      	uxth	r0, r4
 8014620:	b00f      	add	sp, #60	; 0x3c
 8014622:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014624 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8014624:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014628:	b0e3      	sub	sp, #396	; 0x18c
 801462a:	461c      	mov	r4, r3
 801462c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 801462e:	4683      	mov	fp, r0
 8014630:	4688      	mov	r8, r1
 8014632:	2b00      	cmp	r3, #0
 8014634:	f000 8112 	beq.w	801485c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014638:	6823      	ldr	r3, [r4, #0]
 801463a:	2b00      	cmp	r3, #0
 801463c:	f000 810e 	beq.w	801485c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014640:	7ba3      	ldrb	r3, [r4, #14]
 8014642:	2b00      	cmp	r3, #0
 8014644:	f000 810a 	beq.w	801485c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014648:	6810      	ldr	r0, [r2, #0]
 801464a:	6851      	ldr	r1, [r2, #4]
 801464c:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8014650:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8014654:	ad0a      	add	r5, sp, #40	; 0x28
 8014656:	462b      	mov	r3, r5
 8014658:	c303      	stmia	r3!, {r0, r1}
 801465a:	2100      	movs	r1, #0
 801465c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8014660:	910c      	str	r1, [sp, #48]	; 0x30
 8014662:	79a2      	ldrb	r2, [r4, #6]
 8014664:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014668:	a90c      	add	r1, sp, #48	; 0x30
 801466a:	4628      	mov	r0, r5
 801466c:	f7ff fd01 	bl	8014072 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8014670:	a90c      	add	r1, sp, #48	; 0x30
 8014672:	4608      	mov	r0, r1
 8014674:	79a2      	ldrb	r2, [r4, #6]
 8014676:	f7ff fcfc 	bl	8014072 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801467a:	a817      	add	r0, sp, #92	; 0x5c
 801467c:	f002 fae2 	bl	8016c44 <_ZN8touchgfx12TextProviderC1Ev>
 8014680:	6820      	ldr	r0, [r4, #0]
 8014682:	6803      	ldr	r3, [r0, #0]
 8014684:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014686:	4798      	blx	r3
 8014688:	4606      	mov	r6, r0
 801468a:	6820      	ldr	r0, [r4, #0]
 801468c:	6803      	ldr	r3, [r0, #0]
 801468e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014690:	4798      	blx	r3
 8014692:	4633      	mov	r3, r6
 8014694:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8014696:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8014698:	9000      	str	r0, [sp, #0]
 801469a:	a817      	add	r0, sp, #92	; 0x5c
 801469c:	f002 fb2d 	bl	8016cfa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80146a0:	6820      	ldr	r0, [r4, #0]
 80146a2:	f894 a004 	ldrb.w	sl, [r4, #4]
 80146a6:	6803      	ldr	r3, [r0, #0]
 80146a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80146aa:	4798      	blx	r3
 80146ac:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 80146b0:	6823      	ldr	r3, [r4, #0]
 80146b2:	4607      	mov	r7, r0
 80146b4:	4406      	add	r6, r0
 80146b6:	a830      	add	r0, sp, #192	; 0xc0
 80146b8:	f893 9009 	ldrb.w	r9, [r3, #9]
 80146bc:	f002 fac2 	bl	8016c44 <_ZN8touchgfx12TextProviderC1Ev>
 80146c0:	7c23      	ldrb	r3, [r4, #16]
 80146c2:	b17b      	cbz	r3, 80146e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 80146c4:	6820      	ldr	r0, [r4, #0]
 80146c6:	6803      	ldr	r3, [r0, #0]
 80146c8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80146ca:	4798      	blx	r3
 80146cc:	9009      	str	r0, [sp, #36]	; 0x24
 80146ce:	6820      	ldr	r0, [r4, #0]
 80146d0:	6802      	ldr	r2, [r0, #0]
 80146d2:	6d12      	ldr	r2, [r2, #80]	; 0x50
 80146d4:	4790      	blx	r2
 80146d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80146d8:	9000      	str	r0, [sp, #0]
 80146da:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80146dc:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80146de:	a830      	add	r0, sp, #192	; 0xc0
 80146e0:	f002 fb0b 	bl	8016cfa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80146e4:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80146e8:	7be2      	ldrb	r2, [r4, #15]
 80146ea:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80146ee:	1a8a      	subs	r2, r1, r2
 80146f0:	7c21      	ldrb	r1, [r4, #16]
 80146f2:	9103      	str	r1, [sp, #12]
 80146f4:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80146f8:	9102      	str	r1, [sp, #8]
 80146fa:	6821      	ldr	r1, [r4, #0]
 80146fc:	9101      	str	r1, [sp, #4]
 80146fe:	7961      	ldrb	r1, [r4, #5]
 8014700:	9100      	str	r1, [sp, #0]
 8014702:	b292      	uxth	r2, r2
 8014704:	a930      	add	r1, sp, #192	; 0xc0
 8014706:	a80e      	add	r0, sp, #56	; 0x38
 8014708:	f7ff fc34 	bl	8013f74 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801470c:	2e00      	cmp	r6, #0
 801470e:	dc5b      	bgt.n	80147c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8014710:	af17      	add	r7, sp, #92	; 0x5c
 8014712:	f04f 0900 	mov.w	r9, #0
 8014716:	7c23      	ldrb	r3, [r4, #16]
 8014718:	2b00      	cmp	r3, #0
 801471a:	f000 80b1 	beq.w	8014880 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801471e:	a80e      	add	r0, sp, #56	; 0x38
 8014720:	f7ff fe4c 	bl	80143bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014724:	f1ba 0f00 	cmp.w	sl, #0
 8014728:	f000 80a5 	beq.w	8014876 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801472c:	7c23      	ldrb	r3, [r4, #16]
 801472e:	9309      	str	r3, [sp, #36]	; 0x24
 8014730:	2264      	movs	r2, #100	; 0x64
 8014732:	4639      	mov	r1, r7
 8014734:	a849      	add	r0, sp, #292	; 0x124
 8014736:	f014 fa6e 	bl	8028c16 <memcpy>
 801473a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801473c:	2b00      	cmp	r3, #0
 801473e:	f000 80a7 	beq.w	8014890 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8014742:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8014746:	7922      	ldrb	r2, [r4, #4]
 8014748:	2a01      	cmp	r2, #1
 801474a:	f040 808a 	bne.w	8014862 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 801474e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8014752:	1ac0      	subs	r0, r0, r3
 8014754:	2302      	movs	r3, #2
 8014756:	fb90 f0f3 	sdiv	r0, r0, r3
 801475a:	b200      	sxth	r0, r0
 801475c:	7c23      	ldrb	r3, [r4, #16]
 801475e:	2b00      	cmp	r3, #0
 8014760:	f000 808b 	beq.w	801487a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8014764:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8014768:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 801476c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014770:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8014774:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8014778:	4410      	add	r0, r2
 801477a:	b200      	sxth	r0, r0
 801477c:	9000      	str	r0, [sp, #0]
 801477e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8014782:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8014786:	4642      	mov	r2, r8
 8014788:	2100      	movs	r1, #0
 801478a:	4658      	mov	r0, fp
 801478c:	f7ff fca2 	bl	80140d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8014790:	2800      	cmp	r0, #0
 8014792:	d163      	bne.n	801485c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014794:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014798:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801479c:	b2b2      	uxth	r2, r6
 801479e:	4413      	add	r3, r2
 80147a0:	1a8a      	subs	r2, r1, r2
 80147a2:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 80147a6:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 80147aa:	b21b      	sxth	r3, r3
 80147ac:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80147b0:	2a00      	cmp	r2, #0
 80147b2:	d153      	bne.n	801485c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80147b4:	6822      	ldr	r2, [r4, #0]
 80147b6:	8869      	ldrh	r1, [r5, #2]
 80147b8:	7a12      	ldrb	r2, [r2, #8]
 80147ba:	1a9b      	subs	r3, r3, r2
 80147bc:	88ea      	ldrh	r2, [r5, #6]
 80147be:	440a      	add	r2, r1
 80147c0:	b212      	sxth	r2, r2
 80147c2:	4293      	cmp	r3, r2
 80147c4:	dda7      	ble.n	8014716 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 80147c6:	e049      	b.n	801485c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80147c8:	7c23      	ldrb	r3, [r4, #16]
 80147ca:	444f      	add	r7, r9
 80147cc:	b1c3      	cbz	r3, 8014800 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 80147ce:	f64f 79ff 	movw	r9, #65535	; 0xffff
 80147d2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80147d6:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80147da:	443b      	add	r3, r7
 80147dc:	4293      	cmp	r3, r2
 80147de:	da97      	bge.n	8014710 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80147e0:	a80e      	add	r0, sp, #56	; 0x38
 80147e2:	f7ff fdeb 	bl	80143bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80147e6:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 80147ea:	3b01      	subs	r3, #1
 80147ec:	b29b      	uxth	r3, r3
 80147ee:	454b      	cmp	r3, r9
 80147f0:	9309      	str	r3, [sp, #36]	; 0x24
 80147f2:	d021      	beq.n	8014838 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 80147f4:	7961      	ldrb	r1, [r4, #5]
 80147f6:	a817      	add	r0, sp, #92	; 0x5c
 80147f8:	f7f3 fb0a 	bl	8007e10 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80147fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80147fe:	e7f4      	b.n	80147ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8014800:	fa1f f986 	uxth.w	r9, r6
 8014804:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014808:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801480c:	443b      	add	r3, r7
 801480e:	4293      	cmp	r3, r2
 8014810:	f6bf af7e 	bge.w	8014710 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014814:	a817      	add	r0, sp, #92	; 0x5c
 8014816:	f002 fe41 	bl	801749c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801481a:	b1f8      	cbz	r0, 801485c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801481c:	280a      	cmp	r0, #10
 801481e:	d1f1      	bne.n	8014804 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8014820:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014824:	444b      	add	r3, r9
 8014826:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801482a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801482e:	eba3 0309 	sub.w	r3, r3, r9
 8014832:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014836:	e7e5      	b.n	8014804 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8014838:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801483c:	b2b3      	uxth	r3, r6
 801483e:	441a      	add	r2, r3
 8014840:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8014844:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8014848:	1ad3      	subs	r3, r2, r3
 801484a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801484e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8014852:	b11b      	cbz	r3, 801485c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014854:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8014858:	2b00      	cmp	r3, #0
 801485a:	d0ba      	beq.n	80147d2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 801485c:	b063      	add	sp, #396	; 0x18c
 801485e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014862:	2a02      	cmp	r2, #2
 8014864:	d105      	bne.n	8014872 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8014866:	7be2      	ldrb	r2, [r4, #15]
 8014868:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801486c:	1a80      	subs	r0, r0, r2
 801486e:	1ac0      	subs	r0, r0, r3
 8014870:	e773      	b.n	801475a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8014872:	2000      	movs	r0, #0
 8014874:	e772      	b.n	801475c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8014876:	7be0      	ldrb	r0, [r4, #15]
 8014878:	e770      	b.n	801475c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801487a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801487e:	e773      	b.n	8014768 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8014880:	f1ba 0f00 	cmp.w	sl, #0
 8014884:	d0f7      	beq.n	8014876 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8014886:	2264      	movs	r2, #100	; 0x64
 8014888:	4639      	mov	r1, r7
 801488a:	a849      	add	r0, sp, #292	; 0x124
 801488c:	f014 f9c3 	bl	8028c16 <memcpy>
 8014890:	2300      	movs	r3, #0
 8014892:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014896:	6821      	ldr	r1, [r4, #0]
 8014898:	a849      	add	r0, sp, #292	; 0x124
 801489a:	f7ff fbae 	bl	8013ffa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801489e:	b203      	sxth	r3, r0
 80148a0:	e751      	b.n	8014746 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

080148a2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 80148a2:	2b03      	cmp	r3, #3
 80148a4:	d818      	bhi.n	80148d8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 80148a6:	e8df f003 	tbb	[pc, r3]
 80148aa:	0602      	.short	0x0602
 80148ac:	130d      	.short	0x130d
 80148ae:	f9b0 2000 	ldrsh.w	r2, [r0]
 80148b2:	1850      	adds	r0, r2, r1
 80148b4:	4770      	bx	lr
 80148b6:	8803      	ldrh	r3, [r0, #0]
 80148b8:	8880      	ldrh	r0, [r0, #4]
 80148ba:	4418      	add	r0, r3
 80148bc:	b200      	sxth	r0, r0
 80148be:	1a80      	subs	r0, r0, r2
 80148c0:	3801      	subs	r0, #1
 80148c2:	4770      	bx	lr
 80148c4:	8803      	ldrh	r3, [r0, #0]
 80148c6:	8880      	ldrh	r0, [r0, #4]
 80148c8:	4418      	add	r0, r3
 80148ca:	b200      	sxth	r0, r0
 80148cc:	1a40      	subs	r0, r0, r1
 80148ce:	e7f7      	b.n	80148c0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 80148d0:	f9b0 0000 	ldrsh.w	r0, [r0]
 80148d4:	4410      	add	r0, r2
 80148d6:	4770      	bx	lr
 80148d8:	2000      	movs	r0, #0
 80148da:	4770      	bx	lr

080148dc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 80148dc:	2b03      	cmp	r3, #3
 80148de:	d817      	bhi.n	8014910 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 80148e0:	e8df f003 	tbb	[pc, r3]
 80148e4:	10090602 	.word	0x10090602
 80148e8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80148ec:	1850      	adds	r0, r2, r1
 80148ee:	4770      	bx	lr
 80148f0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80148f4:	e7fa      	b.n	80148ec <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 80148f6:	8843      	ldrh	r3, [r0, #2]
 80148f8:	88c0      	ldrh	r0, [r0, #6]
 80148fa:	4418      	add	r0, r3
 80148fc:	b200      	sxth	r0, r0
 80148fe:	1a80      	subs	r0, r0, r2
 8014900:	3801      	subs	r0, #1
 8014902:	4770      	bx	lr
 8014904:	8843      	ldrh	r3, [r0, #2]
 8014906:	88c0      	ldrh	r0, [r0, #6]
 8014908:	4418      	add	r0, r3
 801490a:	b200      	sxth	r0, r0
 801490c:	1a40      	subs	r0, r0, r1
 801490e:	e7f7      	b.n	8014900 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8014910:	2000      	movs	r0, #0
 8014912:	4770      	bx	lr

08014914 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8014914:	4b01      	ldr	r3, [pc, #4]	; (801491c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8014916:	2200      	movs	r2, #0
 8014918:	601a      	str	r2, [r3, #0]
 801491a:	4770      	bx	lr
 801491c:	200137e4 	.word	0x200137e4

08014920 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8014920:	4603      	mov	r3, r0
 8014922:	b1c8      	cbz	r0, 8014958 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8014924:	0c02      	lsrs	r2, r0, #16
 8014926:	0412      	lsls	r2, r2, #16
 8014928:	b9a2      	cbnz	r2, 8014954 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801492a:	0403      	lsls	r3, r0, #16
 801492c:	2010      	movs	r0, #16
 801492e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8014932:	bf04      	itt	eq
 8014934:	021b      	lsleq	r3, r3, #8
 8014936:	3008      	addeq	r0, #8
 8014938:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801493c:	bf04      	itt	eq
 801493e:	011b      	lsleq	r3, r3, #4
 8014940:	3004      	addeq	r0, #4
 8014942:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8014946:	bf04      	itt	eq
 8014948:	009b      	lsleq	r3, r3, #2
 801494a:	3002      	addeq	r0, #2
 801494c:	2b00      	cmp	r3, #0
 801494e:	db04      	blt.n	801495a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8014950:	3001      	adds	r0, #1
 8014952:	4770      	bx	lr
 8014954:	2000      	movs	r0, #0
 8014956:	e7ea      	b.n	801492e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8014958:	2020      	movs	r0, #32
 801495a:	4770      	bx	lr

0801495c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801495c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014960:	b087      	sub	sp, #28
 8014962:	460d      	mov	r5, r1
 8014964:	4616      	mov	r6, r2
 8014966:	4698      	mov	r8, r3
 8014968:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801496c:	4601      	mov	r1, r0
 801496e:	b120      	cbz	r0, 801497a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014970:	b11a      	cbz	r2, 801497a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014972:	2d1f      	cmp	r5, #31
 8014974:	d801      	bhi.n	801497a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014976:	2b1f      	cmp	r3, #31
 8014978:	d904      	bls.n	8014984 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801497a:	2000      	movs	r0, #0
 801497c:	6038      	str	r0, [r7, #0]
 801497e:	b007      	add	sp, #28
 8014980:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014984:	b97d      	cbnz	r5, 80149a6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8014986:	b143      	cbz	r3, 801499a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8014988:	4602      	mov	r2, r0
 801498a:	e9cd 4700 	strd	r4, r7, [sp]
 801498e:	462b      	mov	r3, r5
 8014990:	4641      	mov	r1, r8
 8014992:	4630      	mov	r0, r6
 8014994:	f7ff ffe2 	bl	801495c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014998:	e7f1      	b.n	801497e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801499a:	f04f 33ff 	mov.w	r3, #4294967295
 801499e:	603b      	str	r3, [r7, #0]
 80149a0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80149a4:	e7eb      	b.n	801497e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80149a6:	fa32 fa05 	lsrs.w	sl, r2, r5
 80149aa:	d106      	bne.n	80149ba <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 80149ac:	4346      	muls	r6, r0
 80149ae:	fbb6 f0f4 	udiv	r0, r6, r4
 80149b2:	fb04 6610 	mls	r6, r4, r0, r6
 80149b6:	603e      	str	r6, [r7, #0]
 80149b8:	e7e1      	b.n	801497e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80149ba:	2201      	movs	r2, #1
 80149bc:	40aa      	lsls	r2, r5
 80149be:	3a01      	subs	r2, #1
 80149c0:	4016      	ands	r6, r2
 80149c2:	fa00 fb05 	lsl.w	fp, r0, r5
 80149c6:	4630      	mov	r0, r6
 80149c8:	fbbb f9f4 	udiv	r9, fp, r4
 80149cc:	fb0a f309 	mul.w	r3, sl, r9
 80149d0:	9303      	str	r3, [sp, #12]
 80149d2:	f7ff ffa5 	bl	8014920 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80149d6:	462b      	mov	r3, r5
 80149d8:	460a      	mov	r2, r1
 80149da:	e9cd 4700 	strd	r4, r7, [sp]
 80149de:	4601      	mov	r1, r0
 80149e0:	4630      	mov	r0, r6
 80149e2:	f7ff ffbb 	bl	801495c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80149e6:	fb04 b919 	mls	r9, r4, r9, fp
 80149ea:	4606      	mov	r6, r0
 80149ec:	4648      	mov	r0, r9
 80149ee:	eb05 0108 	add.w	r1, r5, r8
 80149f2:	f7ff ff95 	bl	8014920 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80149f6:	ab05      	add	r3, sp, #20
 80149f8:	e9cd 4300 	strd	r4, r3, [sp]
 80149fc:	464a      	mov	r2, r9
 80149fe:	4603      	mov	r3, r0
 8014a00:	4650      	mov	r0, sl
 8014a02:	f7ff ffab 	bl	801495c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014a06:	6839      	ldr	r1, [r7, #0]
 8014a08:	9a05      	ldr	r2, [sp, #20]
 8014a0a:	9b03      	ldr	r3, [sp, #12]
 8014a0c:	4411      	add	r1, r2
 8014a0e:	fbb1 f2f4 	udiv	r2, r1, r4
 8014a12:	18d3      	adds	r3, r2, r3
 8014a14:	441e      	add	r6, r3
 8014a16:	fb04 1412 	mls	r4, r4, r2, r1
 8014a1a:	4430      	add	r0, r6
 8014a1c:	603c      	str	r4, [r7, #0]
 8014a1e:	e7ae      	b.n	801497e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08014a20 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8014a20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014a24:	b085      	sub	sp, #20
 8014a26:	f1b0 0900 	subs.w	r9, r0, #0
 8014a2a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014a2c:	461d      	mov	r5, r3
 8014a2e:	bfbf      	itttt	lt
 8014a30:	6823      	ldrlt	r3, [r4, #0]
 8014a32:	425b      	neglt	r3, r3
 8014a34:	f1c9 0900 	rsblt	r9, r9, #0
 8014a38:	6023      	strlt	r3, [r4, #0]
 8014a3a:	bfb4      	ite	lt
 8014a3c:	f04f 36ff 	movlt.w	r6, #4294967295
 8014a40:	2601      	movge	r6, #1
 8014a42:	2a00      	cmp	r2, #0
 8014a44:	4617      	mov	r7, r2
 8014a46:	da04      	bge.n	8014a52 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8014a48:	6823      	ldr	r3, [r4, #0]
 8014a4a:	425b      	negs	r3, r3
 8014a4c:	4257      	negs	r7, r2
 8014a4e:	4276      	negs	r6, r6
 8014a50:	6023      	str	r3, [r4, #0]
 8014a52:	2d00      	cmp	r5, #0
 8014a54:	4638      	mov	r0, r7
 8014a56:	bfba      	itte	lt
 8014a58:	426d      	neglt	r5, r5
 8014a5a:	f04f 38ff 	movlt.w	r8, #4294967295
 8014a5e:	f04f 0801 	movge.w	r8, #1
 8014a62:	f7ff ff5d 	bl	8014920 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014a66:	ab03      	add	r3, sp, #12
 8014a68:	e9cd 5300 	strd	r5, r3, [sp]
 8014a6c:	463a      	mov	r2, r7
 8014a6e:	4603      	mov	r3, r0
 8014a70:	4648      	mov	r0, r9
 8014a72:	f7ff ff73 	bl	801495c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014a76:	6823      	ldr	r3, [r4, #0]
 8014a78:	9a03      	ldr	r2, [sp, #12]
 8014a7a:	4546      	cmp	r6, r8
 8014a7c:	441a      	add	r2, r3
 8014a7e:	fb92 f3f5 	sdiv	r3, r2, r5
 8014a82:	4418      	add	r0, r3
 8014a84:	bf18      	it	ne
 8014a86:	4240      	negne	r0, r0
 8014a88:	fb05 2313 	mls	r3, r5, r3, r2
 8014a8c:	1c72      	adds	r2, r6, #1
 8014a8e:	6023      	str	r3, [r4, #0]
 8014a90:	d105      	bne.n	8014a9e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8014a92:	2b00      	cmp	r3, #0
 8014a94:	f1c3 0200 	rsb	r2, r3, #0
 8014a98:	db0b      	blt.n	8014ab2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8014a9a:	6022      	str	r2, [r4, #0]
 8014a9c:	e006      	b.n	8014aac <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014a9e:	2e01      	cmp	r6, #1
 8014aa0:	d104      	bne.n	8014aac <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014aa2:	2b00      	cmp	r3, #0
 8014aa4:	da02      	bge.n	8014aac <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014aa6:	442b      	add	r3, r5
 8014aa8:	3801      	subs	r0, #1
 8014aaa:	6023      	str	r3, [r4, #0]
 8014aac:	b005      	add	sp, #20
 8014aae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014ab2:	3801      	subs	r0, #1
 8014ab4:	1b52      	subs	r2, r2, r5
 8014ab6:	e7f0      	b.n	8014a9a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08014ab8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8014ab8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8014abc:	4c1c      	ldr	r4, [pc, #112]	; (8014b30 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8014abe:	6807      	ldr	r7, [r0, #0]
 8014ac0:	69a3      	ldr	r3, [r4, #24]
 8014ac2:	4605      	mov	r5, r0
 8014ac4:	b92b      	cbnz	r3, 8014ad2 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8014ac6:	6840      	ldr	r0, [r0, #4]
 8014ac8:	e9c5 7000 	strd	r7, r0, [r5]
 8014acc:	b004      	add	sp, #16
 8014ace:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014ad2:	68a2      	ldr	r2, [r4, #8]
 8014ad4:	6820      	ldr	r0, [r4, #0]
 8014ad6:	ae04      	add	r6, sp, #16
 8014ad8:	f04f 0802 	mov.w	r8, #2
 8014adc:	fb93 f1f8 	sdiv	r1, r3, r8
 8014ae0:	440a      	add	r2, r1
 8014ae2:	f846 2d04 	str.w	r2, [r6, #-4]!
 8014ae6:	69e1      	ldr	r1, [r4, #28]
 8014ae8:	9600      	str	r6, [sp, #0]
 8014aea:	463a      	mov	r2, r7
 8014aec:	f7ff ff98 	bl	8014a20 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014af0:	69a3      	ldr	r3, [r4, #24]
 8014af2:	686a      	ldr	r2, [r5, #4]
 8014af4:	6a21      	ldr	r1, [r4, #32]
 8014af6:	9600      	str	r6, [sp, #0]
 8014af8:	4607      	mov	r7, r0
 8014afa:	6860      	ldr	r0, [r4, #4]
 8014afc:	f7ff ff90 	bl	8014a20 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014b00:	6962      	ldr	r2, [r4, #20]
 8014b02:	69a3      	ldr	r3, [r4, #24]
 8014b04:	fb93 f8f8 	sdiv	r8, r3, r8
 8014b08:	4442      	add	r2, r8
 8014b0a:	9203      	str	r2, [sp, #12]
 8014b0c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8014b0e:	682a      	ldr	r2, [r5, #0]
 8014b10:	9600      	str	r6, [sp, #0]
 8014b12:	4407      	add	r7, r0
 8014b14:	68e0      	ldr	r0, [r4, #12]
 8014b16:	f7ff ff83 	bl	8014a20 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014b1a:	9600      	str	r6, [sp, #0]
 8014b1c:	4680      	mov	r8, r0
 8014b1e:	69a3      	ldr	r3, [r4, #24]
 8014b20:	686a      	ldr	r2, [r5, #4]
 8014b22:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8014b24:	6920      	ldr	r0, [r4, #16]
 8014b26:	f7ff ff7b 	bl	8014a20 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014b2a:	4440      	add	r0, r8
 8014b2c:	e7cc      	b.n	8014ac8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8014b2e:	bf00      	nop
 8014b30:	200137e8 	.word	0x200137e8

08014b34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8014b34:	4b07      	ldr	r3, [pc, #28]	; (8014b54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8014b36:	781b      	ldrb	r3, [r3, #0]
 8014b38:	2b01      	cmp	r3, #1
 8014b3a:	d109      	bne.n	8014b50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8014b3c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014b40:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014b44:	8003      	strh	r3, [r0, #0]
 8014b46:	4b04      	ldr	r3, [pc, #16]	; (8014b58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8014b48:	881b      	ldrh	r3, [r3, #0]
 8014b4a:	3b01      	subs	r3, #1
 8014b4c:	1a9b      	subs	r3, r3, r2
 8014b4e:	800b      	strh	r3, [r1, #0]
 8014b50:	4770      	bx	lr
 8014b52:	bf00      	nop
 8014b54:	200137cc 	.word	0x200137cc
 8014b58:	200137c8 	.word	0x200137c8

08014b5c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8014b5c:	b510      	push	{r4, lr}
 8014b5e:	4b07      	ldr	r3, [pc, #28]	; (8014b7c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8014b60:	781b      	ldrb	r3, [r3, #0]
 8014b62:	2b01      	cmp	r3, #1
 8014b64:	d108      	bne.n	8014b78 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8014b66:	4b06      	ldr	r3, [pc, #24]	; (8014b80 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8014b68:	880c      	ldrh	r4, [r1, #0]
 8014b6a:	881b      	ldrh	r3, [r3, #0]
 8014b6c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014b70:	3b01      	subs	r3, #1
 8014b72:	1b1b      	subs	r3, r3, r4
 8014b74:	8003      	strh	r3, [r0, #0]
 8014b76:	800a      	strh	r2, [r1, #0]
 8014b78:	bd10      	pop	{r4, pc}
 8014b7a:	bf00      	nop
 8014b7c:	200137cc 	.word	0x200137cc
 8014b80:	200137c8 	.word	0x200137c8

08014b84 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8014b84:	b510      	push	{r4, lr}
 8014b86:	4b0a      	ldr	r3, [pc, #40]	; (8014bb0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8014b88:	781b      	ldrb	r3, [r3, #0]
 8014b8a:	2b01      	cmp	r3, #1
 8014b8c:	d10e      	bne.n	8014bac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8014b8e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014b92:	8843      	ldrh	r3, [r0, #2]
 8014b94:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014b98:	8044      	strh	r4, [r0, #2]
 8014b9a:	18ca      	adds	r2, r1, r3
 8014b9c:	4b05      	ldr	r3, [pc, #20]	; (8014bb4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8014b9e:	881b      	ldrh	r3, [r3, #0]
 8014ba0:	1a9b      	subs	r3, r3, r2
 8014ba2:	8003      	strh	r3, [r0, #0]
 8014ba4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014ba8:	80c3      	strh	r3, [r0, #6]
 8014baa:	8081      	strh	r1, [r0, #4]
 8014bac:	bd10      	pop	{r4, pc}
 8014bae:	bf00      	nop
 8014bb0:	200137cc 	.word	0x200137cc
 8014bb4:	200137c8 	.word	0x200137c8

08014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8014bb8:	4b08      	ldr	r3, [pc, #32]	; (8014bdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8014bba:	781b      	ldrb	r3, [r3, #0]
 8014bbc:	2b01      	cmp	r3, #1
 8014bbe:	d10c      	bne.n	8014bda <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8014bc0:	8803      	ldrh	r3, [r0, #0]
 8014bc2:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8014bc6:	8842      	ldrh	r2, [r0, #2]
 8014bc8:	8002      	strh	r2, [r0, #0]
 8014bca:	185a      	adds	r2, r3, r1
 8014bcc:	4b04      	ldr	r3, [pc, #16]	; (8014be0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8014bce:	881b      	ldrh	r3, [r3, #0]
 8014bd0:	1a9b      	subs	r3, r3, r2
 8014bd2:	8043      	strh	r3, [r0, #2]
 8014bd4:	88c3      	ldrh	r3, [r0, #6]
 8014bd6:	8083      	strh	r3, [r0, #4]
 8014bd8:	80c1      	strh	r1, [r0, #6]
 8014bda:	4770      	bx	lr
 8014bdc:	200137cc 	.word	0x200137cc
 8014be0:	200137c8 	.word	0x200137c8

08014be4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8014be4:	b510      	push	{r4, lr}
 8014be6:	4b07      	ldr	r3, [pc, #28]	; (8014c04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8014be8:	781b      	ldrb	r3, [r3, #0]
 8014bea:	2b01      	cmp	r3, #1
 8014bec:	d108      	bne.n	8014c00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8014bee:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014bf2:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014bf6:	8003      	strh	r3, [r0, #0]
 8014bf8:	8893      	ldrh	r3, [r2, #4]
 8014bfa:	3b01      	subs	r3, #1
 8014bfc:	1b1b      	subs	r3, r3, r4
 8014bfe:	800b      	strh	r3, [r1, #0]
 8014c00:	bd10      	pop	{r4, pc}
 8014c02:	bf00      	nop
 8014c04:	200137cc 	.word	0x200137cc

08014c08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8014c08:	4b0b      	ldr	r3, [pc, #44]	; (8014c38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 8014c0a:	781b      	ldrb	r3, [r3, #0]
 8014c0c:	2b01      	cmp	r3, #1
 8014c0e:	d111      	bne.n	8014c34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8014c10:	680b      	ldr	r3, [r1, #0]
 8014c12:	ed90 7a00 	vldr	s14, [r0]
 8014c16:	6003      	str	r3, [r0, #0]
 8014c18:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8014c1c:	eddf 6a07 	vldr	s13, [pc, #28]	; 8014c3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8014c20:	ee07 3a90 	vmov	s15, r3
 8014c24:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014c28:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8014c2c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014c30:	edc1 7a00 	vstr	s15, [r1]
 8014c34:	4770      	bx	lr
 8014c36:	bf00      	nop
 8014c38:	200137cc 	.word	0x200137cc
 8014c3c:	38d1b717 	.word	0x38d1b717

08014c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8014c40:	b510      	push	{r4, lr}
 8014c42:	4b0a      	ldr	r3, [pc, #40]	; (8014c6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8014c44:	781b      	ldrb	r3, [r3, #0]
 8014c46:	2b01      	cmp	r3, #1
 8014c48:	460a      	mov	r2, r1
 8014c4a:	d10d      	bne.n	8014c68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8014c4c:	8881      	ldrh	r1, [r0, #4]
 8014c4e:	8803      	ldrh	r3, [r0, #0]
 8014c50:	440b      	add	r3, r1
 8014c52:	4601      	mov	r1, r0
 8014c54:	3b01      	subs	r3, #1
 8014c56:	f821 3b02 	strh.w	r3, [r1], #2
 8014c5a:	f7ff ffc3 	bl	8014be4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8014c5e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014c62:	88c2      	ldrh	r2, [r0, #6]
 8014c64:	8082      	strh	r2, [r0, #4]
 8014c66:	80c3      	strh	r3, [r0, #6]
 8014c68:	bd10      	pop	{r4, pc}
 8014c6a:	bf00      	nop
 8014c6c:	200137cc 	.word	0x200137cc

08014c70 <_ZN8touchgfx11Application13requestRedrawEv>:
 8014c70:	4b06      	ldr	r3, [pc, #24]	; (8014c8c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8014c72:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014c76:	4b06      	ldr	r3, [pc, #24]	; (8014c90 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8014c78:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8014c7c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014c80:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8014c84:	2100      	movs	r1, #0
 8014c86:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8014c8a:	4770      	bx	lr
 8014c8c:	200137c8 	.word	0x200137c8
 8014c90:	200137ca 	.word	0x200137ca

08014c94 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8014c94:	4b03      	ldr	r3, [pc, #12]	; (8014ca4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8014c96:	6818      	ldr	r0, [r3, #0]
 8014c98:	b110      	cbz	r0, 8014ca0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8014c9a:	6803      	ldr	r3, [r0, #0]
 8014c9c:	699b      	ldr	r3, [r3, #24]
 8014c9e:	4718      	bx	r3
 8014ca0:	4770      	bx	lr
 8014ca2:	bf00      	nop
 8014ca4:	20013818 	.word	0x20013818

08014ca8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8014ca8:	4770      	bx	lr
	...

08014cac <_ZN8touchgfx11Application4drawEv>:
 8014cac:	b507      	push	{r0, r1, r2, lr}
 8014cae:	4b09      	ldr	r3, [pc, #36]	; (8014cd4 <_ZN8touchgfx11Application4drawEv+0x28>)
 8014cb0:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014cb4:	4b08      	ldr	r3, [pc, #32]	; (8014cd8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8014cb6:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014cba:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014cbe:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014cc2:	6803      	ldr	r3, [r0, #0]
 8014cc4:	2100      	movs	r1, #0
 8014cc6:	9100      	str	r1, [sp, #0]
 8014cc8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8014cca:	4669      	mov	r1, sp
 8014ccc:	4798      	blx	r3
 8014cce:	b003      	add	sp, #12
 8014cd0:	f85d fb04 	ldr.w	pc, [sp], #4
 8014cd4:	200137c8 	.word	0x200137c8
 8014cd8:	200137ca 	.word	0x200137ca

08014cdc <_ZN8touchgfx11Application10invalidateEv>:
 8014cdc:	4b09      	ldr	r3, [pc, #36]	; (8014d04 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8014cde:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014ce2:	4b09      	ldr	r3, [pc, #36]	; (8014d08 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8014ce4:	b082      	sub	sp, #8
 8014ce6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014cea:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014cee:	2100      	movs	r1, #0
 8014cf0:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014cf4:	9100      	str	r1, [sp, #0]
 8014cf6:	6803      	ldr	r3, [r0, #0]
 8014cf8:	aa02      	add	r2, sp, #8
 8014cfa:	e912 0006 	ldmdb	r2, {r1, r2}
 8014cfe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8014d00:	b002      	add	sp, #8
 8014d02:	4718      	bx	r3
 8014d04:	200137c8 	.word	0x200137c8
 8014d08:	200137ca 	.word	0x200137ca

08014d0c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8014d0c:	4b03      	ldr	r3, [pc, #12]	; (8014d1c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8014d0e:	6818      	ldr	r0, [r3, #0]
 8014d10:	b110      	cbz	r0, 8014d18 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8014d12:	6803      	ldr	r3, [r0, #0]
 8014d14:	69db      	ldr	r3, [r3, #28]
 8014d16:	4718      	bx	r3
 8014d18:	4770      	bx	lr
 8014d1a:	bf00      	nop
 8014d1c:	20013818 	.word	0x20013818

08014d20 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8014d20:	4b03      	ldr	r3, [pc, #12]	; (8014d30 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8014d22:	6818      	ldr	r0, [r3, #0]
 8014d24:	b110      	cbz	r0, 8014d2c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8014d26:	6803      	ldr	r3, [r0, #0]
 8014d28:	6a1b      	ldr	r3, [r3, #32]
 8014d2a:	4718      	bx	r3
 8014d2c:	4770      	bx	lr
 8014d2e:	bf00      	nop
 8014d30:	20013818 	.word	0x20013818

08014d34 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8014d34:	2300      	movs	r3, #0
 8014d36:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8014d3a:	4770      	bx	lr

08014d3c <_ZN8touchgfx11Application14handleKeyEventEh>:
 8014d3c:	4b03      	ldr	r3, [pc, #12]	; (8014d4c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8014d3e:	6818      	ldr	r0, [r3, #0]
 8014d40:	b110      	cbz	r0, 8014d48 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8014d42:	6803      	ldr	r3, [r0, #0]
 8014d44:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014d46:	4718      	bx	r3
 8014d48:	4770      	bx	lr
 8014d4a:	bf00      	nop
 8014d4c:	20013818 	.word	0x20013818

08014d50 <_ZN8touchgfx11ApplicationD1Ev>:
 8014d50:	4770      	bx	lr

08014d52 <_ZN8touchgfx11ApplicationD0Ev>:
 8014d52:	b510      	push	{r4, lr}
 8014d54:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8014d58:	4604      	mov	r4, r0
 8014d5a:	f012 fe40 	bl	80279de <_ZdlPvj>
 8014d5e:	4620      	mov	r0, r4
 8014d60:	bd10      	pop	{r4, pc}

08014d62 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8014d62:	b510      	push	{r4, lr}
 8014d64:	f9b1 4000 	ldrsh.w	r4, [r1]
 8014d68:	888a      	ldrh	r2, [r1, #4]
 8014d6a:	f9b0 3000 	ldrsh.w	r3, [r0]
 8014d6e:	4422      	add	r2, r4
 8014d70:	b212      	sxth	r2, r2
 8014d72:	4293      	cmp	r3, r2
 8014d74:	da15      	bge.n	8014da2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014d76:	8882      	ldrh	r2, [r0, #4]
 8014d78:	4413      	add	r3, r2
 8014d7a:	b21b      	sxth	r3, r3
 8014d7c:	429c      	cmp	r4, r3
 8014d7e:	da10      	bge.n	8014da2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014d80:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8014d84:	88c9      	ldrh	r1, [r1, #6]
 8014d86:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014d8a:	4419      	add	r1, r3
 8014d8c:	b209      	sxth	r1, r1
 8014d8e:	428a      	cmp	r2, r1
 8014d90:	da07      	bge.n	8014da2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014d92:	88c0      	ldrh	r0, [r0, #6]
 8014d94:	4410      	add	r0, r2
 8014d96:	b200      	sxth	r0, r0
 8014d98:	4283      	cmp	r3, r0
 8014d9a:	bfac      	ite	ge
 8014d9c:	2000      	movge	r0, #0
 8014d9e:	2001      	movlt	r0, #1
 8014da0:	bd10      	pop	{r4, pc}
 8014da2:	2000      	movs	r0, #0
 8014da4:	e7fc      	b.n	8014da0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08014da6 <_ZN8touchgfx4Rect10restrictToEss>:
 8014da6:	f9b0 3000 	ldrsh.w	r3, [r0]
 8014daa:	2b00      	cmp	r3, #0
 8014dac:	b510      	push	{r4, lr}
 8014dae:	da04      	bge.n	8014dba <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8014db0:	8884      	ldrh	r4, [r0, #4]
 8014db2:	4423      	add	r3, r4
 8014db4:	8083      	strh	r3, [r0, #4]
 8014db6:	2300      	movs	r3, #0
 8014db8:	8003      	strh	r3, [r0, #0]
 8014dba:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014dbe:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014dc2:	1b09      	subs	r1, r1, r4
 8014dc4:	428b      	cmp	r3, r1
 8014dc6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8014dca:	bfc8      	it	gt
 8014dcc:	8081      	strhgt	r1, [r0, #4]
 8014dce:	2b00      	cmp	r3, #0
 8014dd0:	da04      	bge.n	8014ddc <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8014dd2:	88c1      	ldrh	r1, [r0, #6]
 8014dd4:	440b      	add	r3, r1
 8014dd6:	80c3      	strh	r3, [r0, #6]
 8014dd8:	2300      	movs	r3, #0
 8014dda:	8043      	strh	r3, [r0, #2]
 8014ddc:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8014de0:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8014de4:	1a52      	subs	r2, r2, r1
 8014de6:	4293      	cmp	r3, r2
 8014de8:	bfc8      	it	gt
 8014dea:	80c2      	strhgt	r2, [r0, #6]
 8014dec:	bd10      	pop	{r4, pc}
	...

08014df0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8014df0:	b510      	push	{r4, lr}
 8014df2:	4b10      	ldr	r3, [pc, #64]	; (8014e34 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8014df4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014df8:	4b0f      	ldr	r3, [pc, #60]	; (8014e38 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8014dfa:	460c      	mov	r4, r1
 8014dfc:	4620      	mov	r0, r4
 8014dfe:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014e02:	f7ff ffd0 	bl	8014da6 <_ZN8touchgfx4Rect10restrictToEss>
 8014e06:	4b0d      	ldr	r3, [pc, #52]	; (8014e3c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8014e08:	6818      	ldr	r0, [r3, #0]
 8014e0a:	b190      	cbz	r0, 8014e32 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8014e0c:	6803      	ldr	r3, [r0, #0]
 8014e0e:	4621      	mov	r1, r4
 8014e10:	689b      	ldr	r3, [r3, #8]
 8014e12:	4798      	blx	r3
 8014e14:	4b0a      	ldr	r3, [pc, #40]	; (8014e40 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8014e16:	6818      	ldr	r0, [r3, #0]
 8014e18:	b118      	cbz	r0, 8014e22 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8014e1a:	6803      	ldr	r3, [r0, #0]
 8014e1c:	4621      	mov	r1, r4
 8014e1e:	689b      	ldr	r3, [r3, #8]
 8014e20:	4798      	blx	r3
 8014e22:	4b08      	ldr	r3, [pc, #32]	; (8014e44 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8014e24:	6818      	ldr	r0, [r3, #0]
 8014e26:	6803      	ldr	r3, [r0, #0]
 8014e28:	4621      	mov	r1, r4
 8014e2a:	69db      	ldr	r3, [r3, #28]
 8014e2c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014e30:	4718      	bx	r3
 8014e32:	bd10      	pop	{r4, pc}
 8014e34:	200137ca 	.word	0x200137ca
 8014e38:	200137c8 	.word	0x200137c8
 8014e3c:	20013818 	.word	0x20013818
 8014e40:	20013814 	.word	0x20013814
 8014e44:	200137d4 	.word	0x200137d4

08014e48 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8014e48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014e4a:	4606      	mov	r6, r0
 8014e4c:	4608      	mov	r0, r1
 8014e4e:	460f      	mov	r7, r1
 8014e50:	f7fa ff97 	bl	800fd82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014e54:	b9e8      	cbnz	r0, 8014e92 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014e56:	f9b7 5000 	ldrsh.w	r5, [r7]
 8014e5a:	f9b6 4000 	ldrsh.w	r4, [r6]
 8014e5e:	42a5      	cmp	r5, r4
 8014e60:	db17      	blt.n	8014e92 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014e62:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8014e66:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8014e6a:	429a      	cmp	r2, r3
 8014e6c:	db11      	blt.n	8014e92 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014e6e:	88b9      	ldrh	r1, [r7, #4]
 8014e70:	440d      	add	r5, r1
 8014e72:	88b1      	ldrh	r1, [r6, #4]
 8014e74:	440c      	add	r4, r1
 8014e76:	b22d      	sxth	r5, r5
 8014e78:	b224      	sxth	r4, r4
 8014e7a:	42a5      	cmp	r5, r4
 8014e7c:	dc09      	bgt.n	8014e92 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014e7e:	88f8      	ldrh	r0, [r7, #6]
 8014e80:	4410      	add	r0, r2
 8014e82:	88f2      	ldrh	r2, [r6, #6]
 8014e84:	4413      	add	r3, r2
 8014e86:	b200      	sxth	r0, r0
 8014e88:	b21b      	sxth	r3, r3
 8014e8a:	4298      	cmp	r0, r3
 8014e8c:	bfcc      	ite	gt
 8014e8e:	2000      	movgt	r0, #0
 8014e90:	2001      	movle	r0, #1
 8014e92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014e94 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8014e94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014e96:	4604      	mov	r4, r0
 8014e98:	4608      	mov	r0, r1
 8014e9a:	460d      	mov	r5, r1
 8014e9c:	f7fa ff71 	bl	800fd82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014ea0:	b978      	cbnz	r0, 8014ec2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8014ea2:	4620      	mov	r0, r4
 8014ea4:	f7fa ff6d 	bl	800fd82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014ea8:	f9b5 6000 	ldrsh.w	r6, [r5]
 8014eac:	b150      	cbz	r0, 8014ec4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8014eae:	8026      	strh	r6, [r4, #0]
 8014eb0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8014eb4:	8063      	strh	r3, [r4, #2]
 8014eb6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8014eba:	80a3      	strh	r3, [r4, #4]
 8014ebc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8014ec0:	80e3      	strh	r3, [r4, #6]
 8014ec2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014ec4:	f9b4 1000 	ldrsh.w	r1, [r4]
 8014ec8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014ecc:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8014ed0:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8014ed4:	88ed      	ldrh	r5, [r5, #6]
 8014ed6:	42b1      	cmp	r1, r6
 8014ed8:	460f      	mov	r7, r1
 8014eda:	bfa8      	it	ge
 8014edc:	4637      	movge	r7, r6
 8014ede:	4293      	cmp	r3, r2
 8014ee0:	4618      	mov	r0, r3
 8014ee2:	4466      	add	r6, ip
 8014ee4:	bfa8      	it	ge
 8014ee6:	4610      	movge	r0, r2
 8014ee8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8014eec:	8027      	strh	r7, [r4, #0]
 8014eee:	442a      	add	r2, r5
 8014ef0:	88e5      	ldrh	r5, [r4, #6]
 8014ef2:	8060      	strh	r0, [r4, #2]
 8014ef4:	4461      	add	r1, ip
 8014ef6:	442b      	add	r3, r5
 8014ef8:	b236      	sxth	r6, r6
 8014efa:	b209      	sxth	r1, r1
 8014efc:	b212      	sxth	r2, r2
 8014efe:	b21b      	sxth	r3, r3
 8014f00:	428e      	cmp	r6, r1
 8014f02:	bfac      	ite	ge
 8014f04:	ebc7 0106 	rsbge	r1, r7, r6
 8014f08:	ebc7 0101 	rsblt	r1, r7, r1
 8014f0c:	429a      	cmp	r2, r3
 8014f0e:	bfac      	ite	ge
 8014f10:	ebc0 0202 	rsbge	r2, r0, r2
 8014f14:	ebc0 0203 	rsblt	r2, r0, r3
 8014f18:	80a1      	strh	r1, [r4, #4]
 8014f1a:	80e2      	strh	r2, [r4, #6]
 8014f1c:	e7d1      	b.n	8014ec2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08014f20 <_ZN8touchgfx11Application11getInstanceEv>:
 8014f20:	4b01      	ldr	r3, [pc, #4]	; (8014f28 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8014f22:	6818      	ldr	r0, [r3, #0]
 8014f24:	4770      	bx	lr
 8014f26:	bf00      	nop
 8014f28:	20013828 	.word	0x20013828

08014f2c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8014f2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014f2e:	4b10      	ldr	r3, [pc, #64]	; (8014f70 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8014f30:	781b      	ldrb	r3, [r3, #0]
 8014f32:	4605      	mov	r5, r0
 8014f34:	b1d3      	cbz	r3, 8014f6c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8014f36:	4b0f      	ldr	r3, [pc, #60]	; (8014f74 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8014f38:	4f0f      	ldr	r7, [pc, #60]	; (8014f78 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8014f3a:	881c      	ldrh	r4, [r3, #0]
 8014f3c:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8014f40:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8014f44:	42a3      	cmp	r3, r4
 8014f46:	d90e      	bls.n	8014f66 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8014f48:	683b      	ldr	r3, [r7, #0]
 8014f4a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8014f4e:	b10a      	cbz	r2, 8014f54 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8014f50:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8014f52:	b900      	cbnz	r0, 8014f56 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8014f54:	6898      	ldr	r0, [r3, #8]
 8014f56:	6803      	ldr	r3, [r0, #0]
 8014f58:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8014f5c:	69db      	ldr	r3, [r3, #28]
 8014f5e:	3401      	adds	r4, #1
 8014f60:	4798      	blx	r3
 8014f62:	b2a4      	uxth	r4, r4
 8014f64:	e7ec      	b.n	8014f40 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8014f66:	2300      	movs	r3, #0
 8014f68:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8014f6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014f6e:	bf00      	nop
 8014f70:	200137d2 	.word	0x200137d2
 8014f74:	20000088 	.word	0x20000088
 8014f78:	200137d4 	.word	0x200137d4

08014f7c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8014f7c:	b510      	push	{r4, lr}
 8014f7e:	2300      	movs	r3, #0
 8014f80:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8014f84:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8014f88:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8014f8c:	4604      	mov	r4, r0
 8014f8e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8014f92:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8014f96:	429a      	cmp	r2, r3
 8014f98:	d90e      	bls.n	8014fb8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8014f9a:	18e2      	adds	r2, r4, r3
 8014f9c:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8014fa0:	b122      	cbz	r2, 8014fac <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8014fa2:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8014fa6:	6803      	ldr	r3, [r0, #0]
 8014fa8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014faa:	4798      	blx	r3
 8014fac:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8014fb0:	3301      	adds	r3, #1
 8014fb2:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8014fb6:	e7ea      	b.n	8014f8e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8014fb8:	bd10      	pop	{r4, pc}

08014fba <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8014fba:	b530      	push	{r4, r5, lr}
 8014fbc:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8014fc0:	2200      	movs	r2, #0
 8014fc2:	b293      	uxth	r3, r2
 8014fc4:	429d      	cmp	r5, r3
 8014fc6:	d90e      	bls.n	8014fe6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8014fc8:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8014fcc:	428b      	cmp	r3, r1
 8014fce:	d10b      	bne.n	8014fe8 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8014fd0:	1884      	adds	r4, r0, r2
 8014fd2:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8014fd6:	b13b      	cbz	r3, 8014fe8 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8014fd8:	3b01      	subs	r3, #1
 8014fda:	b2db      	uxtb	r3, r3
 8014fdc:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8014fe0:	b90b      	cbnz	r3, 8014fe6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8014fe2:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8014fe6:	bd30      	pop	{r4, r5, pc}
 8014fe8:	3201      	adds	r2, #1
 8014fea:	e7ea      	b.n	8014fc2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08014fec <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8014fec:	2300      	movs	r3, #0
 8014fee:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8014ff2:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8014ff6:	30a4      	adds	r0, #164	; 0xa4
 8014ff8:	f802 3b01 	strb.w	r3, [r2], #1
 8014ffc:	4282      	cmp	r2, r0
 8014ffe:	d1fb      	bne.n	8014ff8 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8015000:	4770      	bx	lr
	...

08015004 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8015004:	b570      	push	{r4, r5, r6, lr}
 8015006:	4c0b      	ldr	r4, [pc, #44]	; (8015034 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8015008:	4605      	mov	r5, r0
 801500a:	6820      	ldr	r0, [r4, #0]
 801500c:	460e      	mov	r6, r1
 801500e:	b110      	cbz	r0, 8015016 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8015010:	6803      	ldr	r3, [r0, #0]
 8015012:	695b      	ldr	r3, [r3, #20]
 8015014:	4798      	blx	r3
 8015016:	1d28      	adds	r0, r5, #4
 8015018:	f7ff ffe8 	bl	8014fec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801501c:	6026      	str	r6, [r4, #0]
 801501e:	6833      	ldr	r3, [r6, #0]
 8015020:	4630      	mov	r0, r6
 8015022:	68db      	ldr	r3, [r3, #12]
 8015024:	4798      	blx	r3
 8015026:	682b      	ldr	r3, [r5, #0]
 8015028:	4628      	mov	r0, r5
 801502a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801502c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015030:	4718      	bx	r3
 8015032:	bf00      	nop
 8015034:	20013818 	.word	0x20013818

08015038 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8015038:	2300      	movs	r3, #0
 801503a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 801503e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8015042:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015044:	461a      	mov	r2, r3
 8015046:	461c      	mov	r4, r3
 8015048:	461d      	mov	r5, r3
 801504a:	459c      	cmp	ip, r3
 801504c:	dd1a      	ble.n	8015084 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 801504e:	18c6      	adds	r6, r0, r3
 8015050:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8015054:	b16e      	cbz	r6, 8015072 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8015056:	429a      	cmp	r2, r3
 8015058:	d008      	beq.n	801506c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 801505a:	fa1f fe82 	uxth.w	lr, r2
 801505e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8015062:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8015066:	1887      	adds	r7, r0, r2
 8015068:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 801506c:	3201      	adds	r2, #1
 801506e:	3301      	adds	r3, #1
 8015070:	e7eb      	b.n	801504a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8015072:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8015076:	4299      	cmp	r1, r3
 8015078:	bfa8      	it	ge
 801507a:	3501      	addge	r5, #1
 801507c:	429e      	cmp	r6, r3
 801507e:	bfc8      	it	gt
 8015080:	3401      	addgt	r4, #1
 8015082:	e7f4      	b.n	801506e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8015084:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8015088:	1b49      	subs	r1, r1, r5
 801508a:	1b1b      	subs	r3, r3, r4
 801508c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8015090:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8015094:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015098:	4293      	cmp	r3, r2
 801509a:	dd03      	ble.n	80150a4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 801509c:	3b01      	subs	r3, #1
 801509e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 80150a2:	e7f7      	b.n	8015094 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 80150a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080150a8 <_ZN8touchgfx11Application15handleTickEventEv>:
 80150a8:	b570      	push	{r4, r5, r6, lr}
 80150aa:	4d16      	ldr	r5, [pc, #88]	; (8015104 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 80150ac:	4604      	mov	r4, r0
 80150ae:	6828      	ldr	r0, [r5, #0]
 80150b0:	b140      	cbz	r0, 80150c4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80150b2:	7a03      	ldrb	r3, [r0, #8]
 80150b4:	b933      	cbnz	r3, 80150c4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80150b6:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 80150ba:	6803      	ldr	r3, [r0, #0]
 80150bc:	689b      	ldr	r3, [r3, #8]
 80150be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80150c2:	4718      	bx	r3
 80150c4:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 80150c8:	4e0f      	ldr	r6, [pc, #60]	; (8015108 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 80150ca:	b973      	cbnz	r3, 80150ea <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80150cc:	b168      	cbz	r0, 80150ea <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80150ce:	7a03      	ldrb	r3, [r0, #8]
 80150d0:	b15b      	cbz	r3, 80150ea <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80150d2:	6830      	ldr	r0, [r6, #0]
 80150d4:	b110      	cbz	r0, 80150dc <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80150d6:	6803      	ldr	r3, [r0, #0]
 80150d8:	691b      	ldr	r3, [r3, #16]
 80150da:	4798      	blx	r3
 80150dc:	6828      	ldr	r0, [r5, #0]
 80150de:	6803      	ldr	r3, [r0, #0]
 80150e0:	68db      	ldr	r3, [r3, #12]
 80150e2:	4798      	blx	r3
 80150e4:	2301      	movs	r3, #1
 80150e6:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 80150ea:	3404      	adds	r4, #4
 80150ec:	4620      	mov	r0, r4
 80150ee:	f7ff ff45 	bl	8014f7c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 80150f2:	4620      	mov	r0, r4
 80150f4:	f7ff ffa0 	bl	8015038 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80150f8:	6830      	ldr	r0, [r6, #0]
 80150fa:	b110      	cbz	r0, 8015102 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 80150fc:	6803      	ldr	r3, [r0, #0]
 80150fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015100:	e7dd      	b.n	80150be <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8015102:	bd70      	pop	{r4, r5, r6, pc}
 8015104:	2001381c 	.word	0x2001381c
 8015108:	20013818 	.word	0x20013818

0801510c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 801510c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801510e:	2300      	movs	r3, #0
 8015110:	4604      	mov	r4, r0
 8015112:	460d      	mov	r5, r1
 8015114:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8015118:	4618      	mov	r0, r3
 801511a:	b29a      	uxth	r2, r3
 801511c:	4291      	cmp	r1, r2
 801511e:	d911      	bls.n	8015144 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8015120:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8015124:	18e6      	adds	r6, r4, r3
 8015126:	42af      	cmp	r7, r5
 8015128:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 801512c:	d105      	bne.n	801513a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 801512e:	2aff      	cmp	r2, #255	; 0xff
 8015130:	d002      	beq.n	8015138 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8015132:	3201      	adds	r2, #1
 8015134:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8015138:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801513a:	2a00      	cmp	r2, #0
 801513c:	bf08      	it	eq
 801513e:	2001      	moveq	r0, #1
 8015140:	3301      	adds	r3, #1
 8015142:	e7ea      	b.n	801511a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8015144:	b120      	cbz	r0, 8015150 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8015146:	2920      	cmp	r1, #32
 8015148:	d102      	bne.n	8015150 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 801514a:	4620      	mov	r0, r4
 801514c:	f7ff ff74 	bl	8015038 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015150:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8015154:	2b1f      	cmp	r3, #31
 8015156:	d8ef      	bhi.n	8015138 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8015158:	18e2      	adds	r2, r4, r3
 801515a:	2101      	movs	r1, #1
 801515c:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8015160:	185a      	adds	r2, r3, r1
 8015162:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8015166:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801516a:	e7e5      	b.n	8015138 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

0801516c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 801516c:	4603      	mov	r3, r0
 801516e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8015172:	2200      	movs	r2, #0
 8015174:	801a      	strh	r2, [r3, #0]
 8015176:	805a      	strh	r2, [r3, #2]
 8015178:	809a      	strh	r2, [r3, #4]
 801517a:	80da      	strh	r2, [r3, #6]
 801517c:	3308      	adds	r3, #8
 801517e:	428b      	cmp	r3, r1
 8015180:	d1f8      	bne.n	8015174 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8015182:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8015186:	4770      	bx	lr

08015188 <_ZN8touchgfx11ApplicationC1Ev>:
 8015188:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801518a:	4606      	mov	r6, r0
 801518c:	4b1c      	ldr	r3, [pc, #112]	; (8015200 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 801518e:	f846 3b04 	str.w	r3, [r6], #4
 8015192:	4604      	mov	r4, r0
 8015194:	2500      	movs	r5, #0
 8015196:	22a8      	movs	r2, #168	; 0xa8
 8015198:	2100      	movs	r1, #0
 801519a:	4630      	mov	r0, r6
 801519c:	f013 fc15 	bl	80289ca <memset>
 80151a0:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 80151a4:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80151a8:	f7ff ffe0 	bl	801516c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80151ac:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80151b0:	f7ff ffdc 	bl	801516c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80151b4:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80151b8:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80151bc:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 80151c0:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 80151c4:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 80151c8:	490e      	ldr	r1, [pc, #56]	; (8015204 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80151ca:	480f      	ldr	r0, [pc, #60]	; (8015208 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80151cc:	4f0f      	ldr	r7, [pc, #60]	; (801520c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 80151ce:	f010 fbf5 	bl	80259bc <CRC_Lock>
 80151d2:	4b0f      	ldr	r3, [pc, #60]	; (8015210 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 80151d4:	b158      	cbz	r0, 80151ee <_ZN8touchgfx11ApplicationC1Ev+0x66>
 80151d6:	801d      	strh	r5, [r3, #0]
 80151d8:	4a0e      	ldr	r2, [pc, #56]	; (8015214 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 80151da:	2300      	movs	r3, #0
 80151dc:	6013      	str	r3, [r2, #0]
 80151de:	4a0e      	ldr	r2, [pc, #56]	; (8015218 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 80151e0:	603b      	str	r3, [r7, #0]
 80151e2:	4630      	mov	r0, r6
 80151e4:	6013      	str	r3, [r2, #0]
 80151e6:	f7ff ff01 	bl	8014fec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80151ea:	4620      	mov	r0, r4
 80151ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80151ee:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80151f2:	2002      	movs	r0, #2
 80151f4:	801a      	strh	r2, [r3, #0]
 80151f6:	6038      	str	r0, [r7, #0]
 80151f8:	f001 fb4a 	bl	8016890 <_ZN8touchgfx6Screen4drawEv>
 80151fc:	e7ec      	b.n	80151d8 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 80151fe:	bf00      	nop
 8015200:	0802cdcc 	.word	0x0802cdcc
 8015204:	b5e8b5cd 	.word	0xb5e8b5cd
 8015208:	f407a5c2 	.word	0xf407a5c2
 801520c:	20013818 	.word	0x20013818
 8015210:	20000088 	.word	0x20000088
 8015214:	20013828 	.word	0x20013828
 8015218:	2001381c 	.word	0x2001381c

0801521c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801521c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8015220:	3b01      	subs	r3, #1
 8015222:	b29b      	uxth	r3, r3
 8015224:	428b      	cmp	r3, r1
 8015226:	b510      	push	{r4, lr}
 8015228:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 801522c:	d908      	bls.n	8015240 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801522e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8015232:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8015236:	681a      	ldr	r2, [r3, #0]
 8015238:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801523c:	685a      	ldr	r2, [r3, #4]
 801523e:	6062      	str	r2, [r4, #4]
 8015240:	bd10      	pop	{r4, pc}
	...

08015244 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8015244:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015248:	4b8f      	ldr	r3, [pc, #572]	; (8015488 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 801524a:	b08f      	sub	sp, #60	; 0x3c
 801524c:	ac0a      	add	r4, sp, #40	; 0x28
 801524e:	e884 0006 	stmia.w	r4, {r1, r2}
 8015252:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015256:	4b8d      	ldr	r3, [pc, #564]	; (801548c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8015258:	4683      	mov	fp, r0
 801525a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801525e:	4620      	mov	r0, r4
 8015260:	f7ff fda1 	bl	8014da6 <_ZN8touchgfx4Rect10restrictToEss>
 8015264:	4620      	mov	r0, r4
 8015266:	f7fa fd8c 	bl	800fd82 <_ZNK8touchgfx4Rect7isEmptyEv>
 801526a:	2800      	cmp	r0, #0
 801526c:	d16a      	bne.n	8015344 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801526e:	9403      	str	r4, [sp, #12]
 8015270:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8015274:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8015278:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 801527c:	35a4      	adds	r5, #164	; 0xa4
 801527e:	9301      	str	r3, [sp, #4]
 8015280:	b15c      	cbz	r4, 801529a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8015282:	4629      	mov	r1, r5
 8015284:	9803      	ldr	r0, [sp, #12]
 8015286:	f7ff fddf 	bl	8014e48 <_ZNK8touchgfx4Rect8includesERKS0_>
 801528a:	3c01      	subs	r4, #1
 801528c:	b118      	cbz	r0, 8015296 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 801528e:	b2a1      	uxth	r1, r4
 8015290:	9801      	ldr	r0, [sp, #4]
 8015292:	f7ff ffc3 	bl	801521c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015296:	3d08      	subs	r5, #8
 8015298:	e7f2      	b.n	8015280 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 801529a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 801529e:	f8cd a010 	str.w	sl, [sp, #16]
 80152a2:	f10a 33ff 	add.w	r3, sl, #4294967295
 80152a6:	9302      	str	r3, [sp, #8]
 80152a8:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80152ac:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 80152b0:	9306      	str	r3, [sp, #24]
 80152b2:	445c      	add	r4, fp
 80152b4:	2500      	movs	r5, #0
 80152b6:	4626      	mov	r6, r4
 80152b8:	f8cd a014 	str.w	sl, [sp, #20]
 80152bc:	462f      	mov	r7, r5
 80152be:	9b05      	ldr	r3, [sp, #20]
 80152c0:	2b00      	cmp	r3, #0
 80152c2:	d073      	beq.n	80153ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80152c4:	9903      	ldr	r1, [sp, #12]
 80152c6:	4630      	mov	r0, r6
 80152c8:	f7ff fd4b 	bl	8014d62 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80152cc:	b350      	cbz	r0, 8015324 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80152ce:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 80152d2:	f9b6 c000 	ldrsh.w	ip, [r6]
 80152d6:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 80152da:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 80152de:	45e6      	cmp	lr, ip
 80152e0:	db33      	blt.n	801534a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80152e2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80152e6:	88b3      	ldrh	r3, [r6, #4]
 80152e8:	4472      	add	r2, lr
 80152ea:	4463      	add	r3, ip
 80152ec:	b212      	sxth	r2, r2
 80152ee:	b21b      	sxth	r3, r3
 80152f0:	429a      	cmp	r2, r3
 80152f2:	dc2a      	bgt.n	801534a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80152f4:	88f3      	ldrh	r3, [r6, #6]
 80152f6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80152fa:	fa1f f289 	uxth.w	r2, r9
 80152fe:	4413      	add	r3, r2
 8015300:	b29b      	uxth	r3, r3
 8015302:	45c8      	cmp	r8, r9
 8015304:	fa1f fc88 	uxth.w	ip, r8
 8015308:	fa0f fe83 	sxth.w	lr, r3
 801530c:	db0f      	blt.n	801532e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801530e:	eba3 030c 	sub.w	r3, r3, ip
 8015312:	1ac9      	subs	r1, r1, r3
 8015314:	b209      	sxth	r1, r1
 8015316:	2900      	cmp	r1, #0
 8015318:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801531c:	dd12      	ble.n	8015344 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801531e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8015322:	4605      	mov	r5, r0
 8015324:	9b05      	ldr	r3, [sp, #20]
 8015326:	3b01      	subs	r3, #1
 8015328:	9305      	str	r3, [sp, #20]
 801532a:	3e08      	subs	r6, #8
 801532c:	e7c7      	b.n	80152be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 801532e:	4461      	add	r1, ip
 8015330:	b209      	sxth	r1, r1
 8015332:	4571      	cmp	r1, lr
 8015334:	dc38      	bgt.n	80153a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015336:	eba2 020c 	sub.w	r2, r2, ip
 801533a:	b212      	sxth	r2, r2
 801533c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8015340:	2a00      	cmp	r2, #0
 8015342:	dcee      	bgt.n	8015322 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8015344:	b00f      	add	sp, #60	; 0x3c
 8015346:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801534a:	45c8      	cmp	r8, r9
 801534c:	db2c      	blt.n	80153a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801534e:	88f3      	ldrh	r3, [r6, #6]
 8015350:	4499      	add	r9, r3
 8015352:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8015356:	4498      	add	r8, r3
 8015358:	fa0f f989 	sxth.w	r9, r9
 801535c:	fa0f f888 	sxth.w	r8, r8
 8015360:	45c1      	cmp	r9, r8
 8015362:	db21      	blt.n	80153a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015364:	88b3      	ldrh	r3, [r6, #4]
 8015366:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801536a:	fa1f f28c 	uxth.w	r2, ip
 801536e:	4413      	add	r3, r2
 8015370:	b29b      	uxth	r3, r3
 8015372:	45e6      	cmp	lr, ip
 8015374:	fa1f f88e 	uxth.w	r8, lr
 8015378:	fa0f f983 	sxth.w	r9, r3
 801537c:	db0a      	blt.n	8015394 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 801537e:	eba3 0308 	sub.w	r3, r3, r8
 8015382:	1ac9      	subs	r1, r1, r3
 8015384:	b209      	sxth	r1, r1
 8015386:	2900      	cmp	r1, #0
 8015388:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 801538c:	ddda      	ble.n	8015344 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801538e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8015392:	e7c6      	b.n	8015322 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8015394:	4441      	add	r1, r8
 8015396:	b209      	sxth	r1, r1
 8015398:	4549      	cmp	r1, r9
 801539a:	dc05      	bgt.n	80153a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801539c:	eba2 0208 	sub.w	r2, r2, r8
 80153a0:	b212      	sxth	r2, r2
 80153a2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80153a6:	e7cb      	b.n	8015340 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80153a8:	4607      	mov	r7, r0
 80153aa:	e7bb      	b.n	8015324 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80153ac:	2d00      	cmp	r5, #0
 80153ae:	d181      	bne.n	80152b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 80153b0:	2f00      	cmp	r7, #0
 80153b2:	f000 81dd 	beq.w	8015770 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80153b6:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80153ba:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80153be:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 80153c2:	b2b3      	uxth	r3, r6
 80153c4:	9305      	str	r3, [sp, #20]
 80153c6:	9a05      	ldr	r2, [sp, #20]
 80153c8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80153cc:	4413      	add	r3, r2
 80153ce:	b2ba      	uxth	r2, r7
 80153d0:	4492      	add	sl, r2
 80153d2:	b29b      	uxth	r3, r3
 80153d4:	fa1f fa8a 	uxth.w	sl, sl
 80153d8:	fa0f f883 	sxth.w	r8, r3
 80153dc:	fa0f f98a 	sxth.w	r9, sl
 80153e0:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80153e4:	9b04      	ldr	r3, [sp, #16]
 80153e6:	2b00      	cmp	r3, #0
 80153e8:	d052      	beq.n	8015490 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 80153ea:	9903      	ldr	r1, [sp, #12]
 80153ec:	4620      	mov	r0, r4
 80153ee:	f7ff fcb8 	bl	8014d62 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80153f2:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 80153f6:	b1c0      	cbz	r0, 801542a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80153f8:	f9b4 e000 	ldrsh.w	lr, [r4]
 80153fc:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8015400:	4576      	cmp	r6, lr
 8015402:	dc22      	bgt.n	801544a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8015404:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015408:	44f4      	add	ip, lr
 801540a:	fa0f fc8c 	sxth.w	ip, ip
 801540e:	45e0      	cmp	r8, ip
 8015410:	db1b      	blt.n	801544a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8015412:	428f      	cmp	r7, r1
 8015414:	fa1f fc81 	uxth.w	ip, r1
 8015418:	88e1      	ldrh	r1, [r4, #6]
 801541a:	dc0d      	bgt.n	8015438 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801541c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8015420:	eba1 010c 	sub.w	r1, r1, ip
 8015424:	f8a4 9002 	strh.w	r9, [r4, #2]
 8015428:	80e1      	strh	r1, [r4, #6]
 801542a:	4628      	mov	r0, r5
 801542c:	9904      	ldr	r1, [sp, #16]
 801542e:	3901      	subs	r1, #1
 8015430:	9104      	str	r1, [sp, #16]
 8015432:	3c08      	subs	r4, #8
 8015434:	4605      	mov	r5, r0
 8015436:	e7d3      	b.n	80153e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8015438:	4461      	add	r1, ip
 801543a:	b209      	sxth	r1, r1
 801543c:	4549      	cmp	r1, r9
 801543e:	dcf5      	bgt.n	801542c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8015440:	eba2 0c0c 	sub.w	ip, r2, ip
 8015444:	f8a4 c006 	strh.w	ip, [r4, #6]
 8015448:	e7ef      	b.n	801542a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801544a:	428f      	cmp	r7, r1
 801544c:	dcee      	bgt.n	801542c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801544e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8015452:	4461      	add	r1, ip
 8015454:	b209      	sxth	r1, r1
 8015456:	4589      	cmp	r9, r1
 8015458:	dbe8      	blt.n	801542c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801545a:	4576      	cmp	r6, lr
 801545c:	fa1f fc8e 	uxth.w	ip, lr
 8015460:	88a1      	ldrh	r1, [r4, #4]
 8015462:	dc07      	bgt.n	8015474 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8015464:	eba3 0c0c 	sub.w	ip, r3, ip
 8015468:	eba1 010c 	sub.w	r1, r1, ip
 801546c:	f8a4 8000 	strh.w	r8, [r4]
 8015470:	80a1      	strh	r1, [r4, #4]
 8015472:	e7da      	b.n	801542a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015474:	4461      	add	r1, ip
 8015476:	b209      	sxth	r1, r1
 8015478:	4588      	cmp	r8, r1
 801547a:	dbd7      	blt.n	801542c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801547c:	9905      	ldr	r1, [sp, #20]
 801547e:	eba1 0c0c 	sub.w	ip, r1, ip
 8015482:	f8a4 c004 	strh.w	ip, [r4, #4]
 8015486:	e7d0      	b.n	801542a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015488:	200137ca 	.word	0x200137ca
 801548c:	200137c8 	.word	0x200137c8
 8015490:	2d00      	cmp	r5, #0
 8015492:	f000 816d 	beq.w	8015770 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015496:	9b06      	ldr	r3, [sp, #24]
 8015498:	445b      	add	r3, fp
 801549a:	461c      	mov	r4, r3
 801549c:	9b02      	ldr	r3, [sp, #8]
 801549e:	3301      	adds	r3, #1
 80154a0:	f000 8166 	beq.w	8015770 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80154a4:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 80154a8:	4629      	mov	r1, r5
 80154aa:	9803      	ldr	r0, [sp, #12]
 80154ac:	f7ff fccc 	bl	8014e48 <_ZNK8touchgfx4Rect8includesERKS0_>
 80154b0:	b120      	cbz	r0, 80154bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 80154b2:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80154b6:	9801      	ldr	r0, [sp, #4]
 80154b8:	f7ff feb0 	bl	801521c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80154bc:	9903      	ldr	r1, [sp, #12]
 80154be:	4628      	mov	r0, r5
 80154c0:	f7ff fc4f 	bl	8014d62 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80154c4:	2800      	cmp	r0, #0
 80154c6:	f000 809c 	beq.w	8015602 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80154ca:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 80154ce:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80154d2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80154d6:	9309      	str	r3, [sp, #36]	; 0x24
 80154d8:	fa1f f189 	uxth.w	r1, r9
 80154dc:	eb01 0c03 	add.w	ip, r1, r3
 80154e0:	fa1f fa8c 	uxth.w	sl, ip
 80154e4:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80154e8:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 80154ec:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 80154f0:	b283      	uxth	r3, r0
 80154f2:	eb03 050c 	add.w	r5, r3, ip
 80154f6:	b2ad      	uxth	r5, r5
 80154f8:	9505      	str	r5, [sp, #20]
 80154fa:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 80154fe:	9504      	str	r5, [sp, #16]
 8015500:	4548      	cmp	r0, r9
 8015502:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8015506:	f340 8099 	ble.w	801563c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801550a:	1a5b      	subs	r3, r3, r1
 801550c:	b29b      	uxth	r3, r3
 801550e:	4596      	cmp	lr, r2
 8015510:	fa0f f08a 	sxth.w	r0, sl
 8015514:	b21e      	sxth	r6, r3
 8015516:	dd2e      	ble.n	8015576 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8015518:	9f02      	ldr	r7, [sp, #8]
 801551a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 801551e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8015522:	9f04      	ldr	r7, [sp, #16]
 8015524:	1a3f      	subs	r7, r7, r0
 8015526:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 801552a:	fa1f fe8e 	uxth.w	lr, lr
 801552e:	b292      	uxth	r2, r2
 8015530:	ebae 0102 	sub.w	r1, lr, r2
 8015534:	44a6      	add	lr, r4
 8015536:	4402      	add	r2, r0
 8015538:	b289      	uxth	r1, r1
 801553a:	fa0f fe8e 	sxth.w	lr, lr
 801553e:	b212      	sxth	r2, r2
 8015540:	b20d      	sxth	r5, r1
 8015542:	ebae 0202 	sub.w	r2, lr, r2
 8015546:	436f      	muls	r7, r5
 8015548:	4372      	muls	r2, r6
 801554a:	4297      	cmp	r7, r2
 801554c:	db09      	blt.n	8015562 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 801554e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8015552:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8015556:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801555a:	449c      	add	ip, r3
 801555c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8015560:	e686      	b.n	8015270 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015562:	4421      	add	r1, r4
 8015564:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8015568:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 801556c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015570:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8015574:	e67c      	b.n	8015270 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015576:	9f04      	ldr	r7, [sp, #16]
 8015578:	42b8      	cmp	r0, r7
 801557a:	da27      	bge.n	80155cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 801557c:	9902      	ldr	r1, [sp, #8]
 801557e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8015582:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8015586:	eb05 010e 	add.w	r1, r5, lr
 801558a:	fa1f f881 	uxth.w	r8, r1
 801558e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8015592:	4411      	add	r1, r2
 8015594:	eba1 0108 	sub.w	r1, r1, r8
 8015598:	b289      	uxth	r1, r1
 801559a:	fa0f f988 	sxth.w	r9, r8
 801559e:	eba2 020e 	sub.w	r2, r2, lr
 80155a2:	fa0f f881 	sxth.w	r8, r1
 80155a6:	1a3f      	subs	r7, r7, r0
 80155a8:	4372      	muls	r2, r6
 80155aa:	fb08 f707 	mul.w	r7, r8, r7
 80155ae:	42ba      	cmp	r2, r7
 80155b0:	dc06      	bgt.n	80155c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 80155b2:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 80155b6:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 80155ba:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 80155be:	e7ca      	b.n	8015556 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 80155c0:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 80155c4:	4429      	add	r1, r5
 80155c6:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80155ca:	e651      	b.n	8015270 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80155cc:	9805      	ldr	r0, [sp, #20]
 80155ce:	ebaa 0000 	sub.w	r0, sl, r0
 80155d2:	b280      	uxth	r0, r0
 80155d4:	2d06      	cmp	r5, #6
 80155d6:	fa0f fe80 	sxth.w	lr, r0
 80155da:	d817      	bhi.n	801560c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 80155dc:	9b04      	ldr	r3, [sp, #16]
 80155de:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80155e2:	1c6b      	adds	r3, r5, #1
 80155e4:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 80155e8:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 80155ec:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80155f0:	9b01      	ldr	r3, [sp, #4]
 80155f2:	9801      	ldr	r0, [sp, #4]
 80155f4:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80155f8:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80155fc:	805a      	strh	r2, [r3, #2]
 80155fe:	809e      	strh	r6, [r3, #4]
 8015600:	80d9      	strh	r1, [r3, #6]
 8015602:	9b02      	ldr	r3, [sp, #8]
 8015604:	3b01      	subs	r3, #1
 8015606:	9302      	str	r3, [sp, #8]
 8015608:	3c08      	subs	r4, #8
 801560a:	e747      	b.n	801549c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801560c:	9a02      	ldr	r2, [sp, #8]
 801560e:	45b6      	cmp	lr, r6
 8015610:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8015614:	db0d      	blt.n	8015632 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8015616:	449c      	add	ip, r3
 8015618:	fa1f fc8c 	uxth.w	ip, ip
 801561c:	445a      	add	r2, fp
 801561e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8015622:	448c      	add	ip, r1
 8015624:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8015628:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 801562c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8015630:	e61e      	b.n	8015270 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015632:	445a      	add	r2, fp
 8015634:	4484      	add	ip, r0
 8015636:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 801563a:	e78f      	b.n	801555c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801563c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8015640:	fa1f f18e 	uxth.w	r1, lr
 8015644:	eb01 0806 	add.w	r8, r1, r6
 8015648:	b293      	uxth	r3, r2
 801564a:	fa1f f888 	uxth.w	r8, r8
 801564e:	9306      	str	r3, [sp, #24]
 8015650:	fa0f f388 	sxth.w	r3, r8
 8015654:	9307      	str	r3, [sp, #28]
 8015656:	9f06      	ldr	r7, [sp, #24]
 8015658:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801565c:	443b      	add	r3, r7
 801565e:	b29b      	uxth	r3, r3
 8015660:	4596      	cmp	lr, r2
 8015662:	9308      	str	r3, [sp, #32]
 8015664:	da24      	bge.n	80156b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8015666:	9905      	ldr	r1, [sp, #20]
 8015668:	eba3 0308 	sub.w	r3, r3, r8
 801566c:	ebaa 0401 	sub.w	r4, sl, r1
 8015670:	b2a4      	uxth	r4, r4
 8015672:	b29b      	uxth	r3, r3
 8015674:	b225      	sxth	r5, r4
 8015676:	b219      	sxth	r1, r3
 8015678:	eba2 020e 	sub.w	r2, r2, lr
 801567c:	eba9 0000 	sub.w	r0, r9, r0
 8015680:	436a      	muls	r2, r5
 8015682:	4348      	muls	r0, r1
 8015684:	4282      	cmp	r2, r0
 8015686:	9a02      	ldr	r2, [sp, #8]
 8015688:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801568c:	445a      	add	r2, fp
 801568e:	dc06      	bgt.n	801569e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8015690:	9b07      	ldr	r3, [sp, #28]
 8015692:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8015696:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 801569a:	44a4      	add	ip, r4
 801569c:	e75e      	b.n	801555c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801569e:	9904      	ldr	r1, [sp, #16]
 80156a0:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 80156a4:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 80156a8:	4433      	add	r3, r6
 80156aa:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80156ae:	e5df      	b.n	8015270 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80156b0:	9f06      	ldr	r7, [sp, #24]
 80156b2:	9b04      	ldr	r3, [sp, #16]
 80156b4:	1bc9      	subs	r1, r1, r7
 80156b6:	fa0f f78a 	sxth.w	r7, sl
 80156ba:	b289      	uxth	r1, r1
 80156bc:	429f      	cmp	r7, r3
 80156be:	fa0f fe81 	sxth.w	lr, r1
 80156c2:	dd23      	ble.n	801570c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 80156c4:	9a05      	ldr	r2, [sp, #20]
 80156c6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80156ca:	9d07      	ldr	r5, [sp, #28]
 80156cc:	ebaa 0202 	sub.w	r2, sl, r2
 80156d0:	b292      	uxth	r2, r2
 80156d2:	eba5 0a03 	sub.w	sl, r5, r3
 80156d6:	b214      	sxth	r4, r2
 80156d8:	eba9 0000 	sub.w	r0, r9, r0
 80156dc:	9b02      	ldr	r3, [sp, #8]
 80156de:	fb0e f000 	mul.w	r0, lr, r0
 80156e2:	fb04 fa0a 	mul.w	sl, r4, sl
 80156e6:	00db      	lsls	r3, r3, #3
 80156e8:	4550      	cmp	r0, sl
 80156ea:	445b      	add	r3, fp
 80156ec:	db03      	blt.n	80156f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 80156ee:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 80156f2:	4494      	add	ip, r2
 80156f4:	e732      	b.n	801555c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80156f6:	9a04      	ldr	r2, [sp, #16]
 80156f8:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 80156fc:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8015700:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8015704:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8015708:	4431      	add	r1, r6
 801570a:	e75c      	b.n	80155c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801570c:	9b08      	ldr	r3, [sp, #32]
 801570e:	eba3 0308 	sub.w	r3, r3, r8
 8015712:	b29b      	uxth	r3, r3
 8015714:	2d06      	cmp	r5, #6
 8015716:	b218      	sxth	r0, r3
 8015718:	d813      	bhi.n	8015742 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801571a:	9b07      	ldr	r3, [sp, #28]
 801571c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8015720:	1c6b      	adds	r3, r5, #1
 8015722:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8015726:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 801572a:	9b01      	ldr	r3, [sp, #4]
 801572c:	9901      	ldr	r1, [sp, #4]
 801572e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015732:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8015736:	805a      	strh	r2, [r3, #2]
 8015738:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801573a:	809a      	strh	r2, [r3, #4]
 801573c:	f8a3 e006 	strh.w	lr, [r3, #6]
 8015740:	e75f      	b.n	8015602 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8015742:	9c02      	ldr	r4, [sp, #8]
 8015744:	4570      	cmp	r0, lr
 8015746:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801574a:	db0d      	blt.n	8015768 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 801574c:	4431      	add	r1, r6
 801574e:	9b06      	ldr	r3, [sp, #24]
 8015750:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8015754:	b289      	uxth	r1, r1
 8015756:	445c      	add	r4, fp
 8015758:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801575c:	4419      	add	r1, r3
 801575e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8015762:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8015766:	e583      	b.n	8015270 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015768:	445c      	add	r4, fp
 801576a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 801576e:	e79b      	b.n	80156a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8015770:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8015774:	1e65      	subs	r5, r4, #1
 8015776:	b2ad      	uxth	r5, r5
 8015778:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801577c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8015780:	42b5      	cmp	r5, r6
 8015782:	d044      	beq.n	801580e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8015784:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8015788:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 801578c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8015790:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8015794:	4282      	cmp	r2, r0
 8015796:	d11f      	bne.n	80157d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015798:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 801579c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80157a0:	459c      	cmp	ip, r3
 80157a2:	d119      	bne.n	80157d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80157a4:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 80157a8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80157ac:	19d8      	adds	r0, r3, r7
 80157ae:	b200      	sxth	r0, r0
 80157b0:	4288      	cmp	r0, r1
 80157b2:	d109      	bne.n	80157c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 80157b4:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80157b8:	4413      	add	r3, r2
 80157ba:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80157be:	4629      	mov	r1, r5
 80157c0:	9801      	ldr	r0, [sp, #4]
 80157c2:	f7ff fd2b 	bl	801521c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80157c6:	e003      	b.n	80157d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80157c8:	4411      	add	r1, r2
 80157ca:	b209      	sxth	r1, r1
 80157cc:	42b9      	cmp	r1, r7
 80157ce:	d0f3      	beq.n	80157b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 80157d0:	3d01      	subs	r5, #1
 80157d2:	b2ad      	uxth	r5, r5
 80157d4:	3c08      	subs	r4, #8
 80157d6:	e7d3      	b.n	8015780 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 80157d8:	42b9      	cmp	r1, r7
 80157da:	d1f9      	bne.n	80157d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80157dc:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 80157e0:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80157e4:	4299      	cmp	r1, r3
 80157e6:	d1f3      	bne.n	80157d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80157e8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80157ec:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80157f0:	181f      	adds	r7, r3, r0
 80157f2:	b23f      	sxth	r7, r7
 80157f4:	42ba      	cmp	r2, r7
 80157f6:	d105      	bne.n	8015804 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 80157f8:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 80157fc:	440b      	add	r3, r1
 80157fe:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015802:	e7dc      	b.n	80157be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8015804:	440a      	add	r2, r1
 8015806:	b212      	sxth	r2, r2
 8015808:	4290      	cmp	r0, r2
 801580a:	d1e1      	bne.n	80157d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801580c:	e7f6      	b.n	80157fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801580e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8015812:	2e07      	cmp	r6, #7
 8015814:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8015818:	d812      	bhi.n	8015840 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801581a:	1c75      	adds	r5, r6, #1
 801581c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8015820:	9d01      	ldr	r5, [sp, #4]
 8015822:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8015826:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801582a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801582e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8015832:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8015836:	442c      	add	r4, r5
 8015838:	8061      	strh	r1, [r4, #2]
 801583a:	80a2      	strh	r2, [r4, #4]
 801583c:	80e3      	strh	r3, [r4, #6]
 801583e:	e581      	b.n	8015344 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015840:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8015844:	3e01      	subs	r6, #1
 8015846:	445c      	add	r4, fp
 8015848:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 801584c:	f04f 37ff 	mov.w	r7, #4294967295
 8015850:	2500      	movs	r5, #0
 8015852:	9305      	str	r3, [sp, #20]
 8015854:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015858:	9302      	str	r3, [sp, #8]
 801585a:	1e72      	subs	r2, r6, #1
 801585c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8015860:	9304      	str	r3, [sp, #16]
 8015862:	4691      	mov	r9, r2
 8015864:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8015868:	f1b9 3fff 	cmp.w	r9, #4294967295
 801586c:	bf14      	ite	ne
 801586e:	9905      	ldrne	r1, [sp, #20]
 8015870:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8015874:	6818      	ldr	r0, [r3, #0]
 8015876:	9207      	str	r2, [sp, #28]
 8015878:	bf18      	it	ne
 801587a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801587e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8015882:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8015886:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801588a:	9306      	str	r3, [sp, #24]
 801588c:	fb18 f801 	smulbb	r8, r8, r1
 8015890:	6859      	ldr	r1, [r3, #4]
 8015892:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8015896:	4671      	mov	r1, lr
 8015898:	a80c      	add	r0, sp, #48	; 0x30
 801589a:	f7ff fafb 	bl	8014e94 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801589e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80158a2:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80158a6:	9b04      	ldr	r3, [sp, #16]
 80158a8:	9a02      	ldr	r2, [sp, #8]
 80158aa:	fb10 f001 	smulbb	r0, r0, r1
 80158ae:	fb02 8803 	mla	r8, r2, r3, r8
 80158b2:	eba0 0108 	sub.w	r1, r0, r8
 80158b6:	f04f 0c08 	mov.w	ip, #8
 80158ba:	fb90 f0fc 	sdiv	r0, r0, ip
 80158be:	4288      	cmp	r0, r1
 80158c0:	dc20      	bgt.n	8015904 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80158c2:	4551      	cmp	r1, sl
 80158c4:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80158c8:	da03      	bge.n	80158d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 80158ca:	b1d9      	cbz	r1, 8015904 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80158cc:	468a      	mov	sl, r1
 80158ce:	464f      	mov	r7, r9
 80158d0:	4635      	mov	r5, r6
 80158d2:	f109 39ff 	add.w	r9, r9, #4294967295
 80158d6:	f119 0f02 	cmn.w	r9, #2
 80158da:	d1c5      	bne.n	8015868 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 80158dc:	4616      	mov	r6, r2
 80158de:	3201      	adds	r2, #1
 80158e0:	f1a4 0408 	sub.w	r4, r4, #8
 80158e4:	d1b6      	bne.n	8015854 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 80158e6:	9b01      	ldr	r3, [sp, #4]
 80158e8:	b2ac      	uxth	r4, r5
 80158ea:	00ed      	lsls	r5, r5, #3
 80158ec:	1958      	adds	r0, r3, r5
 80158ee:	1c7b      	adds	r3, r7, #1
 80158f0:	d10b      	bne.n	801590a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 80158f2:	4601      	mov	r1, r0
 80158f4:	9803      	ldr	r0, [sp, #12]
 80158f6:	f7ff facd 	bl	8014e94 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80158fa:	4621      	mov	r1, r4
 80158fc:	9801      	ldr	r0, [sp, #4]
 80158fe:	f7ff fc8d 	bl	801521c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015902:	e4b5      	b.n	8015270 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015904:	464f      	mov	r7, r9
 8015906:	4635      	mov	r5, r6
 8015908:	e7ed      	b.n	80158e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 801590a:	9b01      	ldr	r3, [sp, #4]
 801590c:	00ff      	lsls	r7, r7, #3
 801590e:	19d9      	adds	r1, r3, r7
 8015910:	f7ff fac0 	bl	8014e94 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015914:	9b03      	ldr	r3, [sp, #12]
 8015916:	cb03      	ldmia	r3!, {r0, r1}
 8015918:	445f      	add	r7, fp
 801591a:	445d      	add	r5, fp
 801591c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8015920:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8015924:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8015928:	9b03      	ldr	r3, [sp, #12]
 801592a:	6869      	ldr	r1, [r5, #4]
 801592c:	c303      	stmia	r3!, {r0, r1}
 801592e:	e7e4      	b.n	80158fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08015930 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8015930:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015934:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8015938:	b09b      	sub	sp, #108	; 0x6c
 801593a:	4604      	mov	r4, r0
 801593c:	4630      	mov	r0, r6
 801593e:	f7fa fa20 	bl	800fd82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015942:	4605      	mov	r5, r0
 8015944:	b948      	cbnz	r0, 801595a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8015946:	6823      	ldr	r3, [r4, #0]
 8015948:	e896 0006 	ldmia.w	r6, {r1, r2}
 801594c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801594e:	4620      	mov	r0, r4
 8015950:	4798      	blx	r3
 8015952:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8015956:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 801595a:	4bc6      	ldr	r3, [pc, #792]	; (8015c74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 801595c:	681b      	ldr	r3, [r3, #0]
 801595e:	2b00      	cmp	r3, #0
 8015960:	d03f      	beq.n	80159e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8015962:	4dc5      	ldr	r5, [pc, #788]	; (8015c78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8015964:	4628      	mov	r0, r5
 8015966:	f7fa fa0c 	bl	800fd82 <_ZNK8touchgfx4Rect7isEmptyEv>
 801596a:	4606      	mov	r6, r0
 801596c:	2800      	cmp	r0, #0
 801596e:	d138      	bne.n	80159e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8015970:	4628      	mov	r0, r5
 8015972:	f7ff f907 	bl	8014b84 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8015976:	6823      	ldr	r3, [r4, #0]
 8015978:	6829      	ldr	r1, [r5, #0]
 801597a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801597c:	686a      	ldr	r2, [r5, #4]
 801597e:	4620      	mov	r0, r4
 8015980:	4798      	blx	r3
 8015982:	802e      	strh	r6, [r5, #0]
 8015984:	806e      	strh	r6, [r5, #2]
 8015986:	80ae      	strh	r6, [r5, #4]
 8015988:	80ee      	strh	r6, [r5, #6]
 801598a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 801598e:	4dbb      	ldr	r5, [pc, #748]	; (8015c7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8015990:	4640      	mov	r0, r8
 8015992:	f7ff fbeb 	bl	801516c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015996:	882e      	ldrh	r6, [r5, #0]
 8015998:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801599c:	4633      	mov	r3, r6
 801599e:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80159a2:	42bb      	cmp	r3, r7
 80159a4:	d224      	bcs.n	80159f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80159a6:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 80159aa:	2907      	cmp	r1, #7
 80159ac:	d816      	bhi.n	80159dc <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 80159ae:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80159b2:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 80159b6:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 80159ba:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80159be:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80159c2:	1c4a      	adds	r2, r1, #1
 80159c4:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 80159c8:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 80159cc:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 80159d0:	f8a2 a002 	strh.w	sl, [r2, #2]
 80159d4:	f8a2 e004 	strh.w	lr, [r2, #4]
 80159d8:	f8a2 c006 	strh.w	ip, [r2, #6]
 80159dc:	3301      	adds	r3, #1
 80159de:	b29b      	uxth	r3, r3
 80159e0:	e7df      	b.n	80159a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 80159e2:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80159e6:	2b00      	cmp	r3, #0
 80159e8:	d1cf      	bne.n	801598a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 80159ea:	b01b      	add	sp, #108	; 0x6c
 80159ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80159f0:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 80159f4:	42b3      	cmp	r3, r6
 80159f6:	d90c      	bls.n	8015a12 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 80159f8:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80159fc:	6822      	ldr	r2, [r4, #0]
 80159fe:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8015a02:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8015a04:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8015a08:	4620      	mov	r0, r4
 8015a0a:	3601      	adds	r6, #1
 8015a0c:	47b8      	blx	r7
 8015a0e:	b2b6      	uxth	r6, r6
 8015a10:	e7ee      	b.n	80159f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015a12:	4a9b      	ldr	r2, [pc, #620]	; (8015c80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8015a14:	6813      	ldr	r3, [r2, #0]
 8015a16:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8015a1a:	2b01      	cmp	r3, #1
 8015a1c:	4691      	mov	r9, r2
 8015a1e:	f040 80e2 	bne.w	8015be6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8015a22:	8829      	ldrh	r1, [r5, #0]
 8015a24:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8015a28:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8015a2c:	33ae      	adds	r3, #174	; 0xae
 8015a2e:	2600      	movs	r6, #0
 8015a30:	428f      	cmp	r7, r1
 8015a32:	f103 0308 	add.w	r3, r3, #8
 8015a36:	dd0a      	ble.n	8015a4e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8015a38:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8015a3c:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8015a40:	4402      	add	r2, r0
 8015a42:	b212      	sxth	r2, r2
 8015a44:	4296      	cmp	r6, r2
 8015a46:	bfb8      	it	lt
 8015a48:	4616      	movlt	r6, r2
 8015a4a:	3101      	adds	r1, #1
 8015a4c:	e7f0      	b.n	8015a30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8015a4e:	4b8d      	ldr	r3, [pc, #564]	; (8015c84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8015a50:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8015c80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8015a54:	881b      	ldrh	r3, [r3, #0]
 8015a56:	2b0f      	cmp	r3, #15
 8015a58:	bf88      	it	hi
 8015a5a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8015a5e:	f04f 0300 	mov.w	r3, #0
 8015a62:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8015a66:	bf98      	it	ls
 8015a68:	f04f 0b01 	movls.w	fp, #1
 8015a6c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8015a70:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8015a74:	4b82      	ldr	r3, [pc, #520]	; (8015c80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8015a76:	4438      	add	r0, r7
 8015a78:	b207      	sxth	r7, r0
 8015a7a:	6818      	ldr	r0, [r3, #0]
 8015a7c:	42b7      	cmp	r7, r6
 8015a7e:	6803      	ldr	r3, [r0, #0]
 8015a80:	f280 8083 	bge.w	8015b8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8015a84:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8015a88:	4798      	blx	r3
 8015a8a:	eb07 030b 	add.w	r3, r7, fp
 8015a8e:	4298      	cmp	r0, r3
 8015a90:	da07      	bge.n	8015aa2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015a92:	42b0      	cmp	r0, r6
 8015a94:	da05      	bge.n	8015aa2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015a96:	4287      	cmp	r7, r0
 8015a98:	dd6c      	ble.n	8015b74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8015a9a:	2f00      	cmp	r7, #0
 8015a9c:	dd6a      	ble.n	8015b74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8015a9e:	4630      	mov	r0, r6
 8015aa0:	e004      	b.n	8015aac <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8015aa2:	4287      	cmp	r7, r0
 8015aa4:	dcfb      	bgt.n	8015a9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8015aa6:	42b0      	cmp	r0, r6
 8015aa8:	bfa8      	it	ge
 8015aaa:	4630      	movge	r0, r6
 8015aac:	4b76      	ldr	r3, [pc, #472]	; (8015c88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8015aae:	f8ad 7016 	strh.w	r7, [sp, #22]
 8015ab2:	1bc0      	subs	r0, r0, r7
 8015ab4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015ab8:	882f      	ldrh	r7, [r5, #0]
 8015aba:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015abe:	2200      	movs	r2, #0
 8015ac0:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015ac4:	f8ad 001a 	strh.w	r0, [sp, #26]
 8015ac8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015acc:	42bb      	cmp	r3, r7
 8015ace:	d9cd      	bls.n	8015a6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015ad0:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8015ad4:	ab07      	add	r3, sp, #28
 8015ad6:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8015ada:	6851      	ldr	r1, [r2, #4]
 8015adc:	c303      	stmia	r3!, {r0, r1}
 8015ade:	a905      	add	r1, sp, #20
 8015ae0:	a807      	add	r0, sp, #28
 8015ae2:	f7ff f93e 	bl	8014d62 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015ae6:	2800      	cmp	r0, #0
 8015ae8:	d04c      	beq.n	8015b84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8015aea:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8015aee:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8015af2:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8015af6:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8015afa:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8015afe:	9302      	str	r3, [sp, #8]
 8015b00:	4686      	mov	lr, r0
 8015b02:	4290      	cmp	r0, r2
 8015b04:	4450      	add	r0, sl
 8015b06:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8015b0a:	bfb8      	it	lt
 8015b0c:	4696      	movlt	lr, r2
 8015b0e:	4452      	add	r2, sl
 8015b10:	4299      	cmp	r1, r3
 8015b12:	b280      	uxth	r0, r0
 8015b14:	b292      	uxth	r2, r2
 8015b16:	468c      	mov	ip, r1
 8015b18:	fa0f fa82 	sxth.w	sl, r2
 8015b1c:	bfb8      	it	lt
 8015b1e:	469c      	movlt	ip, r3
 8015b20:	b203      	sxth	r3, r0
 8015b22:	4553      	cmp	r3, sl
 8015b24:	bfb8      	it	lt
 8015b26:	4602      	movlt	r2, r0
 8015b28:	eba2 020e 	sub.w	r2, r2, lr
 8015b2c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015b30:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8015b34:	9b02      	ldr	r3, [sp, #8]
 8015b36:	f8ad e01c 	strh.w	lr, [sp, #28]
 8015b3a:	4411      	add	r1, r2
 8015b3c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015b40:	f8ad c01e 	strh.w	ip, [sp, #30]
 8015b44:	4413      	add	r3, r2
 8015b46:	b289      	uxth	r1, r1
 8015b48:	b29b      	uxth	r3, r3
 8015b4a:	b208      	sxth	r0, r1
 8015b4c:	b21a      	sxth	r2, r3
 8015b4e:	4290      	cmp	r0, r2
 8015b50:	bfb8      	it	lt
 8015b52:	460b      	movlt	r3, r1
 8015b54:	eba3 030c 	sub.w	r3, r3, ip
 8015b58:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8015b5c:	a807      	add	r0, sp, #28
 8015b5e:	f7fa f910 	bl	800fd82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015b62:	b920      	cbnz	r0, 8015b6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8015b64:	6823      	ldr	r3, [r4, #0]
 8015b66:	a907      	add	r1, sp, #28
 8015b68:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015b6a:	4620      	mov	r0, r4
 8015b6c:	4798      	blx	r3
 8015b6e:	3701      	adds	r7, #1
 8015b70:	b2bf      	uxth	r7, r7
 8015b72:	e7a9      	b.n	8015ac8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8015b74:	f8d9 0000 	ldr.w	r0, [r9]
 8015b78:	6803      	ldr	r3, [r0, #0]
 8015b7a:	2101      	movs	r1, #1
 8015b7c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8015b80:	4798      	blx	r3
 8015b82:	e773      	b.n	8015a6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015b84:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8015b88:	e7e8      	b.n	8015b5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8015b8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015b8c:	4798      	blx	r3
 8015b8e:	4b3f      	ldr	r3, [pc, #252]	; (8015c8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8015b90:	781b      	ldrb	r3, [r3, #0]
 8015b92:	2b00      	cmp	r3, #0
 8015b94:	f43f af29 	beq.w	80159ea <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8015b98:	2300      	movs	r3, #0
 8015b9a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 8015b9e:	882b      	ldrh	r3, [r5, #0]
 8015ba0:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8015ba4:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015ba8:	42ab      	cmp	r3, r5
 8015baa:	f4bf af1e 	bcs.w	80159ea <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8015bae:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8015bb2:	2907      	cmp	r1, #7
 8015bb4:	d814      	bhi.n	8015be0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8015bb6:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8015bba:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8015bbe:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8015bc2:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8015bc6:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8015bca:	1c4a      	adds	r2, r1, #1
 8015bcc:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8015bd0:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8015bd4:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8015bd8:	f8a2 c002 	strh.w	ip, [r2, #2]
 8015bdc:	8097      	strh	r7, [r2, #4]
 8015bde:	80d6      	strh	r6, [r2, #6]
 8015be0:	3301      	adds	r3, #1
 8015be2:	b29b      	uxth	r3, r3
 8015be4:	e7e0      	b.n	8015ba8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8015be6:	2b02      	cmp	r3, #2
 8015be8:	f040 8133 	bne.w	8015e52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8015bec:	4b28      	ldr	r3, [pc, #160]	; (8015c90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8015bee:	781b      	ldrb	r3, [r3, #0]
 8015bf0:	2b01      	cmp	r3, #1
 8015bf2:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8015bf6:	f000 8098 	beq.w	8015d2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8015bfa:	882a      	ldrh	r2, [r5, #0]
 8015bfc:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8015c00:	3201      	adds	r2, #1
 8015c02:	b292      	uxth	r2, r2
 8015c04:	2900      	cmp	r1, #0
 8015c06:	d0c2      	beq.n	8015b8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015c08:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8015c0c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8015c10:	441e      	add	r6, r3
 8015c12:	b236      	sxth	r6, r6
 8015c14:	4694      	mov	ip, r2
 8015c16:	f04f 0900 	mov.w	r9, #0
 8015c1a:	fa1f f38c 	uxth.w	r3, ip
 8015c1e:	4299      	cmp	r1, r3
 8015c20:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8015c24:	f240 80bf 	bls.w	8015da6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8015c28:	4427      	add	r7, r4
 8015c2a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8015c2e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8015c32:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8015c36:	4283      	cmp	r3, r0
 8015c38:	f340 80a1 	ble.w	8015d7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8015c3c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8015c40:	4406      	add	r6, r0
 8015c42:	b236      	sxth	r6, r6
 8015c44:	429e      	cmp	r6, r3
 8015c46:	bfa8      	it	ge
 8015c48:	461e      	movge	r6, r3
 8015c4a:	46e1      	mov	r9, ip
 8015c4c:	f10c 0c01 	add.w	ip, ip, #1
 8015c50:	e7e3      	b.n	8015c1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8015c52:	d10a      	bne.n	8015c6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8015c54:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8015c58:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8015c5c:	4562      	cmp	r2, ip
 8015c5e:	bfb8      	it	lt
 8015c60:	4662      	movlt	r2, ip
 8015c62:	4288      	cmp	r0, r1
 8015c64:	bfb8      	it	lt
 8015c66:	461f      	movlt	r7, r3
 8015c68:	e087      	b.n	8015d7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8015c6a:	428a      	cmp	r2, r1
 8015c6c:	bfb8      	it	lt
 8015c6e:	460a      	movlt	r2, r1
 8015c70:	e083      	b.n	8015d7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8015c72:	bf00      	nop
 8015c74:	20013814 	.word	0x20013814
 8015c78:	20013820 	.word	0x20013820
 8015c7c:	20000088 	.word	0x20000088
 8015c80:	200137d4 	.word	0x200137d4
 8015c84:	200137ca 	.word	0x200137ca
 8015c88:	200137c8 	.word	0x200137c8
 8015c8c:	200137d2 	.word	0x200137d2
 8015c90:	200137cc 	.word	0x200137cc
 8015c94:	19a1      	adds	r1, r4, r6
 8015c96:	ab07      	add	r3, sp, #28
 8015c98:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8015c9c:	6849      	ldr	r1, [r1, #4]
 8015c9e:	c303      	stmia	r3!, {r0, r1}
 8015ca0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8015ca4:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015ca8:	2b13      	cmp	r3, #19
 8015caa:	bfd8      	it	le
 8015cac:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8015cb0:	f8ad 201c 	strh.w	r2, [sp, #28]
 8015cb4:	440b      	add	r3, r1
 8015cb6:	1a9b      	subs	r3, r3, r2
 8015cb8:	a807      	add	r0, sp, #28
 8015cba:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015cbe:	f7fe ff7b 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015cc2:	a807      	add	r0, sp, #28
 8015cc4:	f7fa f85d 	bl	800fd82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015cc8:	bb78      	cbnz	r0, 8015d2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8015cca:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8015cce:	f8d9 0000 	ldr.w	r0, [r9]
 8015cd2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8015cd6:	f8d0 e000 	ldr.w	lr, [r0]
 8015cda:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8015cde:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015ce2:	f1bc 0f14 	cmp.w	ip, #20
 8015ce6:	bfa8      	it	ge
 8015ce8:	f04f 0c14 	movge.w	ip, #20
 8015cec:	fa1f fc8c 	uxth.w	ip, ip
 8015cf0:	f8cd c000 	str.w	ip, [sp]
 8015cf4:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8015cf8:	47d8      	blx	fp
 8015cfa:	4683      	mov	fp, r0
 8015cfc:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015d00:	a807      	add	r0, sp, #28
 8015d02:	f7fe ff3f 	bl	8014b84 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8015d06:	6823      	ldr	r3, [r4, #0]
 8015d08:	4426      	add	r6, r4
 8015d0a:	4620      	mov	r0, r4
 8015d0c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015d0e:	a907      	add	r1, sp, #28
 8015d10:	4798      	blx	r3
 8015d12:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8015d16:	eba0 000b 	sub.w	r0, r0, fp
 8015d1a:	b200      	sxth	r0, r0
 8015d1c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8015d20:	b918      	cbnz	r0, 8015d2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8015d22:	b2b9      	uxth	r1, r7
 8015d24:	4650      	mov	r0, sl
 8015d26:	f7ff fa79 	bl	801521c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015d2a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8015d2e:	f1bb 0f00 	cmp.w	fp, #0
 8015d32:	f43f af2c 	beq.w	8015b8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015d36:	882b      	ldrh	r3, [r5, #0]
 8015d38:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8015d3c:	3301      	adds	r3, #1
 8015d3e:	b29b      	uxth	r3, r3
 8015d40:	2700      	movs	r7, #0
 8015d42:	b299      	uxth	r1, r3
 8015d44:	458b      	cmp	fp, r1
 8015d46:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8015d4a:	d9a3      	bls.n	8015c94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8015d4c:	4426      	add	r6, r4
 8015d4e:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8015d52:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8015d56:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8015d5a:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8015d5e:	4408      	add	r0, r1
 8015d60:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8015d64:	4461      	add	r1, ip
 8015d66:	b200      	sxth	r0, r0
 8015d68:	b209      	sxth	r1, r1
 8015d6a:	4288      	cmp	r0, r1
 8015d6c:	f6bf af71 	bge.w	8015c52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8015d70:	4584      	cmp	ip, r0
 8015d72:	4662      	mov	r2, ip
 8015d74:	461f      	mov	r7, r3
 8015d76:	bfb8      	it	lt
 8015d78:	4602      	movlt	r2, r0
 8015d7a:	3301      	adds	r3, #1
 8015d7c:	e7e1      	b.n	8015d42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8015d7e:	d10e      	bne.n	8015d9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8015d80:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8015d84:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8015d88:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8015d8c:	4473      	add	r3, lr
 8015d8e:	b21b      	sxth	r3, r3
 8015d90:	429e      	cmp	r6, r3
 8015d92:	bfa8      	it	ge
 8015d94:	461e      	movge	r6, r3
 8015d96:	4287      	cmp	r7, r0
 8015d98:	bfb8      	it	lt
 8015d9a:	46e1      	movlt	r9, ip
 8015d9c:	e756      	b.n	8015c4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8015d9e:	4286      	cmp	r6, r0
 8015da0:	bfa8      	it	ge
 8015da2:	4606      	movge	r6, r0
 8015da4:	e752      	b.n	8015c4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8015da6:	eb0a 0007 	add.w	r0, sl, r7
 8015daa:	4427      	add	r7, r4
 8015dac:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8015db0:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8015db4:	f1bb 0f13 	cmp.w	fp, #19
 8015db8:	bfde      	ittt	le
 8015dba:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8015dbe:	445e      	addle	r6, fp
 8015dc0:	b236      	sxthle	r6, r6
 8015dc2:	f7f9 ffde 	bl	800fd82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015dc6:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8015dca:	2800      	cmp	r0, #0
 8015dcc:	f47f af1a 	bne.w	8015c04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8015dd0:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8015dd4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015dd8:	482a      	ldr	r0, [pc, #168]	; (8015e84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8015dda:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8015dde:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8015de2:	6800      	ldr	r0, [r0, #0]
 8015de4:	f8ad 101c 	strh.w	r1, [sp, #28]
 8015de8:	1ab6      	subs	r6, r6, r2
 8015dea:	2e14      	cmp	r6, #20
 8015dec:	f8ad 201e 	strh.w	r2, [sp, #30]
 8015df0:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015df4:	bfa8      	it	ge
 8015df6:	2614      	movge	r6, #20
 8015df8:	f8d0 c000 	ldr.w	ip, [r0]
 8015dfc:	b2b6      	uxth	r6, r6
 8015dfe:	fa1f fb8b 	uxth.w	fp, fp
 8015e02:	455e      	cmp	r6, fp
 8015e04:	bf94      	ite	ls
 8015e06:	9600      	strls	r6, [sp, #0]
 8015e08:	f8cd b000 	strhi.w	fp, [sp]
 8015e0c:	b292      	uxth	r2, r2
 8015e0e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8015e12:	b29b      	uxth	r3, r3
 8015e14:	b289      	uxth	r1, r1
 8015e16:	47b0      	blx	r6
 8015e18:	6823      	ldr	r3, [r4, #0]
 8015e1a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015e1e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015e20:	a907      	add	r1, sp, #28
 8015e22:	4620      	mov	r0, r4
 8015e24:	4798      	blx	r3
 8015e26:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8015e2a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8015e2e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8015e32:	1a5b      	subs	r3, r3, r1
 8015e34:	440a      	add	r2, r1
 8015e36:	b21b      	sxth	r3, r3
 8015e38:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8015e3c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8015e40:	2b00      	cmp	r3, #0
 8015e42:	f47f aeda 	bne.w	8015bfa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8015e46:	fa1f f189 	uxth.w	r1, r9
 8015e4a:	4650      	mov	r0, sl
 8015e4c:	f7ff f9e6 	bl	801521c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015e50:	e6d3      	b.n	8015bfa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8015e52:	882e      	ldrh	r6, [r5, #0]
 8015e54:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015e58:	42b3      	cmp	r3, r6
 8015e5a:	f67f ae98 	bls.w	8015b8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015e5e:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8015e62:	ab07      	add	r3, sp, #28
 8015e64:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8015e68:	6851      	ldr	r1, [r2, #4]
 8015e6a:	c303      	stmia	r3!, {r0, r1}
 8015e6c:	a807      	add	r0, sp, #28
 8015e6e:	f7f9 ff88 	bl	800fd82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015e72:	b920      	cbnz	r0, 8015e7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8015e74:	6823      	ldr	r3, [r4, #0]
 8015e76:	a907      	add	r1, sp, #28
 8015e78:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015e7a:	4620      	mov	r0, r4
 8015e7c:	4798      	blx	r3
 8015e7e:	3601      	adds	r6, #1
 8015e80:	b2b6      	uxth	r6, r6
 8015e82:	e7e7      	b.n	8015e54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8015e84:	200137d4 	.word	0x200137d4

08015e88 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8015e88:	4b03      	ldr	r3, [pc, #12]	; (8015e98 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8015e8a:	2200      	movs	r2, #0
 8015e8c:	801a      	strh	r2, [r3, #0]
 8015e8e:	805a      	strh	r2, [r3, #2]
 8015e90:	809a      	strh	r2, [r3, #4]
 8015e92:	80da      	strh	r2, [r3, #6]
 8015e94:	4770      	bx	lr
 8015e96:	bf00      	nop
 8015e98:	20013820 	.word	0x20013820

08015e9c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8015e9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ea0:	4606      	mov	r6, r0
 8015ea2:	b09d      	sub	sp, #116	; 0x74
 8015ea4:	a803      	add	r0, sp, #12
 8015ea6:	4614      	mov	r4, r2
 8015ea8:	468a      	mov	sl, r1
 8015eaa:	461d      	mov	r5, r3
 8015eac:	f000 feca 	bl	8016c44 <_ZN8touchgfx12TextProviderC1Ev>
 8015eb0:	6833      	ldr	r3, [r6, #0]
 8015eb2:	4630      	mov	r0, r6
 8015eb4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015eb6:	4798      	blx	r3
 8015eb8:	6833      	ldr	r3, [r6, #0]
 8015eba:	4607      	mov	r7, r0
 8015ebc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015ebe:	4630      	mov	r0, r6
 8015ec0:	4798      	blx	r3
 8015ec2:	462a      	mov	r2, r5
 8015ec4:	9000      	str	r0, [sp, #0]
 8015ec6:	4621      	mov	r1, r4
 8015ec8:	463b      	mov	r3, r7
 8015eca:	a803      	add	r0, sp, #12
 8015ecc:	f000 ff15 	bl	8016cfa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015ed0:	2500      	movs	r5, #0
 8015ed2:	462c      	mov	r4, r5
 8015ed4:	46a9      	mov	r9, r5
 8015ed6:	46a8      	mov	r8, r5
 8015ed8:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8015edc:	2300      	movs	r3, #0
 8015ede:	9302      	str	r3, [sp, #8]
 8015ee0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015ee4:	429c      	cmp	r4, r3
 8015ee6:	d002      	beq.n	8015eee <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8015ee8:	455c      	cmp	r4, fp
 8015eea:	bf18      	it	ne
 8015eec:	4625      	movne	r5, r4
 8015eee:	ab02      	add	r3, sp, #8
 8015ef0:	4632      	mov	r2, r6
 8015ef2:	4651      	mov	r1, sl
 8015ef4:	a803      	add	r0, sp, #12
 8015ef6:	f001 fa03 	bl	8017300 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015efa:	4604      	mov	r4, r0
 8015efc:	b108      	cbz	r0, 8015f02 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8015efe:	280a      	cmp	r0, #10
 8015f00:	d10a      	bne.n	8015f18 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8015f02:	45c1      	cmp	r9, r8
 8015f04:	bf38      	it	cc
 8015f06:	46c1      	movcc	r9, r8
 8015f08:	f04f 0800 	mov.w	r8, #0
 8015f0c:	2c00      	cmp	r4, #0
 8015f0e:	d1e5      	bne.n	8015edc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015f10:	4648      	mov	r0, r9
 8015f12:	b01d      	add	sp, #116	; 0x74
 8015f14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015f18:	9a02      	ldr	r2, [sp, #8]
 8015f1a:	2a00      	cmp	r2, #0
 8015f1c:	d0de      	beq.n	8015edc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015f1e:	7b57      	ldrb	r7, [r2, #13]
 8015f20:	6833      	ldr	r3, [r6, #0]
 8015f22:	8894      	ldrh	r4, [r2, #4]
 8015f24:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015f26:	007f      	lsls	r7, r7, #1
 8015f28:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8015f2c:	7a97      	ldrb	r7, [r2, #10]
 8015f2e:	4629      	mov	r1, r5
 8015f30:	4307      	orrs	r7, r0
 8015f32:	4630      	mov	r0, r6
 8015f34:	4798      	blx	r3
 8015f36:	4438      	add	r0, r7
 8015f38:	4480      	add	r8, r0
 8015f3a:	fa1f f888 	uxth.w	r8, r8
 8015f3e:	e7e5      	b.n	8015f0c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08015f40 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8015f40:	b508      	push	{r3, lr}
 8015f42:	6803      	ldr	r3, [r0, #0]
 8015f44:	68db      	ldr	r3, [r3, #12]
 8015f46:	4798      	blx	r3
 8015f48:	b128      	cbz	r0, 8015f56 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8015f4a:	7b43      	ldrb	r3, [r0, #13]
 8015f4c:	7a80      	ldrb	r0, [r0, #10]
 8015f4e:	005b      	lsls	r3, r3, #1
 8015f50:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015f54:	4318      	orrs	r0, r3
 8015f56:	bd08      	pop	{r3, pc}

08015f58 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8015f58:	b40e      	push	{r1, r2, r3}
 8015f5a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015f5c:	b09e      	sub	sp, #120	; 0x78
 8015f5e:	ab23      	add	r3, sp, #140	; 0x8c
 8015f60:	4605      	mov	r5, r0
 8015f62:	f853 4b04 	ldr.w	r4, [r3], #4
 8015f66:	9303      	str	r3, [sp, #12]
 8015f68:	a805      	add	r0, sp, #20
 8015f6a:	f000 fe6b 	bl	8016c44 <_ZN8touchgfx12TextProviderC1Ev>
 8015f6e:	682b      	ldr	r3, [r5, #0]
 8015f70:	4628      	mov	r0, r5
 8015f72:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015f74:	4798      	blx	r3
 8015f76:	682b      	ldr	r3, [r5, #0]
 8015f78:	4606      	mov	r6, r0
 8015f7a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015f7c:	4628      	mov	r0, r5
 8015f7e:	4798      	blx	r3
 8015f80:	4633      	mov	r3, r6
 8015f82:	ae1e      	add	r6, sp, #120	; 0x78
 8015f84:	4621      	mov	r1, r4
 8015f86:	9000      	str	r0, [sp, #0]
 8015f88:	9a03      	ldr	r2, [sp, #12]
 8015f8a:	2400      	movs	r4, #0
 8015f8c:	a805      	add	r0, sp, #20
 8015f8e:	f000 feb4 	bl	8016cfa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015f92:	f846 4d68 	str.w	r4, [r6, #-104]!
 8015f96:	462a      	mov	r2, r5
 8015f98:	4633      	mov	r3, r6
 8015f9a:	4621      	mov	r1, r4
 8015f9c:	a805      	add	r0, sp, #20
 8015f9e:	f001 f9af 	bl	8017300 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015fa2:	b1f0      	cbz	r0, 8015fe2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8015fa4:	280a      	cmp	r0, #10
 8015fa6:	d018      	beq.n	8015fda <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8015fa8:	9f04      	ldr	r7, [sp, #16]
 8015faa:	b1b7      	cbz	r7, 8015fda <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8015fac:	7b78      	ldrb	r0, [r7, #13]
 8015fae:	7a3b      	ldrb	r3, [r7, #8]
 8015fb0:	88ea      	ldrh	r2, [r5, #6]
 8015fb2:	00c1      	lsls	r1, r0, #3
 8015fb4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8015fb8:	4319      	orrs	r1, r3
 8015fba:	0643      	lsls	r3, r0, #25
 8015fbc:	bf44      	itt	mi
 8015fbe:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8015fc2:	b219      	sxthmi	r1, r3
 8015fc4:	0100      	lsls	r0, r0, #4
 8015fc6:	79fb      	ldrb	r3, [r7, #7]
 8015fc8:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8015fcc:	4303      	orrs	r3, r0
 8015fce:	4413      	add	r3, r2
 8015fd0:	1a5b      	subs	r3, r3, r1
 8015fd2:	b21b      	sxth	r3, r3
 8015fd4:	429c      	cmp	r4, r3
 8015fd6:	bfb8      	it	lt
 8015fd8:	461c      	movlt	r4, r3
 8015fda:	4633      	mov	r3, r6
 8015fdc:	462a      	mov	r2, r5
 8015fde:	2100      	movs	r1, #0
 8015fe0:	e7dc      	b.n	8015f9c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8015fe2:	b2a0      	uxth	r0, r4
 8015fe4:	b01e      	add	sp, #120	; 0x78
 8015fe6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8015fea:	b003      	add	sp, #12
 8015fec:	4770      	bx	lr

08015fee <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8015fee:	7a43      	ldrb	r3, [r0, #9]
 8015ff0:	8880      	ldrh	r0, [r0, #4]
 8015ff2:	4418      	add	r0, r3
 8015ff4:	b280      	uxth	r0, r0
 8015ff6:	4770      	bx	lr

08015ff8 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8015ff8:	6803      	ldr	r3, [r0, #0]
 8015ffa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015ffc:	4718      	bx	r3

08015ffe <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8015ffe:	b40e      	push	{r1, r2, r3}
 8016000:	b570      	push	{r4, r5, r6, lr}
 8016002:	b09d      	sub	sp, #116	; 0x74
 8016004:	ab21      	add	r3, sp, #132	; 0x84
 8016006:	4604      	mov	r4, r0
 8016008:	f853 5b04 	ldr.w	r5, [r3], #4
 801600c:	9302      	str	r3, [sp, #8]
 801600e:	a803      	add	r0, sp, #12
 8016010:	f000 fe18 	bl	8016c44 <_ZN8touchgfx12TextProviderC1Ev>
 8016014:	6823      	ldr	r3, [r4, #0]
 8016016:	4620      	mov	r0, r4
 8016018:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801601a:	4798      	blx	r3
 801601c:	6823      	ldr	r3, [r4, #0]
 801601e:	4606      	mov	r6, r0
 8016020:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016022:	4620      	mov	r0, r4
 8016024:	4798      	blx	r3
 8016026:	4633      	mov	r3, r6
 8016028:	9000      	str	r0, [sp, #0]
 801602a:	9a02      	ldr	r2, [sp, #8]
 801602c:	4629      	mov	r1, r5
 801602e:	a803      	add	r0, sp, #12
 8016030:	f000 fe63 	bl	8016cfa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016034:	a803      	add	r0, sp, #12
 8016036:	f001 fa31 	bl	801749c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801603a:	2401      	movs	r4, #1
 801603c:	b2a3      	uxth	r3, r4
 801603e:	b140      	cbz	r0, 8016052 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8016040:	280a      	cmp	r0, #10
 8016042:	bf08      	it	eq
 8016044:	3301      	addeq	r3, #1
 8016046:	a803      	add	r0, sp, #12
 8016048:	bf08      	it	eq
 801604a:	b21c      	sxtheq	r4, r3
 801604c:	f001 fa26 	bl	801749c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016050:	e7f4      	b.n	801603c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8016052:	4618      	mov	r0, r3
 8016054:	b01d      	add	sp, #116	; 0x74
 8016056:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801605a:	b003      	add	sp, #12
 801605c:	4770      	bx	lr

0801605e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801605e:	b40e      	push	{r1, r2, r3}
 8016060:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016062:	b09e      	sub	sp, #120	; 0x78
 8016064:	ab23      	add	r3, sp, #140	; 0x8c
 8016066:	4604      	mov	r4, r0
 8016068:	f853 5b04 	ldr.w	r5, [r3], #4
 801606c:	9303      	str	r3, [sp, #12]
 801606e:	a805      	add	r0, sp, #20
 8016070:	f000 fde8 	bl	8016c44 <_ZN8touchgfx12TextProviderC1Ev>
 8016074:	6823      	ldr	r3, [r4, #0]
 8016076:	4620      	mov	r0, r4
 8016078:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801607a:	4798      	blx	r3
 801607c:	6823      	ldr	r3, [r4, #0]
 801607e:	4606      	mov	r6, r0
 8016080:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016082:	4620      	mov	r0, r4
 8016084:	4798      	blx	r3
 8016086:	4633      	mov	r3, r6
 8016088:	4629      	mov	r1, r5
 801608a:	9000      	str	r0, [sp, #0]
 801608c:	9a03      	ldr	r2, [sp, #12]
 801608e:	a805      	add	r0, sp, #20
 8016090:	ad1e      	add	r5, sp, #120	; 0x78
 8016092:	f000 fe32 	bl	8016cfa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016096:	2100      	movs	r1, #0
 8016098:	f845 1d68 	str.w	r1, [r5, #-104]!
 801609c:	4622      	mov	r2, r4
 801609e:	462b      	mov	r3, r5
 80160a0:	a805      	add	r0, sp, #20
 80160a2:	f001 f92d 	bl	8017300 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80160a6:	f647 76ff 	movw	r6, #32767	; 0x7fff
 80160aa:	b1d8      	cbz	r0, 80160e4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 80160ac:	280a      	cmp	r0, #10
 80160ae:	d012      	beq.n	80160d6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80160b0:	9804      	ldr	r0, [sp, #16]
 80160b2:	b180      	cbz	r0, 80160d6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80160b4:	7b47      	ldrb	r7, [r0, #13]
 80160b6:	88e2      	ldrh	r2, [r4, #6]
 80160b8:	00fb      	lsls	r3, r7, #3
 80160ba:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80160be:	7a03      	ldrb	r3, [r0, #8]
 80160c0:	430b      	orrs	r3, r1
 80160c2:	0679      	lsls	r1, r7, #25
 80160c4:	bf44      	itt	mi
 80160c6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80160ca:	b21b      	sxthmi	r3, r3
 80160cc:	1ad3      	subs	r3, r2, r3
 80160ce:	b21b      	sxth	r3, r3
 80160d0:	429e      	cmp	r6, r3
 80160d2:	bfa8      	it	ge
 80160d4:	461e      	movge	r6, r3
 80160d6:	462b      	mov	r3, r5
 80160d8:	4622      	mov	r2, r4
 80160da:	2100      	movs	r1, #0
 80160dc:	a805      	add	r0, sp, #20
 80160de:	f001 f90f 	bl	8017300 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80160e2:	e7e2      	b.n	80160aa <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 80160e4:	4630      	mov	r0, r6
 80160e6:	b01e      	add	sp, #120	; 0x78
 80160e8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80160ec:	b003      	add	sp, #12
 80160ee:	4770      	bx	lr

080160f0 <_ZNK8touchgfx8Drawable10invalidateEv>:
 80160f0:	b513      	push	{r0, r1, r4, lr}
 80160f2:	6803      	ldr	r3, [r0, #0]
 80160f4:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80160f8:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80160fc:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016100:	2400      	movs	r4, #0
 8016102:	9400      	str	r4, [sp, #0]
 8016104:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016108:	691b      	ldr	r3, [r3, #16]
 801610a:	4669      	mov	r1, sp
 801610c:	4798      	blx	r3
 801610e:	b002      	add	sp, #8
 8016110:	bd10      	pop	{r4, pc}

08016112 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8016112:	b538      	push	{r3, r4, r5, lr}
 8016114:	680b      	ldr	r3, [r1, #0]
 8016116:	460c      	mov	r4, r1
 8016118:	68db      	ldr	r3, [r3, #12]
 801611a:	4605      	mov	r5, r0
 801611c:	4798      	blx	r3
 801611e:	6823      	ldr	r3, [r4, #0]
 8016120:	4620      	mov	r0, r4
 8016122:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016124:	4629      	mov	r1, r5
 8016126:	4798      	blx	r3
 8016128:	4628      	mov	r0, r5
 801612a:	bd38      	pop	{r3, r4, r5, pc}

0801612c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801612c:	b410      	push	{r4}
 801612e:	880a      	ldrh	r2, [r1, #0]
 8016130:	8884      	ldrh	r4, [r0, #4]
 8016132:	4422      	add	r2, r4
 8016134:	800a      	strh	r2, [r1, #0]
 8016136:	88c4      	ldrh	r4, [r0, #6]
 8016138:	884a      	ldrh	r2, [r1, #2]
 801613a:	4422      	add	r2, r4
 801613c:	804a      	strh	r2, [r1, #2]
 801613e:	6940      	ldr	r0, [r0, #20]
 8016140:	b120      	cbz	r0, 801614c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8016142:	6803      	ldr	r3, [r0, #0]
 8016144:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016148:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801614a:	4718      	bx	r3
 801614c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016150:	4770      	bx	lr

08016152 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8016152:	b570      	push	{r4, r5, r6, lr}
 8016154:	8882      	ldrh	r2, [r0, #4]
 8016156:	880b      	ldrh	r3, [r1, #0]
 8016158:	4413      	add	r3, r2
 801615a:	800b      	strh	r3, [r1, #0]
 801615c:	88c2      	ldrh	r2, [r0, #6]
 801615e:	884b      	ldrh	r3, [r1, #2]
 8016160:	460c      	mov	r4, r1
 8016162:	4413      	add	r3, r2
 8016164:	804b      	strh	r3, [r1, #2]
 8016166:	4605      	mov	r5, r0
 8016168:	1d01      	adds	r1, r0, #4
 801616a:	4620      	mov	r0, r4
 801616c:	f7f9 fdc6 	bl	800fcfc <_ZN8touchgfx4RectaNERKS0_>
 8016170:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016174:	2b00      	cmp	r3, #0
 8016176:	dd0b      	ble.n	8016190 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016178:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801617c:	2b00      	cmp	r3, #0
 801617e:	dd07      	ble.n	8016190 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016180:	6968      	ldr	r0, [r5, #20]
 8016182:	b128      	cbz	r0, 8016190 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016184:	6803      	ldr	r3, [r0, #0]
 8016186:	4621      	mov	r1, r4
 8016188:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801618a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801618e:	4718      	bx	r3
 8016190:	bd70      	pop	{r4, r5, r6, pc}
	...

08016194 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8016194:	b570      	push	{r4, r5, r6, lr}
 8016196:	8882      	ldrh	r2, [r0, #4]
 8016198:	880b      	ldrh	r3, [r1, #0]
 801619a:	4413      	add	r3, r2
 801619c:	800b      	strh	r3, [r1, #0]
 801619e:	88c2      	ldrh	r2, [r0, #6]
 80161a0:	884b      	ldrh	r3, [r1, #2]
 80161a2:	460c      	mov	r4, r1
 80161a4:	4413      	add	r3, r2
 80161a6:	804b      	strh	r3, [r1, #2]
 80161a8:	4605      	mov	r5, r0
 80161aa:	1d01      	adds	r1, r0, #4
 80161ac:	4620      	mov	r0, r4
 80161ae:	f7f9 fda5 	bl	800fcfc <_ZN8touchgfx4RectaNERKS0_>
 80161b2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80161b6:	2b00      	cmp	r3, #0
 80161b8:	dd19      	ble.n	80161ee <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80161ba:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80161be:	2b00      	cmp	r3, #0
 80161c0:	dd15      	ble.n	80161ee <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80161c2:	6968      	ldr	r0, [r5, #20]
 80161c4:	b128      	cbz	r0, 80161d2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80161c6:	6803      	ldr	r3, [r0, #0]
 80161c8:	4621      	mov	r1, r4
 80161ca:	691b      	ldr	r3, [r3, #16]
 80161cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80161d0:	4718      	bx	r3
 80161d2:	4b07      	ldr	r3, [pc, #28]	; (80161f0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80161d4:	681b      	ldr	r3, [r3, #0]
 80161d6:	3304      	adds	r3, #4
 80161d8:	429d      	cmp	r5, r3
 80161da:	d108      	bne.n	80161ee <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80161dc:	f7fe fea0 	bl	8014f20 <_ZN8touchgfx11Application11getInstanceEv>
 80161e0:	6803      	ldr	r3, [r0, #0]
 80161e2:	6821      	ldr	r1, [r4, #0]
 80161e4:	6862      	ldr	r2, [r4, #4]
 80161e6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80161e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80161ec:	4718      	bx	r3
 80161ee:	bd70      	pop	{r4, r5, r6, pc}
 80161f0:	20013818 	.word	0x20013818

080161f4 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80161f4:	b570      	push	{r4, r5, r6, lr}
 80161f6:	4604      	mov	r4, r0
 80161f8:	4616      	mov	r6, r2
 80161fa:	460d      	mov	r5, r1
 80161fc:	b901      	cbnz	r1, 8016200 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80161fe:	b192      	cbz	r2, 8016226 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8016200:	6823      	ldr	r3, [r4, #0]
 8016202:	4620      	mov	r0, r4
 8016204:	699b      	ldr	r3, [r3, #24]
 8016206:	4798      	blx	r3
 8016208:	88e2      	ldrh	r2, [r4, #6]
 801620a:	88a1      	ldrh	r1, [r4, #4]
 801620c:	4432      	add	r2, r6
 801620e:	4429      	add	r1, r5
 8016210:	4620      	mov	r0, r4
 8016212:	b212      	sxth	r2, r2
 8016214:	b209      	sxth	r1, r1
 8016216:	f7ec f992 	bl	800253e <_ZN8touchgfx8Drawable5setXYEss>
 801621a:	6823      	ldr	r3, [r4, #0]
 801621c:	4620      	mov	r0, r4
 801621e:	699b      	ldr	r3, [r3, #24]
 8016220:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016224:	4718      	bx	r3
 8016226:	bd70      	pop	{r4, r5, r6, pc}

08016228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8016228:	b510      	push	{r4, lr}
 801622a:	4604      	mov	r4, r0
 801622c:	4608      	mov	r0, r1
 801622e:	2300      	movs	r3, #0
 8016230:	8023      	strh	r3, [r4, #0]
 8016232:	8063      	strh	r3, [r4, #2]
 8016234:	6803      	ldr	r3, [r0, #0]
 8016236:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801623a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801623e:	80a1      	strh	r1, [r4, #4]
 8016240:	80e2      	strh	r2, [r4, #6]
 8016242:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016244:	4621      	mov	r1, r4
 8016246:	4798      	blx	r3
 8016248:	4620      	mov	r0, r4
 801624a:	bd10      	pop	{r4, pc}

0801624c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 801624c:	b530      	push	{r4, r5, lr}
 801624e:	8083      	strh	r3, [r0, #4]
 8016250:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8016254:	80c3      	strh	r3, [r0, #6]
 8016256:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801625a:	7203      	strb	r3, [r0, #8]
 801625c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8016260:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8016264:	7243      	strb	r3, [r0, #9]
 8016266:	7a83      	ldrb	r3, [r0, #10]
 8016268:	6141      	str	r1, [r0, #20]
 801626a:	f365 0306 	bfi	r3, r5, #0, #7
 801626e:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8016272:	8302      	strh	r2, [r0, #24]
 8016274:	f365 13c7 	bfi	r3, r5, #7, #1
 8016278:	7283      	strb	r3, [r0, #10]
 801627a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801627e:	72c3      	strb	r3, [r0, #11]
 8016280:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8016284:	7303      	strb	r3, [r0, #12]
 8016286:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801628a:	81c3      	strh	r3, [r0, #14]
 801628c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8016290:	8203      	strh	r3, [r0, #16]
 8016292:	4b01      	ldr	r3, [pc, #4]	; (8016298 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8016294:	6003      	str	r3, [r0, #0]
 8016296:	bd30      	pop	{r4, r5, pc}
 8016298:	0802ce88 	.word	0x0802ce88

0801629c <_ZNK8touchgfx9ConstFont4findEt>:
 801629c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801629e:	6944      	ldr	r4, [r0, #20]
 80162a0:	b3bc      	cbz	r4, 8016312 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80162a2:	88a3      	ldrh	r3, [r4, #4]
 80162a4:	8b02      	ldrh	r2, [r0, #24]
 80162a6:	1acb      	subs	r3, r1, r3
 80162a8:	f102 32ff 	add.w	r2, r2, #4294967295
 80162ac:	d431      	bmi.n	8016312 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80162ae:	4293      	cmp	r3, r2
 80162b0:	dd0c      	ble.n	80162cc <_ZNK8touchgfx9ConstFont4findEt+0x30>
 80162b2:	230e      	movs	r3, #14
 80162b4:	fb03 4302 	mla	r3, r3, r2, r4
 80162b8:	889b      	ldrh	r3, [r3, #4]
 80162ba:	1a5b      	subs	r3, r3, r1
 80162bc:	1ad3      	subs	r3, r2, r3
 80162be:	429a      	cmp	r2, r3
 80162c0:	db27      	blt.n	8016312 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80162c2:	2b00      	cmp	r3, #0
 80162c4:	bfbc      	itt	lt
 80162c6:	2302      	movlt	r3, #2
 80162c8:	fb92 f3f3 	sdivlt	r3, r2, r3
 80162cc:	2500      	movs	r5, #0
 80162ce:	260e      	movs	r6, #14
 80162d0:	4295      	cmp	r5, r2
 80162d2:	dc1e      	bgt.n	8016312 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80162d4:	fb06 4003 	mla	r0, r6, r3, r4
 80162d8:	8887      	ldrh	r7, [r0, #4]
 80162da:	42b9      	cmp	r1, r7
 80162dc:	d01a      	beq.n	8016314 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80162de:	d20d      	bcs.n	80162fc <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80162e0:	1e5a      	subs	r2, r3, #1
 80162e2:	4295      	cmp	r5, r2
 80162e4:	dc15      	bgt.n	8016312 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80162e6:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80162ea:	1a5b      	subs	r3, r3, r1
 80162ec:	1ad3      	subs	r3, r2, r3
 80162ee:	429a      	cmp	r2, r3
 80162f0:	db0f      	blt.n	8016312 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80162f2:	429d      	cmp	r5, r3
 80162f4:	ddec      	ble.n	80162d0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80162f6:	1953      	adds	r3, r2, r5
 80162f8:	105b      	asrs	r3, r3, #1
 80162fa:	e7e9      	b.n	80162d0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80162fc:	1c5d      	adds	r5, r3, #1
 80162fe:	42aa      	cmp	r2, r5
 8016300:	db07      	blt.n	8016312 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016302:	8a43      	ldrh	r3, [r0, #18]
 8016304:	1acb      	subs	r3, r1, r3
 8016306:	442b      	add	r3, r5
 8016308:	429d      	cmp	r5, r3
 801630a:	dc02      	bgt.n	8016312 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801630c:	429a      	cmp	r2, r3
 801630e:	dadf      	bge.n	80162d0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016310:	e7f1      	b.n	80162f6 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8016312:	2000      	movs	r0, #0
 8016314:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016316 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8016316:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016318:	4604      	mov	r4, r0
 801631a:	4617      	mov	r7, r2
 801631c:	461e      	mov	r6, r3
 801631e:	b911      	cbnz	r1, 8016326 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8016320:	2500      	movs	r5, #0
 8016322:	4628      	mov	r0, r5
 8016324:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016326:	290a      	cmp	r1, #10
 8016328:	d0fa      	beq.n	8016320 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801632a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801632e:	4291      	cmp	r1, r2
 8016330:	d0f6      	beq.n	8016320 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016332:	f242 020b 	movw	r2, #8203	; 0x200b
 8016336:	4291      	cmp	r1, r2
 8016338:	d0f2      	beq.n	8016320 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801633a:	f7ff ffaf 	bl	801629c <_ZNK8touchgfx9ConstFont4findEt>
 801633e:	4605      	mov	r5, r0
 8016340:	b950      	cbnz	r0, 8016358 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8016342:	6823      	ldr	r3, [r4, #0]
 8016344:	4620      	mov	r0, r4
 8016346:	691b      	ldr	r3, [r3, #16]
 8016348:	4798      	blx	r3
 801634a:	4601      	mov	r1, r0
 801634c:	4620      	mov	r0, r4
 801634e:	f7ff ffa5 	bl	801629c <_ZNK8touchgfx9ConstFont4findEt>
 8016352:	4605      	mov	r5, r0
 8016354:	2800      	cmp	r0, #0
 8016356:	d0e3      	beq.n	8016320 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016358:	6823      	ldr	r3, [r4, #0]
 801635a:	4629      	mov	r1, r5
 801635c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801635e:	4620      	mov	r0, r4
 8016360:	4798      	blx	r3
 8016362:	6038      	str	r0, [r7, #0]
 8016364:	6823      	ldr	r3, [r4, #0]
 8016366:	4620      	mov	r0, r4
 8016368:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801636a:	4798      	blx	r3
 801636c:	7030      	strb	r0, [r6, #0]
 801636e:	e7d8      	b.n	8016322 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08016370 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8016370:	b538      	push	{r3, r4, r5, lr}
 8016372:	4605      	mov	r5, r0
 8016374:	f002 f962 	bl	801863c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016378:	4604      	mov	r4, r0
 801637a:	4628      	mov	r0, r5
 801637c:	f002 f8a2 	bl	80184c4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8016380:	2800      	cmp	r0, #0
 8016382:	bf14      	ite	ne
 8016384:	2002      	movne	r0, #2
 8016386:	2000      	moveq	r0, #0
 8016388:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801638c:	b280      	uxth	r0, r0
 801638e:	bd38      	pop	{r3, r4, r5, pc}

08016390 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8016390:	b538      	push	{r3, r4, r5, lr}
 8016392:	4605      	mov	r5, r0
 8016394:	f002 f952 	bl	801863c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016398:	4604      	mov	r4, r0
 801639a:	4628      	mov	r0, r5
 801639c:	f002 f892 	bl	80184c4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80163a0:	2800      	cmp	r0, #0
 80163a2:	bf14      	ite	ne
 80163a4:	2002      	movne	r0, #2
 80163a6:	2000      	moveq	r0, #0
 80163a8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80163ac:	f040 0001 	orr.w	r0, r0, #1
 80163b0:	b280      	uxth	r0, r0
 80163b2:	bd38      	pop	{r3, r4, r5, pc}

080163b4 <_ZN8touchgfx4clzuEm>:
 80163b4:	4603      	mov	r3, r0
 80163b6:	b1c8      	cbz	r0, 80163ec <_ZN8touchgfx4clzuEm+0x38>
 80163b8:	0c02      	lsrs	r2, r0, #16
 80163ba:	0412      	lsls	r2, r2, #16
 80163bc:	b9a2      	cbnz	r2, 80163e8 <_ZN8touchgfx4clzuEm+0x34>
 80163be:	0403      	lsls	r3, r0, #16
 80163c0:	2010      	movs	r0, #16
 80163c2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80163c6:	bf04      	itt	eq
 80163c8:	021b      	lsleq	r3, r3, #8
 80163ca:	3008      	addeq	r0, #8
 80163cc:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80163d0:	bf04      	itt	eq
 80163d2:	011b      	lsleq	r3, r3, #4
 80163d4:	3004      	addeq	r0, #4
 80163d6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80163da:	bf04      	itt	eq
 80163dc:	009b      	lsleq	r3, r3, #2
 80163de:	3002      	addeq	r0, #2
 80163e0:	2b00      	cmp	r3, #0
 80163e2:	db04      	blt.n	80163ee <_ZN8touchgfx4clzuEm+0x3a>
 80163e4:	3001      	adds	r0, #1
 80163e6:	4770      	bx	lr
 80163e8:	2000      	movs	r0, #0
 80163ea:	e7ea      	b.n	80163c2 <_ZN8touchgfx4clzuEm+0xe>
 80163ec:	2020      	movs	r0, #32
 80163ee:	4770      	bx	lr

080163f0 <_ZN8touchgfx7muldivuEmmmRm>:
 80163f0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80163f4:	460f      	mov	r7, r1
 80163f6:	4615      	mov	r5, r2
 80163f8:	461e      	mov	r6, r3
 80163fa:	4601      	mov	r1, r0
 80163fc:	b100      	cbz	r0, 8016400 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 80163fe:	b927      	cbnz	r7, 801640a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8016400:	2000      	movs	r0, #0
 8016402:	6030      	str	r0, [r6, #0]
 8016404:	b002      	add	sp, #8
 8016406:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801640a:	f7ff ffd3 	bl	80163b4 <_ZN8touchgfx4clzuEm>
 801640e:	b980      	cbnz	r0, 8016432 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8016410:	4638      	mov	r0, r7
 8016412:	f7ff ffcf 	bl	80163b4 <_ZN8touchgfx4clzuEm>
 8016416:	2800      	cmp	r0, #0
 8016418:	dd05      	ble.n	8016426 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801641a:	4633      	mov	r3, r6
 801641c:	462a      	mov	r2, r5
 801641e:	4638      	mov	r0, r7
 8016420:	f7ff ffe6 	bl	80163f0 <_ZN8touchgfx7muldivuEmmmRm>
 8016424:	e7ee      	b.n	8016404 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8016426:	f04f 33ff 	mov.w	r3, #4294967295
 801642a:	6033      	str	r3, [r6, #0]
 801642c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8016430:	e7e8      	b.n	8016404 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8016432:	fa37 f800 	lsrs.w	r8, r7, r0
 8016436:	fb07 f301 	mul.w	r3, r7, r1
 801643a:	d105      	bne.n	8016448 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 801643c:	fbb3 f0f5 	udiv	r0, r3, r5
 8016440:	fb05 3510 	mls	r5, r5, r0, r3
 8016444:	6035      	str	r5, [r6, #0]
 8016446:	e7dd      	b.n	8016404 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8016448:	2301      	movs	r3, #1
 801644a:	fa01 fa00 	lsl.w	sl, r1, r0
 801644e:	fa03 f000 	lsl.w	r0, r3, r0
 8016452:	3801      	subs	r0, #1
 8016454:	462a      	mov	r2, r5
 8016456:	4633      	mov	r3, r6
 8016458:	4038      	ands	r0, r7
 801645a:	f7ff ffc9 	bl	80163f0 <_ZN8touchgfx7muldivuEmmmRm>
 801645e:	fbba f9f5 	udiv	r9, sl, r5
 8016462:	462a      	mov	r2, r5
 8016464:	4607      	mov	r7, r0
 8016466:	ab01      	add	r3, sp, #4
 8016468:	fb05 a119 	mls	r1, r5, r9, sl
 801646c:	4640      	mov	r0, r8
 801646e:	f7ff ffbf 	bl	80163f0 <_ZN8touchgfx7muldivuEmmmRm>
 8016472:	9b01      	ldr	r3, [sp, #4]
 8016474:	6832      	ldr	r2, [r6, #0]
 8016476:	fb08 f409 	mul.w	r4, r8, r9
 801647a:	441a      	add	r2, r3
 801647c:	fbb2 f3f5 	udiv	r3, r2, r5
 8016480:	441c      	add	r4, r3
 8016482:	443c      	add	r4, r7
 8016484:	4420      	add	r0, r4
 8016486:	fb05 2513 	mls	r5, r5, r3, r2
 801648a:	e7db      	b.n	8016444 <_ZN8touchgfx7muldivuEmmmRm+0x54>

0801648c <_ZN8touchgfx6muldivElllRl>:
 801648c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801648e:	2800      	cmp	r0, #0
 8016490:	bfba      	itte	lt
 8016492:	4240      	neglt	r0, r0
 8016494:	f04f 34ff 	movlt.w	r4, #4294967295
 8016498:	2401      	movge	r4, #1
 801649a:	2900      	cmp	r1, #0
 801649c:	bfbc      	itt	lt
 801649e:	4249      	neglt	r1, r1
 80164a0:	4264      	neglt	r4, r4
 80164a2:	2a00      	cmp	r2, #0
 80164a4:	bfb6      	itet	lt
 80164a6:	4265      	neglt	r5, r4
 80164a8:	4625      	movge	r5, r4
 80164aa:	4252      	neglt	r2, r2
 80164ac:	4288      	cmp	r0, r1
 80164ae:	461e      	mov	r6, r3
 80164b0:	bfc2      	ittt	gt
 80164b2:	4603      	movgt	r3, r0
 80164b4:	4608      	movgt	r0, r1
 80164b6:	4619      	movgt	r1, r3
 80164b8:	ab01      	add	r3, sp, #4
 80164ba:	f7ff ff99 	bl	80163f0 <_ZN8touchgfx7muldivuEmmmRm>
 80164be:	9b01      	ldr	r3, [sp, #4]
 80164c0:	4368      	muls	r0, r5
 80164c2:	435c      	muls	r4, r3
 80164c4:	6034      	str	r4, [r6, #0]
 80164c6:	b002      	add	sp, #8
 80164c8:	bd70      	pop	{r4, r5, r6, pc}

080164ca <_ZN8touchgfx6muldivElll>:
 80164ca:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80164cc:	4606      	mov	r6, r0
 80164ce:	ab01      	add	r3, sp, #4
 80164d0:	460d      	mov	r5, r1
 80164d2:	4614      	mov	r4, r2
 80164d4:	f7ff ffda 	bl	801648c <_ZN8touchgfx6muldivElllRl>
 80164d8:	2e00      	cmp	r6, #0
 80164da:	db20      	blt.n	801651e <_ZN8touchgfx6muldivElll+0x54>
 80164dc:	bf14      	ite	ne
 80164de:	2301      	movne	r3, #1
 80164e0:	2300      	moveq	r3, #0
 80164e2:	2d00      	cmp	r5, #0
 80164e4:	db1e      	blt.n	8016524 <_ZN8touchgfx6muldivElll+0x5a>
 80164e6:	bf14      	ite	ne
 80164e8:	2201      	movne	r2, #1
 80164ea:	2200      	moveq	r2, #0
 80164ec:	2c00      	cmp	r4, #0
 80164ee:	fb03 f202 	mul.w	r2, r3, r2
 80164f2:	db1a      	blt.n	801652a <_ZN8touchgfx6muldivElll+0x60>
 80164f4:	bf14      	ite	ne
 80164f6:	2301      	movne	r3, #1
 80164f8:	2300      	moveq	r3, #0
 80164fa:	4353      	muls	r3, r2
 80164fc:	2b01      	cmp	r3, #1
 80164fe:	d117      	bne.n	8016530 <_ZN8touchgfx6muldivElll+0x66>
 8016500:	9b01      	ldr	r3, [sp, #4]
 8016502:	2c00      	cmp	r4, #0
 8016504:	bfb8      	it	lt
 8016506:	4264      	neglt	r4, r4
 8016508:	2b00      	cmp	r3, #0
 801650a:	f104 0401 	add.w	r4, r4, #1
 801650e:	bfb8      	it	lt
 8016510:	425b      	neglt	r3, r3
 8016512:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8016516:	db00      	blt.n	801651a <_ZN8touchgfx6muldivElll+0x50>
 8016518:	3001      	adds	r0, #1
 801651a:	b002      	add	sp, #8
 801651c:	bd70      	pop	{r4, r5, r6, pc}
 801651e:	f04f 33ff 	mov.w	r3, #4294967295
 8016522:	e7de      	b.n	80164e2 <_ZN8touchgfx6muldivElll+0x18>
 8016524:	f04f 32ff 	mov.w	r2, #4294967295
 8016528:	e7e0      	b.n	80164ec <_ZN8touchgfx6muldivElll+0x22>
 801652a:	f04f 33ff 	mov.w	r3, #4294967295
 801652e:	e7e4      	b.n	80164fa <_ZN8touchgfx6muldivElll+0x30>
 8016530:	3301      	adds	r3, #1
 8016532:	d1f2      	bne.n	801651a <_ZN8touchgfx6muldivElll+0x50>
 8016534:	9b01      	ldr	r3, [sp, #4]
 8016536:	2c00      	cmp	r4, #0
 8016538:	bfb8      	it	lt
 801653a:	4264      	neglt	r4, r4
 801653c:	2b00      	cmp	r3, #0
 801653e:	bfb8      	it	lt
 8016540:	425b      	neglt	r3, r3
 8016542:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8016546:	bfc8      	it	gt
 8016548:	f100 30ff 	addgt.w	r0, r0, #4294967295
 801654c:	e7e5      	b.n	801651a <_ZN8touchgfx6muldivElll+0x50>

0801654e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801654e:	2000      	movs	r0, #0
 8016550:	4770      	bx	lr

08016552 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8016552:	2001      	movs	r0, #1
 8016554:	4770      	bx	lr

08016556 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8016556:	2002      	movs	r0, #2
 8016558:	4770      	bx	lr

0801655a <_ZN8touchgfx6ScreenD1Ev>:
 801655a:	4770      	bx	lr

0801655c <_ZN8touchgfx12GestureEventD1Ev>:
 801655c:	4770      	bx	lr

0801655e <_ZN8touchgfx9DragEventD1Ev>:
 801655e:	4770      	bx	lr

08016560 <_ZN8touchgfx10ClickEventD1Ev>:
 8016560:	4770      	bx	lr

08016562 <_ZN8touchgfx10ClickEventD0Ev>:
 8016562:	b510      	push	{r4, lr}
 8016564:	210c      	movs	r1, #12
 8016566:	4604      	mov	r4, r0
 8016568:	f011 fa39 	bl	80279de <_ZdlPvj>
 801656c:	4620      	mov	r0, r4
 801656e:	bd10      	pop	{r4, pc}

08016570 <_ZN8touchgfx9DragEventD0Ev>:
 8016570:	b510      	push	{r4, lr}
 8016572:	2110      	movs	r1, #16
 8016574:	4604      	mov	r4, r0
 8016576:	f011 fa32 	bl	80279de <_ZdlPvj>
 801657a:	4620      	mov	r0, r4
 801657c:	bd10      	pop	{r4, pc}

0801657e <_ZN8touchgfx12GestureEventD0Ev>:
 801657e:	b510      	push	{r4, lr}
 8016580:	210c      	movs	r1, #12
 8016582:	4604      	mov	r4, r0
 8016584:	f011 fa2b 	bl	80279de <_ZdlPvj>
 8016588:	4620      	mov	r0, r4
 801658a:	bd10      	pop	{r4, pc}

0801658c <_ZN8touchgfx6ScreenD0Ev>:
 801658c:	b510      	push	{r4, lr}
 801658e:	213c      	movs	r1, #60	; 0x3c
 8016590:	4604      	mov	r4, r0
 8016592:	f011 fa24 	bl	80279de <_ZdlPvj>
 8016596:	4620      	mov	r0, r4
 8016598:	bd10      	pop	{r4, pc}
	...

0801659c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801659c:	b530      	push	{r4, r5, lr}
 801659e:	460d      	mov	r5, r1
 80165a0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80165a2:	b087      	sub	sp, #28
 80165a4:	4604      	mov	r4, r0
 80165a6:	b301      	cbz	r1, 80165ea <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80165a8:	a801      	add	r0, sp, #4
 80165aa:	f7ff fe3d 	bl	8016228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80165ae:	892a      	ldrh	r2, [r5, #8]
 80165b0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80165b4:	7928      	ldrb	r0, [r5, #4]
 80165b6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80165ba:	f88d 0010 	strb.w	r0, [sp, #16]
 80165be:	1ad2      	subs	r2, r2, r3
 80165c0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80165c2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80165c4:	f8ad 1012 	strh.w	r1, [sp, #18]
 80165c8:	441a      	add	r2, r3
 80165ca:	896b      	ldrh	r3, [r5, #10]
 80165cc:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80165d0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80165d4:	1b5b      	subs	r3, r3, r5
 80165d6:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 80165d8:	442b      	add	r3, r5
 80165da:	4d05      	ldr	r5, [pc, #20]	; (80165f0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80165dc:	9503      	str	r5, [sp, #12]
 80165de:	f8ad 3016 	strh.w	r3, [sp, #22]
 80165e2:	6803      	ldr	r3, [r0, #0]
 80165e4:	a903      	add	r1, sp, #12
 80165e6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80165e8:	4798      	blx	r3
 80165ea:	b007      	add	sp, #28
 80165ec:	bd30      	pop	{r4, r5, pc}
 80165ee:	bf00      	nop
 80165f0:	0802cf10 	.word	0x0802cf10

080165f4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 80165f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80165f8:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80165fa:	b08a      	sub	sp, #40	; 0x28
 80165fc:	4604      	mov	r4, r0
 80165fe:	460d      	mov	r5, r1
 8016600:	b113      	cbz	r3, 8016608 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8016602:	790b      	ldrb	r3, [r1, #4]
 8016604:	2b00      	cmp	r3, #0
 8016606:	d044      	beq.n	8016692 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016608:	f104 0804 	add.w	r8, r4, #4
 801660c:	4641      	mov	r1, r8
 801660e:	a803      	add	r0, sp, #12
 8016610:	f7ff fe0a 	bl	8016228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016614:	792b      	ldrb	r3, [r5, #4]
 8016616:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801661a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801661e:	b983      	cbnz	r3, 8016642 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8016620:	892a      	ldrh	r2, [r5, #8]
 8016622:	88e9      	ldrh	r1, [r5, #6]
 8016624:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8016628:	1b92      	subs	r2, r2, r6
 801662a:	1bc9      	subs	r1, r1, r7
 801662c:	9301      	str	r3, [sp, #4]
 801662e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8016632:	9300      	str	r3, [sp, #0]
 8016634:	b212      	sxth	r2, r2
 8016636:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801663a:	b209      	sxth	r1, r1
 801663c:	4640      	mov	r0, r8
 801663e:	f7f9 fa79 	bl	800fb34 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8016642:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8016644:	b329      	cbz	r1, 8016692 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016646:	a805      	add	r0, sp, #20
 8016648:	f7ff fdee 	bl	8016228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801664c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8016650:	792b      	ldrb	r3, [r5, #4]
 8016652:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8016654:	f88d 3020 	strb.w	r3, [sp, #32]
 8016658:	1abf      	subs	r7, r7, r2
 801665a:	88ea      	ldrh	r2, [r5, #6]
 801665c:	4417      	add	r7, r2
 801665e:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8016660:	4417      	add	r7, r2
 8016662:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8016666:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801666a:	1ab6      	subs	r6, r6, r2
 801666c:	892a      	ldrh	r2, [r5, #8]
 801666e:	4416      	add	r6, r2
 8016670:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8016672:	4416      	add	r6, r2
 8016674:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8016678:	4a07      	ldr	r2, [pc, #28]	; (8016698 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801667a:	9207      	str	r2, [sp, #28]
 801667c:	2600      	movs	r6, #0
 801667e:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8016682:	6803      	ldr	r3, [r0, #0]
 8016684:	a907      	add	r1, sp, #28
 8016686:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016688:	4798      	blx	r3
 801668a:	792b      	ldrb	r3, [r5, #4]
 801668c:	b10b      	cbz	r3, 8016692 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801668e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8016692:	b00a      	add	sp, #40	; 0x28
 8016694:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016698:	0802cee8 	.word	0x0802cee8

0801669c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801669c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80166a0:	460c      	mov	r4, r1
 80166a2:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80166a4:	b088      	sub	sp, #32
 80166a6:	4605      	mov	r5, r0
 80166a8:	2900      	cmp	r1, #0
 80166aa:	d06d      	beq.n	8016788 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80166ac:	4668      	mov	r0, sp
 80166ae:	f7ff fdbb 	bl	8016228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80166b2:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 80166b4:	88e3      	ldrh	r3, [r4, #6]
 80166b6:	f9bd 8000 	ldrsh.w	r8, [sp]
 80166ba:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80166be:	440b      	add	r3, r1
 80166c0:	b21b      	sxth	r3, r3
 80166c2:	4543      	cmp	r3, r8
 80166c4:	db31      	blt.n	801672a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80166c6:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80166ca:	44c4      	add	ip, r8
 80166cc:	fa0f fc8c 	sxth.w	ip, ip
 80166d0:	4563      	cmp	r3, ip
 80166d2:	da2a      	bge.n	801672a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80166d4:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 80166d6:	8926      	ldrh	r6, [r4, #8]
 80166d8:	4416      	add	r6, r2
 80166da:	b236      	sxth	r6, r6
 80166dc:	42be      	cmp	r6, r7
 80166de:	db24      	blt.n	801672a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80166e0:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80166e4:	4438      	add	r0, r7
 80166e6:	b200      	sxth	r0, r0
 80166e8:	4286      	cmp	r6, r0
 80166ea:	da1e      	bge.n	801672a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80166ec:	8963      	ldrh	r3, [r4, #10]
 80166ee:	4419      	add	r1, r3
 80166f0:	b209      	sxth	r1, r1
 80166f2:	4541      	cmp	r1, r8
 80166f4:	db08      	blt.n	8016708 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80166f6:	4561      	cmp	r1, ip
 80166f8:	da06      	bge.n	8016708 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80166fa:	89a3      	ldrh	r3, [r4, #12]
 80166fc:	441a      	add	r2, r3
 80166fe:	b212      	sxth	r2, r2
 8016700:	42ba      	cmp	r2, r7
 8016702:	db01      	blt.n	8016708 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016704:	4282      	cmp	r2, r0
 8016706:	db10      	blt.n	801672a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016708:	4b21      	ldr	r3, [pc, #132]	; (8016790 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801670a:	9304      	str	r3, [sp, #16]
 801670c:	2302      	movs	r3, #2
 801670e:	f88d 3014 	strb.w	r3, [sp, #20]
 8016712:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8016714:	2300      	movs	r3, #0
 8016716:	f8ad 3016 	strh.w	r3, [sp, #22]
 801671a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801671e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8016722:	6803      	ldr	r3, [r0, #0]
 8016724:	a904      	add	r1, sp, #16
 8016726:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016728:	4798      	blx	r3
 801672a:	1d29      	adds	r1, r5, #4
 801672c:	a802      	add	r0, sp, #8
 801672e:	f7ff fd7b 	bl	8016228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016732:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016736:	88e0      	ldrh	r0, [r4, #6]
 8016738:	7921      	ldrb	r1, [r4, #4]
 801673a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801673e:	8922      	ldrh	r2, [r4, #8]
 8016740:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8016742:	f88d 1014 	strb.w	r1, [sp, #20]
 8016746:	eba3 0808 	sub.w	r8, r3, r8
 801674a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801674e:	1bdf      	subs	r7, r3, r7
 8016750:	b2bb      	uxth	r3, r7
 8016752:	fa1f f888 	uxth.w	r8, r8
 8016756:	8967      	ldrh	r7, [r4, #10]
 8016758:	89a4      	ldrh	r4, [r4, #12]
 801675a:	4440      	add	r0, r8
 801675c:	4460      	add	r0, ip
 801675e:	441a      	add	r2, r3
 8016760:	44b8      	add	r8, r7
 8016762:	4423      	add	r3, r4
 8016764:	f8ad 0016 	strh.w	r0, [sp, #22]
 8016768:	4433      	add	r3, r6
 801676a:	4432      	add	r2, r6
 801676c:	44e0      	add	r8, ip
 801676e:	4c09      	ldr	r4, [pc, #36]	; (8016794 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8016770:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8016772:	9404      	str	r4, [sp, #16]
 8016774:	f8ad 2018 	strh.w	r2, [sp, #24]
 8016778:	f8ad 801a 	strh.w	r8, [sp, #26]
 801677c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8016780:	6803      	ldr	r3, [r0, #0]
 8016782:	a904      	add	r1, sp, #16
 8016784:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016786:	4798      	blx	r3
 8016788:	b008      	add	sp, #32
 801678a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801678e:	bf00      	nop
 8016790:	0802cee8 	.word	0x0802cee8
 8016794:	0802cefc 	.word	0x0802cefc

08016798 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8016798:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801679a:	4604      	mov	r4, r0
 801679c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80167a0:	3201      	adds	r2, #1
 80167a2:	d112      	bne.n	80167ca <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80167a4:	6803      	ldr	r3, [r0, #0]
 80167a6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80167aa:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80167ae:	f8ad 1004 	strh.w	r1, [sp, #4]
 80167b2:	2500      	movs	r5, #0
 80167b4:	9500      	str	r5, [sp, #0]
 80167b6:	466d      	mov	r5, sp
 80167b8:	4629      	mov	r1, r5
 80167ba:	f8ad 2006 	strh.w	r2, [sp, #6]
 80167be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80167c0:	4798      	blx	r3
 80167c2:	e895 0003 	ldmia.w	r5, {r0, r1}
 80167c6:	e884 0003 	stmia.w	r4, {r0, r1}
 80167ca:	4620      	mov	r0, r4
 80167cc:	b003      	add	sp, #12
 80167ce:	bd30      	pop	{r4, r5, pc}

080167d0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 80167d0:	b513      	push	{r0, r1, r4, lr}
 80167d2:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 80167d6:	3301      	adds	r3, #1
 80167d8:	4604      	mov	r4, r0
 80167da:	d109      	bne.n	80167f0 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 80167dc:	4601      	mov	r1, r0
 80167de:	4668      	mov	r0, sp
 80167e0:	f7ff fd22 	bl	8016228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80167e4:	f8bd 3000 	ldrh.w	r3, [sp]
 80167e8:	8423      	strh	r3, [r4, #32]
 80167ea:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80167ee:	8463      	strh	r3, [r4, #34]	; 0x22
 80167f0:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 80167f4:	b002      	add	sp, #8
 80167f6:	bd10      	pop	{r4, pc}

080167f8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 80167f8:	b513      	push	{r0, r1, r4, lr}
 80167fa:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 80167fe:	3301      	adds	r3, #1
 8016800:	4604      	mov	r4, r0
 8016802:	d109      	bne.n	8016818 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8016804:	4601      	mov	r1, r0
 8016806:	4668      	mov	r0, sp
 8016808:	f7ff fd0e 	bl	8016228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801680c:	f8bd 3000 	ldrh.w	r3, [sp]
 8016810:	8423      	strh	r3, [r4, #32]
 8016812:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016816:	8463      	strh	r3, [r4, #34]	; 0x22
 8016818:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801681c:	b002      	add	sp, #8
 801681e:	bd10      	pop	{r4, pc}

08016820 <_ZN8touchgfx6ScreenC1Ev>:
 8016820:	b570      	push	{r4, r5, r6, lr}
 8016822:	4605      	mov	r5, r0
 8016824:	4b16      	ldr	r3, [pc, #88]	; (8016880 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8016826:	f845 3b04 	str.w	r3, [r5], #4
 801682a:	2300      	movs	r3, #0
 801682c:	8103      	strh	r3, [r0, #8]
 801682e:	8143      	strh	r3, [r0, #10]
 8016830:	8183      	strh	r3, [r0, #12]
 8016832:	81c3      	strh	r3, [r0, #14]
 8016834:	8203      	strh	r3, [r0, #16]
 8016836:	8243      	strh	r3, [r0, #18]
 8016838:	8283      	strh	r3, [r0, #20]
 801683a:	82c3      	strh	r3, [r0, #22]
 801683c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8016840:	6203      	str	r3, [r0, #32]
 8016842:	8483      	strh	r3, [r0, #36]	; 0x24
 8016844:	84c3      	strh	r3, [r0, #38]	; 0x26
 8016846:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801684a:	4a0e      	ldr	r2, [pc, #56]	; (8016884 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801684c:	6343      	str	r3, [r0, #52]	; 0x34
 801684e:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8016852:	4b0d      	ldr	r3, [pc, #52]	; (8016888 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8016854:	6042      	str	r2, [r0, #4]
 8016856:	f9b3 6000 	ldrsh.w	r6, [r3]
 801685a:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801685c:	4a0b      	ldr	r2, [pc, #44]	; (801688c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801685e:	4604      	mov	r4, r0
 8016860:	2101      	movs	r1, #1
 8016862:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8016866:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801686a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801686e:	4628      	mov	r0, r5
 8016870:	4798      	blx	r3
 8016872:	6863      	ldr	r3, [r4, #4]
 8016874:	4628      	mov	r0, r5
 8016876:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016878:	4631      	mov	r1, r6
 801687a:	4798      	blx	r3
 801687c:	4620      	mov	r0, r4
 801687e:	bd70      	pop	{r4, r5, r6, pc}
 8016880:	0802cf24 	.word	0x0802cf24
 8016884:	0802c788 	.word	0x0802c788
 8016888:	200137ca 	.word	0x200137ca
 801688c:	200137c8 	.word	0x200137c8

08016890 <_ZN8touchgfx6Screen4drawEv>:
 8016890:	b507      	push	{r0, r1, r2, lr}
 8016892:	4b09      	ldr	r3, [pc, #36]	; (80168b8 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8016894:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016898:	4b08      	ldr	r3, [pc, #32]	; (80168bc <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801689a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801689e:	f9b3 3000 	ldrsh.w	r3, [r3]
 80168a2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80168a6:	6803      	ldr	r3, [r0, #0]
 80168a8:	2100      	movs	r1, #0
 80168aa:	9100      	str	r1, [sp, #0]
 80168ac:	689b      	ldr	r3, [r3, #8]
 80168ae:	4669      	mov	r1, sp
 80168b0:	4798      	blx	r3
 80168b2:	b003      	add	sp, #12
 80168b4:	f85d fb04 	ldr.w	pc, [sp], #4
 80168b8:	200137c8 	.word	0x200137c8
 80168bc:	200137ca 	.word	0x200137ca

080168c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80168c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80168c4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80168c8:	2b00      	cmp	r3, #0
 80168ca:	b089      	sub	sp, #36	; 0x24
 80168cc:	4680      	mov	r8, r0
 80168ce:	460c      	mov	r4, r1
 80168d0:	4615      	mov	r5, r2
 80168d2:	dd0e      	ble.n	80168f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80168d4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80168d8:	2b00      	cmp	r3, #0
 80168da:	dd0a      	ble.n	80168f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80168dc:	4628      	mov	r0, r5
 80168de:	f7ff ff5b 	bl	8016798 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80168e2:	4621      	mov	r1, r4
 80168e4:	f7fe fa3d 	bl	8014d62 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80168e8:	69eb      	ldr	r3, [r5, #28]
 80168ea:	b928      	cbnz	r0, 80168f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 80168ec:	461d      	mov	r5, r3
 80168ee:	2b00      	cmp	r3, #0
 80168f0:	d1f4      	bne.n	80168dc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 80168f2:	b009      	add	sp, #36	; 0x24
 80168f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80168f8:	ae04      	add	r6, sp, #16
 80168fa:	2b00      	cmp	r3, #0
 80168fc:	f000 80b5 	beq.w	8016a6a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016900:	682b      	ldr	r3, [r5, #0]
 8016902:	4629      	mov	r1, r5
 8016904:	68db      	ldr	r3, [r3, #12]
 8016906:	a802      	add	r0, sp, #8
 8016908:	4798      	blx	r3
 801690a:	4628      	mov	r0, r5
 801690c:	f7ff ff60 	bl	80167d0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016910:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8016914:	4407      	add	r7, r0
 8016916:	4628      	mov	r0, r5
 8016918:	f7ff ff6e 	bl	80167f8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801691c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016920:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8016924:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016928:	4418      	add	r0, r3
 801692a:	4621      	mov	r1, r4
 801692c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8016930:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016934:	b23f      	sxth	r7, r7
 8016936:	4630      	mov	r0, r6
 8016938:	f8ad 3016 	strh.w	r3, [sp, #22]
 801693c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8016940:	f7f9 f9dc 	bl	800fcfc <_ZN8touchgfx4RectaNERKS0_>
 8016944:	4628      	mov	r0, r5
 8016946:	f7ff ff27 	bl	8016798 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801694a:	4602      	mov	r2, r0
 801694c:	e896 0003 	ldmia.w	r6, {r0, r1}
 8016950:	ab06      	add	r3, sp, #24
 8016952:	e883 0003 	stmia.w	r3, {r0, r1}
 8016956:	4611      	mov	r1, r2
 8016958:	4618      	mov	r0, r3
 801695a:	f7f9 f9cf 	bl	800fcfc <_ZN8touchgfx4RectaNERKS0_>
 801695e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8016962:	f9b4 1000 	ldrsh.w	r1, [r4]
 8016966:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801696a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801696e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8016972:	4299      	cmp	r1, r3
 8016974:	d10b      	bne.n	801698e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016976:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801697a:	4552      	cmp	r2, sl
 801697c:	d107      	bne.n	801698e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801697e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8016982:	455a      	cmp	r2, fp
 8016984:	d103      	bne.n	801698e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016986:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801698a:	454a      	cmp	r2, r9
 801698c:	d06d      	beq.n	8016a6a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801698e:	f1bb 0f00 	cmp.w	fp, #0
 8016992:	dd65      	ble.n	8016a60 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8016994:	f1b9 0f00 	cmp.w	r9, #0
 8016998:	dd62      	ble.n	8016a60 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801699a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801699e:	fa1f f08a 	uxth.w	r0, sl
 80169a2:	4552      	cmp	r2, sl
 80169a4:	9000      	str	r0, [sp, #0]
 80169a6:	da12      	bge.n	80169ce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80169a8:	9301      	str	r3, [sp, #4]
 80169aa:	9b00      	ldr	r3, [sp, #0]
 80169ac:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80169b0:	f8ad 2012 	strh.w	r2, [sp, #18]
 80169b4:	1a9a      	subs	r2, r3, r2
 80169b6:	f8ad 1010 	strh.w	r1, [sp, #16]
 80169ba:	f8ad 0014 	strh.w	r0, [sp, #20]
 80169be:	f8ad 2016 	strh.w	r2, [sp, #22]
 80169c2:	69ea      	ldr	r2, [r5, #28]
 80169c4:	4631      	mov	r1, r6
 80169c6:	4640      	mov	r0, r8
 80169c8:	f7ff ff7a 	bl	80168c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80169cc:	9b01      	ldr	r3, [sp, #4]
 80169ce:	f9b4 2000 	ldrsh.w	r2, [r4]
 80169d2:	429a      	cmp	r2, r3
 80169d4:	b29f      	uxth	r7, r3
 80169d6:	da0d      	bge.n	80169f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 80169d8:	f8ad 2010 	strh.w	r2, [sp, #16]
 80169dc:	1aba      	subs	r2, r7, r2
 80169de:	f8ad a012 	strh.w	sl, [sp, #18]
 80169e2:	f8ad 2014 	strh.w	r2, [sp, #20]
 80169e6:	f8ad 9016 	strh.w	r9, [sp, #22]
 80169ea:	69ea      	ldr	r2, [r5, #28]
 80169ec:	4631      	mov	r1, r6
 80169ee:	4640      	mov	r0, r8
 80169f0:	f7ff ff66 	bl	80168c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80169f4:	8822      	ldrh	r2, [r4, #0]
 80169f6:	88a3      	ldrh	r3, [r4, #4]
 80169f8:	445f      	add	r7, fp
 80169fa:	4413      	add	r3, r2
 80169fc:	b29b      	uxth	r3, r3
 80169fe:	b2bf      	uxth	r7, r7
 8016a00:	b23a      	sxth	r2, r7
 8016a02:	b219      	sxth	r1, r3
 8016a04:	4291      	cmp	r1, r2
 8016a06:	dd0d      	ble.n	8016a24 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8016a08:	1bdb      	subs	r3, r3, r7
 8016a0a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016a0e:	f8ad a012 	strh.w	sl, [sp, #18]
 8016a12:	f8ad 3014 	strh.w	r3, [sp, #20]
 8016a16:	f8ad 9016 	strh.w	r9, [sp, #22]
 8016a1a:	69ea      	ldr	r2, [r5, #28]
 8016a1c:	4631      	mov	r1, r6
 8016a1e:	4640      	mov	r0, r8
 8016a20:	f7ff ff4e 	bl	80168c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016a24:	88e2      	ldrh	r2, [r4, #6]
 8016a26:	8863      	ldrh	r3, [r4, #2]
 8016a28:	4413      	add	r3, r2
 8016a2a:	9a00      	ldr	r2, [sp, #0]
 8016a2c:	444a      	add	r2, r9
 8016a2e:	b29b      	uxth	r3, r3
 8016a30:	fa1f f982 	uxth.w	r9, r2
 8016a34:	fa0f f289 	sxth.w	r2, r9
 8016a38:	b219      	sxth	r1, r3
 8016a3a:	428a      	cmp	r2, r1
 8016a3c:	da15      	bge.n	8016a6a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016a3e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8016a42:	f9b4 0000 	ldrsh.w	r0, [r4]
 8016a46:	f8ad 1014 	strh.w	r1, [sp, #20]
 8016a4a:	eba3 0309 	sub.w	r3, r3, r9
 8016a4e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016a52:	f8ad 2012 	strh.w	r2, [sp, #18]
 8016a56:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016a5a:	69ea      	ldr	r2, [r5, #28]
 8016a5c:	4631      	mov	r1, r6
 8016a5e:	e001      	b.n	8016a64 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8016a60:	69ea      	ldr	r2, [r5, #28]
 8016a62:	4621      	mov	r1, r4
 8016a64:	4640      	mov	r0, r8
 8016a66:	f7ff ff2b 	bl	80168c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016a6a:	4628      	mov	r0, r5
 8016a6c:	f7ff fe94 	bl	8016798 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016a70:	6861      	ldr	r1, [r4, #4]
 8016a72:	4602      	mov	r2, r0
 8016a74:	6820      	ldr	r0, [r4, #0]
 8016a76:	4633      	mov	r3, r6
 8016a78:	c303      	stmia	r3!, {r0, r1}
 8016a7a:	4611      	mov	r1, r2
 8016a7c:	4630      	mov	r0, r6
 8016a7e:	f7f9 f93d 	bl	800fcfc <_ZN8touchgfx4RectaNERKS0_>
 8016a82:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8016a86:	2b00      	cmp	r3, #0
 8016a88:	f77f af33 	ble.w	80168f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016a8c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8016a90:	2b00      	cmp	r3, #0
 8016a92:	f77f af2e 	ble.w	80168f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016a96:	4628      	mov	r0, r5
 8016a98:	f7ff fe9a 	bl	80167d0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016a9c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8016aa0:	1a18      	subs	r0, r3, r0
 8016aa2:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016aa6:	4628      	mov	r0, r5
 8016aa8:	f7ff fea6 	bl	80167f8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8016aac:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8016ab0:	1a18      	subs	r0, r3, r0
 8016ab2:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016ab6:	682b      	ldr	r3, [r5, #0]
 8016ab8:	4631      	mov	r1, r6
 8016aba:	689b      	ldr	r3, [r3, #8]
 8016abc:	4628      	mov	r0, r5
 8016abe:	4798      	blx	r3
 8016ac0:	e717      	b.n	80168f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08016ac2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8016ac2:	b570      	push	{r4, r5, r6, lr}
 8016ac4:	460c      	mov	r4, r1
 8016ac6:	b086      	sub	sp, #24
 8016ac8:	1d06      	adds	r6, r0, #4
 8016aca:	2300      	movs	r3, #0
 8016acc:	4631      	mov	r1, r6
 8016ace:	4605      	mov	r5, r0
 8016ad0:	a802      	add	r0, sp, #8
 8016ad2:	9301      	str	r3, [sp, #4]
 8016ad4:	f7ff fba8 	bl	8016228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016ad8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016adc:	8822      	ldrh	r2, [r4, #0]
 8016ade:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8016ae2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016ae6:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016aea:	1ad2      	subs	r2, r2, r3
 8016aec:	8863      	ldrh	r3, [r4, #2]
 8016aee:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016af2:	1a5b      	subs	r3, r3, r1
 8016af4:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8016af8:	f8ad 1016 	strh.w	r1, [sp, #22]
 8016afc:	aa01      	add	r2, sp, #4
 8016afe:	a904      	add	r1, sp, #16
 8016b00:	4630      	mov	r0, r6
 8016b02:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016b06:	f7f9 f9d1 	bl	800feac <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8016b0a:	9a01      	ldr	r2, [sp, #4]
 8016b0c:	b11a      	cbz	r2, 8016b16 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8016b0e:	4621      	mov	r1, r4
 8016b10:	4628      	mov	r0, r5
 8016b12:	f7ff fed5 	bl	80168c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016b16:	b006      	add	sp, #24
 8016b18:	bd70      	pop	{r4, r5, r6, pc}

08016b1a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8016b1a:	b530      	push	{r4, r5, lr}
 8016b1c:	4602      	mov	r2, r0
 8016b1e:	4604      	mov	r4, r0
 8016b20:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8016b24:	b085      	sub	sp, #20
 8016b26:	460d      	mov	r5, r1
 8016b28:	6851      	ldr	r1, [r2, #4]
 8016b2a:	466b      	mov	r3, sp
 8016b2c:	c303      	stmia	r3!, {r0, r1}
 8016b2e:	4629      	mov	r1, r5
 8016b30:	4668      	mov	r0, sp
 8016b32:	f7f9 f8e3 	bl	800fcfc <_ZN8touchgfx4RectaNERKS0_>
 8016b36:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8016b3a:	b12b      	cbz	r3, 8016b48 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8016b3c:	4669      	mov	r1, sp
 8016b3e:	4620      	mov	r0, r4
 8016b40:	f7ff ffbf 	bl	8016ac2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8016b44:	b005      	add	sp, #20
 8016b46:	bd30      	pop	{r4, r5, pc}
 8016b48:	3404      	adds	r4, #4
 8016b4a:	4621      	mov	r1, r4
 8016b4c:	a802      	add	r0, sp, #8
 8016b4e:	f7ff fb6b 	bl	8016228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016b52:	f8bd 3000 	ldrh.w	r3, [sp]
 8016b56:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8016b5a:	1a9b      	subs	r3, r3, r2
 8016b5c:	f8ad 3000 	strh.w	r3, [sp]
 8016b60:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016b64:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016b68:	4669      	mov	r1, sp
 8016b6a:	1a9b      	subs	r3, r3, r2
 8016b6c:	4620      	mov	r0, r4
 8016b6e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8016b72:	f7f9 f962 	bl	800fe3a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8016b76:	e7e5      	b.n	8016b44 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08016b78 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8016b78:	680a      	ldr	r2, [r1, #0]
 8016b7a:	460b      	mov	r3, r1
 8016b7c:	6992      	ldr	r2, [r2, #24]
 8016b7e:	1d01      	adds	r1, r0, #4
 8016b80:	4618      	mov	r0, r3
 8016b82:	4710      	bx	r2

08016b84 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8016b84:	4298      	cmp	r0, r3
 8016b86:	d200      	bcs.n	8016b8a <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8016b88:	b913      	cbnz	r3, 8016b90 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8016b8a:	440a      	add	r2, r1
 8016b8c:	b210      	sxth	r0, r2
 8016b8e:	4770      	bx	lr
 8016b90:	ee07 0a90 	vmov	s15, r0
 8016b94:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8016b98:	ee07 3a90 	vmov	s15, r3
 8016b9c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016ba0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8016ba4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016ba8:	ee37 7a66 	vsub.f32	s14, s14, s13
 8016bac:	ee07 2a90 	vmov	s15, r2
 8016bb0:	ee67 5a07 	vmul.f32	s11, s14, s14
 8016bb4:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8016bb8:	eee5 6a87 	vfma.f32	s13, s11, s14
 8016bbc:	ee07 1a90 	vmov	s15, r1
 8016bc0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016bc4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8016bc8:	eee6 7a26 	vfma.f32	s15, s12, s13
 8016bcc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016bd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bd4:	bfcc      	ite	gt
 8016bd6:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8016bda:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8016bde:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016be2:	ee17 3a90 	vmov	r3, s15
 8016be6:	b218      	sxth	r0, r3
 8016be8:	4770      	bx	lr

08016bea <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8016bea:	4298      	cmp	r0, r3
 8016bec:	d200      	bcs.n	8016bf0 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 8016bee:	b913      	cbnz	r3, 8016bf6 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8016bf0:	440a      	add	r2, r1
 8016bf2:	b210      	sxth	r0, r2
 8016bf4:	4770      	bx	lr
 8016bf6:	ee07 2a90 	vmov	s15, r2
 8016bfa:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8016bfe:	ee07 0a90 	vmov	s15, r0
 8016c02:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8016c06:	ee67 7a27 	vmul.f32	s15, s14, s15
 8016c0a:	ee07 3a10 	vmov	s14, r3
 8016c0e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8016c12:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8016c16:	ee07 1a90 	vmov	s15, r1
 8016c1a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016c1e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8016c22:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8016c26:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016c2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016c2e:	bfcc      	ite	gt
 8016c30:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8016c34:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8016c38:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016c3c:	ee17 3a90 	vmov	r3, s15
 8016c40:	b218      	sxth	r0, r3
 8016c42:	4770      	bx	lr

08016c44 <_ZN8touchgfx12TextProviderC1Ev>:
 8016c44:	b538      	push	{r3, r4, r5, lr}
 8016c46:	2500      	movs	r5, #0
 8016c48:	2302      	movs	r3, #2
 8016c4a:	4604      	mov	r4, r0
 8016c4c:	e9c0 5500 	strd	r5, r5, [r0]
 8016c50:	7403      	strb	r3, [r0, #16]
 8016c52:	6145      	str	r5, [r0, #20]
 8016c54:	7605      	strb	r5, [r0, #24]
 8016c56:	83c5      	strh	r5, [r0, #30]
 8016c58:	8405      	strh	r5, [r0, #32]
 8016c5a:	86c5      	strh	r5, [r0, #54]	; 0x36
 8016c5c:	8705      	strh	r5, [r0, #56]	; 0x38
 8016c5e:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8016c60:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8016c64:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8016c68:	220e      	movs	r2, #14
 8016c6a:	4629      	mov	r1, r5
 8016c6c:	304c      	adds	r0, #76	; 0x4c
 8016c6e:	f011 feac 	bl	80289ca <memset>
 8016c72:	2301      	movs	r3, #1
 8016c74:	4620      	mov	r0, r4
 8016c76:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8016c7a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016c7e:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8016c82:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8016c86:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8016c8a:	f7f1 f903 	bl	8007e94 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8016c8e:	4620      	mov	r0, r4
 8016c90:	bd38      	pop	{r3, r4, r5, pc}

08016c92 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8016c92:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8016c94:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016c98:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8016c9a:	fab0 f080 	clz	r0, r0
 8016c9e:	0940      	lsrs	r0, r0, #5
 8016ca0:	4770      	bx	lr

08016ca2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8016ca2:	b530      	push	{r4, r5, lr}
 8016ca4:	2500      	movs	r5, #0
 8016ca6:	2401      	movs	r4, #1
 8016ca8:	6843      	ldr	r3, [r0, #4]
 8016caa:	b913      	cbnz	r3, 8016cb2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8016cac:	6803      	ldr	r3, [r0, #0]
 8016cae:	b313      	cbz	r3, 8016cf6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8016cb0:	6043      	str	r3, [r0, #4]
 8016cb2:	7e03      	ldrb	r3, [r0, #24]
 8016cb4:	b143      	cbz	r3, 8016cc8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8016cb6:	6943      	ldr	r3, [r0, #20]
 8016cb8:	b12b      	cbz	r3, 8016cc6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8016cba:	881a      	ldrh	r2, [r3, #0]
 8016cbc:	b11a      	cbz	r2, 8016cc6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8016cbe:	1c9a      	adds	r2, r3, #2
 8016cc0:	6142      	str	r2, [r0, #20]
 8016cc2:	8818      	ldrh	r0, [r3, #0]
 8016cc4:	bd30      	pop	{r4, r5, pc}
 8016cc6:	7605      	strb	r5, [r0, #24]
 8016cc8:	6843      	ldr	r3, [r0, #4]
 8016cca:	8819      	ldrh	r1, [r3, #0]
 8016ccc:	b199      	cbz	r1, 8016cf6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8016cce:	1c9a      	adds	r2, r3, #2
 8016cd0:	2902      	cmp	r1, #2
 8016cd2:	6042      	str	r2, [r0, #4]
 8016cd4:	d1f5      	bne.n	8016cc2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8016cd6:	7c03      	ldrb	r3, [r0, #16]
 8016cd8:	2b01      	cmp	r3, #1
 8016cda:	d8e5      	bhi.n	8016ca8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016cdc:	1c5a      	adds	r2, r3, #1
 8016cde:	3302      	adds	r3, #2
 8016ce0:	7402      	strb	r2, [r0, #16]
 8016ce2:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8016ce6:	6143      	str	r3, [r0, #20]
 8016ce8:	2b00      	cmp	r3, #0
 8016cea:	d0dd      	beq.n	8016ca8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016cec:	881b      	ldrh	r3, [r3, #0]
 8016cee:	2b00      	cmp	r3, #0
 8016cf0:	d0da      	beq.n	8016ca8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016cf2:	7604      	strb	r4, [r0, #24]
 8016cf4:	e7d8      	b.n	8016ca8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016cf6:	2000      	movs	r0, #0
 8016cf8:	e7e4      	b.n	8016cc4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08016cfa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8016cfa:	b430      	push	{r4, r5}
 8016cfc:	6001      	str	r1, [r0, #0]
 8016cfe:	2100      	movs	r1, #0
 8016d00:	6041      	str	r1, [r0, #4]
 8016d02:	6815      	ldr	r5, [r2, #0]
 8016d04:	6085      	str	r5, [r0, #8]
 8016d06:	6852      	ldr	r2, [r2, #4]
 8016d08:	6443      	str	r3, [r0, #68]	; 0x44
 8016d0a:	9b02      	ldr	r3, [sp, #8]
 8016d0c:	60c2      	str	r2, [r0, #12]
 8016d0e:	7401      	strb	r1, [r0, #16]
 8016d10:	6141      	str	r1, [r0, #20]
 8016d12:	7601      	strb	r1, [r0, #24]
 8016d14:	8701      	strh	r1, [r0, #56]	; 0x38
 8016d16:	8401      	strh	r1, [r0, #32]
 8016d18:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8016d1c:	6483      	str	r3, [r0, #72]	; 0x48
 8016d1e:	bc30      	pop	{r4, r5}
 8016d20:	f7f1 b8b8 	b.w	8007e94 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08016d24 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8016d24:	b408      	push	{r3}
 8016d26:	b510      	push	{r4, lr}
 8016d28:	b085      	sub	sp, #20
 8016d2a:	ac07      	add	r4, sp, #28
 8016d2c:	f854 3b04 	ldr.w	r3, [r4], #4
 8016d30:	9300      	str	r3, [sp, #0]
 8016d32:	4613      	mov	r3, r2
 8016d34:	4622      	mov	r2, r4
 8016d36:	9403      	str	r4, [sp, #12]
 8016d38:	f7ff ffdf 	bl	8016cfa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016d3c:	b005      	add	sp, #20
 8016d3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016d42:	b001      	add	sp, #4
 8016d44:	4770      	bx	lr

08016d46 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8016d46:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016d48:	4605      	mov	r5, r0
 8016d4a:	4608      	mov	r0, r1
 8016d4c:	b1e9      	cbz	r1, 8016d8a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8016d4e:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8016d52:	460b      	mov	r3, r1
 8016d54:	f101 0708 	add.w	r7, r1, #8
 8016d58:	4622      	mov	r2, r4
 8016d5a:	6818      	ldr	r0, [r3, #0]
 8016d5c:	6859      	ldr	r1, [r3, #4]
 8016d5e:	4626      	mov	r6, r4
 8016d60:	c603      	stmia	r6!, {r0, r1}
 8016d62:	3308      	adds	r3, #8
 8016d64:	42bb      	cmp	r3, r7
 8016d66:	4634      	mov	r4, r6
 8016d68:	d1f7      	bne.n	8016d5a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8016d6a:	6818      	ldr	r0, [r3, #0]
 8016d6c:	6030      	str	r0, [r6, #0]
 8016d6e:	889b      	ldrh	r3, [r3, #4]
 8016d70:	80b3      	strh	r3, [r6, #4]
 8016d72:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8016d76:	015b      	lsls	r3, r3, #5
 8016d78:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016d7c:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8016d80:	430b      	orrs	r3, r1
 8016d82:	425b      	negs	r3, r3
 8016d84:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8016d88:	4610      	mov	r0, r2
 8016d8a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016d8c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8016d8c:	b538      	push	{r3, r4, r5, lr}
 8016d8e:	460c      	mov	r4, r1
 8016d90:	6811      	ldr	r1, [r2, #0]
 8016d92:	4610      	mov	r0, r2
 8016d94:	68cd      	ldr	r5, [r1, #12]
 8016d96:	4619      	mov	r1, r3
 8016d98:	47a8      	blx	r5
 8016d9a:	2800      	cmp	r0, #0
 8016d9c:	bf08      	it	eq
 8016d9e:	4620      	moveq	r0, r4
 8016da0:	bd38      	pop	{r3, r4, r5, pc}
	...

08016da4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8016da4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016da6:	4604      	mov	r4, r0
 8016da8:	4615      	mov	r5, r2
 8016daa:	4608      	mov	r0, r1
 8016dac:	b93a      	cbnz	r2, 8016dbe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8016dae:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016db2:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8016db6:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8016dba:	4628      	mov	r0, r5
 8016dbc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016dbe:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8016dc2:	8893      	ldrh	r3, [r2, #4]
 8016dc4:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8016dc8:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8016dcc:	79ee      	ldrb	r6, [r5, #7]
 8016dce:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8016dd2:	4316      	orrs	r6, r2
 8016dd4:	19da      	adds	r2, r3, r7
 8016dd6:	b291      	uxth	r1, r2
 8016dd8:	291d      	cmp	r1, #29
 8016dda:	b2b7      	uxth	r7, r6
 8016ddc:	d87a      	bhi.n	8016ed4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8016dde:	2201      	movs	r2, #1
 8016de0:	408a      	lsls	r2, r1
 8016de2:	4975      	ldr	r1, [pc, #468]	; (8016fb8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8016de4:	420a      	tst	r2, r1
 8016de6:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8016dea:	d12d      	bne.n	8016e48 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8016dec:	f412 7f60 	tst.w	r2, #896	; 0x380
 8016df0:	d070      	beq.n	8016ed4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8016df2:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8016df6:	462b      	mov	r3, r5
 8016df8:	f105 0e08 	add.w	lr, r5, #8
 8016dfc:	4615      	mov	r5, r2
 8016dfe:	6818      	ldr	r0, [r3, #0]
 8016e00:	6859      	ldr	r1, [r3, #4]
 8016e02:	4694      	mov	ip, r2
 8016e04:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8016e08:	3308      	adds	r3, #8
 8016e0a:	4573      	cmp	r3, lr
 8016e0c:	4662      	mov	r2, ip
 8016e0e:	d1f6      	bne.n	8016dfe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8016e10:	6818      	ldr	r0, [r3, #0]
 8016e12:	f8cc 0000 	str.w	r0, [ip]
 8016e16:	889b      	ldrh	r3, [r3, #4]
 8016e18:	f8ac 3004 	strh.w	r3, [ip, #4]
 8016e1c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8016e20:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8016e24:	b2b3      	uxth	r3, r6
 8016e26:	1aca      	subs	r2, r1, r3
 8016e28:	b292      	uxth	r2, r2
 8016e2a:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8016e2e:	10d2      	asrs	r2, r2, #3
 8016e30:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8016e34:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8016e38:	4302      	orrs	r2, r0
 8016e3a:	1bcf      	subs	r7, r1, r7
 8016e3c:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8016e40:	1afb      	subs	r3, r7, r3
 8016e42:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8016e46:	e7b8      	b.n	8016dba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8016e48:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8016e4a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016e4e:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8016e50:	f640 6333 	movw	r3, #3635	; 0xe33
 8016e54:	4299      	cmp	r1, r3
 8016e56:	d110      	bne.n	8016e7a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8016e58:	6803      	ldr	r3, [r0, #0]
 8016e5a:	68db      	ldr	r3, [r3, #12]
 8016e5c:	4798      	blx	r3
 8016e5e:	7b41      	ldrb	r1, [r0, #13]
 8016e60:	00cb      	lsls	r3, r1, #3
 8016e62:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016e66:	7a03      	ldrb	r3, [r0, #8]
 8016e68:	0648      	lsls	r0, r1, #25
 8016e6a:	ea43 0302 	orr.w	r3, r3, r2
 8016e6e:	bf44      	itt	mi
 8016e70:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016e74:	b21b      	sxthmi	r3, r3
 8016e76:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016e7a:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8016e7e:	443b      	add	r3, r7
 8016e80:	4433      	add	r3, r6
 8016e82:	b29b      	uxth	r3, r3
 8016e84:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8016e88:	462a      	mov	r2, r5
 8016e8a:	f105 0c08 	add.w	ip, r5, #8
 8016e8e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016e92:	4635      	mov	r5, r6
 8016e94:	6810      	ldr	r0, [r2, #0]
 8016e96:	6851      	ldr	r1, [r2, #4]
 8016e98:	4637      	mov	r7, r6
 8016e9a:	c703      	stmia	r7!, {r0, r1}
 8016e9c:	3208      	adds	r2, #8
 8016e9e:	4562      	cmp	r2, ip
 8016ea0:	463e      	mov	r6, r7
 8016ea2:	d1f7      	bne.n	8016e94 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8016ea4:	6810      	ldr	r0, [r2, #0]
 8016ea6:	6038      	str	r0, [r7, #0]
 8016ea8:	8892      	ldrh	r2, [r2, #4]
 8016eaa:	80ba      	strh	r2, [r7, #4]
 8016eac:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016eb0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8016eb4:	10db      	asrs	r3, r3, #3
 8016eb6:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8016eba:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016ebe:	4313      	orrs	r3, r2
 8016ec0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8016ec4:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8016ec8:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8016ecc:	1a9b      	subs	r3, r3, r2
 8016ece:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8016ed2:	e772      	b.n	8016dba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8016ed4:	f023 0204 	bic.w	r2, r3, #4
 8016ed8:	f640 611b 	movw	r1, #3611	; 0xe1b
 8016edc:	428a      	cmp	r2, r1
 8016ede:	d003      	beq.n	8016ee8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8016ee0:	f640 621d 	movw	r2, #3613	; 0xe1d
 8016ee4:	4293      	cmp	r3, r2
 8016ee6:	d120      	bne.n	8016f2a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8016ee8:	3b01      	subs	r3, #1
 8016eea:	4602      	mov	r2, r0
 8016eec:	b29b      	uxth	r3, r3
 8016eee:	4629      	mov	r1, r5
 8016ef0:	4620      	mov	r0, r4
 8016ef2:	f7ff ff4b 	bl	8016d8c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016ef6:	7b41      	ldrb	r1, [r0, #13]
 8016ef8:	00cb      	lsls	r3, r1, #3
 8016efa:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016efe:	7a03      	ldrb	r3, [r0, #8]
 8016f00:	0649      	lsls	r1, r1, #25
 8016f02:	ea43 0302 	orr.w	r3, r3, r2
 8016f06:	bf44      	itt	mi
 8016f08:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016f0c:	b21b      	sxthmi	r3, r3
 8016f0e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016f12:	7b6b      	ldrb	r3, [r5, #13]
 8016f14:	7aaa      	ldrb	r2, [r5, #10]
 8016f16:	005b      	lsls	r3, r3, #1
 8016f18:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016f1c:	4313      	orrs	r3, r2
 8016f1e:	115a      	asrs	r2, r3, #5
 8016f20:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8016f24:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8016f28:	e036      	b.n	8016f98 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8016f2a:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8016f2e:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8016f32:	7a2a      	ldrb	r2, [r5, #8]
 8016f34:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8016f38:	ea42 0201 	orr.w	r2, r2, r1
 8016f3c:	bf1c      	itt	ne
 8016f3e:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8016f42:	b212      	sxthne	r2, r2
 8016f44:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016f48:	f640 6109 	movw	r1, #3593	; 0xe09
 8016f4c:	f023 0210 	bic.w	r2, r3, #16
 8016f50:	428a      	cmp	r2, r1
 8016f52:	d003      	beq.n	8016f5c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8016f54:	f640 6213 	movw	r2, #3603	; 0xe13
 8016f58:	4293      	cmp	r3, r2
 8016f5a:	d12a      	bne.n	8016fb2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8016f5c:	7b6e      	ldrb	r6, [r5, #13]
 8016f5e:	0076      	lsls	r6, r6, #1
 8016f60:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8016f64:	7aae      	ldrb	r6, [r5, #10]
 8016f66:	4316      	orrs	r6, r2
 8016f68:	f640 6213 	movw	r2, #3603	; 0xe13
 8016f6c:	4293      	cmp	r3, r2
 8016f6e:	bf18      	it	ne
 8016f70:	f103 33ff 	addne.w	r3, r3, #4294967295
 8016f74:	4602      	mov	r2, r0
 8016f76:	bf14      	ite	ne
 8016f78:	b29b      	uxthne	r3, r3
 8016f7a:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8016f7e:	4629      	mov	r1, r5
 8016f80:	4620      	mov	r0, r4
 8016f82:	f7ff ff03 	bl	8016d8c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016f86:	7b43      	ldrb	r3, [r0, #13]
 8016f88:	7a82      	ldrb	r2, [r0, #10]
 8016f8a:	005b      	lsls	r3, r3, #1
 8016f8c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016f90:	4313      	orrs	r3, r2
 8016f92:	1af6      	subs	r6, r6, r3
 8016f94:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8016f98:	7b69      	ldrb	r1, [r5, #13]
 8016f9a:	00cb      	lsls	r3, r1, #3
 8016f9c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016fa0:	7a2b      	ldrb	r3, [r5, #8]
 8016fa2:	4313      	orrs	r3, r2
 8016fa4:	064a      	lsls	r2, r1, #25
 8016fa6:	bf44      	itt	mi
 8016fa8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016fac:	b21b      	sxthmi	r3, r3
 8016fae:	1bdb      	subs	r3, r3, r7
 8016fb0:	e747      	b.n	8016e42 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8016fb2:	2300      	movs	r3, #0
 8016fb4:	e7b6      	b.n	8016f24 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8016fb6:	bf00      	nop
 8016fb8:	3fc00079 	.word	0x3fc00079

08016fbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8016fbc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016fc0:	4604      	mov	r4, r0
 8016fc2:	b942      	cbnz	r2, 8016fd6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8016fc4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8016fc8:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8016fcc:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8016fd0:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8016fd4:	e047      	b.n	8017066 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8016fd6:	7b51      	ldrb	r1, [r2, #13]
 8016fd8:	8893      	ldrh	r3, [r2, #4]
 8016fda:	010d      	lsls	r5, r1, #4
 8016fdc:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8016fe0:	79d5      	ldrb	r5, [r2, #7]
 8016fe2:	4305      	orrs	r5, r0
 8016fe4:	2d04      	cmp	r5, #4
 8016fe6:	bfcc      	ite	gt
 8016fe8:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8016fec:	f04f 0e01 	movle.w	lr, #1
 8016ff0:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8016ff4:	f200 80ab 	bhi.w	801714e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8016ff8:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8016ffc:	4283      	cmp	r3, r0
 8016ffe:	d216      	bcs.n	801702e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017000:	f240 605b 	movw	r0, #1627	; 0x65b
 8017004:	4283      	cmp	r3, r0
 8017006:	d859      	bhi.n	80170bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8017008:	f240 6057 	movw	r0, #1623	; 0x657
 801700c:	4283      	cmp	r3, r0
 801700e:	d20e      	bcs.n	801702e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017010:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017014:	d24a      	bcs.n	80170ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8017016:	f240 604e 	movw	r0, #1614	; 0x64e
 801701a:	4283      	cmp	r3, r0
 801701c:	d207      	bcs.n	801702e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801701e:	f240 601a 	movw	r0, #1562	; 0x61a
 8017022:	4283      	cmp	r3, r0
 8017024:	d02a      	beq.n	801707c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017026:	d821      	bhi.n	801706c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8017028:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801702c:	d35b      	bcc.n	80170e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801702e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8017032:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017036:	f040 80d0 	bne.w	80171da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801703a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801703e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017042:	f040 80ca 	bne.w	80171da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017046:	00cb      	lsls	r3, r1, #3
 8017048:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801704c:	7a13      	ldrb	r3, [r2, #8]
 801704e:	0649      	lsls	r1, r1, #25
 8017050:	ea43 0300 	orr.w	r3, r3, r0
 8017054:	bf44      	itt	mi
 8017056:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801705a:	b21b      	sxthmi	r3, r3
 801705c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017060:	1b5d      	subs	r5, r3, r5
 8017062:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017066:	4610      	mov	r0, r2
 8017068:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801706c:	f240 604b 	movw	r0, #1611	; 0x64b
 8017070:	4283      	cmp	r3, r0
 8017072:	d338      	bcc.n	80170e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017074:	f240 604c 	movw	r0, #1612	; 0x64c
 8017078:	4283      	cmp	r3, r0
 801707a:	d9d8      	bls.n	801702e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801707c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8017080:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8017084:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017088:	f040 80f2 	bne.w	8017270 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801708c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017090:	f040 80ee 	bne.w	8017270 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8017094:	00cb      	lsls	r3, r1, #3
 8017096:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801709a:	7a13      	ldrb	r3, [r2, #8]
 801709c:	064e      	lsls	r6, r1, #25
 801709e:	ea43 0300 	orr.w	r3, r3, r0
 80170a2:	bf44      	itt	mi
 80170a4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80170a8:	b21b      	sxthmi	r3, r3
 80170aa:	e7d9      	b.n	8017060 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 80170ac:	f240 6054 	movw	r0, #1620	; 0x654
 80170b0:	4283      	cmp	r3, r0
 80170b2:	d8e3      	bhi.n	801707c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80170b4:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80170b8:	d9e0      	bls.n	801707c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80170ba:	e7b8      	b.n	801702e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80170bc:	f240 6074 	movw	r0, #1652	; 0x674
 80170c0:	4283      	cmp	r3, r0
 80170c2:	d0b4      	beq.n	801702e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80170c4:	d82d      	bhi.n	8017122 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 80170c6:	f240 605e 	movw	r0, #1630	; 0x65e
 80170ca:	4283      	cmp	r3, r0
 80170cc:	d804      	bhi.n	80170d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 80170ce:	f240 605d 	movw	r0, #1629	; 0x65d
 80170d2:	4283      	cmp	r3, r0
 80170d4:	d3d2      	bcc.n	801707c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80170d6:	e7aa      	b.n	801702e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80170d8:	f240 605f 	movw	r0, #1631	; 0x65f
 80170dc:	4283      	cmp	r3, r0
 80170de:	d0cd      	beq.n	801707c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80170e0:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 80170e4:	d0a3      	beq.n	801702e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80170e6:	00cb      	lsls	r3, r1, #3
 80170e8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80170ec:	7a13      	ldrb	r3, [r2, #8]
 80170ee:	0649      	lsls	r1, r1, #25
 80170f0:	ea43 0300 	orr.w	r3, r3, r0
 80170f4:	bf44      	itt	mi
 80170f6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80170fa:	b21b      	sxthmi	r3, r3
 80170fc:	1b5d      	subs	r5, r3, r5
 80170fe:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017102:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017106:	7b53      	ldrb	r3, [r2, #13]
 8017108:	015b      	lsls	r3, r3, #5
 801710a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801710e:	7993      	ldrb	r3, [r2, #6]
 8017110:	430b      	orrs	r3, r1
 8017112:	005b      	lsls	r3, r3, #1
 8017114:	2105      	movs	r1, #5
 8017116:	fb93 f3f1 	sdiv	r3, r3, r1
 801711a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801711e:	440b      	add	r3, r1
 8017120:	e756      	b.n	8016fd0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8017122:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8017126:	4283      	cmp	r3, r0
 8017128:	d809      	bhi.n	801713e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801712a:	f240 60df 	movw	r0, #1759	; 0x6df
 801712e:	4283      	cmp	r3, r0
 8017130:	f4bf af7d 	bcs.w	801702e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017134:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8017138:	2b05      	cmp	r3, #5
 801713a:	d8d4      	bhi.n	80170e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801713c:	e777      	b.n	801702e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801713e:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8017142:	4283      	cmp	r3, r0
 8017144:	d09a      	beq.n	801707c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017146:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801714a:	4283      	cmp	r3, r0
 801714c:	e7ca      	b.n	80170e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801714e:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8017152:	d22b      	bcs.n	80171ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8017154:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8017158:	4283      	cmp	r3, r0
 801715a:	d28f      	bcs.n	801707c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801715c:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8017160:	4283      	cmp	r3, r0
 8017162:	d816      	bhi.n	8017192 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8017164:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8017168:	4283      	cmp	r3, r0
 801716a:	f4bf af60 	bcs.w	801702e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801716e:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8017172:	4283      	cmp	r3, r0
 8017174:	d80a      	bhi.n	801718c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8017176:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801717a:	4283      	cmp	r3, r0
 801717c:	f4bf af57 	bcs.w	801702e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017180:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8017184:	4283      	cmp	r3, r0
 8017186:	f43f af79 	beq.w	801707c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801718a:	e7ac      	b.n	80170e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801718c:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8017190:	e7f8      	b.n	8017184 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8017192:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8017196:	4283      	cmp	r3, r0
 8017198:	d802      	bhi.n	80171a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801719a:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801719e:	e798      	b.n	80170d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 80171a0:	f640 00e9 	movw	r0, #2281	; 0x8e9
 80171a4:	4283      	cmp	r3, r0
 80171a6:	f47f af42 	bne.w	801702e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80171aa:	e767      	b.n	801707c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80171ac:	f640 00f6 	movw	r0, #2294	; 0x8f6
 80171b0:	4283      	cmp	r3, r0
 80171b2:	f43f af63 	beq.w	801707c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80171b6:	d802      	bhi.n	80171be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 80171b8:	f640 00f2 	movw	r0, #2290	; 0x8f2
 80171bc:	e7f2      	b.n	80171a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 80171be:	f640 00fa 	movw	r0, #2298	; 0x8fa
 80171c2:	4283      	cmp	r3, r0
 80171c4:	d805      	bhi.n	80171d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 80171c6:	f640 00f9 	movw	r0, #2297	; 0x8f9
 80171ca:	4283      	cmp	r3, r0
 80171cc:	f4ff af2f 	bcc.w	801702e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80171d0:	e754      	b.n	801707c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80171d2:	f640 00fe 	movw	r0, #2302	; 0x8fe
 80171d6:	4283      	cmp	r3, r0
 80171d8:	e7af      	b.n	801713a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 80171da:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80171de:	4617      	mov	r7, r2
 80171e0:	f102 0808 	add.w	r8, r2, #8
 80171e4:	4666      	mov	r6, ip
 80171e6:	6838      	ldr	r0, [r7, #0]
 80171e8:	6879      	ldr	r1, [r7, #4]
 80171ea:	46e6      	mov	lr, ip
 80171ec:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80171f0:	3708      	adds	r7, #8
 80171f2:	4547      	cmp	r7, r8
 80171f4:	46f4      	mov	ip, lr
 80171f6:	d1f6      	bne.n	80171e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 80171f8:	6838      	ldr	r0, [r7, #0]
 80171fa:	f8ce 0000 	str.w	r0, [lr]
 80171fe:	88b9      	ldrh	r1, [r7, #4]
 8017200:	f8ae 1004 	strh.w	r1, [lr, #4]
 8017204:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8017208:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801720c:	d009      	beq.n	8017222 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801720e:	7b51      	ldrb	r1, [r2, #13]
 8017210:	7992      	ldrb	r2, [r2, #6]
 8017212:	0149      	lsls	r1, r1, #5
 8017214:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017218:	4311      	orrs	r1, r2
 801721a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801721e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8017222:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017226:	b2ad      	uxth	r5, r5
 8017228:	d00d      	beq.n	8017246 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801722a:	442b      	add	r3, r5
 801722c:	b29b      	uxth	r3, r3
 801722e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017232:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017236:	10db      	asrs	r3, r3, #3
 8017238:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801723c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017240:	4313      	orrs	r3, r2
 8017242:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017246:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801724a:	00cb      	lsls	r3, r1, #3
 801724c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017250:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8017254:	064f      	lsls	r7, r1, #25
 8017256:	ea43 0302 	orr.w	r3, r3, r2
 801725a:	bf44      	itt	mi
 801725c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017260:	b21b      	sxthmi	r3, r3
 8017262:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017266:	1b5b      	subs	r3, r3, r5
 8017268:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801726c:	4632      	mov	r2, r6
 801726e:	e6fa      	b.n	8017066 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8017270:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8017274:	4617      	mov	r7, r2
 8017276:	f102 0908 	add.w	r9, r2, #8
 801727a:	4666      	mov	r6, ip
 801727c:	6838      	ldr	r0, [r7, #0]
 801727e:	6879      	ldr	r1, [r7, #4]
 8017280:	46e0      	mov	r8, ip
 8017282:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8017286:	3708      	adds	r7, #8
 8017288:	454f      	cmp	r7, r9
 801728a:	46c4      	mov	ip, r8
 801728c:	d1f6      	bne.n	801727c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801728e:	6838      	ldr	r0, [r7, #0]
 8017290:	f8c8 0000 	str.w	r0, [r8]
 8017294:	88b9      	ldrh	r1, [r7, #4]
 8017296:	f8a8 1004 	strh.w	r1, [r8, #4]
 801729a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801729e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80172a2:	d009      	beq.n	80172b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 80172a4:	7b51      	ldrb	r1, [r2, #13]
 80172a6:	7992      	ldrb	r2, [r2, #6]
 80172a8:	0149      	lsls	r1, r1, #5
 80172aa:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80172ae:	4311      	orrs	r1, r2
 80172b0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80172b4:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80172b8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80172bc:	d00e      	beq.n	80172dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80172be:	eba3 030e 	sub.w	r3, r3, lr
 80172c2:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80172c6:	b29b      	uxth	r3, r3
 80172c8:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80172cc:	10db      	asrs	r3, r3, #3
 80172ce:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80172d2:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80172d6:	4313      	orrs	r3, r2
 80172d8:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80172dc:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80172e0:	00cb      	lsls	r3, r1, #3
 80172e2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80172e6:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80172ea:	0648      	lsls	r0, r1, #25
 80172ec:	ea43 0302 	orr.w	r3, r3, r2
 80172f0:	bf44      	itt	mi
 80172f2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80172f6:	b21b      	sxthmi	r3, r3
 80172f8:	1b5d      	subs	r5, r3, r5
 80172fa:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80172fe:	e7b5      	b.n	801726c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08017300 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8017300:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017304:	461e      	mov	r6, r3
 8017306:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017308:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801730c:	4604      	mov	r4, r0
 801730e:	4617      	mov	r7, r2
 8017310:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017314:	f7f0 fd7c 	bl	8007e10 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017318:	4605      	mov	r5, r0
 801731a:	b918      	cbnz	r0, 8017324 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801731c:	6030      	str	r0, [r6, #0]
 801731e:	4628      	mov	r0, r5
 8017320:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017324:	683b      	ldr	r3, [r7, #0]
 8017326:	4601      	mov	r1, r0
 8017328:	68db      	ldr	r3, [r3, #12]
 801732a:	4638      	mov	r0, r7
 801732c:	4798      	blx	r3
 801732e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8017332:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8017336:	4602      	mov	r2, r0
 8017338:	6030      	str	r0, [r6, #0]
 801733a:	d213      	bcs.n	8017364 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801733c:	4643      	mov	r3, r8
 801733e:	4639      	mov	r1, r7
 8017340:	4620      	mov	r0, r4
 8017342:	f7ff fe3b 	bl	8016fbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8017346:	6030      	str	r0, [r6, #0]
 8017348:	6833      	ldr	r3, [r6, #0]
 801734a:	b143      	cbz	r3, 801735e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801734c:	7b5a      	ldrb	r2, [r3, #13]
 801734e:	7a9b      	ldrb	r3, [r3, #10]
 8017350:	0052      	lsls	r2, r2, #1
 8017352:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8017356:	4313      	orrs	r3, r2
 8017358:	bf0c      	ite	eq
 801735a:	2301      	moveq	r3, #1
 801735c:	2300      	movne	r3, #0
 801735e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8017362:	e7dc      	b.n	801731e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8017364:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8017368:	b29b      	uxth	r3, r3
 801736a:	2b7f      	cmp	r3, #127	; 0x7f
 801736c:	d804      	bhi.n	8017378 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801736e:	4639      	mov	r1, r7
 8017370:	4620      	mov	r0, r4
 8017372:	f7ff fd17 	bl	8016da4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8017376:	e7e6      	b.n	8017346 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8017378:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801737c:	2b00      	cmp	r3, #0
 801737e:	d0e3      	beq.n	8017348 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8017380:	f640 1302 	movw	r3, #2306	; 0x902
 8017384:	429d      	cmp	r5, r3
 8017386:	d1df      	bne.n	8017348 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8017388:	4601      	mov	r1, r0
 801738a:	4620      	mov	r0, r4
 801738c:	f7ff fcdb 	bl	8016d46 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8017390:	e7d9      	b.n	8017346 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08017392 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8017392:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8017396:	461e      	mov	r6, r3
 8017398:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801739a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801739e:	4604      	mov	r4, r0
 80173a0:	4617      	mov	r7, r2
 80173a2:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80173a6:	f7f0 fd33 	bl	8007e10 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80173aa:	4605      	mov	r5, r0
 80173ac:	b918      	cbnz	r0, 80173b6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 80173ae:	6030      	str	r0, [r6, #0]
 80173b0:	4628      	mov	r0, r5
 80173b2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80173b6:	683b      	ldr	r3, [r7, #0]
 80173b8:	4601      	mov	r1, r0
 80173ba:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80173be:	4638      	mov	r0, r7
 80173c0:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80173c4:	47c8      	blx	r9
 80173c6:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80173ca:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80173ce:	4602      	mov	r2, r0
 80173d0:	6030      	str	r0, [r6, #0]
 80173d2:	d213      	bcs.n	80173fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80173d4:	4643      	mov	r3, r8
 80173d6:	4639      	mov	r1, r7
 80173d8:	4620      	mov	r0, r4
 80173da:	f7ff fdef 	bl	8016fbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80173de:	6030      	str	r0, [r6, #0]
 80173e0:	6833      	ldr	r3, [r6, #0]
 80173e2:	b143      	cbz	r3, 80173f6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80173e4:	7b5a      	ldrb	r2, [r3, #13]
 80173e6:	7a9b      	ldrb	r3, [r3, #10]
 80173e8:	0052      	lsls	r2, r2, #1
 80173ea:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80173ee:	4313      	orrs	r3, r2
 80173f0:	bf0c      	ite	eq
 80173f2:	2301      	moveq	r3, #1
 80173f4:	2300      	movne	r3, #0
 80173f6:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80173fa:	e7d9      	b.n	80173b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80173fc:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8017400:	b29b      	uxth	r3, r3
 8017402:	2b7f      	cmp	r3, #127	; 0x7f
 8017404:	d804      	bhi.n	8017410 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8017406:	4639      	mov	r1, r7
 8017408:	4620      	mov	r0, r4
 801740a:	f7ff fccb 	bl	8016da4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801740e:	e7e6      	b.n	80173de <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8017410:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8017414:	2b00      	cmp	r3, #0
 8017416:	d0e3      	beq.n	80173e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017418:	f640 1302 	movw	r3, #2306	; 0x902
 801741c:	429d      	cmp	r5, r3
 801741e:	d1df      	bne.n	80173e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017420:	4601      	mov	r1, r0
 8017422:	4620      	mov	r0, r4
 8017424:	f7ff fc8f 	bl	8016d46 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8017428:	e7d9      	b.n	80173de <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801742a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801742a:	b510      	push	{r4, lr}
 801742c:	4604      	mov	r4, r0
 801742e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8017432:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8017434:	b1f1      	cbz	r1, 8017474 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8017436:	2b0a      	cmp	r3, #10
 8017438:	d02f      	beq.n	801749a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801743a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801743c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8017440:	3901      	subs	r1, #1
 8017442:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8017444:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8017448:	1c51      	adds	r1, r2, #1
 801744a:	b289      	uxth	r1, r1
 801744c:	2901      	cmp	r1, #1
 801744e:	bf84      	itt	hi
 8017450:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8017454:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8017456:	f103 0201 	add.w	r2, r3, #1
 801745a:	8722      	strh	r2, [r4, #56]	; 0x38
 801745c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801745e:	bf98      	it	ls
 8017460:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8017462:	4413      	add	r3, r2
 8017464:	b29b      	uxth	r3, r3
 8017466:	2b09      	cmp	r3, #9
 8017468:	bf88      	it	hi
 801746a:	3b0a      	subhi	r3, #10
 801746c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017470:	8458      	strh	r0, [r3, #34]	; 0x22
 8017472:	e7dc      	b.n	801742e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8017474:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8017476:	2b0a      	cmp	r3, #10
 8017478:	d00f      	beq.n	801749a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801747a:	4620      	mov	r0, r4
 801747c:	f7ff fc11 	bl	8016ca2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8017480:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8017482:	1c5a      	adds	r2, r3, #1
 8017484:	8722      	strh	r2, [r4, #56]	; 0x38
 8017486:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8017488:	4413      	add	r3, r2
 801748a:	b29b      	uxth	r3, r3
 801748c:	2b09      	cmp	r3, #9
 801748e:	bf88      	it	hi
 8017490:	3b0a      	subhi	r3, #10
 8017492:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017496:	8458      	strh	r0, [r3, #34]	; 0x22
 8017498:	e7ec      	b.n	8017474 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801749a:	bd10      	pop	{r4, pc}

0801749c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801749c:	b538      	push	{r3, r4, r5, lr}
 801749e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80174a0:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80174a4:	4604      	mov	r4, r0
 80174a6:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 80174a8:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80174aa:	3a01      	subs	r2, #1
 80174ac:	8702      	strh	r2, [r0, #56]	; 0x38
 80174ae:	1c5a      	adds	r2, r3, #1
 80174b0:	b292      	uxth	r2, r2
 80174b2:	2a09      	cmp	r2, #9
 80174b4:	bf86      	itte	hi
 80174b6:	3b09      	subhi	r3, #9
 80174b8:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80174ba:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80174bc:	f7ff ffb5 	bl	801742a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80174c0:	8c23      	ldrh	r3, [r4, #32]
 80174c2:	2b01      	cmp	r3, #1
 80174c4:	bf9c      	itt	ls
 80174c6:	3301      	addls	r3, #1
 80174c8:	8423      	strhls	r3, [r4, #32]
 80174ca:	8be3      	ldrh	r3, [r4, #30]
 80174cc:	b90b      	cbnz	r3, 80174d2 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80174ce:	2302      	movs	r3, #2
 80174d0:	83e3      	strh	r3, [r4, #30]
 80174d2:	8be3      	ldrh	r3, [r4, #30]
 80174d4:	3b01      	subs	r3, #1
 80174d6:	b29b      	uxth	r3, r3
 80174d8:	83e3      	strh	r3, [r4, #30]
 80174da:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80174de:	4628      	mov	r0, r5
 80174e0:	8365      	strh	r5, [r4, #26]
 80174e2:	bd38      	pop	{r3, r4, r5, pc}

080174e4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80174e4:	428a      	cmp	r2, r1
 80174e6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80174ea:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 80174ec:	d931      	bls.n	8017552 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80174ee:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 80174f0:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 80174f4:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 80174f8:	19ee      	adds	r6, r5, r7
 80174fa:	1a54      	subs	r4, r2, r1
 80174fc:	3e01      	subs	r6, #1
 80174fe:	fa1f fe84 	uxth.w	lr, r4
 8017502:	b2b4      	uxth	r4, r6
 8017504:	eba4 090e 	sub.w	r9, r4, lr
 8017508:	fa1f f989 	uxth.w	r9, r9
 801750c:	2c09      	cmp	r4, #9
 801750e:	4626      	mov	r6, r4
 8017510:	bf88      	it	hi
 8017512:	f1a4 060a 	subhi.w	r6, r4, #10
 8017516:	f1bc 0f00 	cmp.w	ip, #0
 801751a:	bf08      	it	eq
 801751c:	f04f 0c02 	moveq.w	ip, #2
 8017520:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017524:	f10c 3cff 	add.w	ip, ip, #4294967295
 8017528:	fa1f fc8c 	uxth.w	ip, ip
 801752c:	3c01      	subs	r4, #1
 801752e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8017532:	b2a4      	uxth	r4, r4
 8017534:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8017538:	454c      	cmp	r4, r9
 801753a:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801753e:	d1e5      	bne.n	801750c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8017540:	eba5 050e 	sub.w	r5, r5, lr
 8017544:	eb0e 0408 	add.w	r4, lr, r8
 8017548:	8705      	strh	r5, [r0, #56]	; 0x38
 801754a:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801754e:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8017552:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8017554:	1a64      	subs	r4, r4, r1
 8017556:	4439      	add	r1, r7
 8017558:	b289      	uxth	r1, r1
 801755a:	2909      	cmp	r1, #9
 801755c:	bf88      	it	hi
 801755e:	390a      	subhi	r1, #10
 8017560:	8704      	strh	r4, [r0, #56]	; 0x38
 8017562:	86c1      	strh	r1, [r0, #54]	; 0x36
 8017564:	250a      	movs	r5, #10
 8017566:	b18a      	cbz	r2, 801758c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8017568:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801756a:	3a01      	subs	r2, #1
 801756c:	b292      	uxth	r2, r2
 801756e:	3101      	adds	r1, #1
 8017570:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8017574:	8701      	strh	r1, [r0, #56]	; 0x38
 8017576:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8017578:	b901      	cbnz	r1, 801757c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801757a:	86c5      	strh	r5, [r0, #54]	; 0x36
 801757c:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801757e:	3901      	subs	r1, #1
 8017580:	b289      	uxth	r1, r1
 8017582:	86c1      	strh	r1, [r0, #54]	; 0x36
 8017584:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8017588:	844c      	strh	r4, [r1, #34]	; 0x22
 801758a:	e7ec      	b.n	8017566 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801758c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017590:	f7ff bf4b 	b.w	801742a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08017594 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8017594:	b570      	push	{r4, r5, r6, lr}
 8017596:	2500      	movs	r5, #0
 8017598:	4295      	cmp	r5, r2
 801759a:	d011      	beq.n	80175c0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801759c:	8bc4      	ldrh	r4, [r0, #30]
 801759e:	f831 6b02 	ldrh.w	r6, [r1], #2
 80175a2:	4414      	add	r4, r2
 80175a4:	3c01      	subs	r4, #1
 80175a6:	1b64      	subs	r4, r4, r5
 80175a8:	b2a4      	uxth	r4, r4
 80175aa:	2c01      	cmp	r4, #1
 80175ac:	bf88      	it	hi
 80175ae:	3c02      	subhi	r4, #2
 80175b0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80175b4:	8b64      	ldrh	r4, [r4, #26]
 80175b6:	42b4      	cmp	r4, r6
 80175b8:	d117      	bne.n	80175ea <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80175ba:	3501      	adds	r5, #1
 80175bc:	b2ad      	uxth	r5, r5
 80175be:	e7eb      	b.n	8017598 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80175c0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80175c4:	2400      	movs	r4, #0
 80175c6:	4413      	add	r3, r2
 80175c8:	b2a2      	uxth	r2, r4
 80175ca:	429a      	cmp	r2, r3
 80175cc:	da0f      	bge.n	80175ee <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80175ce:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80175d0:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80175d4:	4432      	add	r2, r6
 80175d6:	b292      	uxth	r2, r2
 80175d8:	2a09      	cmp	r2, #9
 80175da:	bf88      	it	hi
 80175dc:	3a0a      	subhi	r2, #10
 80175de:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80175e2:	3401      	adds	r4, #1
 80175e4:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 80175e6:	42aa      	cmp	r2, r5
 80175e8:	d0ee      	beq.n	80175c8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80175ea:	2000      	movs	r0, #0
 80175ec:	bd70      	pop	{r4, r5, r6, pc}
 80175ee:	2001      	movs	r0, #1
 80175f0:	e7fc      	b.n	80175ec <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080175f2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80175f2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80175f6:	4605      	mov	r5, r0
 80175f8:	4616      	mov	r6, r2
 80175fa:	1c8c      	adds	r4, r1, #2
 80175fc:	8809      	ldrh	r1, [r1, #0]
 80175fe:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8017602:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8017606:	42b3      	cmp	r3, r6
 8017608:	d124      	bne.n	8017654 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801760a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801760e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8017612:	f001 070f 	and.w	r7, r1, #15
 8017616:	f8cd 8000 	str.w	r8, [sp]
 801761a:	464b      	mov	r3, r9
 801761c:	4652      	mov	r2, sl
 801761e:	4621      	mov	r1, r4
 8017620:	4628      	mov	r0, r5
 8017622:	f7ff ffb7 	bl	8017594 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8017626:	4683      	mov	fp, r0
 8017628:	b168      	cbz	r0, 8017646 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801762a:	eb0a 0109 	add.w	r1, sl, r9
 801762e:	4441      	add	r1, r8
 8017630:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8017634:	463a      	mov	r2, r7
 8017636:	4649      	mov	r1, r9
 8017638:	4628      	mov	r0, r5
 801763a:	f7ff ff53 	bl	80174e4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801763e:	4658      	mov	r0, fp
 8017640:	b003      	add	sp, #12
 8017642:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017646:	eb07 010a 	add.w	r1, r7, sl
 801764a:	4449      	add	r1, r9
 801764c:	4441      	add	r1, r8
 801764e:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8017652:	e7d2      	b.n	80175fa <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8017654:	f04f 0b00 	mov.w	fp, #0
 8017658:	e7f1      	b.n	801763e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801765a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801765a:	b570      	push	{r4, r5, r6, lr}
 801765c:	8810      	ldrh	r0, [r2, #0]
 801765e:	4298      	cmp	r0, r3
 8017660:	d817      	bhi.n	8017692 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8017662:	1e48      	subs	r0, r1, #1
 8017664:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8017668:	4298      	cmp	r0, r3
 801766a:	d312      	bcc.n	8017692 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801766c:	2400      	movs	r4, #0
 801766e:	428c      	cmp	r4, r1
 8017670:	d20f      	bcs.n	8017692 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8017672:	1860      	adds	r0, r4, r1
 8017674:	1040      	asrs	r0, r0, #1
 8017676:	0085      	lsls	r5, r0, #2
 8017678:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801767c:	42b3      	cmp	r3, r6
 801767e:	d902      	bls.n	8017686 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8017680:	3001      	adds	r0, #1
 8017682:	b284      	uxth	r4, r0
 8017684:	e7f3      	b.n	801766e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8017686:	d201      	bcs.n	801768c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8017688:	b281      	uxth	r1, r0
 801768a:	e7f0      	b.n	801766e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801768c:	442a      	add	r2, r5
 801768e:	8850      	ldrh	r0, [r2, #2]
 8017690:	bd70      	pop	{r4, r5, r6, pc}
 8017692:	2000      	movs	r0, #0
 8017694:	e7fc      	b.n	8017690 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08017696 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8017696:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801769a:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801769c:	886f      	ldrh	r7, [r5, #2]
 801769e:	4604      	mov	r4, r0
 80176a0:	087f      	lsrs	r7, r7, #1
 80176a2:	260b      	movs	r6, #11
 80176a4:	3e01      	subs	r6, #1
 80176a6:	d013      	beq.n	80176d0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80176a8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80176aa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80176ae:	462a      	mov	r2, r5
 80176b0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80176b4:	4639      	mov	r1, r7
 80176b6:	4643      	mov	r3, r8
 80176b8:	4620      	mov	r0, r4
 80176ba:	f7ff ffce 	bl	801765a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80176be:	b138      	cbz	r0, 80176d0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80176c0:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80176c4:	4642      	mov	r2, r8
 80176c6:	4620      	mov	r0, r4
 80176c8:	f7ff ff93 	bl	80175f2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80176cc:	2800      	cmp	r0, #0
 80176ce:	d1e9      	bne.n	80176a4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80176d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080176d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80176d4:	b570      	push	{r4, r5, r6, lr}
 80176d6:	694a      	ldr	r2, [r1, #20]
 80176d8:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80176da:	684b      	ldr	r3, [r1, #4]
 80176dc:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80176de:	1b54      	subs	r4, r2, r5
 80176e0:	f000 8106 	beq.w	80178f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80176e4:	1b9b      	subs	r3, r3, r6
 80176e6:	d003      	beq.n	80176f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80176e8:	4363      	muls	r3, r4
 80176ea:	2210      	movs	r2, #16
 80176ec:	fb93 f3f2 	sdiv	r3, r3, r2
 80176f0:	680c      	ldr	r4, [r1, #0]
 80176f2:	698a      	ldr	r2, [r1, #24]
 80176f4:	1b65      	subs	r5, r4, r5
 80176f6:	f000 80fd 	beq.w	80178f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80176fa:	1b92      	subs	r2, r2, r6
 80176fc:	d003      	beq.n	8017706 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80176fe:	436a      	muls	r2, r5
 8017700:	2410      	movs	r4, #16
 8017702:	fb92 f2f4 	sdiv	r2, r2, r4
 8017706:	1a9b      	subs	r3, r3, r2
 8017708:	ee07 3a90 	vmov	s15, r3
 801770c:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8017930 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8017710:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017714:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017718:	ee67 7a84 	vmul.f32	s15, s15, s8
 801771c:	460a      	mov	r2, r1
 801771e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8017722:	4603      	mov	r3, r0
 8017724:	f100 040c 	add.w	r4, r0, #12
 8017728:	eeb1 6a43 	vneg.f32	s12, s6
 801772c:	edd2 7a02 	vldr	s15, [r2, #8]
 8017730:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8017734:	3214      	adds	r2, #20
 8017736:	ece3 6a01 	vstmia	r3!, {s13}
 801773a:	ed52 7a02 	vldr	s15, [r2, #-8]
 801773e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017742:	429c      	cmp	r4, r3
 8017744:	edc3 7a02 	vstr	s15, [r3, #8]
 8017748:	ed52 7a01 	vldr	s15, [r2, #-4]
 801774c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017750:	edc3 7a05 	vstr	s15, [r3, #20]
 8017754:	d1ea      	bne.n	801772c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8017756:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017758:	698b      	ldr	r3, [r1, #24]
 801775a:	edd0 4a02 	vldr	s9, [r0, #8]
 801775e:	edd0 3a00 	vldr	s7, [r0]
 8017762:	edd0 6a01 	vldr	s13, [r0, #4]
 8017766:	ed90 5a05 	vldr	s10, [r0, #20]
 801776a:	ed90 2a03 	vldr	s4, [r0, #12]
 801776e:	edd0 5a04 	vldr	s11, [r0, #16]
 8017772:	ed90 1a07 	vldr	s2, [r0, #28]
 8017776:	edd0 2a06 	vldr	s5, [r0, #24]
 801777a:	1a9b      	subs	r3, r3, r2
 801777c:	ee07 3a90 	vmov	s15, r3
 8017780:	684b      	ldr	r3, [r1, #4]
 8017782:	1a9b      	subs	r3, r3, r2
 8017784:	ee07 3a10 	vmov	s14, r3
 8017788:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801778c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8017790:	ee67 7a84 	vmul.f32	s15, s15, s8
 8017794:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8017798:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801779c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80177a0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80177a4:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80177a8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80177ac:	ee32 5a45 	vsub.f32	s10, s4, s10
 80177b0:	ee67 7a83 	vmul.f32	s15, s15, s6
 80177b4:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80177b8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80177ba:	694a      	ldr	r2, [r1, #20]
 80177bc:	1b13      	subs	r3, r2, r4
 80177be:	ee07 3a10 	vmov	s14, r3
 80177c2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80177c6:	680b      	ldr	r3, [r1, #0]
 80177c8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80177cc:	1b1b      	subs	r3, r3, r4
 80177ce:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80177d2:	ee07 3a10 	vmov	s14, r3
 80177d6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80177da:	ee27 7a04 	vmul.f32	s14, s14, s8
 80177de:	eee6 4a87 	vfma.f32	s9, s13, s14
 80177e2:	ee64 4a86 	vmul.f32	s9, s9, s12
 80177e6:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 80177ea:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80177ec:	698b      	ldr	r3, [r1, #24]
 80177ee:	1a9b      	subs	r3, r3, r2
 80177f0:	ee06 3a90 	vmov	s13, r3
 80177f4:	684b      	ldr	r3, [r1, #4]
 80177f6:	1a9b      	subs	r3, r3, r2
 80177f8:	ee07 3a10 	vmov	s14, r3
 80177fc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017800:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017804:	ee66 6a84 	vmul.f32	s13, s13, s8
 8017808:	ee27 7a04 	vmul.f32	s14, s14, s8
 801780c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8017810:	eee5 6a87 	vfma.f32	s13, s11, s14
 8017814:	ee66 6a83 	vmul.f32	s13, s13, s6
 8017818:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801781c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801781e:	694a      	ldr	r2, [r1, #20]
 8017820:	1b13      	subs	r3, r2, r4
 8017822:	ee07 3a10 	vmov	s14, r3
 8017826:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801782a:	680b      	ldr	r3, [r1, #0]
 801782c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017830:	1b1b      	subs	r3, r3, r4
 8017832:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8017836:	ee07 3a10 	vmov	s14, r3
 801783a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801783e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017842:	eea5 5a87 	vfma.f32	s10, s11, s14
 8017846:	edd0 5a08 	vldr	s11, [r0, #32]
 801784a:	ee25 5a06 	vmul.f32	s10, s10, s12
 801784e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8017852:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8017856:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017858:	698b      	ldr	r3, [r1, #24]
 801785a:	1a9b      	subs	r3, r3, r2
 801785c:	ee07 3a10 	vmov	s14, r3
 8017860:	684b      	ldr	r3, [r1, #4]
 8017862:	1a9b      	subs	r3, r3, r2
 8017864:	ee01 3a90 	vmov	s3, r3
 8017868:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801786c:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8017870:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017874:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8017878:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801787c:	ee61 1a84 	vmul.f32	s3, s3, s8
 8017880:	eea1 7a21 	vfma.f32	s14, s2, s3
 8017884:	ee27 7a03 	vmul.f32	s14, s14, s6
 8017888:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801788c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801788e:	694a      	ldr	r2, [r1, #20]
 8017890:	1b13      	subs	r3, r2, r4
 8017892:	ee03 3a10 	vmov	s6, r3
 8017896:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801789a:	680b      	ldr	r3, [r1, #0]
 801789c:	ee23 3a04 	vmul.f32	s6, s6, s8
 80178a0:	1b1b      	subs	r3, r3, r4
 80178a2:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80178a6:	ee03 3a10 	vmov	s6, r3
 80178aa:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80178ae:	ee23 4a04 	vmul.f32	s8, s6, s8
 80178b2:	eee1 5a04 	vfma.f32	s11, s2, s8
 80178b6:	ee25 6a86 	vmul.f32	s12, s11, s12
 80178ba:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80178be:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80178c2:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80178c6:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80178ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80178ce:	dd13      	ble.n	80178f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80178d0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80178d4:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80178d8:	63c3      	str	r3, [r0, #60]	; 0x3c
 80178da:	eee3 7a87 	vfma.f32	s15, s7, s14
 80178de:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80178e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80178e6:	dd15      	ble.n	8017914 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80178e8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80178ec:	6403      	str	r3, [r0, #64]	; 0x40
 80178ee:	bd70      	pop	{r4, r5, r6, pc}
 80178f0:	4623      	mov	r3, r4
 80178f2:	e6fd      	b.n	80176f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80178f4:	462a      	mov	r2, r5
 80178f6:	e706      	b.n	8017706 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80178f8:	d502      	bpl.n	8017900 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80178fa:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80178fe:	e7e9      	b.n	80178d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8017900:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8017904:	eea3 2a85 	vfma.f32	s4, s7, s10
 8017908:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801790c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017910:	dade      	bge.n	80178d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8017912:	e7f2      	b.n	80178fa <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8017914:	d502      	bpl.n	801791c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8017916:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801791a:	e7e7      	b.n	80178ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801791c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8017920:	eee3 4a86 	vfma.f32	s9, s7, s12
 8017924:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8017928:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801792c:	dadc      	bge.n	80178e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801792e:	e7f2      	b.n	8017916 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8017930:	3d800000 	.word	0x3d800000

08017934 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8017934:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017938:	2714      	movs	r7, #20
 801793a:	435f      	muls	r7, r3
 801793c:	eb02 0c07 	add.w	ip, r2, r7
 8017940:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8017944:	f115 0e0f 	adds.w	lr, r5, #15
 8017948:	f100 80a2 	bmi.w	8017a90 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801794c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8017950:	9c08      	ldr	r4, [sp, #32]
 8017952:	f8c0 e014 	str.w	lr, [r0, #20]
 8017956:	2614      	movs	r6, #20
 8017958:	4366      	muls	r6, r4
 801795a:	eb02 0806 	add.w	r8, r2, r6
 801795e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8017962:	f115 040f 	adds.w	r4, r5, #15
 8017966:	f100 809f 	bmi.w	8017aa8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801796a:	1124      	asrs	r4, r4, #4
 801796c:	eba4 040e 	sub.w	r4, r4, lr
 8017970:	6184      	str	r4, [r0, #24]
 8017972:	2c00      	cmp	r4, #0
 8017974:	f000 808a 	beq.w	8017a8c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8017978:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801797c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8017980:	5995      	ldr	r5, [r2, r6]
 8017982:	eba4 0809 	sub.w	r8, r4, r9
 8017986:	59d4      	ldr	r4, [r2, r7]
 8017988:	eba5 0a04 	sub.w	sl, r5, r4
 801798c:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8017990:	fb0e fe05 	mul.w	lr, lr, r5
 8017994:	fb0a ee19 	mls	lr, sl, r9, lr
 8017998:	fb08 e404 	mla	r4, r8, r4, lr
 801799c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80179a0:	3c01      	subs	r4, #1
 80179a2:	19a4      	adds	r4, r4, r6
 80179a4:	f100 808c 	bmi.w	8017ac0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80179a8:	fb94 fef6 	sdiv	lr, r4, r6
 80179ac:	f8c0 e000 	str.w	lr, [r0]
 80179b0:	fb06 441e 	mls	r4, r6, lr, r4
 80179b4:	6104      	str	r4, [r0, #16]
 80179b6:	2d00      	cmp	r5, #0
 80179b8:	f2c0 8095 	blt.w	8017ae6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80179bc:	fb95 f4f6 	sdiv	r4, r5, r6
 80179c0:	6044      	str	r4, [r0, #4]
 80179c2:	fb06 5514 	mls	r5, r6, r4, r5
 80179c6:	6085      	str	r5, [r0, #8]
 80179c8:	60c6      	str	r6, [r0, #12]
 80179ca:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80179ce:	6945      	ldr	r5, [r0, #20]
 80179d0:	59d2      	ldr	r2, [r2, r7]
 80179d2:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8017b08 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80179d6:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80179da:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80179de:	ee07 4a10 	vmov	s14, r4
 80179e2:	6804      	ldr	r4, [r0, #0]
 80179e4:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80179e8:	ee07 2a90 	vmov	s15, r2
 80179ec:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80179f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80179f4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80179f8:	ee27 7a26 	vmul.f32	s14, s14, s13
 80179fc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017a00:	edd3 6a00 	vldr	s13, [r3]
 8017a04:	eee6 6a07 	vfma.f32	s13, s12, s14
 8017a08:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8017a0c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8017a10:	edc0 6a07 	vstr	s13, [r0, #28]
 8017a14:	edd0 6a01 	vldr	s13, [r0, #4]
 8017a18:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8017a1c:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8017a20:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017a24:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017a28:	ed80 6a08 	vstr	s12, [r0, #32]
 8017a2c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8017a2e:	6242      	str	r2, [r0, #36]	; 0x24
 8017a30:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8017a34:	ed93 6a03 	vldr	s12, [r3, #12]
 8017a38:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017a3c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8017a40:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8017a44:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8017a48:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8017a4c:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8017a50:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017a54:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8017a58:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017a5a:	6302      	str	r2, [r0, #48]	; 0x30
 8017a5c:	ed93 6a06 	vldr	s12, [r3, #24]
 8017a60:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8017a64:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017a68:	eeb0 7a46 	vmov.f32	s14, s12
 8017a6c:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8017a70:	eea6 7a27 	vfma.f32	s14, s12, s15
 8017a74:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017a78:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8017a7c:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8017a80:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017a84:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8017a88:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8017a8a:	63c3      	str	r3, [r0, #60]	; 0x3c
 8017a8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017a90:	f1c5 0501 	rsb	r5, r5, #1
 8017a94:	f015 050f 	ands.w	r5, r5, #15
 8017a98:	bf18      	it	ne
 8017a9a:	2501      	movne	r5, #1
 8017a9c:	2410      	movs	r4, #16
 8017a9e:	fb9e fef4 	sdiv	lr, lr, r4
 8017aa2:	ebae 0e05 	sub.w	lr, lr, r5
 8017aa6:	e753      	b.n	8017950 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8017aa8:	f1c5 0501 	rsb	r5, r5, #1
 8017aac:	f015 050f 	ands.w	r5, r5, #15
 8017ab0:	bf18      	it	ne
 8017ab2:	2501      	movne	r5, #1
 8017ab4:	f04f 0910 	mov.w	r9, #16
 8017ab8:	fb94 f4f9 	sdiv	r4, r4, r9
 8017abc:	1b64      	subs	r4, r4, r5
 8017abe:	e755      	b.n	801796c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8017ac0:	4264      	negs	r4, r4
 8017ac2:	fb94 fef6 	sdiv	lr, r4, r6
 8017ac6:	f1ce 0800 	rsb	r8, lr, #0
 8017aca:	fb06 441e 	mls	r4, r6, lr, r4
 8017ace:	f8c0 8000 	str.w	r8, [r0]
 8017ad2:	6104      	str	r4, [r0, #16]
 8017ad4:	2c00      	cmp	r4, #0
 8017ad6:	f43f af6e 	beq.w	80179b6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8017ada:	ea6f 0e0e 	mvn.w	lr, lr
 8017ade:	f8c0 e000 	str.w	lr, [r0]
 8017ae2:	1b34      	subs	r4, r6, r4
 8017ae4:	e766      	b.n	80179b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8017ae6:	426d      	negs	r5, r5
 8017ae8:	fb95 f4f6 	sdiv	r4, r5, r6
 8017aec:	f1c4 0e00 	rsb	lr, r4, #0
 8017af0:	fb06 5514 	mls	r5, r6, r4, r5
 8017af4:	f8c0 e004 	str.w	lr, [r0, #4]
 8017af8:	6085      	str	r5, [r0, #8]
 8017afa:	2d00      	cmp	r5, #0
 8017afc:	f43f af64 	beq.w	80179c8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8017b00:	43e4      	mvns	r4, r4
 8017b02:	6044      	str	r4, [r0, #4]
 8017b04:	1b75      	subs	r5, r6, r5
 8017b06:	e75e      	b.n	80179c6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8017b08:	3d800000 	.word	0x3d800000

08017b0c <_ZN8touchgfx7Unicode6strlenEPKt>:
 8017b0c:	4602      	mov	r2, r0
 8017b0e:	b148      	cbz	r0, 8017b24 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8017b10:	2300      	movs	r3, #0
 8017b12:	b298      	uxth	r0, r3
 8017b14:	3301      	adds	r3, #1
 8017b16:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8017b1a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8017b1e:	2900      	cmp	r1, #0
 8017b20:	d1f7      	bne.n	8017b12 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8017b22:	4770      	bx	lr
 8017b24:	4770      	bx	lr

08017b26 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8017b26:	b530      	push	{r4, r5, lr}
 8017b28:	4604      	mov	r4, r0
 8017b2a:	b159      	cbz	r1, 8017b44 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8017b2c:	b148      	cbz	r0, 8017b42 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017b2e:	2300      	movs	r3, #0
 8017b30:	b298      	uxth	r0, r3
 8017b32:	4282      	cmp	r2, r0
 8017b34:	d905      	bls.n	8017b42 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017b36:	5ccd      	ldrb	r5, [r1, r3]
 8017b38:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8017b3c:	3301      	adds	r3, #1
 8017b3e:	2d00      	cmp	r5, #0
 8017b40:	d1f6      	bne.n	8017b30 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8017b42:	bd30      	pop	{r4, r5, pc}
 8017b44:	4608      	mov	r0, r1
 8017b46:	e7fc      	b.n	8017b42 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08017b48 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8017b48:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017b4a:	b08b      	sub	sp, #44	; 0x2c
 8017b4c:	468c      	mov	ip, r1
 8017b4e:	2100      	movs	r1, #0
 8017b50:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017b54:	4604      	mov	r4, r0
 8017b56:	261f      	movs	r6, #31
 8017b58:	af01      	add	r7, sp, #4
 8017b5a:	fb94 fef3 	sdiv	lr, r4, r3
 8017b5e:	fb03 441e 	mls	r4, r3, lr, r4
 8017b62:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8017b66:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8017b6a:	b2ec      	uxtb	r4, r5
 8017b6c:	2d09      	cmp	r5, #9
 8017b6e:	bfd4      	ite	le
 8017b70:	3430      	addle	r4, #48	; 0x30
 8017b72:	3457      	addgt	r4, #87	; 0x57
 8017b74:	b2e4      	uxtb	r4, r4
 8017b76:	55bc      	strb	r4, [r7, r6]
 8017b78:	4674      	mov	r4, lr
 8017b7a:	1e71      	subs	r1, r6, #1
 8017b7c:	b974      	cbnz	r4, 8017b9c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8017b7e:	2800      	cmp	r0, #0
 8017b80:	da05      	bge.n	8017b8e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8017b82:	ab0a      	add	r3, sp, #40	; 0x28
 8017b84:	4419      	add	r1, r3
 8017b86:	232d      	movs	r3, #45	; 0x2d
 8017b88:	f801 3c24 	strb.w	r3, [r1, #-36]
 8017b8c:	1eb1      	subs	r1, r6, #2
 8017b8e:	3101      	adds	r1, #1
 8017b90:	4439      	add	r1, r7
 8017b92:	4660      	mov	r0, ip
 8017b94:	f7ff ffc7 	bl	8017b26 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017b98:	b00b      	add	sp, #44	; 0x2c
 8017b9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017b9c:	460e      	mov	r6, r1
 8017b9e:	e7dc      	b.n	8017b5a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08017ba0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8017ba0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017ba2:	b08b      	sub	sp, #44	; 0x2c
 8017ba4:	468c      	mov	ip, r1
 8017ba6:	2100      	movs	r1, #0
 8017ba8:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017bac:	ae01      	add	r6, sp, #4
 8017bae:	211f      	movs	r1, #31
 8017bb0:	fbb0 f7f3 	udiv	r7, r0, r3
 8017bb4:	fb03 0517 	mls	r5, r3, r7, r0
 8017bb8:	b2ec      	uxtb	r4, r5
 8017bba:	2d09      	cmp	r5, #9
 8017bbc:	bfd4      	ite	le
 8017bbe:	3430      	addle	r4, #48	; 0x30
 8017bc0:	3457      	addgt	r4, #87	; 0x57
 8017bc2:	b2e4      	uxtb	r4, r4
 8017bc4:	558c      	strb	r4, [r1, r6]
 8017bc6:	4638      	mov	r0, r7
 8017bc8:	1e4c      	subs	r4, r1, #1
 8017bca:	b92f      	cbnz	r7, 8017bd8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8017bcc:	4431      	add	r1, r6
 8017bce:	4660      	mov	r0, ip
 8017bd0:	f7ff ffa9 	bl	8017b26 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017bd4:	b00b      	add	sp, #44	; 0x2c
 8017bd6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017bd8:	4621      	mov	r1, r4
 8017bda:	e7e9      	b.n	8017bb0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08017bdc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8017bdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017be0:	4691      	mov	r9, r2
 8017be2:	b085      	sub	sp, #20
 8017be4:	6802      	ldr	r2, [r0, #0]
 8017be6:	9201      	str	r2, [sp, #4]
 8017be8:	4688      	mov	r8, r1
 8017bea:	4683      	mov	fp, r0
 8017bec:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8017bf0:	9103      	str	r1, [sp, #12]
 8017bf2:	4610      	mov	r0, r2
 8017bf4:	461c      	mov	r4, r3
 8017bf6:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8017bfa:	9302      	str	r3, [sp, #8]
 8017bfc:	f7ff ff86 	bl	8017b0c <_ZN8touchgfx7Unicode6strlenEPKt>
 8017c00:	f1b8 0f00 	cmp.w	r8, #0
 8017c04:	bf0c      	ite	eq
 8017c06:	4684      	moveq	ip, r0
 8017c08:	f100 0c01 	addne.w	ip, r0, #1
 8017c0c:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8017c10:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8017c14:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8017c16:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017c18:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8017c1c:	9903      	ldr	r1, [sp, #12]
 8017c1e:	fa1f fc8c 	uxth.w	ip, ip
 8017c22:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8017c26:	d041      	beq.n	8017cac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017c28:	d834      	bhi.n	8017c94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8017c2a:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8017c2e:	d059      	beq.n	8017ce4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8017c30:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8017c34:	d03a      	beq.n	8017cac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017c36:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8017c3a:	d034      	beq.n	8017ca6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017c3c:	2400      	movs	r4, #0
 8017c3e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8017c42:	3a01      	subs	r2, #1
 8017c44:	b169      	cbz	r1, 8017c62 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017c46:	9911      	ldr	r1, [sp, #68]	; 0x44
 8017c48:	458c      	cmp	ip, r1
 8017c4a:	da09      	bge.n	8017c60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017c4c:	eba1 010c 	sub.w	r1, r1, ip
 8017c50:	b289      	uxth	r1, r1
 8017c52:	b933      	cbnz	r3, 8017c62 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017c54:	2e00      	cmp	r6, #0
 8017c56:	d051      	beq.n	8017cfc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017c58:	2800      	cmp	r0, #0
 8017c5a:	d04f      	beq.n	8017cfc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017c5c:	440c      	add	r4, r1
 8017c5e:	b2a4      	uxth	r4, r4
 8017c60:	2100      	movs	r1, #0
 8017c62:	682b      	ldr	r3, [r5, #0]
 8017c64:	4293      	cmp	r3, r2
 8017c66:	da07      	bge.n	8017c78 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017c68:	f1b8 0f00 	cmp.w	r8, #0
 8017c6c:	d004      	beq.n	8017c78 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017c6e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8017c72:	682b      	ldr	r3, [r5, #0]
 8017c74:	3301      	adds	r3, #1
 8017c76:	602b      	str	r3, [r5, #0]
 8017c78:	2730      	movs	r7, #48	; 0x30
 8017c7a:	2c00      	cmp	r4, #0
 8017c7c:	d04e      	beq.n	8017d1c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017c7e:	682e      	ldr	r6, [r5, #0]
 8017c80:	3c01      	subs	r4, #1
 8017c82:	42b2      	cmp	r2, r6
 8017c84:	b2a4      	uxth	r4, r4
 8017c86:	dd49      	ble.n	8017d1c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017c88:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8017c8c:	682b      	ldr	r3, [r5, #0]
 8017c8e:	3301      	adds	r3, #1
 8017c90:	602b      	str	r3, [r5, #0]
 8017c92:	e7f2      	b.n	8017c7a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8017c94:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8017c98:	d01d      	beq.n	8017cd6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8017c9a:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8017c9e:	d002      	beq.n	8017ca6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017ca0:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8017ca4:	e7c9      	b.n	8017c3a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8017ca6:	4684      	mov	ip, r0
 8017ca8:	f04f 0800 	mov.w	r8, #0
 8017cac:	2c00      	cmp	r4, #0
 8017cae:	d0c6      	beq.n	8017c3e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017cb0:	b947      	cbnz	r7, 8017cc4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8017cb2:	2801      	cmp	r0, #1
 8017cb4:	d106      	bne.n	8017cc4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8017cb6:	8814      	ldrh	r4, [r2, #0]
 8017cb8:	2c30      	cmp	r4, #48	; 0x30
 8017cba:	bf02      	ittt	eq
 8017cbc:	3202      	addeq	r2, #2
 8017cbe:	f8cb 2000 	streq.w	r2, [fp]
 8017cc2:	4638      	moveq	r0, r7
 8017cc4:	45bc      	cmp	ip, r7
 8017cc6:	da14      	bge.n	8017cf2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8017cc8:	b2bf      	uxth	r7, r7
 8017cca:	eba7 040c 	sub.w	r4, r7, ip
 8017cce:	b2a4      	uxth	r4, r4
 8017cd0:	46bc      	mov	ip, r7
 8017cd2:	2600      	movs	r6, #0
 8017cd4:	e7b3      	b.n	8017c3e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017cd6:	4684      	mov	ip, r0
 8017cd8:	b16c      	cbz	r4, 8017cf6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8017cda:	42b8      	cmp	r0, r7
 8017cdc:	dd00      	ble.n	8017ce0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8017cde:	b2b8      	uxth	r0, r7
 8017ce0:	2400      	movs	r4, #0
 8017ce2:	e003      	b.n	8017cec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8017ce4:	f04f 0c01 	mov.w	ip, #1
 8017ce8:	2400      	movs	r4, #0
 8017cea:	4660      	mov	r0, ip
 8017cec:	4626      	mov	r6, r4
 8017cee:	46a0      	mov	r8, r4
 8017cf0:	e7a5      	b.n	8017c3e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017cf2:	2400      	movs	r4, #0
 8017cf4:	e7ed      	b.n	8017cd2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8017cf6:	4626      	mov	r6, r4
 8017cf8:	46a0      	mov	r8, r4
 8017cfa:	e7a0      	b.n	8017c3e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017cfc:	2900      	cmp	r1, #0
 8017cfe:	d0b0      	beq.n	8017c62 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017d00:	2720      	movs	r7, #32
 8017d02:	682e      	ldr	r6, [r5, #0]
 8017d04:	2900      	cmp	r1, #0
 8017d06:	d0ac      	beq.n	8017c62 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017d08:	3901      	subs	r1, #1
 8017d0a:	4296      	cmp	r6, r2
 8017d0c:	b289      	uxth	r1, r1
 8017d0e:	daa7      	bge.n	8017c60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017d10:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8017d14:	682b      	ldr	r3, [r5, #0]
 8017d16:	3301      	adds	r3, #1
 8017d18:	602b      	str	r3, [r5, #0]
 8017d1a:	e7f2      	b.n	8017d02 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8017d1c:	b188      	cbz	r0, 8017d42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8017d1e:	682b      	ldr	r3, [r5, #0]
 8017d20:	3801      	subs	r0, #1
 8017d22:	429a      	cmp	r2, r3
 8017d24:	b280      	uxth	r0, r0
 8017d26:	dd0c      	ble.n	8017d42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8017d28:	f8db 3000 	ldr.w	r3, [fp]
 8017d2c:	1c9c      	adds	r4, r3, #2
 8017d2e:	f8cb 4000 	str.w	r4, [fp]
 8017d32:	881c      	ldrh	r4, [r3, #0]
 8017d34:	682b      	ldr	r3, [r5, #0]
 8017d36:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8017d3a:	682b      	ldr	r3, [r5, #0]
 8017d3c:	3301      	adds	r3, #1
 8017d3e:	602b      	str	r3, [r5, #0]
 8017d40:	e7ec      	b.n	8017d1c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017d42:	2620      	movs	r6, #32
 8017d44:	b151      	cbz	r1, 8017d5c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8017d46:	6828      	ldr	r0, [r5, #0]
 8017d48:	3901      	subs	r1, #1
 8017d4a:	4282      	cmp	r2, r0
 8017d4c:	b289      	uxth	r1, r1
 8017d4e:	dd05      	ble.n	8017d5c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8017d50:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8017d54:	682b      	ldr	r3, [r5, #0]
 8017d56:	3301      	adds	r3, #1
 8017d58:	602b      	str	r3, [r5, #0]
 8017d5a:	e7f3      	b.n	8017d44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8017d5c:	b005      	add	sp, #20
 8017d5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017d62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8017d62:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017d66:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8017d6a:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8017d6e:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8017d72:	2400      	movs	r4, #0
 8017d74:	8014      	strh	r4, [r2, #0]
 8017d76:	701c      	strb	r4, [r3, #0]
 8017d78:	f888 4000 	strb.w	r4, [r8]
 8017d7c:	f88c 4000 	strb.w	r4, [ip]
 8017d80:	f88e 4000 	strb.w	r4, [lr]
 8017d84:	703c      	strb	r4, [r7, #0]
 8017d86:	6804      	ldr	r4, [r0, #0]
 8017d88:	b1a4      	cbz	r4, 8017db4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8017d8a:	8824      	ldrh	r4, [r4, #0]
 8017d8c:	f04f 0901 	mov.w	r9, #1
 8017d90:	b314      	cbz	r4, 8017dd8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017d92:	2c2b      	cmp	r4, #43	; 0x2b
 8017d94:	d001      	beq.n	8017d9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8017d96:	2c20      	cmp	r4, #32
 8017d98:	d110      	bne.n	8017dbc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8017d9a:	8014      	strh	r4, [r2, #0]
 8017d9c:	6804      	ldr	r4, [r0, #0]
 8017d9e:	b10c      	cbz	r4, 8017da4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8017da0:	3402      	adds	r4, #2
 8017da2:	6004      	str	r4, [r0, #0]
 8017da4:	680c      	ldr	r4, [r1, #0]
 8017da6:	b10c      	cbz	r4, 8017dac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8017da8:	3401      	adds	r4, #1
 8017daa:	600c      	str	r4, [r1, #0]
 8017dac:	6804      	ldr	r4, [r0, #0]
 8017dae:	b17c      	cbz	r4, 8017dd0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8017db0:	8824      	ldrh	r4, [r4, #0]
 8017db2:	e7ed      	b.n	8017d90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017db4:	680c      	ldr	r4, [r1, #0]
 8017db6:	b17c      	cbz	r4, 8017dd8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017db8:	7824      	ldrb	r4, [r4, #0]
 8017dba:	e7e7      	b.n	8017d8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8017dbc:	2c2d      	cmp	r4, #45	; 0x2d
 8017dbe:	d102      	bne.n	8017dc6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8017dc0:	f883 9000 	strb.w	r9, [r3]
 8017dc4:	e7ea      	b.n	8017d9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8017dc6:	2c23      	cmp	r4, #35	; 0x23
 8017dc8:	d107      	bne.n	8017dda <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8017dca:	f888 9000 	strb.w	r9, [r8]
 8017dce:	e7e5      	b.n	8017d9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8017dd0:	680c      	ldr	r4, [r1, #0]
 8017dd2:	b10c      	cbz	r4, 8017dd8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017dd4:	7824      	ldrb	r4, [r4, #0]
 8017dd6:	e7db      	b.n	8017d90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017dd8:	2400      	movs	r4, #0
 8017dda:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8017dde:	2b09      	cmp	r3, #9
 8017de0:	d901      	bls.n	8017de6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8017de2:	2c2a      	cmp	r4, #42	; 0x2a
 8017de4:	d122      	bne.n	8017e2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017de6:	2301      	movs	r3, #1
 8017de8:	2c30      	cmp	r4, #48	; 0x30
 8017dea:	f88e 3000 	strb.w	r3, [lr]
 8017dee:	d10d      	bne.n	8017e0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8017df0:	f88c 3000 	strb.w	r3, [ip]
 8017df4:	6803      	ldr	r3, [r0, #0]
 8017df6:	b10b      	cbz	r3, 8017dfc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8017df8:	3302      	adds	r3, #2
 8017dfa:	6003      	str	r3, [r0, #0]
 8017dfc:	680b      	ldr	r3, [r1, #0]
 8017dfe:	b10b      	cbz	r3, 8017e04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8017e00:	3301      	adds	r3, #1
 8017e02:	600b      	str	r3, [r1, #0]
 8017e04:	6803      	ldr	r3, [r0, #0]
 8017e06:	2b00      	cmp	r3, #0
 8017e08:	d02f      	beq.n	8017e6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8017e0a:	881c      	ldrh	r4, [r3, #0]
 8017e0c:	2c2a      	cmp	r4, #42	; 0x2a
 8017e0e:	d135      	bne.n	8017e7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8017e10:	f04f 33ff 	mov.w	r3, #4294967295
 8017e14:	6033      	str	r3, [r6, #0]
 8017e16:	6803      	ldr	r3, [r0, #0]
 8017e18:	b10b      	cbz	r3, 8017e1e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8017e1a:	3302      	adds	r3, #2
 8017e1c:	6003      	str	r3, [r0, #0]
 8017e1e:	680b      	ldr	r3, [r1, #0]
 8017e20:	b10b      	cbz	r3, 8017e26 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8017e22:	3301      	adds	r3, #1
 8017e24:	600b      	str	r3, [r1, #0]
 8017e26:	6803      	ldr	r3, [r0, #0]
 8017e28:	b31b      	cbz	r3, 8017e72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8017e2a:	881c      	ldrh	r4, [r3, #0]
 8017e2c:	2c2e      	cmp	r4, #46	; 0x2e
 8017e2e:	d11a      	bne.n	8017e66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017e30:	2301      	movs	r3, #1
 8017e32:	703b      	strb	r3, [r7, #0]
 8017e34:	6803      	ldr	r3, [r0, #0]
 8017e36:	b10b      	cbz	r3, 8017e3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8017e38:	3302      	adds	r3, #2
 8017e3a:	6003      	str	r3, [r0, #0]
 8017e3c:	680b      	ldr	r3, [r1, #0]
 8017e3e:	b10b      	cbz	r3, 8017e44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8017e40:	3301      	adds	r3, #1
 8017e42:	600b      	str	r3, [r1, #0]
 8017e44:	6803      	ldr	r3, [r0, #0]
 8017e46:	2b00      	cmp	r3, #0
 8017e48:	d036      	beq.n	8017eb8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8017e4a:	881b      	ldrh	r3, [r3, #0]
 8017e4c:	2b2a      	cmp	r3, #42	; 0x2a
 8017e4e:	d137      	bne.n	8017ec0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8017e50:	f04f 33ff 	mov.w	r3, #4294967295
 8017e54:	602b      	str	r3, [r5, #0]
 8017e56:	6803      	ldr	r3, [r0, #0]
 8017e58:	b10b      	cbz	r3, 8017e5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8017e5a:	3302      	adds	r3, #2
 8017e5c:	6003      	str	r3, [r0, #0]
 8017e5e:	680b      	ldr	r3, [r1, #0]
 8017e60:	b10b      	cbz	r3, 8017e66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017e62:	3301      	adds	r3, #1
 8017e64:	600b      	str	r3, [r1, #0]
 8017e66:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017e6a:	680c      	ldr	r4, [r1, #0]
 8017e6c:	b134      	cbz	r4, 8017e7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8017e6e:	7824      	ldrb	r4, [r4, #0]
 8017e70:	e7cc      	b.n	8017e0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8017e72:	680b      	ldr	r3, [r1, #0]
 8017e74:	2b00      	cmp	r3, #0
 8017e76:	d0f6      	beq.n	8017e66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017e78:	781c      	ldrb	r4, [r3, #0]
 8017e7a:	e7d7      	b.n	8017e2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017e7c:	2300      	movs	r3, #0
 8017e7e:	6033      	str	r3, [r6, #0]
 8017e80:	220a      	movs	r2, #10
 8017e82:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8017e86:	fa1f f38c 	uxth.w	r3, ip
 8017e8a:	2b09      	cmp	r3, #9
 8017e8c:	d8ce      	bhi.n	8017e2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017e8e:	6833      	ldr	r3, [r6, #0]
 8017e90:	fb02 c303 	mla	r3, r2, r3, ip
 8017e94:	6033      	str	r3, [r6, #0]
 8017e96:	6803      	ldr	r3, [r0, #0]
 8017e98:	b10b      	cbz	r3, 8017e9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8017e9a:	3302      	adds	r3, #2
 8017e9c:	6003      	str	r3, [r0, #0]
 8017e9e:	680b      	ldr	r3, [r1, #0]
 8017ea0:	b10b      	cbz	r3, 8017ea6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8017ea2:	3301      	adds	r3, #1
 8017ea4:	600b      	str	r3, [r1, #0]
 8017ea6:	6803      	ldr	r3, [r0, #0]
 8017ea8:	b10b      	cbz	r3, 8017eae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8017eaa:	881c      	ldrh	r4, [r3, #0]
 8017eac:	e7e9      	b.n	8017e82 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017eae:	680c      	ldr	r4, [r1, #0]
 8017eb0:	2c00      	cmp	r4, #0
 8017eb2:	d0e6      	beq.n	8017e82 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017eb4:	7824      	ldrb	r4, [r4, #0]
 8017eb6:	e7e4      	b.n	8017e82 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017eb8:	680b      	ldr	r3, [r1, #0]
 8017eba:	b10b      	cbz	r3, 8017ec0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8017ebc:	781b      	ldrb	r3, [r3, #0]
 8017ebe:	e7c5      	b.n	8017e4c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8017ec0:	2200      	movs	r2, #0
 8017ec2:	602a      	str	r2, [r5, #0]
 8017ec4:	240a      	movs	r4, #10
 8017ec6:	3b30      	subs	r3, #48	; 0x30
 8017ec8:	b29e      	uxth	r6, r3
 8017eca:	2e09      	cmp	r6, #9
 8017ecc:	682a      	ldr	r2, [r5, #0]
 8017ece:	d813      	bhi.n	8017ef8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8017ed0:	fb04 3302 	mla	r3, r4, r2, r3
 8017ed4:	602b      	str	r3, [r5, #0]
 8017ed6:	6803      	ldr	r3, [r0, #0]
 8017ed8:	b10b      	cbz	r3, 8017ede <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8017eda:	3302      	adds	r3, #2
 8017edc:	6003      	str	r3, [r0, #0]
 8017ede:	680b      	ldr	r3, [r1, #0]
 8017ee0:	b10b      	cbz	r3, 8017ee6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8017ee2:	3301      	adds	r3, #1
 8017ee4:	600b      	str	r3, [r1, #0]
 8017ee6:	6803      	ldr	r3, [r0, #0]
 8017ee8:	b10b      	cbz	r3, 8017eee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8017eea:	881b      	ldrh	r3, [r3, #0]
 8017eec:	e7eb      	b.n	8017ec6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017eee:	680b      	ldr	r3, [r1, #0]
 8017ef0:	2b00      	cmp	r3, #0
 8017ef2:	d0e8      	beq.n	8017ec6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017ef4:	781b      	ldrb	r3, [r3, #0]
 8017ef6:	e7e6      	b.n	8017ec6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017ef8:	2a06      	cmp	r2, #6
 8017efa:	bfa8      	it	ge
 8017efc:	2206      	movge	r2, #6
 8017efe:	602a      	str	r2, [r5, #0]
 8017f00:	e7b1      	b.n	8017e66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08017f02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8017f02:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f06:	b0a3      	sub	sp, #140	; 0x8c
 8017f08:	2600      	movs	r6, #0
 8017f0a:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8017f0e:	4607      	mov	r7, r0
 8017f10:	4688      	mov	r8, r1
 8017f12:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8017f16:	4631      	mov	r1, r6
 8017f18:	2242      	movs	r2, #66	; 0x42
 8017f1a:	4648      	mov	r0, r9
 8017f1c:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8017f1e:	960d      	str	r6, [sp, #52]	; 0x34
 8017f20:	f010 fd53 	bl	80289ca <memset>
 8017f24:	b15f      	cbz	r7, 8017f3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8017f26:	f108 3aff 	add.w	sl, r8, #4294967295
 8017f2a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017f2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017f2e:	b152      	cbz	r2, 8017f46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8017f30:	8812      	ldrh	r2, [r2, #0]
 8017f32:	b10a      	cbz	r2, 8017f38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017f34:	459a      	cmp	sl, r3
 8017f36:	dc2e      	bgt.n	8017f96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8017f38:	2200      	movs	r2, #0
 8017f3a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8017f3e:	4638      	mov	r0, r7
 8017f40:	b023      	add	sp, #140	; 0x8c
 8017f42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017f46:	9a08      	ldr	r2, [sp, #32]
 8017f48:	2a00      	cmp	r2, #0
 8017f4a:	d0f5      	beq.n	8017f38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017f4c:	7812      	ldrb	r2, [r2, #0]
 8017f4e:	e7f0      	b.n	8017f32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8017f50:	2d00      	cmp	r5, #0
 8017f52:	d0ea      	beq.n	8017f2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017f54:	782a      	ldrb	r2, [r5, #0]
 8017f56:	b142      	cbz	r2, 8017f6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8017f58:	2a25      	cmp	r2, #37	; 0x25
 8017f5a:	d001      	beq.n	8017f60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8017f5c:	459a      	cmp	sl, r3
 8017f5e:	dc08      	bgt.n	8017f72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8017f60:	f1bb 0f00 	cmp.w	fp, #0
 8017f64:	d121      	bne.n	8017faa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8017f66:	2d00      	cmp	r5, #0
 8017f68:	d0df      	beq.n	8017f2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017f6a:	782a      	ldrb	r2, [r5, #0]
 8017f6c:	f04f 0b00 	mov.w	fp, #0
 8017f70:	e01d      	b.n	8017fae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8017f72:	f1bb 0f00 	cmp.w	fp, #0
 8017f76:	d078      	beq.n	801806a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8017f78:	f8bb 2000 	ldrh.w	r2, [fp]
 8017f7c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8017f80:	f1bb 0f00 	cmp.w	fp, #0
 8017f84:	d002      	beq.n	8017f8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8017f86:	f10b 0202 	add.w	r2, fp, #2
 8017f8a:	9209      	str	r2, [sp, #36]	; 0x24
 8017f8c:	b10d      	cbz	r5, 8017f92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8017f8e:	3501      	adds	r5, #1
 8017f90:	9508      	str	r5, [sp, #32]
 8017f92:	3301      	adds	r3, #1
 8017f94:	930d      	str	r3, [sp, #52]	; 0x34
 8017f96:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8017f9a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017f9c:	f1bb 0f00 	cmp.w	fp, #0
 8017fa0:	d0d6      	beq.n	8017f50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8017fa2:	f8bb 2000 	ldrh.w	r2, [fp]
 8017fa6:	2a00      	cmp	r2, #0
 8017fa8:	d1d6      	bne.n	8017f58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8017faa:	f8bb 2000 	ldrh.w	r2, [fp]
 8017fae:	2a00      	cmp	r2, #0
 8017fb0:	d0bb      	beq.n	8017f2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017fb2:	459a      	cmp	sl, r3
 8017fb4:	ddb9      	ble.n	8017f2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017fb6:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8017fba:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8017fbe:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8017fc2:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8017fc6:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8017fca:	960e      	str	r6, [sp, #56]	; 0x38
 8017fcc:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8017fd0:	960f      	str	r6, [sp, #60]	; 0x3c
 8017fd2:	f1bb 0f00 	cmp.w	fp, #0
 8017fd6:	d002      	beq.n	8017fde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8017fd8:	f10b 0302 	add.w	r3, fp, #2
 8017fdc:	9309      	str	r3, [sp, #36]	; 0x24
 8017fde:	b10d      	cbz	r5, 8017fe4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8017fe0:	1c6b      	adds	r3, r5, #1
 8017fe2:	9308      	str	r3, [sp, #32]
 8017fe4:	ab0f      	add	r3, sp, #60	; 0x3c
 8017fe6:	9305      	str	r3, [sp, #20]
 8017fe8:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8017fec:	9304      	str	r3, [sp, #16]
 8017fee:	ab0e      	add	r3, sp, #56	; 0x38
 8017ff0:	9303      	str	r3, [sp, #12]
 8017ff2:	ab0c      	add	r3, sp, #48	; 0x30
 8017ff4:	9302      	str	r3, [sp, #8]
 8017ff6:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8017ffa:	9301      	str	r3, [sp, #4]
 8017ffc:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8018000:	9300      	str	r3, [sp, #0]
 8018002:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8018006:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801800a:	a908      	add	r1, sp, #32
 801800c:	a809      	add	r0, sp, #36	; 0x24
 801800e:	f7ff fea8 	bl	8017d62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8018012:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018014:	2b00      	cmp	r3, #0
 8018016:	bfbe      	ittt	lt
 8018018:	6823      	ldrlt	r3, [r4, #0]
 801801a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801801e:	930e      	strlt	r3, [sp, #56]	; 0x38
 8018020:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018022:	bfb8      	it	lt
 8018024:	3404      	addlt	r4, #4
 8018026:	2b00      	cmp	r3, #0
 8018028:	bfb8      	it	lt
 801802a:	6823      	ldrlt	r3, [r4, #0]
 801802c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8018030:	bfbe      	ittt	lt
 8018032:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018036:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8018038:	3404      	addlt	r4, #4
 801803a:	b1d9      	cbz	r1, 8018074 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801803c:	880b      	ldrh	r3, [r1, #0]
 801803e:	2b69      	cmp	r3, #105	; 0x69
 8018040:	d01f      	beq.n	8018082 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018042:	d82f      	bhi.n	80180a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8018044:	2b58      	cmp	r3, #88	; 0x58
 8018046:	d01c      	beq.n	8018082 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018048:	d818      	bhi.n	801807c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801804a:	2b25      	cmp	r3, #37	; 0x25
 801804c:	d034      	beq.n	80180b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801804e:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8018052:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018054:	f1bb 0f00 	cmp.w	fp, #0
 8018058:	f000 80b8 	beq.w	80181cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801805c:	f8bb 5000 	ldrh.w	r5, [fp]
 8018060:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8018064:	3301      	adds	r3, #1
 8018066:	930d      	str	r3, [sp, #52]	; 0x34
 8018068:	e029      	b.n	80180be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801806a:	b10d      	cbz	r5, 8018070 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801806c:	782a      	ldrb	r2, [r5, #0]
 801806e:	e785      	b.n	8017f7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018070:	462a      	mov	r2, r5
 8018072:	e783      	b.n	8017f7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018074:	2a00      	cmp	r2, #0
 8018076:	d0ea      	beq.n	801804e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018078:	7813      	ldrb	r3, [r2, #0]
 801807a:	e7e0      	b.n	801803e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801807c:	3b63      	subs	r3, #99	; 0x63
 801807e:	2b01      	cmp	r3, #1
 8018080:	d8e5      	bhi.n	801804e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018082:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8018086:	b329      	cbz	r1, 80180d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8018088:	880b      	ldrh	r3, [r1, #0]
 801808a:	2b69      	cmp	r3, #105	; 0x69
 801808c:	d063      	beq.n	8018156 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801808e:	d825      	bhi.n	80180dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8018090:	2b63      	cmp	r3, #99	; 0x63
 8018092:	d038      	beq.n	8018106 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8018094:	2b64      	cmp	r3, #100	; 0x64
 8018096:	d05e      	beq.n	8018156 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018098:	2b58      	cmp	r3, #88	; 0x58
 801809a:	d07b      	beq.n	8018194 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801809c:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80180a0:	4625      	mov	r5, r4
 80180a2:	e036      	b.n	8018112 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80180a4:	2b73      	cmp	r3, #115	; 0x73
 80180a6:	d0ec      	beq.n	8018082 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80180a8:	d802      	bhi.n	80180b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 80180aa:	2b6f      	cmp	r3, #111	; 0x6f
 80180ac:	d1cf      	bne.n	801804e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80180ae:	e7e8      	b.n	8018082 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80180b0:	2b75      	cmp	r3, #117	; 0x75
 80180b2:	d0e6      	beq.n	8018082 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80180b4:	2b78      	cmp	r3, #120	; 0x78
 80180b6:	e7f9      	b.n	80180ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 80180b8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80180ba:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 80180be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80180c0:	b10b      	cbz	r3, 80180c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 80180c2:	3302      	adds	r3, #2
 80180c4:	9309      	str	r3, [sp, #36]	; 0x24
 80180c6:	9b08      	ldr	r3, [sp, #32]
 80180c8:	2b00      	cmp	r3, #0
 80180ca:	f43f af2e 	beq.w	8017f2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80180ce:	3301      	adds	r3, #1
 80180d0:	9308      	str	r3, [sp, #32]
 80180d2:	e72a      	b.n	8017f2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80180d4:	2a00      	cmp	r2, #0
 80180d6:	d0e1      	beq.n	801809c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80180d8:	7813      	ldrb	r3, [r2, #0]
 80180da:	e7d6      	b.n	801808a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 80180dc:	2b73      	cmp	r3, #115	; 0x73
 80180de:	d036      	beq.n	801814e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 80180e0:	d807      	bhi.n	80180f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 80180e2:	2b6f      	cmp	r3, #111	; 0x6f
 80180e4:	d1da      	bne.n	801809c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80180e6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80180e8:	1d25      	adds	r5, r4, #4
 80180ea:	eba8 0202 	sub.w	r2, r8, r2
 80180ee:	2308      	movs	r3, #8
 80180f0:	e04a      	b.n	8018188 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80180f2:	2b75      	cmp	r3, #117	; 0x75
 80180f4:	d043      	beq.n	801817e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 80180f6:	2b78      	cmp	r3, #120	; 0x78
 80180f8:	d1d0      	bne.n	801809c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80180fa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80180fc:	1d25      	adds	r5, r4, #4
 80180fe:	eba8 0202 	sub.w	r2, r8, r2
 8018102:	2310      	movs	r3, #16
 8018104:	e040      	b.n	8018188 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018106:	6823      	ldr	r3, [r4, #0]
 8018108:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801810c:	1d25      	adds	r5, r4, #4
 801810e:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8018112:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018114:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8018118:	2b00      	cmp	r3, #0
 801811a:	d052      	beq.n	80181c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801811c:	881a      	ldrh	r2, [r3, #0]
 801811e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8018122:	a80d      	add	r0, sp, #52	; 0x34
 8018124:	9005      	str	r0, [sp, #20]
 8018126:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801812a:	9004      	str	r0, [sp, #16]
 801812c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801812e:	9003      	str	r0, [sp, #12]
 8018130:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8018134:	9002      	str	r0, [sp, #8]
 8018136:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018138:	9001      	str	r0, [sp, #4]
 801813a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801813e:	9000      	str	r0, [sp, #0]
 8018140:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8018144:	a810      	add	r0, sp, #64	; 0x40
 8018146:	f7ff fd49 	bl	8017bdc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801814a:	462c      	mov	r4, r5
 801814c:	e7b7      	b.n	80180be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801814e:	6823      	ldr	r3, [r4, #0]
 8018150:	1d25      	adds	r5, r4, #4
 8018152:	9310      	str	r3, [sp, #64]	; 0x40
 8018154:	e7dd      	b.n	8018112 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018156:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018158:	6820      	ldr	r0, [r4, #0]
 801815a:	eba8 0202 	sub.w	r2, r8, r2
 801815e:	230a      	movs	r3, #10
 8018160:	b292      	uxth	r2, r2
 8018162:	4649      	mov	r1, r9
 8018164:	f7ff fcf0 	bl	8017b48 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8018168:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801816c:	2b2d      	cmp	r3, #45	; 0x2d
 801816e:	f104 0504 	add.w	r5, r4, #4
 8018172:	d1ce      	bne.n	8018112 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018174:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018178:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801817a:	3302      	adds	r3, #2
 801817c:	e7e9      	b.n	8018152 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801817e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018180:	1d25      	adds	r5, r4, #4
 8018182:	eba8 0202 	sub.w	r2, r8, r2
 8018186:	230a      	movs	r3, #10
 8018188:	b292      	uxth	r2, r2
 801818a:	4649      	mov	r1, r9
 801818c:	6820      	ldr	r0, [r4, #0]
 801818e:	f7ff fd07 	bl	8017ba0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8018192:	e7be      	b.n	8018112 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018194:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018196:	6820      	ldr	r0, [r4, #0]
 8018198:	eba8 0202 	sub.w	r2, r8, r2
 801819c:	b292      	uxth	r2, r2
 801819e:	2310      	movs	r3, #16
 80181a0:	4649      	mov	r1, r9
 80181a2:	f7ff fcfd 	bl	8017ba0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 80181a6:	1d25      	adds	r5, r4, #4
 80181a8:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 80181ac:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 80181b0:	2b00      	cmp	r3, #0
 80181b2:	d0ae      	beq.n	8018112 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80181b4:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 80181b8:	2919      	cmp	r1, #25
 80181ba:	d8f7      	bhi.n	80181ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80181bc:	3b20      	subs	r3, #32
 80181be:	8013      	strh	r3, [r2, #0]
 80181c0:	e7f4      	b.n	80181ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80181c2:	9a08      	ldr	r2, [sp, #32]
 80181c4:	2a00      	cmp	r2, #0
 80181c6:	d0aa      	beq.n	801811e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80181c8:	7812      	ldrb	r2, [r2, #0]
 80181ca:	e7a8      	b.n	801811e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80181cc:	2d00      	cmp	r5, #0
 80181ce:	f43f af47 	beq.w	8018060 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 80181d2:	782d      	ldrb	r5, [r5, #0]
 80181d4:	e744      	b.n	8018060 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

080181d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 80181d6:	b507      	push	{r0, r1, r2, lr}
 80181d8:	9300      	str	r3, [sp, #0]
 80181da:	4613      	mov	r3, r2
 80181dc:	2200      	movs	r2, #0
 80181de:	f7ff fe90 	bl	8017f02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 80181e2:	b003      	add	sp, #12
 80181e4:	f85d fb04 	ldr.w	pc, [sp], #4

080181e8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 80181e8:	b40c      	push	{r2, r3}
 80181ea:	b507      	push	{r0, r1, r2, lr}
 80181ec:	ab04      	add	r3, sp, #16
 80181ee:	f853 2b04 	ldr.w	r2, [r3], #4
 80181f2:	9301      	str	r3, [sp, #4]
 80181f4:	f7ff ffef 	bl	80181d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 80181f8:	b003      	add	sp, #12
 80181fa:	f85d eb04 	ldr.w	lr, [sp], #4
 80181fe:	b002      	add	sp, #8
 8018200:	4770      	bx	lr
	...

08018204 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8018204:	4b01      	ldr	r3, [pc, #4]	; (801820c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8018206:	6018      	str	r0, [r3, #0]
 8018208:	4770      	bx	lr
 801820a:	bf00      	nop
 801820c:	2001383c 	.word	0x2001383c

08018210 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8018210:	4b06      	ldr	r3, [pc, #24]	; (801822c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8018212:	881a      	ldrh	r2, [r3, #0]
 8018214:	4282      	cmp	r2, r0
 8018216:	d807      	bhi.n	8018228 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8018218:	4b05      	ldr	r3, [pc, #20]	; (8018230 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801821a:	881b      	ldrh	r3, [r3, #0]
 801821c:	4413      	add	r3, r2
 801821e:	4298      	cmp	r0, r3
 8018220:	bfac      	ite	ge
 8018222:	2000      	movge	r0, #0
 8018224:	2001      	movlt	r0, #1
 8018226:	4770      	bx	lr
 8018228:	2000      	movs	r0, #0
 801822a:	4770      	bx	lr
 801822c:	2001385c 	.word	0x2001385c
 8018230:	20013860 	.word	0x20013860

08018234 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8018234:	b508      	push	{r3, lr}
 8018236:	4601      	mov	r1, r0
 8018238:	f7ff ffea 	bl	8018210 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801823c:	b118      	cbz	r0, 8018246 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801823e:	4b02      	ldr	r3, [pc, #8]	; (8018248 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8018240:	681b      	ldr	r3, [r3, #0]
 8018242:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8018246:	bd08      	pop	{r3, pc}
 8018248:	20013840 	.word	0x20013840

0801824c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801824c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801824e:	4c24      	ldr	r4, [pc, #144]	; (80182e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8018250:	6823      	ldr	r3, [r4, #0]
 8018252:	2b00      	cmp	r3, #0
 8018254:	d042      	beq.n	80182dc <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8018256:	4a23      	ldr	r2, [pc, #140]	; (80182e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8018258:	4d23      	ldr	r5, [pc, #140]	; (80182e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801825a:	8811      	ldrh	r1, [r2, #0]
 801825c:	f8b5 c000 	ldrh.w	ip, [r5]
 8018260:	4822      	ldr	r0, [pc, #136]	; (80182ec <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8018262:	4461      	add	r1, ip
 8018264:	1c4a      	adds	r2, r1, #1
 8018266:	f022 0201 	bic.w	r2, r2, #1
 801826a:	008f      	lsls	r7, r1, #2
 801826c:	0412      	lsls	r2, r2, #16
 801826e:	19de      	adds	r6, r3, r7
 8018270:	0c12      	lsrs	r2, r2, #16
 8018272:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8018276:	6006      	str	r6, [r0, #0]
 8018278:	4e1d      	ldr	r6, [pc, #116]	; (80182f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801827a:	19da      	adds	r2, r3, r7
 801827c:	6032      	str	r2, [r6, #0]
 801827e:	220e      	movs	r2, #14
 8018280:	fb02 f20c 	mul.w	r2, r2, ip
 8018284:	3203      	adds	r2, #3
 8018286:	f022 0203 	bic.w	r2, r2, #3
 801828a:	443a      	add	r2, r7
 801828c:	4f19      	ldr	r7, [pc, #100]	; (80182f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801828e:	4413      	add	r3, r2
 8018290:	603b      	str	r3, [r7, #0]
 8018292:	4f19      	ldr	r7, [pc, #100]	; (80182f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8018294:	2300      	movs	r3, #0
 8018296:	803b      	strh	r3, [r7, #0]
 8018298:	4f18      	ldr	r7, [pc, #96]	; (80182fc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801829a:	683f      	ldr	r7, [r7, #0]
 801829c:	1aba      	subs	r2, r7, r2
 801829e:	4f18      	ldr	r7, [pc, #96]	; (8018300 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80182a0:	603a      	str	r2, [r7, #0]
 80182a2:	4a18      	ldr	r2, [pc, #96]	; (8018304 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80182a4:	469c      	mov	ip, r3
 80182a6:	8013      	strh	r3, [r2, #0]
 80182a8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80182ac:	428b      	cmp	r3, r1
 80182ae:	d10d      	bne.n	80182cc <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 80182b0:	882d      	ldrh	r5, [r5, #0]
 80182b2:	6830      	ldr	r0, [r6, #0]
 80182b4:	2300      	movs	r3, #0
 80182b6:	240e      	movs	r4, #14
 80182b8:	429d      	cmp	r5, r3
 80182ba:	d90f      	bls.n	80182dc <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80182bc:	fb04 0203 	mla	r2, r4, r3, r0
 80182c0:	3301      	adds	r3, #1
 80182c2:	7b11      	ldrb	r1, [r2, #12]
 80182c4:	f36f 1145 	bfc	r1, #5, #1
 80182c8:	7311      	strb	r1, [r2, #12]
 80182ca:	e7f5      	b.n	80182b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80182cc:	6822      	ldr	r2, [r4, #0]
 80182ce:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80182d2:	6802      	ldr	r2, [r0, #0]
 80182d4:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80182d8:	3301      	adds	r3, #1
 80182da:	e7e7      	b.n	80182ac <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80182dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80182de:	bf00      	nop
 80182e0:	20013840 	.word	0x20013840
 80182e4:	2001385c 	.word	0x2001385c
 80182e8:	20013860 	.word	0x20013860
 80182ec:	20013854 	.word	0x20013854
 80182f0:	20013844 	.word	0x20013844
 80182f4:	2001384c 	.word	0x2001384c
 80182f8:	2001385e 	.word	0x2001385e
 80182fc:	20013848 	.word	0x20013848
 8018300:	20013858 	.word	0x20013858
 8018304:	20013850 	.word	0x20013850

08018308 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8018308:	4b06      	ldr	r3, [pc, #24]	; (8018324 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801830a:	681b      	ldr	r3, [r3, #0]
 801830c:	b943      	cbnz	r3, 8018320 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801830e:	b139      	cbz	r1, 8018320 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8018310:	4b05      	ldr	r3, [pc, #20]	; (8018328 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8018312:	801a      	strh	r2, [r3, #0]
 8018314:	4b05      	ldr	r3, [pc, #20]	; (801832c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8018316:	6019      	str	r1, [r3, #0]
 8018318:	4b05      	ldr	r3, [pc, #20]	; (8018330 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801831a:	6018      	str	r0, [r3, #0]
 801831c:	f7ff bf96 	b.w	801824c <_ZN8touchgfx6Bitmap10clearCacheEv>
 8018320:	4770      	bx	lr
 8018322:	bf00      	nop
 8018324:	2001384c 	.word	0x2001384c
 8018328:	20013860 	.word	0x20013860
 801832c:	20013848 	.word	0x20013848
 8018330:	20013840 	.word	0x20013840

08018334 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8018334:	b470      	push	{r4, r5, r6}
 8018336:	4c07      	ldr	r4, [pc, #28]	; (8018354 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8018338:	6826      	ldr	r6, [r4, #0]
 801833a:	4605      	mov	r5, r0
 801833c:	4610      	mov	r0, r2
 801833e:	9a03      	ldr	r2, [sp, #12]
 8018340:	b936      	cbnz	r6, 8018350 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8018342:	6025      	str	r5, [r4, #0]
 8018344:	4c04      	ldr	r4, [pc, #16]	; (8018358 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8018346:	8021      	strh	r1, [r4, #0]
 8018348:	bc70      	pop	{r4, r5, r6}
 801834a:	4619      	mov	r1, r3
 801834c:	f7ff bfdc 	b.w	8018308 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8018350:	bc70      	pop	{r4, r5, r6}
 8018352:	4770      	bx	lr
 8018354:	20013864 	.word	0x20013864
 8018358:	2001385c 	.word	0x2001385c

0801835c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801835c:	4a12      	ldr	r2, [pc, #72]	; (80183a8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801835e:	8803      	ldrh	r3, [r0, #0]
 8018360:	8812      	ldrh	r2, [r2, #0]
 8018362:	4293      	cmp	r3, r2
 8018364:	d207      	bcs.n	8018376 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8018366:	4a11      	ldr	r2, [pc, #68]	; (80183ac <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8018368:	6812      	ldr	r2, [r2, #0]
 801836a:	2114      	movs	r1, #20
 801836c:	fb01 2303 	mla	r3, r1, r3, r2
 8018370:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8018374:	4770      	bx	lr
 8018376:	490e      	ldr	r1, [pc, #56]	; (80183b0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8018378:	8809      	ldrh	r1, [r1, #0]
 801837a:	4411      	add	r1, r2
 801837c:	428b      	cmp	r3, r1
 801837e:	da04      	bge.n	801838a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8018380:	1a9b      	subs	r3, r3, r2
 8018382:	4a0c      	ldr	r2, [pc, #48]	; (80183b4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8018384:	210e      	movs	r1, #14
 8018386:	6812      	ldr	r2, [r2, #0]
 8018388:	e7f0      	b.n	801836c <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801838a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801838e:	4293      	cmp	r3, r2
 8018390:	d108      	bne.n	80183a4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8018392:	4b09      	ldr	r3, [pc, #36]	; (80183b8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8018394:	781b      	ldrb	r3, [r3, #0]
 8018396:	b91b      	cbnz	r3, 80183a0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8018398:	4b08      	ldr	r3, [pc, #32]	; (80183bc <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801839a:	f9b3 0000 	ldrsh.w	r0, [r3]
 801839e:	4770      	bx	lr
 80183a0:	4b07      	ldr	r3, [pc, #28]	; (80183c0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80183a2:	e7fa      	b.n	801839a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 80183a4:	2000      	movs	r0, #0
 80183a6:	4770      	bx	lr
 80183a8:	2001385c 	.word	0x2001385c
 80183ac:	20013864 	.word	0x20013864
 80183b0:	20013860 	.word	0x20013860
 80183b4:	20013844 	.word	0x20013844
 80183b8:	200137cc 	.word	0x200137cc
 80183bc:	200137ce 	.word	0x200137ce
 80183c0:	200137d0 	.word	0x200137d0

080183c4 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80183c4:	4a12      	ldr	r2, [pc, #72]	; (8018410 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 80183c6:	8803      	ldrh	r3, [r0, #0]
 80183c8:	8812      	ldrh	r2, [r2, #0]
 80183ca:	4293      	cmp	r3, r2
 80183cc:	d207      	bcs.n	80183de <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80183ce:	4a11      	ldr	r2, [pc, #68]	; (8018414 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80183d0:	6812      	ldr	r2, [r2, #0]
 80183d2:	2114      	movs	r1, #20
 80183d4:	fb01 2303 	mla	r3, r1, r3, r2
 80183d8:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80183dc:	4770      	bx	lr
 80183de:	490e      	ldr	r1, [pc, #56]	; (8018418 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80183e0:	8809      	ldrh	r1, [r1, #0]
 80183e2:	4411      	add	r1, r2
 80183e4:	428b      	cmp	r3, r1
 80183e6:	da04      	bge.n	80183f2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80183e8:	1a9b      	subs	r3, r3, r2
 80183ea:	4a0c      	ldr	r2, [pc, #48]	; (801841c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80183ec:	210e      	movs	r1, #14
 80183ee:	6812      	ldr	r2, [r2, #0]
 80183f0:	e7f0      	b.n	80183d4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80183f2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80183f6:	4293      	cmp	r3, r2
 80183f8:	d108      	bne.n	801840c <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 80183fa:	4b09      	ldr	r3, [pc, #36]	; (8018420 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80183fc:	781b      	ldrb	r3, [r3, #0]
 80183fe:	b91b      	cbnz	r3, 8018408 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8018400:	4b08      	ldr	r3, [pc, #32]	; (8018424 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8018402:	f9b3 0000 	ldrsh.w	r0, [r3]
 8018406:	4770      	bx	lr
 8018408:	4b07      	ldr	r3, [pc, #28]	; (8018428 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801840a:	e7fa      	b.n	8018402 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801840c:	2000      	movs	r0, #0
 801840e:	4770      	bx	lr
 8018410:	2001385c 	.word	0x2001385c
 8018414:	20013864 	.word	0x20013864
 8018418:	20013860 	.word	0x20013860
 801841c:	20013844 	.word	0x20013844
 8018420:	200137cc 	.word	0x200137cc
 8018424:	200137d0 	.word	0x200137d0
 8018428:	200137ce 	.word	0x200137ce

0801842c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801842c:	b510      	push	{r4, lr}
 801842e:	4a1f      	ldr	r2, [pc, #124]	; (80184ac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8018430:	880b      	ldrh	r3, [r1, #0]
 8018432:	8812      	ldrh	r2, [r2, #0]
 8018434:	4293      	cmp	r3, r2
 8018436:	d213      	bcs.n	8018460 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8018438:	4a1d      	ldr	r2, [pc, #116]	; (80184b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801843a:	6812      	ldr	r2, [r2, #0]
 801843c:	2114      	movs	r1, #20
 801843e:	fb01 2303 	mla	r3, r1, r3, r2
 8018442:	8a1a      	ldrh	r2, [r3, #16]
 8018444:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8018448:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801844c:	8a5b      	ldrh	r3, [r3, #18]
 801844e:	8004      	strh	r4, [r0, #0]
 8018450:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8018454:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8018458:	8041      	strh	r1, [r0, #2]
 801845a:	8082      	strh	r2, [r0, #4]
 801845c:	80c3      	strh	r3, [r0, #6]
 801845e:	e00e      	b.n	801847e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8018460:	4914      	ldr	r1, [pc, #80]	; (80184b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8018462:	8809      	ldrh	r1, [r1, #0]
 8018464:	4411      	add	r1, r2
 8018466:	428b      	cmp	r3, r1
 8018468:	da0a      	bge.n	8018480 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801846a:	1a9b      	subs	r3, r3, r2
 801846c:	4a12      	ldr	r2, [pc, #72]	; (80184b8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801846e:	6812      	ldr	r2, [r2, #0]
 8018470:	210e      	movs	r1, #14
 8018472:	fb01 2303 	mla	r3, r1, r3, r2
 8018476:	681a      	ldr	r2, [r3, #0]
 8018478:	6002      	str	r2, [r0, #0]
 801847a:	685a      	ldr	r2, [r3, #4]
 801847c:	6042      	str	r2, [r0, #4]
 801847e:	bd10      	pop	{r4, pc}
 8018480:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018484:	4293      	cmp	r3, r2
 8018486:	d10b      	bne.n	80184a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8018488:	4b0c      	ldr	r3, [pc, #48]	; (80184bc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801848a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801848e:	4b0c      	ldr	r3, [pc, #48]	; (80184c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8018490:	8081      	strh	r1, [r0, #4]
 8018492:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018496:	80c2      	strh	r2, [r0, #6]
 8018498:	2300      	movs	r3, #0
 801849a:	8003      	strh	r3, [r0, #0]
 801849c:	8043      	strh	r3, [r0, #2]
 801849e:	e7ee      	b.n	801847e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80184a0:	2300      	movs	r3, #0
 80184a2:	8003      	strh	r3, [r0, #0]
 80184a4:	8043      	strh	r3, [r0, #2]
 80184a6:	8083      	strh	r3, [r0, #4]
 80184a8:	e7d8      	b.n	801845c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80184aa:	bf00      	nop
 80184ac:	2001385c 	.word	0x2001385c
 80184b0:	20013864 	.word	0x20013864
 80184b4:	20013860 	.word	0x20013860
 80184b8:	20013844 	.word	0x20013844
 80184bc:	200137c8 	.word	0x200137c8
 80184c0:	200137ca 	.word	0x200137ca

080184c4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80184c4:	4a17      	ldr	r2, [pc, #92]	; (8018524 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 80184c6:	8803      	ldrh	r3, [r0, #0]
 80184c8:	8812      	ldrh	r2, [r2, #0]
 80184ca:	4293      	cmp	r3, r2
 80184cc:	d213      	bcs.n	80184f6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80184ce:	4a16      	ldr	r2, [pc, #88]	; (8018528 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80184d0:	6812      	ldr	r2, [r2, #0]
 80184d2:	2114      	movs	r1, #20
 80184d4:	fb01 2303 	mla	r3, r1, r3, r2
 80184d8:	8a1a      	ldrh	r2, [r3, #16]
 80184da:	8919      	ldrh	r1, [r3, #8]
 80184dc:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80184e0:	428a      	cmp	r2, r1
 80184e2:	db1d      	blt.n	8018520 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80184e4:	8a58      	ldrh	r0, [r3, #18]
 80184e6:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80184ea:	895b      	ldrh	r3, [r3, #10]
 80184ec:	4298      	cmp	r0, r3
 80184ee:	bfac      	ite	ge
 80184f0:	2000      	movge	r0, #0
 80184f2:	2001      	movlt	r0, #1
 80184f4:	4770      	bx	lr
 80184f6:	490d      	ldr	r1, [pc, #52]	; (801852c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80184f8:	8809      	ldrh	r1, [r1, #0]
 80184fa:	4411      	add	r1, r2
 80184fc:	428b      	cmp	r3, r1
 80184fe:	da0d      	bge.n	801851c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8018500:	1a9b      	subs	r3, r3, r2
 8018502:	4a0b      	ldr	r2, [pc, #44]	; (8018530 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8018504:	6812      	ldr	r2, [r2, #0]
 8018506:	210e      	movs	r1, #14
 8018508:	fb01 2303 	mla	r3, r1, r3, r2
 801850c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8018510:	891a      	ldrh	r2, [r3, #8]
 8018512:	4291      	cmp	r1, r2
 8018514:	db04      	blt.n	8018520 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8018516:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801851a:	e7e6      	b.n	80184ea <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801851c:	2000      	movs	r0, #0
 801851e:	4770      	bx	lr
 8018520:	2001      	movs	r0, #1
 8018522:	4770      	bx	lr
 8018524:	2001385c 	.word	0x2001385c
 8018528:	20013864 	.word	0x20013864
 801852c:	20013860 	.word	0x20013860
 8018530:	20013844 	.word	0x20013844

08018534 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8018534:	4a12      	ldr	r2, [pc, #72]	; (8018580 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8018536:	8803      	ldrh	r3, [r0, #0]
 8018538:	8811      	ldrh	r1, [r2, #0]
 801853a:	428b      	cmp	r3, r1
 801853c:	d20b      	bcs.n	8018556 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801853e:	4a11      	ldr	r2, [pc, #68]	; (8018584 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8018540:	6812      	ldr	r2, [r2, #0]
 8018542:	b112      	cbz	r2, 801854a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8018544:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8018548:	b9c0      	cbnz	r0, 801857c <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801854a:	4a0f      	ldr	r2, [pc, #60]	; (8018588 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801854c:	6811      	ldr	r1, [r2, #0]
 801854e:	2214      	movs	r2, #20
 8018550:	4353      	muls	r3, r2
 8018552:	58c8      	ldr	r0, [r1, r3]
 8018554:	4770      	bx	lr
 8018556:	4a0d      	ldr	r2, [pc, #52]	; (801858c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8018558:	8812      	ldrh	r2, [r2, #0]
 801855a:	440a      	add	r2, r1
 801855c:	4293      	cmp	r3, r2
 801855e:	da04      	bge.n	801856a <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8018560:	4a08      	ldr	r2, [pc, #32]	; (8018584 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8018562:	6812      	ldr	r2, [r2, #0]
 8018564:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8018568:	4770      	bx	lr
 801856a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801856e:	4293      	cmp	r3, r2
 8018570:	d103      	bne.n	801857a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8018572:	4b07      	ldr	r3, [pc, #28]	; (8018590 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8018574:	681b      	ldr	r3, [r3, #0]
 8018576:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8018578:	4770      	bx	lr
 801857a:	2000      	movs	r0, #0
 801857c:	4770      	bx	lr
 801857e:	bf00      	nop
 8018580:	2001385c 	.word	0x2001385c
 8018584:	20013840 	.word	0x20013840
 8018588:	20013864 	.word	0x20013864
 801858c:	20013860 	.word	0x20013860
 8018590:	200137d4 	.word	0x200137d4

08018594 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8018594:	4b24      	ldr	r3, [pc, #144]	; (8018628 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8018596:	8802      	ldrh	r2, [r0, #0]
 8018598:	8818      	ldrh	r0, [r3, #0]
 801859a:	4282      	cmp	r2, r0
 801859c:	d221      	bcs.n	80185e2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801859e:	4b23      	ldr	r3, [pc, #140]	; (801862c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80185a0:	6819      	ldr	r1, [r3, #0]
 80185a2:	2314      	movs	r3, #20
 80185a4:	fb03 1302 	mla	r3, r3, r2, r1
 80185a8:	6858      	ldr	r0, [r3, #4]
 80185aa:	2800      	cmp	r0, #0
 80185ac:	d03a      	beq.n	8018624 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80185ae:	4920      	ldr	r1, [pc, #128]	; (8018630 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80185b0:	6809      	ldr	r1, [r1, #0]
 80185b2:	2900      	cmp	r1, #0
 80185b4:	d036      	beq.n	8018624 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80185b6:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80185ba:	2900      	cmp	r1, #0
 80185bc:	d032      	beq.n	8018624 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80185be:	891a      	ldrh	r2, [r3, #8]
 80185c0:	8958      	ldrh	r0, [r3, #10]
 80185c2:	4350      	muls	r0, r2
 80185c4:	7c5a      	ldrb	r2, [r3, #17]
 80185c6:	7cdb      	ldrb	r3, [r3, #19]
 80185c8:	0952      	lsrs	r2, r2, #5
 80185ca:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80185ce:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80185d2:	2b0b      	cmp	r3, #11
 80185d4:	bf18      	it	ne
 80185d6:	0040      	lslne	r0, r0, #1
 80185d8:	3003      	adds	r0, #3
 80185da:	f020 0003 	bic.w	r0, r0, #3
 80185de:	4408      	add	r0, r1
 80185e0:	4770      	bx	lr
 80185e2:	4b14      	ldr	r3, [pc, #80]	; (8018634 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80185e4:	881b      	ldrh	r3, [r3, #0]
 80185e6:	4403      	add	r3, r0
 80185e8:	429a      	cmp	r2, r3
 80185ea:	da1a      	bge.n	8018622 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80185ec:	4b12      	ldr	r3, [pc, #72]	; (8018638 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80185ee:	681b      	ldr	r3, [r3, #0]
 80185f0:	1a10      	subs	r0, r2, r0
 80185f2:	210e      	movs	r1, #14
 80185f4:	fb01 3000 	mla	r0, r1, r0, r3
 80185f8:	7b03      	ldrb	r3, [r0, #12]
 80185fa:	f003 031f 	and.w	r3, r3, #31
 80185fe:	2b0b      	cmp	r3, #11
 8018600:	d10b      	bne.n	801861a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8018602:	8903      	ldrh	r3, [r0, #8]
 8018604:	8940      	ldrh	r0, [r0, #10]
 8018606:	4358      	muls	r0, r3
 8018608:	4b09      	ldr	r3, [pc, #36]	; (8018630 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801860a:	6819      	ldr	r1, [r3, #0]
 801860c:	3003      	adds	r0, #3
 801860e:	f020 0303 	bic.w	r3, r0, #3
 8018612:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8018616:	4418      	add	r0, r3
 8018618:	4770      	bx	lr
 801861a:	2b0d      	cmp	r3, #13
 801861c:	d101      	bne.n	8018622 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801861e:	300d      	adds	r0, #13
 8018620:	4770      	bx	lr
 8018622:	2000      	movs	r0, #0
 8018624:	4770      	bx	lr
 8018626:	bf00      	nop
 8018628:	2001385c 	.word	0x2001385c
 801862c:	20013864 	.word	0x20013864
 8018630:	20013840 	.word	0x20013840
 8018634:	20013860 	.word	0x20013860
 8018638:	20013844 	.word	0x20013844

0801863c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801863c:	b510      	push	{r4, lr}
 801863e:	4a17      	ldr	r2, [pc, #92]	; (801869c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8018640:	8803      	ldrh	r3, [r0, #0]
 8018642:	8812      	ldrh	r2, [r2, #0]
 8018644:	4293      	cmp	r3, r2
 8018646:	d20c      	bcs.n	8018662 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8018648:	4a15      	ldr	r2, [pc, #84]	; (80186a0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801864a:	6812      	ldr	r2, [r2, #0]
 801864c:	2114      	movs	r1, #20
 801864e:	fb01 2303 	mla	r3, r1, r3, r2
 8018652:	7c58      	ldrb	r0, [r3, #17]
 8018654:	0942      	lsrs	r2, r0, #5
 8018656:	7cd8      	ldrb	r0, [r3, #19]
 8018658:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801865c:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8018660:	bd10      	pop	{r4, pc}
 8018662:	4910      	ldr	r1, [pc, #64]	; (80186a4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8018664:	8809      	ldrh	r1, [r1, #0]
 8018666:	4411      	add	r1, r2
 8018668:	428b      	cmp	r3, r1
 801866a:	da09      	bge.n	8018680 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801866c:	1a9b      	subs	r3, r3, r2
 801866e:	4a0e      	ldr	r2, [pc, #56]	; (80186a8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8018670:	6812      	ldr	r2, [r2, #0]
 8018672:	210e      	movs	r1, #14
 8018674:	fb01 2303 	mla	r3, r1, r3, r2
 8018678:	7b18      	ldrb	r0, [r3, #12]
 801867a:	f000 001f 	and.w	r0, r0, #31
 801867e:	e7ef      	b.n	8018660 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8018680:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018684:	4293      	cmp	r3, r2
 8018686:	d106      	bne.n	8018696 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8018688:	f7eb f814 	bl	80036b4 <_ZN8touchgfx3HAL3lcdEv>
 801868c:	6803      	ldr	r3, [r0, #0]
 801868e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018692:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018694:	4718      	bx	r3
 8018696:	2000      	movs	r0, #0
 8018698:	e7e2      	b.n	8018660 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801869a:	bf00      	nop
 801869c:	2001385c 	.word	0x2001385c
 80186a0:	20013864 	.word	0x20013864
 80186a4:	20013860 	.word	0x20013860
 80186a8:	20013844 	.word	0x20013844

080186ac <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 80186ac:	2010      	movs	r0, #16
 80186ae:	4770      	bx	lr

080186b0 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 80186b0:	2000      	movs	r0, #0
 80186b2:	4770      	bx	lr

080186b4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80186b4:	4b02      	ldr	r3, [pc, #8]	; (80186c0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 80186b6:	8818      	ldrh	r0, [r3, #0]
 80186b8:	0040      	lsls	r0, r0, #1
 80186ba:	b280      	uxth	r0, r0
 80186bc:	4770      	bx	lr
 80186be:	bf00      	nop
 80186c0:	200137ce 	.word	0x200137ce

080186c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80186c4:	2bff      	cmp	r3, #255	; 0xff
 80186c6:	d050      	beq.n	801876a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 80186c8:	2a0b      	cmp	r2, #11
 80186ca:	d04a      	beq.n	8018762 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80186cc:	d80e      	bhi.n	80186ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 80186ce:	2a03      	cmp	r2, #3
 80186d0:	d03f      	beq.n	8018752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 80186d2:	d804      	bhi.n	80186de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80186d4:	2a01      	cmp	r2, #1
 80186d6:	d03e      	beq.n	8018756 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 80186d8:	d93f      	bls.n	801875a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 80186da:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80186dc:	4770      	bx	lr
 80186de:	2a09      	cmp	r2, #9
 80186e0:	d03f      	beq.n	8018762 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80186e2:	d83c      	bhi.n	801875e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80186e4:	2a08      	cmp	r2, #8
 80186e6:	d03a      	beq.n	801875e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80186e8:	2000      	movs	r0, #0
 80186ea:	4770      	bx	lr
 80186ec:	2a2f      	cmp	r2, #47	; 0x2f
 80186ee:	d024      	beq.n	801873a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 80186f0:	d80d      	bhi.n	801870e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 80186f2:	2a2d      	cmp	r2, #45	; 0x2d
 80186f4:	d014      	beq.n	8018720 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 80186f6:	d826      	bhi.n	8018746 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 80186f8:	2a2c      	cmp	r2, #44	; 0x2c
 80186fa:	d1f5      	bne.n	80186e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80186fc:	684b      	ldr	r3, [r1, #4]
 80186fe:	781b      	ldrb	r3, [r3, #0]
 8018700:	2b01      	cmp	r3, #1
 8018702:	d018      	beq.n	8018736 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8018704:	d323      	bcc.n	801874e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8018706:	2b02      	cmp	r3, #2
 8018708:	d1ee      	bne.n	80186e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801870a:	6880      	ldr	r0, [r0, #8]
 801870c:	4770      	bx	lr
 801870e:	2a31      	cmp	r2, #49	; 0x31
 8018710:	d004      	beq.n	801871c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8018712:	d328      	bcc.n	8018766 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018714:	2a32      	cmp	r2, #50	; 0x32
 8018716:	d026      	beq.n	8018766 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018718:	2a33      	cmp	r2, #51	; 0x33
 801871a:	d1e5      	bne.n	80186e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801871c:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801871e:	4770      	bx	lr
 8018720:	684b      	ldr	r3, [r1, #4]
 8018722:	781b      	ldrb	r3, [r3, #0]
 8018724:	2b01      	cmp	r3, #1
 8018726:	d004      	beq.n	8018732 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8018728:	d30b      	bcc.n	8018742 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801872a:	2b02      	cmp	r3, #2
 801872c:	d1dc      	bne.n	80186e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801872e:	6900      	ldr	r0, [r0, #16]
 8018730:	4770      	bx	lr
 8018732:	6a00      	ldr	r0, [r0, #32]
 8018734:	4770      	bx	lr
 8018736:	6980      	ldr	r0, [r0, #24]
 8018738:	4770      	bx	lr
 801873a:	684b      	ldr	r3, [r1, #4]
 801873c:	781b      	ldrb	r3, [r3, #0]
 801873e:	2b00      	cmp	r3, #0
 8018740:	d1d2      	bne.n	80186e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018742:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8018744:	4770      	bx	lr
 8018746:	684b      	ldr	r3, [r1, #4]
 8018748:	781b      	ldrb	r3, [r3, #0]
 801874a:	2b00      	cmp	r3, #0
 801874c:	d1cc      	bne.n	80186e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801874e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8018750:	4770      	bx	lr
 8018752:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8018754:	4770      	bx	lr
 8018756:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8018758:	4770      	bx	lr
 801875a:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801875c:	4770      	bx	lr
 801875e:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8018760:	4770      	bx	lr
 8018762:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8018764:	4770      	bx	lr
 8018766:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8018768:	4770      	bx	lr
 801876a:	2a0b      	cmp	r2, #11
 801876c:	d049      	beq.n	8018802 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801876e:	d80e      	bhi.n	801878e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8018770:	2a03      	cmp	r2, #3
 8018772:	d040      	beq.n	80187f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8018774:	d804      	bhi.n	8018780 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8018776:	2a01      	cmp	r2, #1
 8018778:	d03f      	beq.n	80187fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801877a:	d940      	bls.n	80187fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801877c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801877e:	4770      	bx	lr
 8018780:	2a09      	cmp	r2, #9
 8018782:	d03e      	beq.n	8018802 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8018784:	d801      	bhi.n	801878a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8018786:	2a08      	cmp	r2, #8
 8018788:	d1ae      	bne.n	80186e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801878a:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801878c:	4770      	bx	lr
 801878e:	2a2f      	cmp	r2, #47	; 0x2f
 8018790:	d024      	beq.n	80187dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8018792:	d80d      	bhi.n	80187b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8018794:	2a2d      	cmp	r2, #45	; 0x2d
 8018796:	d014      	beq.n	80187c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8018798:	d826      	bhi.n	80187e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801879a:	2a2c      	cmp	r2, #44	; 0x2c
 801879c:	d1a4      	bne.n	80186e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801879e:	684b      	ldr	r3, [r1, #4]
 80187a0:	781b      	ldrb	r3, [r3, #0]
 80187a2:	2b01      	cmp	r3, #1
 80187a4:	d018      	beq.n	80187d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 80187a6:	d324      	bcc.n	80187f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 80187a8:	2b02      	cmp	r3, #2
 80187aa:	d19d      	bne.n	80186e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80187ac:	68c0      	ldr	r0, [r0, #12]
 80187ae:	4770      	bx	lr
 80187b0:	2a31      	cmp	r2, #49	; 0x31
 80187b2:	d004      	beq.n	80187be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 80187b4:	d327      	bcc.n	8018806 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80187b6:	2a32      	cmp	r2, #50	; 0x32
 80187b8:	d025      	beq.n	8018806 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80187ba:	2a33      	cmp	r2, #51	; 0x33
 80187bc:	d194      	bne.n	80186e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80187be:	6f40      	ldr	r0, [r0, #116]	; 0x74
 80187c0:	4770      	bx	lr
 80187c2:	684b      	ldr	r3, [r1, #4]
 80187c4:	781b      	ldrb	r3, [r3, #0]
 80187c6:	2b01      	cmp	r3, #1
 80187c8:	d004      	beq.n	80187d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 80187ca:	d30b      	bcc.n	80187e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 80187cc:	2b02      	cmp	r3, #2
 80187ce:	d18b      	bne.n	80186e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80187d0:	6940      	ldr	r0, [r0, #20]
 80187d2:	4770      	bx	lr
 80187d4:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80187d6:	4770      	bx	lr
 80187d8:	69c0      	ldr	r0, [r0, #28]
 80187da:	4770      	bx	lr
 80187dc:	684b      	ldr	r3, [r1, #4]
 80187de:	781b      	ldrb	r3, [r3, #0]
 80187e0:	2b00      	cmp	r3, #0
 80187e2:	d181      	bne.n	80186e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80187e4:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80187e6:	4770      	bx	lr
 80187e8:	684b      	ldr	r3, [r1, #4]
 80187ea:	781b      	ldrb	r3, [r3, #0]
 80187ec:	2b00      	cmp	r3, #0
 80187ee:	f47f af7b 	bne.w	80186e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80187f2:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 80187f4:	4770      	bx	lr
 80187f6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80187f8:	4770      	bx	lr
 80187fa:	6d40      	ldr	r0, [r0, #84]	; 0x54
 80187fc:	4770      	bx	lr
 80187fe:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8018800:	4770      	bx	lr
 8018802:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8018804:	4770      	bx	lr
 8018806:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8018808:	4770      	bx	lr

0801880a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801880a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801880e:	b087      	sub	sp, #28
 8018810:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018812:	9205      	str	r2, [sp, #20]
 8018814:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018818:	9202      	str	r2, [sp, #8]
 801881a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801881e:	9101      	str	r1, [sp, #4]
 8018820:	6841      	ldr	r1, [r0, #4]
 8018822:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8018826:	fb01 2404 	mla	r4, r1, r4, r2
 801882a:	6802      	ldr	r2, [r0, #0]
 801882c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018830:	f8de 2000 	ldr.w	r2, [lr]
 8018834:	9203      	str	r2, [sp, #12]
 8018836:	f8de 2004 	ldr.w	r2, [lr, #4]
 801883a:	3204      	adds	r2, #4
 801883c:	9204      	str	r2, [sp, #16]
 801883e:	9a02      	ldr	r2, [sp, #8]
 8018840:	43d6      	mvns	r6, r2
 8018842:	b2f6      	uxtb	r6, r6
 8018844:	9a01      	ldr	r2, [sp, #4]
 8018846:	2a00      	cmp	r2, #0
 8018848:	dc03      	bgt.n	8018852 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801884a:	9a05      	ldr	r2, [sp, #20]
 801884c:	2a00      	cmp	r2, #0
 801884e:	f340 8129 	ble.w	8018aa4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018852:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018854:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8018858:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801885c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018860:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018862:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018866:	2b00      	cmp	r3, #0
 8018868:	dd0e      	ble.n	8018888 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801886a:	1408      	asrs	r0, r1, #16
 801886c:	d405      	bmi.n	801887a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801886e:	4560      	cmp	r0, ip
 8018870:	da03      	bge.n	801887a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018872:	1410      	asrs	r0, r2, #16
 8018874:	d401      	bmi.n	801887a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018876:	42b8      	cmp	r0, r7
 8018878:	db07      	blt.n	801888a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801887a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801887c:	4401      	add	r1, r0
 801887e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018880:	3b01      	subs	r3, #1
 8018882:	4402      	add	r2, r0
 8018884:	3402      	adds	r4, #2
 8018886:	e7ee      	b.n	8018866 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8018888:	d071      	beq.n	801896e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801888a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801888c:	1e58      	subs	r0, r3, #1
 801888e:	fb05 1500 	mla	r5, r5, r0, r1
 8018892:	142d      	asrs	r5, r5, #16
 8018894:	d45f      	bmi.n	8018956 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018896:	4565      	cmp	r5, ip
 8018898:	da5d      	bge.n	8018956 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801889a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801889c:	fb05 2000 	mla	r0, r5, r0, r2
 80188a0:	1400      	asrs	r0, r0, #16
 80188a2:	d458      	bmi.n	8018956 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80188a4:	42b8      	cmp	r0, r7
 80188a6:	da56      	bge.n	8018956 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80188a8:	f8bd b008 	ldrh.w	fp, [sp, #8]
 80188ac:	4699      	mov	r9, r3
 80188ae:	46a2      	mov	sl, r4
 80188b0:	f1b9 0f00 	cmp.w	r9, #0
 80188b4:	dd57      	ble.n	8018966 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80188b6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80188ba:	9803      	ldr	r0, [sp, #12]
 80188bc:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80188c0:	140d      	asrs	r5, r1, #16
 80188c2:	fb07 000c 	mla	r0, r7, ip, r0
 80188c6:	f109 39ff 	add.w	r9, r9, #4294967295
 80188ca:	5d40      	ldrb	r0, [r0, r5]
 80188cc:	9d04      	ldr	r5, [sp, #16]
 80188ce:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80188d2:	f8ba 5000 	ldrh.w	r5, [sl]
 80188d6:	122f      	asrs	r7, r5, #8
 80188d8:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80188dc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80188e0:	fb17 f706 	smulbb	r7, r7, r6
 80188e4:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80188e8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80188ec:	00ed      	lsls	r5, r5, #3
 80188ee:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80188f2:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80188f6:	10c7      	asrs	r7, r0, #3
 80188f8:	b2ed      	uxtb	r5, r5
 80188fa:	00c0      	lsls	r0, r0, #3
 80188fc:	fb18 f806 	smulbb	r8, r8, r6
 8018900:	fb15 f506 	smulbb	r5, r5, r6
 8018904:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018908:	b2c0      	uxtb	r0, r0
 801890a:	fa1f fc8c 	uxth.w	ip, ip
 801890e:	fb07 870b 	mla	r7, r7, fp, r8
 8018912:	fb00 500b 	mla	r0, r0, fp, r5
 8018916:	b280      	uxth	r0, r0
 8018918:	b2bf      	uxth	r7, r7
 801891a:	f10c 0501 	add.w	r5, ip, #1
 801891e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018922:	f107 0801 	add.w	r8, r7, #1
 8018926:	1c45      	adds	r5, r0, #1
 8018928:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801892c:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8018930:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018932:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018936:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801893a:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801893e:	ea45 0c0c 	orr.w	ip, r5, ip
 8018942:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018946:	4401      	add	r1, r0
 8018948:	9814      	ldr	r0, [sp, #80]	; 0x50
 801894a:	ea4c 0c08 	orr.w	ip, ip, r8
 801894e:	f82a cb02 	strh.w	ip, [sl], #2
 8018952:	4402      	add	r2, r0
 8018954:	e7ac      	b.n	80188b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018956:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801895a:	f04f 0800 	mov.w	r8, #0
 801895e:	eb03 0008 	add.w	r0, r3, r8
 8018962:	2800      	cmp	r0, #0
 8018964:	dc41      	bgt.n	80189ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8018966:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801896a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801896e:	9b01      	ldr	r3, [sp, #4]
 8018970:	2b00      	cmp	r3, #0
 8018972:	f340 8097 	ble.w	8018aa4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018976:	ee30 0a04 	vadd.f32	s0, s0, s8
 801897a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801897e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018982:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018984:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018988:	ee31 1a05 	vadd.f32	s2, s2, s10
 801898c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018990:	eef0 6a62 	vmov.f32	s13, s5
 8018994:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018998:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801899c:	ee77 2a62 	vsub.f32	s5, s14, s5
 80189a0:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80189a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80189a8:	eef0 6a43 	vmov.f32	s13, s6
 80189ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80189b0:	ee12 2a90 	vmov	r2, s5
 80189b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80189b8:	fb92 f3f3 	sdiv	r3, r2, r3
 80189bc:	ee13 2a10 	vmov	r2, s6
 80189c0:	9313      	str	r3, [sp, #76]	; 0x4c
 80189c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80189c4:	fb92 f3f3 	sdiv	r3, r2, r3
 80189c8:	9314      	str	r3, [sp, #80]	; 0x50
 80189ca:	9b01      	ldr	r3, [sp, #4]
 80189cc:	9a05      	ldr	r2, [sp, #20]
 80189ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80189d2:	3b01      	subs	r3, #1
 80189d4:	9301      	str	r3, [sp, #4]
 80189d6:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80189da:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80189dc:	eeb0 3a67 	vmov.f32	s6, s15
 80189e0:	bf08      	it	eq
 80189e2:	4613      	moveq	r3, r2
 80189e4:	eef0 2a47 	vmov.f32	s5, s14
 80189e8:	e72c      	b.n	8018844 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80189ea:	140f      	asrs	r7, r1, #16
 80189ec:	d453      	bmi.n	8018a96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80189ee:	f8de 5008 	ldr.w	r5, [lr, #8]
 80189f2:	42bd      	cmp	r5, r7
 80189f4:	dd4f      	ble.n	8018a96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80189f6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80189fa:	d44c      	bmi.n	8018a96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80189fc:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018a00:	4560      	cmp	r0, ip
 8018a02:	dd48      	ble.n	8018a96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018a04:	9803      	ldr	r0, [sp, #12]
 8018a06:	b22d      	sxth	r5, r5
 8018a08:	fb0c 0505 	mla	r5, ip, r5, r0
 8018a0c:	5de8      	ldrb	r0, [r5, r7]
 8018a0e:	9d04      	ldr	r5, [sp, #16]
 8018a10:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018a14:	f06f 0501 	mvn.w	r5, #1
 8018a18:	fb05 fb08 	mul.w	fp, r5, r8
 8018a1c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018a20:	f834 500b 	ldrh.w	r5, [r4, fp]
 8018a24:	122f      	asrs	r7, r5, #8
 8018a26:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018a2a:	fb17 f706 	smulbb	r7, r7, r6
 8018a2e:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018a32:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018a36:	00ed      	lsls	r5, r5, #3
 8018a38:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8018a3c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8018a40:	10c7      	asrs	r7, r0, #3
 8018a42:	b2ed      	uxtb	r5, r5
 8018a44:	00c0      	lsls	r0, r0, #3
 8018a46:	fb19 f906 	smulbb	r9, r9, r6
 8018a4a:	fb15 f506 	smulbb	r5, r5, r6
 8018a4e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018a52:	b2c0      	uxtb	r0, r0
 8018a54:	fa1f fc8c 	uxth.w	ip, ip
 8018a58:	fb07 970a 	mla	r7, r7, sl, r9
 8018a5c:	fb00 500a 	mla	r0, r0, sl, r5
 8018a60:	b2bf      	uxth	r7, r7
 8018a62:	b280      	uxth	r0, r0
 8018a64:	f10c 0501 	add.w	r5, ip, #1
 8018a68:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018a6c:	f107 0901 	add.w	r9, r7, #1
 8018a70:	1c45      	adds	r5, r0, #1
 8018a72:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018a76:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8018a7a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018a7e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018a82:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018a86:	ea45 0c0c 	orr.w	ip, r5, ip
 8018a8a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018a8e:	ea4c 0c09 	orr.w	ip, ip, r9
 8018a92:	f824 c00b 	strh.w	ip, [r4, fp]
 8018a96:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018a98:	4401      	add	r1, r0
 8018a9a:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018a9c:	f108 38ff 	add.w	r8, r8, #4294967295
 8018aa0:	4402      	add	r2, r0
 8018aa2:	e75c      	b.n	801895e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8018aa4:	b007      	add	sp, #28
 8018aa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018aaa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018aaa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018aae:	b085      	sub	sp, #20
 8018ab0:	4693      	mov	fp, r2
 8018ab2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018ab4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018ab6:	6870      	ldr	r0, [r6, #4]
 8018ab8:	9100      	str	r1, [sp, #0]
 8018aba:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018abe:	fb00 2404 	mla	r4, r0, r4, r2
 8018ac2:	6832      	ldr	r2, [r6, #0]
 8018ac4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018ac8:	682a      	ldr	r2, [r5, #0]
 8018aca:	9201      	str	r2, [sp, #4]
 8018acc:	686a      	ldr	r2, [r5, #4]
 8018ace:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8018ad2:	3204      	adds	r2, #4
 8018ad4:	9202      	str	r2, [sp, #8]
 8018ad6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018ada:	9a00      	ldr	r2, [sp, #0]
 8018adc:	2a00      	cmp	r2, #0
 8018ade:	dc03      	bgt.n	8018ae8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018ae0:	f1bb 0f00 	cmp.w	fp, #0
 8018ae4:	f340 80a0 	ble.w	8018c28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018ae8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018aea:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018aee:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018af2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018af6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018af8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018afc:	2b00      	cmp	r3, #0
 8018afe:	dd0c      	ble.n	8018b1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018b00:	1406      	asrs	r6, r0, #16
 8018b02:	d405      	bmi.n	8018b10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018b04:	454e      	cmp	r6, r9
 8018b06:	da03      	bge.n	8018b10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018b08:	1416      	asrs	r6, r2, #16
 8018b0a:	d401      	bmi.n	8018b10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018b0c:	4546      	cmp	r6, r8
 8018b0e:	db05      	blt.n	8018b1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018b10:	4470      	add	r0, lr
 8018b12:	4462      	add	r2, ip
 8018b14:	3b01      	subs	r3, #1
 8018b16:	3402      	adds	r4, #2
 8018b18:	e7f0      	b.n	8018afc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018b1a:	d00f      	beq.n	8018b3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018b1c:	1e5e      	subs	r6, r3, #1
 8018b1e:	fb0e 0706 	mla	r7, lr, r6, r0
 8018b22:	143f      	asrs	r7, r7, #16
 8018b24:	d541      	bpl.n	8018baa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8018b26:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8018b2a:	4698      	mov	r8, r3
 8018b2c:	9603      	str	r6, [sp, #12]
 8018b2e:	f1b8 0f00 	cmp.w	r8, #0
 8018b32:	dc59      	bgt.n	8018be8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018b34:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018b38:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018b3c:	9b00      	ldr	r3, [sp, #0]
 8018b3e:	2b00      	cmp	r3, #0
 8018b40:	dd72      	ble.n	8018c28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018b42:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018b46:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018b4a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018b4e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018b50:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018b54:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018b58:	eeb0 6a62 	vmov.f32	s12, s5
 8018b5c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018b60:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018b64:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018b68:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018b6c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018b70:	eeb0 6a43 	vmov.f32	s12, s6
 8018b74:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018b78:	ee12 2a90 	vmov	r2, s5
 8018b7c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018b80:	fb92 fef3 	sdiv	lr, r2, r3
 8018b84:	ee13 2a10 	vmov	r2, s6
 8018b88:	fb92 fcf3 	sdiv	ip, r2, r3
 8018b8c:	9b00      	ldr	r3, [sp, #0]
 8018b8e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018b92:	3b01      	subs	r3, #1
 8018b94:	9300      	str	r3, [sp, #0]
 8018b96:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018b9a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018b9c:	eeb0 3a67 	vmov.f32	s6, s15
 8018ba0:	bf08      	it	eq
 8018ba2:	465b      	moveq	r3, fp
 8018ba4:	eef0 2a47 	vmov.f32	s5, s14
 8018ba8:	e797      	b.n	8018ada <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018baa:	454f      	cmp	r7, r9
 8018bac:	dabb      	bge.n	8018b26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018bae:	fb0c 2606 	mla	r6, ip, r6, r2
 8018bb2:	1436      	asrs	r6, r6, #16
 8018bb4:	d4b7      	bmi.n	8018b26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018bb6:	4546      	cmp	r6, r8
 8018bb8:	dab5      	bge.n	8018b26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018bba:	461e      	mov	r6, r3
 8018bbc:	46a0      	mov	r8, r4
 8018bbe:	2e00      	cmp	r6, #0
 8018bc0:	ddb8      	ble.n	8018b34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018bc2:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8018bc6:	9901      	ldr	r1, [sp, #4]
 8018bc8:	1417      	asrs	r7, r2, #16
 8018bca:	ea4f 4920 	mov.w	r9, r0, asr #16
 8018bce:	fb0a 1707 	mla	r7, sl, r7, r1
 8018bd2:	9902      	ldr	r1, [sp, #8]
 8018bd4:	f817 7009 	ldrb.w	r7, [r7, r9]
 8018bd8:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8018bdc:	f828 7b02 	strh.w	r7, [r8], #2
 8018be0:	4470      	add	r0, lr
 8018be2:	4462      	add	r2, ip
 8018be4:	3e01      	subs	r6, #1
 8018be6:	e7ea      	b.n	8018bbe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8018be8:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018bec:	d417      	bmi.n	8018c1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018bee:	68ae      	ldr	r6, [r5, #8]
 8018bf0:	454e      	cmp	r6, r9
 8018bf2:	dd14      	ble.n	8018c1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018bf4:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8018bf8:	d411      	bmi.n	8018c1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018bfa:	68ef      	ldr	r7, [r5, #12]
 8018bfc:	4557      	cmp	r7, sl
 8018bfe:	dd0e      	ble.n	8018c1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018c00:	9f01      	ldr	r7, [sp, #4]
 8018c02:	b236      	sxth	r6, r6
 8018c04:	fb0a 7606 	mla	r6, sl, r6, r7
 8018c08:	9f02      	ldr	r7, [sp, #8]
 8018c0a:	f816 6009 	ldrb.w	r6, [r6, r9]
 8018c0e:	f06f 0101 	mvn.w	r1, #1
 8018c12:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8018c16:	fb01 f608 	mul.w	r6, r1, r8
 8018c1a:	9903      	ldr	r1, [sp, #12]
 8018c1c:	538f      	strh	r7, [r1, r6]
 8018c1e:	4470      	add	r0, lr
 8018c20:	4462      	add	r2, ip
 8018c22:	f108 38ff 	add.w	r8, r8, #4294967295
 8018c26:	e782      	b.n	8018b2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018c28:	b005      	add	sp, #20
 8018c2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018c2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018c2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c32:	b087      	sub	sp, #28
 8018c34:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018c36:	9205      	str	r2, [sp, #20]
 8018c38:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018c3c:	9203      	str	r2, [sp, #12]
 8018c3e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8018c42:	9102      	str	r1, [sp, #8]
 8018c44:	6861      	ldr	r1, [r4, #4]
 8018c46:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8018c4a:	fb01 2000 	mla	r0, r1, r0, r2
 8018c4e:	6822      	ldr	r2, [r4, #0]
 8018c50:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8018c54:	9200      	str	r2, [sp, #0]
 8018c56:	f8dc 2000 	ldr.w	r2, [ip]
 8018c5a:	9204      	str	r2, [sp, #16]
 8018c5c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8018c60:	3204      	adds	r2, #4
 8018c62:	9201      	str	r2, [sp, #4]
 8018c64:	9a03      	ldr	r2, [sp, #12]
 8018c66:	43d5      	mvns	r5, r2
 8018c68:	b2ed      	uxtb	r5, r5
 8018c6a:	9a02      	ldr	r2, [sp, #8]
 8018c6c:	2a00      	cmp	r2, #0
 8018c6e:	dc03      	bgt.n	8018c78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8018c70:	9a05      	ldr	r2, [sp, #20]
 8018c72:	2a00      	cmp	r2, #0
 8018c74:	f340 812c 	ble.w	8018ed0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8018c78:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018c7a:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8018c7e:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8018c82:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018c86:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018c88:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018c8c:	2b00      	cmp	r3, #0
 8018c8e:	dd10      	ble.n	8018cb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018c90:	140c      	asrs	r4, r1, #16
 8018c92:	d405      	bmi.n	8018ca0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018c94:	4574      	cmp	r4, lr
 8018c96:	da03      	bge.n	8018ca0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018c98:	1414      	asrs	r4, r2, #16
 8018c9a:	d401      	bmi.n	8018ca0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018c9c:	42bc      	cmp	r4, r7
 8018c9e:	db09      	blt.n	8018cb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8018ca0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018ca2:	9800      	ldr	r0, [sp, #0]
 8018ca4:	4421      	add	r1, r4
 8018ca6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018ca8:	3002      	adds	r0, #2
 8018caa:	4422      	add	r2, r4
 8018cac:	3b01      	subs	r3, #1
 8018cae:	9000      	str	r0, [sp, #0]
 8018cb0:	e7ec      	b.n	8018c8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8018cb2:	d071      	beq.n	8018d98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8018cb4:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018cb6:	1e5c      	subs	r4, r3, #1
 8018cb8:	fb06 1604 	mla	r6, r6, r4, r1
 8018cbc:	1436      	asrs	r6, r6, #16
 8018cbe:	d45d      	bmi.n	8018d7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018cc0:	4576      	cmp	r6, lr
 8018cc2:	da5b      	bge.n	8018d7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018cc4:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8018cc6:	fb06 2404 	mla	r4, r6, r4, r2
 8018cca:	1424      	asrs	r4, r4, #16
 8018ccc:	d456      	bmi.n	8018d7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018cce:	42bc      	cmp	r4, r7
 8018cd0:	da54      	bge.n	8018d7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018cd2:	f8dd 9000 	ldr.w	r9, [sp]
 8018cd6:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8018cda:	4698      	mov	r8, r3
 8018cdc:	f1b8 0f00 	cmp.w	r8, #0
 8018ce0:	dd54      	ble.n	8018d8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8018ce2:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8018ce6:	9804      	ldr	r0, [sp, #16]
 8018ce8:	1414      	asrs	r4, r2, #16
 8018cea:	fb07 0404 	mla	r4, r7, r4, r0
 8018cee:	140e      	asrs	r6, r1, #16
 8018cf0:	9801      	ldr	r0, [sp, #4]
 8018cf2:	f814 e006 	ldrb.w	lr, [r4, r6]
 8018cf6:	f8b9 4000 	ldrh.w	r4, [r9]
 8018cfa:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018cfe:	eb00 0b0e 	add.w	fp, r0, lr
 8018d02:	1227      	asrs	r7, r4, #8
 8018d04:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8018d08:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018d0c:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8018d10:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018d12:	fb16 f60a 	smulbb	r6, r6, sl
 8018d16:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018d1a:	fb07 6705 	mla	r7, r7, r5, r6
 8018d1e:	10e6      	asrs	r6, r4, #3
 8018d20:	00e4      	lsls	r4, r4, #3
 8018d22:	b2e4      	uxtb	r4, r4
 8018d24:	fb1b fb0a 	smulbb	fp, fp, sl
 8018d28:	fb14 f405 	smulbb	r4, r4, r5
 8018d2c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018d30:	b2bf      	uxth	r7, r7
 8018d32:	fb06 b605 	mla	r6, r6, r5, fp
 8018d36:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8018d3a:	b2b6      	uxth	r6, r6
 8018d3c:	fa1f fe8e 	uxth.w	lr, lr
 8018d40:	1c7c      	adds	r4, r7, #1
 8018d42:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8018d46:	f106 0b01 	add.w	fp, r6, #1
 8018d4a:	f10e 0401 	add.w	r4, lr, #1
 8018d4e:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8018d52:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8018d56:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018d5a:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8018d5e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018d62:	4327      	orrs	r7, r4
 8018d64:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018d68:	4401      	add	r1, r0
 8018d6a:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018d6c:	ea47 070b 	orr.w	r7, r7, fp
 8018d70:	f829 7b02 	strh.w	r7, [r9], #2
 8018d74:	4402      	add	r2, r0
 8018d76:	f108 38ff 	add.w	r8, r8, #4294967295
 8018d7a:	e7af      	b.n	8018cdc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8018d7c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8018d80:	f04f 0e00 	mov.w	lr, #0
 8018d84:	eb03 040e 	add.w	r4, r3, lr
 8018d88:	2c00      	cmp	r4, #0
 8018d8a:	dc43      	bgt.n	8018e14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8018d8c:	9a00      	ldr	r2, [sp, #0]
 8018d8e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018d92:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018d96:	9300      	str	r3, [sp, #0]
 8018d98:	9b02      	ldr	r3, [sp, #8]
 8018d9a:	2b00      	cmp	r3, #0
 8018d9c:	f340 8098 	ble.w	8018ed0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8018da0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018da4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018da8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018dac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018dae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018db2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018db6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018dba:	eef0 6a62 	vmov.f32	s13, s5
 8018dbe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018dc2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018dc6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018dca:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8018dce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018dd2:	eef0 6a43 	vmov.f32	s13, s6
 8018dd6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018dda:	ee12 2a90 	vmov	r2, s5
 8018dde:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018de2:	fb92 f3f3 	sdiv	r3, r2, r3
 8018de6:	ee13 2a10 	vmov	r2, s6
 8018dea:	9313      	str	r3, [sp, #76]	; 0x4c
 8018dec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018dee:	fb92 f3f3 	sdiv	r3, r2, r3
 8018df2:	9314      	str	r3, [sp, #80]	; 0x50
 8018df4:	9b02      	ldr	r3, [sp, #8]
 8018df6:	9a05      	ldr	r2, [sp, #20]
 8018df8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018dfc:	3b01      	subs	r3, #1
 8018dfe:	9302      	str	r3, [sp, #8]
 8018e00:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8018e04:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018e06:	eeb0 3a67 	vmov.f32	s6, s15
 8018e0a:	bf08      	it	eq
 8018e0c:	4613      	moveq	r3, r2
 8018e0e:	eef0 2a47 	vmov.f32	s5, s14
 8018e12:	e72a      	b.n	8018c6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018e14:	140f      	asrs	r7, r1, #16
 8018e16:	d454      	bmi.n	8018ec2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018e18:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8018e1c:	42be      	cmp	r6, r7
 8018e1e:	dd50      	ble.n	8018ec2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018e20:	ea5f 4822 	movs.w	r8, r2, asr #16
 8018e24:	d44d      	bmi.n	8018ec2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018e26:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8018e2a:	4544      	cmp	r4, r8
 8018e2c:	dd49      	ble.n	8018ec2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018e2e:	9c04      	ldr	r4, [sp, #16]
 8018e30:	b236      	sxth	r6, r6
 8018e32:	fb08 4606 	mla	r6, r8, r6, r4
 8018e36:	f06f 0001 	mvn.w	r0, #1
 8018e3a:	f816 8007 	ldrb.w	r8, [r6, r7]
 8018e3e:	9c01      	ldr	r4, [sp, #4]
 8018e40:	fb00 fa0e 	mul.w	sl, r0, lr
 8018e44:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8018e48:	9800      	ldr	r0, [sp, #0]
 8018e4a:	eb04 0b08 	add.w	fp, r4, r8
 8018e4e:	f830 400a 	ldrh.w	r4, [r0, sl]
 8018e52:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8018e56:	9801      	ldr	r0, [sp, #4]
 8018e58:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018e5c:	f810 8008 	ldrb.w	r8, [r0, r8]
 8018e60:	9800      	ldr	r0, [sp, #0]
 8018e62:	1227      	asrs	r7, r4, #8
 8018e64:	fb16 f609 	smulbb	r6, r6, r9
 8018e68:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018e6c:	fb07 6705 	mla	r7, r7, r5, r6
 8018e70:	10e6      	asrs	r6, r4, #3
 8018e72:	00e4      	lsls	r4, r4, #3
 8018e74:	b2e4      	uxtb	r4, r4
 8018e76:	fb1b fb09 	smulbb	fp, fp, r9
 8018e7a:	fb14 f405 	smulbb	r4, r4, r5
 8018e7e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018e82:	b2bf      	uxth	r7, r7
 8018e84:	fb06 b605 	mla	r6, r6, r5, fp
 8018e88:	fb08 4809 	mla	r8, r8, r9, r4
 8018e8c:	b2b6      	uxth	r6, r6
 8018e8e:	fa1f f888 	uxth.w	r8, r8
 8018e92:	1c7c      	adds	r4, r7, #1
 8018e94:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8018e98:	f106 0b01 	add.w	fp, r6, #1
 8018e9c:	f108 0401 	add.w	r4, r8, #1
 8018ea0:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8018ea4:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8018ea8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018eac:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8018eb0:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018eb4:	4327      	orrs	r7, r4
 8018eb6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018eba:	ea47 070b 	orr.w	r7, r7, fp
 8018ebe:	f820 700a 	strh.w	r7, [r0, sl]
 8018ec2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018ec4:	4401      	add	r1, r0
 8018ec6:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018ec8:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018ecc:	4402      	add	r2, r0
 8018ece:	e759      	b.n	8018d84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8018ed0:	b007      	add	sp, #28
 8018ed2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08018ed8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018ed8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018edc:	b085      	sub	sp, #20
 8018ede:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018ee2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018ee4:	9203      	str	r2, [sp, #12]
 8018ee6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018eea:	6870      	ldr	r0, [r6, #4]
 8018eec:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018eee:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8018ef2:	686f      	ldr	r7, [r5, #4]
 8018ef4:	9101      	str	r1, [sp, #4]
 8018ef6:	fb00 2404 	mla	r4, r0, r4, r2
 8018efa:	6832      	ldr	r2, [r6, #0]
 8018efc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018f00:	682a      	ldr	r2, [r5, #0]
 8018f02:	9202      	str	r2, [sp, #8]
 8018f04:	3704      	adds	r7, #4
 8018f06:	9a01      	ldr	r2, [sp, #4]
 8018f08:	2a00      	cmp	r2, #0
 8018f0a:	dc03      	bgt.n	8018f14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018f0c:	9a03      	ldr	r2, [sp, #12]
 8018f0e:	2a00      	cmp	r2, #0
 8018f10:	f340 80cc 	ble.w	80190ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8018f14:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018f16:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018f1a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018f1e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018f22:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018f24:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018f28:	2b00      	cmp	r3, #0
 8018f2a:	dd0d      	ble.n	8018f48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018f2c:	1406      	asrs	r6, r0, #16
 8018f2e:	d405      	bmi.n	8018f3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018f30:	454e      	cmp	r6, r9
 8018f32:	da03      	bge.n	8018f3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018f34:	1416      	asrs	r6, r2, #16
 8018f36:	d401      	bmi.n	8018f3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018f38:	4546      	cmp	r6, r8
 8018f3a:	db06      	blt.n	8018f4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018f3c:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8018f3e:	4460      	add	r0, ip
 8018f40:	4432      	add	r2, r6
 8018f42:	3b01      	subs	r3, #1
 8018f44:	3402      	adds	r4, #2
 8018f46:	e7ef      	b.n	8018f28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8018f48:	d00f      	beq.n	8018f6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018f4a:	1e5e      	subs	r6, r3, #1
 8018f4c:	fb0c 0e06 	mla	lr, ip, r6, r0
 8018f50:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8018f54:	d543      	bpl.n	8018fde <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8018f56:	4698      	mov	r8, r3
 8018f58:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8018f5c:	f1b8 0f00 	cmp.w	r8, #0
 8018f60:	dc71      	bgt.n	8019046 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8018f62:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018f66:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018f6a:	9b01      	ldr	r3, [sp, #4]
 8018f6c:	2b00      	cmp	r3, #0
 8018f6e:	f340 809d 	ble.w	80190ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8018f72:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018f76:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018f7a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018f7e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018f80:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018f84:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018f88:	eeb0 6a62 	vmov.f32	s12, s5
 8018f8c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018f90:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018f94:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018f98:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018f9c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018fa0:	eeb0 6a43 	vmov.f32	s12, s6
 8018fa4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018fa8:	ee12 2a90 	vmov	r2, s5
 8018fac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018fb0:	fb92 fcf3 	sdiv	ip, r2, r3
 8018fb4:	ee13 2a10 	vmov	r2, s6
 8018fb8:	fb92 f3f3 	sdiv	r3, r2, r3
 8018fbc:	9312      	str	r3, [sp, #72]	; 0x48
 8018fbe:	9b01      	ldr	r3, [sp, #4]
 8018fc0:	9a03      	ldr	r2, [sp, #12]
 8018fc2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018fc6:	3b01      	subs	r3, #1
 8018fc8:	9301      	str	r3, [sp, #4]
 8018fca:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018fce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018fd0:	eeb0 3a67 	vmov.f32	s6, s15
 8018fd4:	bf08      	it	eq
 8018fd6:	4613      	moveq	r3, r2
 8018fd8:	eef0 2a47 	vmov.f32	s5, s14
 8018fdc:	e793      	b.n	8018f06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8018fde:	45ce      	cmp	lr, r9
 8018fe0:	dab9      	bge.n	8018f56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018fe2:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018fe4:	fb01 2606 	mla	r6, r1, r6, r2
 8018fe8:	1436      	asrs	r6, r6, #16
 8018fea:	d4b4      	bmi.n	8018f56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018fec:	4546      	cmp	r6, r8
 8018fee:	dab2      	bge.n	8018f56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018ff0:	4698      	mov	r8, r3
 8018ff2:	46a2      	mov	sl, r4
 8018ff4:	f1b8 0f00 	cmp.w	r8, #0
 8018ff8:	ddb3      	ble.n	8018f62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018ffa:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018ffe:	9902      	ldr	r1, [sp, #8]
 8019000:	1416      	asrs	r6, r2, #16
 8019002:	fb09 1606 	mla	r6, r9, r6, r1
 8019006:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801900a:	492a      	ldr	r1, [pc, #168]	; (80190b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801900c:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8019010:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019014:	eb07 0b0e 	add.w	fp, r7, lr
 8019018:	4460      	add	r0, ip
 801901a:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801901e:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8019022:	00f6      	lsls	r6, r6, #3
 8019024:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8019028:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801902c:	ea49 0606 	orr.w	r6, r9, r6
 8019030:	f817 900e 	ldrb.w	r9, [r7, lr]
 8019034:	9912      	ldr	r1, [sp, #72]	; 0x48
 8019036:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801903a:	f82a 6b02 	strh.w	r6, [sl], #2
 801903e:	440a      	add	r2, r1
 8019040:	f108 38ff 	add.w	r8, r8, #4294967295
 8019044:	e7d6      	b.n	8018ff4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019046:	ea5f 4920 	movs.w	r9, r0, asr #16
 801904a:	d429      	bmi.n	80190a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801904c:	68ae      	ldr	r6, [r5, #8]
 801904e:	454e      	cmp	r6, r9
 8019050:	dd26      	ble.n	80190a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019052:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8019056:	d423      	bmi.n	80190a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019058:	68e9      	ldr	r1, [r5, #12]
 801905a:	4559      	cmp	r1, fp
 801905c:	dd20      	ble.n	80190a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801905e:	9902      	ldr	r1, [sp, #8]
 8019060:	fa0f fe86 	sxth.w	lr, r6
 8019064:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8019068:	f06f 0101 	mvn.w	r1, #1
 801906c:	f81e e009 	ldrb.w	lr, [lr, r9]
 8019070:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019074:	eb07 060e 	add.w	r6, r7, lr
 8019078:	fb01 f908 	mul.w	r9, r1, r8
 801907c:	f896 b002 	ldrb.w	fp, [r6, #2]
 8019080:	7876      	ldrb	r6, [r6, #1]
 8019082:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8019086:	00f6      	lsls	r6, r6, #3
 8019088:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801908c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019090:	ea4b 0606 	orr.w	r6, fp, r6
 8019094:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8019098:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801909c:	f82a 6009 	strh.w	r6, [sl, r9]
 80190a0:	9912      	ldr	r1, [sp, #72]	; 0x48
 80190a2:	4460      	add	r0, ip
 80190a4:	440a      	add	r2, r1
 80190a6:	f108 38ff 	add.w	r8, r8, #4294967295
 80190aa:	e757      	b.n	8018f5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80190ac:	b005      	add	sp, #20
 80190ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80190b2:	bf00      	nop
 80190b4:	fffff800 	.word	0xfffff800

080190b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80190b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80190bc:	b087      	sub	sp, #28
 80190be:	468b      	mov	fp, r1
 80190c0:	9815      	ldr	r0, [sp, #84]	; 0x54
 80190c2:	9204      	str	r2, [sp, #16]
 80190c4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80190c8:	9205      	str	r2, [sp, #20]
 80190ca:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80190ce:	6841      	ldr	r1, [r0, #4]
 80190d0:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80190d4:	fb01 2404 	mla	r4, r1, r4, r2
 80190d8:	6802      	ldr	r2, [r0, #0]
 80190da:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80190de:	f8dc 2000 	ldr.w	r2, [ip]
 80190e2:	9201      	str	r2, [sp, #4]
 80190e4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80190e8:	3204      	adds	r2, #4
 80190ea:	9202      	str	r2, [sp, #8]
 80190ec:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80190f0:	f1bb 0f00 	cmp.w	fp, #0
 80190f4:	dc03      	bgt.n	80190fe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80190f6:	9a04      	ldr	r2, [sp, #16]
 80190f8:	2a00      	cmp	r2, #0
 80190fa:	f340 8138 	ble.w	801936e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80190fe:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019100:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8019104:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8019108:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801910c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801910e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019112:	2b00      	cmp	r3, #0
 8019114:	dd0e      	ble.n	8019134 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019116:	1402      	asrs	r2, r0, #16
 8019118:	d405      	bmi.n	8019126 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801911a:	42ba      	cmp	r2, r7
 801911c:	da03      	bge.n	8019126 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801911e:	140a      	asrs	r2, r1, #16
 8019120:	d401      	bmi.n	8019126 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019122:	42b2      	cmp	r2, r6
 8019124:	db07      	blt.n	8019136 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019126:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019128:	4410      	add	r0, r2
 801912a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801912c:	3b01      	subs	r3, #1
 801912e:	4411      	add	r1, r2
 8019130:	3402      	adds	r4, #2
 8019132:	e7ee      	b.n	8019112 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8019134:	d019      	beq.n	801916a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019136:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019138:	1e5a      	subs	r2, r3, #1
 801913a:	fb05 0502 	mla	r5, r5, r2, r0
 801913e:	142d      	asrs	r5, r5, #16
 8019140:	d409      	bmi.n	8019156 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019142:	42bd      	cmp	r5, r7
 8019144:	da07      	bge.n	8019156 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019146:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019148:	fb05 1202 	mla	r2, r5, r2, r1
 801914c:	1412      	asrs	r2, r2, #16
 801914e:	d402      	bmi.n	8019156 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019150:	42b2      	cmp	r2, r6
 8019152:	f2c0 80ac 	blt.w	80192ae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8019156:	f04f 0e00 	mov.w	lr, #0
 801915a:	eb03 020e 	add.w	r2, r3, lr
 801915e:	2a00      	cmp	r2, #0
 8019160:	dc3e      	bgt.n	80191e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8019162:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019166:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801916a:	f1bb 0f00 	cmp.w	fp, #0
 801916e:	f340 80fe 	ble.w	801936e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019172:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019176:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801917a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801917e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019180:	f1bb 0b01 	subs.w	fp, fp, #1
 8019184:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019188:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801918c:	eeb0 6a62 	vmov.f32	s12, s5
 8019190:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019194:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019198:	ee77 2a62 	vsub.f32	s5, s14, s5
 801919c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80191a0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80191a4:	eeb0 6a43 	vmov.f32	s12, s6
 80191a8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80191ac:	ee12 2a90 	vmov	r2, s5
 80191b0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80191b4:	fb92 f3f3 	sdiv	r3, r2, r3
 80191b8:	ee13 2a10 	vmov	r2, s6
 80191bc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80191c0:	9313      	str	r3, [sp, #76]	; 0x4c
 80191c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80191c4:	fb92 f3f3 	sdiv	r3, r2, r3
 80191c8:	9a04      	ldr	r2, [sp, #16]
 80191ca:	9314      	str	r3, [sp, #80]	; 0x50
 80191cc:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80191d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80191d2:	eeb0 3a67 	vmov.f32	s6, s15
 80191d6:	bf08      	it	eq
 80191d8:	4613      	moveq	r3, r2
 80191da:	eef0 2a47 	vmov.f32	s5, s14
 80191de:	e787      	b.n	80190f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80191e0:	1406      	asrs	r6, r0, #16
 80191e2:	d45d      	bmi.n	80192a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80191e4:	f8dc 5008 	ldr.w	r5, [ip, #8]
 80191e8:	42b5      	cmp	r5, r6
 80191ea:	dd59      	ble.n	80192a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80191ec:	140f      	asrs	r7, r1, #16
 80191ee:	d457      	bmi.n	80192a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80191f0:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80191f4:	42ba      	cmp	r2, r7
 80191f6:	dd53      	ble.n	80192a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80191f8:	9a01      	ldr	r2, [sp, #4]
 80191fa:	b22d      	sxth	r5, r5
 80191fc:	fb07 2505 	mla	r5, r7, r5, r2
 8019200:	5daa      	ldrb	r2, [r5, r6]
 8019202:	9d02      	ldr	r5, [sp, #8]
 8019204:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8019208:	0e2e      	lsrs	r6, r5, #24
 801920a:	d049      	beq.n	80192a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801920c:	f06f 0201 	mvn.w	r2, #1
 8019210:	fb02 f20e 	mul.w	r2, r2, lr
 8019214:	9203      	str	r2, [sp, #12]
 8019216:	f834 8002 	ldrh.w	r8, [r4, r2]
 801921a:	9a05      	ldr	r2, [sp, #20]
 801921c:	4356      	muls	r6, r2
 801921e:	1c72      	adds	r2, r6, #1
 8019220:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8019224:	1212      	asrs	r2, r2, #8
 8019226:	fa1f f982 	uxth.w	r9, r2
 801922a:	ea4f 2728 	mov.w	r7, r8, asr #8
 801922e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019232:	43d2      	mvns	r2, r2
 8019234:	b2d2      	uxtb	r2, r2
 8019236:	fb16 f609 	smulbb	r6, r6, r9
 801923a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801923e:	fb07 6702 	mla	r7, r7, r2, r6
 8019242:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019246:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801924a:	b2ed      	uxtb	r5, r5
 801924c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019250:	fa5f f888 	uxtb.w	r8, r8
 8019254:	fb15 f509 	smulbb	r5, r5, r9
 8019258:	fb08 5502 	mla	r5, r8, r2, r5
 801925c:	b2bf      	uxth	r7, r7
 801925e:	fb1a fa09 	smulbb	sl, sl, r9
 8019262:	b2ad      	uxth	r5, r5
 8019264:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019268:	fb06 a602 	mla	r6, r6, r2, sl
 801926c:	1c7a      	adds	r2, r7, #1
 801926e:	f105 0a01 	add.w	sl, r5, #1
 8019272:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019276:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801927a:	b2b6      	uxth	r6, r6
 801927c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019280:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019284:	ea4a 0707 	orr.w	r7, sl, r7
 8019288:	f106 0a01 	add.w	sl, r6, #1
 801928c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019290:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019294:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019298:	9a03      	ldr	r2, [sp, #12]
 801929a:	ea47 070a 	orr.w	r7, r7, sl
 801929e:	52a7      	strh	r7, [r4, r2]
 80192a0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80192a2:	4410      	add	r0, r2
 80192a4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80192a6:	f10e 3eff 	add.w	lr, lr, #4294967295
 80192aa:	4411      	add	r1, r2
 80192ac:	e755      	b.n	801915a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80192ae:	f04f 0800 	mov.w	r8, #0
 80192b2:	eba3 0208 	sub.w	r2, r3, r8
 80192b6:	2a00      	cmp	r2, #0
 80192b8:	f77f af53 	ble.w	8019162 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80192bc:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80192c0:	9f01      	ldr	r7, [sp, #4]
 80192c2:	140a      	asrs	r2, r1, #16
 80192c4:	1405      	asrs	r5, r0, #16
 80192c6:	fb06 7202 	mla	r2, r6, r2, r7
 80192ca:	5d52      	ldrb	r2, [r2, r5]
 80192cc:	9d02      	ldr	r5, [sp, #8]
 80192ce:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80192d2:	0e2e      	lsrs	r6, r5, #24
 80192d4:	d044      	beq.n	8019360 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80192d6:	9a05      	ldr	r2, [sp, #20]
 80192d8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80192dc:	4356      	muls	r6, r2
 80192de:	1c72      	adds	r2, r6, #1
 80192e0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80192e4:	1212      	asrs	r2, r2, #8
 80192e6:	fa1f f982 	uxth.w	r9, r2
 80192ea:	ea4f 272e 	mov.w	r7, lr, asr #8
 80192ee:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80192f2:	43d2      	mvns	r2, r2
 80192f4:	b2d2      	uxtb	r2, r2
 80192f6:	fb16 f609 	smulbb	r6, r6, r9
 80192fa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80192fe:	fb07 6702 	mla	r7, r7, r2, r6
 8019302:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019306:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801930a:	b2ed      	uxtb	r5, r5
 801930c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019310:	fa5f fe8e 	uxtb.w	lr, lr
 8019314:	fb15 f509 	smulbb	r5, r5, r9
 8019318:	fb0e 5502 	mla	r5, lr, r2, r5
 801931c:	b2bf      	uxth	r7, r7
 801931e:	fb1a fa09 	smulbb	sl, sl, r9
 8019322:	b2ad      	uxth	r5, r5
 8019324:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019328:	fb06 a602 	mla	r6, r6, r2, sl
 801932c:	1c7a      	adds	r2, r7, #1
 801932e:	f105 0a01 	add.w	sl, r5, #1
 8019332:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019336:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801933a:	b2b6      	uxth	r6, r6
 801933c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019340:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019344:	ea4a 0707 	orr.w	r7, sl, r7
 8019348:	f106 0a01 	add.w	sl, r6, #1
 801934c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019350:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019354:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019358:	ea47 070a 	orr.w	r7, r7, sl
 801935c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8019360:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019362:	4410      	add	r0, r2
 8019364:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019366:	f108 0801 	add.w	r8, r8, #1
 801936a:	4411      	add	r1, r2
 801936c:	e7a1      	b.n	80192b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801936e:	b007      	add	sp, #28
 8019370:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019374 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019374:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019378:	b085      	sub	sp, #20
 801937a:	468b      	mov	fp, r1
 801937c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801937e:	9203      	str	r2, [sp, #12]
 8019380:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019384:	6841      	ldr	r1, [r0, #4]
 8019386:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801938a:	fb01 2404 	mla	r4, r1, r4, r2
 801938e:	6802      	ldr	r2, [r0, #0]
 8019390:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019394:	f8de 2000 	ldr.w	r2, [lr]
 8019398:	9200      	str	r2, [sp, #0]
 801939a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801939e:	3204      	adds	r2, #4
 80193a0:	9201      	str	r2, [sp, #4]
 80193a2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80193a6:	f1bb 0f00 	cmp.w	fp, #0
 80193aa:	dc03      	bgt.n	80193b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80193ac:	9a03      	ldr	r2, [sp, #12]
 80193ae:	2a00      	cmp	r2, #0
 80193b0:	f340 8153 	ble.w	801965a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80193b4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80193b6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80193ba:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80193be:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80193c2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80193c4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80193c8:	2b00      	cmp	r3, #0
 80193ca:	dd0e      	ble.n	80193ea <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80193cc:	1408      	asrs	r0, r1, #16
 80193ce:	d405      	bmi.n	80193dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80193d0:	42b8      	cmp	r0, r7
 80193d2:	da03      	bge.n	80193dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80193d4:	1410      	asrs	r0, r2, #16
 80193d6:	d401      	bmi.n	80193dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80193d8:	42b0      	cmp	r0, r6
 80193da:	db07      	blt.n	80193ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80193dc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80193de:	4401      	add	r1, r0
 80193e0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80193e2:	3b01      	subs	r3, #1
 80193e4:	4402      	add	r2, r0
 80193e6:	3402      	adds	r4, #2
 80193e8:	e7ee      	b.n	80193c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80193ea:	d017      	beq.n	801941c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80193ec:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80193ee:	1e58      	subs	r0, r3, #1
 80193f0:	fb05 1500 	mla	r5, r5, r0, r1
 80193f4:	142d      	asrs	r5, r5, #16
 80193f6:	d409      	bmi.n	801940c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80193f8:	42bd      	cmp	r5, r7
 80193fa:	da07      	bge.n	801940c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80193fc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80193fe:	fb05 2000 	mla	r0, r5, r0, r2
 8019402:	1400      	asrs	r0, r0, #16
 8019404:	d402      	bmi.n	801940c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019406:	42b0      	cmp	r0, r6
 8019408:	f2c0 80bc 	blt.w	8019584 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801940c:	2600      	movs	r6, #0
 801940e:	1998      	adds	r0, r3, r6
 8019410:	2800      	cmp	r0, #0
 8019412:	dc3e      	bgt.n	8019492 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8019414:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019418:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801941c:	f1bb 0f00 	cmp.w	fp, #0
 8019420:	f340 811b 	ble.w	801965a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8019424:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019428:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801942c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019430:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019432:	f1bb 0b01 	subs.w	fp, fp, #1
 8019436:	ee31 1a05 	vadd.f32	s2, s2, s10
 801943a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801943e:	eeb0 6a62 	vmov.f32	s12, s5
 8019442:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019446:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801944a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801944e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019452:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019456:	eeb0 6a43 	vmov.f32	s12, s6
 801945a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801945e:	ee12 2a90 	vmov	r2, s5
 8019462:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019466:	fb92 f3f3 	sdiv	r3, r2, r3
 801946a:	ee13 2a10 	vmov	r2, s6
 801946e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019472:	9311      	str	r3, [sp, #68]	; 0x44
 8019474:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019476:	fb92 f3f3 	sdiv	r3, r2, r3
 801947a:	9a03      	ldr	r2, [sp, #12]
 801947c:	9312      	str	r3, [sp, #72]	; 0x48
 801947e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019482:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019484:	eeb0 3a67 	vmov.f32	s6, s15
 8019488:	bf08      	it	eq
 801948a:	4613      	moveq	r3, r2
 801948c:	eef0 2a47 	vmov.f32	s5, s14
 8019490:	e789      	b.n	80193a6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019492:	140f      	asrs	r7, r1, #16
 8019494:	d426      	bmi.n	80194e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019496:	f8de 5008 	ldr.w	r5, [lr, #8]
 801949a:	42bd      	cmp	r5, r7
 801949c:	dd22      	ble.n	80194e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801949e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80194a2:	d41f      	bmi.n	80194e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80194a4:	f8de 000c 	ldr.w	r0, [lr, #12]
 80194a8:	4560      	cmp	r0, ip
 80194aa:	dd1b      	ble.n	80194e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80194ac:	9800      	ldr	r0, [sp, #0]
 80194ae:	b22d      	sxth	r5, r5
 80194b0:	fb0c 0505 	mla	r5, ip, r5, r0
 80194b4:	5de8      	ldrb	r0, [r5, r7]
 80194b6:	9d01      	ldr	r5, [sp, #4]
 80194b8:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80194bc:	0e07      	lsrs	r7, r0, #24
 80194be:	2fff      	cmp	r7, #255	; 0xff
 80194c0:	d116      	bne.n	80194f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80194c2:	f06f 0501 	mvn.w	r5, #1
 80194c6:	fb05 f706 	mul.w	r7, r5, r6
 80194ca:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80194ce:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80194d2:	0945      	lsrs	r5, r0, #5
 80194d4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80194d8:	ea4c 0505 	orr.w	r5, ip, r5
 80194dc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80194e0:	4305      	orrs	r5, r0
 80194e2:	53e5      	strh	r5, [r4, r7]
 80194e4:	9811      	ldr	r0, [sp, #68]	; 0x44
 80194e6:	4401      	add	r1, r0
 80194e8:	9812      	ldr	r0, [sp, #72]	; 0x48
 80194ea:	3e01      	subs	r6, #1
 80194ec:	4402      	add	r2, r0
 80194ee:	e78e      	b.n	801940e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80194f0:	b2fd      	uxtb	r5, r7
 80194f2:	2f00      	cmp	r7, #0
 80194f4:	d0f6      	beq.n	80194e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80194f6:	f06f 0701 	mvn.w	r7, #1
 80194fa:	4377      	muls	r7, r6
 80194fc:	fa1f f985 	uxth.w	r9, r5
 8019500:	f834 8007 	ldrh.w	r8, [r4, r7]
 8019504:	9702      	str	r7, [sp, #8]
 8019506:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801950a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801950e:	43ed      	mvns	r5, r5
 8019510:	b2ed      	uxtb	r5, r5
 8019512:	fb17 f709 	smulbb	r7, r7, r9
 8019516:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801951a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801951e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8019522:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8019526:	b2c0      	uxtb	r0, r0
 8019528:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801952c:	fa5f f888 	uxtb.w	r8, r8
 8019530:	fb10 f009 	smulbb	r0, r0, r9
 8019534:	fb08 0005 	mla	r0, r8, r5, r0
 8019538:	b280      	uxth	r0, r0
 801953a:	fa1f fc8c 	uxth.w	ip, ip
 801953e:	fb1a fa09 	smulbb	sl, sl, r9
 8019542:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019546:	fb07 a705 	mla	r7, r7, r5, sl
 801954a:	f100 0a01 	add.w	sl, r0, #1
 801954e:	f10c 0501 	add.w	r5, ip, #1
 8019552:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8019556:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801955a:	b2bf      	uxth	r7, r7
 801955c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019560:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019564:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019568:	f107 0a01 	add.w	sl, r7, #1
 801956c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019570:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019574:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019578:	9802      	ldr	r0, [sp, #8]
 801957a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801957e:	f824 c000 	strh.w	ip, [r4, r0]
 8019582:	e7af      	b.n	80194e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019584:	f04f 0800 	mov.w	r8, #0
 8019588:	eba3 0008 	sub.w	r0, r3, r8
 801958c:	2800      	cmp	r0, #0
 801958e:	f77f af41 	ble.w	8019414 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019592:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8019596:	9f00      	ldr	r7, [sp, #0]
 8019598:	1410      	asrs	r0, r2, #16
 801959a:	140d      	asrs	r5, r1, #16
 801959c:	fb06 7000 	mla	r0, r6, r0, r7
 80195a0:	5d40      	ldrb	r0, [r0, r5]
 80195a2:	9d01      	ldr	r5, [sp, #4]
 80195a4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80195a8:	0e2e      	lsrs	r6, r5, #24
 80195aa:	2eff      	cmp	r6, #255	; 0xff
 80195ac:	d112      	bne.n	80195d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 80195ae:	482c      	ldr	r0, [pc, #176]	; (8019660 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 80195b0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80195b4:	0968      	lsrs	r0, r5, #5
 80195b6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80195ba:	4330      	orrs	r0, r6
 80195bc:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80195c0:	4328      	orrs	r0, r5
 80195c2:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 80195c6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80195c8:	4401      	add	r1, r0
 80195ca:	9812      	ldr	r0, [sp, #72]	; 0x48
 80195cc:	f108 0801 	add.w	r8, r8, #1
 80195d0:	4402      	add	r2, r0
 80195d2:	e7d9      	b.n	8019588 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80195d4:	b2f0      	uxtb	r0, r6
 80195d6:	2e00      	cmp	r6, #0
 80195d8:	d0f5      	beq.n	80195c6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80195da:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 80195de:	fa1f f980 	uxth.w	r9, r0
 80195e2:	ea4f 272c 	mov.w	r7, ip, asr #8
 80195e6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80195ea:	43c0      	mvns	r0, r0
 80195ec:	b2c0      	uxtb	r0, r0
 80195ee:	fb16 f609 	smulbb	r6, r6, r9
 80195f2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80195f6:	fb07 6700 	mla	r7, r7, r0, r6
 80195fa:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80195fe:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8019602:	b2ed      	uxtb	r5, r5
 8019604:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019608:	fa5f fc8c 	uxtb.w	ip, ip
 801960c:	fb15 f509 	smulbb	r5, r5, r9
 8019610:	fb0c 5500 	mla	r5, ip, r0, r5
 8019614:	b2bf      	uxth	r7, r7
 8019616:	fb1a fa09 	smulbb	sl, sl, r9
 801961a:	b2ad      	uxth	r5, r5
 801961c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019620:	fb06 a600 	mla	r6, r6, r0, sl
 8019624:	1c78      	adds	r0, r7, #1
 8019626:	f105 0a01 	add.w	sl, r5, #1
 801962a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801962e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019632:	b2b6      	uxth	r6, r6
 8019634:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019638:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801963c:	ea4a 0707 	orr.w	r7, sl, r7
 8019640:	f106 0a01 	add.w	sl, r6, #1
 8019644:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019648:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801964c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019650:	ea47 070a 	orr.w	r7, r7, sl
 8019654:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8019658:	e7b5      	b.n	80195c6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801965a:	b005      	add	sp, #20
 801965c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019660:	fffff800 	.word	0xfffff800

08019664 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019664:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019668:	b087      	sub	sp, #28
 801966a:	468b      	mov	fp, r1
 801966c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801966e:	9204      	str	r2, [sp, #16]
 8019670:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019674:	9205      	str	r2, [sp, #20]
 8019676:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801967a:	6861      	ldr	r1, [r4, #4]
 801967c:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8019680:	fb01 2000 	mla	r0, r1, r0, r2
 8019684:	6822      	ldr	r2, [r4, #0]
 8019686:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801968a:	f8de 2000 	ldr.w	r2, [lr]
 801968e:	9201      	str	r2, [sp, #4]
 8019690:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019694:	9202      	str	r2, [sp, #8]
 8019696:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801969a:	f1bb 0f00 	cmp.w	fp, #0
 801969e:	dc03      	bgt.n	80196a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 80196a0:	9a04      	ldr	r2, [sp, #16]
 80196a2:	2a00      	cmp	r2, #0
 80196a4:	f340 8142 	ble.w	801992c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80196a8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80196aa:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80196ae:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80196b2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80196b6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80196b8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80196bc:	2b00      	cmp	r3, #0
 80196be:	dd0e      	ble.n	80196de <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80196c0:	140c      	asrs	r4, r1, #16
 80196c2:	d405      	bmi.n	80196d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80196c4:	42bc      	cmp	r4, r7
 80196c6:	da03      	bge.n	80196d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80196c8:	1414      	asrs	r4, r2, #16
 80196ca:	d401      	bmi.n	80196d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80196cc:	42b4      	cmp	r4, r6
 80196ce:	db07      	blt.n	80196e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80196d0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80196d2:	4421      	add	r1, r4
 80196d4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80196d6:	3b01      	subs	r3, #1
 80196d8:	4422      	add	r2, r4
 80196da:	3002      	adds	r0, #2
 80196dc:	e7ee      	b.n	80196bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80196de:	d019      	beq.n	8019714 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80196e0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80196e2:	1e5c      	subs	r4, r3, #1
 80196e4:	fb05 1504 	mla	r5, r5, r4, r1
 80196e8:	142d      	asrs	r5, r5, #16
 80196ea:	d409      	bmi.n	8019700 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80196ec:	42bd      	cmp	r5, r7
 80196ee:	da07      	bge.n	8019700 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80196f0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80196f2:	fb05 2404 	mla	r4, r5, r4, r2
 80196f6:	1424      	asrs	r4, r4, #16
 80196f8:	d402      	bmi.n	8019700 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80196fa:	42b4      	cmp	r4, r6
 80196fc:	f2c0 80b1 	blt.w	8019862 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8019700:	f04f 0800 	mov.w	r8, #0
 8019704:	eb03 0408 	add.w	r4, r3, r8
 8019708:	2c00      	cmp	r4, #0
 801970a:	dc3e      	bgt.n	801978a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801970c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019710:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019714:	f1bb 0f00 	cmp.w	fp, #0
 8019718:	f340 8108 	ble.w	801992c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801971c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019720:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019724:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019728:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801972a:	f1bb 0b01 	subs.w	fp, fp, #1
 801972e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019732:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019736:	eeb0 6a62 	vmov.f32	s12, s5
 801973a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801973e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019742:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019746:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801974a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801974e:	eeb0 6a43 	vmov.f32	s12, s6
 8019752:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019756:	ee12 2a90 	vmov	r2, s5
 801975a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801975e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019762:	ee13 2a10 	vmov	r2, s6
 8019766:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801976a:	9313      	str	r3, [sp, #76]	; 0x4c
 801976c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801976e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019772:	9a04      	ldr	r2, [sp, #16]
 8019774:	9314      	str	r3, [sp, #80]	; 0x50
 8019776:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801977a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801977c:	eeb0 3a67 	vmov.f32	s6, s15
 8019780:	bf08      	it	eq
 8019782:	4613      	moveq	r3, r2
 8019784:	eef0 2a47 	vmov.f32	s5, s14
 8019788:	e787      	b.n	801969a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801978a:	140e      	asrs	r6, r1, #16
 801978c:	d462      	bmi.n	8019854 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801978e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019792:	42b5      	cmp	r5, r6
 8019794:	dd5e      	ble.n	8019854 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019796:	1417      	asrs	r7, r2, #16
 8019798:	d45c      	bmi.n	8019854 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801979a:	f8de 400c 	ldr.w	r4, [lr, #12]
 801979e:	42bc      	cmp	r4, r7
 80197a0:	dd58      	ble.n	8019854 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80197a2:	b22d      	sxth	r5, r5
 80197a4:	fb07 6505 	mla	r5, r7, r5, r6
 80197a8:	9c02      	ldr	r4, [sp, #8]
 80197aa:	5d66      	ldrb	r6, [r4, r5]
 80197ac:	2e00      	cmp	r6, #0
 80197ae:	d051      	beq.n	8019854 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80197b0:	9c01      	ldr	r4, [sp, #4]
 80197b2:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 80197b6:	f06f 0401 	mvn.w	r4, #1
 80197ba:	fb04 f408 	mul.w	r4, r4, r8
 80197be:	9403      	str	r4, [sp, #12]
 80197c0:	5b05      	ldrh	r5, [r0, r4]
 80197c2:	9c05      	ldr	r4, [sp, #20]
 80197c4:	4366      	muls	r6, r4
 80197c6:	1c74      	adds	r4, r6, #1
 80197c8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80197cc:	1224      	asrs	r4, r4, #8
 80197ce:	b2a7      	uxth	r7, r4
 80197d0:	122e      	asrs	r6, r5, #8
 80197d2:	43e4      	mvns	r4, r4
 80197d4:	b2e4      	uxtb	r4, r4
 80197d6:	ea4f 2c29 	mov.w	ip, r9, asr #8
 80197da:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80197de:	fb16 f604 	smulbb	r6, r6, r4
 80197e2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80197e6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80197ea:	00ed      	lsls	r5, r5, #3
 80197ec:	fb0c 6c07 	mla	ip, ip, r7, r6
 80197f0:	b2ed      	uxtb	r5, r5
 80197f2:	ea4f 06e9 	mov.w	r6, r9, asr #3
 80197f6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80197fa:	fb15 f504 	smulbb	r5, r5, r4
 80197fe:	fa5f f989 	uxtb.w	r9, r9
 8019802:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019806:	fb09 5507 	mla	r5, r9, r7, r5
 801980a:	fb1a fa04 	smulbb	sl, sl, r4
 801980e:	fa1f fc8c 	uxth.w	ip, ip
 8019812:	b2ad      	uxth	r5, r5
 8019814:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019818:	fb06 a607 	mla	r6, r6, r7, sl
 801981c:	f10c 0401 	add.w	r4, ip, #1
 8019820:	f105 0a01 	add.w	sl, r5, #1
 8019824:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019828:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801982c:	b2b6      	uxth	r6, r6
 801982e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019832:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019836:	ea4a 0c0c 	orr.w	ip, sl, ip
 801983a:	f106 0a01 	add.w	sl, r6, #1
 801983e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019842:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019846:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801984a:	9c03      	ldr	r4, [sp, #12]
 801984c:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019850:	f820 c004 	strh.w	ip, [r0, r4]
 8019854:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019856:	4421      	add	r1, r4
 8019858:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801985a:	f108 38ff 	add.w	r8, r8, #4294967295
 801985e:	4422      	add	r2, r4
 8019860:	e750      	b.n	8019704 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019862:	f04f 0900 	mov.w	r9, #0
 8019866:	eba3 0409 	sub.w	r4, r3, r9
 801986a:	2c00      	cmp	r4, #0
 801986c:	f77f af4e 	ble.w	801970c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019870:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8019874:	140d      	asrs	r5, r1, #16
 8019876:	1414      	asrs	r4, r2, #16
 8019878:	fb06 5404 	mla	r4, r6, r4, r5
 801987c:	9d02      	ldr	r5, [sp, #8]
 801987e:	5d2e      	ldrb	r6, [r5, r4]
 8019880:	2e00      	cmp	r6, #0
 8019882:	d04c      	beq.n	801991e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8019884:	9d01      	ldr	r5, [sp, #4]
 8019886:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801988a:	9c05      	ldr	r4, [sp, #20]
 801988c:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019890:	4366      	muls	r6, r4
 8019892:	1c74      	adds	r4, r6, #1
 8019894:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8019898:	1224      	asrs	r4, r4, #8
 801989a:	b2a7      	uxth	r7, r4
 801989c:	122e      	asrs	r6, r5, #8
 801989e:	43e4      	mvns	r4, r4
 80198a0:	b2e4      	uxtb	r4, r4
 80198a2:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80198a6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80198aa:	fb16 f604 	smulbb	r6, r6, r4
 80198ae:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80198b2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80198b6:	00ed      	lsls	r5, r5, #3
 80198b8:	fb0c 6c07 	mla	ip, ip, r7, r6
 80198bc:	b2ed      	uxtb	r5, r5
 80198be:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80198c2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80198c6:	fb15 f504 	smulbb	r5, r5, r4
 80198ca:	fa5f f888 	uxtb.w	r8, r8
 80198ce:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80198d2:	fb08 5507 	mla	r5, r8, r7, r5
 80198d6:	fb1a fa04 	smulbb	sl, sl, r4
 80198da:	fa1f fc8c 	uxth.w	ip, ip
 80198de:	b2ad      	uxth	r5, r5
 80198e0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80198e4:	fb06 a607 	mla	r6, r6, r7, sl
 80198e8:	f10c 0401 	add.w	r4, ip, #1
 80198ec:	f105 0a01 	add.w	sl, r5, #1
 80198f0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80198f4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80198f8:	b2b6      	uxth	r6, r6
 80198fa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80198fe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019902:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019906:	f106 0a01 	add.w	sl, r6, #1
 801990a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801990e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019912:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019916:	ea4c 0c0a 	orr.w	ip, ip, sl
 801991a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801991e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019920:	4421      	add	r1, r4
 8019922:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019924:	f109 0901 	add.w	r9, r9, #1
 8019928:	4422      	add	r2, r4
 801992a:	e79c      	b.n	8019866 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801992c:	b007      	add	sp, #28
 801992e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019932 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019932:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019936:	b085      	sub	sp, #20
 8019938:	468b      	mov	fp, r1
 801993a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801993c:	9203      	str	r2, [sp, #12]
 801993e:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8019942:	6861      	ldr	r1, [r4, #4]
 8019944:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8019948:	fb01 2000 	mla	r0, r1, r0, r2
 801994c:	6822      	ldr	r2, [r4, #0]
 801994e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8019952:	f8d8 2000 	ldr.w	r2, [r8]
 8019956:	9200      	str	r2, [sp, #0]
 8019958:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801995c:	9201      	str	r2, [sp, #4]
 801995e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019962:	f1bb 0f00 	cmp.w	fp, #0
 8019966:	dc03      	bgt.n	8019970 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019968:	9a03      	ldr	r2, [sp, #12]
 801996a:	2a00      	cmp	r2, #0
 801996c:	f340 8146 	ble.w	8019bfc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019970:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019972:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8019976:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801997a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801997e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019980:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019984:	2b00      	cmp	r3, #0
 8019986:	dd0e      	ble.n	80199a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8019988:	140c      	asrs	r4, r1, #16
 801998a:	d405      	bmi.n	8019998 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801998c:	42bc      	cmp	r4, r7
 801998e:	da03      	bge.n	8019998 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019990:	1414      	asrs	r4, r2, #16
 8019992:	d401      	bmi.n	8019998 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019994:	42b4      	cmp	r4, r6
 8019996:	db07      	blt.n	80199a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019998:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801999a:	4421      	add	r1, r4
 801999c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801999e:	3b01      	subs	r3, #1
 80199a0:	4422      	add	r2, r4
 80199a2:	3002      	adds	r0, #2
 80199a4:	e7ee      	b.n	8019984 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80199a6:	d017      	beq.n	80199d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80199a8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80199aa:	1e5c      	subs	r4, r3, #1
 80199ac:	fb05 1504 	mla	r5, r5, r4, r1
 80199b0:	142d      	asrs	r5, r5, #16
 80199b2:	d409      	bmi.n	80199c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80199b4:	42bd      	cmp	r5, r7
 80199b6:	da07      	bge.n	80199c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80199b8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80199ba:	fb05 2404 	mla	r4, r5, r4, r2
 80199be:	1424      	asrs	r4, r4, #16
 80199c0:	d402      	bmi.n	80199c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80199c2:	42b4      	cmp	r4, r6
 80199c4:	f2c0 80b3 	blt.w	8019b2e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80199c8:	2600      	movs	r6, #0
 80199ca:	199c      	adds	r4, r3, r6
 80199cc:	2c00      	cmp	r4, #0
 80199ce:	dc3e      	bgt.n	8019a4e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80199d0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80199d4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80199d8:	f1bb 0f00 	cmp.w	fp, #0
 80199dc:	f340 810e 	ble.w	8019bfc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80199e0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80199e4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80199e8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80199ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80199ee:	f1bb 0b01 	subs.w	fp, fp, #1
 80199f2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80199f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80199fa:	eeb0 6a62 	vmov.f32	s12, s5
 80199fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019a02:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019a06:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019a0a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019a0e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019a12:	eeb0 6a43 	vmov.f32	s12, s6
 8019a16:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019a1a:	ee12 2a90 	vmov	r2, s5
 8019a1e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019a22:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a26:	ee13 2a10 	vmov	r2, s6
 8019a2a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019a2e:	9311      	str	r3, [sp, #68]	; 0x44
 8019a30:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019a32:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a36:	9a03      	ldr	r2, [sp, #12]
 8019a38:	9312      	str	r3, [sp, #72]	; 0x48
 8019a3a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019a3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019a40:	eeb0 3a67 	vmov.f32	s6, s15
 8019a44:	bf08      	it	eq
 8019a46:	4613      	moveq	r3, r2
 8019a48:	eef0 2a47 	vmov.f32	s5, s14
 8019a4c:	e789      	b.n	8019962 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019a4e:	140f      	asrs	r7, r1, #16
 8019a50:	d418      	bmi.n	8019a84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019a52:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8019a56:	42bd      	cmp	r5, r7
 8019a58:	dd14      	ble.n	8019a84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019a5a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019a5e:	d411      	bmi.n	8019a84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019a60:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8019a64:	4564      	cmp	r4, ip
 8019a66:	dd0d      	ble.n	8019a84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019a68:	b22d      	sxth	r5, r5
 8019a6a:	fb0c 7505 	mla	r5, ip, r5, r7
 8019a6e:	9c01      	ldr	r4, [sp, #4]
 8019a70:	5d64      	ldrb	r4, [r4, r5]
 8019a72:	2cff      	cmp	r4, #255	; 0xff
 8019a74:	d10c      	bne.n	8019a90 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8019a76:	9c00      	ldr	r4, [sp, #0]
 8019a78:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8019a7c:	f06f 0401 	mvn.w	r4, #1
 8019a80:	4374      	muls	r4, r6
 8019a82:	5305      	strh	r5, [r0, r4]
 8019a84:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019a86:	4421      	add	r1, r4
 8019a88:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019a8a:	3e01      	subs	r6, #1
 8019a8c:	4422      	add	r2, r4
 8019a8e:	e79c      	b.n	80199ca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019a90:	2c00      	cmp	r4, #0
 8019a92:	d0f7      	beq.n	8019a84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019a94:	9f00      	ldr	r7, [sp, #0]
 8019a96:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8019a9a:	f06f 0501 	mvn.w	r5, #1
 8019a9e:	4375      	muls	r5, r6
 8019aa0:	9502      	str	r5, [sp, #8]
 8019aa2:	5b45      	ldrh	r5, [r0, r5]
 8019aa4:	fa1f fc84 	uxth.w	ip, r4
 8019aa8:	122f      	asrs	r7, r5, #8
 8019aaa:	43e4      	mvns	r4, r4
 8019aac:	b2e4      	uxtb	r4, r4
 8019aae:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8019ab2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019ab6:	fb17 f704 	smulbb	r7, r7, r4
 8019aba:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019abe:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019ac2:	00ed      	lsls	r5, r5, #3
 8019ac4:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8019ac8:	b2ed      	uxtb	r5, r5
 8019aca:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8019ace:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019ad2:	fb15 f504 	smulbb	r5, r5, r4
 8019ad6:	fa5f f989 	uxtb.w	r9, r9
 8019ada:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019ade:	fb09 550c 	mla	r5, r9, ip, r5
 8019ae2:	fb1a fa04 	smulbb	sl, sl, r4
 8019ae6:	fa1f fe8e 	uxth.w	lr, lr
 8019aea:	b2ad      	uxth	r5, r5
 8019aec:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019af0:	fb07 a70c 	mla	r7, r7, ip, sl
 8019af4:	f10e 0401 	add.w	r4, lr, #1
 8019af8:	f105 0a01 	add.w	sl, r5, #1
 8019afc:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8019b00:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019b04:	b2bf      	uxth	r7, r7
 8019b06:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019b0a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8019b0e:	ea4a 0e0e 	orr.w	lr, sl, lr
 8019b12:	f107 0a01 	add.w	sl, r7, #1
 8019b16:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019b1a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019b1e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019b22:	9c02      	ldr	r4, [sp, #8]
 8019b24:	ea4e 0e0a 	orr.w	lr, lr, sl
 8019b28:	f820 e004 	strh.w	lr, [r0, r4]
 8019b2c:	e7aa      	b.n	8019a84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019b2e:	f04f 0900 	mov.w	r9, #0
 8019b32:	eba3 0409 	sub.w	r4, r3, r9
 8019b36:	2c00      	cmp	r4, #0
 8019b38:	f77f af4a 	ble.w	80199d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019b3c:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8019b40:	1414      	asrs	r4, r2, #16
 8019b42:	140d      	asrs	r5, r1, #16
 8019b44:	fb06 5504 	mla	r5, r6, r4, r5
 8019b48:	9c01      	ldr	r4, [sp, #4]
 8019b4a:	5d64      	ldrb	r4, [r4, r5]
 8019b4c:	2cff      	cmp	r4, #255	; 0xff
 8019b4e:	d10b      	bne.n	8019b68 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8019b50:	9c00      	ldr	r4, [sp, #0]
 8019b52:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8019b56:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8019b5a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019b5c:	4421      	add	r1, r4
 8019b5e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019b60:	f109 0901 	add.w	r9, r9, #1
 8019b64:	4422      	add	r2, r4
 8019b66:	e7e4      	b.n	8019b32 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019b68:	2c00      	cmp	r4, #0
 8019b6a:	d0f6      	beq.n	8019b5a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019b6c:	9e00      	ldr	r6, [sp, #0]
 8019b6e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8019b72:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019b76:	b2a7      	uxth	r7, r4
 8019b78:	122e      	asrs	r6, r5, #8
 8019b7a:	43e4      	mvns	r4, r4
 8019b7c:	b2e4      	uxtb	r4, r4
 8019b7e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019b82:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019b86:	fb16 f604 	smulbb	r6, r6, r4
 8019b8a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019b8e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019b92:	00ed      	lsls	r5, r5, #3
 8019b94:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019b98:	b2ed      	uxtb	r5, r5
 8019b9a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019b9e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019ba2:	fb15 f504 	smulbb	r5, r5, r4
 8019ba6:	fa5f fe8e 	uxtb.w	lr, lr
 8019baa:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019bae:	fb0e 5507 	mla	r5, lr, r7, r5
 8019bb2:	fb1a fa04 	smulbb	sl, sl, r4
 8019bb6:	fa1f fc8c 	uxth.w	ip, ip
 8019bba:	b2ad      	uxth	r5, r5
 8019bbc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019bc0:	fb06 a607 	mla	r6, r6, r7, sl
 8019bc4:	f10c 0401 	add.w	r4, ip, #1
 8019bc8:	f105 0a01 	add.w	sl, r5, #1
 8019bcc:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019bd0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019bd4:	b2b6      	uxth	r6, r6
 8019bd6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019bda:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019bde:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019be2:	f106 0a01 	add.w	sl, r6, #1
 8019be6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019bea:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019bee:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019bf2:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019bf6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8019bfa:	e7ae      	b.n	8019b5a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019bfc:	b005      	add	sp, #20
 8019bfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019c02 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019c02:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c06:	b085      	sub	sp, #20
 8019c08:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019c0a:	9203      	str	r2, [sp, #12]
 8019c0c:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8019c10:	9201      	str	r2, [sp, #4]
 8019c12:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019c16:	9100      	str	r1, [sp, #0]
 8019c18:	6841      	ldr	r1, [r0, #4]
 8019c1a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8019c1e:	fb01 2404 	mla	r4, r1, r4, r2
 8019c22:	6802      	ldr	r2, [r0, #0]
 8019c24:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019c28:	f8de 2000 	ldr.w	r2, [lr]
 8019c2c:	9202      	str	r2, [sp, #8]
 8019c2e:	9a01      	ldr	r2, [sp, #4]
 8019c30:	43d6      	mvns	r6, r2
 8019c32:	b2f6      	uxtb	r6, r6
 8019c34:	9a00      	ldr	r2, [sp, #0]
 8019c36:	2a00      	cmp	r2, #0
 8019c38:	dc03      	bgt.n	8019c42 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8019c3a:	9a03      	ldr	r2, [sp, #12]
 8019c3c:	2a00      	cmp	r2, #0
 8019c3e:	f340 8124 	ble.w	8019e8a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8019c42:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019c44:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019c48:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8019c4c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019c50:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019c52:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019c56:	2b00      	cmp	r3, #0
 8019c58:	dd0e      	ble.n	8019c78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019c5a:	1408      	asrs	r0, r1, #16
 8019c5c:	d405      	bmi.n	8019c6a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019c5e:	4560      	cmp	r0, ip
 8019c60:	da03      	bge.n	8019c6a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019c62:	1410      	asrs	r0, r2, #16
 8019c64:	d401      	bmi.n	8019c6a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019c66:	42b8      	cmp	r0, r7
 8019c68:	db07      	blt.n	8019c7a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019c6a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019c6c:	4401      	add	r1, r0
 8019c6e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019c70:	3b01      	subs	r3, #1
 8019c72:	4402      	add	r2, r0
 8019c74:	3402      	adds	r4, #2
 8019c76:	e7ee      	b.n	8019c56 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8019c78:	d06e      	beq.n	8019d58 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8019c7a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019c7c:	1e58      	subs	r0, r3, #1
 8019c7e:	fb05 1500 	mla	r5, r5, r0, r1
 8019c82:	142d      	asrs	r5, r5, #16
 8019c84:	d45c      	bmi.n	8019d40 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019c86:	4565      	cmp	r5, ip
 8019c88:	da5a      	bge.n	8019d40 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019c8a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019c8c:	fb05 2000 	mla	r0, r5, r0, r2
 8019c90:	1400      	asrs	r0, r0, #16
 8019c92:	d455      	bmi.n	8019d40 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019c94:	42b8      	cmp	r0, r7
 8019c96:	da53      	bge.n	8019d40 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019c98:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8019c9c:	4699      	mov	r9, r3
 8019c9e:	46a2      	mov	sl, r4
 8019ca0:	f1b9 0f00 	cmp.w	r9, #0
 8019ca4:	dd54      	ble.n	8019d50 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019ca6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019caa:	140d      	asrs	r5, r1, #16
 8019cac:	1410      	asrs	r0, r2, #16
 8019cae:	fb07 5000 	mla	r0, r7, r0, r5
 8019cb2:	9d02      	ldr	r5, [sp, #8]
 8019cb4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019cb8:	f8ba 5000 	ldrh.w	r5, [sl]
 8019cbc:	122f      	asrs	r7, r5, #8
 8019cbe:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019cc2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019cc6:	fb17 f706 	smulbb	r7, r7, r6
 8019cca:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019cce:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019cd2:	00ed      	lsls	r5, r5, #3
 8019cd4:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8019cd8:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8019cdc:	10c7      	asrs	r7, r0, #3
 8019cde:	b2ed      	uxtb	r5, r5
 8019ce0:	00c0      	lsls	r0, r0, #3
 8019ce2:	fb18 f806 	smulbb	r8, r8, r6
 8019ce6:	fb15 f506 	smulbb	r5, r5, r6
 8019cea:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019cee:	b2c0      	uxtb	r0, r0
 8019cf0:	fa1f fc8c 	uxth.w	ip, ip
 8019cf4:	fb07 870b 	mla	r7, r7, fp, r8
 8019cf8:	fb00 500b 	mla	r0, r0, fp, r5
 8019cfc:	b280      	uxth	r0, r0
 8019cfe:	b2bf      	uxth	r7, r7
 8019d00:	f10c 0501 	add.w	r5, ip, #1
 8019d04:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019d08:	f107 0801 	add.w	r8, r7, #1
 8019d0c:	1c45      	adds	r5, r0, #1
 8019d0e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019d12:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8019d16:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019d18:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019d1c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019d20:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019d24:	ea45 0c0c 	orr.w	ip, r5, ip
 8019d28:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8019d2c:	4401      	add	r1, r0
 8019d2e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019d30:	ea4c 0c08 	orr.w	ip, ip, r8
 8019d34:	f82a cb02 	strh.w	ip, [sl], #2
 8019d38:	4402      	add	r2, r0
 8019d3a:	f109 39ff 	add.w	r9, r9, #4294967295
 8019d3e:	e7af      	b.n	8019ca0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019d40:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8019d44:	f04f 0800 	mov.w	r8, #0
 8019d48:	eb03 0008 	add.w	r0, r3, r8
 8019d4c:	2800      	cmp	r0, #0
 8019d4e:	dc41      	bgt.n	8019dd4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8019d50:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019d54:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019d58:	9b00      	ldr	r3, [sp, #0]
 8019d5a:	2b00      	cmp	r3, #0
 8019d5c:	f340 8095 	ble.w	8019e8a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8019d60:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019d64:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019d68:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019d6c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019d6e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019d72:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019d76:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019d7a:	eef0 6a62 	vmov.f32	s13, s5
 8019d7e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019d82:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019d86:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019d8a:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8019d8e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019d92:	eef0 6a43 	vmov.f32	s13, s6
 8019d96:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019d9a:	ee12 2a90 	vmov	r2, s5
 8019d9e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019da2:	fb92 f3f3 	sdiv	r3, r2, r3
 8019da6:	ee13 2a10 	vmov	r2, s6
 8019daa:	9311      	str	r3, [sp, #68]	; 0x44
 8019dac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019dae:	fb92 f3f3 	sdiv	r3, r2, r3
 8019db2:	9312      	str	r3, [sp, #72]	; 0x48
 8019db4:	9b00      	ldr	r3, [sp, #0]
 8019db6:	9a03      	ldr	r2, [sp, #12]
 8019db8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019dbc:	3b01      	subs	r3, #1
 8019dbe:	9300      	str	r3, [sp, #0]
 8019dc0:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8019dc4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019dc6:	eeb0 3a67 	vmov.f32	s6, s15
 8019dca:	bf08      	it	eq
 8019dcc:	4613      	moveq	r3, r2
 8019dce:	eef0 2a47 	vmov.f32	s5, s14
 8019dd2:	e72f      	b.n	8019c34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019dd4:	140f      	asrs	r7, r1, #16
 8019dd6:	d451      	bmi.n	8019e7c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019dd8:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019ddc:	42bd      	cmp	r5, r7
 8019dde:	dd4d      	ble.n	8019e7c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019de0:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019de4:	d44a      	bmi.n	8019e7c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019de6:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019dea:	4560      	cmp	r0, ip
 8019dec:	dd46      	ble.n	8019e7c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019dee:	b22d      	sxth	r5, r5
 8019df0:	fb0c 7505 	mla	r5, ip, r5, r7
 8019df4:	9802      	ldr	r0, [sp, #8]
 8019df6:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8019dfa:	f06f 0501 	mvn.w	r5, #1
 8019dfe:	fb05 fb08 	mul.w	fp, r5, r8
 8019e02:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019e06:	f834 500b 	ldrh.w	r5, [r4, fp]
 8019e0a:	122f      	asrs	r7, r5, #8
 8019e0c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019e10:	fb17 f706 	smulbb	r7, r7, r6
 8019e14:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019e18:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019e1c:	00ed      	lsls	r5, r5, #3
 8019e1e:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019e22:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019e26:	10c7      	asrs	r7, r0, #3
 8019e28:	b2ed      	uxtb	r5, r5
 8019e2a:	00c0      	lsls	r0, r0, #3
 8019e2c:	fb19 f906 	smulbb	r9, r9, r6
 8019e30:	fb15 f506 	smulbb	r5, r5, r6
 8019e34:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019e38:	b2c0      	uxtb	r0, r0
 8019e3a:	fa1f fc8c 	uxth.w	ip, ip
 8019e3e:	fb07 970a 	mla	r7, r7, sl, r9
 8019e42:	fb00 500a 	mla	r0, r0, sl, r5
 8019e46:	b2bf      	uxth	r7, r7
 8019e48:	b280      	uxth	r0, r0
 8019e4a:	f10c 0501 	add.w	r5, ip, #1
 8019e4e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019e52:	f107 0901 	add.w	r9, r7, #1
 8019e56:	1c45      	adds	r5, r0, #1
 8019e58:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019e5c:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019e60:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019e64:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019e68:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019e6c:	ea45 0c0c 	orr.w	ip, r5, ip
 8019e70:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019e74:	ea4c 0c09 	orr.w	ip, ip, r9
 8019e78:	f824 c00b 	strh.w	ip, [r4, fp]
 8019e7c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019e7e:	4401      	add	r1, r0
 8019e80:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019e82:	f108 38ff 	add.w	r8, r8, #4294967295
 8019e86:	4402      	add	r2, r0
 8019e88:	e75e      	b.n	8019d48 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8019e8a:	b005      	add	sp, #20
 8019e8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019e90 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019e90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e94:	b085      	sub	sp, #20
 8019e96:	4693      	mov	fp, r2
 8019e98:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019e9a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019e9c:	6870      	ldr	r0, [r6, #4]
 8019e9e:	9101      	str	r1, [sp, #4]
 8019ea0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019ea4:	fb00 2404 	mla	r4, r0, r4, r2
 8019ea8:	6832      	ldr	r2, [r6, #0]
 8019eaa:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8019eae:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019eb2:	682a      	ldr	r2, [r5, #0]
 8019eb4:	9202      	str	r2, [sp, #8]
 8019eb6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019eba:	9a01      	ldr	r2, [sp, #4]
 8019ebc:	2a00      	cmp	r2, #0
 8019ebe:	dc03      	bgt.n	8019ec8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019ec0:	f1bb 0f00 	cmp.w	fp, #0
 8019ec4:	f340 809a 	ble.w	8019ffc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8019ec8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019eca:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019ece:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019ed2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019ed6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019ed8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019edc:	2b00      	cmp	r3, #0
 8019ede:	dd0c      	ble.n	8019efa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8019ee0:	1406      	asrs	r6, r0, #16
 8019ee2:	d405      	bmi.n	8019ef0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019ee4:	454e      	cmp	r6, r9
 8019ee6:	da03      	bge.n	8019ef0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019ee8:	1416      	asrs	r6, r2, #16
 8019eea:	d401      	bmi.n	8019ef0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019eec:	4546      	cmp	r6, r8
 8019eee:	db05      	blt.n	8019efc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019ef0:	4470      	add	r0, lr
 8019ef2:	4462      	add	r2, ip
 8019ef4:	3b01      	subs	r3, #1
 8019ef6:	3402      	adds	r4, #2
 8019ef8:	e7f0      	b.n	8019edc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019efa:	d00f      	beq.n	8019f1c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019efc:	1e5e      	subs	r6, r3, #1
 8019efe:	fb0e 0706 	mla	r7, lr, r6, r0
 8019f02:	143f      	asrs	r7, r7, #16
 8019f04:	d541      	bpl.n	8019f8a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8019f06:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019f0a:	4698      	mov	r8, r3
 8019f0c:	9603      	str	r6, [sp, #12]
 8019f0e:	f1b8 0f00 	cmp.w	r8, #0
 8019f12:	dc56      	bgt.n	8019fc2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8019f14:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019f18:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019f1c:	9b01      	ldr	r3, [sp, #4]
 8019f1e:	2b00      	cmp	r3, #0
 8019f20:	dd6c      	ble.n	8019ffc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8019f22:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019f26:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019f2a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019f2e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019f30:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019f34:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019f38:	eeb0 6a62 	vmov.f32	s12, s5
 8019f3c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019f40:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019f44:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019f48:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019f4c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019f50:	eeb0 6a43 	vmov.f32	s12, s6
 8019f54:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019f58:	ee12 2a90 	vmov	r2, s5
 8019f5c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019f60:	fb92 fef3 	sdiv	lr, r2, r3
 8019f64:	ee13 2a10 	vmov	r2, s6
 8019f68:	fb92 fcf3 	sdiv	ip, r2, r3
 8019f6c:	9b01      	ldr	r3, [sp, #4]
 8019f6e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019f72:	3b01      	subs	r3, #1
 8019f74:	9301      	str	r3, [sp, #4]
 8019f76:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019f7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019f7c:	eeb0 3a67 	vmov.f32	s6, s15
 8019f80:	bf08      	it	eq
 8019f82:	465b      	moveq	r3, fp
 8019f84:	eef0 2a47 	vmov.f32	s5, s14
 8019f88:	e797      	b.n	8019eba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8019f8a:	454f      	cmp	r7, r9
 8019f8c:	dabb      	bge.n	8019f06 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019f8e:	fb0c 2606 	mla	r6, ip, r6, r2
 8019f92:	1436      	asrs	r6, r6, #16
 8019f94:	d4b7      	bmi.n	8019f06 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019f96:	4546      	cmp	r6, r8
 8019f98:	dab5      	bge.n	8019f06 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019f9a:	461e      	mov	r6, r3
 8019f9c:	46a0      	mov	r8, r4
 8019f9e:	2e00      	cmp	r6, #0
 8019fa0:	ddb8      	ble.n	8019f14 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019fa2:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8019fa6:	9902      	ldr	r1, [sp, #8]
 8019fa8:	1417      	asrs	r7, r2, #16
 8019faa:	ea4f 4920 	mov.w	r9, r0, asr #16
 8019fae:	fb0a 9707 	mla	r7, sl, r7, r9
 8019fb2:	4470      	add	r0, lr
 8019fb4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8019fb8:	f828 7b02 	strh.w	r7, [r8], #2
 8019fbc:	4462      	add	r2, ip
 8019fbe:	3e01      	subs	r6, #1
 8019fc0:	e7ed      	b.n	8019f9e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8019fc2:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019fc6:	d414      	bmi.n	8019ff2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019fc8:	68ae      	ldr	r6, [r5, #8]
 8019fca:	454e      	cmp	r6, r9
 8019fcc:	dd11      	ble.n	8019ff2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019fce:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8019fd2:	d40e      	bmi.n	8019ff2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019fd4:	68ef      	ldr	r7, [r5, #12]
 8019fd6:	4557      	cmp	r7, sl
 8019fd8:	dd0b      	ble.n	8019ff2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019fda:	b236      	sxth	r6, r6
 8019fdc:	fb0a 9606 	mla	r6, sl, r6, r9
 8019fe0:	9f02      	ldr	r7, [sp, #8]
 8019fe2:	f06f 0101 	mvn.w	r1, #1
 8019fe6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8019fea:	fb01 f608 	mul.w	r6, r1, r8
 8019fee:	9903      	ldr	r1, [sp, #12]
 8019ff0:	538f      	strh	r7, [r1, r6]
 8019ff2:	4470      	add	r0, lr
 8019ff4:	4462      	add	r2, ip
 8019ff6:	f108 38ff 	add.w	r8, r8, #4294967295
 8019ffa:	e788      	b.n	8019f0e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019ffc:	b005      	add	sp, #20
 8019ffe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a002 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a002:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a006:	b087      	sub	sp, #28
 801a008:	468b      	mov	fp, r1
 801a00a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a00c:	9203      	str	r2, [sp, #12]
 801a00e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a012:	9204      	str	r2, [sp, #16]
 801a014:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801a018:	6841      	ldr	r1, [r0, #4]
 801a01a:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a01e:	fb01 2505 	mla	r5, r1, r5, r2
 801a022:	6802      	ldr	r2, [r0, #0]
 801a024:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801a028:	f8d9 2000 	ldr.w	r2, [r9]
 801a02c:	9201      	str	r2, [sp, #4]
 801a02e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a032:	f1bb 0f00 	cmp.w	fp, #0
 801a036:	dc03      	bgt.n	801a040 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a038:	9a03      	ldr	r2, [sp, #12]
 801a03a:	2a00      	cmp	r2, #0
 801a03c:	f340 8159 	ble.w	801a2f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a040:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a042:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a046:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a04a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a04e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a050:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a054:	2b00      	cmp	r3, #0
 801a056:	dd0e      	ble.n	801a076 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a058:	1402      	asrs	r2, r0, #16
 801a05a:	d405      	bmi.n	801a068 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a05c:	42ba      	cmp	r2, r7
 801a05e:	da03      	bge.n	801a068 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a060:	140a      	asrs	r2, r1, #16
 801a062:	d401      	bmi.n	801a068 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a064:	42b2      	cmp	r2, r6
 801a066:	db07      	blt.n	801a078 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a068:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a06a:	4410      	add	r0, r2
 801a06c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a06e:	3b01      	subs	r3, #1
 801a070:	4411      	add	r1, r2
 801a072:	3502      	adds	r5, #2
 801a074:	e7ee      	b.n	801a054 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a076:	d017      	beq.n	801a0a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a078:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a07a:	1e5a      	subs	r2, r3, #1
 801a07c:	fb04 0402 	mla	r4, r4, r2, r0
 801a080:	1424      	asrs	r4, r4, #16
 801a082:	d409      	bmi.n	801a098 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a084:	42bc      	cmp	r4, r7
 801a086:	da07      	bge.n	801a098 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a088:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a08a:	fb04 1202 	mla	r2, r4, r2, r1
 801a08e:	1412      	asrs	r2, r2, #16
 801a090:	d402      	bmi.n	801a098 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a092:	42b2      	cmp	r2, r6
 801a094:	f2c0 80bf 	blt.w	801a216 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a098:	2700      	movs	r7, #0
 801a09a:	19da      	adds	r2, r3, r7
 801a09c:	2a00      	cmp	r2, #0
 801a09e:	dc3e      	bgt.n	801a11e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a0a0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a0a4:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801a0a8:	f1bb 0f00 	cmp.w	fp, #0
 801a0ac:	f340 8121 	ble.w	801a2f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a0b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a0b4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a0b8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a0bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a0be:	f1bb 0b01 	subs.w	fp, fp, #1
 801a0c2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a0c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a0ca:	eeb0 6a62 	vmov.f32	s12, s5
 801a0ce:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a0d2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a0d6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a0da:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a0de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a0e2:	eeb0 6a43 	vmov.f32	s12, s6
 801a0e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a0ea:	ee12 2a90 	vmov	r2, s5
 801a0ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a0f2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a0f6:	ee13 2a10 	vmov	r2, s6
 801a0fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a0fe:	9313      	str	r3, [sp, #76]	; 0x4c
 801a100:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a102:	fb92 f3f3 	sdiv	r3, r2, r3
 801a106:	9a03      	ldr	r2, [sp, #12]
 801a108:	9314      	str	r3, [sp, #80]	; 0x50
 801a10a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a10e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a110:	eeb0 3a67 	vmov.f32	s6, s15
 801a114:	bf08      	it	eq
 801a116:	4613      	moveq	r3, r2
 801a118:	eef0 2a47 	vmov.f32	s5, s14
 801a11c:	e789      	b.n	801a032 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a11e:	1406      	asrs	r6, r0, #16
 801a120:	d42d      	bmi.n	801a17e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a122:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801a126:	42b4      	cmp	r4, r6
 801a128:	dd29      	ble.n	801a17e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a12a:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801a12e:	d426      	bmi.n	801a17e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a130:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a134:	4562      	cmp	r2, ip
 801a136:	dd22      	ble.n	801a17e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a138:	b224      	sxth	r4, r4
 801a13a:	9a01      	ldr	r2, [sp, #4]
 801a13c:	fb0c 6404 	mla	r4, ip, r4, r6
 801a140:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801a144:	0e22      	lsrs	r2, r4, #24
 801a146:	d01a      	beq.n	801a17e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a148:	9e04      	ldr	r6, [sp, #16]
 801a14a:	4372      	muls	r2, r6
 801a14c:	1c56      	adds	r6, r2, #1
 801a14e:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a152:	1212      	asrs	r2, r2, #8
 801a154:	0a26      	lsrs	r6, r4, #8
 801a156:	2aff      	cmp	r2, #255	; 0xff
 801a158:	9605      	str	r6, [sp, #20]
 801a15a:	d116      	bne.n	801a18a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a15c:	f06f 0201 	mvn.w	r2, #1
 801a160:	fb02 fc07 	mul.w	ip, r2, r7
 801a164:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a168:	0962      	lsrs	r2, r4, #5
 801a16a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a16e:	f026 0607 	bic.w	r6, r6, #7
 801a172:	4316      	orrs	r6, r2
 801a174:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a178:	4326      	orrs	r6, r4
 801a17a:	f825 600c 	strh.w	r6, [r5, ip]
 801a17e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a180:	4410      	add	r0, r2
 801a182:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a184:	3f01      	subs	r7, #1
 801a186:	4411      	add	r1, r2
 801a188:	e787      	b.n	801a09a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a18a:	f06f 0601 	mvn.w	r6, #1
 801a18e:	437e      	muls	r6, r7
 801a190:	fa1f fa82 	uxth.w	sl, r2
 801a194:	f835 8006 	ldrh.w	r8, [r5, r6]
 801a198:	9602      	str	r6, [sp, #8]
 801a19a:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a19e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801a1a2:	43d2      	mvns	r2, r2
 801a1a4:	b2d2      	uxtb	r2, r2
 801a1a6:	fb1c fc0a 	smulbb	ip, ip, sl
 801a1aa:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a1ae:	fb0e ce02 	mla	lr, lr, r2, ip
 801a1b2:	b2e4      	uxtb	r4, r4
 801a1b4:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a1b8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a1bc:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a1c0:	fa5f f888 	uxtb.w	r8, r8
 801a1c4:	fb14 f40a 	smulbb	r4, r4, sl
 801a1c8:	fb08 4402 	mla	r4, r8, r2, r4
 801a1cc:	fa1f fe8e 	uxth.w	lr, lr
 801a1d0:	fb16 f60a 	smulbb	r6, r6, sl
 801a1d4:	b2a4      	uxth	r4, r4
 801a1d6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a1da:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a1de:	f10e 0201 	add.w	r2, lr, #1
 801a1e2:	1c66      	adds	r6, r4, #1
 801a1e4:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a1e8:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a1ec:	fa1f fc8c 	uxth.w	ip, ip
 801a1f0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a1f4:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a1f8:	ea46 0e0e 	orr.w	lr, r6, lr
 801a1fc:	f10c 0601 	add.w	r6, ip, #1
 801a200:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801a204:	0976      	lsrs	r6, r6, #5
 801a206:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a20a:	9a02      	ldr	r2, [sp, #8]
 801a20c:	ea4e 0e06 	orr.w	lr, lr, r6
 801a210:	f825 e002 	strh.w	lr, [r5, r2]
 801a214:	e7b3      	b.n	801a17e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a216:	f04f 0800 	mov.w	r8, #0
 801a21a:	eba3 0208 	sub.w	r2, r3, r8
 801a21e:	2a00      	cmp	r2, #0
 801a220:	f77f af3e 	ble.w	801a0a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a224:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801a228:	1404      	asrs	r4, r0, #16
 801a22a:	140a      	asrs	r2, r1, #16
 801a22c:	fb06 4202 	mla	r2, r6, r2, r4
 801a230:	9c01      	ldr	r4, [sp, #4]
 801a232:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801a236:	0e22      	lsrs	r2, r4, #24
 801a238:	d016      	beq.n	801a268 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801a23a:	9e04      	ldr	r6, [sp, #16]
 801a23c:	4372      	muls	r2, r6
 801a23e:	1c56      	adds	r6, r2, #1
 801a240:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a244:	1212      	asrs	r2, r2, #8
 801a246:	2aff      	cmp	r2, #255	; 0xff
 801a248:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801a24c:	d113      	bne.n	801a276 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801a24e:	0962      	lsrs	r2, r4, #5
 801a250:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a254:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a258:	f026 0607 	bic.w	r6, r6, #7
 801a25c:	4316      	orrs	r6, r2
 801a25e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a262:	4326      	orrs	r6, r4
 801a264:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801a268:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a26a:	4410      	add	r0, r2
 801a26c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a26e:	f108 0801 	add.w	r8, r8, #1
 801a272:	4411      	add	r1, r2
 801a274:	e7d1      	b.n	801a21a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801a276:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801a27a:	fa1f fa82 	uxth.w	sl, r2
 801a27e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a282:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801a286:	43d2      	mvns	r2, r2
 801a288:	b2d2      	uxtb	r2, r2
 801a28a:	fb17 f70a 	smulbb	r7, r7, sl
 801a28e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a292:	fb0c 7c02 	mla	ip, ip, r2, r7
 801a296:	b2e4      	uxtb	r4, r4
 801a298:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a29c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a2a0:	fa5f fe8e 	uxtb.w	lr, lr
 801a2a4:	fb14 f40a 	smulbb	r4, r4, sl
 801a2a8:	fb0e 4402 	mla	r4, lr, r2, r4
 801a2ac:	b2f6      	uxtb	r6, r6
 801a2ae:	fa1f fc8c 	uxth.w	ip, ip
 801a2b2:	fb16 f60a 	smulbb	r6, r6, sl
 801a2b6:	b2a4      	uxth	r4, r4
 801a2b8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a2bc:	fb07 6702 	mla	r7, r7, r2, r6
 801a2c0:	f10c 0201 	add.w	r2, ip, #1
 801a2c4:	1c66      	adds	r6, r4, #1
 801a2c6:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a2ca:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a2ce:	b2bf      	uxth	r7, r7
 801a2d0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a2d4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a2d8:	ea46 0c0c 	orr.w	ip, r6, ip
 801a2dc:	1c7e      	adds	r6, r7, #1
 801a2de:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801a2e2:	0976      	lsrs	r6, r6, #5
 801a2e4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a2e8:	ea4c 0c06 	orr.w	ip, ip, r6
 801a2ec:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801a2f0:	e7ba      	b.n	801a268 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801a2f2:	b007      	add	sp, #28
 801a2f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a2f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a2f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a2fc:	b085      	sub	sp, #20
 801a2fe:	468b      	mov	fp, r1
 801a300:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a302:	9203      	str	r2, [sp, #12]
 801a304:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a308:	6841      	ldr	r1, [r0, #4]
 801a30a:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801a30e:	fb01 2404 	mla	r4, r1, r4, r2
 801a312:	6802      	ldr	r2, [r0, #0]
 801a314:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a318:	f8d8 2000 	ldr.w	r2, [r8]
 801a31c:	9201      	str	r2, [sp, #4]
 801a31e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a322:	f1bb 0f00 	cmp.w	fp, #0
 801a326:	dc03      	bgt.n	801a330 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a328:	9a03      	ldr	r2, [sp, #12]
 801a32a:	2a00      	cmp	r2, #0
 801a32c:	f340 814f 	ble.w	801a5ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a330:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a332:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801a336:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801a33a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a33e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a340:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a344:	2b00      	cmp	r3, #0
 801a346:	dd0e      	ble.n	801a366 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a348:	1408      	asrs	r0, r1, #16
 801a34a:	d405      	bmi.n	801a358 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a34c:	42b8      	cmp	r0, r7
 801a34e:	da03      	bge.n	801a358 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a350:	1410      	asrs	r0, r2, #16
 801a352:	d401      	bmi.n	801a358 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a354:	42b0      	cmp	r0, r6
 801a356:	db07      	blt.n	801a368 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a358:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a35a:	4401      	add	r1, r0
 801a35c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a35e:	3b01      	subs	r3, #1
 801a360:	4402      	add	r2, r0
 801a362:	3402      	adds	r4, #2
 801a364:	e7ee      	b.n	801a344 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a366:	d017      	beq.n	801a398 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a368:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a36a:	1e58      	subs	r0, r3, #1
 801a36c:	fb05 1500 	mla	r5, r5, r0, r1
 801a370:	142d      	asrs	r5, r5, #16
 801a372:	d409      	bmi.n	801a388 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a374:	42bd      	cmp	r5, r7
 801a376:	da07      	bge.n	801a388 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a378:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a37a:	fb05 2000 	mla	r0, r5, r0, r2
 801a37e:	1400      	asrs	r0, r0, #16
 801a380:	d402      	bmi.n	801a388 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a382:	42b0      	cmp	r0, r6
 801a384:	f2c0 80ba 	blt.w	801a4fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a388:	2600      	movs	r6, #0
 801a38a:	1998      	adds	r0, r3, r6
 801a38c:	2800      	cmp	r0, #0
 801a38e:	dc3e      	bgt.n	801a40e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a390:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a394:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a398:	f1bb 0f00 	cmp.w	fp, #0
 801a39c:	f340 8117 	ble.w	801a5ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a3a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a3a4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a3a8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a3ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a3ae:	f1bb 0b01 	subs.w	fp, fp, #1
 801a3b2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a3b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a3ba:	eeb0 6a62 	vmov.f32	s12, s5
 801a3be:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a3c2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a3c6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a3ca:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a3ce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a3d2:	eeb0 6a43 	vmov.f32	s12, s6
 801a3d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a3da:	ee12 2a90 	vmov	r2, s5
 801a3de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a3e2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a3e6:	ee13 2a10 	vmov	r2, s6
 801a3ea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a3ee:	9311      	str	r3, [sp, #68]	; 0x44
 801a3f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a3f2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a3f6:	9a03      	ldr	r2, [sp, #12]
 801a3f8:	9312      	str	r3, [sp, #72]	; 0x48
 801a3fa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a3fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a400:	eeb0 3a67 	vmov.f32	s6, s15
 801a404:	bf08      	it	eq
 801a406:	4613      	moveq	r3, r2
 801a408:	eef0 2a47 	vmov.f32	s5, s14
 801a40c:	e789      	b.n	801a322 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a40e:	140f      	asrs	r7, r1, #16
 801a410:	d424      	bmi.n	801a45c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a412:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801a416:	42bd      	cmp	r5, r7
 801a418:	dd20      	ble.n	801a45c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a41a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a41e:	d41d      	bmi.n	801a45c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a420:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801a424:	4560      	cmp	r0, ip
 801a426:	dd19      	ble.n	801a45c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a428:	b22d      	sxth	r5, r5
 801a42a:	fb0c 7505 	mla	r5, ip, r5, r7
 801a42e:	9801      	ldr	r0, [sp, #4]
 801a430:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801a434:	0e07      	lsrs	r7, r0, #24
 801a436:	2fff      	cmp	r7, #255	; 0xff
 801a438:	d116      	bne.n	801a468 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a43a:	f06f 0501 	mvn.w	r5, #1
 801a43e:	fb05 f706 	mul.w	r7, r5, r6
 801a442:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a446:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a44a:	0945      	lsrs	r5, r0, #5
 801a44c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a450:	ea4c 0505 	orr.w	r5, ip, r5
 801a454:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a458:	4305      	orrs	r5, r0
 801a45a:	53e5      	strh	r5, [r4, r7]
 801a45c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a45e:	4401      	add	r1, r0
 801a460:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a462:	3e01      	subs	r6, #1
 801a464:	4402      	add	r2, r0
 801a466:	e790      	b.n	801a38a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a468:	b2fd      	uxtb	r5, r7
 801a46a:	2f00      	cmp	r7, #0
 801a46c:	d0f6      	beq.n	801a45c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a46e:	f06f 0701 	mvn.w	r7, #1
 801a472:	4377      	muls	r7, r6
 801a474:	fa1f f985 	uxth.w	r9, r5
 801a478:	f834 e007 	ldrh.w	lr, [r4, r7]
 801a47c:	9702      	str	r7, [sp, #8]
 801a47e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a482:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a486:	43ed      	mvns	r5, r5
 801a488:	b2ed      	uxtb	r5, r5
 801a48a:	fb17 f709 	smulbb	r7, r7, r9
 801a48e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a492:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a496:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a49a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a49e:	b2c0      	uxtb	r0, r0
 801a4a0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a4a4:	fa5f fe8e 	uxtb.w	lr, lr
 801a4a8:	fb10 f009 	smulbb	r0, r0, r9
 801a4ac:	fb0e 0005 	mla	r0, lr, r5, r0
 801a4b0:	b280      	uxth	r0, r0
 801a4b2:	fa1f fc8c 	uxth.w	ip, ip
 801a4b6:	fb1a fa09 	smulbb	sl, sl, r9
 801a4ba:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a4be:	fb07 a705 	mla	r7, r7, r5, sl
 801a4c2:	f100 0a01 	add.w	sl, r0, #1
 801a4c6:	f10c 0501 	add.w	r5, ip, #1
 801a4ca:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a4ce:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a4d2:	b2bf      	uxth	r7, r7
 801a4d4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a4d8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a4dc:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a4e0:	f107 0a01 	add.w	sl, r7, #1
 801a4e4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a4e8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a4ec:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a4f0:	9802      	ldr	r0, [sp, #8]
 801a4f2:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a4f6:	f824 c000 	strh.w	ip, [r4, r0]
 801a4fa:	e7af      	b.n	801a45c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a4fc:	f04f 0e00 	mov.w	lr, #0
 801a500:	eba3 000e 	sub.w	r0, r3, lr
 801a504:	2800      	cmp	r0, #0
 801a506:	f77f af43 	ble.w	801a390 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a50a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801a50e:	140d      	asrs	r5, r1, #16
 801a510:	1410      	asrs	r0, r2, #16
 801a512:	fb06 5000 	mla	r0, r6, r0, r5
 801a516:	9d01      	ldr	r5, [sp, #4]
 801a518:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a51c:	0e2e      	lsrs	r6, r5, #24
 801a51e:	2eff      	cmp	r6, #255	; 0xff
 801a520:	d112      	bne.n	801a548 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801a522:	482c      	ldr	r0, [pc, #176]	; (801a5d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801a524:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a528:	0968      	lsrs	r0, r5, #5
 801a52a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a52e:	4330      	orrs	r0, r6
 801a530:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a534:	4328      	orrs	r0, r5
 801a536:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801a53a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a53c:	4401      	add	r1, r0
 801a53e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a540:	f10e 0e01 	add.w	lr, lr, #1
 801a544:	4402      	add	r2, r0
 801a546:	e7db      	b.n	801a500 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801a548:	b2f0      	uxtb	r0, r6
 801a54a:	2e00      	cmp	r6, #0
 801a54c:	d0f5      	beq.n	801a53a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a54e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801a552:	fa1f f980 	uxth.w	r9, r0
 801a556:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a55a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a55e:	43c0      	mvns	r0, r0
 801a560:	b2c0      	uxtb	r0, r0
 801a562:	fb16 f609 	smulbb	r6, r6, r9
 801a566:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a56a:	fb07 6700 	mla	r7, r7, r0, r6
 801a56e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a572:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a576:	b2ed      	uxtb	r5, r5
 801a578:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a57c:	fa5f fc8c 	uxtb.w	ip, ip
 801a580:	fb15 f509 	smulbb	r5, r5, r9
 801a584:	fb0c 5500 	mla	r5, ip, r0, r5
 801a588:	b2bf      	uxth	r7, r7
 801a58a:	fb1a fa09 	smulbb	sl, sl, r9
 801a58e:	b2ad      	uxth	r5, r5
 801a590:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a594:	fb06 a600 	mla	r6, r6, r0, sl
 801a598:	1c78      	adds	r0, r7, #1
 801a59a:	f105 0a01 	add.w	sl, r5, #1
 801a59e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a5a2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a5a6:	b2b6      	uxth	r6, r6
 801a5a8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a5ac:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a5b0:	ea4a 0707 	orr.w	r7, sl, r7
 801a5b4:	f106 0a01 	add.w	sl, r6, #1
 801a5b8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a5bc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a5c0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a5c4:	ea47 070a 	orr.w	r7, r7, sl
 801a5c8:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801a5cc:	e7b5      	b.n	801a53a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a5ce:	b005      	add	sp, #20
 801a5d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a5d4:	fffff800 	.word	0xfffff800

0801a5d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a5d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a5dc:	b087      	sub	sp, #28
 801a5de:	468b      	mov	fp, r1
 801a5e0:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a5e2:	9203      	str	r2, [sp, #12]
 801a5e4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a5e8:	9204      	str	r2, [sp, #16]
 801a5ea:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a5ee:	6841      	ldr	r1, [r0, #4]
 801a5f0:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a5f4:	fb01 2404 	mla	r4, r1, r4, r2
 801a5f8:	6802      	ldr	r2, [r0, #0]
 801a5fa:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a5fe:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a602:	3201      	adds	r2, #1
 801a604:	f022 0201 	bic.w	r2, r2, #1
 801a608:	9200      	str	r2, [sp, #0]
 801a60a:	f8d9 2000 	ldr.w	r2, [r9]
 801a60e:	9201      	str	r2, [sp, #4]
 801a610:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a614:	f1bb 0f00 	cmp.w	fp, #0
 801a618:	dc03      	bgt.n	801a622 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a61a:	9a03      	ldr	r2, [sp, #12]
 801a61c:	2a00      	cmp	r2, #0
 801a61e:	f340 8169 	ble.w	801a8f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a622:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a624:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a628:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a62c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a630:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a632:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a636:	2b00      	cmp	r3, #0
 801a638:	dd0e      	ble.n	801a658 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a63a:	1402      	asrs	r2, r0, #16
 801a63c:	d405      	bmi.n	801a64a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a63e:	42ba      	cmp	r2, r7
 801a640:	da03      	bge.n	801a64a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a642:	140a      	asrs	r2, r1, #16
 801a644:	d401      	bmi.n	801a64a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a646:	42b2      	cmp	r2, r6
 801a648:	db07      	blt.n	801a65a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801a64a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a64c:	4410      	add	r0, r2
 801a64e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a650:	3b01      	subs	r3, #1
 801a652:	4411      	add	r1, r2
 801a654:	3402      	adds	r4, #2
 801a656:	e7ee      	b.n	801a636 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a658:	d017      	beq.n	801a68a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a65a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a65c:	1e5a      	subs	r2, r3, #1
 801a65e:	fb05 0502 	mla	r5, r5, r2, r0
 801a662:	142d      	asrs	r5, r5, #16
 801a664:	d409      	bmi.n	801a67a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a666:	42bd      	cmp	r5, r7
 801a668:	da07      	bge.n	801a67a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a66a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a66c:	fb05 1202 	mla	r2, r5, r2, r1
 801a670:	1412      	asrs	r2, r2, #16
 801a672:	d402      	bmi.n	801a67a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a674:	42b2      	cmp	r2, r6
 801a676:	f2c0 80c7 	blt.w	801a808 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801a67a:	2700      	movs	r7, #0
 801a67c:	19da      	adds	r2, r3, r7
 801a67e:	2a00      	cmp	r2, #0
 801a680:	dc3e      	bgt.n	801a700 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a682:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a686:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a68a:	f1bb 0f00 	cmp.w	fp, #0
 801a68e:	f340 8131 	ble.w	801a8f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a692:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a696:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a69a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a69e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a6a0:	f1bb 0b01 	subs.w	fp, fp, #1
 801a6a4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a6a8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a6ac:	eeb0 6a62 	vmov.f32	s12, s5
 801a6b0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a6b4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a6b8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a6bc:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a6c0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a6c4:	eeb0 6a43 	vmov.f32	s12, s6
 801a6c8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a6cc:	ee12 2a90 	vmov	r2, s5
 801a6d0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a6d4:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6d8:	ee13 2a10 	vmov	r2, s6
 801a6dc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a6e0:	9313      	str	r3, [sp, #76]	; 0x4c
 801a6e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a6e4:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6e8:	9a03      	ldr	r2, [sp, #12]
 801a6ea:	9314      	str	r3, [sp, #80]	; 0x50
 801a6ec:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a6f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a6f2:	eeb0 3a67 	vmov.f32	s6, s15
 801a6f6:	bf08      	it	eq
 801a6f8:	4613      	moveq	r3, r2
 801a6fa:	eef0 2a47 	vmov.f32	s5, s14
 801a6fe:	e789      	b.n	801a614 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a700:	1405      	asrs	r5, r0, #16
 801a702:	d435      	bmi.n	801a770 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a704:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a708:	42aa      	cmp	r2, r5
 801a70a:	dd31      	ble.n	801a770 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a70c:	140e      	asrs	r6, r1, #16
 801a70e:	d42f      	bmi.n	801a770 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a710:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a714:	42b2      	cmp	r2, r6
 801a716:	dd2b      	ble.n	801a770 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a718:	9a00      	ldr	r2, [sp, #0]
 801a71a:	fb06 5502 	mla	r5, r6, r2, r5
 801a71e:	086a      	lsrs	r2, r5, #1
 801a720:	9e01      	ldr	r6, [sp, #4]
 801a722:	5cb2      	ldrb	r2, [r6, r2]
 801a724:	07ee      	lsls	r6, r5, #31
 801a726:	bf54      	ite	pl
 801a728:	f002 020f 	andpl.w	r2, r2, #15
 801a72c:	1112      	asrmi	r2, r2, #4
 801a72e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a732:	b2d2      	uxtb	r2, r2
 801a734:	b1e2      	cbz	r2, 801a770 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a736:	9d04      	ldr	r5, [sp, #16]
 801a738:	436a      	muls	r2, r5
 801a73a:	1c55      	adds	r5, r2, #1
 801a73c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801a740:	4d6e      	ldr	r5, [pc, #440]	; (801a8fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801a742:	682d      	ldr	r5, [r5, #0]
 801a744:	1212      	asrs	r2, r2, #8
 801a746:	0a2e      	lsrs	r6, r5, #8
 801a748:	2aff      	cmp	r2, #255	; 0xff
 801a74a:	9605      	str	r6, [sp, #20]
 801a74c:	d116      	bne.n	801a77c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801a74e:	f06f 0201 	mvn.w	r2, #1
 801a752:	fb02 fc07 	mul.w	ip, r2, r7
 801a756:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a75a:	096a      	lsrs	r2, r5, #5
 801a75c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a760:	f026 0607 	bic.w	r6, r6, #7
 801a764:	4316      	orrs	r6, r2
 801a766:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a76a:	432e      	orrs	r6, r5
 801a76c:	f824 600c 	strh.w	r6, [r4, ip]
 801a770:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a772:	4410      	add	r0, r2
 801a774:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a776:	3f01      	subs	r7, #1
 801a778:	4411      	add	r1, r2
 801a77a:	e77f      	b.n	801a67c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801a77c:	f06f 0601 	mvn.w	r6, #1
 801a780:	437e      	muls	r6, r7
 801a782:	fa1f fa82 	uxth.w	sl, r2
 801a786:	f834 8006 	ldrh.w	r8, [r4, r6]
 801a78a:	9602      	str	r6, [sp, #8]
 801a78c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a790:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801a794:	43d2      	mvns	r2, r2
 801a796:	b2d2      	uxtb	r2, r2
 801a798:	fb1c fc0a 	smulbb	ip, ip, sl
 801a79c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a7a0:	fb0e ce02 	mla	lr, lr, r2, ip
 801a7a4:	b2ed      	uxtb	r5, r5
 801a7a6:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a7aa:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a7ae:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a7b2:	fa5f f888 	uxtb.w	r8, r8
 801a7b6:	fb15 f50a 	smulbb	r5, r5, sl
 801a7ba:	fb08 5502 	mla	r5, r8, r2, r5
 801a7be:	fa1f fe8e 	uxth.w	lr, lr
 801a7c2:	fb16 f60a 	smulbb	r6, r6, sl
 801a7c6:	b2ad      	uxth	r5, r5
 801a7c8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a7cc:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a7d0:	f10e 0201 	add.w	r2, lr, #1
 801a7d4:	1c6e      	adds	r6, r5, #1
 801a7d6:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a7da:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801a7de:	fa1f fc8c 	uxth.w	ip, ip
 801a7e2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a7e6:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a7ea:	ea46 0e0e 	orr.w	lr, r6, lr
 801a7ee:	f10c 0601 	add.w	r6, ip, #1
 801a7f2:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801a7f6:	0976      	lsrs	r6, r6, #5
 801a7f8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a7fc:	9a02      	ldr	r2, [sp, #8]
 801a7fe:	ea4e 0e06 	orr.w	lr, lr, r6
 801a802:	f824 e002 	strh.w	lr, [r4, r2]
 801a806:	e7b3      	b.n	801a770 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a808:	f04f 0800 	mov.w	r8, #0
 801a80c:	eba3 0208 	sub.w	r2, r3, r8
 801a810:	2a00      	cmp	r2, #0
 801a812:	f77f af36 	ble.w	801a682 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801a816:	9e00      	ldr	r6, [sp, #0]
 801a818:	1402      	asrs	r2, r0, #16
 801a81a:	140d      	asrs	r5, r1, #16
 801a81c:	fb06 2505 	mla	r5, r6, r5, r2
 801a820:	086a      	lsrs	r2, r5, #1
 801a822:	9e01      	ldr	r6, [sp, #4]
 801a824:	5cb2      	ldrb	r2, [r6, r2]
 801a826:	07ed      	lsls	r5, r5, #31
 801a828:	bf54      	ite	pl
 801a82a:	f002 020f 	andpl.w	r2, r2, #15
 801a82e:	1112      	asrmi	r2, r2, #4
 801a830:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a834:	b2d2      	uxtb	r2, r2
 801a836:	b1c2      	cbz	r2, 801a86a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801a838:	9d04      	ldr	r5, [sp, #16]
 801a83a:	436a      	muls	r2, r5
 801a83c:	1c55      	adds	r5, r2, #1
 801a83e:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801a842:	4d2e      	ldr	r5, [pc, #184]	; (801a8fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801a844:	1212      	asrs	r2, r2, #8
 801a846:	682e      	ldr	r6, [r5, #0]
 801a848:	2aff      	cmp	r2, #255	; 0xff
 801a84a:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801a84e:	d113      	bne.n	801a878 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801a850:	0972      	lsrs	r2, r6, #5
 801a852:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801a856:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a85a:	f025 0507 	bic.w	r5, r5, #7
 801a85e:	4315      	orrs	r5, r2
 801a860:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801a864:	4335      	orrs	r5, r6
 801a866:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801a86a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a86c:	4410      	add	r0, r2
 801a86e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a870:	f108 0801 	add.w	r8, r8, #1
 801a874:	4411      	add	r1, r2
 801a876:	e7c9      	b.n	801a80c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a878:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801a87c:	fa1f fa82 	uxth.w	sl, r2
 801a880:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a884:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801a888:	43d2      	mvns	r2, r2
 801a88a:	b2d2      	uxtb	r2, r2
 801a88c:	fb17 f70a 	smulbb	r7, r7, sl
 801a890:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a894:	fb0c 7c02 	mla	ip, ip, r2, r7
 801a898:	b2f6      	uxtb	r6, r6
 801a89a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a89e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a8a2:	fa5f fe8e 	uxtb.w	lr, lr
 801a8a6:	fb16 f60a 	smulbb	r6, r6, sl
 801a8aa:	fb0e 6602 	mla	r6, lr, r2, r6
 801a8ae:	b2ed      	uxtb	r5, r5
 801a8b0:	fa1f fc8c 	uxth.w	ip, ip
 801a8b4:	fb15 f50a 	smulbb	r5, r5, sl
 801a8b8:	b2b6      	uxth	r6, r6
 801a8ba:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a8be:	fb07 5702 	mla	r7, r7, r2, r5
 801a8c2:	f10c 0201 	add.w	r2, ip, #1
 801a8c6:	1c75      	adds	r5, r6, #1
 801a8c8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a8cc:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801a8d0:	b2bf      	uxth	r7, r7
 801a8d2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a8d6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a8da:	ea45 0c0c 	orr.w	ip, r5, ip
 801a8de:	1c7d      	adds	r5, r7, #1
 801a8e0:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801a8e4:	096d      	lsrs	r5, r5, #5
 801a8e6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a8ea:	ea4c 0c05 	orr.w	ip, ip, r5
 801a8ee:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801a8f2:	e7ba      	b.n	801a86a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801a8f4:	b007      	add	sp, #28
 801a8f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a8fa:	bf00      	nop
 801a8fc:	200137e4 	.word	0x200137e4

0801a900 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a900:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a904:	b087      	sub	sp, #28
 801a906:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801ac14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801a90a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a90c:	9205      	str	r2, [sp, #20]
 801a90e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a912:	9101      	str	r1, [sp, #4]
 801a914:	6841      	ldr	r1, [r0, #4]
 801a916:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801a91a:	fb01 2404 	mla	r4, r1, r4, r2
 801a91e:	6802      	ldr	r2, [r0, #0]
 801a920:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a924:	f8db 2008 	ldr.w	r2, [fp, #8]
 801a928:	3201      	adds	r2, #1
 801a92a:	f022 0201 	bic.w	r2, r2, #1
 801a92e:	9202      	str	r2, [sp, #8]
 801a930:	f8db 2000 	ldr.w	r2, [fp]
 801a934:	9203      	str	r2, [sp, #12]
 801a936:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a93a:	9a01      	ldr	r2, [sp, #4]
 801a93c:	2a00      	cmp	r2, #0
 801a93e:	dc03      	bgt.n	801a948 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a940:	9a05      	ldr	r2, [sp, #20]
 801a942:	2a00      	cmp	r2, #0
 801a944:	f340 8162 	ble.w	801ac0c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a948:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a94a:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801a94e:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801a952:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a956:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a958:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a95c:	2b00      	cmp	r3, #0
 801a95e:	dd0e      	ble.n	801a97e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a960:	1402      	asrs	r2, r0, #16
 801a962:	d405      	bmi.n	801a970 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a964:	42ba      	cmp	r2, r7
 801a966:	da03      	bge.n	801a970 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a968:	140a      	asrs	r2, r1, #16
 801a96a:	d401      	bmi.n	801a970 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a96c:	42b2      	cmp	r2, r6
 801a96e:	db07      	blt.n	801a980 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a970:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a972:	4410      	add	r0, r2
 801a974:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a976:	3b01      	subs	r3, #1
 801a978:	4411      	add	r1, r2
 801a97a:	3402      	adds	r4, #2
 801a97c:	e7ee      	b.n	801a95c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801a97e:	d017      	beq.n	801a9b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801a980:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a982:	1e5a      	subs	r2, r3, #1
 801a984:	fb05 0502 	mla	r5, r5, r2, r0
 801a988:	142d      	asrs	r5, r5, #16
 801a98a:	d409      	bmi.n	801a9a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a98c:	42bd      	cmp	r5, r7
 801a98e:	da07      	bge.n	801a9a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a990:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a992:	fb05 1202 	mla	r2, r5, r2, r1
 801a996:	1412      	asrs	r2, r2, #16
 801a998:	d402      	bmi.n	801a9a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a99a:	42b2      	cmp	r2, r6
 801a99c:	f2c0 80c3 	blt.w	801ab26 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801a9a0:	2500      	movs	r5, #0
 801a9a2:	195a      	adds	r2, r3, r5
 801a9a4:	2a00      	cmp	r2, #0
 801a9a6:	dc3f      	bgt.n	801aa28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a9a8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a9ac:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a9b0:	9b01      	ldr	r3, [sp, #4]
 801a9b2:	2b00      	cmp	r3, #0
 801a9b4:	f340 812a 	ble.w	801ac0c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a9b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a9bc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a9c0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a9c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a9c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a9ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a9ce:	eeb0 6a62 	vmov.f32	s12, s5
 801a9d2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a9d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a9da:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a9de:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a9e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a9e6:	eeb0 6a43 	vmov.f32	s12, s6
 801a9ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a9ee:	ee12 2a90 	vmov	r2, s5
 801a9f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a9f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801a9fa:	ee13 2a10 	vmov	r2, s6
 801a9fe:	9313      	str	r3, [sp, #76]	; 0x4c
 801aa00:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aa02:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa06:	9314      	str	r3, [sp, #80]	; 0x50
 801aa08:	9b01      	ldr	r3, [sp, #4]
 801aa0a:	9a05      	ldr	r2, [sp, #20]
 801aa0c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aa10:	3b01      	subs	r3, #1
 801aa12:	9301      	str	r3, [sp, #4]
 801aa14:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801aa18:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aa1a:	eeb0 3a67 	vmov.f32	s6, s15
 801aa1e:	bf08      	it	eq
 801aa20:	4613      	moveq	r3, r2
 801aa22:	eef0 2a47 	vmov.f32	s5, s14
 801aa26:	e788      	b.n	801a93a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801aa28:	1406      	asrs	r6, r0, #16
 801aa2a:	d42c      	bmi.n	801aa86 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aa2c:	f8db 2008 	ldr.w	r2, [fp, #8]
 801aa30:	42b2      	cmp	r2, r6
 801aa32:	dd28      	ble.n	801aa86 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aa34:	140f      	asrs	r7, r1, #16
 801aa36:	d426      	bmi.n	801aa86 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aa38:	f8db 200c 	ldr.w	r2, [fp, #12]
 801aa3c:	42ba      	cmp	r2, r7
 801aa3e:	dd22      	ble.n	801aa86 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aa40:	9a02      	ldr	r2, [sp, #8]
 801aa42:	fb07 6602 	mla	r6, r7, r2, r6
 801aa46:	0872      	lsrs	r2, r6, #1
 801aa48:	9f03      	ldr	r7, [sp, #12]
 801aa4a:	5cba      	ldrb	r2, [r7, r2]
 801aa4c:	07f6      	lsls	r6, r6, #31
 801aa4e:	bf54      	ite	pl
 801aa50:	f002 020f 	andpl.w	r2, r2, #15
 801aa54:	1112      	asrmi	r2, r2, #4
 801aa56:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801aa5a:	b2d2      	uxtb	r2, r2
 801aa5c:	2aff      	cmp	r2, #255	; 0xff
 801aa5e:	d118      	bne.n	801aa92 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801aa60:	f8d8 2000 	ldr.w	r2, [r8]
 801aa64:	f06f 0601 	mvn.w	r6, #1
 801aa68:	fb06 f705 	mul.w	r7, r6, r5
 801aa6c:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801aa70:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801aa74:	0956      	lsrs	r6, r2, #5
 801aa76:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801aa7a:	ea4c 0606 	orr.w	r6, ip, r6
 801aa7e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801aa82:	4316      	orrs	r6, r2
 801aa84:	53e6      	strh	r6, [r4, r7]
 801aa86:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aa88:	4410      	add	r0, r2
 801aa8a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aa8c:	3d01      	subs	r5, #1
 801aa8e:	4411      	add	r1, r2
 801aa90:	e787      	b.n	801a9a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801aa92:	2a00      	cmp	r2, #0
 801aa94:	d0f7      	beq.n	801aa86 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aa96:	f06f 0601 	mvn.w	r6, #1
 801aa9a:	436e      	muls	r6, r5
 801aa9c:	f8d8 c000 	ldr.w	ip, [r8]
 801aaa0:	f834 e006 	ldrh.w	lr, [r4, r6]
 801aaa4:	9604      	str	r6, [sp, #16]
 801aaa6:	fa1f f982 	uxth.w	r9, r2
 801aaaa:	ea4f 272e 	mov.w	r7, lr, asr #8
 801aaae:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801aab2:	43d2      	mvns	r2, r2
 801aab4:	b2d2      	uxtb	r2, r2
 801aab6:	fb16 f609 	smulbb	r6, r6, r9
 801aaba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801aabe:	fb07 6702 	mla	r7, r7, r2, r6
 801aac2:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801aac6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801aaca:	fa5f fc8c 	uxtb.w	ip, ip
 801aace:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801aad2:	fa5f fe8e 	uxtb.w	lr, lr
 801aad6:	fb1c fc09 	smulbb	ip, ip, r9
 801aada:	fb0e cc02 	mla	ip, lr, r2, ip
 801aade:	b2bf      	uxth	r7, r7
 801aae0:	fb1a fa09 	smulbb	sl, sl, r9
 801aae4:	fa1f fc8c 	uxth.w	ip, ip
 801aae8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801aaec:	fb06 a602 	mla	r6, r6, r2, sl
 801aaf0:	1c7a      	adds	r2, r7, #1
 801aaf2:	f10c 0a01 	add.w	sl, ip, #1
 801aaf6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801aafa:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801aafe:	b2b6      	uxth	r6, r6
 801ab00:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ab04:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ab08:	ea4a 0707 	orr.w	r7, sl, r7
 801ab0c:	f106 0a01 	add.w	sl, r6, #1
 801ab10:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ab14:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ab18:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ab1c:	9a04      	ldr	r2, [sp, #16]
 801ab1e:	ea47 070a 	orr.w	r7, r7, sl
 801ab22:	52a7      	strh	r7, [r4, r2]
 801ab24:	e7af      	b.n	801aa86 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ab26:	f04f 0e00 	mov.w	lr, #0
 801ab2a:	eba3 020e 	sub.w	r2, r3, lr
 801ab2e:	2a00      	cmp	r2, #0
 801ab30:	f77f af3a 	ble.w	801a9a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801ab34:	9e02      	ldr	r6, [sp, #8]
 801ab36:	1402      	asrs	r2, r0, #16
 801ab38:	140d      	asrs	r5, r1, #16
 801ab3a:	fb06 2505 	mla	r5, r6, r5, r2
 801ab3e:	086a      	lsrs	r2, r5, #1
 801ab40:	9e03      	ldr	r6, [sp, #12]
 801ab42:	5cb2      	ldrb	r2, [r6, r2]
 801ab44:	07ed      	lsls	r5, r5, #31
 801ab46:	bf54      	ite	pl
 801ab48:	f002 020f 	andpl.w	r2, r2, #15
 801ab4c:	1112      	asrmi	r2, r2, #4
 801ab4e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ab52:	b2d2      	uxtb	r2, r2
 801ab54:	2aff      	cmp	r2, #255	; 0xff
 801ab56:	d115      	bne.n	801ab84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801ab58:	f8d8 5000 	ldr.w	r5, [r8]
 801ab5c:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801ab60:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801ab64:	096a      	lsrs	r2, r5, #5
 801ab66:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ab6a:	4332      	orrs	r2, r6
 801ab6c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ab70:	432a      	orrs	r2, r5
 801ab72:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801ab76:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ab78:	4410      	add	r0, r2
 801ab7a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ab7c:	f10e 0e01 	add.w	lr, lr, #1
 801ab80:	4411      	add	r1, r2
 801ab82:	e7d2      	b.n	801ab2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ab84:	2a00      	cmp	r2, #0
 801ab86:	d0f6      	beq.n	801ab76 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ab88:	f8d8 7000 	ldr.w	r7, [r8]
 801ab8c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801ab90:	fa1f f982 	uxth.w	r9, r2
 801ab94:	ea4f 262c 	mov.w	r6, ip, asr #8
 801ab98:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801ab9c:	43d2      	mvns	r2, r2
 801ab9e:	b2d2      	uxtb	r2, r2
 801aba0:	fb15 f509 	smulbb	r5, r5, r9
 801aba4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801aba8:	fb06 5602 	mla	r6, r6, r2, r5
 801abac:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801abb0:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801abb4:	b2ff      	uxtb	r7, r7
 801abb6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801abba:	fa5f fc8c 	uxtb.w	ip, ip
 801abbe:	fb17 f709 	smulbb	r7, r7, r9
 801abc2:	fb0c 7702 	mla	r7, ip, r2, r7
 801abc6:	b2b6      	uxth	r6, r6
 801abc8:	fb1a fa09 	smulbb	sl, sl, r9
 801abcc:	b2bf      	uxth	r7, r7
 801abce:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801abd2:	fb05 a502 	mla	r5, r5, r2, sl
 801abd6:	1c72      	adds	r2, r6, #1
 801abd8:	f107 0a01 	add.w	sl, r7, #1
 801abdc:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801abe0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801abe4:	b2ad      	uxth	r5, r5
 801abe6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801abea:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801abee:	ea4a 0606 	orr.w	r6, sl, r6
 801abf2:	f105 0a01 	add.w	sl, r5, #1
 801abf6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801abfa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801abfe:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ac02:	ea46 060a 	orr.w	r6, r6, sl
 801ac06:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801ac0a:	e7b4      	b.n	801ab76 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ac0c:	b007      	add	sp, #28
 801ac0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ac12:	bf00      	nop
 801ac14:	200137e4 	.word	0x200137e4

0801ac18 <_ZN8touchgfx8LCD16bppD1Ev>:
 801ac18:	4770      	bx	lr

0801ac1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801ac1a:	4770      	bx	lr

0801ac1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801ac1c:	4770      	bx	lr

0801ac1e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801ac1e:	4770      	bx	lr

0801ac20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801ac20:	4770      	bx	lr

0801ac22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801ac22:	4770      	bx	lr

0801ac24 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801ac24:	4770      	bx	lr

0801ac26 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801ac26:	4770      	bx	lr

0801ac28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ac28:	4770      	bx	lr

0801ac2a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ac2a:	4770      	bx	lr

0801ac2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ac2c:	4770      	bx	lr

0801ac2e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ac2e:	4770      	bx	lr

0801ac30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ac30:	4770      	bx	lr

0801ac32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801ac32:	4770      	bx	lr

0801ac34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ac34:	4770      	bx	lr

0801ac36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ac36:	4770      	bx	lr

0801ac38 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ac38:	4770      	bx	lr

0801ac3a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801ac3a:	4770      	bx	lr

0801ac3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ac3c:	4770      	bx	lr

0801ac3e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ac3e:	4770      	bx	lr

0801ac40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ac40:	4770      	bx	lr

0801ac42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ac42:	4770      	bx	lr

0801ac44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ac44:	4770      	bx	lr

0801ac46 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ac46:	4770      	bx	lr

0801ac48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ac48:	4770      	bx	lr

0801ac4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801ac4a:	4770      	bx	lr

0801ac4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ac4c:	4770      	bx	lr

0801ac4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801ac4e:	4770      	bx	lr

0801ac50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ac50:	4770      	bx	lr

0801ac52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801ac52:	4770      	bx	lr

0801ac54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ac54:	4770      	bx	lr

0801ac56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801ac56:	4770      	bx	lr

0801ac58 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801ac58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ac5c:	b088      	sub	sp, #32
 801ac5e:	ac08      	add	r4, sp, #32
 801ac60:	4606      	mov	r6, r0
 801ac62:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801ac66:	4620      	mov	r0, r4
 801ac68:	4688      	mov	r8, r1
 801ac6a:	4691      	mov	r9, r2
 801ac6c:	f7fd fc62 	bl	8018534 <_ZNK8touchgfx6Bitmap7getDataEv>
 801ac70:	6833      	ldr	r3, [r6, #0]
 801ac72:	4605      	mov	r5, r0
 801ac74:	4620      	mov	r0, r4
 801ac76:	699f      	ldr	r7, [r3, #24]
 801ac78:	f7fd fb70 	bl	801835c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801ac7c:	4682      	mov	sl, r0
 801ac7e:	4620      	mov	r0, r4
 801ac80:	f7fd fba0 	bl	80183c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801ac84:	9500      	str	r5, [sp, #0]
 801ac86:	e9cd a001 	strd	sl, r0, [sp, #4]
 801ac8a:	464b      	mov	r3, r9
 801ac8c:	a806      	add	r0, sp, #24
 801ac8e:	4642      	mov	r2, r8
 801ac90:	4631      	mov	r1, r6
 801ac92:	47b8      	blx	r7
 801ac94:	4628      	mov	r0, r5
 801ac96:	b008      	add	sp, #32
 801ac98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801ac9c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801ac9c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801aca0:	2300      	movs	r3, #0
 801aca2:	9300      	str	r3, [sp, #0]
 801aca4:	4b3d      	ldr	r3, [pc, #244]	; (801ad9c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801aca6:	781b      	ldrb	r3, [r3, #0]
 801aca8:	2b00      	cmp	r3, #0
 801acaa:	d137      	bne.n	801ad1c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801acac:	4a3c      	ldr	r2, [pc, #240]	; (801ada0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801acae:	f9b2 2000 	ldrsh.w	r2, [r2]
 801acb2:	f8ad 2004 	strh.w	r2, [sp, #4]
 801acb6:	2b00      	cmp	r3, #0
 801acb8:	d132      	bne.n	801ad20 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801acba:	4b3a      	ldr	r3, [pc, #232]	; (801ada4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801acbc:	f9b3 3000 	ldrsh.w	r3, [r3]
 801acc0:	6808      	ldr	r0, [r1, #0]
 801acc2:	6849      	ldr	r1, [r1, #4]
 801acc4:	f8ad 3006 	strh.w	r3, [sp, #6]
 801acc8:	ac02      	add	r4, sp, #8
 801acca:	ab02      	add	r3, sp, #8
 801accc:	c303      	stmia	r3!, {r0, r1}
 801acce:	4669      	mov	r1, sp
 801acd0:	4620      	mov	r0, r4
 801acd2:	f7f9 ffb5 	bl	8014c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801acd6:	4668      	mov	r0, sp
 801acd8:	f7f9 ff6e 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801acdc:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801ace0:	f8bd 2000 	ldrh.w	r2, [sp]
 801ace4:	4d30      	ldr	r5, [pc, #192]	; (801ada8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801ace6:	4413      	add	r3, r2
 801ace8:	f8ad 3008 	strh.w	r3, [sp, #8]
 801acec:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801acf0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801acf4:	6828      	ldr	r0, [r5, #0]
 801acf6:	4413      	add	r3, r2
 801acf8:	f8ad 300a 	strh.w	r3, [sp, #10]
 801acfc:	6803      	ldr	r3, [r0, #0]
 801acfe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ad00:	4798      	blx	r3
 801ad02:	f010 0f01 	tst.w	r0, #1
 801ad06:	462f      	mov	r7, r5
 801ad08:	d00c      	beq.n	801ad24 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801ad0a:	6828      	ldr	r0, [r5, #0]
 801ad0c:	6803      	ldr	r3, [r0, #0]
 801ad0e:	e894 0006 	ldmia.w	r4, {r1, r2}
 801ad12:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801ad14:	4798      	blx	r3
 801ad16:	b004      	add	sp, #16
 801ad18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ad1c:	4a21      	ldr	r2, [pc, #132]	; (801ada4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801ad1e:	e7c6      	b.n	801acae <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801ad20:	4b1f      	ldr	r3, [pc, #124]	; (801ada0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ad22:	e7cb      	b.n	801acbc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801ad24:	6838      	ldr	r0, [r7, #0]
 801ad26:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801ad2a:	6803      	ldr	r3, [r0, #0]
 801ad2c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801ad30:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ad32:	4798      	blx	r3
 801ad34:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801ad38:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ad3c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801ad40:	fb16 3602 	smlabb	r6, r6, r2, r3
 801ad44:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801ad48:	6838      	ldr	r0, [r7, #0]
 801ad4a:	6803      	ldr	r3, [r0, #0]
 801ad4c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ad4e:	4798      	blx	r3
 801ad50:	4a13      	ldr	r2, [pc, #76]	; (801ada0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ad52:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801ad56:	8813      	ldrh	r3, [r2, #0]
 801ad58:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801ad5c:	fb03 1404 	mla	r4, r3, r4, r1
 801ad60:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ad64:	435d      	muls	r5, r3
 801ad66:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ad6a:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801ad6e:	4691      	mov	r9, r2
 801ad70:	6838      	ldr	r0, [r7, #0]
 801ad72:	42ac      	cmp	r4, r5
 801ad74:	6803      	ldr	r3, [r0, #0]
 801ad76:	d20e      	bcs.n	801ad96 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801ad78:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801ad7c:	4632      	mov	r2, r6
 801ad7e:	4643      	mov	r3, r8
 801ad80:	4621      	mov	r1, r4
 801ad82:	47d0      	blx	sl
 801ad84:	f8b9 3000 	ldrh.w	r3, [r9]
 801ad88:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ad8c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801ad90:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ad94:	e7ec      	b.n	801ad70 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801ad96:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ad98:	4798      	blx	r3
 801ad9a:	e7bc      	b.n	801ad16 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801ad9c:	200137cc 	.word	0x200137cc
 801ada0:	200137ce 	.word	0x200137ce
 801ada4:	200137d0 	.word	0x200137d0
 801ada8:	200137d4 	.word	0x200137d4

0801adac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801adac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801adb0:	b08b      	sub	sp, #44	; 0x2c
 801adb2:	460f      	mov	r7, r1
 801adb4:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801adb8:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801adbc:	4616      	mov	r6, r2
 801adbe:	f1bb 0f00 	cmp.w	fp, #0
 801adc2:	d04a      	beq.n	801ae5a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801adc4:	6810      	ldr	r0, [r2, #0]
 801adc6:	6851      	ldr	r1, [r2, #4]
 801adc8:	ad06      	add	r5, sp, #24
 801adca:	c503      	stmia	r5!, {r0, r1}
 801adcc:	6818      	ldr	r0, [r3, #0]
 801adce:	6859      	ldr	r1, [r3, #4]
 801add0:	ad08      	add	r5, sp, #32
 801add2:	c503      	stmia	r5!, {r0, r1}
 801add4:	a806      	add	r0, sp, #24
 801add6:	f7f9 feef 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801adda:	4631      	mov	r1, r6
 801addc:	a808      	add	r0, sp, #32
 801adde:	f7f9 ff2f 	bl	8014c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ade2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801ade6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801adea:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801adee:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801adf2:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801adf6:	fb16 2103 	smlabb	r1, r6, r3, r2
 801adfa:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801adfe:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801ae02:	4f5f      	ldr	r7, [pc, #380]	; (801af80 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801ae04:	440a      	add	r2, r1
 801ae06:	f8ad 2020 	strh.w	r2, [sp, #32]
 801ae0a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801ae0e:	6838      	ldr	r0, [r7, #0]
 801ae10:	4413      	add	r3, r2
 801ae12:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801ae16:	6803      	ldr	r3, [r0, #0]
 801ae18:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ae1a:	4798      	blx	r3
 801ae1c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801ae20:	46b9      	mov	r9, r7
 801ae22:	d11d      	bne.n	801ae60 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801ae24:	b9fc      	cbnz	r4, 801ae66 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ae26:	f010 0f01 	tst.w	r0, #1
 801ae2a:	d01c      	beq.n	801ae66 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ae2c:	f8d9 0000 	ldr.w	r0, [r9]
 801ae30:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801ae34:	6801      	ldr	r1, [r0, #0]
 801ae36:	f8cd b00c 	str.w	fp, [sp, #12]
 801ae3a:	2700      	movs	r7, #0
 801ae3c:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801ae40:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801ae44:	9402      	str	r4, [sp, #8]
 801ae46:	b2ad      	uxth	r5, r5
 801ae48:	fa1f f488 	uxth.w	r4, r8
 801ae4c:	9501      	str	r5, [sp, #4]
 801ae4e:	9400      	str	r4, [sp, #0]
 801ae50:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801ae52:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801ae56:	4631      	mov	r1, r6
 801ae58:	47a0      	blx	r4
 801ae5a:	b00b      	add	sp, #44	; 0x2c
 801ae5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ae60:	f010 0f04 	tst.w	r0, #4
 801ae64:	e7e1      	b.n	801ae2a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801ae66:	f8d9 0000 	ldr.w	r0, [r9]
 801ae6a:	6803      	ldr	r3, [r0, #0]
 801ae6c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ae6e:	4798      	blx	r3
 801ae70:	4b44      	ldr	r3, [pc, #272]	; (801af84 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801ae72:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801ae76:	881a      	ldrh	r2, [r3, #0]
 801ae78:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801ae7c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801ae80:	fb02 1404 	mla	r4, r2, r4, r1
 801ae84:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ae88:	469a      	mov	sl, r3
 801ae8a:	fb05 f502 	mul.w	r5, r5, r2
 801ae8e:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801ae92:	d059      	beq.n	801af48 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801ae94:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801ae98:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ae9c:	fa1f f28b 	uxth.w	r2, fp
 801aea0:	fa1f f989 	uxth.w	r9, r9
 801aea4:	469e      	mov	lr, r3
 801aea6:	42ac      	cmp	r4, r5
 801aea8:	d264      	bcs.n	801af74 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801aeaa:	eb04 0a07 	add.w	sl, r4, r7
 801aeae:	4554      	cmp	r4, sl
 801aeb0:	d23d      	bcs.n	801af2e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801aeb2:	8821      	ldrh	r1, [r4, #0]
 801aeb4:	f836 3b02 	ldrh.w	r3, [r6], #2
 801aeb8:	1208      	asrs	r0, r1, #8
 801aeba:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801aebe:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801aec2:	fb10 f009 	smulbb	r0, r0, r9
 801aec6:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801aeca:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801aece:	00c9      	lsls	r1, r1, #3
 801aed0:	fb0c 0c02 	mla	ip, ip, r2, r0
 801aed4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801aed8:	10d8      	asrs	r0, r3, #3
 801aeda:	b2c9      	uxtb	r1, r1
 801aedc:	00db      	lsls	r3, r3, #3
 801aede:	fa1f fc8c 	uxth.w	ip, ip
 801aee2:	fb1b fb09 	smulbb	fp, fp, r9
 801aee6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801aeea:	b2db      	uxtb	r3, r3
 801aeec:	fb11 f109 	smulbb	r1, r1, r9
 801aef0:	fb00 b002 	mla	r0, r0, r2, fp
 801aef4:	fb03 1302 	mla	r3, r3, r2, r1
 801aef8:	f10c 0b01 	add.w	fp, ip, #1
 801aefc:	b29b      	uxth	r3, r3
 801aefe:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801af02:	b280      	uxth	r0, r0
 801af04:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801af08:	f103 0c01 	add.w	ip, r3, #1
 801af0c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801af10:	1c43      	adds	r3, r0, #1
 801af12:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801af16:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801af1a:	0940      	lsrs	r0, r0, #5
 801af1c:	ea4c 0c0b 	orr.w	ip, ip, fp
 801af20:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801af24:	ea4c 0c00 	orr.w	ip, ip, r0
 801af28:	f824 cb02 	strh.w	ip, [r4], #2
 801af2c:	e7bf      	b.n	801aeae <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801af2e:	f8be 3000 	ldrh.w	r3, [lr]
 801af32:	eba3 0308 	sub.w	r3, r3, r8
 801af36:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801af3a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801af3e:	eba3 0308 	sub.w	r3, r3, r8
 801af42:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801af46:	e7ae      	b.n	801aea6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801af48:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801af4c:	f8d9 0000 	ldr.w	r0, [r9]
 801af50:	42ac      	cmp	r4, r5
 801af52:	6803      	ldr	r3, [r0, #0]
 801af54:	d20e      	bcs.n	801af74 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801af56:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801af5a:	4632      	mov	r2, r6
 801af5c:	463b      	mov	r3, r7
 801af5e:	4621      	mov	r1, r4
 801af60:	47c0      	blx	r8
 801af62:	f8ba 3000 	ldrh.w	r3, [sl]
 801af66:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801af6a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801af6e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801af72:	e7eb      	b.n	801af4c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801af74:	4b02      	ldr	r3, [pc, #8]	; (801af80 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801af76:	6818      	ldr	r0, [r3, #0]
 801af78:	6803      	ldr	r3, [r0, #0]
 801af7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801af7c:	4798      	blx	r3
 801af7e:	e76c      	b.n	801ae5a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801af80:	200137d4 	.word	0x200137d4
 801af84:	200137ce 	.word	0x200137ce

0801af88 <_ZN8touchgfx8LCD16bppD0Ev>:
 801af88:	b510      	push	{r4, lr}
 801af8a:	2184      	movs	r1, #132	; 0x84
 801af8c:	4604      	mov	r4, r0
 801af8e:	f00c fd26 	bl	80279de <_ZdlPvj>
 801af92:	4620      	mov	r0, r4
 801af94:	bd10      	pop	{r4, pc}

0801af96 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801af96:	b510      	push	{r4, lr}
 801af98:	2104      	movs	r1, #4
 801af9a:	4604      	mov	r4, r0
 801af9c:	f00c fd1f 	bl	80279de <_ZdlPvj>
 801afa0:	4620      	mov	r0, r4
 801afa2:	bd10      	pop	{r4, pc}

0801afa4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801afa4:	b510      	push	{r4, lr}
 801afa6:	2104      	movs	r1, #4
 801afa8:	4604      	mov	r4, r0
 801afaa:	f00c fd18 	bl	80279de <_ZdlPvj>
 801afae:	4620      	mov	r0, r4
 801afb0:	bd10      	pop	{r4, pc}

0801afb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801afb2:	b510      	push	{r4, lr}
 801afb4:	f640 0144 	movw	r1, #2116	; 0x844
 801afb8:	4604      	mov	r4, r0
 801afba:	f00c fd10 	bl	80279de <_ZdlPvj>
 801afbe:	4620      	mov	r0, r4
 801afc0:	bd10      	pop	{r4, pc}

0801afc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801afc2:	b510      	push	{r4, lr}
 801afc4:	2104      	movs	r1, #4
 801afc6:	4604      	mov	r4, r0
 801afc8:	f00c fd09 	bl	80279de <_ZdlPvj>
 801afcc:	4620      	mov	r0, r4
 801afce:	bd10      	pop	{r4, pc}

0801afd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801afd0:	b510      	push	{r4, lr}
 801afd2:	2104      	movs	r1, #4
 801afd4:	4604      	mov	r4, r0
 801afd6:	f00c fd02 	bl	80279de <_ZdlPvj>
 801afda:	4620      	mov	r0, r4
 801afdc:	bd10      	pop	{r4, pc}

0801afde <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801afde:	b510      	push	{r4, lr}
 801afe0:	2104      	movs	r1, #4
 801afe2:	4604      	mov	r4, r0
 801afe4:	f00c fcfb 	bl	80279de <_ZdlPvj>
 801afe8:	4620      	mov	r0, r4
 801afea:	bd10      	pop	{r4, pc}

0801afec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801afec:	b510      	push	{r4, lr}
 801afee:	2104      	movs	r1, #4
 801aff0:	4604      	mov	r4, r0
 801aff2:	f00c fcf4 	bl	80279de <_ZdlPvj>
 801aff6:	4620      	mov	r0, r4
 801aff8:	bd10      	pop	{r4, pc}

0801affa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801affa:	b510      	push	{r4, lr}
 801affc:	2104      	movs	r1, #4
 801affe:	4604      	mov	r4, r0
 801b000:	f00c fced 	bl	80279de <_ZdlPvj>
 801b004:	4620      	mov	r0, r4
 801b006:	bd10      	pop	{r4, pc}

0801b008 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801b008:	b510      	push	{r4, lr}
 801b00a:	2104      	movs	r1, #4
 801b00c:	4604      	mov	r4, r0
 801b00e:	f00c fce6 	bl	80279de <_ZdlPvj>
 801b012:	4620      	mov	r0, r4
 801b014:	bd10      	pop	{r4, pc}

0801b016 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b016:	b510      	push	{r4, lr}
 801b018:	2104      	movs	r1, #4
 801b01a:	4604      	mov	r4, r0
 801b01c:	f00c fcdf 	bl	80279de <_ZdlPvj>
 801b020:	4620      	mov	r0, r4
 801b022:	bd10      	pop	{r4, pc}

0801b024 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801b024:	b510      	push	{r4, lr}
 801b026:	2104      	movs	r1, #4
 801b028:	4604      	mov	r4, r0
 801b02a:	f00c fcd8 	bl	80279de <_ZdlPvj>
 801b02e:	4620      	mov	r0, r4
 801b030:	bd10      	pop	{r4, pc}

0801b032 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b032:	b510      	push	{r4, lr}
 801b034:	2104      	movs	r1, #4
 801b036:	4604      	mov	r4, r0
 801b038:	f00c fcd1 	bl	80279de <_ZdlPvj>
 801b03c:	4620      	mov	r0, r4
 801b03e:	bd10      	pop	{r4, pc}

0801b040 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b040:	b510      	push	{r4, lr}
 801b042:	2104      	movs	r1, #4
 801b044:	4604      	mov	r4, r0
 801b046:	f00c fcca 	bl	80279de <_ZdlPvj>
 801b04a:	4620      	mov	r0, r4
 801b04c:	bd10      	pop	{r4, pc}

0801b04e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b04e:	b510      	push	{r4, lr}
 801b050:	2104      	movs	r1, #4
 801b052:	4604      	mov	r4, r0
 801b054:	f00c fcc3 	bl	80279de <_ZdlPvj>
 801b058:	4620      	mov	r0, r4
 801b05a:	bd10      	pop	{r4, pc}

0801b05c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b05c:	b510      	push	{r4, lr}
 801b05e:	2104      	movs	r1, #4
 801b060:	4604      	mov	r4, r0
 801b062:	f00c fcbc 	bl	80279de <_ZdlPvj>
 801b066:	4620      	mov	r0, r4
 801b068:	bd10      	pop	{r4, pc}

0801b06a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b06a:	b510      	push	{r4, lr}
 801b06c:	2104      	movs	r1, #4
 801b06e:	4604      	mov	r4, r0
 801b070:	f00c fcb5 	bl	80279de <_ZdlPvj>
 801b074:	4620      	mov	r0, r4
 801b076:	bd10      	pop	{r4, pc}

0801b078 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b078:	b510      	push	{r4, lr}
 801b07a:	2104      	movs	r1, #4
 801b07c:	4604      	mov	r4, r0
 801b07e:	f00c fcae 	bl	80279de <_ZdlPvj>
 801b082:	4620      	mov	r0, r4
 801b084:	bd10      	pop	{r4, pc}

0801b086 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b086:	b510      	push	{r4, lr}
 801b088:	2104      	movs	r1, #4
 801b08a:	4604      	mov	r4, r0
 801b08c:	f00c fca7 	bl	80279de <_ZdlPvj>
 801b090:	4620      	mov	r0, r4
 801b092:	bd10      	pop	{r4, pc}

0801b094 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b094:	b510      	push	{r4, lr}
 801b096:	2104      	movs	r1, #4
 801b098:	4604      	mov	r4, r0
 801b09a:	f00c fca0 	bl	80279de <_ZdlPvj>
 801b09e:	4620      	mov	r0, r4
 801b0a0:	bd10      	pop	{r4, pc}

0801b0a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b0a2:	b510      	push	{r4, lr}
 801b0a4:	2104      	movs	r1, #4
 801b0a6:	4604      	mov	r4, r0
 801b0a8:	f00c fc99 	bl	80279de <_ZdlPvj>
 801b0ac:	4620      	mov	r0, r4
 801b0ae:	bd10      	pop	{r4, pc}

0801b0b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b0b0:	b510      	push	{r4, lr}
 801b0b2:	2104      	movs	r1, #4
 801b0b4:	4604      	mov	r4, r0
 801b0b6:	f00c fc92 	bl	80279de <_ZdlPvj>
 801b0ba:	4620      	mov	r0, r4
 801b0bc:	bd10      	pop	{r4, pc}

0801b0be <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b0be:	b510      	push	{r4, lr}
 801b0c0:	2104      	movs	r1, #4
 801b0c2:	4604      	mov	r4, r0
 801b0c4:	f00c fc8b 	bl	80279de <_ZdlPvj>
 801b0c8:	4620      	mov	r0, r4
 801b0ca:	bd10      	pop	{r4, pc}

0801b0cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b0cc:	b510      	push	{r4, lr}
 801b0ce:	2104      	movs	r1, #4
 801b0d0:	4604      	mov	r4, r0
 801b0d2:	f00c fc84 	bl	80279de <_ZdlPvj>
 801b0d6:	4620      	mov	r0, r4
 801b0d8:	bd10      	pop	{r4, pc}

0801b0da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b0da:	b510      	push	{r4, lr}
 801b0dc:	2104      	movs	r1, #4
 801b0de:	4604      	mov	r4, r0
 801b0e0:	f00c fc7d 	bl	80279de <_ZdlPvj>
 801b0e4:	4620      	mov	r0, r4
 801b0e6:	bd10      	pop	{r4, pc}

0801b0e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b0e8:	b510      	push	{r4, lr}
 801b0ea:	2104      	movs	r1, #4
 801b0ec:	4604      	mov	r4, r0
 801b0ee:	f00c fc76 	bl	80279de <_ZdlPvj>
 801b0f2:	4620      	mov	r0, r4
 801b0f4:	bd10      	pop	{r4, pc}

0801b0f6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b0f6:	b510      	push	{r4, lr}
 801b0f8:	2104      	movs	r1, #4
 801b0fa:	4604      	mov	r4, r0
 801b0fc:	f00c fc6f 	bl	80279de <_ZdlPvj>
 801b100:	4620      	mov	r0, r4
 801b102:	bd10      	pop	{r4, pc}

0801b104 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b104:	b510      	push	{r4, lr}
 801b106:	2104      	movs	r1, #4
 801b108:	4604      	mov	r4, r0
 801b10a:	f00c fc68 	bl	80279de <_ZdlPvj>
 801b10e:	4620      	mov	r0, r4
 801b110:	bd10      	pop	{r4, pc}

0801b112 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801b112:	b510      	push	{r4, lr}
 801b114:	2104      	movs	r1, #4
 801b116:	4604      	mov	r4, r0
 801b118:	f00c fc61 	bl	80279de <_ZdlPvj>
 801b11c:	4620      	mov	r0, r4
 801b11e:	bd10      	pop	{r4, pc}

0801b120 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801b120:	b510      	push	{r4, lr}
 801b122:	2104      	movs	r1, #4
 801b124:	4604      	mov	r4, r0
 801b126:	f00c fc5a 	bl	80279de <_ZdlPvj>
 801b12a:	4620      	mov	r0, r4
 801b12c:	bd10      	pop	{r4, pc}

0801b12e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801b12e:	b510      	push	{r4, lr}
 801b130:	2104      	movs	r1, #4
 801b132:	4604      	mov	r4, r0
 801b134:	f00c fc53 	bl	80279de <_ZdlPvj>
 801b138:	4620      	mov	r0, r4
 801b13a:	bd10      	pop	{r4, pc}

0801b13c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801b13c:	b510      	push	{r4, lr}
 801b13e:	2104      	movs	r1, #4
 801b140:	4604      	mov	r4, r0
 801b142:	f00c fc4c 	bl	80279de <_ZdlPvj>
 801b146:	4620      	mov	r0, r4
 801b148:	bd10      	pop	{r4, pc}
	...

0801b14c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b14c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b150:	b08f      	sub	sp, #60	; 0x3c
 801b152:	461c      	mov	r4, r3
 801b154:	9205      	str	r2, [sp, #20]
 801b156:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b15a:	9100      	str	r1, [sp, #0]
 801b15c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b15e:	9201      	str	r2, [sp, #4]
 801b160:	2a00      	cmp	r2, #0
 801b162:	f000 8115 	beq.w	801b390 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801b166:	6820      	ldr	r0, [r4, #0]
 801b168:	6861      	ldr	r1, [r4, #4]
 801b16a:	aa0a      	add	r2, sp, #40	; 0x28
 801b16c:	c203      	stmia	r2!, {r0, r1}
 801b16e:	6818      	ldr	r0, [r3, #0]
 801b170:	6859      	ldr	r1, [r3, #4]
 801b172:	aa0c      	add	r2, sp, #48	; 0x30
 801b174:	c203      	stmia	r2!, {r0, r1}
 801b176:	a80a      	add	r0, sp, #40	; 0x28
 801b178:	f7f9 fd1e 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b17c:	4621      	mov	r1, r4
 801b17e:	a80c      	add	r0, sp, #48	; 0x30
 801b180:	f7f9 fd5e 	bl	8014c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b184:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b188:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801b18c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801b190:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b194:	bfde      	ittt	le
 801b196:	b2b3      	uxthle	r3, r6
 801b198:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b19c:	fb92 f3f3 	sdivle	r3, r2, r3
 801b1a0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b1a4:	bfc8      	it	gt
 801b1a6:	2301      	movgt	r3, #1
 801b1a8:	fb92 f1f3 	sdiv	r1, r2, r3
 801b1ac:	fa1f fc81 	uxth.w	ip, r1
 801b1b0:	fb0c 2413 	mls	r4, ip, r3, r2
 801b1b4:	fb14 f406 	smulbb	r4, r4, r6
 801b1b8:	441d      	add	r5, r3
 801b1ba:	4404      	add	r4, r0
 801b1bc:	4661      	mov	r1, ip
 801b1be:	3d01      	subs	r5, #1
 801b1c0:	b2a4      	uxth	r4, r4
 801b1c2:	fb95 f5f3 	sdiv	r5, r5, r3
 801b1c6:	b131      	cbz	r1, 801b1d6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801b1c8:	9b05      	ldr	r3, [sp, #20]
 801b1ca:	9900      	ldr	r1, [sp, #0]
 801b1cc:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b1d0:	ba1b      	rev	r3, r3
 801b1d2:	4419      	add	r1, r3
 801b1d4:	9100      	str	r1, [sp, #0]
 801b1d6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801b1da:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801b1de:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801b1e2:	4418      	add	r0, r3
 801b1e4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801b1e8:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801b1ec:	441a      	add	r2, r3
 801b1ee:	4b6a      	ldr	r3, [pc, #424]	; (801b398 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b1f0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801b1f4:	6818      	ldr	r0, [r3, #0]
 801b1f6:	6803      	ldr	r3, [r0, #0]
 801b1f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b1fa:	4798      	blx	r3
 801b1fc:	4967      	ldr	r1, [pc, #412]	; (801b39c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801b1fe:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b202:	880b      	ldrh	r3, [r1, #0]
 801b204:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801b208:	9109      	str	r1, [sp, #36]	; 0x24
 801b20a:	fb03 c202 	mla	r2, r3, r2, ip
 801b20e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b212:	4373      	muls	r3, r6
 801b214:	b2ad      	uxth	r5, r5
 801b216:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b21a:	00ad      	lsls	r5, r5, #2
 801b21c:	9306      	str	r3, [sp, #24]
 801b21e:	1d2b      	adds	r3, r5, #4
 801b220:	9307      	str	r3, [sp, #28]
 801b222:	9b01      	ldr	r3, [sp, #4]
 801b224:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801b228:	9103      	str	r1, [sp, #12]
 801b22a:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801b22e:	2c00      	cmp	r4, #0
 801b230:	bf0c      	ite	eq
 801b232:	46c6      	moveq	lr, r8
 801b234:	f04f 0e00 	movne.w	lr, #0
 801b238:	2300      	movs	r3, #0
 801b23a:	b292      	uxth	r2, r2
 801b23c:	fa1f fe8e 	uxth.w	lr, lr
 801b240:	9302      	str	r3, [sp, #8]
 801b242:	9204      	str	r2, [sp, #16]
 801b244:	9a06      	ldr	r2, [sp, #24]
 801b246:	4282      	cmp	r2, r0
 801b248:	f240 809d 	bls.w	801b386 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801b24c:	b963      	cbnz	r3, 801b268 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801b24e:	9b00      	ldr	r3, [sp, #0]
 801b250:	781a      	ldrb	r2, [r3, #0]
 801b252:	0993      	lsrs	r3, r2, #6
 801b254:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801b258:	9202      	str	r2, [sp, #8]
 801b25a:	1e5a      	subs	r2, r3, #1
 801b25c:	2a02      	cmp	r2, #2
 801b25e:	d815      	bhi.n	801b28c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801b260:	9a00      	ldr	r2, [sp, #0]
 801b262:	3201      	adds	r2, #1
 801b264:	9200      	str	r2, [sp, #0]
 801b266:	b29b      	uxth	r3, r3
 801b268:	b1b4      	cbz	r4, 801b298 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801b26a:	429c      	cmp	r4, r3
 801b26c:	bf95      	itete	ls
 801b26e:	1b1c      	subls	r4, r3, r4
 801b270:	1ae4      	subhi	r4, r4, r3
 801b272:	fa1f fa84 	uxthls.w	sl, r4
 801b276:	b2a4      	uxthhi	r4, r4
 801b278:	bf87      	ittee	hi
 801b27a:	4671      	movhi	r1, lr
 801b27c:	f04f 0a00 	movhi.w	sl, #0
 801b280:	fa1f f188 	uxthls.w	r1, r8
 801b284:	2400      	movls	r4, #0
 801b286:	4653      	mov	r3, sl
 801b288:	468e      	mov	lr, r1
 801b28a:	e7db      	b.n	801b244 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801b28c:	9a00      	ldr	r2, [sp, #0]
 801b28e:	9b00      	ldr	r3, [sp, #0]
 801b290:	3202      	adds	r2, #2
 801b292:	785b      	ldrb	r3, [r3, #1]
 801b294:	9200      	str	r2, [sp, #0]
 801b296:	e7e7      	b.n	801b268 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801b298:	2202      	movs	r2, #2
 801b29a:	4615      	mov	r5, r2
 801b29c:	9907      	ldr	r1, [sp, #28]
 801b29e:	9a02      	ldr	r2, [sp, #8]
 801b2a0:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b2a4:	9905      	ldr	r1, [sp, #20]
 801b2a6:	4573      	cmp	r3, lr
 801b2a8:	f831 c002 	ldrh.w	ip, [r1, r2]
 801b2ac:	9a01      	ldr	r2, [sp, #4]
 801b2ae:	bf2b      	itete	cs
 801b2b0:	eba3 0a0e 	subcs.w	sl, r3, lr
 801b2b4:	ebae 0103 	subcc.w	r1, lr, r3
 801b2b8:	46f1      	movcs	r9, lr
 801b2ba:	4699      	movcc	r9, r3
 801b2bc:	bf27      	ittee	cs
 801b2be:	fa1f fa8a 	uxthcs.w	sl, sl
 801b2c2:	4621      	movcs	r1, r4
 801b2c4:	b289      	uxthcc	r1, r1
 801b2c6:	46a2      	movcc	sl, r4
 801b2c8:	2aff      	cmp	r2, #255	; 0xff
 801b2ca:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b2ce:	d105      	bne.n	801b2dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801b2d0:	4481      	add	r9, r0
 801b2d2:	4581      	cmp	r9, r0
 801b2d4:	d045      	beq.n	801b362 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801b2d6:	f820 cb02 	strh.w	ip, [r0], #2
 801b2da:	e7fa      	b.n	801b2d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801b2dc:	9d03      	ldr	r5, [sp, #12]
 801b2de:	ea4f 222c 	mov.w	r2, ip, asr #8
 801b2e2:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801b2e6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b2ea:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b2ee:	436a      	muls	r2, r5
 801b2f0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b2f4:	fa5f fc8c 	uxtb.w	ip, ip
 801b2f8:	9208      	str	r2, [sp, #32]
 801b2fa:	fb0b fb05 	mul.w	fp, fp, r5
 801b2fe:	fb0c fc05 	mul.w	ip, ip, r5
 801b302:	4481      	add	r9, r0
 801b304:	4581      	cmp	r9, r0
 801b306:	d02c      	beq.n	801b362 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801b308:	8802      	ldrh	r2, [r0, #0]
 801b30a:	9d04      	ldr	r5, [sp, #16]
 801b30c:	9f04      	ldr	r7, [sp, #16]
 801b30e:	1216      	asrs	r6, r2, #8
 801b310:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b314:	fb16 f605 	smulbb	r6, r6, r5
 801b318:	9d08      	ldr	r5, [sp, #32]
 801b31a:	442e      	add	r6, r5
 801b31c:	10d5      	asrs	r5, r2, #3
 801b31e:	00d2      	lsls	r2, r2, #3
 801b320:	b2d2      	uxtb	r2, r2
 801b322:	fb12 f207 	smulbb	r2, r2, r7
 801b326:	b2b6      	uxth	r6, r6
 801b328:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b32c:	4462      	add	r2, ip
 801b32e:	fb15 f507 	smulbb	r5, r5, r7
 801b332:	b292      	uxth	r2, r2
 801b334:	1c77      	adds	r7, r6, #1
 801b336:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801b33a:	1c57      	adds	r7, r2, #1
 801b33c:	445d      	add	r5, fp
 801b33e:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801b342:	b2ad      	uxth	r5, r5
 801b344:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b348:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b34c:	4316      	orrs	r6, r2
 801b34e:	1c6a      	adds	r2, r5, #1
 801b350:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801b354:	096d      	lsrs	r5, r5, #5
 801b356:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b35a:	432e      	orrs	r6, r5
 801b35c:	f820 6b02 	strh.w	r6, [r0], #2
 801b360:	e7d0      	b.n	801b304 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801b362:	4573      	cmp	r3, lr
 801b364:	d38f      	bcc.n	801b286 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801b366:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801b36a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b36c:	fa1f f188 	uxth.w	r1, r8
 801b370:	1a64      	subs	r4, r4, r1
 801b372:	881b      	ldrh	r3, [r3, #0]
 801b374:	b2a4      	uxth	r4, r4
 801b376:	2c00      	cmp	r4, #0
 801b378:	eba3 0308 	sub.w	r3, r3, r8
 801b37c:	bf18      	it	ne
 801b37e:	2100      	movne	r1, #0
 801b380:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b384:	e77f      	b.n	801b286 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801b386:	4b04      	ldr	r3, [pc, #16]	; (801b398 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b388:	6818      	ldr	r0, [r3, #0]
 801b38a:	6803      	ldr	r3, [r0, #0]
 801b38c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b38e:	4798      	blx	r3
 801b390:	b00f      	add	sp, #60	; 0x3c
 801b392:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b396:	bf00      	nop
 801b398:	200137d4 	.word	0x200137d4
 801b39c:	200137ce 	.word	0x200137ce

0801b3a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b3a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b3a4:	b09f      	sub	sp, #124	; 0x7c
 801b3a6:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801b3aa:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801b3ae:	9209      	str	r2, [sp, #36]	; 0x24
 801b3b0:	461d      	mov	r5, r3
 801b3b2:	4604      	mov	r4, r0
 801b3b4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b3b6:	2a00      	cmp	r2, #0
 801b3b8:	f000 81eb 	beq.w	801b792 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801b3bc:	6828      	ldr	r0, [r5, #0]
 801b3be:	6869      	ldr	r1, [r5, #4]
 801b3c0:	aa1a      	add	r2, sp, #104	; 0x68
 801b3c2:	c203      	stmia	r2!, {r0, r1}
 801b3c4:	6818      	ldr	r0, [r3, #0]
 801b3c6:	6859      	ldr	r1, [r3, #4]
 801b3c8:	aa1c      	add	r2, sp, #112	; 0x70
 801b3ca:	c203      	stmia	r2!, {r0, r1}
 801b3cc:	a81a      	add	r0, sp, #104	; 0x68
 801b3ce:	f7f9 fbf3 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b3d2:	4629      	mov	r1, r5
 801b3d4:	a81c      	add	r0, sp, #112	; 0x70
 801b3d6:	f7f9 fc33 	bl	8014c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b3da:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801b3de:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801b3e2:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801b3e6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801b3ea:	bfd7      	itett	le
 801b3ec:	b29a      	uxthle	r2, r3
 801b3ee:	2201      	movgt	r2, #1
 801b3f0:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801b3f4:	fb91 f2f2 	sdivle	r2, r1, r2
 801b3f8:	9202      	str	r2, [sp, #8]
 801b3fa:	9802      	ldr	r0, [sp, #8]
 801b3fc:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801b400:	fb92 f0f0 	sdiv	r0, r2, r0
 801b404:	b280      	uxth	r0, r0
 801b406:	9010      	str	r0, [sp, #64]	; 0x40
 801b408:	9902      	ldr	r1, [sp, #8]
 801b40a:	9802      	ldr	r0, [sp, #8]
 801b40c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b40e:	4488      	add	r8, r1
 801b410:	fb05 2510 	mls	r5, r5, r0, r2
 801b414:	fb15 f503 	smulbb	r5, r5, r3
 801b418:	f108 38ff 	add.w	r8, r8, #4294967295
 801b41c:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801b420:	fb98 f8f1 	sdiv	r8, r8, r1
 801b424:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801b428:	440d      	add	r5, r1
 801b42a:	4419      	add	r1, r3
 801b42c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801b430:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801b434:	441a      	add	r2, r3
 801b436:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801b43a:	9304      	str	r3, [sp, #16]
 801b43c:	4b95      	ldr	r3, [pc, #596]	; (801b694 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801b43e:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801b442:	6818      	ldr	r0, [r3, #0]
 801b444:	6803      	ldr	r3, [r0, #0]
 801b446:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b448:	4798      	blx	r3
 801b44a:	4b93      	ldr	r3, [pc, #588]	; (801b698 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801b44c:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801b450:	881a      	ldrh	r2, [r3, #0]
 801b452:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801b456:	9318      	str	r3, [sp, #96]	; 0x60
 801b458:	fb02 7101 	mla	r1, r2, r1, r7
 801b45c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b460:	4356      	muls	r6, r2
 801b462:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801b466:	f108 0801 	add.w	r8, r8, #1
 801b46a:	920a      	str	r2, [sp, #40]	; 0x28
 801b46c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b46e:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801b472:	930f      	str	r3, [sp, #60]	; 0x3c
 801b474:	fa1f f888 	uxth.w	r8, r8
 801b478:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801b47c:	f108 0204 	add.w	r2, r8, #4
 801b480:	9211      	str	r2, [sp, #68]	; 0x44
 801b482:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b484:	4b85      	ldr	r3, [pc, #532]	; (801b69c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801b486:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801b48a:	b2ad      	uxth	r5, r5
 801b48c:	9215      	str	r2, [sp, #84]	; 0x54
 801b48e:	2d00      	cmp	r5, #0
 801b490:	9a04      	ldr	r2, [sp, #16]
 801b492:	f04f 0100 	mov.w	r1, #0
 801b496:	bf18      	it	ne
 801b498:	2200      	movne	r2, #0
 801b49a:	1b1b      	subs	r3, r3, r4
 801b49c:	b292      	uxth	r2, r2
 801b49e:	910d      	str	r1, [sp, #52]	; 0x34
 801b4a0:	9319      	str	r3, [sp, #100]	; 0x64
 801b4a2:	9910      	ldr	r1, [sp, #64]	; 0x40
 801b4a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b4a6:	fa11 f383 	uxtah	r3, r1, r3
 801b4aa:	9914      	ldr	r1, [sp, #80]	; 0x50
 801b4ac:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b4b0:	3304      	adds	r3, #4
 801b4b2:	9306      	str	r3, [sp, #24]
 801b4b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b4b6:	4283      	cmp	r3, r0
 801b4b8:	f240 8166 	bls.w	801b788 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801b4bc:	9902      	ldr	r1, [sp, #8]
 801b4be:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801b4c2:	fbb5 f3f3 	udiv	r3, r5, r3
 801b4c6:	1acb      	subs	r3, r1, r3
 801b4c8:	b29b      	uxth	r3, r3
 801b4ca:	9316      	str	r3, [sp, #88]	; 0x58
 801b4cc:	9b06      	ldr	r3, [sp, #24]
 801b4ce:	9e06      	ldr	r6, [sp, #24]
 801b4d0:	7859      	ldrb	r1, [r3, #1]
 801b4d2:	789b      	ldrb	r3, [r3, #2]
 801b4d4:	7836      	ldrb	r6, [r6, #0]
 801b4d6:	9612      	str	r6, [sp, #72]	; 0x48
 801b4d8:	021b      	lsls	r3, r3, #8
 801b4da:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801b4de:	9906      	ldr	r1, [sp, #24]
 801b4e0:	78c9      	ldrb	r1, [r1, #3]
 801b4e2:	430b      	orrs	r3, r1
 801b4e4:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801b4e6:	3601      	adds	r6, #1
 801b4e8:	4419      	add	r1, r3
 801b4ea:	9605      	str	r6, [sp, #20]
 801b4ec:	1c4e      	adds	r6, r1, #1
 801b4ee:	9603      	str	r6, [sp, #12]
 801b4f0:	7849      	ldrb	r1, [r1, #1]
 801b4f2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b4f4:	0209      	lsls	r1, r1, #8
 801b4f6:	5cf3      	ldrb	r3, [r6, r3]
 801b4f8:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801b4fc:	4319      	orrs	r1, r3
 801b4fe:	b28b      	uxth	r3, r1
 801b500:	930c      	str	r3, [sp, #48]	; 0x30
 801b502:	2300      	movs	r3, #0
 801b504:	f04f 0a01 	mov.w	sl, #1
 801b508:	9307      	str	r3, [sp, #28]
 801b50a:	469c      	mov	ip, r3
 801b50c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801b510:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801b514:	46d3      	mov	fp, sl
 801b516:	4657      	mov	r7, sl
 801b518:	930e      	str	r3, [sp, #56]	; 0x38
 801b51a:	2d00      	cmp	r5, #0
 801b51c:	d07e      	beq.n	801b61c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801b51e:	42af      	cmp	r7, r5
 801b520:	d26e      	bcs.n	801b600 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801b522:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b524:	9201      	str	r2, [sp, #4]
 801b526:	1bed      	subs	r5, r5, r7
 801b528:	4283      	cmp	r3, r0
 801b52a:	b2ad      	uxth	r5, r5
 801b52c:	d802      	bhi.n	801b534 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801b52e:	e073      	b.n	801b618 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801b530:	2b00      	cmp	r3, #0
 801b532:	d15f      	bne.n	801b5f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801b534:	9b03      	ldr	r3, [sp, #12]
 801b536:	785b      	ldrb	r3, [r3, #1]
 801b538:	f1cb 0207 	rsb	r2, fp, #7
 801b53c:	4093      	lsls	r3, r2
 801b53e:	005b      	lsls	r3, r3, #1
 801b540:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801b544:	9b03      	ldr	r3, [sp, #12]
 801b546:	781b      	ldrb	r3, [r3, #0]
 801b548:	fa43 f30b 	asr.w	r3, r3, fp
 801b54c:	b2db      	uxtb	r3, r3
 801b54e:	4313      	orrs	r3, r2
 801b550:	f10b 0201 	add.w	r2, fp, #1
 801b554:	fa5f fb82 	uxtb.w	fp, r2
 801b558:	9a03      	ldr	r2, [sp, #12]
 801b55a:	f1bb 0f08 	cmp.w	fp, #8
 801b55e:	bf15      	itete	ne
 801b560:	3201      	addne	r2, #1
 801b562:	3202      	addeq	r2, #2
 801b564:	9203      	strne	r2, [sp, #12]
 801b566:	9203      	streq	r2, [sp, #12]
 801b568:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b56a:	b29f      	uxth	r7, r3
 801b56c:	bf08      	it	eq
 801b56e:	f04f 0b00 	moveq.w	fp, #0
 801b572:	42ba      	cmp	r2, r7
 801b574:	d309      	bcc.n	801b58a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801b576:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801b57a:	2301      	movs	r3, #1
 801b57c:	9a05      	ldr	r2, [sp, #20]
 801b57e:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801b582:	d30e      	bcc.n	801b5a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801b584:	469a      	mov	sl, r3
 801b586:	2600      	movs	r6, #0
 801b588:	e035      	b.n	801b5f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801b58a:	9b05      	ldr	r3, [sp, #20]
 801b58c:	429f      	cmp	r7, r3
 801b58e:	d318      	bcc.n	801b5c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801b590:	eb04 030a 	add.w	r3, r4, sl
 801b594:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801b598:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801b59c:	f10a 0301 	add.w	r3, sl, #1
 801b5a0:	b29b      	uxth	r3, r3
 801b5a2:	9a05      	ldr	r2, [sp, #20]
 801b5a4:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801b5a8:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b5aa:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b5ae:	7116      	strb	r6, [r2, #4]
 801b5b0:	f10a 0601 	add.w	r6, sl, #1
 801b5b4:	80d1      	strh	r1, [r2, #6]
 801b5b6:	7156      	strb	r6, [r2, #5]
 801b5b8:	9a05      	ldr	r2, [sp, #20]
 801b5ba:	3201      	adds	r2, #1
 801b5bc:	b292      	uxth	r2, r2
 801b5be:	9205      	str	r2, [sp, #20]
 801b5c0:	e7e0      	b.n	801b584 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801b5c2:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801b5c6:	463a      	mov	r2, r7
 801b5c8:	795b      	ldrb	r3, [r3, #5]
 801b5ca:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801b5ce:	4426      	add	r6, r4
 801b5d0:	9919      	ldr	r1, [sp, #100]	; 0x64
 801b5d2:	eb01 0c06 	add.w	ip, r1, r6
 801b5d6:	f1bc 0f00 	cmp.w	ip, #0
 801b5da:	dd07      	ble.n	801b5ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801b5dc:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b5e0:	f892 c004 	ldrb.w	ip, [r2, #4]
 801b5e4:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801b5e8:	88d2      	ldrh	r2, [r2, #6]
 801b5ea:	e7f1      	b.n	801b5d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801b5ec:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801b5f0:	b29b      	uxth	r3, r3
 801b5f2:	e7c3      	b.n	801b57c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801b5f4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801b5f6:	970c      	str	r7, [sp, #48]	; 0x30
 801b5f8:	9a01      	ldr	r2, [sp, #4]
 801b5fa:	46b4      	mov	ip, r6
 801b5fc:	461f      	mov	r7, r3
 801b5fe:	e78c      	b.n	801b51a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801b600:	1b7b      	subs	r3, r7, r5
 801b602:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b606:	9201      	str	r2, [sp, #4]
 801b608:	eb0c 0605 	add.w	r6, ip, r5
 801b60c:	b29b      	uxth	r3, r3
 801b60e:	b2b6      	uxth	r6, r6
 801b610:	2500      	movs	r5, #0
 801b612:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b614:	4282      	cmp	r2, r0
 801b616:	d88b      	bhi.n	801b530 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801b618:	9a01      	ldr	r2, [sp, #4]
 801b61a:	e74b      	b.n	801b4b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801b61c:	4297      	cmp	r7, r2
 801b61e:	d332      	bcc.n	801b686 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801b620:	1abb      	subs	r3, r7, r2
 801b622:	b29b      	uxth	r3, r3
 801b624:	9208      	str	r2, [sp, #32]
 801b626:	9501      	str	r5, [sp, #4]
 801b628:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b62a:	29ff      	cmp	r1, #255	; 0xff
 801b62c:	9908      	ldr	r1, [sp, #32]
 801b62e:	eb0c 0601 	add.w	r6, ip, r1
 801b632:	d135      	bne.n	801b6a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801b634:	f1a0 0e02 	sub.w	lr, r0, #2
 801b638:	b2b6      	uxth	r6, r6
 801b63a:	45b4      	cmp	ip, r6
 801b63c:	f040 808c 	bne.w	801b758 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801b640:	9908      	ldr	r1, [sp, #32]
 801b642:	4297      	cmp	r7, r2
 801b644:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b648:	d3e2      	bcc.n	801b610 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801b64a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b64c:	9904      	ldr	r1, [sp, #16]
 801b64e:	8812      	ldrh	r2, [r2, #0]
 801b650:	1a52      	subs	r2, r2, r1
 801b652:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b656:	9a07      	ldr	r2, [sp, #28]
 801b658:	9916      	ldr	r1, [sp, #88]	; 0x58
 801b65a:	3201      	adds	r2, #1
 801b65c:	428a      	cmp	r2, r1
 801b65e:	9207      	str	r2, [sp, #28]
 801b660:	f040 8087 	bne.w	801b772 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801b664:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801b668:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801b66c:	9b04      	ldr	r3, [sp, #16]
 801b66e:	1bed      	subs	r5, r5, r7
 801b670:	b2ad      	uxth	r5, r5
 801b672:	2d00      	cmp	r5, #0
 801b674:	bf08      	it	eq
 801b676:	461a      	moveq	r2, r3
 801b678:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b67a:	bf18      	it	ne
 801b67c:	2200      	movne	r2, #0
 801b67e:	3301      	adds	r3, #1
 801b680:	930d      	str	r3, [sp, #52]	; 0x34
 801b682:	b292      	uxth	r2, r2
 801b684:	e70d      	b.n	801b4a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801b686:	1bd1      	subs	r1, r2, r7
 801b688:	b28b      	uxth	r3, r1
 801b68a:	9301      	str	r3, [sp, #4]
 801b68c:	9708      	str	r7, [sp, #32]
 801b68e:	462b      	mov	r3, r5
 801b690:	e7ca      	b.n	801b628 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801b692:	bf00      	nop
 801b694:	200137d4 	.word	0x200137d4
 801b698:	200137ce 	.word	0x200137ce
 801b69c:	fffff7fb 	.word	0xfffff7fb
 801b6a0:	b2b6      	uxth	r6, r6
 801b6a2:	900b      	str	r0, [sp, #44]	; 0x2c
 801b6a4:	45b4      	cmp	ip, r6
 801b6a6:	d0cb      	beq.n	801b640 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801b6a8:	f10c 0101 	add.w	r1, ip, #1
 801b6ac:	44a4      	add	ip, r4
 801b6ae:	9117      	str	r1, [sp, #92]	; 0x5c
 801b6b0:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801b6b4:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b6b6:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801b6ba:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b6bc:	f8b1 c000 	ldrh.w	ip, [r1]
 801b6c0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b6c2:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801b6c6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b6ca:	fb1e fe01 	smulbb	lr, lr, r1
 801b6ce:	ea4f 2825 	mov.w	r8, r5, asr #8
 801b6d2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b6d4:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801b6d8:	fb08 e801 	mla	r8, r8, r1, lr
 801b6dc:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801b6e0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b6e2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801b6e6:	fb19 f901 	smulbb	r9, r9, r1
 801b6ea:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801b6ee:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b6f0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801b6f4:	fb0e 9e01 	mla	lr, lr, r1, r9
 801b6f8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b6fc:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b6fe:	fa5f fc8c 	uxtb.w	ip, ip
 801b702:	fb1c fc01 	smulbb	ip, ip, r1
 801b706:	00ed      	lsls	r5, r5, #3
 801b708:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b70a:	b2ed      	uxtb	r5, r5
 801b70c:	fb05 c501 	mla	r5, r5, r1, ip
 801b710:	fa1f f888 	uxth.w	r8, r8
 801b714:	fa1f fe8e 	uxth.w	lr, lr
 801b718:	b2ad      	uxth	r5, r5
 801b71a:	f108 0c01 	add.w	ip, r8, #1
 801b71e:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801b722:	f10e 0901 	add.w	r9, lr, #1
 801b726:	f105 0c01 	add.w	ip, r5, #1
 801b72a:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801b72e:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801b732:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b736:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801b73a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b73e:	ea4c 0808 	orr.w	r8, ip, r8
 801b742:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b744:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801b748:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b74c:	ea48 0809 	orr.w	r8, r8, r9
 801b750:	f821 8b02 	strh.w	r8, [r1], #2
 801b754:	910b      	str	r1, [sp, #44]	; 0x2c
 801b756:	e7a5      	b.n	801b6a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801b758:	f10c 0801 	add.w	r8, ip, #1
 801b75c:	44a4      	add	ip, r4
 801b75e:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b760:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801b764:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801b768:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801b76c:	fa1f fc88 	uxth.w	ip, r8
 801b770:	e763      	b.n	801b63a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801b772:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b776:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801b77a:	1aad      	subs	r5, r5, r2
 801b77c:	b2ad      	uxth	r5, r5
 801b77e:	2d00      	cmp	r5, #0
 801b780:	bf18      	it	ne
 801b782:	2200      	movne	r2, #0
 801b784:	9201      	str	r2, [sp, #4]
 801b786:	e744      	b.n	801b612 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801b788:	4b03      	ldr	r3, [pc, #12]	; (801b798 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801b78a:	6818      	ldr	r0, [r3, #0]
 801b78c:	6803      	ldr	r3, [r0, #0]
 801b78e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b790:	4798      	blx	r3
 801b792:	b01f      	add	sp, #124	; 0x7c
 801b794:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b798:	200137d4 	.word	0x200137d4

0801b79c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801b79c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b7a0:	b08f      	sub	sp, #60	; 0x3c
 801b7a2:	461c      	mov	r4, r3
 801b7a4:	9203      	str	r2, [sp, #12]
 801b7a6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b7aa:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b7ac:	9202      	str	r2, [sp, #8]
 801b7ae:	460f      	mov	r7, r1
 801b7b0:	2a00      	cmp	r2, #0
 801b7b2:	f000 8128 	beq.w	801ba06 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801b7b6:	6820      	ldr	r0, [r4, #0]
 801b7b8:	6861      	ldr	r1, [r4, #4]
 801b7ba:	aa0a      	add	r2, sp, #40	; 0x28
 801b7bc:	c203      	stmia	r2!, {r0, r1}
 801b7be:	6818      	ldr	r0, [r3, #0]
 801b7c0:	6859      	ldr	r1, [r3, #4]
 801b7c2:	aa0c      	add	r2, sp, #48	; 0x30
 801b7c4:	c203      	stmia	r2!, {r0, r1}
 801b7c6:	a80a      	add	r0, sp, #40	; 0x28
 801b7c8:	f7f9 f9f6 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b7cc:	4621      	mov	r1, r4
 801b7ce:	a80c      	add	r0, sp, #48	; 0x30
 801b7d0:	f7f9 fa36 	bl	8014c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b7d4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b7d8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801b7dc:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801b7e0:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b7e4:	bfde      	ittt	le
 801b7e6:	b2b3      	uxthle	r3, r6
 801b7e8:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b7ec:	fb92 f3f3 	sdivle	r3, r2, r3
 801b7f0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b7f4:	bfc8      	it	gt
 801b7f6:	2301      	movgt	r3, #1
 801b7f8:	fb92 f1f3 	sdiv	r1, r2, r3
 801b7fc:	fa1f fc81 	uxth.w	ip, r1
 801b800:	fb0c 2413 	mls	r4, ip, r3, r2
 801b804:	fb14 f406 	smulbb	r4, r4, r6
 801b808:	441d      	add	r5, r3
 801b80a:	4404      	add	r4, r0
 801b80c:	4661      	mov	r1, ip
 801b80e:	3d01      	subs	r5, #1
 801b810:	b2a4      	uxth	r4, r4
 801b812:	fb95 f5f3 	sdiv	r5, r5, r3
 801b816:	b121      	cbz	r1, 801b822 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801b818:	9b03      	ldr	r3, [sp, #12]
 801b81a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b81e:	ba1b      	rev	r3, r3
 801b820:	441f      	add	r7, r3
 801b822:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801b826:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801b82a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801b82e:	4418      	add	r0, r3
 801b830:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801b834:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801b838:	441a      	add	r2, r3
 801b83a:	4b74      	ldr	r3, [pc, #464]	; (801ba0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801b83c:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801b840:	6818      	ldr	r0, [r3, #0]
 801b842:	6803      	ldr	r3, [r0, #0]
 801b844:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b846:	4798      	blx	r3
 801b848:	4a71      	ldr	r2, [pc, #452]	; (801ba10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801b84a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801b84e:	8813      	ldrh	r3, [r2, #0]
 801b850:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801b854:	9209      	str	r2, [sp, #36]	; 0x24
 801b856:	fb03 c101 	mla	r1, r3, r1, ip
 801b85a:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b85e:	4373      	muls	r3, r6
 801b860:	b2ad      	uxth	r5, r5
 801b862:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b866:	00ad      	lsls	r5, r5, #2
 801b868:	2c00      	cmp	r4, #0
 801b86a:	9304      	str	r3, [sp, #16]
 801b86c:	f105 0304 	add.w	r3, r5, #4
 801b870:	9305      	str	r3, [sp, #20]
 801b872:	bf0c      	ite	eq
 801b874:	46c8      	moveq	r8, r9
 801b876:	f04f 0800 	movne.w	r8, #0
 801b87a:	2300      	movs	r3, #0
 801b87c:	fa1f f888 	uxth.w	r8, r8
 801b880:	9301      	str	r3, [sp, #4]
 801b882:	9a04      	ldr	r2, [sp, #16]
 801b884:	4282      	cmp	r2, r0
 801b886:	f240 80b9 	bls.w	801b9fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801b88a:	b95b      	cbnz	r3, 801b8a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801b88c:	783a      	ldrb	r2, [r7, #0]
 801b88e:	0993      	lsrs	r3, r2, #6
 801b890:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801b894:	9201      	str	r2, [sp, #4]
 801b896:	1e5a      	subs	r2, r3, #1
 801b898:	2a02      	cmp	r2, #2
 801b89a:	bf8d      	iteet	hi
 801b89c:	787b      	ldrbhi	r3, [r7, #1]
 801b89e:	3701      	addls	r7, #1
 801b8a0:	b29b      	uxthls	r3, r3
 801b8a2:	3702      	addhi	r7, #2
 801b8a4:	b184      	cbz	r4, 801b8c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801b8a6:	429c      	cmp	r4, r3
 801b8a8:	bf95      	itete	ls
 801b8aa:	1b1c      	subls	r4, r3, r4
 801b8ac:	1ae4      	subhi	r4, r4, r3
 801b8ae:	fa1f fa84 	uxthls.w	sl, r4
 801b8b2:	b2a4      	uxthhi	r4, r4
 801b8b4:	bf87      	ittee	hi
 801b8b6:	46c4      	movhi	ip, r8
 801b8b8:	f04f 0a00 	movhi.w	sl, #0
 801b8bc:	fa1f fc89 	uxthls.w	ip, r9
 801b8c0:	2400      	movls	r4, #0
 801b8c2:	4653      	mov	r3, sl
 801b8c4:	46e0      	mov	r8, ip
 801b8c6:	e7dc      	b.n	801b882 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801b8c8:	2204      	movs	r2, #4
 801b8ca:	4615      	mov	r5, r2
 801b8cc:	9905      	ldr	r1, [sp, #20]
 801b8ce:	9a01      	ldr	r2, [sp, #4]
 801b8d0:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b8d4:	9903      	ldr	r1, [sp, #12]
 801b8d6:	588a      	ldr	r2, [r1, r2]
 801b8d8:	4543      	cmp	r3, r8
 801b8da:	bf27      	ittee	cs
 801b8dc:	eba3 0a08 	subcs.w	sl, r3, r8
 801b8e0:	46c6      	movcs	lr, r8
 801b8e2:	eba8 0c03 	subcc.w	ip, r8, r3
 801b8e6:	469e      	movcc	lr, r3
 801b8e8:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801b8ec:	bf27      	ittee	cs
 801b8ee:	fa1f fa8a 	uxthcs.w	sl, sl
 801b8f2:	46a4      	movcs	ip, r4
 801b8f4:	fa1f fc8c 	uxthcc.w	ip, ip
 801b8f8:	46a2      	movcc	sl, r4
 801b8fa:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801b8fe:	2900      	cmp	r1, #0
 801b900:	d066      	beq.n	801b9d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801b902:	29ff      	cmp	r1, #255	; 0xff
 801b904:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801b908:	d114      	bne.n	801b934 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801b90a:	9d02      	ldr	r5, [sp, #8]
 801b90c:	2dff      	cmp	r5, #255	; 0xff
 801b90e:	d111      	bne.n	801b934 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801b910:	0951      	lsrs	r1, r2, #5
 801b912:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b916:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b91a:	f026 0607 	bic.w	r6, r6, #7
 801b91e:	430e      	orrs	r6, r1
 801b920:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b924:	4316      	orrs	r6, r2
 801b926:	b2b6      	uxth	r6, r6
 801b928:	4486      	add	lr, r0
 801b92a:	4586      	cmp	lr, r0
 801b92c:	d051      	beq.n	801b9d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801b92e:	f820 6b02 	strh.w	r6, [r0], #2
 801b932:	e7fa      	b.n	801b92a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801b934:	9d02      	ldr	r5, [sp, #8]
 801b936:	4369      	muls	r1, r5
 801b938:	1c4d      	adds	r5, r1, #1
 801b93a:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801b93e:	122d      	asrs	r5, r5, #8
 801b940:	ea6f 0b05 	mvn.w	fp, r5
 801b944:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801b948:	b2ad      	uxth	r5, r5
 801b94a:	b2f6      	uxtb	r6, r6
 801b94c:	b2d2      	uxtb	r2, r2
 801b94e:	fb11 f105 	smulbb	r1, r1, r5
 801b952:	fb16 f605 	smulbb	r6, r6, r5
 801b956:	fb12 f205 	smulbb	r2, r2, r5
 801b95a:	b289      	uxth	r1, r1
 801b95c:	b2b6      	uxth	r6, r6
 801b95e:	b292      	uxth	r2, r2
 801b960:	9106      	str	r1, [sp, #24]
 801b962:	9607      	str	r6, [sp, #28]
 801b964:	9208      	str	r2, [sp, #32]
 801b966:	4486      	add	lr, r0
 801b968:	fa5f fb8b 	uxtb.w	fp, fp
 801b96c:	4586      	cmp	lr, r0
 801b96e:	d030      	beq.n	801b9d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801b970:	8802      	ldrh	r2, [r0, #0]
 801b972:	9906      	ldr	r1, [sp, #24]
 801b974:	1216      	asrs	r6, r2, #8
 801b976:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b97a:	10d5      	asrs	r5, r2, #3
 801b97c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801b980:	fb06 160b 	mla	r6, r6, fp, r1
 801b984:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b988:	9907      	ldr	r1, [sp, #28]
 801b98a:	00d2      	lsls	r2, r2, #3
 801b98c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801b990:	fb05 150b 	mla	r5, r5, fp, r1
 801b994:	b2d2      	uxtb	r2, r2
 801b996:	9908      	ldr	r1, [sp, #32]
 801b998:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b99c:	b2b6      	uxth	r6, r6
 801b99e:	fb02 120b 	mla	r2, r2, fp, r1
 801b9a2:	b292      	uxth	r2, r2
 801b9a4:	1c71      	adds	r1, r6, #1
 801b9a6:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801b9aa:	1c51      	adds	r1, r2, #1
 801b9ac:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b9b0:	b2ad      	uxth	r5, r5
 801b9b2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b9b6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b9ba:	4316      	orrs	r6, r2
 801b9bc:	1c6a      	adds	r2, r5, #1
 801b9be:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801b9c2:	096d      	lsrs	r5, r5, #5
 801b9c4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b9c8:	432e      	orrs	r6, r5
 801b9ca:	f820 6b02 	strh.w	r6, [r0], #2
 801b9ce:	e7cd      	b.n	801b96c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801b9d0:	4470      	add	r0, lr
 801b9d2:	4543      	cmp	r3, r8
 801b9d4:	f4ff af75 	bcc.w	801b8c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801b9d8:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801b9dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b9de:	fa1f fc89 	uxth.w	ip, r9
 801b9e2:	eba4 040c 	sub.w	r4, r4, ip
 801b9e6:	881b      	ldrh	r3, [r3, #0]
 801b9e8:	b2a4      	uxth	r4, r4
 801b9ea:	2c00      	cmp	r4, #0
 801b9ec:	eba3 0309 	sub.w	r3, r3, r9
 801b9f0:	bf18      	it	ne
 801b9f2:	f04f 0c00 	movne.w	ip, #0
 801b9f6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b9fa:	e762      	b.n	801b8c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801b9fc:	4b03      	ldr	r3, [pc, #12]	; (801ba0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801b9fe:	6818      	ldr	r0, [r3, #0]
 801ba00:	6803      	ldr	r3, [r0, #0]
 801ba02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ba04:	4798      	blx	r3
 801ba06:	b00f      	add	sp, #60	; 0x3c
 801ba08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ba0c:	200137d4 	.word	0x200137d4
 801ba10:	200137ce 	.word	0x200137ce

0801ba14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801ba14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba18:	b093      	sub	sp, #76	; 0x4c
 801ba1a:	461c      	mov	r4, r3
 801ba1c:	9205      	str	r2, [sp, #20]
 801ba1e:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801ba22:	9101      	str	r1, [sp, #4]
 801ba24:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ba26:	9202      	str	r2, [sp, #8]
 801ba28:	2a00      	cmp	r2, #0
 801ba2a:	f000 812c 	beq.w	801bc86 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801ba2e:	6820      	ldr	r0, [r4, #0]
 801ba30:	6861      	ldr	r1, [r4, #4]
 801ba32:	aa0e      	add	r2, sp, #56	; 0x38
 801ba34:	c203      	stmia	r2!, {r0, r1}
 801ba36:	6818      	ldr	r0, [r3, #0]
 801ba38:	6859      	ldr	r1, [r3, #4]
 801ba3a:	aa10      	add	r2, sp, #64	; 0x40
 801ba3c:	c203      	stmia	r2!, {r0, r1}
 801ba3e:	a80e      	add	r0, sp, #56	; 0x38
 801ba40:	f7f9 f8ba 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ba44:	4621      	mov	r1, r4
 801ba46:	a810      	add	r0, sp, #64	; 0x40
 801ba48:	f7f9 f8fa 	bl	8014c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ba4c:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801ba50:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801ba54:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801ba58:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801ba5c:	bfde      	ittt	le
 801ba5e:	b2b3      	uxthle	r3, r6
 801ba60:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801ba64:	fb92 f3f3 	sdivle	r3, r2, r3
 801ba68:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801ba6c:	bfc8      	it	gt
 801ba6e:	2301      	movgt	r3, #1
 801ba70:	fb92 f1f3 	sdiv	r1, r2, r3
 801ba74:	fa1f fc81 	uxth.w	ip, r1
 801ba78:	fb0c 2413 	mls	r4, ip, r3, r2
 801ba7c:	fb14 f406 	smulbb	r4, r4, r6
 801ba80:	441d      	add	r5, r3
 801ba82:	4404      	add	r4, r0
 801ba84:	4661      	mov	r1, ip
 801ba86:	3d01      	subs	r5, #1
 801ba88:	b2a4      	uxth	r4, r4
 801ba8a:	fb95 f5f3 	sdiv	r5, r5, r3
 801ba8e:	b131      	cbz	r1, 801ba9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801ba90:	9b05      	ldr	r3, [sp, #20]
 801ba92:	9901      	ldr	r1, [sp, #4]
 801ba94:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801ba98:	ba1b      	rev	r3, r3
 801ba9a:	4419      	add	r1, r3
 801ba9c:	9101      	str	r1, [sp, #4]
 801ba9e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801baa2:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801baa6:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801baaa:	4418      	add	r0, r3
 801baac:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801bab0:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801bab4:	441a      	add	r2, r3
 801bab6:	4b75      	ldr	r3, [pc, #468]	; (801bc8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801bab8:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801babc:	6818      	ldr	r0, [r3, #0]
 801babe:	6803      	ldr	r3, [r0, #0]
 801bac0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bac2:	4798      	blx	r3
 801bac4:	4972      	ldr	r1, [pc, #456]	; (801bc90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801bac6:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801baca:	880b      	ldrh	r3, [r1, #0]
 801bacc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801bad0:	910d      	str	r1, [sp, #52]	; 0x34
 801bad2:	fb03 c202 	mla	r2, r3, r2, ip
 801bad6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801bada:	4373      	muls	r3, r6
 801badc:	b2ad      	uxth	r5, r5
 801bade:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801bae2:	00ad      	lsls	r5, r5, #2
 801bae4:	9308      	str	r3, [sp, #32]
 801bae6:	1d2b      	adds	r3, r5, #4
 801bae8:	9309      	str	r3, [sp, #36]	; 0x24
 801baea:	9b02      	ldr	r3, [sp, #8]
 801baec:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801baf0:	9106      	str	r1, [sp, #24]
 801baf2:	43da      	mvns	r2, r3
 801baf4:	2c00      	cmp	r4, #0
 801baf6:	bf0c      	ite	eq
 801baf8:	46dc      	moveq	ip, fp
 801bafa:	f04f 0c00 	movne.w	ip, #0
 801bafe:	2300      	movs	r3, #0
 801bb00:	b2d2      	uxtb	r2, r2
 801bb02:	fa1f fc8c 	uxth.w	ip, ip
 801bb06:	9303      	str	r3, [sp, #12]
 801bb08:	9207      	str	r2, [sp, #28]
 801bb0a:	9a08      	ldr	r2, [sp, #32]
 801bb0c:	4282      	cmp	r2, r0
 801bb0e:	f240 80b5 	bls.w	801bc7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801bb12:	b963      	cbnz	r3, 801bb2e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801bb14:	9b01      	ldr	r3, [sp, #4]
 801bb16:	781a      	ldrb	r2, [r3, #0]
 801bb18:	0993      	lsrs	r3, r2, #6
 801bb1a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801bb1e:	9203      	str	r2, [sp, #12]
 801bb20:	1e5a      	subs	r2, r3, #1
 801bb22:	2a02      	cmp	r2, #2
 801bb24:	d815      	bhi.n	801bb52 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801bb26:	9a01      	ldr	r2, [sp, #4]
 801bb28:	3201      	adds	r2, #1
 801bb2a:	9201      	str	r2, [sp, #4]
 801bb2c:	b29b      	uxth	r3, r3
 801bb2e:	b1b4      	cbz	r4, 801bb5e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801bb30:	429c      	cmp	r4, r3
 801bb32:	bf95      	itete	ls
 801bb34:	1b1c      	subls	r4, r3, r4
 801bb36:	1ae4      	subhi	r4, r4, r3
 801bb38:	fa1f f884 	uxthls.w	r8, r4
 801bb3c:	b2a4      	uxthhi	r4, r4
 801bb3e:	bf87      	ittee	hi
 801bb40:	4666      	movhi	r6, ip
 801bb42:	f04f 0800 	movhi.w	r8, #0
 801bb46:	fa1f f68b 	uxthls.w	r6, fp
 801bb4a:	2400      	movls	r4, #0
 801bb4c:	4643      	mov	r3, r8
 801bb4e:	46b4      	mov	ip, r6
 801bb50:	e7db      	b.n	801bb0a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801bb52:	9a01      	ldr	r2, [sp, #4]
 801bb54:	9b01      	ldr	r3, [sp, #4]
 801bb56:	3202      	adds	r2, #2
 801bb58:	785b      	ldrb	r3, [r3, #1]
 801bb5a:	9201      	str	r2, [sp, #4]
 801bb5c:	e7e7      	b.n	801bb2e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801bb5e:	2203      	movs	r2, #3
 801bb60:	4615      	mov	r5, r2
 801bb62:	9909      	ldr	r1, [sp, #36]	; 0x24
 801bb64:	9a03      	ldr	r2, [sp, #12]
 801bb66:	fb15 1202 	smlabb	r2, r5, r2, r1
 801bb6a:	9905      	ldr	r1, [sp, #20]
 801bb6c:	4563      	cmp	r3, ip
 801bb6e:	eb01 0502 	add.w	r5, r1, r2
 801bb72:	9902      	ldr	r1, [sp, #8]
 801bb74:	bf29      	itett	cs
 801bb76:	eba3 080c 	subcs.w	r8, r3, ip
 801bb7a:	ebac 0603 	subcc.w	r6, ip, r3
 801bb7e:	fa1f f888 	uxthcs.w	r8, r8
 801bb82:	46e1      	movcs	r9, ip
 801bb84:	bf2f      	iteee	cs
 801bb86:	4626      	movcs	r6, r4
 801bb88:	b2b6      	uxthcc	r6, r6
 801bb8a:	4699      	movcc	r9, r3
 801bb8c:	46a0      	movcc	r8, r4
 801bb8e:	29ff      	cmp	r1, #255	; 0xff
 801bb90:	d04a      	beq.n	801bc28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801bb92:	9f06      	ldr	r7, [sp, #24]
 801bb94:	78a9      	ldrb	r1, [r5, #2]
 801bb96:	9004      	str	r0, [sp, #16]
 801bb98:	4379      	muls	r1, r7
 801bb9a:	910a      	str	r1, [sp, #40]	; 0x28
 801bb9c:	7869      	ldrb	r1, [r5, #1]
 801bb9e:	4379      	muls	r1, r7
 801bba0:	910b      	str	r1, [sp, #44]	; 0x2c
 801bba2:	9905      	ldr	r1, [sp, #20]
 801bba4:	5c8a      	ldrb	r2, [r1, r2]
 801bba6:	437a      	muls	r2, r7
 801bba8:	920c      	str	r2, [sp, #48]	; 0x30
 801bbaa:	46ca      	mov	sl, r9
 801bbac:	f1ba 0f00 	cmp.w	sl, #0
 801bbb0:	d03d      	beq.n	801bc2e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801bbb2:	9a04      	ldr	r2, [sp, #16]
 801bbb4:	9f07      	ldr	r7, [sp, #28]
 801bbb6:	8812      	ldrh	r2, [r2, #0]
 801bbb8:	1215      	asrs	r5, r2, #8
 801bbba:	46be      	mov	lr, r7
 801bbbc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bbc0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801bbc2:	10d1      	asrs	r1, r2, #3
 801bbc4:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801bbc8:	fb05 750e 	mla	r5, r5, lr, r7
 801bbcc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801bbd0:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801bbd2:	00d2      	lsls	r2, r2, #3
 801bbd4:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801bbd8:	fb01 710e 	mla	r1, r1, lr, r7
 801bbdc:	b2d2      	uxtb	r2, r2
 801bbde:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801bbe0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801bbe4:	b2ad      	uxth	r5, r5
 801bbe6:	fb02 720e 	mla	r2, r2, lr, r7
 801bbea:	b292      	uxth	r2, r2
 801bbec:	f105 0e01 	add.w	lr, r5, #1
 801bbf0:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801bbf4:	f102 0e01 	add.w	lr, r2, #1
 801bbf8:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801bbfc:	b289      	uxth	r1, r1
 801bbfe:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bc02:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801bc06:	4315      	orrs	r5, r2
 801bc08:	1c4a      	adds	r2, r1, #1
 801bc0a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bc0e:	0949      	lsrs	r1, r1, #5
 801bc10:	9a04      	ldr	r2, [sp, #16]
 801bc12:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bc16:	430d      	orrs	r5, r1
 801bc18:	f822 5b02 	strh.w	r5, [r2], #2
 801bc1c:	f10a 3aff 	add.w	sl, sl, #4294967295
 801bc20:	9204      	str	r2, [sp, #16]
 801bc22:	fa1f fa8a 	uxth.w	sl, sl
 801bc26:	e7c1      	b.n	801bbac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801bc28:	4649      	mov	r1, r9
 801bc2a:	4686      	mov	lr, r0
 801bc2c:	b999      	cbnz	r1, 801bc56 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801bc2e:	4563      	cmp	r3, ip
 801bc30:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801bc34:	d38a      	bcc.n	801bb4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801bc36:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801bc3a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bc3c:	fa1f f68b 	uxth.w	r6, fp
 801bc40:	1ba4      	subs	r4, r4, r6
 801bc42:	881b      	ldrh	r3, [r3, #0]
 801bc44:	b2a4      	uxth	r4, r4
 801bc46:	2c00      	cmp	r4, #0
 801bc48:	eba3 030b 	sub.w	r3, r3, fp
 801bc4c:	bf18      	it	ne
 801bc4e:	2600      	movne	r6, #0
 801bc50:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bc54:	e77a      	b.n	801bb4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801bc56:	78aa      	ldrb	r2, [r5, #2]
 801bc58:	4f0e      	ldr	r7, [pc, #56]	; (801bc94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801bc5a:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801bc5e:	786a      	ldrb	r2, [r5, #1]
 801bc60:	00d2      	lsls	r2, r2, #3
 801bc62:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bc66:	ea4a 0202 	orr.w	r2, sl, r2
 801bc6a:	f895 a000 	ldrb.w	sl, [r5]
 801bc6e:	3901      	subs	r1, #1
 801bc70:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801bc74:	f82e 2b02 	strh.w	r2, [lr], #2
 801bc78:	b289      	uxth	r1, r1
 801bc7a:	e7d7      	b.n	801bc2c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801bc7c:	4b03      	ldr	r3, [pc, #12]	; (801bc8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801bc7e:	6818      	ldr	r0, [r3, #0]
 801bc80:	6803      	ldr	r3, [r0, #0]
 801bc82:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bc84:	4798      	blx	r3
 801bc86:	b013      	add	sp, #76	; 0x4c
 801bc88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bc8c:	200137d4 	.word	0x200137d4
 801bc90:	200137ce 	.word	0x200137ce
 801bc94:	fffff800 	.word	0xfffff800

0801bc98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801bc98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bc9c:	b09d      	sub	sp, #116	; 0x74
 801bc9e:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801bca2:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801bca6:	920e      	str	r2, [sp, #56]	; 0x38
 801bca8:	461c      	mov	r4, r3
 801bcaa:	4683      	mov	fp, r0
 801bcac:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801bcae:	2a00      	cmp	r2, #0
 801bcb0:	f000 81e0 	beq.w	801c074 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801bcb4:	6820      	ldr	r0, [r4, #0]
 801bcb6:	6861      	ldr	r1, [r4, #4]
 801bcb8:	aa18      	add	r2, sp, #96	; 0x60
 801bcba:	c203      	stmia	r2!, {r0, r1}
 801bcbc:	6818      	ldr	r0, [r3, #0]
 801bcbe:	6859      	ldr	r1, [r3, #4]
 801bcc0:	aa1a      	add	r2, sp, #104	; 0x68
 801bcc2:	c203      	stmia	r2!, {r0, r1}
 801bcc4:	a818      	add	r0, sp, #96	; 0x60
 801bcc6:	f7f8 ff77 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bcca:	4621      	mov	r1, r4
 801bccc:	a81a      	add	r0, sp, #104	; 0x68
 801bcce:	f7f8 ffb7 	bl	8014c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bcd2:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801bcd6:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801bcda:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801bcde:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801bce2:	bfd7      	itett	le
 801bce4:	b29a      	uxthle	r2, r3
 801bce6:	2201      	movgt	r2, #1
 801bce8:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801bcec:	fb91 f2f2 	sdivle	r2, r1, r2
 801bcf0:	9202      	str	r2, [sp, #8]
 801bcf2:	9802      	ldr	r0, [sp, #8]
 801bcf4:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801bcf8:	fb92 f0f0 	sdiv	r0, r2, r0
 801bcfc:	b280      	uxth	r0, r0
 801bcfe:	900f      	str	r0, [sp, #60]	; 0x3c
 801bd00:	9902      	ldr	r1, [sp, #8]
 801bd02:	9802      	ldr	r0, [sp, #8]
 801bd04:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801bd06:	440c      	add	r4, r1
 801bd08:	fb05 2510 	mls	r5, r5, r0, r2
 801bd0c:	fb15 f503 	smulbb	r5, r5, r3
 801bd10:	3c01      	subs	r4, #1
 801bd12:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801bd16:	fb94 f4f1 	sdiv	r4, r4, r1
 801bd1a:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801bd1e:	440d      	add	r5, r1
 801bd20:	4419      	add	r1, r3
 801bd22:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801bd26:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801bd2a:	441a      	add	r2, r3
 801bd2c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801bd30:	9306      	str	r3, [sp, #24]
 801bd32:	4bb3      	ldr	r3, [pc, #716]	; (801c000 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801bd34:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801bd38:	6818      	ldr	r0, [r3, #0]
 801bd3a:	6803      	ldr	r3, [r0, #0]
 801bd3c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bd3e:	4798      	blx	r3
 801bd40:	4bb0      	ldr	r3, [pc, #704]	; (801c004 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801bd42:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801bd46:	881a      	ldrh	r2, [r3, #0]
 801bd48:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801bd4c:	9316      	str	r3, [sp, #88]	; 0x58
 801bd4e:	fb02 7101 	mla	r1, r2, r1, r7
 801bd52:	3401      	adds	r4, #1
 801bd54:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801bd58:	b2a4      	uxth	r4, r4
 801bd5a:	4356      	muls	r6, r2
 801bd5c:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801bd60:	00a4      	lsls	r4, r4, #2
 801bd62:	920a      	str	r2, [sp, #40]	; 0x28
 801bd64:	1d22      	adds	r2, r4, #4
 801bd66:	b2ad      	uxth	r5, r5
 801bd68:	9213      	str	r2, [sp, #76]	; 0x4c
 801bd6a:	4ba7      	ldr	r3, [pc, #668]	; (801c008 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801bd6c:	9a06      	ldr	r2, [sp, #24]
 801bd6e:	2d00      	cmp	r5, #0
 801bd70:	bf0c      	ite	eq
 801bd72:	4611      	moveq	r1, r2
 801bd74:	2100      	movne	r1, #0
 801bd76:	2200      	movs	r2, #0
 801bd78:	eba3 030b 	sub.w	r3, r3, fp
 801bd7c:	b289      	uxth	r1, r1
 801bd7e:	920d      	str	r2, [sp, #52]	; 0x34
 801bd80:	9317      	str	r3, [sp, #92]	; 0x5c
 801bd82:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bd84:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bd86:	fa12 f383 	uxtah	r3, r2, r3
 801bd8a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bd8c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801bd90:	3304      	adds	r3, #4
 801bd92:	9308      	str	r3, [sp, #32]
 801bd94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bd96:	4543      	cmp	r3, r8
 801bd98:	f240 8167 	bls.w	801c06a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801bd9c:	9a02      	ldr	r2, [sp, #8]
 801bd9e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801bda2:	fbb5 f3f3 	udiv	r3, r5, r3
 801bda6:	1ad3      	subs	r3, r2, r3
 801bda8:	b29b      	uxth	r3, r3
 801bdaa:	9314      	str	r3, [sp, #80]	; 0x50
 801bdac:	9b08      	ldr	r3, [sp, #32]
 801bdae:	9808      	ldr	r0, [sp, #32]
 801bdb0:	785a      	ldrb	r2, [r3, #1]
 801bdb2:	789b      	ldrb	r3, [r3, #2]
 801bdb4:	7800      	ldrb	r0, [r0, #0]
 801bdb6:	9010      	str	r0, [sp, #64]	; 0x40
 801bdb8:	021b      	lsls	r3, r3, #8
 801bdba:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801bdbe:	9a08      	ldr	r2, [sp, #32]
 801bdc0:	78d2      	ldrb	r2, [r2, #3]
 801bdc2:	4313      	orrs	r3, r2
 801bdc4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bdc6:	3001      	adds	r0, #1
 801bdc8:	441a      	add	r2, r3
 801bdca:	9007      	str	r0, [sp, #28]
 801bdcc:	1c50      	adds	r0, r2, #1
 801bdce:	9005      	str	r0, [sp, #20]
 801bdd0:	7852      	ldrb	r2, [r2, #1]
 801bdd2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801bdd4:	0212      	lsls	r2, r2, #8
 801bdd6:	5cc3      	ldrb	r3, [r0, r3]
 801bdd8:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801bddc:	431a      	orrs	r2, r3
 801bdde:	b293      	uxth	r3, r2
 801bde0:	930b      	str	r3, [sp, #44]	; 0x2c
 801bde2:	2300      	movs	r3, #0
 801bde4:	9309      	str	r3, [sp, #36]	; 0x24
 801bde6:	2301      	movs	r3, #1
 801bde8:	9301      	str	r3, [sp, #4]
 801bdea:	9304      	str	r3, [sp, #16]
 801bdec:	2300      	movs	r3, #0
 801bdee:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801bdf2:	9303      	str	r3, [sp, #12]
 801bdf4:	f04f 0e01 	mov.w	lr, #1
 801bdf8:	2d00      	cmp	r5, #0
 801bdfa:	d07c      	beq.n	801bef6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801bdfc:	45ae      	cmp	lr, r5
 801bdfe:	d26b      	bcs.n	801bed8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801be00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801be02:	eba5 050e 	sub.w	r5, r5, lr
 801be06:	4543      	cmp	r3, r8
 801be08:	b2ad      	uxth	r5, r5
 801be0a:	460c      	mov	r4, r1
 801be0c:	d802      	bhi.n	801be14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801be0e:	e070      	b.n	801bef2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801be10:	2b00      	cmp	r3, #0
 801be12:	d15c      	bne.n	801bece <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801be14:	9b05      	ldr	r3, [sp, #20]
 801be16:	9a04      	ldr	r2, [sp, #16]
 801be18:	785b      	ldrb	r3, [r3, #1]
 801be1a:	9904      	ldr	r1, [sp, #16]
 801be1c:	f1c2 0207 	rsb	r2, r2, #7
 801be20:	4093      	lsls	r3, r2
 801be22:	005b      	lsls	r3, r3, #1
 801be24:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801be28:	9b05      	ldr	r3, [sp, #20]
 801be2a:	781b      	ldrb	r3, [r3, #0]
 801be2c:	410b      	asrs	r3, r1
 801be2e:	3101      	adds	r1, #1
 801be30:	b2c9      	uxtb	r1, r1
 801be32:	2908      	cmp	r1, #8
 801be34:	9104      	str	r1, [sp, #16]
 801be36:	9905      	ldr	r1, [sp, #20]
 801be38:	bf0a      	itet	eq
 801be3a:	3102      	addeq	r1, #2
 801be3c:	3101      	addne	r1, #1
 801be3e:	9105      	streq	r1, [sp, #20]
 801be40:	b2db      	uxtb	r3, r3
 801be42:	bf0a      	itet	eq
 801be44:	2100      	moveq	r1, #0
 801be46:	9105      	strne	r1, [sp, #20]
 801be48:	9104      	streq	r1, [sp, #16]
 801be4a:	4313      	orrs	r3, r2
 801be4c:	9910      	ldr	r1, [sp, #64]	; 0x40
 801be4e:	b29a      	uxth	r2, r3
 801be50:	4291      	cmp	r1, r2
 801be52:	d30a      	bcc.n	801be6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801be54:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801be58:	2301      	movs	r3, #1
 801be5a:	9907      	ldr	r1, [sp, #28]
 801be5c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801be60:	d30f      	bcc.n	801be82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801be62:	2100      	movs	r1, #0
 801be64:	9301      	str	r3, [sp, #4]
 801be66:	9103      	str	r1, [sp, #12]
 801be68:	e032      	b.n	801bed0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801be6a:	9b07      	ldr	r3, [sp, #28]
 801be6c:	429a      	cmp	r2, r3
 801be6e:	d318      	bcc.n	801bea2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801be70:	9b01      	ldr	r3, [sp, #4]
 801be72:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801be76:	445b      	add	r3, fp
 801be78:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801be7c:	9b01      	ldr	r3, [sp, #4]
 801be7e:	3301      	adds	r3, #1
 801be80:	b29b      	uxth	r3, r3
 801be82:	9907      	ldr	r1, [sp, #28]
 801be84:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801be88:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801be8c:	7108      	strb	r0, [r1, #4]
 801be8e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801be90:	80c8      	strh	r0, [r1, #6]
 801be92:	9801      	ldr	r0, [sp, #4]
 801be94:	3001      	adds	r0, #1
 801be96:	7148      	strb	r0, [r1, #5]
 801be98:	9907      	ldr	r1, [sp, #28]
 801be9a:	3101      	adds	r1, #1
 801be9c:	b289      	uxth	r1, r1
 801be9e:	9107      	str	r1, [sp, #28]
 801bea0:	e7df      	b.n	801be62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801bea2:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801bea6:	4611      	mov	r1, r2
 801bea8:	795b      	ldrb	r3, [r3, #5]
 801beaa:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801beae:	4458      	add	r0, fp
 801beb0:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801beb2:	4406      	add	r6, r0
 801beb4:	2e00      	cmp	r6, #0
 801beb6:	dd06      	ble.n	801bec6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801beb8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801bebc:	790e      	ldrb	r6, [r1, #4]
 801bebe:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801bec2:	88c9      	ldrh	r1, [r1, #6]
 801bec4:	e7f4      	b.n	801beb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801bec6:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801beca:	b29b      	uxth	r3, r3
 801becc:	e7c5      	b.n	801be5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801bece:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801bed0:	920b      	str	r2, [sp, #44]	; 0x2c
 801bed2:	4621      	mov	r1, r4
 801bed4:	469e      	mov	lr, r3
 801bed6:	e78f      	b.n	801bdf8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801bed8:	9a03      	ldr	r2, [sp, #12]
 801beda:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801bede:	442a      	add	r2, r5
 801bee0:	ebae 0305 	sub.w	r3, lr, r5
 801bee4:	b292      	uxth	r2, r2
 801bee6:	b29b      	uxth	r3, r3
 801bee8:	9203      	str	r2, [sp, #12]
 801beea:	2500      	movs	r5, #0
 801beec:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801beee:	4542      	cmp	r2, r8
 801bef0:	d88e      	bhi.n	801be10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801bef2:	4621      	mov	r1, r4
 801bef4:	e74e      	b.n	801bd94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801bef6:	458e      	cmp	lr, r1
 801bef8:	bf29      	itett	cs
 801befa:	ebae 0301 	subcs.w	r3, lr, r1
 801befe:	eba1 040e 	subcc.w	r4, r1, lr
 801bf02:	b29b      	uxthcs	r3, r3
 801bf04:	910c      	strcs	r1, [sp, #48]	; 0x30
 801bf06:	bf2f      	iteee	cs
 801bf08:	462c      	movcs	r4, r5
 801bf0a:	b2a4      	uxthcc	r4, r4
 801bf0c:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801bf10:	462b      	movcc	r3, r5
 801bf12:	f04f 0900 	mov.w	r9, #0
 801bf16:	9a03      	ldr	r2, [sp, #12]
 801bf18:	980c      	ldr	r0, [sp, #48]	; 0x30
 801bf1a:	444a      	add	r2, r9
 801bf1c:	4548      	cmp	r0, r9
 801bf1e:	b292      	uxth	r2, r2
 801bf20:	d074      	beq.n	801c00c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801bf22:	445a      	add	r2, fp
 801bf24:	2004      	movs	r0, #4
 801bf26:	4605      	mov	r5, r0
 801bf28:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801bf2c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801bf2e:	fb15 0202 	smlabb	r2, r5, r2, r0
 801bf32:	9812      	ldr	r0, [sp, #72]	; 0x48
 801bf34:	5880      	ldr	r0, [r0, r2]
 801bf36:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801bf3a:	d014      	beq.n	801bf66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801bf3c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801bf40:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801bf44:	d112      	bne.n	801bf6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801bf46:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801bf48:	2aff      	cmp	r2, #255	; 0xff
 801bf4a:	d10f      	bne.n	801bf6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801bf4c:	0942      	lsrs	r2, r0, #5
 801bf4e:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801bf52:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bf56:	f025 0507 	bic.w	r5, r5, #7
 801bf5a:	4315      	orrs	r5, r2
 801bf5c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801bf60:	4305      	orrs	r5, r0
 801bf62:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801bf66:	f109 0901 	add.w	r9, r9, #1
 801bf6a:	e7d4      	b.n	801bf16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801bf6c:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801bf70:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801bf74:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801bf78:	9215      	str	r2, [sp, #84]	; 0x54
 801bf7a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801bf7c:	fb02 fa0a 	mul.w	sl, r2, sl
 801bf80:	f10a 0201 	add.w	r2, sl, #1
 801bf84:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801bf88:	ea4f 272c 	mov.w	r7, ip, asr #8
 801bf8c:	1212      	asrs	r2, r2, #8
 801bf8e:	fa1f fa82 	uxth.w	sl, r2
 801bf92:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801bf96:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bf9a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bf9e:	43d2      	mvns	r2, r2
 801bfa0:	b2d2      	uxtb	r2, r2
 801bfa2:	fb16 f60a 	smulbb	r6, r6, sl
 801bfa6:	fa5f fc8c 	uxtb.w	ip, ip
 801bfaa:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801bfae:	b2c0      	uxtb	r0, r0
 801bfb0:	fb07 6702 	mla	r7, r7, r2, r6
 801bfb4:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801bfb8:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801bfba:	fb10 f00a 	smulbb	r0, r0, sl
 801bfbe:	fb0c 0002 	mla	r0, ip, r2, r0
 801bfc2:	b2ed      	uxtb	r5, r5
 801bfc4:	b2bf      	uxth	r7, r7
 801bfc6:	fb15 f50a 	smulbb	r5, r5, sl
 801bfca:	b280      	uxth	r0, r0
 801bfcc:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801bfd0:	fb06 5602 	mla	r6, r6, r2, r5
 801bfd4:	1c7a      	adds	r2, r7, #1
 801bfd6:	1c45      	adds	r5, r0, #1
 801bfd8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801bfdc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801bfe0:	b2b6      	uxth	r6, r6
 801bfe2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801bfe6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801bfea:	432f      	orrs	r7, r5
 801bfec:	1c75      	adds	r5, r6, #1
 801bfee:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801bff2:	096d      	lsrs	r5, r5, #5
 801bff4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bff8:	432f      	orrs	r7, r5
 801bffa:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801bffe:	e7b2      	b.n	801bf66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c000:	200137d4 	.word	0x200137d4
 801c004:	200137ce 	.word	0x200137ce
 801c008:	fffff7fb 	.word	0xfffff7fb
 801c00c:	9203      	str	r2, [sp, #12]
 801c00e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c010:	458e      	cmp	lr, r1
 801c012:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c016:	f4ff af68 	bcc.w	801beea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801c01a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801c01c:	9906      	ldr	r1, [sp, #24]
 801c01e:	8812      	ldrh	r2, [r2, #0]
 801c020:	1a52      	subs	r2, r2, r1
 801c022:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c026:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c028:	9914      	ldr	r1, [sp, #80]	; 0x50
 801c02a:	3201      	adds	r2, #1
 801c02c:	428a      	cmp	r2, r1
 801c02e:	9209      	str	r2, [sp, #36]	; 0x24
 801c030:	d111      	bne.n	801c056 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801c032:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801c036:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801c03a:	9b06      	ldr	r3, [sp, #24]
 801c03c:	eba5 0509 	sub.w	r5, r5, r9
 801c040:	b2ad      	uxth	r5, r5
 801c042:	2d00      	cmp	r5, #0
 801c044:	bf08      	it	eq
 801c046:	4619      	moveq	r1, r3
 801c048:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c04a:	bf18      	it	ne
 801c04c:	2100      	movne	r1, #0
 801c04e:	3301      	adds	r3, #1
 801c050:	930d      	str	r3, [sp, #52]	; 0x34
 801c052:	b289      	uxth	r1, r1
 801c054:	e695      	b.n	801bd82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801c056:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c05a:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801c05e:	1b2d      	subs	r5, r5, r4
 801c060:	b2ad      	uxth	r5, r5
 801c062:	2d00      	cmp	r5, #0
 801c064:	bf18      	it	ne
 801c066:	2400      	movne	r4, #0
 801c068:	e740      	b.n	801beec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801c06a:	4b04      	ldr	r3, [pc, #16]	; (801c07c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801c06c:	6818      	ldr	r0, [r3, #0]
 801c06e:	6803      	ldr	r3, [r0, #0]
 801c070:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c072:	4798      	blx	r3
 801c074:	b01d      	add	sp, #116	; 0x74
 801c076:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c07a:	bf00      	nop
 801c07c:	200137d4 	.word	0x200137d4

0801c080 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801c080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c084:	b09f      	sub	sp, #124	; 0x7c
 801c086:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801c08a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801c08e:	920a      	str	r2, [sp, #40]	; 0x28
 801c090:	461d      	mov	r5, r3
 801c092:	4604      	mov	r4, r0
 801c094:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c096:	2a00      	cmp	r2, #0
 801c098:	f000 81fa 	beq.w	801c490 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801c09c:	6828      	ldr	r0, [r5, #0]
 801c09e:	6869      	ldr	r1, [r5, #4]
 801c0a0:	aa1a      	add	r2, sp, #104	; 0x68
 801c0a2:	c203      	stmia	r2!, {r0, r1}
 801c0a4:	6818      	ldr	r0, [r3, #0]
 801c0a6:	6859      	ldr	r1, [r3, #4]
 801c0a8:	aa1c      	add	r2, sp, #112	; 0x70
 801c0aa:	c203      	stmia	r2!, {r0, r1}
 801c0ac:	a81a      	add	r0, sp, #104	; 0x68
 801c0ae:	f7f8 fd83 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c0b2:	4629      	mov	r1, r5
 801c0b4:	a81c      	add	r0, sp, #112	; 0x70
 801c0b6:	f7f8 fdc3 	bl	8014c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c0ba:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c0be:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801c0c2:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801c0c6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c0ca:	bfd7      	itett	le
 801c0cc:	b29a      	uxthle	r2, r3
 801c0ce:	2201      	movgt	r2, #1
 801c0d0:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c0d4:	fb91 f2f2 	sdivle	r2, r1, r2
 801c0d8:	9201      	str	r2, [sp, #4]
 801c0da:	9801      	ldr	r0, [sp, #4]
 801c0dc:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801c0e0:	fb92 f0f0 	sdiv	r0, r2, r0
 801c0e4:	b280      	uxth	r0, r0
 801c0e6:	9010      	str	r0, [sp, #64]	; 0x40
 801c0e8:	9901      	ldr	r1, [sp, #4]
 801c0ea:	9801      	ldr	r0, [sp, #4]
 801c0ec:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c0ee:	440e      	add	r6, r1
 801c0f0:	fb05 2510 	mls	r5, r5, r0, r2
 801c0f4:	fb15 f503 	smulbb	r5, r5, r3
 801c0f8:	3e01      	subs	r6, #1
 801c0fa:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801c0fe:	fb96 f6f1 	sdiv	r6, r6, r1
 801c102:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801c106:	440d      	add	r5, r1
 801c108:	4419      	add	r1, r3
 801c10a:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801c10e:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801c112:	441a      	add	r2, r3
 801c114:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801c118:	9304      	str	r3, [sp, #16]
 801c11a:	4b96      	ldr	r3, [pc, #600]	; (801c374 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c11c:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801c120:	6818      	ldr	r0, [r3, #0]
 801c122:	6803      	ldr	r3, [r0, #0]
 801c124:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c126:	4798      	blx	r3
 801c128:	4b93      	ldr	r3, [pc, #588]	; (801c378 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c12a:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801c12e:	881a      	ldrh	r2, [r3, #0]
 801c130:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801c134:	9318      	str	r3, [sp, #96]	; 0x60
 801c136:	fb02 c101 	mla	r1, r2, r1, ip
 801c13a:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801c13e:	4357      	muls	r7, r2
 801c140:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801c144:	3601      	adds	r6, #1
 801c146:	920b      	str	r2, [sp, #44]	; 0x2c
 801c148:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c14a:	4b8c      	ldr	r3, [pc, #560]	; (801c37c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c14c:	b2b6      	uxth	r6, r6
 801c14e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801c152:	1d32      	adds	r2, r6, #4
 801c154:	9206      	str	r2, [sp, #24]
 801c156:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c158:	43d2      	mvns	r2, r2
 801c15a:	b2d2      	uxtb	r2, r2
 801c15c:	b2ad      	uxth	r5, r5
 801c15e:	9215      	str	r2, [sp, #84]	; 0x54
 801c160:	9a04      	ldr	r2, [sp, #16]
 801c162:	2d00      	cmp	r5, #0
 801c164:	bf0c      	ite	eq
 801c166:	4611      	moveq	r1, r2
 801c168:	2100      	movne	r1, #0
 801c16a:	2200      	movs	r2, #0
 801c16c:	1b1b      	subs	r3, r3, r4
 801c16e:	b289      	uxth	r1, r1
 801c170:	920d      	str	r2, [sp, #52]	; 0x34
 801c172:	9319      	str	r3, [sp, #100]	; 0x64
 801c174:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c176:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c178:	fa12 f383 	uxtah	r3, r2, r3
 801c17c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c17e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801c182:	3304      	adds	r3, #4
 801c184:	9307      	str	r3, [sp, #28]
 801c186:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c188:	455b      	cmp	r3, fp
 801c18a:	f240 817c 	bls.w	801c486 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801c18e:	9a01      	ldr	r2, [sp, #4]
 801c190:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801c194:	fbb5 f3f3 	udiv	r3, r5, r3
 801c198:	1ad3      	subs	r3, r2, r3
 801c19a:	b29b      	uxth	r3, r3
 801c19c:	9316      	str	r3, [sp, #88]	; 0x58
 801c19e:	9b07      	ldr	r3, [sp, #28]
 801c1a0:	9807      	ldr	r0, [sp, #28]
 801c1a2:	785a      	ldrb	r2, [r3, #1]
 801c1a4:	789b      	ldrb	r3, [r3, #2]
 801c1a6:	7800      	ldrb	r0, [r0, #0]
 801c1a8:	9011      	str	r0, [sp, #68]	; 0x44
 801c1aa:	021b      	lsls	r3, r3, #8
 801c1ac:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801c1b0:	9a07      	ldr	r2, [sp, #28]
 801c1b2:	78d2      	ldrb	r2, [r2, #3]
 801c1b4:	4313      	orrs	r3, r2
 801c1b6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c1b8:	3001      	adds	r0, #1
 801c1ba:	441a      	add	r2, r3
 801c1bc:	9005      	str	r0, [sp, #20]
 801c1be:	1c50      	adds	r0, r2, #1
 801c1c0:	9003      	str	r0, [sp, #12]
 801c1c2:	7852      	ldrb	r2, [r2, #1]
 801c1c4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c1c6:	0212      	lsls	r2, r2, #8
 801c1c8:	5cc3      	ldrb	r3, [r0, r3]
 801c1ca:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801c1ce:	431a      	orrs	r2, r3
 801c1d0:	b293      	uxth	r3, r2
 801c1d2:	930c      	str	r3, [sp, #48]	; 0x30
 801c1d4:	2300      	movs	r3, #0
 801c1d6:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801c1da:	9308      	str	r3, [sp, #32]
 801c1dc:	461a      	mov	r2, r3
 801c1de:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c1e2:	930e      	str	r3, [sp, #56]	; 0x38
 801c1e4:	f04f 0801 	mov.w	r8, #1
 801c1e8:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801c1ec:	f8cd 8008 	str.w	r8, [sp, #8]
 801c1f0:	46c4      	mov	ip, r8
 801c1f2:	930f      	str	r3, [sp, #60]	; 0x3c
 801c1f4:	2d00      	cmp	r5, #0
 801c1f6:	d07c      	beq.n	801c2f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801c1f8:	45ac      	cmp	ip, r5
 801c1fa:	d26c      	bcs.n	801c2d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801c1fc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c1fe:	eba5 050c 	sub.w	r5, r5, ip
 801c202:	455b      	cmp	r3, fp
 801c204:	b2ad      	uxth	r5, r5
 801c206:	4608      	mov	r0, r1
 801c208:	d802      	bhi.n	801c210 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801c20a:	e070      	b.n	801c2ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801c20c:	2b00      	cmp	r3, #0
 801c20e:	d15c      	bne.n	801c2ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801c210:	9b03      	ldr	r3, [sp, #12]
 801c212:	9a02      	ldr	r2, [sp, #8]
 801c214:	785b      	ldrb	r3, [r3, #1]
 801c216:	9902      	ldr	r1, [sp, #8]
 801c218:	f1c2 0207 	rsb	r2, r2, #7
 801c21c:	4093      	lsls	r3, r2
 801c21e:	005b      	lsls	r3, r3, #1
 801c220:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c224:	9b03      	ldr	r3, [sp, #12]
 801c226:	781b      	ldrb	r3, [r3, #0]
 801c228:	410b      	asrs	r3, r1
 801c22a:	3101      	adds	r1, #1
 801c22c:	b2c9      	uxtb	r1, r1
 801c22e:	2908      	cmp	r1, #8
 801c230:	9102      	str	r1, [sp, #8]
 801c232:	9903      	ldr	r1, [sp, #12]
 801c234:	bf0a      	itet	eq
 801c236:	3102      	addeq	r1, #2
 801c238:	3101      	addne	r1, #1
 801c23a:	9103      	streq	r1, [sp, #12]
 801c23c:	b2db      	uxtb	r3, r3
 801c23e:	bf0a      	itet	eq
 801c240:	2100      	moveq	r1, #0
 801c242:	9103      	strne	r1, [sp, #12]
 801c244:	9102      	streq	r1, [sp, #8]
 801c246:	4313      	orrs	r3, r2
 801c248:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c24a:	b29a      	uxth	r2, r3
 801c24c:	4291      	cmp	r1, r2
 801c24e:	d30a      	bcc.n	801c266 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801c250:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801c254:	2301      	movs	r3, #1
 801c256:	9905      	ldr	r1, [sp, #20]
 801c258:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801c25c:	d30f      	bcc.n	801c27e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801c25e:	2100      	movs	r1, #0
 801c260:	4698      	mov	r8, r3
 801c262:	9100      	str	r1, [sp, #0]
 801c264:	e032      	b.n	801c2cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801c266:	9b05      	ldr	r3, [sp, #20]
 801c268:	429a      	cmp	r2, r3
 801c26a:	d318      	bcc.n	801c29e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801c26c:	eb04 0308 	add.w	r3, r4, r8
 801c270:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801c274:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801c278:	f108 0301 	add.w	r3, r8, #1
 801c27c:	b29b      	uxth	r3, r3
 801c27e:	9905      	ldr	r1, [sp, #20]
 801c280:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801c284:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c288:	710e      	strb	r6, [r1, #4]
 801c28a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801c28c:	80ce      	strh	r6, [r1, #6]
 801c28e:	f108 0601 	add.w	r6, r8, #1
 801c292:	714e      	strb	r6, [r1, #5]
 801c294:	9905      	ldr	r1, [sp, #20]
 801c296:	3101      	adds	r1, #1
 801c298:	b289      	uxth	r1, r1
 801c29a:	9105      	str	r1, [sp, #20]
 801c29c:	e7df      	b.n	801c25e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801c29e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801c2a2:	4611      	mov	r1, r2
 801c2a4:	795b      	ldrb	r3, [r3, #5]
 801c2a6:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801c2aa:	4426      	add	r6, r4
 801c2ac:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801c2ae:	4437      	add	r7, r6
 801c2b0:	2f00      	cmp	r7, #0
 801c2b2:	dd06      	ble.n	801c2c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801c2b4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c2b8:	790f      	ldrb	r7, [r1, #4]
 801c2ba:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801c2be:	88c9      	ldrh	r1, [r1, #6]
 801c2c0:	e7f4      	b.n	801c2ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801c2c2:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801c2c6:	b29b      	uxth	r3, r3
 801c2c8:	e7c5      	b.n	801c256 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801c2ca:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c2cc:	920c      	str	r2, [sp, #48]	; 0x30
 801c2ce:	4601      	mov	r1, r0
 801c2d0:	9a00      	ldr	r2, [sp, #0]
 801c2d2:	469c      	mov	ip, r3
 801c2d4:	e78e      	b.n	801c1f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801c2d6:	1957      	adds	r7, r2, r5
 801c2d8:	ebac 0305 	sub.w	r3, ip, r5
 801c2dc:	b2ba      	uxth	r2, r7
 801c2de:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c2e2:	9200      	str	r2, [sp, #0]
 801c2e4:	b29b      	uxth	r3, r3
 801c2e6:	2500      	movs	r5, #0
 801c2e8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c2ea:	455a      	cmp	r2, fp
 801c2ec:	d88e      	bhi.n	801c20c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801c2ee:	4601      	mov	r1, r0
 801c2f0:	e749      	b.n	801c186 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801c2f2:	458c      	cmp	ip, r1
 801c2f4:	bf2c      	ite	cs
 801c2f6:	4628      	movcs	r0, r5
 801c2f8:	462b      	movcc	r3, r5
 801c2fa:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801c2fc:	bf27      	ittee	cs
 801c2fe:	9109      	strcs	r1, [sp, #36]	; 0x24
 801c300:	ebac 0301 	subcs.w	r3, ip, r1
 801c304:	eba1 000c 	subcc.w	r0, r1, ip
 801c308:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801c30c:	bf2c      	ite	cs
 801c30e:	b29b      	uxthcs	r3, r3
 801c310:	b280      	uxthcc	r0, r0
 801c312:	2dff      	cmp	r5, #255	; 0xff
 801c314:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801c316:	eb02 0705 	add.w	r7, r2, r5
 801c31a:	b2bd      	uxth	r5, r7
 801c31c:	9500      	str	r5, [sp, #0]
 801c31e:	d12f      	bne.n	801c380 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801c320:	465e      	mov	r6, fp
 801c322:	9d00      	ldr	r5, [sp, #0]
 801c324:	42aa      	cmp	r2, r5
 801c326:	f040 8084 	bne.w	801c432 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801c32a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c32c:	458c      	cmp	ip, r1
 801c32e:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c332:	d3d8      	bcc.n	801c2e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801c334:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c336:	9904      	ldr	r1, [sp, #16]
 801c338:	8812      	ldrh	r2, [r2, #0]
 801c33a:	1a52      	subs	r2, r2, r1
 801c33c:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c340:	9a08      	ldr	r2, [sp, #32]
 801c342:	9916      	ldr	r1, [sp, #88]	; 0x58
 801c344:	3201      	adds	r2, #1
 801c346:	428a      	cmp	r2, r1
 801c348:	9208      	str	r2, [sp, #32]
 801c34a:	f040 8092 	bne.w	801c472 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801c34e:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801c352:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801c356:	9b04      	ldr	r3, [sp, #16]
 801c358:	eba5 050c 	sub.w	r5, r5, ip
 801c35c:	b2ad      	uxth	r5, r5
 801c35e:	2d00      	cmp	r5, #0
 801c360:	bf08      	it	eq
 801c362:	4619      	moveq	r1, r3
 801c364:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c366:	bf18      	it	ne
 801c368:	2100      	movne	r1, #0
 801c36a:	3301      	adds	r3, #1
 801c36c:	930d      	str	r3, [sp, #52]	; 0x34
 801c36e:	b289      	uxth	r1, r1
 801c370:	e700      	b.n	801c174 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801c372:	bf00      	nop
 801c374:	200137d4 	.word	0x200137d4
 801c378:	200137ce 	.word	0x200137ce
 801c37c:	fffff7fb 	.word	0xfffff7fb
 801c380:	46d9      	mov	r9, fp
 801c382:	9d00      	ldr	r5, [sp, #0]
 801c384:	42aa      	cmp	r2, r5
 801c386:	d0d0      	beq.n	801c32a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801c388:	1c55      	adds	r5, r2, #1
 801c38a:	4422      	add	r2, r4
 801c38c:	9517      	str	r5, [sp, #92]	; 0x5c
 801c38e:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801c392:	9a06      	ldr	r2, [sp, #24]
 801c394:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801c398:	4472      	add	r2, lr
 801c39a:	9212      	str	r2, [sp, #72]	; 0x48
 801c39c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801c39e:	f8b9 2000 	ldrh.w	r2, [r9]
 801c3a2:	f897 a002 	ldrb.w	sl, [r7, #2]
 801c3a6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c3a8:	1216      	asrs	r6, r2, #8
 801c3aa:	fb1a fa07 	smulbb	sl, sl, r7
 801c3ae:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c3b2:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c3b4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c3b8:	fb06 a607 	mla	r6, r6, r7, sl
 801c3bc:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801c3be:	f897 a001 	ldrb.w	sl, [r7, #1]
 801c3c2:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c3c4:	10d5      	asrs	r5, r2, #3
 801c3c6:	fb1a fa07 	smulbb	sl, sl, r7
 801c3ca:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c3ce:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c3d0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c3d4:	fb05 a507 	mla	r5, r5, r7, sl
 801c3d8:	9f06      	ldr	r7, [sp, #24]
 801c3da:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c3de:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c3e0:	00d2      	lsls	r2, r2, #3
 801c3e2:	fb1e fe07 	smulbb	lr, lr, r7
 801c3e6:	b2d2      	uxtb	r2, r2
 801c3e8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c3ea:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c3ee:	b2b6      	uxth	r6, r6
 801c3f0:	fb02 e207 	mla	r2, r2, r7, lr
 801c3f4:	b292      	uxth	r2, r2
 801c3f6:	b2ad      	uxth	r5, r5
 801c3f8:	f106 0a01 	add.w	sl, r6, #1
 801c3fc:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801c400:	f102 0e01 	add.w	lr, r2, #1
 801c404:	f105 0a01 	add.w	sl, r5, #1
 801c408:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801c40c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c410:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c414:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801c418:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c41c:	ea4e 0606 	orr.w	r6, lr, r6
 801c420:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c424:	ea46 060a 	orr.w	r6, r6, sl
 801c428:	f829 6b02 	strh.w	r6, [r9], #2
 801c42c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801c430:	e7a7      	b.n	801c382 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801c432:	f102 0e01 	add.w	lr, r2, #1
 801c436:	4422      	add	r2, r4
 801c438:	9f06      	ldr	r7, [sp, #24]
 801c43a:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801c43e:	9a06      	ldr	r2, [sp, #24]
 801c440:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801c444:	eb02 0a05 	add.w	sl, r2, r5
 801c448:	4a13      	ldr	r2, [pc, #76]	; (801c498 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801c44a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801c44e:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801c452:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801c456:	00d2      	lsls	r2, r2, #3
 801c458:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c45c:	ea49 0202 	orr.w	r2, r9, r2
 801c460:	f817 9005 	ldrb.w	r9, [r7, r5]
 801c464:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801c468:	f826 2b02 	strh.w	r2, [r6], #2
 801c46c:	fa1f f28e 	uxth.w	r2, lr
 801c470:	e757      	b.n	801c322 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801c472:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c476:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801c47a:	1a2d      	subs	r5, r5, r0
 801c47c:	b2ad      	uxth	r5, r5
 801c47e:	2d00      	cmp	r5, #0
 801c480:	bf18      	it	ne
 801c482:	2000      	movne	r0, #0
 801c484:	e730      	b.n	801c2e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801c486:	4b05      	ldr	r3, [pc, #20]	; (801c49c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801c488:	6818      	ldr	r0, [r3, #0]
 801c48a:	6803      	ldr	r3, [r0, #0]
 801c48c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c48e:	4798      	blx	r3
 801c490:	b01f      	add	sp, #124	; 0x7c
 801c492:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c496:	bf00      	nop
 801c498:	fffff800 	.word	0xfffff800
 801c49c:	200137d4 	.word	0x200137d4

0801c4a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801c4a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c4a4:	b091      	sub	sp, #68	; 0x44
 801c4a6:	469b      	mov	fp, r3
 801c4a8:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801c4ac:	4616      	mov	r6, r2
 801c4ae:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801c4b2:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c4b6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c4ba:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801c4be:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801c4c2:	4604      	mov	r4, r0
 801c4c4:	460d      	mov	r5, r1
 801c4c6:	4640      	mov	r0, r8
 801c4c8:	4659      	mov	r1, fp
 801c4ca:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801c4ce:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801c4d2:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801c4d6:	f7f3 fc11 	bl	800fcfc <_ZN8touchgfx4RectaNERKS0_>
 801c4da:	4631      	mov	r1, r6
 801c4dc:	4640      	mov	r0, r8
 801c4de:	f7f3 fc0d 	bl	800fcfc <_ZN8touchgfx4RectaNERKS0_>
 801c4e2:	4b74      	ldr	r3, [pc, #464]	; (801c6b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801c4e4:	8818      	ldrh	r0, [r3, #0]
 801c4e6:	4b74      	ldr	r3, [pc, #464]	; (801c6b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801c4e8:	8819      	ldrh	r1, [r3, #0]
 801c4ea:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c4ee:	2b00      	cmp	r3, #0
 801c4f0:	b202      	sxth	r2, r0
 801c4f2:	b20e      	sxth	r6, r1
 801c4f4:	da07      	bge.n	801c506 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801c4f6:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801c4fa:	4463      	add	r3, ip
 801c4fc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801c500:	2300      	movs	r3, #0
 801c502:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801c506:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c50a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801c50e:	1ad2      	subs	r2, r2, r3
 801c510:	4594      	cmp	ip, r2
 801c512:	bfc4      	itt	gt
 801c514:	1ac2      	subgt	r2, r0, r3
 801c516:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801c51a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c51e:	2a00      	cmp	r2, #0
 801c520:	da07      	bge.n	801c532 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801c522:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801c526:	4462      	add	r2, ip
 801c528:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801c52c:	2200      	movs	r2, #0
 801c52e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801c532:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801c536:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c53a:	eba6 060a 	sub.w	r6, r6, sl
 801c53e:	42b2      	cmp	r2, r6
 801c540:	bfc4      	itt	gt
 801c542:	eba1 020a 	subgt.w	r2, r1, sl
 801c546:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801c54a:	4a5c      	ldr	r2, [pc, #368]	; (801c6bc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801c54c:	7812      	ldrb	r2, [r2, #0]
 801c54e:	b9a2      	cbnz	r2, 801c57a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801c550:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c554:	4286      	cmp	r6, r0
 801c556:	4640      	mov	r0, r8
 801c558:	9303      	str	r3, [sp, #12]
 801c55a:	bf14      	ite	ne
 801c55c:	2600      	movne	r6, #0
 801c55e:	2601      	moveq	r6, #1
 801c560:	f7f3 fc0f 	bl	800fd82 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c564:	9b03      	ldr	r3, [sp, #12]
 801c566:	b160      	cbz	r0, 801c582 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801c568:	2300      	movs	r3, #0
 801c56a:	8023      	strh	r3, [r4, #0]
 801c56c:	8063      	strh	r3, [r4, #2]
 801c56e:	80a3      	strh	r3, [r4, #4]
 801c570:	4620      	mov	r0, r4
 801c572:	80e3      	strh	r3, [r4, #6]
 801c574:	b011      	add	sp, #68	; 0x44
 801c576:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c57a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801c57e:	428e      	cmp	r6, r1
 801c580:	e7e9      	b.n	801c556 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801c582:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801c586:	9205      	str	r2, [sp, #20]
 801c588:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c58c:	9206      	str	r2, [sp, #24]
 801c58e:	f8bb 2000 	ldrh.w	r2, [fp]
 801c592:	900e      	str	r0, [sp, #56]	; 0x38
 801c594:	1a9b      	subs	r3, r3, r2
 801c596:	b21b      	sxth	r3, r3
 801c598:	9303      	str	r3, [sp, #12]
 801c59a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801c59e:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801c5a2:	ebaa 0a03 	sub.w	sl, sl, r3
 801c5a6:	fa0f f38a 	sxth.w	r3, sl
 801c5aa:	9304      	str	r3, [sp, #16]
 801c5ac:	9b03      	ldr	r3, [sp, #12]
 801c5ae:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801c5b2:	9b04      	ldr	r3, [sp, #16]
 801c5b4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801c5b8:	9b05      	ldr	r3, [sp, #20]
 801c5ba:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801c5be:	a90e      	add	r1, sp, #56	; 0x38
 801c5c0:	9b06      	ldr	r3, [sp, #24]
 801c5c2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801c5c6:	a80c      	add	r0, sp, #48	; 0x30
 801c5c8:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801c5cc:	f7f8 fb38 	bl	8014c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c5d0:	4640      	mov	r0, r8
 801c5d2:	f7f8 faf1 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c5d6:	a80e      	add	r0, sp, #56	; 0x38
 801c5d8:	f7f8 faee 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c5dc:	4b38      	ldr	r3, [pc, #224]	; (801c6c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801c5de:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801c5e2:	881b      	ldrh	r3, [r3, #0]
 801c5e4:	9307      	str	r3, [sp, #28]
 801c5e6:	682b      	ldr	r3, [r5, #0]
 801c5e8:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801c6c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c5ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c5ee:	4628      	mov	r0, r5
 801c5f0:	4798      	blx	r3
 801c5f2:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801c5f6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801c5fa:	4681      	mov	r9, r0
 801c5fc:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801c600:	f8db 0000 	ldr.w	r0, [fp]
 801c604:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801c606:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801c60a:	6803      	ldr	r3, [r0, #0]
 801c60c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c60e:	4798      	blx	r3
 801c610:	4607      	mov	r7, r0
 801c612:	f8db 0000 	ldr.w	r0, [fp]
 801c616:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801c61a:	6803      	ldr	r3, [r0, #0]
 801c61c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c620:	9109      	str	r1, [sp, #36]	; 0x24
 801c622:	9208      	str	r2, [sp, #32]
 801c624:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c626:	4798      	blx	r3
 801c628:	f010 0f01 	tst.w	r0, #1
 801c62c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801c630:	d012      	beq.n	801c658 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801c632:	f8db 0000 	ldr.w	r0, [fp]
 801c636:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801c63a:	6803      	ldr	r3, [r0, #0]
 801c63c:	9200      	str	r2, [sp, #0]
 801c63e:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801c640:	e898 0006 	ldmia.w	r8, {r1, r2}
 801c644:	462b      	mov	r3, r5
 801c646:	47b0      	blx	r6
 801c648:	9b03      	ldr	r3, [sp, #12]
 801c64a:	8023      	strh	r3, [r4, #0]
 801c64c:	9b04      	ldr	r3, [sp, #16]
 801c64e:	8063      	strh	r3, [r4, #2]
 801c650:	9b05      	ldr	r3, [sp, #20]
 801c652:	80a3      	strh	r3, [r4, #4]
 801c654:	9b06      	ldr	r3, [sp, #24]
 801c656:	e78b      	b.n	801c570 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801c658:	fb09 f202 	mul.w	r2, r9, r2
 801c65c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801c660:	440f      	add	r7, r1
 801c662:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801c666:	b166      	cbz	r6, 801c682 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c668:	9a07      	ldr	r2, [sp, #28]
 801c66a:	4592      	cmp	sl, r2
 801c66c:	d109      	bne.n	801c682 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c66e:	f8db 0000 	ldr.w	r0, [fp]
 801c672:	6802      	ldr	r2, [r0, #0]
 801c674:	fb09 f303 	mul.w	r3, r9, r3
 801c678:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801c67a:	4629      	mov	r1, r5
 801c67c:	463a      	mov	r2, r7
 801c67e:	47b0      	blx	r6
 801c680:	e7e2      	b.n	801c648 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c682:	fb0a f303 	mul.w	r3, sl, r3
 801c686:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801c6c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c68a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801c68e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801c692:	4545      	cmp	r5, r8
 801c694:	d2d8      	bcs.n	801c648 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c696:	f8db 0000 	ldr.w	r0, [fp]
 801c69a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801c69e:	6802      	ldr	r2, [r0, #0]
 801c6a0:	4629      	mov	r1, r5
 801c6a2:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801c6a6:	005b      	lsls	r3, r3, #1
 801c6a8:	463a      	mov	r2, r7
 801c6aa:	47d0      	blx	sl
 801c6ac:	444f      	add	r7, r9
 801c6ae:	4435      	add	r5, r6
 801c6b0:	e7ef      	b.n	801c692 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801c6b2:	bf00      	nop
 801c6b4:	200137c8 	.word	0x200137c8
 801c6b8:	200137ca 	.word	0x200137ca
 801c6bc:	200137cc 	.word	0x200137cc
 801c6c0:	200137ce 	.word	0x200137ce
 801c6c4:	200137d4 	.word	0x200137d4

0801c6c8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801c6c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c6ca:	4606      	mov	r6, r0
 801c6cc:	b087      	sub	sp, #28
 801c6ce:	460c      	mov	r4, r1
 801c6d0:	4617      	mov	r7, r2
 801c6d2:	461d      	mov	r5, r3
 801c6d4:	b333      	cbz	r3, 801c724 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c6d6:	4608      	mov	r0, r1
 801c6d8:	f7f3 fb53 	bl	800fd82 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c6dc:	bb10      	cbnz	r0, 801c724 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c6de:	6820      	ldr	r0, [r4, #0]
 801c6e0:	6861      	ldr	r1, [r4, #4]
 801c6e2:	4c1c      	ldr	r4, [pc, #112]	; (801c754 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801c6e4:	ab04      	add	r3, sp, #16
 801c6e6:	c303      	stmia	r3!, {r0, r1}
 801c6e8:	a804      	add	r0, sp, #16
 801c6ea:	f7f8 fa65 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c6ee:	6820      	ldr	r0, [r4, #0]
 801c6f0:	6803      	ldr	r3, [r0, #0]
 801c6f2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c6f4:	4798      	blx	r3
 801c6f6:	2dff      	cmp	r5, #255	; 0xff
 801c6f8:	d016      	beq.n	801c728 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801c6fa:	f010 0f08 	tst.w	r0, #8
 801c6fe:	6820      	ldr	r0, [r4, #0]
 801c700:	d015      	beq.n	801c72e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801c702:	2400      	movs	r4, #0
 801c704:	6801      	ldr	r1, [r0, #0]
 801c706:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801c70a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c70e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801c712:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801c716:	9401      	str	r4, [sp, #4]
 801c718:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801c71c:	9400      	str	r4, [sp, #0]
 801c71e:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801c720:	4639      	mov	r1, r7
 801c722:	47a0      	blx	r4
 801c724:	b007      	add	sp, #28
 801c726:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c728:	f010 0f02 	tst.w	r0, #2
 801c72c:	e7e7      	b.n	801c6fe <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801c72e:	6803      	ldr	r3, [r0, #0]
 801c730:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c732:	4798      	blx	r3
 801c734:	4b08      	ldr	r3, [pc, #32]	; (801c758 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801c736:	881a      	ldrh	r2, [r3, #0]
 801c738:	6833      	ldr	r3, [r6, #0]
 801c73a:	e9cd 7500 	strd	r7, r5, [sp]
 801c73e:	4601      	mov	r1, r0
 801c740:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801c742:	4630      	mov	r0, r6
 801c744:	ab04      	add	r3, sp, #16
 801c746:	47a8      	blx	r5
 801c748:	6820      	ldr	r0, [r4, #0]
 801c74a:	6803      	ldr	r3, [r0, #0]
 801c74c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c74e:	4798      	blx	r3
 801c750:	e7e8      	b.n	801c724 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c752:	bf00      	nop
 801c754:	200137d4 	.word	0x200137d4
 801c758:	200137ce 	.word	0x200137ce

0801c75c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801c75c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c760:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801c764:	9e08      	ldr	r6, [sp, #32]
 801c766:	4688      	mov	r8, r1
 801c768:	4614      	mov	r4, r2
 801c76a:	461d      	mov	r5, r3
 801c76c:	2f00      	cmp	r7, #0
 801c76e:	f000 80a9 	beq.w	801c8c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c772:	4618      	mov	r0, r3
 801c774:	f7f3 fb05 	bl	800fd82 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c778:	2800      	cmp	r0, #0
 801c77a:	f040 80a3 	bne.w	801c8c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c77e:	f9b5 1000 	ldrsh.w	r1, [r5]
 801c782:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801c786:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801c78a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801c78e:	fb04 1303 	mla	r3, r4, r3, r1
 801c792:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801c796:	4365      	muls	r5, r4
 801c798:	2fff      	cmp	r7, #255	; 0xff
 801c79a:	eba4 0200 	sub.w	r2, r4, r0
 801c79e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801c7a2:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801c7a6:	d04a      	beq.n	801c83e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801c7a8:	b2bc      	uxth	r4, r7
 801c7aa:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801c7ae:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801c7b2:	fa5f f788 	uxtb.w	r7, r8
 801c7b6:	b2f3      	uxtb	r3, r6
 801c7b8:	0040      	lsls	r0, r0, #1
 801c7ba:	fb0e fe04 	mul.w	lr, lr, r4
 801c7be:	4367      	muls	r7, r4
 801c7c0:	4363      	muls	r3, r4
 801c7c2:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801c7c6:	fa1f fc8c 	uxth.w	ip, ip
 801c7ca:	42a9      	cmp	r1, r5
 801c7cc:	d27a      	bcs.n	801c8c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c7ce:	eb01 0900 	add.w	r9, r1, r0
 801c7d2:	4549      	cmp	r1, r9
 801c7d4:	d231      	bcs.n	801c83a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801c7d6:	880a      	ldrh	r2, [r1, #0]
 801c7d8:	1214      	asrs	r4, r2, #8
 801c7da:	10d6      	asrs	r6, r2, #3
 801c7dc:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801c7e0:	00d2      	lsls	r2, r2, #3
 801c7e2:	b2d2      	uxtb	r2, r2
 801c7e4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801c7e8:	fb14 f40c 	smulbb	r4, r4, ip
 801c7ec:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c7f0:	4474      	add	r4, lr
 801c7f2:	fb12 f20c 	smulbb	r2, r2, ip
 801c7f6:	b2a4      	uxth	r4, r4
 801c7f8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c7fc:	441a      	add	r2, r3
 801c7fe:	b292      	uxth	r2, r2
 801c800:	f104 0a01 	add.w	sl, r4, #1
 801c804:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c808:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801c80c:	fb16 f60c 	smulbb	r6, r6, ip
 801c810:	f102 0a01 	add.w	sl, r2, #1
 801c814:	443e      	add	r6, r7
 801c816:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801c81a:	b2b6      	uxth	r6, r6
 801c81c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801c820:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c824:	4322      	orrs	r2, r4
 801c826:	1c74      	adds	r4, r6, #1
 801c828:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801c82c:	0976      	lsrs	r6, r6, #5
 801c82e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c832:	4332      	orrs	r2, r6
 801c834:	f821 2b02 	strh.w	r2, [r1], #2
 801c838:	e7cb      	b.n	801c7d2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801c83a:	4441      	add	r1, r8
 801c83c:	e7c5      	b.n	801c7ca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801c83e:	4f22      	ldr	r7, [pc, #136]	; (801c8c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801c840:	0973      	lsrs	r3, r6, #5
 801c842:	ea08 0707 	and.w	r7, r8, r7
 801c846:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c84a:	433b      	orrs	r3, r7
 801c84c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801c850:	4333      	orrs	r3, r6
 801c852:	07e7      	lsls	r7, r4, #31
 801c854:	b29b      	uxth	r3, r3
 801c856:	d50b      	bpl.n	801c870 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801c858:	0040      	lsls	r0, r0, #1
 801c85a:	0052      	lsls	r2, r2, #1
 801c85c:	42a9      	cmp	r1, r5
 801c85e:	d231      	bcs.n	801c8c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c860:	180c      	adds	r4, r1, r0
 801c862:	42a1      	cmp	r1, r4
 801c864:	d202      	bcs.n	801c86c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801c866:	f821 3b02 	strh.w	r3, [r1], #2
 801c86a:	e7fa      	b.n	801c862 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801c86c:	4411      	add	r1, r2
 801c86e:	e7f5      	b.n	801c85c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801c870:	078e      	lsls	r6, r1, #30
 801c872:	d008      	beq.n	801c886 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801c874:	0066      	lsls	r6, r4, #1
 801c876:	460a      	mov	r2, r1
 801c878:	42aa      	cmp	r2, r5
 801c87a:	d202      	bcs.n	801c882 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801c87c:	8013      	strh	r3, [r2, #0]
 801c87e:	4432      	add	r2, r6
 801c880:	e7fa      	b.n	801c878 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801c882:	3102      	adds	r1, #2
 801c884:	3801      	subs	r0, #1
 801c886:	07c2      	lsls	r2, r0, #31
 801c888:	d50b      	bpl.n	801c8a2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801c88a:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801c88e:	3a01      	subs	r2, #1
 801c890:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801c894:	0066      	lsls	r6, r4, #1
 801c896:	42aa      	cmp	r2, r5
 801c898:	d202      	bcs.n	801c8a0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801c89a:	8013      	strh	r3, [r2, #0]
 801c89c:	4432      	add	r2, r6
 801c89e:	e7fa      	b.n	801c896 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801c8a0:	3801      	subs	r0, #1
 801c8a2:	b178      	cbz	r0, 801c8c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c8a4:	1040      	asrs	r0, r0, #1
 801c8a6:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801c8aa:	0080      	lsls	r0, r0, #2
 801c8ac:	0064      	lsls	r4, r4, #1
 801c8ae:	42a9      	cmp	r1, r5
 801c8b0:	d208      	bcs.n	801c8c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c8b2:	180e      	adds	r6, r1, r0
 801c8b4:	460a      	mov	r2, r1
 801c8b6:	42b2      	cmp	r2, r6
 801c8b8:	d202      	bcs.n	801c8c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801c8ba:	f842 3b04 	str.w	r3, [r2], #4
 801c8be:	e7fa      	b.n	801c8b6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801c8c0:	4421      	add	r1, r4
 801c8c2:	e7f4      	b.n	801c8ae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801c8c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c8c8:	00fff800 	.word	0x00fff800

0801c8cc <_ZN8touchgfx8LCD16bppC1Ev>:
 801c8cc:	2200      	movs	r2, #0
 801c8ce:	4912      	ldr	r1, [pc, #72]	; (801c918 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801c8d0:	6042      	str	r2, [r0, #4]
 801c8d2:	6001      	str	r1, [r0, #0]
 801c8d4:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801c8d8:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801c8dc:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801c8e0:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801c8e4:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801c8e8:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801c8ec:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801c8f0:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801c8f4:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801c8f8:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801c8fc:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801c900:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801c904:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801c908:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801c90c:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801c910:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801c914:	4770      	bx	lr
 801c916:	bf00      	nop
 801c918:	0802d1dc 	.word	0x0802d1dc

0801c91c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801c91c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c920:	460d      	mov	r5, r1
 801c922:	b08d      	sub	sp, #52	; 0x34
 801c924:	4604      	mov	r4, r0
 801c926:	6808      	ldr	r0, [r1, #0]
 801c928:	6849      	ldr	r1, [r1, #4]
 801c92a:	4699      	mov	r9, r3
 801c92c:	ab08      	add	r3, sp, #32
 801c92e:	c303      	stmia	r3!, {r0, r1}
 801c930:	6810      	ldr	r0, [r2, #0]
 801c932:	6851      	ldr	r1, [r2, #4]
 801c934:	ab0a      	add	r3, sp, #40	; 0x28
 801c936:	c303      	stmia	r3!, {r0, r1}
 801c938:	a808      	add	r0, sp, #32
 801c93a:	f7f8 f93d 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c93e:	4629      	mov	r1, r5
 801c940:	a80a      	add	r0, sp, #40	; 0x28
 801c942:	f7f8 f97d 	bl	8014c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c946:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801c94a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801c94e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801c952:	4d63      	ldr	r5, [pc, #396]	; (801cae0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801c954:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801c958:	6828      	ldr	r0, [r5, #0]
 801c95a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801c95e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c962:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801c966:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801c96a:	440a      	add	r2, r1
 801c96c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801c970:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801c974:	4413      	add	r3, r2
 801c976:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801c97a:	6803      	ldr	r3, [r0, #0]
 801c97c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c97e:	4798      	blx	r3
 801c980:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c984:	d119      	bne.n	801c9ba <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801c986:	f010 0f20 	tst.w	r0, #32
 801c98a:	6828      	ldr	r0, [r5, #0]
 801c98c:	d018      	beq.n	801c9c0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801c98e:	2500      	movs	r5, #0
 801c990:	6801      	ldr	r1, [r0, #0]
 801c992:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c996:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801c99a:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801c99e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801c9a2:	9502      	str	r5, [sp, #8]
 801c9a4:	b2b6      	uxth	r6, r6
 801c9a6:	fa1f f588 	uxth.w	r5, r8
 801c9aa:	9601      	str	r6, [sp, #4]
 801c9ac:	9500      	str	r5, [sp, #0]
 801c9ae:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801c9b0:	4621      	mov	r1, r4
 801c9b2:	47a8      	blx	r5
 801c9b4:	b00d      	add	sp, #52	; 0x34
 801c9b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c9ba:	f010 0f40 	tst.w	r0, #64	; 0x40
 801c9be:	e7e4      	b.n	801c98a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801c9c0:	6803      	ldr	r3, [r0, #0]
 801c9c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c9c4:	4798      	blx	r3
 801c9c6:	4947      	ldr	r1, [pc, #284]	; (801cae4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801c9c8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c9cc:	880b      	ldrh	r3, [r1, #0]
 801c9ce:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801c9d2:	fb03 5202 	mla	r2, r3, r2, r5
 801c9d6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c9da:	4373      	muls	r3, r6
 801c9dc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c9e0:	9307      	str	r3, [sp, #28]
 801c9e2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801c9e6:	9306      	str	r3, [sp, #24]
 801c9e8:	468a      	mov	sl, r1
 801c9ea:	9b07      	ldr	r3, [sp, #28]
 801c9ec:	4298      	cmp	r0, r3
 801c9ee:	d270      	bcs.n	801cad2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801c9f0:	9b06      	ldr	r3, [sp, #24]
 801c9f2:	4621      	mov	r1, r4
 801c9f4:	eb00 0b03 	add.w	fp, r0, r3
 801c9f8:	4558      	cmp	r0, fp
 801c9fa:	d25d      	bcs.n	801cab8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801c9fc:	f851 4b04 	ldr.w	r4, [r1], #4
 801ca00:	0e23      	lsrs	r3, r4, #24
 801ca02:	d014      	beq.n	801ca2e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ca04:	2bff      	cmp	r3, #255	; 0xff
 801ca06:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801ca0a:	d112      	bne.n	801ca32 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ca0c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ca10:	d10f      	bne.n	801ca32 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ca12:	0963      	lsrs	r3, r4, #5
 801ca14:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801ca18:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ca1c:	f02c 0c07 	bic.w	ip, ip, #7
 801ca20:	ea43 0c0c 	orr.w	ip, r3, ip
 801ca24:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801ca28:	ea4c 0404 	orr.w	r4, ip, r4
 801ca2c:	8004      	strh	r4, [r0, #0]
 801ca2e:	3002      	adds	r0, #2
 801ca30:	e7e2      	b.n	801c9f8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801ca32:	fb09 f303 	mul.w	r3, r9, r3
 801ca36:	8807      	ldrh	r7, [r0, #0]
 801ca38:	1c5a      	adds	r2, r3, #1
 801ca3a:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801ca3e:	1212      	asrs	r2, r2, #8
 801ca40:	123e      	asrs	r6, r7, #8
 801ca42:	b293      	uxth	r3, r2
 801ca44:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801ca48:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ca4c:	43d2      	mvns	r2, r2
 801ca4e:	b2d2      	uxtb	r2, r2
 801ca50:	10fd      	asrs	r5, r7, #3
 801ca52:	fb1e fe03 	smulbb	lr, lr, r3
 801ca56:	00ff      	lsls	r7, r7, #3
 801ca58:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ca5c:	fb06 e602 	mla	r6, r6, r2, lr
 801ca60:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ca64:	b2ff      	uxtb	r7, r7
 801ca66:	fa5f fc8c 	uxtb.w	ip, ip
 801ca6a:	b2e4      	uxtb	r4, r4
 801ca6c:	b2b6      	uxth	r6, r6
 801ca6e:	fb1c fc03 	smulbb	ip, ip, r3
 801ca72:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ca76:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801ca7a:	fb14 f403 	smulbb	r4, r4, r3
 801ca7e:	fb05 c502 	mla	r5, r5, r2, ip
 801ca82:	f106 0e01 	add.w	lr, r6, #1
 801ca86:	fb07 4702 	mla	r7, r7, r2, r4
 801ca8a:	b2ad      	uxth	r5, r5
 801ca8c:	b2bf      	uxth	r7, r7
 801ca8e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801ca92:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801ca96:	f105 0c01 	add.w	ip, r5, #1
 801ca9a:	1c7e      	adds	r6, r7, #1
 801ca9c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801caa0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801caa4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801caa8:	096d      	lsrs	r5, r5, #5
 801caaa:	ea46 060e 	orr.w	r6, r6, lr
 801caae:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cab2:	432e      	orrs	r6, r5
 801cab4:	8006      	strh	r6, [r0, #0]
 801cab6:	e7ba      	b.n	801ca2e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801cab8:	f8ba 3000 	ldrh.w	r3, [sl]
 801cabc:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801cac0:	eba3 0308 	sub.w	r3, r3, r8
 801cac4:	eba4 0408 	sub.w	r4, r4, r8
 801cac8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cacc:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801cad0:	e78b      	b.n	801c9ea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801cad2:	4b03      	ldr	r3, [pc, #12]	; (801cae0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801cad4:	6818      	ldr	r0, [r3, #0]
 801cad6:	6803      	ldr	r3, [r0, #0]
 801cad8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cada:	4798      	blx	r3
 801cadc:	e76a      	b.n	801c9b4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801cade:	bf00      	nop
 801cae0:	200137d4 	.word	0x200137d4
 801cae4:	200137ce 	.word	0x200137ce

0801cae8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801cae8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801caec:	460c      	mov	r4, r1
 801caee:	b085      	sub	sp, #20
 801caf0:	6810      	ldr	r0, [r2, #0]
 801caf2:	6851      	ldr	r1, [r2, #4]
 801caf4:	466d      	mov	r5, sp
 801caf6:	c503      	stmia	r5!, {r0, r1}
 801caf8:	6818      	ldr	r0, [r3, #0]
 801cafa:	6859      	ldr	r1, [r3, #4]
 801cafc:	4616      	mov	r6, r2
 801cafe:	c503      	stmia	r5!, {r0, r1}
 801cb00:	4668      	mov	r0, sp
 801cb02:	f7f8 f859 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cb06:	4631      	mov	r1, r6
 801cb08:	a802      	add	r0, sp, #8
 801cb0a:	f7f8 f899 	bl	8014c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cb0e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801cb12:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801cb16:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801cb1a:	4d28      	ldr	r5, [pc, #160]	; (801cbbc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801cb1c:	4e28      	ldr	r6, [pc, #160]	; (801cbc0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801cb1e:	6828      	ldr	r0, [r5, #0]
 801cb20:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801cb24:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801cb28:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cb2c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801cb30:	f8bd 1000 	ldrh.w	r1, [sp]
 801cb34:	440a      	add	r2, r1
 801cb36:	f8ad 2008 	strh.w	r2, [sp, #8]
 801cb3a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801cb3e:	4413      	add	r3, r2
 801cb40:	f8ad 300a 	strh.w	r3, [sp, #10]
 801cb44:	6803      	ldr	r3, [r0, #0]
 801cb46:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cb48:	4798      	blx	r3
 801cb4a:	8833      	ldrh	r3, [r6, #0]
 801cb4c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801cb50:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801cb54:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801cbc4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801cb58:	fb03 1202 	mla	r2, r3, r2, r1
 801cb5c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cb60:	fb08 f303 	mul.w	r3, r8, r3
 801cb64:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cb68:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801cb6c:	4298      	cmp	r0, r3
 801cb6e:	d21d      	bcs.n	801cbac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801cb70:	eb00 080c 	add.w	r8, r0, ip
 801cb74:	4540      	cmp	r0, r8
 801cb76:	d20f      	bcs.n	801cb98 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801cb78:	f854 1b04 	ldr.w	r1, [r4], #4
 801cb7c:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801cb80:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801cb84:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cb88:	ea42 0209 	orr.w	r2, r2, r9
 801cb8c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801cb90:	430a      	orrs	r2, r1
 801cb92:	f820 2b02 	strh.w	r2, [r0], #2
 801cb96:	e7ed      	b.n	801cb74 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801cb98:	8832      	ldrh	r2, [r6, #0]
 801cb9a:	1bd2      	subs	r2, r2, r7
 801cb9c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cba0:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801cba4:	1bd2      	subs	r2, r2, r7
 801cba6:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801cbaa:	e7df      	b.n	801cb6c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801cbac:	6828      	ldr	r0, [r5, #0]
 801cbae:	6803      	ldr	r3, [r0, #0]
 801cbb0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cbb2:	4798      	blx	r3
 801cbb4:	b005      	add	sp, #20
 801cbb6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801cbba:	bf00      	nop
 801cbbc:	200137d4 	.word	0x200137d4
 801cbc0:	200137ce 	.word	0x200137ce
 801cbc4:	fffff800 	.word	0xfffff800

0801cbc8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801cbc8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cbcc:	460e      	mov	r6, r1
 801cbce:	b08e      	sub	sp, #56	; 0x38
 801cbd0:	4604      	mov	r4, r0
 801cbd2:	6808      	ldr	r0, [r1, #0]
 801cbd4:	6849      	ldr	r1, [r1, #4]
 801cbd6:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801cdb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801cbda:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801cdb4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801cbde:	461d      	mov	r5, r3
 801cbe0:	ab0a      	add	r3, sp, #40	; 0x28
 801cbe2:	c303      	stmia	r3!, {r0, r1}
 801cbe4:	6810      	ldr	r0, [r2, #0]
 801cbe6:	6851      	ldr	r1, [r2, #4]
 801cbe8:	ab0c      	add	r3, sp, #48	; 0x30
 801cbea:	c303      	stmia	r3!, {r0, r1}
 801cbec:	a80a      	add	r0, sp, #40	; 0x28
 801cbee:	f7f7 ffe3 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cbf2:	4631      	mov	r1, r6
 801cbf4:	a80c      	add	r0, sp, #48	; 0x30
 801cbf6:	f7f8 f823 	bl	8014c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cbfa:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801cbfe:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801cc02:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801cc06:	f8d8 0000 	ldr.w	r0, [r8]
 801cc0a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801cc0e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801cc12:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cc16:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801cc1a:	440c      	add	r4, r1
 801cc1c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801cc20:	440a      	add	r2, r1
 801cc22:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801cc26:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801cc2a:	4413      	add	r3, r2
 801cc2c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801cc30:	6803      	ldr	r3, [r0, #0]
 801cc32:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cc34:	4798      	blx	r3
 801cc36:	2dff      	cmp	r5, #255	; 0xff
 801cc38:	d124      	bne.n	801cc84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801cc3a:	f010 0f01 	tst.w	r0, #1
 801cc3e:	f8d8 0000 	ldr.w	r0, [r8]
 801cc42:	d022      	beq.n	801cc8a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801cc44:	2100      	movs	r1, #0
 801cc46:	f8d0 c000 	ldr.w	ip, [r0]
 801cc4a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801cc4e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801cc52:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801cc56:	f04f 0e01 	mov.w	lr, #1
 801cc5a:	f8cd e018 	str.w	lr, [sp, #24]
 801cc5e:	f8b9 e000 	ldrh.w	lr, [r9]
 801cc62:	9503      	str	r5, [sp, #12]
 801cc64:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801cc68:	b2b6      	uxth	r6, r6
 801cc6a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801cc6e:	9102      	str	r1, [sp, #8]
 801cc70:	b2bf      	uxth	r7, r7
 801cc72:	9601      	str	r6, [sp, #4]
 801cc74:	9700      	str	r7, [sp, #0]
 801cc76:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801cc7a:	4621      	mov	r1, r4
 801cc7c:	47a8      	blx	r5
 801cc7e:	b00e      	add	sp, #56	; 0x38
 801cc80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cc84:	f010 0f04 	tst.w	r0, #4
 801cc88:	e7d9      	b.n	801cc3e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801cc8a:	6803      	ldr	r3, [r0, #0]
 801cc8c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cc8e:	4798      	blx	r3
 801cc90:	f8b9 3000 	ldrh.w	r3, [r9]
 801cc94:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801cc98:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801cc9c:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801cca0:	fb03 1202 	mla	r2, r3, r2, r1
 801cca4:	ebac 0c07 	sub.w	ip, ip, r7
 801cca8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ccac:	435e      	muls	r6, r3
 801ccae:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801ccb2:	2dff      	cmp	r5, #255	; 0xff
 801ccb4:	eba3 0707 	sub.w	r7, r3, r7
 801ccb8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801ccbc:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801ccc0:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801ccc4:	d049      	beq.n	801cd5a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801ccc6:	43eb      	mvns	r3, r5
 801ccc8:	fa1f f985 	uxth.w	r9, r5
 801cccc:	b2db      	uxtb	r3, r3
 801ccce:	42b0      	cmp	r0, r6
 801ccd0:	d266      	bcs.n	801cda0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801ccd2:	eb00 0a0e 	add.w	sl, r0, lr
 801ccd6:	4550      	cmp	r0, sl
 801ccd8:	4621      	mov	r1, r4
 801ccda:	f104 0403 	add.w	r4, r4, #3
 801ccde:	d25b      	bcs.n	801cd98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801cce0:	8802      	ldrh	r2, [r0, #0]
 801cce2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801cce6:	ea4f 2822 	mov.w	r8, r2, asr #8
 801ccea:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801ccee:	fb11 f109 	smulbb	r1, r1, r9
 801ccf2:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801ccf6:	10d5      	asrs	r5, r2, #3
 801ccf8:	fb08 1803 	mla	r8, r8, r3, r1
 801ccfc:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801cd00:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cd04:	fb11 f109 	smulbb	r1, r1, r9
 801cd08:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cd0c:	fb05 1503 	mla	r5, r5, r3, r1
 801cd10:	00d2      	lsls	r2, r2, #3
 801cd12:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801cd16:	b2d2      	uxtb	r2, r2
 801cd18:	fb11 f109 	smulbb	r1, r1, r9
 801cd1c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cd20:	fa1f f888 	uxth.w	r8, r8
 801cd24:	fb02 1203 	mla	r2, r2, r3, r1
 801cd28:	b292      	uxth	r2, r2
 801cd2a:	f108 0101 	add.w	r1, r8, #1
 801cd2e:	b2ad      	uxth	r5, r5
 801cd30:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801cd34:	1c51      	adds	r1, r2, #1
 801cd36:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801cd3a:	1c69      	adds	r1, r5, #1
 801cd3c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801cd40:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801cd44:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cd48:	096d      	lsrs	r5, r5, #5
 801cd4a:	ea42 0208 	orr.w	r2, r2, r8
 801cd4e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cd52:	432a      	orrs	r2, r5
 801cd54:	f820 2b02 	strh.w	r2, [r0], #2
 801cd58:	e7bd      	b.n	801ccd6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801cd5a:	4a14      	ldr	r2, [pc, #80]	; (801cdac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801cd5c:	42b0      	cmp	r0, r6
 801cd5e:	d21f      	bcs.n	801cda0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801cd60:	eb00 050e 	add.w	r5, r0, lr
 801cd64:	42a8      	cmp	r0, r5
 801cd66:	4621      	mov	r1, r4
 801cd68:	f104 0403 	add.w	r4, r4, #3
 801cd6c:	d210      	bcs.n	801cd90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801cd6e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801cd72:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801cd76:	00db      	lsls	r3, r3, #3
 801cd78:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801cd7c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cd80:	430b      	orrs	r3, r1
 801cd82:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801cd86:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801cd8a:	f820 3b02 	strh.w	r3, [r0], #2
 801cd8e:	e7e9      	b.n	801cd64 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801cd90:	4438      	add	r0, r7
 801cd92:	eb01 040c 	add.w	r4, r1, ip
 801cd96:	e7e1      	b.n	801cd5c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801cd98:	4438      	add	r0, r7
 801cd9a:	eb01 040c 	add.w	r4, r1, ip
 801cd9e:	e796      	b.n	801ccce <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801cda0:	4b03      	ldr	r3, [pc, #12]	; (801cdb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801cda2:	6818      	ldr	r0, [r3, #0]
 801cda4:	6803      	ldr	r3, [r0, #0]
 801cda6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cda8:	4798      	blx	r3
 801cdaa:	e768      	b.n	801cc7e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801cdac:	fffff800 	.word	0xfffff800
 801cdb0:	200137d4 	.word	0x200137d4
 801cdb4:	200137ce 	.word	0x200137ce

0801cdb8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801cdb8:	b4f0      	push	{r4, r5, r6, r7}
 801cdba:	4616      	mov	r6, r2
 801cdbc:	2e01      	cmp	r6, #1
 801cdbe:	461c      	mov	r4, r3
 801cdc0:	460d      	mov	r5, r1
 801cdc2:	9a04      	ldr	r2, [sp, #16]
 801cdc4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801cdc8:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801cdcc:	d012      	beq.n	801cdf4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801cdce:	d303      	bcc.n	801cdd8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801cdd0:	2e02      	cmp	r6, #2
 801cdd2:	d00a      	beq.n	801cdea <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801cdd4:	bcf0      	pop	{r4, r5, r6, r7}
 801cdd6:	4770      	bx	lr
 801cdd8:	6805      	ldr	r5, [r0, #0]
 801cdda:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801cdde:	68ed      	ldr	r5, [r5, #12]
 801cde0:	4613      	mov	r3, r2
 801cde2:	46ac      	mov	ip, r5
 801cde4:	4622      	mov	r2, r4
 801cde6:	bcf0      	pop	{r4, r5, r6, r7}
 801cde8:	4760      	bx	ip
 801cdea:	4621      	mov	r1, r4
 801cdec:	4628      	mov	r0, r5
 801cdee:	bcf0      	pop	{r4, r5, r6, r7}
 801cdf0:	f7ff bd94 	b.w	801c91c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801cdf4:	4621      	mov	r1, r4
 801cdf6:	4628      	mov	r0, r5
 801cdf8:	bcf0      	pop	{r4, r5, r6, r7}
 801cdfa:	f7ff bee5 	b.w	801cbc8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801ce00 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801ce00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ce04:	4681      	mov	r9, r0
 801ce06:	b093      	sub	sp, #76	; 0x4c
 801ce08:	6810      	ldr	r0, [r2, #0]
 801ce0a:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801ce0e:	4f6d      	ldr	r7, [pc, #436]	; (801cfc4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801ce10:	4688      	mov	r8, r1
 801ce12:	6851      	ldr	r1, [r2, #4]
 801ce14:	ac0e      	add	r4, sp, #56	; 0x38
 801ce16:	c403      	stmia	r4!, {r0, r1}
 801ce18:	6818      	ldr	r0, [r3, #0]
 801ce1a:	6859      	ldr	r1, [r3, #4]
 801ce1c:	ac10      	add	r4, sp, #64	; 0x40
 801ce1e:	4616      	mov	r6, r2
 801ce20:	c403      	stmia	r4!, {r0, r1}
 801ce22:	a80e      	add	r0, sp, #56	; 0x38
 801ce24:	f7f7 fec8 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ce28:	4631      	mov	r1, r6
 801ce2a:	a810      	add	r0, sp, #64	; 0x40
 801ce2c:	f7f7 ff08 	bl	8014c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ce30:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801ce34:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801ce38:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801ce3c:	4e62      	ldr	r6, [pc, #392]	; (801cfc8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801ce3e:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801ce42:	6830      	ldr	r0, [r6, #0]
 801ce44:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801ce48:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ce4c:	4489      	add	r9, r1
 801ce4e:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801ce52:	440a      	add	r2, r1
 801ce54:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801ce58:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801ce5c:	4413      	add	r3, r2
 801ce5e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801ce62:	6803      	ldr	r3, [r0, #0]
 801ce64:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ce66:	4798      	blx	r3
 801ce68:	f010 0f80 	tst.w	r0, #128	; 0x80
 801ce6c:	6830      	ldr	r0, [r6, #0]
 801ce6e:	d01d      	beq.n	801ceac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801ce70:	2200      	movs	r2, #0
 801ce72:	6801      	ldr	r1, [r0, #0]
 801ce74:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801ce78:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801ce7c:	220b      	movs	r2, #11
 801ce7e:	9207      	str	r2, [sp, #28]
 801ce80:	883a      	ldrh	r2, [r7, #0]
 801ce82:	9206      	str	r2, [sp, #24]
 801ce84:	2201      	movs	r2, #1
 801ce86:	e9cd a204 	strd	sl, r2, [sp, #16]
 801ce8a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801ce8e:	9203      	str	r2, [sp, #12]
 801ce90:	b2a4      	uxth	r4, r4
 801ce92:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801ce96:	9200      	str	r2, [sp, #0]
 801ce98:	b2ad      	uxth	r5, r5
 801ce9a:	9502      	str	r5, [sp, #8]
 801ce9c:	9401      	str	r4, [sp, #4]
 801ce9e:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801cea0:	4642      	mov	r2, r8
 801cea2:	4649      	mov	r1, r9
 801cea4:	47a0      	blx	r4
 801cea6:	b013      	add	sp, #76	; 0x4c
 801cea8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ceac:	6803      	ldr	r3, [r0, #0]
 801ceae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ceb0:	4798      	blx	r3
 801ceb2:	883b      	ldrh	r3, [r7, #0]
 801ceb4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801ceb8:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801cebc:	fb03 1202 	mla	r2, r3, r2, r1
 801cec0:	435d      	muls	r5, r3
 801cec2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cec6:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801ceca:	920c      	str	r2, [sp, #48]	; 0x30
 801cecc:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801ced0:	1b12      	subs	r2, r2, r4
 801ced2:	920d      	str	r2, [sp, #52]	; 0x34
 801ced4:	0062      	lsls	r2, r4, #1
 801ced6:	1b1c      	subs	r4, r3, r4
 801ced8:	0063      	lsls	r3, r4, #1
 801ceda:	920a      	str	r2, [sp, #40]	; 0x28
 801cedc:	930b      	str	r3, [sp, #44]	; 0x2c
 801cede:	f04f 0e04 	mov.w	lr, #4
 801cee2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801cee4:	4298      	cmp	r0, r3
 801cee6:	d266      	bcs.n	801cfb6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801cee8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ceea:	eb00 0b03 	add.w	fp, r0, r3
 801ceee:	4558      	cmp	r0, fp
 801cef0:	d25c      	bcs.n	801cfac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801cef2:	f819 3b01 	ldrb.w	r3, [r9], #1
 801cef6:	fb1e e303 	smlabb	r3, lr, r3, lr
 801cefa:	f858 2003 	ldr.w	r2, [r8, r3]
 801cefe:	0e11      	lsrs	r1, r2, #24
 801cf00:	d012      	beq.n	801cf28 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801cf02:	29ff      	cmp	r1, #255	; 0xff
 801cf04:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801cf08:	d110      	bne.n	801cf2c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801cf0a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801cf0e:	d10d      	bne.n	801cf2c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801cf10:	0953      	lsrs	r3, r2, #5
 801cf12:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801cf16:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cf1a:	f027 0707 	bic.w	r7, r7, #7
 801cf1e:	431f      	orrs	r7, r3
 801cf20:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cf24:	433a      	orrs	r2, r7
 801cf26:	8002      	strh	r2, [r0, #0]
 801cf28:	3002      	adds	r0, #2
 801cf2a:	e7e0      	b.n	801ceee <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801cf2c:	fb0a f101 	mul.w	r1, sl, r1
 801cf30:	8806      	ldrh	r6, [r0, #0]
 801cf32:	1c4b      	adds	r3, r1, #1
 801cf34:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801cf38:	1235      	asrs	r5, r6, #8
 801cf3a:	10f4      	asrs	r4, r6, #3
 801cf3c:	121b      	asrs	r3, r3, #8
 801cf3e:	00f6      	lsls	r6, r6, #3
 801cf40:	b299      	uxth	r1, r3
 801cf42:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801cf46:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801cf4a:	b2f6      	uxtb	r6, r6
 801cf4c:	43db      	mvns	r3, r3
 801cf4e:	b2d2      	uxtb	r2, r2
 801cf50:	b2db      	uxtb	r3, r3
 801cf52:	fb1c fc01 	smulbb	ip, ip, r1
 801cf56:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801cf5a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cf5e:	fb12 f201 	smulbb	r2, r2, r1
 801cf62:	fb05 c503 	mla	r5, r5, r3, ip
 801cf66:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801cf6a:	b2ff      	uxtb	r7, r7
 801cf6c:	fb06 2203 	mla	r2, r6, r3, r2
 801cf70:	b2ad      	uxth	r5, r5
 801cf72:	fb17 f701 	smulbb	r7, r7, r1
 801cf76:	b292      	uxth	r2, r2
 801cf78:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801cf7c:	fb04 7403 	mla	r4, r4, r3, r7
 801cf80:	f105 0c01 	add.w	ip, r5, #1
 801cf84:	1c57      	adds	r7, r2, #1
 801cf86:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801cf8a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801cf8e:	b2a4      	uxth	r4, r4
 801cf90:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801cf94:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801cf98:	433d      	orrs	r5, r7
 801cf9a:	1c67      	adds	r7, r4, #1
 801cf9c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801cfa0:	0964      	lsrs	r4, r4, #5
 801cfa2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801cfa6:	4325      	orrs	r5, r4
 801cfa8:	8005      	strh	r5, [r0, #0]
 801cfaa:	e7bd      	b.n	801cf28 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801cfac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cfae:	4418      	add	r0, r3
 801cfb0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cfb2:	4499      	add	r9, r3
 801cfb4:	e795      	b.n	801cee2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801cfb6:	4b04      	ldr	r3, [pc, #16]	; (801cfc8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801cfb8:	6818      	ldr	r0, [r3, #0]
 801cfba:	6803      	ldr	r3, [r0, #0]
 801cfbc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cfbe:	4798      	blx	r3
 801cfc0:	e771      	b.n	801cea6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801cfc2:	bf00      	nop
 801cfc4:	200137ce 	.word	0x200137ce
 801cfc8:	200137d4 	.word	0x200137d4

0801cfcc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801cfcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cfd0:	b087      	sub	sp, #28
 801cfd2:	4680      	mov	r8, r0
 801cfd4:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801cfd8:	460d      	mov	r5, r1
 801cfda:	4614      	mov	r4, r2
 801cfdc:	2e00      	cmp	r6, #0
 801cfde:	f000 80b9 	beq.w	801d154 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801cfe2:	6810      	ldr	r0, [r2, #0]
 801cfe4:	6851      	ldr	r1, [r2, #4]
 801cfe6:	af02      	add	r7, sp, #8
 801cfe8:	c703      	stmia	r7!, {r0, r1}
 801cfea:	6818      	ldr	r0, [r3, #0]
 801cfec:	6859      	ldr	r1, [r3, #4]
 801cfee:	af04      	add	r7, sp, #16
 801cff0:	c703      	stmia	r7!, {r0, r1}
 801cff2:	a802      	add	r0, sp, #8
 801cff4:	f7f7 fde0 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cff8:	4621      	mov	r1, r4
 801cffa:	a804      	add	r0, sp, #16
 801cffc:	f7f7 fe20 	bl	8014c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d000:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d004:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d008:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801d00c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801d010:	fb14 2103 	smlabb	r1, r4, r3, r2
 801d014:	eb08 0401 	add.w	r4, r8, r1
 801d018:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d01c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d020:	440a      	add	r2, r1
 801d022:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d026:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d02a:	4413      	add	r3, r2
 801d02c:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d030:	4b4a      	ldr	r3, [pc, #296]	; (801d15c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d032:	6818      	ldr	r0, [r3, #0]
 801d034:	6803      	ldr	r3, [r0, #0]
 801d036:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d038:	4798      	blx	r3
 801d03a:	4b49      	ldr	r3, [pc, #292]	; (801d160 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801d03c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801d040:	881a      	ldrh	r2, [r3, #0]
 801d042:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801d046:	2eff      	cmp	r6, #255	; 0xff
 801d048:	fb02 c101 	mla	r1, r2, r1, ip
 801d04c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d050:	fb02 f207 	mul.w	r2, r2, r7
 801d054:	f105 0104 	add.w	r1, r5, #4
 801d058:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801d05c:	461d      	mov	r5, r3
 801d05e:	d05a      	beq.n	801d116 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801d060:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801d064:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d068:	b2b6      	uxth	r6, r6
 801d06a:	fa1f fe8e 	uxth.w	lr, lr
 801d06e:	9301      	str	r3, [sp, #4]
 801d070:	4282      	cmp	r2, r0
 801d072:	d96a      	bls.n	801d14a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d074:	eb00 0b0a 	add.w	fp, r0, sl
 801d078:	4583      	cmp	fp, r0
 801d07a:	d940      	bls.n	801d0fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801d07c:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d080:	8805      	ldrh	r5, [r0, #0]
 801d082:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d086:	122f      	asrs	r7, r5, #8
 801d088:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d08c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d090:	fb17 f70e 	smulbb	r7, r7, lr
 801d094:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801d098:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d09c:	00ed      	lsls	r5, r5, #3
 801d09e:	fb0c 7c06 	mla	ip, ip, r6, r7
 801d0a2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d0a6:	10df      	asrs	r7, r3, #3
 801d0a8:	b2ed      	uxtb	r5, r5
 801d0aa:	00db      	lsls	r3, r3, #3
 801d0ac:	fa1f fc8c 	uxth.w	ip, ip
 801d0b0:	fb19 f90e 	smulbb	r9, r9, lr
 801d0b4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d0b8:	b2db      	uxtb	r3, r3
 801d0ba:	fb15 f50e 	smulbb	r5, r5, lr
 801d0be:	fb07 9706 	mla	r7, r7, r6, r9
 801d0c2:	fb03 5306 	mla	r3, r3, r6, r5
 801d0c6:	f10c 0901 	add.w	r9, ip, #1
 801d0ca:	b29b      	uxth	r3, r3
 801d0cc:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801d0d0:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801d0d4:	f103 0c01 	add.w	ip, r3, #1
 801d0d8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d0dc:	b2bf      	uxth	r7, r7
 801d0de:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d0e2:	ea4c 0c09 	orr.w	ip, ip, r9
 801d0e6:	f107 0901 	add.w	r9, r7, #1
 801d0ea:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801d0ee:	097f      	lsrs	r7, r7, #5
 801d0f0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d0f4:	ea4c 0c07 	orr.w	ip, ip, r7
 801d0f8:	f820 cb02 	strh.w	ip, [r0], #2
 801d0fc:	e7bc      	b.n	801d078 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801d0fe:	9b01      	ldr	r3, [sp, #4]
 801d100:	881b      	ldrh	r3, [r3, #0]
 801d102:	eba3 0308 	sub.w	r3, r3, r8
 801d106:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d10a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d10e:	eba3 0308 	sub.w	r3, r3, r8
 801d112:	441c      	add	r4, r3
 801d114:	e7ac      	b.n	801d070 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801d116:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d11a:	4282      	cmp	r2, r0
 801d11c:	d915      	bls.n	801d14a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d11e:	eb00 060a 	add.w	r6, r0, sl
 801d122:	4286      	cmp	r6, r0
 801d124:	d906      	bls.n	801d134 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801d126:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d12a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d12e:	f820 3b02 	strh.w	r3, [r0], #2
 801d132:	e7f6      	b.n	801d122 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801d134:	882b      	ldrh	r3, [r5, #0]
 801d136:	eba3 0308 	sub.w	r3, r3, r8
 801d13a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d13e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d142:	eba3 0308 	sub.w	r3, r3, r8
 801d146:	441c      	add	r4, r3
 801d148:	e7e7      	b.n	801d11a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801d14a:	4b04      	ldr	r3, [pc, #16]	; (801d15c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d14c:	6818      	ldr	r0, [r3, #0]
 801d14e:	6803      	ldr	r3, [r0, #0]
 801d150:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d152:	4798      	blx	r3
 801d154:	b007      	add	sp, #28
 801d156:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d15a:	bf00      	nop
 801d15c:	200137d4 	.word	0x200137d4
 801d160:	200137ce 	.word	0x200137ce

0801d164 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801d164:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d168:	b091      	sub	sp, #68	; 0x44
 801d16a:	4680      	mov	r8, r0
 801d16c:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801d170:	460f      	mov	r7, r1
 801d172:	4614      	mov	r4, r2
 801d174:	2d00      	cmp	r5, #0
 801d176:	d051      	beq.n	801d21c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d178:	6810      	ldr	r0, [r2, #0]
 801d17a:	6851      	ldr	r1, [r2, #4]
 801d17c:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801d380 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801d180:	ae0c      	add	r6, sp, #48	; 0x30
 801d182:	c603      	stmia	r6!, {r0, r1}
 801d184:	6818      	ldr	r0, [r3, #0]
 801d186:	6859      	ldr	r1, [r3, #4]
 801d188:	ae0e      	add	r6, sp, #56	; 0x38
 801d18a:	c603      	stmia	r6!, {r0, r1}
 801d18c:	a80c      	add	r0, sp, #48	; 0x30
 801d18e:	f7f7 fd13 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d192:	4621      	mov	r1, r4
 801d194:	a80e      	add	r0, sp, #56	; 0x38
 801d196:	f7f7 fd53 	bl	8014c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d19a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801d19e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d1a2:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801d1a6:	f8d9 0000 	ldr.w	r0, [r9]
 801d1aa:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801d1ae:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801d1b2:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d1b6:	eb08 0401 	add.w	r4, r8, r1
 801d1ba:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801d1be:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801d384 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801d1c2:	440a      	add	r2, r1
 801d1c4:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801d1c8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801d1cc:	4413      	add	r3, r2
 801d1ce:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801d1d2:	6803      	ldr	r3, [r0, #0]
 801d1d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d1d6:	4798      	blx	r3
 801d1d8:	f010 0f80 	tst.w	r0, #128	; 0x80
 801d1dc:	f8d9 0000 	ldr.w	r0, [r9]
 801d1e0:	d01f      	beq.n	801d222 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801d1e2:	2200      	movs	r2, #0
 801d1e4:	6801      	ldr	r1, [r0, #0]
 801d1e6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801d1ea:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d1ee:	220b      	movs	r2, #11
 801d1f0:	9207      	str	r2, [sp, #28]
 801d1f2:	f8b8 2000 	ldrh.w	r2, [r8]
 801d1f6:	9206      	str	r2, [sp, #24]
 801d1f8:	2201      	movs	r2, #1
 801d1fa:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801d1fe:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801d202:	9203      	str	r2, [sp, #12]
 801d204:	fa1f f28a 	uxth.w	r2, sl
 801d208:	9202      	str	r2, [sp, #8]
 801d20a:	b2b6      	uxth	r6, r6
 801d20c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801d210:	9200      	str	r2, [sp, #0]
 801d212:	9601      	str	r6, [sp, #4]
 801d214:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801d216:	463a      	mov	r2, r7
 801d218:	4621      	mov	r1, r4
 801d21a:	47a8      	blx	r5
 801d21c:	b011      	add	sp, #68	; 0x44
 801d21e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d222:	6803      	ldr	r3, [r0, #0]
 801d224:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d226:	4798      	blx	r3
 801d228:	f8b8 2000 	ldrh.w	r2, [r8]
 801d22c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d230:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801d234:	2dff      	cmp	r5, #255	; 0xff
 801d236:	fb02 1303 	mla	r3, r2, r3, r1
 801d23a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d23e:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801d242:	fb0a fa02 	mul.w	sl, sl, r2
 801d246:	d062      	beq.n	801d30e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801d248:	ea6f 0c05 	mvn.w	ip, r5
 801d24c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801d250:	930a      	str	r3, [sp, #40]	; 0x28
 801d252:	b2ad      	uxth	r5, r5
 801d254:	fa5f fc8c 	uxtb.w	ip, ip
 801d258:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801d25c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d25e:	4298      	cmp	r0, r3
 801d260:	f080 8085 	bcs.w	801d36e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d264:	eb00 0b09 	add.w	fp, r0, r9
 801d268:	4558      	cmp	r0, fp
 801d26a:	d246      	bcs.n	801d2fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801d26c:	f814 eb01 	ldrb.w	lr, [r4], #1
 801d270:	2303      	movs	r3, #3
 801d272:	2204      	movs	r2, #4
 801d274:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801d278:	eb07 0a0e 	add.w	sl, r7, lr
 801d27c:	8803      	ldrh	r3, [r0, #0]
 801d27e:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801d282:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d286:	1219      	asrs	r1, r3, #8
 801d288:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d28c:	fb18 f805 	smulbb	r8, r8, r5
 801d290:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801d294:	10da      	asrs	r2, r3, #3
 801d296:	fb01 810c 	mla	r1, r1, ip, r8
 801d29a:	00db      	lsls	r3, r3, #3
 801d29c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d2a0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d2a4:	b2db      	uxtb	r3, r3
 801d2a6:	fb18 f805 	smulbb	r8, r8, r5
 801d2aa:	fb1e fe05 	smulbb	lr, lr, r5
 801d2ae:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801d2b2:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801d2b6:	b289      	uxth	r1, r1
 801d2b8:	fb02 820c 	mla	r2, r2, ip, r8
 801d2bc:	fb03 e30c 	mla	r3, r3, ip, lr
 801d2c0:	b292      	uxth	r2, r2
 801d2c2:	b29b      	uxth	r3, r3
 801d2c4:	f101 0801 	add.w	r8, r1, #1
 801d2c8:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801d2cc:	f103 0e01 	add.w	lr, r3, #1
 801d2d0:	f102 0801 	add.w	r8, r2, #1
 801d2d4:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801d2d8:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801d2dc:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801d2e0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d2e4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801d2e8:	ea4e 0101 	orr.w	r1, lr, r1
 801d2ec:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801d2f0:	ea41 0108 	orr.w	r1, r1, r8
 801d2f4:	f820 1b02 	strh.w	r1, [r0], #2
 801d2f8:	e7b6      	b.n	801d268 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801d2fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d2fc:	881b      	ldrh	r3, [r3, #0]
 801d2fe:	1b9b      	subs	r3, r3, r6
 801d300:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d304:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d308:	1b9b      	subs	r3, r3, r6
 801d30a:	441c      	add	r4, r3
 801d30c:	e7a6      	b.n	801d25c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801d30e:	491b      	ldr	r1, [pc, #108]	; (801d37c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801d310:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801d314:	2203      	movs	r2, #3
 801d316:	2504      	movs	r5, #4
 801d318:	4550      	cmp	r0, sl
 801d31a:	d228      	bcs.n	801d36e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d31c:	eb00 0c09 	add.w	ip, r0, r9
 801d320:	4560      	cmp	r0, ip
 801d322:	4623      	mov	r3, r4
 801d324:	d219      	bcs.n	801d35a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801d326:	f893 e000 	ldrb.w	lr, [r3]
 801d32a:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801d32e:	eb07 0b0e 	add.w	fp, r7, lr
 801d332:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d336:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801d33a:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d33e:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801d342:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801d346:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d34a:	ea43 030b 	orr.w	r3, r3, fp
 801d34e:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801d352:	3401      	adds	r4, #1
 801d354:	f820 3b02 	strh.w	r3, [r0], #2
 801d358:	e7e2      	b.n	801d320 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801d35a:	f8b8 3000 	ldrh.w	r3, [r8]
 801d35e:	1b9b      	subs	r3, r3, r6
 801d360:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d364:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d368:	1b9b      	subs	r3, r3, r6
 801d36a:	441c      	add	r4, r3
 801d36c:	e7d4      	b.n	801d318 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801d36e:	4b04      	ldr	r3, [pc, #16]	; (801d380 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801d370:	6818      	ldr	r0, [r3, #0]
 801d372:	6803      	ldr	r3, [r0, #0]
 801d374:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d376:	4798      	blx	r3
 801d378:	e750      	b.n	801d21c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d37a:	bf00      	nop
 801d37c:	fffff800 	.word	0xfffff800
 801d380:	200137d4 	.word	0x200137d4
 801d384:	200137ce 	.word	0x200137ce

0801d388 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801d388:	b4f0      	push	{r4, r5, r6, r7}
 801d38a:	460c      	mov	r4, r1
 801d38c:	4611      	mov	r1, r2
 801d38e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801d392:	780f      	ldrb	r7, [r1, #0]
 801d394:	784e      	ldrb	r6, [r1, #1]
 801d396:	2f01      	cmp	r7, #1
 801d398:	461a      	mov	r2, r3
 801d39a:	9b04      	ldr	r3, [sp, #16]
 801d39c:	d036      	beq.n	801d40c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801d39e:	d31e      	bcc.n	801d3de <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801d3a0:	2f02      	cmp	r7, #2
 801d3a2:	d14a      	bne.n	801d43a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d3a4:	2e03      	cmp	r6, #3
 801d3a6:	d848      	bhi.n	801d43a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d3a8:	e8df f006 	tbb	[pc, r6]
 801d3ac:	16140702 	.word	0x16140702
 801d3b0:	9504      	str	r5, [sp, #16]
 801d3b2:	4620      	mov	r0, r4
 801d3b4:	bcf0      	pop	{r4, r5, r6, r7}
 801d3b6:	f7ff be09 	b.w	801cfcc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801d3ba:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d3bc:	2800      	cmp	r0, #0
 801d3be:	d03c      	beq.n	801d43a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d3c0:	6806      	ldr	r6, [r0, #0]
 801d3c2:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d3c6:	68b5      	ldr	r5, [r6, #8]
 801d3c8:	4613      	mov	r3, r2
 801d3ca:	46ac      	mov	ip, r5
 801d3cc:	460a      	mov	r2, r1
 801d3ce:	4621      	mov	r1, r4
 801d3d0:	bcf0      	pop	{r4, r5, r6, r7}
 801d3d2:	4760      	bx	ip
 801d3d4:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d3d6:	e7f1      	b.n	801d3bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d3d8:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d3dc:	e7ee      	b.n	801d3bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d3de:	2e03      	cmp	r6, #3
 801d3e0:	d82b      	bhi.n	801d43a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d3e2:	e8df f006 	tbb	[pc, r6]
 801d3e6:	0702      	.short	0x0702
 801d3e8:	100e      	.short	0x100e
 801d3ea:	9504      	str	r5, [sp, #16]
 801d3ec:	4620      	mov	r0, r4
 801d3ee:	bcf0      	pop	{r4, r5, r6, r7}
 801d3f0:	f7ff bd06 	b.w	801ce00 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801d3f4:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d3f6:	b300      	cbz	r0, 801d43a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d3f8:	6806      	ldr	r6, [r0, #0]
 801d3fa:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d3fe:	68f5      	ldr	r5, [r6, #12]
 801d400:	e7e2      	b.n	801d3c8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d402:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d404:	e7f7      	b.n	801d3f6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801d406:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d40a:	e7f4      	b.n	801d3f6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801d40c:	2e03      	cmp	r6, #3
 801d40e:	d814      	bhi.n	801d43a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d410:	e8df f006 	tbb	[pc, r6]
 801d414:	100e0702 	.word	0x100e0702
 801d418:	9504      	str	r5, [sp, #16]
 801d41a:	4620      	mov	r0, r4
 801d41c:	bcf0      	pop	{r4, r5, r6, r7}
 801d41e:	f7ff bea1 	b.w	801d164 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801d422:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d424:	b148      	cbz	r0, 801d43a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d426:	6806      	ldr	r6, [r0, #0]
 801d428:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d42c:	6935      	ldr	r5, [r6, #16]
 801d42e:	e7cb      	b.n	801d3c8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d430:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d432:	e7f7      	b.n	801d424 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801d434:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d438:	e7f4      	b.n	801d424 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801d43a:	bcf0      	pop	{r4, r5, r6, r7}
 801d43c:	4770      	bx	lr
	...

0801d440 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801d440:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d444:	4604      	mov	r4, r0
 801d446:	b087      	sub	sp, #28
 801d448:	6810      	ldr	r0, [r2, #0]
 801d44a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801d44e:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801d688 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801d452:	460e      	mov	r6, r1
 801d454:	6851      	ldr	r1, [r2, #4]
 801d456:	ad02      	add	r5, sp, #8
 801d458:	c503      	stmia	r5!, {r0, r1}
 801d45a:	6818      	ldr	r0, [r3, #0]
 801d45c:	6859      	ldr	r1, [r3, #4]
 801d45e:	ad04      	add	r5, sp, #16
 801d460:	4617      	mov	r7, r2
 801d462:	c503      	stmia	r5!, {r0, r1}
 801d464:	a802      	add	r0, sp, #8
 801d466:	f7f7 fba7 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d46a:	4639      	mov	r1, r7
 801d46c:	a804      	add	r0, sp, #16
 801d46e:	f7f7 fbe7 	bl	8014c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d472:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d476:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d47a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801d47e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d482:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801d486:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d48a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801d48e:	440e      	add	r6, r1
 801d490:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d494:	440a      	add	r2, r1
 801d496:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d49a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d49e:	4413      	add	r3, r2
 801d4a0:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d4a4:	4b77      	ldr	r3, [pc, #476]	; (801d684 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d4a6:	6818      	ldr	r0, [r3, #0]
 801d4a8:	6803      	ldr	r3, [r0, #0]
 801d4aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d4ac:	4798      	blx	r3
 801d4ae:	f8b9 b000 	ldrh.w	fp, [r9]
 801d4b2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d4b6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d4ba:	fb0b 2303 	mla	r3, fp, r3, r2
 801d4be:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d4c2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d4c6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d4ca:	fb05 f50b 	mul.w	r5, r5, fp
 801d4ce:	9300      	str	r3, [sp, #0]
 801d4d0:	d069      	beq.n	801d5a6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801d4d2:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801d4d6:	4558      	cmp	r0, fp
 801d4d8:	f080 80cc 	bcs.w	801d674 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d4dc:	9b00      	ldr	r3, [sp, #0]
 801d4de:	18c3      	adds	r3, r0, r3
 801d4e0:	9301      	str	r3, [sp, #4]
 801d4e2:	4631      	mov	r1, r6
 801d4e4:	9b01      	ldr	r3, [sp, #4]
 801d4e6:	4298      	cmp	r0, r3
 801d4e8:	d24f      	bcs.n	801d58a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801d4ea:	f811 2b01 	ldrb.w	r2, [r1], #1
 801d4ee:	2a00      	cmp	r2, #0
 801d4f0:	d048      	beq.n	801d584 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d4f2:	fb0a f202 	mul.w	r2, sl, r2
 801d4f6:	1c53      	adds	r3, r2, #1
 801d4f8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d4fc:	121b      	asrs	r3, r3, #8
 801d4fe:	d041      	beq.n	801d584 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d500:	8802      	ldrh	r2, [r0, #0]
 801d502:	f8b4 c000 	ldrh.w	ip, [r4]
 801d506:	b29e      	uxth	r6, r3
 801d508:	1215      	asrs	r5, r2, #8
 801d50a:	43db      	mvns	r3, r3
 801d50c:	b2db      	uxtb	r3, r3
 801d50e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d512:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d516:	fb15 f503 	smulbb	r5, r5, r3
 801d51a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801d51e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d522:	00d2      	lsls	r2, r2, #3
 801d524:	fb07 5706 	mla	r7, r7, r6, r5
 801d528:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d52c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d530:	b2d2      	uxtb	r2, r2
 801d532:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d536:	b2bf      	uxth	r7, r7
 801d538:	fb1e fe03 	smulbb	lr, lr, r3
 801d53c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d540:	fa5f fc8c 	uxtb.w	ip, ip
 801d544:	fb12 f203 	smulbb	r2, r2, r3
 801d548:	fb05 e506 	mla	r5, r5, r6, lr
 801d54c:	fb0c 2c06 	mla	ip, ip, r6, r2
 801d550:	f107 0e01 	add.w	lr, r7, #1
 801d554:	fa1f fc8c 	uxth.w	ip, ip
 801d558:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801d55c:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801d560:	f10c 0701 	add.w	r7, ip, #1
 801d564:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d568:	b2ad      	uxth	r5, r5
 801d56a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d56e:	ea47 070e 	orr.w	r7, r7, lr
 801d572:	f105 0e01 	add.w	lr, r5, #1
 801d576:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d57a:	096d      	lsrs	r5, r5, #5
 801d57c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d580:	432f      	orrs	r7, r5
 801d582:	8007      	strh	r7, [r0, #0]
 801d584:	3002      	adds	r0, #2
 801d586:	3402      	adds	r4, #2
 801d588:	e7ac      	b.n	801d4e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801d58a:	f8b9 3000 	ldrh.w	r3, [r9]
 801d58e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d592:	eba3 0308 	sub.w	r3, r3, r8
 801d596:	eba6 0608 	sub.w	r6, r6, r8
 801d59a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d59e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d5a2:	440e      	add	r6, r1
 801d5a4:	e797      	b.n	801d4d6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801d5a6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801d5aa:	42a8      	cmp	r0, r5
 801d5ac:	d262      	bcs.n	801d674 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d5ae:	9b00      	ldr	r3, [sp, #0]
 801d5b0:	4631      	mov	r1, r6
 801d5b2:	eb00 0b03 	add.w	fp, r0, r3
 801d5b6:	4558      	cmp	r0, fp
 801d5b8:	d24e      	bcs.n	801d658 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801d5ba:	f811 3b01 	ldrb.w	r3, [r1], #1
 801d5be:	b12b      	cbz	r3, 801d5cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d5c0:	2bff      	cmp	r3, #255	; 0xff
 801d5c2:	f8b4 e000 	ldrh.w	lr, [r4]
 801d5c6:	d104      	bne.n	801d5d2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801d5c8:	f8a0 e000 	strh.w	lr, [r0]
 801d5cc:	3002      	adds	r0, #2
 801d5ce:	3402      	adds	r4, #2
 801d5d0:	e7f1      	b.n	801d5b6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801d5d2:	8802      	ldrh	r2, [r0, #0]
 801d5d4:	b29f      	uxth	r7, r3
 801d5d6:	1216      	asrs	r6, r2, #8
 801d5d8:	43db      	mvns	r3, r3
 801d5da:	b2db      	uxtb	r3, r3
 801d5dc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d5e0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d5e4:	fb16 f603 	smulbb	r6, r6, r3
 801d5e8:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801d5ec:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d5f0:	00d2      	lsls	r2, r2, #3
 801d5f2:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d5f6:	b2d2      	uxtb	r2, r2
 801d5f8:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d5fc:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d600:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d604:	fb1a fa03 	smulbb	sl, sl, r3
 801d608:	fa1f fc8c 	uxth.w	ip, ip
 801d60c:	fb12 f303 	smulbb	r3, r2, r3
 801d610:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d614:	fa5f fe8e 	uxtb.w	lr, lr
 801d618:	fb06 a607 	mla	r6, r6, r7, sl
 801d61c:	f10c 0201 	add.w	r2, ip, #1
 801d620:	fb0e 3307 	mla	r3, lr, r7, r3
 801d624:	b2b6      	uxth	r6, r6
 801d626:	b29b      	uxth	r3, r3
 801d628:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801d62c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801d630:	f106 0a01 	add.w	sl, r6, #1
 801d634:	f103 0c01 	add.w	ip, r3, #1
 801d638:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d63c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d640:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d644:	0976      	lsrs	r6, r6, #5
 801d646:	ea4c 0c02 	orr.w	ip, ip, r2
 801d64a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d64e:	ea4c 0c06 	orr.w	ip, ip, r6
 801d652:	f8a0 c000 	strh.w	ip, [r0]
 801d656:	e7b9      	b.n	801d5cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d658:	f8b9 3000 	ldrh.w	r3, [r9]
 801d65c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d660:	eba3 0308 	sub.w	r3, r3, r8
 801d664:	eba6 0608 	sub.w	r6, r6, r8
 801d668:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d66c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d670:	440e      	add	r6, r1
 801d672:	e79a      	b.n	801d5aa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801d674:	4b03      	ldr	r3, [pc, #12]	; (801d684 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d676:	6818      	ldr	r0, [r3, #0]
 801d678:	6803      	ldr	r3, [r0, #0]
 801d67a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d67c:	4798      	blx	r3
 801d67e:	b007      	add	sp, #28
 801d680:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d684:	200137d4 	.word	0x200137d4
 801d688:	200137ce 	.word	0x200137ce

0801d68c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801d68c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d690:	b089      	sub	sp, #36	; 0x24
 801d692:	4682      	mov	sl, r0
 801d694:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801d698:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d69a:	460f      	mov	r7, r1
 801d69c:	4691      	mov	r9, r2
 801d69e:	4698      	mov	r8, r3
 801d6a0:	2e00      	cmp	r6, #0
 801d6a2:	d03d      	beq.n	801d720 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d6a4:	4608      	mov	r0, r1
 801d6a6:	f7fa fe59 	bl	801835c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801d6aa:	4605      	mov	r5, r0
 801d6ac:	4638      	mov	r0, r7
 801d6ae:	f7fa fe89 	bl	80183c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801d6b2:	f8ad 000e 	strh.w	r0, [sp, #14]
 801d6b6:	4638      	mov	r0, r7
 801d6b8:	f8ad 9008 	strh.w	r9, [sp, #8]
 801d6bc:	f8ad 500c 	strh.w	r5, [sp, #12]
 801d6c0:	f8ad 800a 	strh.w	r8, [sp, #10]
 801d6c4:	f7fa ff36 	bl	8018534 <_ZNK8touchgfx6Bitmap7getDataEv>
 801d6c8:	4605      	mov	r5, r0
 801d6ca:	4638      	mov	r0, r7
 801d6cc:	f7fa ff62 	bl	8018594 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801d6d0:	4681      	mov	r9, r0
 801d6d2:	4638      	mov	r0, r7
 801d6d4:	f7fa ffb2 	bl	801863c <_ZNK8touchgfx6Bitmap9getFormatEv>
 801d6d8:	280b      	cmp	r0, #11
 801d6da:	d821      	bhi.n	801d720 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d6dc:	e8df f000 	tbb	[pc, r0]
 801d6e0:	2006aebe 	.word	0x2006aebe
 801d6e4:	20202020 	.word	0x20202020
 801d6e8:	b5202020 	.word	0xb5202020
 801d6ec:	4bb0      	ldr	r3, [pc, #704]	; (801d9b0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801d6ee:	6818      	ldr	r0, [r3, #0]
 801d6f0:	6803      	ldr	r3, [r0, #0]
 801d6f2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d6f4:	4798      	blx	r3
 801d6f6:	2eff      	cmp	r6, #255	; 0xff
 801d6f8:	d101      	bne.n	801d6fe <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801d6fa:	0683      	lsls	r3, r0, #26
 801d6fc:	d506      	bpl.n	801d70c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801d6fe:	4633      	mov	r3, r6
 801d700:	4622      	mov	r2, r4
 801d702:	a902      	add	r1, sp, #8
 801d704:	4628      	mov	r0, r5
 801d706:	f7ff f909 	bl	801c91c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d70a:	e009      	b.n	801d720 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d70c:	4638      	mov	r0, r7
 801d70e:	f7fa fed9 	bl	80184c4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d712:	b940      	cbnz	r0, 801d726 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801d714:	4623      	mov	r3, r4
 801d716:	aa02      	add	r2, sp, #8
 801d718:	4629      	mov	r1, r5
 801d71a:	4650      	mov	r0, sl
 801d71c:	f7ff f9e4 	bl	801cae8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d720:	b009      	add	sp, #36	; 0x24
 801d722:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d726:	f10d 0818 	add.w	r8, sp, #24
 801d72a:	4639      	mov	r1, r7
 801d72c:	4640      	mov	r0, r8
 801d72e:	f7fa fe7d 	bl	801842c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d732:	e898 0003 	ldmia.w	r8, {r0, r1}
 801d736:	af04      	add	r7, sp, #16
 801d738:	e887 0003 	stmia.w	r7, {r0, r1}
 801d73c:	4638      	mov	r0, r7
 801d73e:	4621      	mov	r1, r4
 801d740:	f7f2 fadc 	bl	800fcfc <_ZN8touchgfx4RectaNERKS0_>
 801d744:	4638      	mov	r0, r7
 801d746:	f7f2 fb1c 	bl	800fd82 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d74a:	2800      	cmp	r0, #0
 801d74c:	d1d7      	bne.n	801d6fe <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801d74e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d752:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d756:	4293      	cmp	r3, r2
 801d758:	dd12      	ble.n	801d780 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801d75a:	1a9b      	subs	r3, r3, r2
 801d75c:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d760:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d764:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d768:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d76c:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d770:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d774:	4642      	mov	r2, r8
 801d776:	4633      	mov	r3, r6
 801d778:	a902      	add	r1, sp, #8
 801d77a:	4628      	mov	r0, r5
 801d77c:	f7ff f8ce 	bl	801c91c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d780:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d784:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d788:	4293      	cmp	r3, r2
 801d78a:	dd12      	ble.n	801d7b2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801d78c:	1a9b      	subs	r3, r3, r2
 801d78e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d792:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d796:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d79a:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d79e:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d7a2:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d7a6:	23ff      	movs	r3, #255	; 0xff
 801d7a8:	4642      	mov	r2, r8
 801d7aa:	a902      	add	r1, sp, #8
 801d7ac:	4628      	mov	r0, r5
 801d7ae:	f7ff f8b5 	bl	801c91c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d7b2:	463b      	mov	r3, r7
 801d7b4:	aa02      	add	r2, sp, #8
 801d7b6:	4629      	mov	r1, r5
 801d7b8:	4650      	mov	r0, sl
 801d7ba:	f7ff f995 	bl	801cae8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d7be:	88a2      	ldrh	r2, [r4, #4]
 801d7c0:	8823      	ldrh	r3, [r4, #0]
 801d7c2:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d7c6:	4413      	add	r3, r2
 801d7c8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d7cc:	440a      	add	r2, r1
 801d7ce:	b29b      	uxth	r3, r3
 801d7d0:	b292      	uxth	r2, r2
 801d7d2:	b211      	sxth	r1, r2
 801d7d4:	b218      	sxth	r0, r3
 801d7d6:	4288      	cmp	r0, r1
 801d7d8:	dd12      	ble.n	801d800 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801d7da:	1a9b      	subs	r3, r3, r2
 801d7dc:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d7e0:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801d7e4:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d7e8:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d7ec:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d7f0:	23ff      	movs	r3, #255	; 0xff
 801d7f2:	4642      	mov	r2, r8
 801d7f4:	a902      	add	r1, sp, #8
 801d7f6:	4628      	mov	r0, r5
 801d7f8:	f8ad 601a 	strh.w	r6, [sp, #26]
 801d7fc:	f7ff f88e 	bl	801c91c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d800:	88e2      	ldrh	r2, [r4, #6]
 801d802:	8863      	ldrh	r3, [r4, #2]
 801d804:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d808:	4413      	add	r3, r2
 801d80a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d80e:	440a      	add	r2, r1
 801d810:	b29b      	uxth	r3, r3
 801d812:	b292      	uxth	r2, r2
 801d814:	b211      	sxth	r1, r2
 801d816:	b218      	sxth	r0, r3
 801d818:	4288      	cmp	r0, r1
 801d81a:	dd81      	ble.n	801d720 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d81c:	1a9b      	subs	r3, r3, r2
 801d81e:	f9b4 6000 	ldrsh.w	r6, [r4]
 801d822:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d826:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d82a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801d82e:	f8ad 101a 	strh.w	r1, [sp, #26]
 801d832:	f8ad 001c 	strh.w	r0, [sp, #28]
 801d836:	23ff      	movs	r3, #255	; 0xff
 801d838:	4642      	mov	r2, r8
 801d83a:	e762      	b.n	801d702 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801d83c:	4633      	mov	r3, r6
 801d83e:	4622      	mov	r2, r4
 801d840:	a902      	add	r1, sp, #8
 801d842:	4628      	mov	r0, r5
 801d844:	f7ff f9c0 	bl	801cbc8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801d848:	e76a      	b.n	801d720 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d84a:	e9cd 4600 	strd	r4, r6, [sp]
 801d84e:	ab02      	add	r3, sp, #8
 801d850:	464a      	mov	r2, r9
 801d852:	4629      	mov	r1, r5
 801d854:	4650      	mov	r0, sl
 801d856:	f7ff fd97 	bl	801d388 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801d85a:	e761      	b.n	801d720 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d85c:	4638      	mov	r0, r7
 801d85e:	f7fa fe31 	bl	80184c4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d862:	b950      	cbnz	r0, 801d87a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801d864:	e9cd 6000 	strd	r6, r0, [sp]
 801d868:	f8da 3000 	ldr.w	r3, [sl]
 801d86c:	aa02      	add	r2, sp, #8
 801d86e:	68de      	ldr	r6, [r3, #12]
 801d870:	4629      	mov	r1, r5
 801d872:	4623      	mov	r3, r4
 801d874:	4650      	mov	r0, sl
 801d876:	47b0      	blx	r6
 801d878:	e752      	b.n	801d720 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d87a:	f10d 0818 	add.w	r8, sp, #24
 801d87e:	4639      	mov	r1, r7
 801d880:	4640      	mov	r0, r8
 801d882:	f7fa fdd3 	bl	801842c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d886:	e898 0003 	ldmia.w	r8, {r0, r1}
 801d88a:	af04      	add	r7, sp, #16
 801d88c:	e887 0003 	stmia.w	r7, {r0, r1}
 801d890:	4638      	mov	r0, r7
 801d892:	4621      	mov	r1, r4
 801d894:	f7f2 fa32 	bl	800fcfc <_ZN8touchgfx4RectaNERKS0_>
 801d898:	4638      	mov	r0, r7
 801d89a:	f7f2 fa72 	bl	800fd82 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d89e:	b138      	cbz	r0, 801d8b0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801d8a0:	9600      	str	r6, [sp, #0]
 801d8a2:	4623      	mov	r3, r4
 801d8a4:	aa02      	add	r2, sp, #8
 801d8a6:	4649      	mov	r1, r9
 801d8a8:	4628      	mov	r0, r5
 801d8aa:	f7ff fdc9 	bl	801d440 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d8ae:	e737      	b.n	801d720 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d8b0:	e9cd 6000 	strd	r6, r0, [sp]
 801d8b4:	f8da 3000 	ldr.w	r3, [sl]
 801d8b8:	aa02      	add	r2, sp, #8
 801d8ba:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801d8be:	4629      	mov	r1, r5
 801d8c0:	463b      	mov	r3, r7
 801d8c2:	4650      	mov	r0, sl
 801d8c4:	47d8      	blx	fp
 801d8c6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d8ca:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d8ce:	4293      	cmp	r3, r2
 801d8d0:	dd13      	ble.n	801d8fa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801d8d2:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d8d6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d8da:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d8de:	1a9b      	subs	r3, r3, r2
 801d8e0:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d8e4:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d8e8:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d8ec:	9600      	str	r6, [sp, #0]
 801d8ee:	4643      	mov	r3, r8
 801d8f0:	aa02      	add	r2, sp, #8
 801d8f2:	4649      	mov	r1, r9
 801d8f4:	4628      	mov	r0, r5
 801d8f6:	f7ff fda3 	bl	801d440 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d8fa:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d8fe:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d902:	4293      	cmp	r3, r2
 801d904:	dd13      	ble.n	801d92e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801d906:	1a9b      	subs	r3, r3, r2
 801d908:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d90c:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d910:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d914:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d918:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d91c:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d920:	9600      	str	r6, [sp, #0]
 801d922:	4643      	mov	r3, r8
 801d924:	aa02      	add	r2, sp, #8
 801d926:	4649      	mov	r1, r9
 801d928:	4628      	mov	r0, r5
 801d92a:	f7ff fd89 	bl	801d440 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d92e:	88a2      	ldrh	r2, [r4, #4]
 801d930:	8823      	ldrh	r3, [r4, #0]
 801d932:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d936:	4413      	add	r3, r2
 801d938:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d93c:	440a      	add	r2, r1
 801d93e:	b29b      	uxth	r3, r3
 801d940:	b292      	uxth	r2, r2
 801d942:	b211      	sxth	r1, r2
 801d944:	b218      	sxth	r0, r3
 801d946:	4288      	cmp	r0, r1
 801d948:	dd13      	ble.n	801d972 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801d94a:	1a9b      	subs	r3, r3, r2
 801d94c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d950:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801d954:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d958:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d95c:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d960:	9600      	str	r6, [sp, #0]
 801d962:	4643      	mov	r3, r8
 801d964:	aa02      	add	r2, sp, #8
 801d966:	4649      	mov	r1, r9
 801d968:	4628      	mov	r0, r5
 801d96a:	f8ad 701a 	strh.w	r7, [sp, #26]
 801d96e:	f7ff fd67 	bl	801d440 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d972:	88e2      	ldrh	r2, [r4, #6]
 801d974:	8863      	ldrh	r3, [r4, #2]
 801d976:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d97a:	4413      	add	r3, r2
 801d97c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d980:	440a      	add	r2, r1
 801d982:	b29b      	uxth	r3, r3
 801d984:	b292      	uxth	r2, r2
 801d986:	b211      	sxth	r1, r2
 801d988:	b218      	sxth	r0, r3
 801d98a:	4288      	cmp	r0, r1
 801d98c:	f77f aec8 	ble.w	801d720 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d990:	f9b4 7000 	ldrsh.w	r7, [r4]
 801d994:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d998:	f8ad 7018 	strh.w	r7, [sp, #24]
 801d99c:	1a9b      	subs	r3, r3, r2
 801d99e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d9a2:	f8ad 101a 	strh.w	r1, [sp, #26]
 801d9a6:	f8ad 001c 	strh.w	r0, [sp, #28]
 801d9aa:	9600      	str	r6, [sp, #0]
 801d9ac:	4643      	mov	r3, r8
 801d9ae:	e779      	b.n	801d8a4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801d9b0:	200137d4 	.word	0x200137d4

0801d9b4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801d9b4:	b180      	cbz	r0, 801d9d8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801d9b6:	2903      	cmp	r1, #3
 801d9b8:	d81c      	bhi.n	801d9f4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801d9ba:	e8df f001 	tbb	[pc, r1]
 801d9be:	1d02      	.short	0x1d02
 801d9c0:	1f08      	.short	0x1f08
 801d9c2:	4b10      	ldr	r3, [pc, #64]	; (801da04 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801d9c4:	8818      	ldrh	r0, [r3, #0]
 801d9c6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d9ca:	4240      	negs	r0, r0
 801d9cc:	4770      	bx	lr
 801d9ce:	4b0d      	ldr	r3, [pc, #52]	; (801da04 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801d9d0:	8818      	ldrh	r0, [r3, #0]
 801d9d2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d9d6:	4770      	bx	lr
 801d9d8:	2903      	cmp	r1, #3
 801d9da:	d80b      	bhi.n	801d9f4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801d9dc:	a301      	add	r3, pc, #4	; (adr r3, 801d9e4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801d9de:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801d9e2:	bf00      	nop
 801d9e4:	0801d9f9 	.word	0x0801d9f9
 801d9e8:	0801d9cf 	.word	0x0801d9cf
 801d9ec:	0801d9fd 	.word	0x0801d9fd
 801d9f0:	0801d9c3 	.word	0x0801d9c3
 801d9f4:	2000      	movs	r0, #0
 801d9f6:	4770      	bx	lr
 801d9f8:	2001      	movs	r0, #1
 801d9fa:	4770      	bx	lr
 801d9fc:	f04f 30ff 	mov.w	r0, #4294967295
 801da00:	4770      	bx	lr
 801da02:	bf00      	nop
 801da04:	200137ce 	.word	0x200137ce

0801da08 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801da08:	b180      	cbz	r0, 801da2c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801da0a:	2903      	cmp	r1, #3
 801da0c:	d81c      	bhi.n	801da48 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801da0e:	e8df f001 	tbb	[pc, r1]
 801da12:	021d      	.short	0x021d
 801da14:	071f      	.short	0x071f
 801da16:	4b10      	ldr	r3, [pc, #64]	; (801da58 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801da18:	8818      	ldrh	r0, [r3, #0]
 801da1a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801da1e:	4770      	bx	lr
 801da20:	4b0d      	ldr	r3, [pc, #52]	; (801da58 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801da22:	8818      	ldrh	r0, [r3, #0]
 801da24:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801da28:	4240      	negs	r0, r0
 801da2a:	4770      	bx	lr
 801da2c:	2903      	cmp	r1, #3
 801da2e:	d80b      	bhi.n	801da48 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801da30:	a301      	add	r3, pc, #4	; (adr r3, 801da38 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801da32:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801da36:	bf00      	nop
 801da38:	0801da17 	.word	0x0801da17
 801da3c:	0801da51 	.word	0x0801da51
 801da40:	0801da21 	.word	0x0801da21
 801da44:	0801da4d 	.word	0x0801da4d
 801da48:	2000      	movs	r0, #0
 801da4a:	4770      	bx	lr
 801da4c:	2001      	movs	r0, #1
 801da4e:	4770      	bx	lr
 801da50:	f04f 30ff 	mov.w	r0, #4294967295
 801da54:	4770      	bx	lr
 801da56:	bf00      	nop
 801da58:	200137ce 	.word	0x200137ce

0801da5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801da5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801da60:	b099      	sub	sp, #100	; 0x64
 801da62:	910b      	str	r1, [sp, #44]	; 0x2c
 801da64:	a914      	add	r1, sp, #80	; 0x50
 801da66:	e881 000c 	stmia.w	r1, {r2, r3}
 801da6a:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801da6e:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801da72:	f891 900d 	ldrb.w	r9, [r1, #13]
 801da76:	9309      	str	r3, [sp, #36]	; 0x24
 801da78:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801da7c:	9310      	str	r3, [sp, #64]	; 0x40
 801da7e:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801da82:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801da86:	930c      	str	r3, [sp, #48]	; 0x30
 801da88:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801da8c:	798f      	ldrb	r7, [r1, #6]
 801da8e:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801da92:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801da96:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801da9a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801da9e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801daa2:	431f      	orrs	r7, r3
 801daa4:	f000 8195 	beq.w	801ddd2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801daa8:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801daac:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801dab0:	f891 9007 	ldrb.w	r9, [r1, #7]
 801dab4:	ea59 0903 	orrs.w	r9, r9, r3
 801dab8:	f000 818b 	beq.w	801ddd2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801dabc:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801dac0:	b29b      	uxth	r3, r3
 801dac2:	2d00      	cmp	r5, #0
 801dac4:	f000 812e 	beq.w	801dd24 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801dac8:	1aed      	subs	r5, r5, r3
 801daca:	b2ad      	uxth	r5, r5
 801dacc:	042b      	lsls	r3, r5, #16
 801dace:	d502      	bpl.n	801dad6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801dad0:	1b64      	subs	r4, r4, r5
 801dad2:	b224      	sxth	r4, r4
 801dad4:	2500      	movs	r5, #0
 801dad6:	f9b2 1000 	ldrsh.w	r1, [r2]
 801dada:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801dade:	428c      	cmp	r4, r1
 801dae0:	b28b      	uxth	r3, r1
 801dae2:	bfbf      	itttt	lt
 801dae4:	18ed      	addlt	r5, r5, r3
 801dae6:	1b2c      	sublt	r4, r5, r4
 801dae8:	b2a5      	uxthlt	r5, r4
 801daea:	460c      	movlt	r4, r1
 801daec:	8891      	ldrh	r1, [r2, #4]
 801daee:	440b      	add	r3, r1
 801daf0:	b21b      	sxth	r3, r3
 801daf2:	930f      	str	r3, [sp, #60]	; 0x3c
 801daf4:	88d3      	ldrh	r3, [r2, #6]
 801daf6:	8852      	ldrh	r2, [r2, #2]
 801daf8:	4413      	add	r3, r2
 801dafa:	b21b      	sxth	r3, r3
 801dafc:	930d      	str	r3, [sp, #52]	; 0x34
 801dafe:	4bbe      	ldr	r3, [pc, #760]	; (801ddf8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801db00:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801db02:	f893 b000 	ldrb.w	fp, [r3]
 801db06:	f10b 3cff 	add.w	ip, fp, #4294967295
 801db0a:	f1dc 0300 	rsbs	r3, ip, #0
 801db0e:	eb43 030c 	adc.w	r3, r3, ip
 801db12:	930e      	str	r3, [sp, #56]	; 0x38
 801db14:	4621      	mov	r1, r4
 801db16:	4653      	mov	r3, sl
 801db18:	a814      	add	r0, sp, #80	; 0x50
 801db1a:	f7f6 fec2 	bl	80148a2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801db1e:	4621      	mov	r1, r4
 801db20:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801db24:	4653      	mov	r3, sl
 801db26:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801db28:	a814      	add	r0, sp, #80	; 0x50
 801db2a:	f7f6 fed7 	bl	80148dc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801db2e:	a918      	add	r1, sp, #96	; 0x60
 801db30:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801db34:	a817      	add	r0, sp, #92	; 0x5c
 801db36:	f7f6 fffd 	bl	8014b34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801db3a:	f1ba 0f00 	cmp.w	sl, #0
 801db3e:	f040 80f4 	bne.w	801dd2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801db42:	f1bb 0f01 	cmp.w	fp, #1
 801db46:	f040 80f8 	bne.w	801dd3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801db4a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801db4c:	2b00      	cmp	r3, #0
 801db4e:	f040 8145 	bne.w	801dddc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801db52:	b2ba      	uxth	r2, r7
 801db54:	b905      	cbnz	r5, 801db58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801db56:	b16e      	cbz	r6, 801db74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801db58:	fb06 5302 	mla	r3, r6, r2, r5
 801db5c:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801db5e:	fb08 f303 	mul.w	r3, r8, r3
 801db62:	4631      	mov	r1, r6
 801db64:	f003 0607 	and.w	r6, r3, #7
 801db68:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801db6c:	9328      	str	r3, [sp, #160]	; 0xa0
 801db6e:	eba9 0301 	sub.w	r3, r9, r1
 801db72:	930a      	str	r3, [sp, #40]	; 0x28
 801db74:	4651      	mov	r1, sl
 801db76:	980e      	ldr	r0, [sp, #56]	; 0x38
 801db78:	f7ff ff1c 	bl	801d9b4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801db7c:	4681      	mov	r9, r0
 801db7e:	980e      	ldr	r0, [sp, #56]	; 0x38
 801db80:	f7ff ff42 	bl	801da08 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801db84:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801db86:	9909      	ldr	r1, [sp, #36]	; 0x24
 801db88:	eba3 0a01 	sub.w	sl, r3, r1
 801db8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801db8e:	459a      	cmp	sl, r3
 801db90:	bfa8      	it	ge
 801db92:	469a      	movge	sl, r3
 801db94:	f1ba 0f00 	cmp.w	sl, #0
 801db98:	4683      	mov	fp, r0
 801db9a:	f340 811a 	ble.w	801ddd2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801db9e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801dba0:	1b64      	subs	r4, r4, r5
 801dba2:	1b1c      	subs	r4, r3, r4
 801dba4:	42bc      	cmp	r4, r7
 801dba6:	bfd4      	ite	le
 801dba8:	ebc5 0504 	rsble	r5, r5, r4
 801dbac:	ebc5 0507 	rsbgt	r5, r5, r7
 801dbb0:	2d00      	cmp	r5, #0
 801dbb2:	f340 810e 	ble.w	801ddd2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801dbb6:	1b52      	subs	r2, r2, r5
 801dbb8:	fb08 f302 	mul.w	r3, r8, r2
 801dbbc:	930f      	str	r3, [sp, #60]	; 0x3c
 801dbbe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801dbc0:	2b00      	cmp	r3, #0
 801dbc2:	f040 8116 	bne.w	801ddf2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801dbc6:	4b8d      	ldr	r3, [pc, #564]	; (801ddfc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801dbc8:	6818      	ldr	r0, [r3, #0]
 801dbca:	6803      	ldr	r3, [r0, #0]
 801dbcc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dbce:	4798      	blx	r3
 801dbd0:	2301      	movs	r3, #1
 801dbd2:	fa03 f308 	lsl.w	r3, r3, r8
 801dbd6:	4a8a      	ldr	r2, [pc, #552]	; (801de00 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801dbd8:	3b01      	subs	r3, #1
 801dbda:	b2db      	uxtb	r3, r3
 801dbdc:	8811      	ldrh	r1, [r2, #0]
 801dbde:	930e      	str	r3, [sp, #56]	; 0x38
 801dbe0:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801dbe4:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801dbe8:	fb01 2303 	mla	r3, r1, r3, r2
 801dbec:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dbf0:	930a      	str	r3, [sp, #40]	; 0x28
 801dbf2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dbf4:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801dbf8:	9313      	str	r3, [sp, #76]	; 0x4c
 801dbfa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dbfc:	0a19      	lsrs	r1, r3, #8
 801dbfe:	b2cb      	uxtb	r3, r1
 801dc00:	9312      	str	r3, [sp, #72]	; 0x48
 801dc02:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dc04:	b2db      	uxtb	r3, r3
 801dc06:	9311      	str	r3, [sp, #68]	; 0x44
 801dc08:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dc0a:	095a      	lsrs	r2, r3, #5
 801dc0c:	4b7d      	ldr	r3, [pc, #500]	; (801de04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801dc0e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dc12:	400b      	ands	r3, r1
 801dc14:	4313      	orrs	r3, r2
 801dc16:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801dc18:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801dc1c:	4313      	orrs	r3, r2
 801dc1e:	b29b      	uxth	r3, r3
 801dc20:	9310      	str	r3, [sp, #64]	; 0x40
 801dc22:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801dc24:	781a      	ldrb	r2, [r3, #0]
 801dc26:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801dc2a:	4132      	asrs	r2, r6
 801dc2c:	fb05 b919 	mls	r9, r5, r9, fp
 801dc30:	fb03 fb05 	mul.w	fp, r3, r5
 801dc34:	b2d2      	uxtb	r2, r2
 801dc36:	930d      	str	r3, [sp, #52]	; 0x34
 801dc38:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801dc3c:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801dc40:	f0c0 80f5 	bcc.w	801de2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801dc44:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801dc48:	46ae      	mov	lr, r5
 801dc4a:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801dc4e:	f0c0 80dd 	bcc.w	801de0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801dc52:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dc54:	4013      	ands	r3, r2
 801dc56:	d055      	beq.n	801dd04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801dc58:	20ff      	movs	r0, #255	; 0xff
 801dc5a:	990e      	ldr	r1, [sp, #56]	; 0x38
 801dc5c:	fb90 f1f1 	sdiv	r1, r0, r1
 801dc60:	434b      	muls	r3, r1
 801dc62:	2bfe      	cmp	r3, #254	; 0xfe
 801dc64:	dd03      	ble.n	801dc6e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801dc66:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dc68:	4281      	cmp	r1, r0
 801dc6a:	f000 80cd 	beq.w	801de08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801dc6e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dc70:	f8bc 4000 	ldrh.w	r4, [ip]
 801dc74:	fb11 f303 	smulbb	r3, r1, r3
 801dc78:	b29b      	uxth	r3, r3
 801dc7a:	1c59      	adds	r1, r3, #1
 801dc7c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801dc80:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801dc84:	b29f      	uxth	r7, r3
 801dc86:	43db      	mvns	r3, r3
 801dc88:	b2db      	uxtb	r3, r3
 801dc8a:	9309      	str	r3, [sp, #36]	; 0x24
 801dc8c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801dc8e:	1220      	asrs	r0, r4, #8
 801dc90:	fb13 f907 	smulbb	r9, r3, r7
 801dc94:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801dc98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dc9a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801dc9e:	fb00 9003 	mla	r0, r0, r3, r9
 801dca2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801dca4:	10e1      	asrs	r1, r4, #3
 801dca6:	fb13 f907 	smulbb	r9, r3, r7
 801dcaa:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801dcae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dcb0:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801dcb4:	fb01 9103 	mla	r1, r1, r3, r9
 801dcb8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801dcba:	00e4      	lsls	r4, r4, #3
 801dcbc:	fb13 f707 	smulbb	r7, r3, r7
 801dcc0:	b2e4      	uxtb	r4, r4
 801dcc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dcc4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801dcc8:	fb04 7403 	mla	r4, r4, r3, r7
 801dccc:	b280      	uxth	r0, r0
 801dcce:	b2a4      	uxth	r4, r4
 801dcd0:	1c43      	adds	r3, r0, #1
 801dcd2:	f104 0901 	add.w	r9, r4, #1
 801dcd6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801dcda:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801dcde:	b289      	uxth	r1, r1
 801dce0:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801dce4:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801dce8:	ea49 0000 	orr.w	r0, r9, r0
 801dcec:	f101 0901 	add.w	r9, r1, #1
 801dcf0:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801dcf4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801dcf8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801dcfc:	ea40 0009 	orr.w	r0, r0, r9
 801dd00:	f8ac 0000 	strh.w	r0, [ip]
 801dd04:	4446      	add	r6, r8
 801dd06:	b2b6      	uxth	r6, r6
 801dd08:	2e07      	cmp	r6, #7
 801dd0a:	bf81      	itttt	hi
 801dd0c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801dd0e:	785a      	ldrbhi	r2, [r3, #1]
 801dd10:	3301      	addhi	r3, #1
 801dd12:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801dd14:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801dd16:	bf9a      	itte	ls
 801dd18:	fa42 f208 	asrls.w	r2, r2, r8
 801dd1c:	b2d2      	uxtbls	r2, r2
 801dd1e:	2600      	movhi	r6, #0
 801dd20:	449c      	add	ip, r3
 801dd22:	e792      	b.n	801dc4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801dd24:	441c      	add	r4, r3
 801dd26:	b224      	sxth	r4, r4
 801dd28:	e6d5      	b.n	801dad6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801dd2a:	f1ba 0f01 	cmp.w	sl, #1
 801dd2e:	f47f af0c 	bne.w	801db4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dd32:	f1bb 0f01 	cmp.w	fp, #1
 801dd36:	f47f af08 	bne.w	801db4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dd3a:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801ddfc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801dd3e:	f8db 0000 	ldr.w	r0, [fp]
 801dd42:	6803      	ldr	r3, [r0, #0]
 801dd44:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801dd46:	4798      	blx	r3
 801dd48:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801dd4c:	465a      	mov	r2, fp
 801dd4e:	d006      	beq.n	801dd5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801dd50:	f1b8 0f04 	cmp.w	r8, #4
 801dd54:	d140      	bne.n	801ddd8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801dd56:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dd58:	3300      	adds	r3, #0
 801dd5a:	bf18      	it	ne
 801dd5c:	2301      	movne	r3, #1
 801dd5e:	0580      	lsls	r0, r0, #22
 801dd60:	d56e      	bpl.n	801de40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801dd62:	f1b8 0f08 	cmp.w	r8, #8
 801dd66:	d16b      	bne.n	801de40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801dd68:	2b00      	cmp	r3, #0
 801dd6a:	bf0c      	ite	eq
 801dd6c:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801dd70:	f44f 7180 	movne.w	r1, #256	; 0x100
 801dd74:	2d00      	cmp	r5, #0
 801dd76:	f47f aee8 	bne.w	801db4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dd7a:	2e00      	cmp	r6, #0
 801dd7c:	f47f aee5 	bne.w	801db4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dd80:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801dd82:	19e3      	adds	r3, r4, r7
 801dd84:	4283      	cmp	r3, r0
 801dd86:	f73f aee0 	bgt.w	801db4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dd8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dd8c:	980d      	ldr	r0, [sp, #52]	; 0x34
 801dd8e:	444b      	add	r3, r9
 801dd90:	4283      	cmp	r3, r0
 801dd92:	f73f aeda 	bgt.w	801db4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dd96:	6810      	ldr	r0, [r2, #0]
 801dd98:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801dd9c:	6804      	ldr	r4, [r0, #0]
 801dd9e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801dda2:	b2bf      	uxth	r7, r7
 801dda4:	f1b8 0f08 	cmp.w	r8, #8
 801dda8:	f04f 0500 	mov.w	r5, #0
 801ddac:	bf18      	it	ne
 801ddae:	3701      	addne	r7, #1
 801ddb0:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801ddb4:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ddb6:	9104      	str	r1, [sp, #16]
 801ddb8:	bf18      	it	ne
 801ddba:	f027 0701 	bicne.w	r7, r7, #1
 801ddbe:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801ddc0:	bf18      	it	ne
 801ddc2:	b2bf      	uxthne	r7, r7
 801ddc4:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801ddc8:	e9cd 7900 	strd	r7, r9, [sp]
 801ddcc:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801ddce:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801ddd0:	47a0      	blx	r4
 801ddd2:	b019      	add	sp, #100	; 0x64
 801ddd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ddd8:	2300      	movs	r3, #0
 801ddda:	e7c0      	b.n	801dd5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801dddc:	2208      	movs	r2, #8
 801ddde:	fb92 f3f8 	sdiv	r3, r2, r8
 801dde2:	1e5a      	subs	r2, r3, #1
 801dde4:	443a      	add	r2, r7
 801dde6:	fb92 f2f3 	sdiv	r2, r2, r3
 801ddea:	fb12 f203 	smulbb	r2, r2, r3
 801ddee:	b292      	uxth	r2, r2
 801ddf0:	e6b0      	b.n	801db54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801ddf2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801ddf4:	e6ec      	b.n	801dbd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801ddf6:	bf00      	nop
 801ddf8:	200137cc 	.word	0x200137cc
 801ddfc:	200137d4 	.word	0x200137d4
 801de00:	200137ce 	.word	0x200137ce
 801de04:	00fff800 	.word	0x00fff800
 801de08:	9810      	ldr	r0, [sp, #64]	; 0x40
 801de0a:	e779      	b.n	801dd00 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801de0c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801de0e:	b153      	cbz	r3, 801de26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801de10:	441e      	add	r6, r3
 801de12:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801de14:	b2b6      	uxth	r6, r6
 801de16:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801de1a:	f006 0607 	and.w	r6, r6, #7
 801de1e:	781a      	ldrb	r2, [r3, #0]
 801de20:	9328      	str	r3, [sp, #160]	; 0xa0
 801de22:	4132      	asrs	r2, r6
 801de24:	b2d2      	uxtb	r2, r2
 801de26:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801de28:	445b      	add	r3, fp
 801de2a:	930a      	str	r3, [sp, #40]	; 0x28
 801de2c:	e706      	b.n	801dc3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801de2e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801de30:	2b00      	cmp	r3, #0
 801de32:	d1ce      	bne.n	801ddd2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801de34:	4b05      	ldr	r3, [pc, #20]	; (801de4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801de36:	6818      	ldr	r0, [r3, #0]
 801de38:	6803      	ldr	r3, [r0, #0]
 801de3a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801de3c:	4798      	blx	r3
 801de3e:	e7c8      	b.n	801ddd2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801de40:	2b00      	cmp	r3, #0
 801de42:	f43f ae82 	beq.w	801db4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801de46:	f44f 7180 	mov.w	r1, #256	; 0x100
 801de4a:	e793      	b.n	801dd74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801de4c:	200137d4 	.word	0x200137d4

0801de50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801de50:	b538      	push	{r3, r4, r5, lr}
 801de52:	4c15      	ldr	r4, [pc, #84]	; (801dea8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801de54:	7823      	ldrb	r3, [r4, #0]
 801de56:	f3bf 8f5b 	dmb	ish
 801de5a:	07da      	lsls	r2, r3, #31
 801de5c:	4605      	mov	r5, r0
 801de5e:	d40b      	bmi.n	801de78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801de60:	4620      	mov	r0, r4
 801de62:	f009 fdbe 	bl	80279e2 <__cxa_guard_acquire>
 801de66:	b138      	cbz	r0, 801de78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801de68:	4620      	mov	r0, r4
 801de6a:	f009 fdc6 	bl	80279fa <__cxa_guard_release>
 801de6e:	4a0f      	ldr	r2, [pc, #60]	; (801deac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801de70:	490f      	ldr	r1, [pc, #60]	; (801deb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801de72:	4810      	ldr	r0, [pc, #64]	; (801deb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801de74:	f009 fdae 	bl	80279d4 <__aeabi_atexit>
 801de78:	4c0f      	ldr	r4, [pc, #60]	; (801deb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801de7a:	7823      	ldrb	r3, [r4, #0]
 801de7c:	f3bf 8f5b 	dmb	ish
 801de80:	07db      	lsls	r3, r3, #31
 801de82:	d40b      	bmi.n	801de9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801de84:	4620      	mov	r0, r4
 801de86:	f009 fdac 	bl	80279e2 <__cxa_guard_acquire>
 801de8a:	b138      	cbz	r0, 801de9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801de8c:	4620      	mov	r0, r4
 801de8e:	f009 fdb4 	bl	80279fa <__cxa_guard_release>
 801de92:	4a06      	ldr	r2, [pc, #24]	; (801deac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801de94:	4909      	ldr	r1, [pc, #36]	; (801debc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801de96:	480a      	ldr	r0, [pc, #40]	; (801dec0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801de98:	f009 fd9c 	bl	80279d4 <__aeabi_atexit>
 801de9c:	4b05      	ldr	r3, [pc, #20]	; (801deb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801de9e:	612b      	str	r3, [r5, #16]
 801dea0:	4b07      	ldr	r3, [pc, #28]	; (801dec0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801dea2:	616b      	str	r3, [r5, #20]
 801dea4:	bd38      	pop	{r3, r4, r5, pc}
 801dea6:	bf00      	nop
 801dea8:	200138b4 	.word	0x200138b4
 801deac:	20000000 	.word	0x20000000
 801deb0:	0801ac53 	.word	0x0801ac53
 801deb4:	200000d4 	.word	0x200000d4
 801deb8:	200138b8 	.word	0x200138b8
 801debc:	0801ac51 	.word	0x0801ac51
 801dec0:	200000d8 	.word	0x200000d8

0801dec4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801dec4:	b538      	push	{r3, r4, r5, lr}
 801dec6:	4c15      	ldr	r4, [pc, #84]	; (801df1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801dec8:	7823      	ldrb	r3, [r4, #0]
 801deca:	f3bf 8f5b 	dmb	ish
 801dece:	07da      	lsls	r2, r3, #31
 801ded0:	4605      	mov	r5, r0
 801ded2:	d40b      	bmi.n	801deec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801ded4:	4620      	mov	r0, r4
 801ded6:	f009 fd84 	bl	80279e2 <__cxa_guard_acquire>
 801deda:	b138      	cbz	r0, 801deec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801dedc:	4620      	mov	r0, r4
 801dede:	f009 fd8c 	bl	80279fa <__cxa_guard_release>
 801dee2:	4a0f      	ldr	r2, [pc, #60]	; (801df20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801dee4:	490f      	ldr	r1, [pc, #60]	; (801df24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801dee6:	4810      	ldr	r0, [pc, #64]	; (801df28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801dee8:	f009 fd74 	bl	80279d4 <__aeabi_atexit>
 801deec:	4c0f      	ldr	r4, [pc, #60]	; (801df2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801deee:	7823      	ldrb	r3, [r4, #0]
 801def0:	f3bf 8f5b 	dmb	ish
 801def4:	07db      	lsls	r3, r3, #31
 801def6:	d40b      	bmi.n	801df10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801def8:	4620      	mov	r0, r4
 801defa:	f009 fd72 	bl	80279e2 <__cxa_guard_acquire>
 801defe:	b138      	cbz	r0, 801df10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801df00:	4620      	mov	r0, r4
 801df02:	f009 fd7a 	bl	80279fa <__cxa_guard_release>
 801df06:	4a06      	ldr	r2, [pc, #24]	; (801df20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801df08:	4909      	ldr	r1, [pc, #36]	; (801df30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801df0a:	480a      	ldr	r0, [pc, #40]	; (801df34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801df0c:	f009 fd62 	bl	80279d4 <__aeabi_atexit>
 801df10:	4b05      	ldr	r3, [pc, #20]	; (801df28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801df12:	60ab      	str	r3, [r5, #8]
 801df14:	4b07      	ldr	r3, [pc, #28]	; (801df34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801df16:	60eb      	str	r3, [r5, #12]
 801df18:	bd38      	pop	{r3, r4, r5, pc}
 801df1a:	bf00      	nop
 801df1c:	2001388c 	.word	0x2001388c
 801df20:	20000000 	.word	0x20000000
 801df24:	0801ac57 	.word	0x0801ac57
 801df28:	200000ac 	.word	0x200000ac
 801df2c:	20013890 	.word	0x20013890
 801df30:	0801ac55 	.word	0x0801ac55
 801df34:	200000b0 	.word	0x200000b0

0801df38 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801df38:	b510      	push	{r4, lr}
 801df3a:	4604      	mov	r4, r0
 801df3c:	f7ff ff88 	bl	801de50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801df40:	4620      	mov	r0, r4
 801df42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801df46:	f7ff bfbd 	b.w	801dec4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801df4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801df4c:	b538      	push	{r3, r4, r5, lr}
 801df4e:	4c15      	ldr	r4, [pc, #84]	; (801dfa4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801df50:	7823      	ldrb	r3, [r4, #0]
 801df52:	f3bf 8f5b 	dmb	ish
 801df56:	07da      	lsls	r2, r3, #31
 801df58:	4605      	mov	r5, r0
 801df5a:	d40b      	bmi.n	801df74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801df5c:	4620      	mov	r0, r4
 801df5e:	f009 fd40 	bl	80279e2 <__cxa_guard_acquire>
 801df62:	b138      	cbz	r0, 801df74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801df64:	4620      	mov	r0, r4
 801df66:	f009 fd48 	bl	80279fa <__cxa_guard_release>
 801df6a:	4a0f      	ldr	r2, [pc, #60]	; (801dfa8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801df6c:	490f      	ldr	r1, [pc, #60]	; (801dfac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801df6e:	4810      	ldr	r0, [pc, #64]	; (801dfb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801df70:	f009 fd30 	bl	80279d4 <__aeabi_atexit>
 801df74:	4c0f      	ldr	r4, [pc, #60]	; (801dfb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801df76:	7823      	ldrb	r3, [r4, #0]
 801df78:	f3bf 8f5b 	dmb	ish
 801df7c:	07db      	lsls	r3, r3, #31
 801df7e:	d40b      	bmi.n	801df98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801df80:	4620      	mov	r0, r4
 801df82:	f009 fd2e 	bl	80279e2 <__cxa_guard_acquire>
 801df86:	b138      	cbz	r0, 801df98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801df88:	4620      	mov	r0, r4
 801df8a:	f009 fd36 	bl	80279fa <__cxa_guard_release>
 801df8e:	4a06      	ldr	r2, [pc, #24]	; (801dfa8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801df90:	4909      	ldr	r1, [pc, #36]	; (801dfb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801df92:	480a      	ldr	r0, [pc, #40]	; (801dfbc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801df94:	f009 fd1e 	bl	80279d4 <__aeabi_atexit>
 801df98:	4b05      	ldr	r3, [pc, #20]	; (801dfb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801df9a:	622b      	str	r3, [r5, #32]
 801df9c:	4b07      	ldr	r3, [pc, #28]	; (801dfbc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801df9e:	626b      	str	r3, [r5, #36]	; 0x24
 801dfa0:	bd38      	pop	{r3, r4, r5, pc}
 801dfa2:	bf00      	nop
 801dfa4:	200138bc 	.word	0x200138bc
 801dfa8:	20000000 	.word	0x20000000
 801dfac:	0801ac4b 	.word	0x0801ac4b
 801dfb0:	200000dc 	.word	0x200000dc
 801dfb4:	200138c0 	.word	0x200138c0
 801dfb8:	0801ac49 	.word	0x0801ac49
 801dfbc:	200000e0 	.word	0x200000e0

0801dfc0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801dfc0:	b538      	push	{r3, r4, r5, lr}
 801dfc2:	4c15      	ldr	r4, [pc, #84]	; (801e018 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801dfc4:	7823      	ldrb	r3, [r4, #0]
 801dfc6:	f3bf 8f5b 	dmb	ish
 801dfca:	07da      	lsls	r2, r3, #31
 801dfcc:	4605      	mov	r5, r0
 801dfce:	d40b      	bmi.n	801dfe8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801dfd0:	4620      	mov	r0, r4
 801dfd2:	f009 fd06 	bl	80279e2 <__cxa_guard_acquire>
 801dfd6:	b138      	cbz	r0, 801dfe8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801dfd8:	4620      	mov	r0, r4
 801dfda:	f009 fd0e 	bl	80279fa <__cxa_guard_release>
 801dfde:	4a0f      	ldr	r2, [pc, #60]	; (801e01c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801dfe0:	490f      	ldr	r1, [pc, #60]	; (801e020 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801dfe2:	4810      	ldr	r0, [pc, #64]	; (801e024 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801dfe4:	f009 fcf6 	bl	80279d4 <__aeabi_atexit>
 801dfe8:	4c0f      	ldr	r4, [pc, #60]	; (801e028 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801dfea:	7823      	ldrb	r3, [r4, #0]
 801dfec:	f3bf 8f5b 	dmb	ish
 801dff0:	07db      	lsls	r3, r3, #31
 801dff2:	d40b      	bmi.n	801e00c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801dff4:	4620      	mov	r0, r4
 801dff6:	f009 fcf4 	bl	80279e2 <__cxa_guard_acquire>
 801dffa:	b138      	cbz	r0, 801e00c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801dffc:	4620      	mov	r0, r4
 801dffe:	f009 fcfc 	bl	80279fa <__cxa_guard_release>
 801e002:	4a06      	ldr	r2, [pc, #24]	; (801e01c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e004:	4909      	ldr	r1, [pc, #36]	; (801e02c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801e006:	480a      	ldr	r0, [pc, #40]	; (801e030 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e008:	f009 fce4 	bl	80279d4 <__aeabi_atexit>
 801e00c:	4b05      	ldr	r3, [pc, #20]	; (801e024 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e00e:	61ab      	str	r3, [r5, #24]
 801e010:	4b07      	ldr	r3, [pc, #28]	; (801e030 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e012:	61eb      	str	r3, [r5, #28]
 801e014:	bd38      	pop	{r3, r4, r5, pc}
 801e016:	bf00      	nop
 801e018:	20013894 	.word	0x20013894
 801e01c:	20000000 	.word	0x20000000
 801e020:	0801ac4f 	.word	0x0801ac4f
 801e024:	200000b4 	.word	0x200000b4
 801e028:	20013898 	.word	0x20013898
 801e02c:	0801ac4d 	.word	0x0801ac4d
 801e030:	200000b8 	.word	0x200000b8

0801e034 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801e034:	b510      	push	{r4, lr}
 801e036:	4604      	mov	r4, r0
 801e038:	f7ff ff88 	bl	801df4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801e03c:	4620      	mov	r0, r4
 801e03e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e042:	f7ff bfbd 	b.w	801dfc0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801e048 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801e048:	b538      	push	{r3, r4, r5, lr}
 801e04a:	4c15      	ldr	r4, [pc, #84]	; (801e0a0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801e04c:	7823      	ldrb	r3, [r4, #0]
 801e04e:	f3bf 8f5b 	dmb	ish
 801e052:	07da      	lsls	r2, r3, #31
 801e054:	4605      	mov	r5, r0
 801e056:	d40b      	bmi.n	801e070 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e058:	4620      	mov	r0, r4
 801e05a:	f009 fcc2 	bl	80279e2 <__cxa_guard_acquire>
 801e05e:	b138      	cbz	r0, 801e070 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e060:	4620      	mov	r0, r4
 801e062:	f009 fcca 	bl	80279fa <__cxa_guard_release>
 801e066:	4a0f      	ldr	r2, [pc, #60]	; (801e0a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e068:	490f      	ldr	r1, [pc, #60]	; (801e0a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801e06a:	4810      	ldr	r0, [pc, #64]	; (801e0ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e06c:	f009 fcb2 	bl	80279d4 <__aeabi_atexit>
 801e070:	4c0f      	ldr	r4, [pc, #60]	; (801e0b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801e072:	7823      	ldrb	r3, [r4, #0]
 801e074:	f3bf 8f5b 	dmb	ish
 801e078:	07db      	lsls	r3, r3, #31
 801e07a:	d40b      	bmi.n	801e094 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e07c:	4620      	mov	r0, r4
 801e07e:	f009 fcb0 	bl	80279e2 <__cxa_guard_acquire>
 801e082:	b138      	cbz	r0, 801e094 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e084:	4620      	mov	r0, r4
 801e086:	f009 fcb8 	bl	80279fa <__cxa_guard_release>
 801e08a:	4a06      	ldr	r2, [pc, #24]	; (801e0a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e08c:	4909      	ldr	r1, [pc, #36]	; (801e0b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801e08e:	480a      	ldr	r0, [pc, #40]	; (801e0b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e090:	f009 fca0 	bl	80279d4 <__aeabi_atexit>
 801e094:	4b05      	ldr	r3, [pc, #20]	; (801e0ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e096:	632b      	str	r3, [r5, #48]	; 0x30
 801e098:	4b07      	ldr	r3, [pc, #28]	; (801e0b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e09a:	636b      	str	r3, [r5, #52]	; 0x34
 801e09c:	bd38      	pop	{r3, r4, r5, pc}
 801e09e:	bf00      	nop
 801e0a0:	200138cc 	.word	0x200138cc
 801e0a4:	20000000 	.word	0x20000000
 801e0a8:	0801ac43 	.word	0x0801ac43
 801e0ac:	200000ec 	.word	0x200000ec
 801e0b0:	200138d0 	.word	0x200138d0
 801e0b4:	0801ac41 	.word	0x0801ac41
 801e0b8:	200000f0 	.word	0x200000f0

0801e0bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801e0bc:	b538      	push	{r3, r4, r5, lr}
 801e0be:	4c15      	ldr	r4, [pc, #84]	; (801e114 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801e0c0:	7823      	ldrb	r3, [r4, #0]
 801e0c2:	f3bf 8f5b 	dmb	ish
 801e0c6:	07da      	lsls	r2, r3, #31
 801e0c8:	4605      	mov	r5, r0
 801e0ca:	d40b      	bmi.n	801e0e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e0cc:	4620      	mov	r0, r4
 801e0ce:	f009 fc88 	bl	80279e2 <__cxa_guard_acquire>
 801e0d2:	b138      	cbz	r0, 801e0e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e0d4:	4620      	mov	r0, r4
 801e0d6:	f009 fc90 	bl	80279fa <__cxa_guard_release>
 801e0da:	4a0f      	ldr	r2, [pc, #60]	; (801e118 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e0dc:	490f      	ldr	r1, [pc, #60]	; (801e11c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801e0de:	4810      	ldr	r0, [pc, #64]	; (801e120 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e0e0:	f009 fc78 	bl	80279d4 <__aeabi_atexit>
 801e0e4:	4c0f      	ldr	r4, [pc, #60]	; (801e124 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801e0e6:	7823      	ldrb	r3, [r4, #0]
 801e0e8:	f3bf 8f5b 	dmb	ish
 801e0ec:	07db      	lsls	r3, r3, #31
 801e0ee:	d40b      	bmi.n	801e108 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e0f0:	4620      	mov	r0, r4
 801e0f2:	f009 fc76 	bl	80279e2 <__cxa_guard_acquire>
 801e0f6:	b138      	cbz	r0, 801e108 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e0f8:	4620      	mov	r0, r4
 801e0fa:	f009 fc7e 	bl	80279fa <__cxa_guard_release>
 801e0fe:	4a06      	ldr	r2, [pc, #24]	; (801e118 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e100:	4909      	ldr	r1, [pc, #36]	; (801e128 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801e102:	480a      	ldr	r0, [pc, #40]	; (801e12c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e104:	f009 fc66 	bl	80279d4 <__aeabi_atexit>
 801e108:	4b05      	ldr	r3, [pc, #20]	; (801e120 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e10a:	62ab      	str	r3, [r5, #40]	; 0x28
 801e10c:	4b07      	ldr	r3, [pc, #28]	; (801e12c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e10e:	62eb      	str	r3, [r5, #44]	; 0x2c
 801e110:	bd38      	pop	{r3, r4, r5, pc}
 801e112:	bf00      	nop
 801e114:	2001389c 	.word	0x2001389c
 801e118:	20000000 	.word	0x20000000
 801e11c:	0801ac47 	.word	0x0801ac47
 801e120:	200000bc 	.word	0x200000bc
 801e124:	200138a0 	.word	0x200138a0
 801e128:	0801ac45 	.word	0x0801ac45
 801e12c:	200000c0 	.word	0x200000c0

0801e130 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801e130:	b510      	push	{r4, lr}
 801e132:	4604      	mov	r4, r0
 801e134:	f7ff ff88 	bl	801e048 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801e138:	4620      	mov	r0, r4
 801e13a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e13e:	f7ff bfbd 	b.w	801e0bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801e144 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801e144:	b538      	push	{r3, r4, r5, lr}
 801e146:	4c15      	ldr	r4, [pc, #84]	; (801e19c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801e148:	7823      	ldrb	r3, [r4, #0]
 801e14a:	f3bf 8f5b 	dmb	ish
 801e14e:	07da      	lsls	r2, r3, #31
 801e150:	4605      	mov	r5, r0
 801e152:	d40b      	bmi.n	801e16c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e154:	4620      	mov	r0, r4
 801e156:	f009 fc44 	bl	80279e2 <__cxa_guard_acquire>
 801e15a:	b138      	cbz	r0, 801e16c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e15c:	4620      	mov	r0, r4
 801e15e:	f009 fc4c 	bl	80279fa <__cxa_guard_release>
 801e162:	4a0f      	ldr	r2, [pc, #60]	; (801e1a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e164:	490f      	ldr	r1, [pc, #60]	; (801e1a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801e166:	4810      	ldr	r0, [pc, #64]	; (801e1a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e168:	f009 fc34 	bl	80279d4 <__aeabi_atexit>
 801e16c:	4c0f      	ldr	r4, [pc, #60]	; (801e1ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801e16e:	7823      	ldrb	r3, [r4, #0]
 801e170:	f3bf 8f5b 	dmb	ish
 801e174:	07db      	lsls	r3, r3, #31
 801e176:	d40b      	bmi.n	801e190 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e178:	4620      	mov	r0, r4
 801e17a:	f009 fc32 	bl	80279e2 <__cxa_guard_acquire>
 801e17e:	b138      	cbz	r0, 801e190 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e180:	4620      	mov	r0, r4
 801e182:	f009 fc3a 	bl	80279fa <__cxa_guard_release>
 801e186:	4a06      	ldr	r2, [pc, #24]	; (801e1a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e188:	4909      	ldr	r1, [pc, #36]	; (801e1b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801e18a:	480a      	ldr	r0, [pc, #40]	; (801e1b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e18c:	f009 fc22 	bl	80279d4 <__aeabi_atexit>
 801e190:	4b05      	ldr	r3, [pc, #20]	; (801e1a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e192:	652b      	str	r3, [r5, #80]	; 0x50
 801e194:	4b07      	ldr	r3, [pc, #28]	; (801e1b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e196:	656b      	str	r3, [r5, #84]	; 0x54
 801e198:	bd38      	pop	{r3, r4, r5, pc}
 801e19a:	bf00      	nop
 801e19c:	200138d4 	.word	0x200138d4
 801e1a0:	20000000 	.word	0x20000000
 801e1a4:	0801ac33 	.word	0x0801ac33
 801e1a8:	200000f4 	.word	0x200000f4
 801e1ac:	200138d8 	.word	0x200138d8
 801e1b0:	0801ac31 	.word	0x0801ac31
 801e1b4:	200000f8 	.word	0x200000f8

0801e1b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801e1b8:	b538      	push	{r3, r4, r5, lr}
 801e1ba:	4c15      	ldr	r4, [pc, #84]	; (801e210 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801e1bc:	7823      	ldrb	r3, [r4, #0]
 801e1be:	f3bf 8f5b 	dmb	ish
 801e1c2:	07da      	lsls	r2, r3, #31
 801e1c4:	4605      	mov	r5, r0
 801e1c6:	d40b      	bmi.n	801e1e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e1c8:	4620      	mov	r0, r4
 801e1ca:	f009 fc0a 	bl	80279e2 <__cxa_guard_acquire>
 801e1ce:	b138      	cbz	r0, 801e1e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e1d0:	4620      	mov	r0, r4
 801e1d2:	f009 fc12 	bl	80279fa <__cxa_guard_release>
 801e1d6:	4a0f      	ldr	r2, [pc, #60]	; (801e214 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e1d8:	490f      	ldr	r1, [pc, #60]	; (801e218 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801e1da:	4810      	ldr	r0, [pc, #64]	; (801e21c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e1dc:	f009 fbfa 	bl	80279d4 <__aeabi_atexit>
 801e1e0:	4c0f      	ldr	r4, [pc, #60]	; (801e220 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801e1e2:	7823      	ldrb	r3, [r4, #0]
 801e1e4:	f3bf 8f5b 	dmb	ish
 801e1e8:	07db      	lsls	r3, r3, #31
 801e1ea:	d40b      	bmi.n	801e204 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e1ec:	4620      	mov	r0, r4
 801e1ee:	f009 fbf8 	bl	80279e2 <__cxa_guard_acquire>
 801e1f2:	b138      	cbz	r0, 801e204 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e1f4:	4620      	mov	r0, r4
 801e1f6:	f009 fc00 	bl	80279fa <__cxa_guard_release>
 801e1fa:	4a06      	ldr	r2, [pc, #24]	; (801e214 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e1fc:	4909      	ldr	r1, [pc, #36]	; (801e224 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801e1fe:	480a      	ldr	r0, [pc, #40]	; (801e228 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e200:	f009 fbe8 	bl	80279d4 <__aeabi_atexit>
 801e204:	4b05      	ldr	r3, [pc, #20]	; (801e21c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e206:	64ab      	str	r3, [r5, #72]	; 0x48
 801e208:	4b07      	ldr	r3, [pc, #28]	; (801e228 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e20a:	64eb      	str	r3, [r5, #76]	; 0x4c
 801e20c:	bd38      	pop	{r3, r4, r5, pc}
 801e20e:	bf00      	nop
 801e210:	200138dc 	.word	0x200138dc
 801e214:	20000000 	.word	0x20000000
 801e218:	0801ac37 	.word	0x0801ac37
 801e21c:	200000fc 	.word	0x200000fc
 801e220:	200138e0 	.word	0x200138e0
 801e224:	0801ac35 	.word	0x0801ac35
 801e228:	20000100 	.word	0x20000100

0801e22c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801e22c:	b538      	push	{r3, r4, r5, lr}
 801e22e:	4c15      	ldr	r4, [pc, #84]	; (801e284 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801e230:	7823      	ldrb	r3, [r4, #0]
 801e232:	f3bf 8f5b 	dmb	ish
 801e236:	07da      	lsls	r2, r3, #31
 801e238:	4605      	mov	r5, r0
 801e23a:	d40b      	bmi.n	801e254 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e23c:	4620      	mov	r0, r4
 801e23e:	f009 fbd0 	bl	80279e2 <__cxa_guard_acquire>
 801e242:	b138      	cbz	r0, 801e254 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e244:	4620      	mov	r0, r4
 801e246:	f009 fbd8 	bl	80279fa <__cxa_guard_release>
 801e24a:	4a0f      	ldr	r2, [pc, #60]	; (801e288 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e24c:	490f      	ldr	r1, [pc, #60]	; (801e28c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801e24e:	4810      	ldr	r0, [pc, #64]	; (801e290 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e250:	f009 fbc0 	bl	80279d4 <__aeabi_atexit>
 801e254:	4c0f      	ldr	r4, [pc, #60]	; (801e294 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801e256:	7823      	ldrb	r3, [r4, #0]
 801e258:	f3bf 8f5b 	dmb	ish
 801e25c:	07db      	lsls	r3, r3, #31
 801e25e:	d40b      	bmi.n	801e278 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e260:	4620      	mov	r0, r4
 801e262:	f009 fbbe 	bl	80279e2 <__cxa_guard_acquire>
 801e266:	b138      	cbz	r0, 801e278 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e268:	4620      	mov	r0, r4
 801e26a:	f009 fbc6 	bl	80279fa <__cxa_guard_release>
 801e26e:	4a06      	ldr	r2, [pc, #24]	; (801e288 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e270:	4909      	ldr	r1, [pc, #36]	; (801e298 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801e272:	480a      	ldr	r0, [pc, #40]	; (801e29c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e274:	f009 fbae 	bl	80279d4 <__aeabi_atexit>
 801e278:	4b05      	ldr	r3, [pc, #20]	; (801e290 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e27a:	642b      	str	r3, [r5, #64]	; 0x40
 801e27c:	4b07      	ldr	r3, [pc, #28]	; (801e29c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e27e:	646b      	str	r3, [r5, #68]	; 0x44
 801e280:	bd38      	pop	{r3, r4, r5, pc}
 801e282:	bf00      	nop
 801e284:	200138a4 	.word	0x200138a4
 801e288:	20000000 	.word	0x20000000
 801e28c:	0801ac3b 	.word	0x0801ac3b
 801e290:	200000c4 	.word	0x200000c4
 801e294:	200138a8 	.word	0x200138a8
 801e298:	0801ac39 	.word	0x0801ac39
 801e29c:	200000c8 	.word	0x200000c8

0801e2a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801e2a0:	b538      	push	{r3, r4, r5, lr}
 801e2a2:	4c15      	ldr	r4, [pc, #84]	; (801e2f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801e2a4:	7823      	ldrb	r3, [r4, #0]
 801e2a6:	f3bf 8f5b 	dmb	ish
 801e2aa:	07da      	lsls	r2, r3, #31
 801e2ac:	4605      	mov	r5, r0
 801e2ae:	d40b      	bmi.n	801e2c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e2b0:	4620      	mov	r0, r4
 801e2b2:	f009 fb96 	bl	80279e2 <__cxa_guard_acquire>
 801e2b6:	b138      	cbz	r0, 801e2c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e2b8:	4620      	mov	r0, r4
 801e2ba:	f009 fb9e 	bl	80279fa <__cxa_guard_release>
 801e2be:	4a0f      	ldr	r2, [pc, #60]	; (801e2fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e2c0:	490f      	ldr	r1, [pc, #60]	; (801e300 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801e2c2:	4810      	ldr	r0, [pc, #64]	; (801e304 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e2c4:	f009 fb86 	bl	80279d4 <__aeabi_atexit>
 801e2c8:	4c0f      	ldr	r4, [pc, #60]	; (801e308 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801e2ca:	7823      	ldrb	r3, [r4, #0]
 801e2cc:	f3bf 8f5b 	dmb	ish
 801e2d0:	07db      	lsls	r3, r3, #31
 801e2d2:	d40b      	bmi.n	801e2ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e2d4:	4620      	mov	r0, r4
 801e2d6:	f009 fb84 	bl	80279e2 <__cxa_guard_acquire>
 801e2da:	b138      	cbz	r0, 801e2ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e2dc:	4620      	mov	r0, r4
 801e2de:	f009 fb8c 	bl	80279fa <__cxa_guard_release>
 801e2e2:	4a06      	ldr	r2, [pc, #24]	; (801e2fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e2e4:	4909      	ldr	r1, [pc, #36]	; (801e30c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801e2e6:	480a      	ldr	r0, [pc, #40]	; (801e310 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e2e8:	f009 fb74 	bl	80279d4 <__aeabi_atexit>
 801e2ec:	4b05      	ldr	r3, [pc, #20]	; (801e304 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e2ee:	63ab      	str	r3, [r5, #56]	; 0x38
 801e2f0:	4b07      	ldr	r3, [pc, #28]	; (801e310 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e2f2:	63eb      	str	r3, [r5, #60]	; 0x3c
 801e2f4:	bd38      	pop	{r3, r4, r5, pc}
 801e2f6:	bf00      	nop
 801e2f8:	200138c4 	.word	0x200138c4
 801e2fc:	20000000 	.word	0x20000000
 801e300:	0801ac3f 	.word	0x0801ac3f
 801e304:	200000e4 	.word	0x200000e4
 801e308:	200138c8 	.word	0x200138c8
 801e30c:	0801ac3d 	.word	0x0801ac3d
 801e310:	200000e8 	.word	0x200000e8

0801e314 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801e314:	b510      	push	{r4, lr}
 801e316:	4604      	mov	r4, r0
 801e318:	f7ff ff14 	bl	801e144 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801e31c:	4620      	mov	r0, r4
 801e31e:	f7ff ff85 	bl	801e22c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801e322:	4620      	mov	r0, r4
 801e324:	f7ff ff48 	bl	801e1b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801e328:	4620      	mov	r0, r4
 801e32a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e32e:	f7ff bfb7 	b.w	801e2a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801e334 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801e334:	b538      	push	{r3, r4, r5, lr}
 801e336:	4c15      	ldr	r4, [pc, #84]	; (801e38c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801e338:	7823      	ldrb	r3, [r4, #0]
 801e33a:	f3bf 8f5b 	dmb	ish
 801e33e:	07da      	lsls	r2, r3, #31
 801e340:	4605      	mov	r5, r0
 801e342:	d40b      	bmi.n	801e35c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e344:	4620      	mov	r0, r4
 801e346:	f009 fb4c 	bl	80279e2 <__cxa_guard_acquire>
 801e34a:	b138      	cbz	r0, 801e35c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e34c:	4620      	mov	r0, r4
 801e34e:	f009 fb54 	bl	80279fa <__cxa_guard_release>
 801e352:	4a0f      	ldr	r2, [pc, #60]	; (801e390 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e354:	490f      	ldr	r1, [pc, #60]	; (801e394 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801e356:	4810      	ldr	r0, [pc, #64]	; (801e398 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e358:	f009 fb3c 	bl	80279d4 <__aeabi_atexit>
 801e35c:	4c0f      	ldr	r4, [pc, #60]	; (801e39c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801e35e:	7823      	ldrb	r3, [r4, #0]
 801e360:	f3bf 8f5b 	dmb	ish
 801e364:	07db      	lsls	r3, r3, #31
 801e366:	d40b      	bmi.n	801e380 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e368:	4620      	mov	r0, r4
 801e36a:	f009 fb3a 	bl	80279e2 <__cxa_guard_acquire>
 801e36e:	b138      	cbz	r0, 801e380 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e370:	4620      	mov	r0, r4
 801e372:	f009 fb42 	bl	80279fa <__cxa_guard_release>
 801e376:	4a06      	ldr	r2, [pc, #24]	; (801e390 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e378:	4909      	ldr	r1, [pc, #36]	; (801e3a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801e37a:	480a      	ldr	r0, [pc, #40]	; (801e3a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e37c:	f009 fb2a 	bl	80279d4 <__aeabi_atexit>
 801e380:	4b05      	ldr	r3, [pc, #20]	; (801e398 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e382:	662b      	str	r3, [r5, #96]	; 0x60
 801e384:	4b07      	ldr	r3, [pc, #28]	; (801e3a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e386:	666b      	str	r3, [r5, #100]	; 0x64
 801e388:	bd38      	pop	{r3, r4, r5, pc}
 801e38a:	bf00      	nop
 801e38c:	200138ac 	.word	0x200138ac
 801e390:	20000000 	.word	0x20000000
 801e394:	0801ac2b 	.word	0x0801ac2b
 801e398:	200000cc 	.word	0x200000cc
 801e39c:	200138b0 	.word	0x200138b0
 801e3a0:	0801ac29 	.word	0x0801ac29
 801e3a4:	200000d0 	.word	0x200000d0

0801e3a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801e3a8:	b538      	push	{r3, r4, r5, lr}
 801e3aa:	4c15      	ldr	r4, [pc, #84]	; (801e400 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801e3ac:	7823      	ldrb	r3, [r4, #0]
 801e3ae:	f3bf 8f5b 	dmb	ish
 801e3b2:	07da      	lsls	r2, r3, #31
 801e3b4:	4605      	mov	r5, r0
 801e3b6:	d40b      	bmi.n	801e3d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e3b8:	4620      	mov	r0, r4
 801e3ba:	f009 fb12 	bl	80279e2 <__cxa_guard_acquire>
 801e3be:	b138      	cbz	r0, 801e3d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e3c0:	4620      	mov	r0, r4
 801e3c2:	f009 fb1a 	bl	80279fa <__cxa_guard_release>
 801e3c6:	4a0f      	ldr	r2, [pc, #60]	; (801e404 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e3c8:	490f      	ldr	r1, [pc, #60]	; (801e408 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801e3ca:	4810      	ldr	r0, [pc, #64]	; (801e40c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e3cc:	f009 fb02 	bl	80279d4 <__aeabi_atexit>
 801e3d0:	4c0f      	ldr	r4, [pc, #60]	; (801e410 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801e3d2:	7823      	ldrb	r3, [r4, #0]
 801e3d4:	f3bf 8f5b 	dmb	ish
 801e3d8:	07db      	lsls	r3, r3, #31
 801e3da:	d40b      	bmi.n	801e3f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e3dc:	4620      	mov	r0, r4
 801e3de:	f009 fb00 	bl	80279e2 <__cxa_guard_acquire>
 801e3e2:	b138      	cbz	r0, 801e3f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e3e4:	4620      	mov	r0, r4
 801e3e6:	f009 fb08 	bl	80279fa <__cxa_guard_release>
 801e3ea:	4a06      	ldr	r2, [pc, #24]	; (801e404 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e3ec:	4909      	ldr	r1, [pc, #36]	; (801e414 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801e3ee:	480a      	ldr	r0, [pc, #40]	; (801e418 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e3f0:	f009 faf0 	bl	80279d4 <__aeabi_atexit>
 801e3f4:	4b05      	ldr	r3, [pc, #20]	; (801e40c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e3f6:	65ab      	str	r3, [r5, #88]	; 0x58
 801e3f8:	4b07      	ldr	r3, [pc, #28]	; (801e418 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e3fa:	65eb      	str	r3, [r5, #92]	; 0x5c
 801e3fc:	bd38      	pop	{r3, r4, r5, pc}
 801e3fe:	bf00      	nop
 801e400:	20013884 	.word	0x20013884
 801e404:	20000000 	.word	0x20000000
 801e408:	0801ac2f 	.word	0x0801ac2f
 801e40c:	200000a4 	.word	0x200000a4
 801e410:	20013888 	.word	0x20013888
 801e414:	0801ac2d 	.word	0x0801ac2d
 801e418:	200000a8 	.word	0x200000a8

0801e41c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801e41c:	b510      	push	{r4, lr}
 801e41e:	4604      	mov	r4, r0
 801e420:	f7ff ff88 	bl	801e334 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801e424:	4620      	mov	r0, r4
 801e426:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e42a:	f7ff bfbd 	b.w	801e3a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801e430 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801e430:	b538      	push	{r3, r4, r5, lr}
 801e432:	4c15      	ldr	r4, [pc, #84]	; (801e488 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801e434:	7823      	ldrb	r3, [r4, #0]
 801e436:	f3bf 8f5b 	dmb	ish
 801e43a:	07da      	lsls	r2, r3, #31
 801e43c:	4605      	mov	r5, r0
 801e43e:	d40b      	bmi.n	801e458 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e440:	4620      	mov	r0, r4
 801e442:	f009 face 	bl	80279e2 <__cxa_guard_acquire>
 801e446:	b138      	cbz	r0, 801e458 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e448:	4620      	mov	r0, r4
 801e44a:	f009 fad6 	bl	80279fa <__cxa_guard_release>
 801e44e:	4a0f      	ldr	r2, [pc, #60]	; (801e48c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e450:	490f      	ldr	r1, [pc, #60]	; (801e490 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801e452:	4810      	ldr	r0, [pc, #64]	; (801e494 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e454:	f009 fabe 	bl	80279d4 <__aeabi_atexit>
 801e458:	4c0f      	ldr	r4, [pc, #60]	; (801e498 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801e45a:	7823      	ldrb	r3, [r4, #0]
 801e45c:	f3bf 8f5b 	dmb	ish
 801e460:	07db      	lsls	r3, r3, #31
 801e462:	d40b      	bmi.n	801e47c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e464:	4620      	mov	r0, r4
 801e466:	f009 fabc 	bl	80279e2 <__cxa_guard_acquire>
 801e46a:	b138      	cbz	r0, 801e47c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e46c:	4620      	mov	r0, r4
 801e46e:	f009 fac4 	bl	80279fa <__cxa_guard_release>
 801e472:	4a06      	ldr	r2, [pc, #24]	; (801e48c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e474:	4909      	ldr	r1, [pc, #36]	; (801e49c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801e476:	480a      	ldr	r0, [pc, #40]	; (801e4a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e478:	f009 faac 	bl	80279d4 <__aeabi_atexit>
 801e47c:	4b05      	ldr	r3, [pc, #20]	; (801e494 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e47e:	672b      	str	r3, [r5, #112]	; 0x70
 801e480:	4b07      	ldr	r3, [pc, #28]	; (801e4a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e482:	676b      	str	r3, [r5, #116]	; 0x74
 801e484:	bd38      	pop	{r3, r4, r5, pc}
 801e486:	bf00      	nop
 801e488:	2001387c 	.word	0x2001387c
 801e48c:	20000000 	.word	0x20000000
 801e490:	0801ac23 	.word	0x0801ac23
 801e494:	2000009c 	.word	0x2000009c
 801e498:	20013880 	.word	0x20013880
 801e49c:	0801ac21 	.word	0x0801ac21
 801e4a0:	200000a0 	.word	0x200000a0

0801e4a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801e4a4:	b538      	push	{r3, r4, r5, lr}
 801e4a6:	4c15      	ldr	r4, [pc, #84]	; (801e4fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801e4a8:	7823      	ldrb	r3, [r4, #0]
 801e4aa:	f3bf 8f5b 	dmb	ish
 801e4ae:	07da      	lsls	r2, r3, #31
 801e4b0:	4605      	mov	r5, r0
 801e4b2:	d40b      	bmi.n	801e4cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e4b4:	4620      	mov	r0, r4
 801e4b6:	f009 fa94 	bl	80279e2 <__cxa_guard_acquire>
 801e4ba:	b138      	cbz	r0, 801e4cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e4bc:	4620      	mov	r0, r4
 801e4be:	f009 fa9c 	bl	80279fa <__cxa_guard_release>
 801e4c2:	4a0f      	ldr	r2, [pc, #60]	; (801e500 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e4c4:	490f      	ldr	r1, [pc, #60]	; (801e504 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801e4c6:	4810      	ldr	r0, [pc, #64]	; (801e508 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e4c8:	f009 fa84 	bl	80279d4 <__aeabi_atexit>
 801e4cc:	4c0f      	ldr	r4, [pc, #60]	; (801e50c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801e4ce:	7823      	ldrb	r3, [r4, #0]
 801e4d0:	f3bf 8f5b 	dmb	ish
 801e4d4:	07db      	lsls	r3, r3, #31
 801e4d6:	d40b      	bmi.n	801e4f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e4d8:	4620      	mov	r0, r4
 801e4da:	f009 fa82 	bl	80279e2 <__cxa_guard_acquire>
 801e4de:	b138      	cbz	r0, 801e4f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e4e0:	4620      	mov	r0, r4
 801e4e2:	f009 fa8a 	bl	80279fa <__cxa_guard_release>
 801e4e6:	4a06      	ldr	r2, [pc, #24]	; (801e500 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e4e8:	4909      	ldr	r1, [pc, #36]	; (801e510 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801e4ea:	480a      	ldr	r0, [pc, #40]	; (801e514 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e4ec:	f009 fa72 	bl	80279d4 <__aeabi_atexit>
 801e4f0:	4b05      	ldr	r3, [pc, #20]	; (801e508 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e4f2:	66ab      	str	r3, [r5, #104]	; 0x68
 801e4f4:	4b07      	ldr	r3, [pc, #28]	; (801e514 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e4f6:	66eb      	str	r3, [r5, #108]	; 0x6c
 801e4f8:	bd38      	pop	{r3, r4, r5, pc}
 801e4fa:	bf00      	nop
 801e4fc:	20013874 	.word	0x20013874
 801e500:	20000000 	.word	0x20000000
 801e504:	0801ac27 	.word	0x0801ac27
 801e508:	20000094 	.word	0x20000094
 801e50c:	20013878 	.word	0x20013878
 801e510:	0801ac25 	.word	0x0801ac25
 801e514:	20000098 	.word	0x20000098

0801e518 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801e518:	b510      	push	{r4, lr}
 801e51a:	4604      	mov	r4, r0
 801e51c:	f7ff ff88 	bl	801e430 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801e520:	4620      	mov	r0, r4
 801e522:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e526:	f7ff bfbd 	b.w	801e4a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801e52a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801e52a:	b510      	push	{r4, lr}
 801e52c:	4604      	mov	r4, r0
 801e52e:	f7ff fff3 	bl	801e518 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801e532:	4620      	mov	r0, r4
 801e534:	f7ff ff72 	bl	801e41c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801e538:	4620      	mov	r0, r4
 801e53a:	f7ff fdf9 	bl	801e130 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801e53e:	4620      	mov	r0, r4
 801e540:	f7ff fcfa 	bl	801df38 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801e544:	4620      	mov	r0, r4
 801e546:	f7ff fd75 	bl	801e034 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801e54a:	4620      	mov	r0, r4
 801e54c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e550:	f7ff bee0 	b.w	801e314 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801e554 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801e554:	b538      	push	{r3, r4, r5, lr}
 801e556:	4c0b      	ldr	r4, [pc, #44]	; (801e584 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801e558:	7823      	ldrb	r3, [r4, #0]
 801e55a:	f3bf 8f5b 	dmb	ish
 801e55e:	07db      	lsls	r3, r3, #31
 801e560:	4605      	mov	r5, r0
 801e562:	d40b      	bmi.n	801e57c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e564:	4620      	mov	r0, r4
 801e566:	f009 fa3c 	bl	80279e2 <__cxa_guard_acquire>
 801e56a:	b138      	cbz	r0, 801e57c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e56c:	4620      	mov	r0, r4
 801e56e:	f009 fa44 	bl	80279fa <__cxa_guard_release>
 801e572:	4a05      	ldr	r2, [pc, #20]	; (801e588 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801e574:	4905      	ldr	r1, [pc, #20]	; (801e58c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801e576:	4806      	ldr	r0, [pc, #24]	; (801e590 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e578:	f009 fa2c 	bl	80279d4 <__aeabi_atexit>
 801e57c:	4b04      	ldr	r3, [pc, #16]	; (801e590 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e57e:	67ab      	str	r3, [r5, #120]	; 0x78
 801e580:	bd38      	pop	{r3, r4, r5, pc}
 801e582:	bf00      	nop
 801e584:	20013868 	.word	0x20013868
 801e588:	20000000 	.word	0x20000000
 801e58c:	0801ac1f 	.word	0x0801ac1f
 801e590:	2000008c 	.word	0x2000008c

0801e594 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801e594:	b538      	push	{r3, r4, r5, lr}
 801e596:	4c0b      	ldr	r4, [pc, #44]	; (801e5c4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801e598:	7823      	ldrb	r3, [r4, #0]
 801e59a:	f3bf 8f5b 	dmb	ish
 801e59e:	07db      	lsls	r3, r3, #31
 801e5a0:	4605      	mov	r5, r0
 801e5a2:	d40b      	bmi.n	801e5bc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e5a4:	4620      	mov	r0, r4
 801e5a6:	f009 fa1c 	bl	80279e2 <__cxa_guard_acquire>
 801e5aa:	b138      	cbz	r0, 801e5bc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e5ac:	4620      	mov	r0, r4
 801e5ae:	f009 fa24 	bl	80279fa <__cxa_guard_release>
 801e5b2:	4a05      	ldr	r2, [pc, #20]	; (801e5c8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801e5b4:	4905      	ldr	r1, [pc, #20]	; (801e5cc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801e5b6:	4806      	ldr	r0, [pc, #24]	; (801e5d0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e5b8:	f009 fa0c 	bl	80279d4 <__aeabi_atexit>
 801e5bc:	4b04      	ldr	r3, [pc, #16]	; (801e5d0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e5be:	67eb      	str	r3, [r5, #124]	; 0x7c
 801e5c0:	bd38      	pop	{r3, r4, r5, pc}
 801e5c2:	bf00      	nop
 801e5c4:	2001386c 	.word	0x2001386c
 801e5c8:	20000000 	.word	0x20000000
 801e5cc:	0801ac1d 	.word	0x0801ac1d
 801e5d0:	20000090 	.word	0x20000090

0801e5d4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801e5d4:	b570      	push	{r4, r5, r6, lr}
 801e5d6:	4d0d      	ldr	r5, [pc, #52]	; (801e60c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801e5d8:	4c0d      	ldr	r4, [pc, #52]	; (801e610 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801e5da:	782b      	ldrb	r3, [r5, #0]
 801e5dc:	f3bf 8f5b 	dmb	ish
 801e5e0:	f013 0f01 	tst.w	r3, #1
 801e5e4:	4606      	mov	r6, r0
 801e5e6:	d10d      	bne.n	801e604 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e5e8:	4628      	mov	r0, r5
 801e5ea:	f009 f9fa 	bl	80279e2 <__cxa_guard_acquire>
 801e5ee:	b148      	cbz	r0, 801e604 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e5f0:	4b08      	ldr	r3, [pc, #32]	; (801e614 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801e5f2:	6023      	str	r3, [r4, #0]
 801e5f4:	4628      	mov	r0, r5
 801e5f6:	f009 fa00 	bl	80279fa <__cxa_guard_release>
 801e5fa:	4a07      	ldr	r2, [pc, #28]	; (801e618 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801e5fc:	4907      	ldr	r1, [pc, #28]	; (801e61c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801e5fe:	4620      	mov	r0, r4
 801e600:	f009 f9e8 	bl	80279d4 <__aeabi_atexit>
 801e604:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801e608:	bd70      	pop	{r4, r5, r6, pc}
 801e60a:	bf00      	nop
 801e60c:	20013870 	.word	0x20013870
 801e610:	200138e4 	.word	0x200138e4
 801e614:	0802cf90 	.word	0x0802cf90
 801e618:	20000000 	.word	0x20000000
 801e61c:	0801ac1b 	.word	0x0801ac1b

0801e620 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801e620:	b510      	push	{r4, lr}
 801e622:	4604      	mov	r4, r0
 801e624:	f7ff ff96 	bl	801e554 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801e628:	4620      	mov	r0, r4
 801e62a:	f7ff ffb3 	bl	801e594 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801e62e:	4620      	mov	r0, r4
 801e630:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e634:	f7ff bfce 	b.w	801e5d4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801e638 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801e638:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e63c:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801e640:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801e644:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801e648:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801e64c:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801e650:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801e654:	8808      	ldrh	r0, [r1, #0]
 801e656:	fb05 4c0e 	mla	ip, r5, lr, r4
 801e65a:	2d00      	cmp	r5, #0
 801e65c:	eb02 0a0c 	add.w	sl, r2, ip
 801e660:	f2c0 80b0 	blt.w	801e7c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e664:	45ab      	cmp	fp, r5
 801e666:	f340 80ad 	ble.w	801e7c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e66a:	2c00      	cmp	r4, #0
 801e66c:	f2c0 80a8 	blt.w	801e7c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e670:	45a6      	cmp	lr, r4
 801e672:	f340 80a5 	ble.w	801e7c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e676:	f812 200c 	ldrb.w	r2, [r2, ip]
 801e67a:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801e67e:	1c62      	adds	r2, r4, #1
 801e680:	f100 80a3 	bmi.w	801e7ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e684:	4596      	cmp	lr, r2
 801e686:	f340 80a0 	ble.w	801e7ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e68a:	f1b9 0f00 	cmp.w	r9, #0
 801e68e:	f000 809c 	beq.w	801e7ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e692:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e696:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801e69a:	3501      	adds	r5, #1
 801e69c:	f100 8099 	bmi.w	801e7d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e6a0:	45ab      	cmp	fp, r5
 801e6a2:	f340 8096 	ble.w	801e7d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e6a6:	2f00      	cmp	r7, #0
 801e6a8:	f000 8093 	beq.w	801e7d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e6ac:	2c00      	cmp	r4, #0
 801e6ae:	f2c0 808e 	blt.w	801e7ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e6b2:	45a6      	cmp	lr, r4
 801e6b4:	f340 808b 	ble.w	801e7ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e6b8:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801e6bc:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801e6c0:	3401      	adds	r4, #1
 801e6c2:	f100 8089 	bmi.w	801e7d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e6c6:	45a6      	cmp	lr, r4
 801e6c8:	f340 8086 	ble.w	801e7d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e6cc:	f1b9 0f00 	cmp.w	r9, #0
 801e6d0:	f000 8082 	beq.w	801e7d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e6d4:	44d6      	add	lr, sl
 801e6d6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801e6da:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801e6de:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801e6e2:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e6e6:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801e6ea:	fb19 fe07 	smulbb	lr, r9, r7
 801e6ee:	ea44 0808 	orr.w	r8, r4, r8
 801e6f2:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801e6f6:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801e6fa:	f1c7 0210 	rsb	r2, r7, #16
 801e6fe:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e702:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e706:	ea44 0c0c 	orr.w	ip, r4, ip
 801e70a:	eba2 0209 	sub.w	r2, r2, r9
 801e70e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801e712:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801e716:	fb04 f40c 	mul.w	r4, r4, ip
 801e71a:	fb02 4808 	mla	r8, r2, r8, r4
 801e71e:	041a      	lsls	r2, r3, #16
 801e720:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e724:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e728:	4313      	orrs	r3, r2
 801e72a:	042a      	lsls	r2, r5, #16
 801e72c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e730:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801e734:	fb0e 8303 	mla	r3, lr, r3, r8
 801e738:	432a      	orrs	r2, r5
 801e73a:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801e73e:	fb07 3202 	mla	r2, r7, r2, r3
 801e742:	0d53      	lsrs	r3, r2, #21
 801e744:	0952      	lsrs	r2, r2, #5
 801e746:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e74a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e74e:	431a      	orrs	r2, r3
 801e750:	b293      	uxth	r3, r2
 801e752:	b2b4      	uxth	r4, r6
 801e754:	1202      	asrs	r2, r0, #8
 801e756:	43f6      	mvns	r6, r6
 801e758:	b2f6      	uxtb	r6, r6
 801e75a:	121d      	asrs	r5, r3, #8
 801e75c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e760:	fb12 f206 	smulbb	r2, r2, r6
 801e764:	10c7      	asrs	r7, r0, #3
 801e766:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e76a:	00c0      	lsls	r0, r0, #3
 801e76c:	fb05 2504 	mla	r5, r5, r4, r2
 801e770:	b2c0      	uxtb	r0, r0
 801e772:	10da      	asrs	r2, r3, #3
 801e774:	00db      	lsls	r3, r3, #3
 801e776:	b2db      	uxtb	r3, r3
 801e778:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e77c:	fb10 f006 	smulbb	r0, r0, r6
 801e780:	b2ad      	uxth	r5, r5
 801e782:	fb03 0004 	mla	r0, r3, r4, r0
 801e786:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e78a:	fb17 f706 	smulbb	r7, r7, r6
 801e78e:	b280      	uxth	r0, r0
 801e790:	1c6b      	adds	r3, r5, #1
 801e792:	fb02 7204 	mla	r2, r2, r4, r7
 801e796:	b292      	uxth	r2, r2
 801e798:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e79c:	1c43      	adds	r3, r0, #1
 801e79e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e7a2:	1c50      	adds	r0, r2, #1
 801e7a4:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801e7a8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e7ac:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e7b0:	0952      	lsrs	r2, r2, #5
 801e7b2:	432b      	orrs	r3, r5
 801e7b4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e7b8:	4313      	orrs	r3, r2
 801e7ba:	800b      	strh	r3, [r1, #0]
 801e7bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e7c0:	4680      	mov	r8, r0
 801e7c2:	e75c      	b.n	801e67e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801e7c4:	4684      	mov	ip, r0
 801e7c6:	4680      	mov	r8, r0
 801e7c8:	e767      	b.n	801e69a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e7ca:	4684      	mov	ip, r0
 801e7cc:	e765      	b.n	801e69a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e7ce:	4605      	mov	r5, r0
 801e7d0:	e776      	b.n	801e6c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801e7d2:	4603      	mov	r3, r0
 801e7d4:	4605      	mov	r5, r0
 801e7d6:	e782      	b.n	801e6de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801e7d8:	4603      	mov	r3, r0
 801e7da:	e780      	b.n	801e6de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801e7dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e7dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e7e0:	b099      	sub	sp, #100	; 0x64
 801e7e2:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801e7e6:	9215      	str	r2, [sp, #84]	; 0x54
 801e7e8:	9309      	str	r3, [sp, #36]	; 0x24
 801e7ea:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801e7ec:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801e7f0:	930d      	str	r3, [sp, #52]	; 0x34
 801e7f2:	910c      	str	r1, [sp, #48]	; 0x30
 801e7f4:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801e7f8:	9016      	str	r0, [sp, #88]	; 0x58
 801e7fa:	6850      	ldr	r0, [r2, #4]
 801e7fc:	6812      	ldr	r2, [r2, #0]
 801e7fe:	fb00 1303 	mla	r3, r0, r3, r1
 801e802:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801e806:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e808:	681b      	ldr	r3, [r3, #0]
 801e80a:	930b      	str	r3, [sp, #44]	; 0x2c
 801e80c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e80e:	685e      	ldr	r6, [r3, #4]
 801e810:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e812:	43db      	mvns	r3, r3
 801e814:	b2db      	uxtb	r3, r3
 801e816:	3604      	adds	r6, #4
 801e818:	930a      	str	r3, [sp, #40]	; 0x28
 801e81a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e81c:	2b00      	cmp	r3, #0
 801e81e:	dc03      	bgt.n	801e828 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e820:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801e822:	2b00      	cmp	r3, #0
 801e824:	f340 8225 	ble.w	801ec72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801e828:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e82a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e82e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e832:	1e48      	subs	r0, r1, #1
 801e834:	1e57      	subs	r7, r2, #1
 801e836:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e838:	2b00      	cmp	r3, #0
 801e83a:	f340 80e3 	ble.w	801ea04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801e83e:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801e842:	ea4f 4325 	mov.w	r3, r5, asr #16
 801e846:	d406      	bmi.n	801e856 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e848:	4584      	cmp	ip, r0
 801e84a:	da04      	bge.n	801e856 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e84c:	2b00      	cmp	r3, #0
 801e84e:	db02      	blt.n	801e856 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e850:	42bb      	cmp	r3, r7
 801e852:	f2c0 80d8 	blt.w	801ea06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801e856:	f11c 0c01 	adds.w	ip, ip, #1
 801e85a:	f100 80c9 	bmi.w	801e9f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e85e:	4561      	cmp	r1, ip
 801e860:	f2c0 80c6 	blt.w	801e9f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e864:	3301      	adds	r3, #1
 801e866:	f100 80c3 	bmi.w	801e9f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e86a:	429a      	cmp	r2, r3
 801e86c:	f2c0 80c0 	blt.w	801e9f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e870:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801e874:	4647      	mov	r7, r8
 801e876:	f1bb 0f00 	cmp.w	fp, #0
 801e87a:	f340 80e3 	ble.w	801ea44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801e87e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801e880:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e882:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e886:	689b      	ldr	r3, [r3, #8]
 801e888:	ea5f 422a 	movs.w	r2, sl, asr #16
 801e88c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801e890:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801e894:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801e898:	f100 8121 	bmi.w	801eade <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e89c:	f103 39ff 	add.w	r9, r3, #4294967295
 801e8a0:	454a      	cmp	r2, r9
 801e8a2:	f280 811c 	bge.w	801eade <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e8a6:	f1bc 0f00 	cmp.w	ip, #0
 801e8aa:	f2c0 8118 	blt.w	801eade <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e8ae:	f10e 39ff 	add.w	r9, lr, #4294967295
 801e8b2:	45cc      	cmp	ip, r9
 801e8b4:	f280 8113 	bge.w	801eade <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e8b8:	b21b      	sxth	r3, r3
 801e8ba:	fb0c 2203 	mla	r2, ip, r3, r2
 801e8be:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e8c0:	eb04 0902 	add.w	r9, r4, r2
 801e8c4:	5ca2      	ldrb	r2, [r4, r2]
 801e8c6:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801e8ca:	2800      	cmp	r0, #0
 801e8cc:	f000 80fe 	beq.w	801eacc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e8d0:	f899 2001 	ldrb.w	r2, [r9, #1]
 801e8d4:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801e8d8:	9211      	str	r2, [sp, #68]	; 0x44
 801e8da:	b151      	cbz	r1, 801e8f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e8dc:	eb09 0203 	add.w	r2, r9, r3
 801e8e0:	f819 3003 	ldrb.w	r3, [r9, r3]
 801e8e4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e8e8:	930f      	str	r3, [sp, #60]	; 0x3c
 801e8ea:	7853      	ldrb	r3, [r2, #1]
 801e8ec:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e8f0:	9312      	str	r3, [sp, #72]	; 0x48
 801e8f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e8f4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e8f6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801e8fa:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e8fe:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e902:	ea4c 0c03 	orr.w	ip, ip, r3
 801e906:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e908:	041b      	lsls	r3, r3, #16
 801e90a:	fb10 f201 	smulbb	r2, r0, r1
 801e90e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801e912:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e916:	10d2      	asrs	r2, r2, #3
 801e918:	4323      	orrs	r3, r4
 801e91a:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801e91e:	4353      	muls	r3, r2
 801e920:	fb09 330c 	mla	r3, r9, ip, r3
 801e924:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801e928:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e92c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801e930:	ea4c 0e0e 	orr.w	lr, ip, lr
 801e934:	f1c1 0c10 	rsb	ip, r1, #16
 801e938:	ebac 0c00 	sub.w	ip, ip, r0
 801e93c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801e940:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801e944:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e946:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801e948:	0418      	lsls	r0, r3, #16
 801e94a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801e94e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e952:	4318      	orrs	r0, r3
 801e954:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801e958:	fb02 c200 	mla	r2, r2, r0, ip
 801e95c:	0d53      	lsrs	r3, r2, #21
 801e95e:	0952      	lsrs	r2, r2, #5
 801e960:	8838      	ldrh	r0, [r7, #0]
 801e962:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e966:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e96a:	431a      	orrs	r2, r3
 801e96c:	b292      	uxth	r2, r2
 801e96e:	1201      	asrs	r1, r0, #8
 801e970:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801e974:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801e978:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e97c:	fb11 f104 	smulbb	r1, r1, r4
 801e980:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801e984:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e988:	00c0      	lsls	r0, r0, #3
 801e98a:	fb0c 1c03 	mla	ip, ip, r3, r1
 801e98e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801e992:	10d1      	asrs	r1, r2, #3
 801e994:	b2c0      	uxtb	r0, r0
 801e996:	00d2      	lsls	r2, r2, #3
 801e998:	b2d2      	uxtb	r2, r2
 801e99a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e99e:	fb1e fe04 	smulbb	lr, lr, r4
 801e9a2:	fb10 f004 	smulbb	r0, r0, r4
 801e9a6:	fa1f fc8c 	uxth.w	ip, ip
 801e9aa:	fb01 e103 	mla	r1, r1, r3, lr
 801e9ae:	fb02 0303 	mla	r3, r2, r3, r0
 801e9b2:	b29a      	uxth	r2, r3
 801e9b4:	f10c 0301 	add.w	r3, ip, #1
 801e9b8:	b289      	uxth	r1, r1
 801e9ba:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801e9be:	1c53      	adds	r3, r2, #1
 801e9c0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e9c4:	1c4a      	adds	r2, r1, #1
 801e9c6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e9ca:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e9ce:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e9d2:	0949      	lsrs	r1, r1, #5
 801e9d4:	ea43 030c 	orr.w	r3, r3, ip
 801e9d8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e9dc:	430b      	orrs	r3, r1
 801e9de:	803b      	strh	r3, [r7, #0]
 801e9e0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801e9e2:	449a      	add	sl, r3
 801e9e4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e9e6:	3702      	adds	r7, #2
 801e9e8:	441d      	add	r5, r3
 801e9ea:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e9ee:	e742      	b.n	801e876 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801e9f0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801e9f2:	449a      	add	sl, r3
 801e9f4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e9f6:	441d      	add	r5, r3
 801e9f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e9fa:	3b01      	subs	r3, #1
 801e9fc:	9309      	str	r3, [sp, #36]	; 0x24
 801e9fe:	f108 0802 	add.w	r8, r8, #2
 801ea02:	e718      	b.n	801e836 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801ea04:	d023      	beq.n	801ea4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801ea06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ea08:	9825      	ldr	r0, [sp, #148]	; 0x94
 801ea0a:	3b01      	subs	r3, #1
 801ea0c:	fb00 a003 	mla	r0, r0, r3, sl
 801ea10:	1400      	asrs	r0, r0, #16
 801ea12:	f53f af2d 	bmi.w	801e870 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ea16:	3901      	subs	r1, #1
 801ea18:	4288      	cmp	r0, r1
 801ea1a:	f6bf af29 	bge.w	801e870 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ea1e:	9926      	ldr	r1, [sp, #152]	; 0x98
 801ea20:	fb01 5303 	mla	r3, r1, r3, r5
 801ea24:	141b      	asrs	r3, r3, #16
 801ea26:	f53f af23 	bmi.w	801e870 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ea2a:	3a01      	subs	r2, #1
 801ea2c:	4293      	cmp	r3, r2
 801ea2e:	f6bf af1f 	bge.w	801e870 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ea32:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801ea36:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801ea3a:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801ea3e:	f1be 0f00 	cmp.w	lr, #0
 801ea42:	dc6c      	bgt.n	801eb1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801ea44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ea46:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ea4a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801ea4e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ea50:	2b00      	cmp	r3, #0
 801ea52:	f340 810e 	ble.w	801ec72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801ea56:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ea5a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ea5e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ea62:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ea64:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ea68:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ea6c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ea70:	eef0 6a62 	vmov.f32	s13, s5
 801ea74:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ea78:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ea7c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ea80:	ee16 aa90 	vmov	sl, s13
 801ea84:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ea88:	eef0 6a43 	vmov.f32	s13, s6
 801ea8c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ea90:	ee12 2a90 	vmov	r2, s5
 801ea94:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ea98:	fb92 f3f3 	sdiv	r3, r2, r3
 801ea9c:	ee13 2a10 	vmov	r2, s6
 801eaa0:	9325      	str	r3, [sp, #148]	; 0x94
 801eaa2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801eaa4:	fb92 f3f3 	sdiv	r3, r2, r3
 801eaa8:	9326      	str	r3, [sp, #152]	; 0x98
 801eaaa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801eaac:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801eaae:	3b01      	subs	r3, #1
 801eab0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eab4:	930c      	str	r3, [sp, #48]	; 0x30
 801eab6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801eab8:	bf08      	it	eq
 801eaba:	4613      	moveq	r3, r2
 801eabc:	ee16 5a90 	vmov	r5, s13
 801eac0:	9309      	str	r3, [sp, #36]	; 0x24
 801eac2:	eeb0 3a67 	vmov.f32	s6, s15
 801eac6:	eef0 2a47 	vmov.f32	s5, s14
 801eaca:	e6a6      	b.n	801e81a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801eacc:	2900      	cmp	r1, #0
 801eace:	f43f af10 	beq.w	801e8f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ead2:	f819 3003 	ldrb.w	r3, [r9, r3]
 801ead6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801eada:	930f      	str	r3, [sp, #60]	; 0x3c
 801eadc:	e709      	b.n	801e8f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801eade:	f112 0901 	adds.w	r9, r2, #1
 801eae2:	f53f af7d 	bmi.w	801e9e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801eae6:	454b      	cmp	r3, r9
 801eae8:	f6ff af7a 	blt.w	801e9e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801eaec:	f11c 0901 	adds.w	r9, ip, #1
 801eaf0:	f53f af76 	bmi.w	801e9e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801eaf4:	45ce      	cmp	lr, r9
 801eaf6:	f6ff af73 	blt.w	801e9e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801eafa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801eafc:	9202      	str	r2, [sp, #8]
 801eafe:	b21b      	sxth	r3, r3
 801eb00:	fa0f f28e 	sxth.w	r2, lr
 801eb04:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801eb08:	e9cd c003 	strd	ip, r0, [sp, #12]
 801eb0c:	9201      	str	r2, [sp, #4]
 801eb0e:	9300      	str	r3, [sp, #0]
 801eb10:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801eb12:	9816      	ldr	r0, [sp, #88]	; 0x58
 801eb14:	4633      	mov	r3, r6
 801eb16:	4639      	mov	r1, r7
 801eb18:	f7ff fd8e 	bl	801e638 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801eb1c:	e760      	b.n	801e9e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801eb1e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801eb20:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801eb22:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801eb26:	ea4f 422a 	mov.w	r2, sl, asr #16
 801eb2a:	1429      	asrs	r1, r5, #16
 801eb2c:	fb03 2101 	mla	r1, r3, r1, r2
 801eb30:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801eb32:	440a      	add	r2, r1
 801eb34:	5c61      	ldrb	r1, [r4, r1]
 801eb36:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801eb3a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801eb3e:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801eb42:	f1bc 0f00 	cmp.w	ip, #0
 801eb46:	f000 808c 	beq.w	801ec62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801eb4a:	7857      	ldrb	r7, [r2, #1]
 801eb4c:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801eb50:	9413      	str	r4, [sp, #76]	; 0x4c
 801eb52:	b140      	cbz	r0, 801eb66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801eb54:	18d7      	adds	r7, r2, r3
 801eb56:	5cd3      	ldrb	r3, [r2, r3]
 801eb58:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801eb5c:	9310      	str	r3, [sp, #64]	; 0x40
 801eb5e:	787b      	ldrb	r3, [r7, #1]
 801eb60:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801eb64:	9314      	str	r3, [sp, #80]	; 0x50
 801eb66:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801eb68:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801eb6a:	fb1c f200 	smulbb	r2, ip, r0
 801eb6e:	041f      	lsls	r7, r3, #16
 801eb70:	10d2      	asrs	r2, r2, #3
 801eb72:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801eb76:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801eb7a:	431f      	orrs	r7, r3
 801eb7c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801eb80:	9317      	str	r3, [sp, #92]	; 0x5c
 801eb82:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801eb84:	041b      	lsls	r3, r3, #16
 801eb86:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801eb8a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801eb8e:	ea43 030b 	orr.w	r3, r3, fp
 801eb92:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801eb94:	4353      	muls	r3, r2
 801eb96:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801eb9a:	fb04 3707 	mla	r7, r4, r7, r3
 801eb9e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801eba2:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801eba6:	ea43 0b01 	orr.w	fp, r3, r1
 801ebaa:	f1c0 0110 	rsb	r1, r0, #16
 801ebae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ebb0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ebb2:	eba1 0c0c 	sub.w	ip, r1, ip
 801ebb6:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ebba:	fb0c 770b 	mla	r7, ip, fp, r7
 801ebbe:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ebc2:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801ebc6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ebca:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801ebce:	ea4c 0c0b 	orr.w	ip, ip, fp
 801ebd2:	fb02 770c 	mla	r7, r2, ip, r7
 801ebd6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ebd8:	0d79      	lsrs	r1, r7, #21
 801ebda:	097f      	lsrs	r7, r7, #5
 801ebdc:	8812      	ldrh	r2, [r2, #0]
 801ebde:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ebe2:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ebe6:	430f      	orrs	r7, r1
 801ebe8:	b2bb      	uxth	r3, r7
 801ebea:	1211      	asrs	r1, r2, #8
 801ebec:	1218      	asrs	r0, r3, #8
 801ebee:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ebf2:	fb11 f104 	smulbb	r1, r1, r4
 801ebf6:	10d7      	asrs	r7, r2, #3
 801ebf8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ebfc:	00d2      	lsls	r2, r2, #3
 801ebfe:	fb00 1009 	mla	r0, r0, r9, r1
 801ec02:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ec06:	10d9      	asrs	r1, r3, #3
 801ec08:	b2d2      	uxtb	r2, r2
 801ec0a:	00db      	lsls	r3, r3, #3
 801ec0c:	fb17 f704 	smulbb	r7, r7, r4
 801ec10:	fb12 f204 	smulbb	r2, r2, r4
 801ec14:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ec18:	b2db      	uxtb	r3, r3
 801ec1a:	b280      	uxth	r0, r0
 801ec1c:	fb01 7109 	mla	r1, r1, r9, r7
 801ec20:	fb03 2309 	mla	r3, r3, r9, r2
 801ec24:	b29b      	uxth	r3, r3
 801ec26:	b289      	uxth	r1, r1
 801ec28:	1c42      	adds	r2, r0, #1
 801ec2a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ec2e:	1c4f      	adds	r7, r1, #1
 801ec30:	1c5a      	adds	r2, r3, #1
 801ec32:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ec36:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801ec3a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ec3e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ec42:	0949      	lsrs	r1, r1, #5
 801ec44:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ec46:	4310      	orrs	r0, r2
 801ec48:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ec4c:	4308      	orrs	r0, r1
 801ec4e:	f823 0b02 	strh.w	r0, [r3], #2
 801ec52:	930e      	str	r3, [sp, #56]	; 0x38
 801ec54:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801ec56:	449a      	add	sl, r3
 801ec58:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ec5a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801ec5e:	441d      	add	r5, r3
 801ec60:	e6ed      	b.n	801ea3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801ec62:	2800      	cmp	r0, #0
 801ec64:	f43f af7f 	beq.w	801eb66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ec68:	5cd3      	ldrb	r3, [r2, r3]
 801ec6a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ec6e:	9310      	str	r3, [sp, #64]	; 0x40
 801ec70:	e779      	b.n	801eb66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ec72:	b019      	add	sp, #100	; 0x64
 801ec74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ec78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801ec78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ec7c:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801ec80:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801ec84:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801ec88:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801ec8c:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801ec90:	8808      	ldrh	r0, [r1, #0]
 801ec92:	fb08 470e 	mla	r7, r8, lr, r4
 801ec96:	f1b8 0f00 	cmp.w	r8, #0
 801ec9a:	eb02 0907 	add.w	r9, r2, r7
 801ec9e:	db67      	blt.n	801ed70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801eca0:	45c2      	cmp	sl, r8
 801eca2:	dd65      	ble.n	801ed70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801eca4:	2c00      	cmp	r4, #0
 801eca6:	db61      	blt.n	801ed6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801eca8:	45a6      	cmp	lr, r4
 801ecaa:	dd5f      	ble.n	801ed6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801ecac:	5dd2      	ldrb	r2, [r2, r7]
 801ecae:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801ecb2:	1c62      	adds	r2, r4, #1
 801ecb4:	d45f      	bmi.n	801ed76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ecb6:	4596      	cmp	lr, r2
 801ecb8:	dd5d      	ble.n	801ed76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ecba:	2d00      	cmp	r5, #0
 801ecbc:	d05b      	beq.n	801ed76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ecbe:	f899 2001 	ldrb.w	r2, [r9, #1]
 801ecc2:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801ecc6:	f118 0801 	adds.w	r8, r8, #1
 801ecca:	d458      	bmi.n	801ed7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801eccc:	45c2      	cmp	sl, r8
 801ecce:	dd56      	ble.n	801ed7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ecd0:	2e00      	cmp	r6, #0
 801ecd2:	d054      	beq.n	801ed7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ecd4:	2c00      	cmp	r4, #0
 801ecd6:	db50      	blt.n	801ed7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801ecd8:	45a6      	cmp	lr, r4
 801ecda:	dd4e      	ble.n	801ed7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801ecdc:	f819 200e 	ldrb.w	r2, [r9, lr]
 801ece0:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801ece4:	3401      	adds	r4, #1
 801ece6:	d407      	bmi.n	801ecf8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ece8:	45a6      	cmp	lr, r4
 801ecea:	dd05      	ble.n	801ecf8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ecec:	b125      	cbz	r5, 801ecf8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ecee:	44ce      	add	lr, r9
 801ecf0:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801ecf4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801ecf8:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801ecfc:	fb15 f406 	smulbb	r4, r5, r6
 801ed00:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ed04:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801ed08:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ed0c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801ed10:	ea43 0c0c 	orr.w	ip, r3, ip
 801ed14:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801ed18:	f1c6 0310 	rsb	r3, r6, #16
 801ed1c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ed20:	1b5b      	subs	r3, r3, r5
 801ed22:	ea4e 0707 	orr.w	r7, lr, r7
 801ed26:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801ed2a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ed2e:	437d      	muls	r5, r7
 801ed30:	fb03 5c0c 	mla	ip, r3, ip, r5
 801ed34:	0403      	lsls	r3, r0, #16
 801ed36:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ed3a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ed3e:	4318      	orrs	r0, r3
 801ed40:	0413      	lsls	r3, r2, #16
 801ed42:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ed46:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ed4a:	4313      	orrs	r3, r2
 801ed4c:	fb04 c000 	mla	r0, r4, r0, ip
 801ed50:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801ed54:	fb06 0003 	mla	r0, r6, r3, r0
 801ed58:	0d43      	lsrs	r3, r0, #21
 801ed5a:	0940      	lsrs	r0, r0, #5
 801ed5c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ed60:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ed64:	4318      	orrs	r0, r3
 801ed66:	8008      	strh	r0, [r1, #0]
 801ed68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ed6c:	4684      	mov	ip, r0
 801ed6e:	e7a0      	b.n	801ecb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801ed70:	4607      	mov	r7, r0
 801ed72:	4684      	mov	ip, r0
 801ed74:	e7a7      	b.n	801ecc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ed76:	4607      	mov	r7, r0
 801ed78:	e7a5      	b.n	801ecc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ed7a:	4602      	mov	r2, r0
 801ed7c:	e7b2      	b.n	801ece4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801ed7e:	4602      	mov	r2, r0
 801ed80:	e7ba      	b.n	801ecf8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801ed82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ed82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ed86:	b093      	sub	sp, #76	; 0x4c
 801ed88:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801ed8c:	920f      	str	r2, [sp, #60]	; 0x3c
 801ed8e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801ed90:	9108      	str	r1, [sp, #32]
 801ed92:	9306      	str	r3, [sp, #24]
 801ed94:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801ed98:	9010      	str	r0, [sp, #64]	; 0x40
 801ed9a:	6850      	ldr	r0, [r2, #4]
 801ed9c:	6812      	ldr	r2, [r2, #0]
 801ed9e:	fb00 1303 	mla	r3, r0, r3, r1
 801eda2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801eda6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eda8:	681b      	ldr	r3, [r3, #0]
 801edaa:	9307      	str	r3, [sp, #28]
 801edac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801edae:	685f      	ldr	r7, [r3, #4]
 801edb0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801edb4:	3704      	adds	r7, #4
 801edb6:	9b08      	ldr	r3, [sp, #32]
 801edb8:	2b00      	cmp	r3, #0
 801edba:	dc03      	bgt.n	801edc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801edbc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801edbe:	2b00      	cmp	r3, #0
 801edc0:	f340 81b2 	ble.w	801f128 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801edc4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801edc6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801edca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801edce:	1e48      	subs	r0, r1, #1
 801edd0:	f102 3cff 	add.w	ip, r2, #4294967295
 801edd4:	9b06      	ldr	r3, [sp, #24]
 801edd6:	2b00      	cmp	r3, #0
 801edd8:	f340 80a9 	ble.w	801ef2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801eddc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ede0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ede4:	d406      	bmi.n	801edf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ede6:	4586      	cmp	lr, r0
 801ede8:	da04      	bge.n	801edf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801edea:	2b00      	cmp	r3, #0
 801edec:	db02      	blt.n	801edf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801edee:	4563      	cmp	r3, ip
 801edf0:	f2c0 809e 	blt.w	801ef30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801edf4:	f11e 0e01 	adds.w	lr, lr, #1
 801edf8:	f100 808f 	bmi.w	801ef1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801edfc:	4571      	cmp	r1, lr
 801edfe:	f2c0 808c 	blt.w	801ef1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ee02:	3301      	adds	r3, #1
 801ee04:	f100 8089 	bmi.w	801ef1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ee08:	429a      	cmp	r2, r3
 801ee0a:	f2c0 8086 	blt.w	801ef1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ee0e:	f8dd b018 	ldr.w	fp, [sp, #24]
 801ee12:	46c8      	mov	r8, r9
 801ee14:	f1bb 0f00 	cmp.w	fp, #0
 801ee18:	f340 80a6 	ble.w	801ef68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801ee1c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801ee1e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ee20:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ee24:	689b      	ldr	r3, [r3, #8]
 801ee26:	1422      	asrs	r2, r4, #16
 801ee28:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ee2c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ee30:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ee34:	f100 80e3 	bmi.w	801effe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ee38:	f103 3aff 	add.w	sl, r3, #4294967295
 801ee3c:	4552      	cmp	r2, sl
 801ee3e:	f280 80de 	bge.w	801effe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ee42:	f1bc 0f00 	cmp.w	ip, #0
 801ee46:	f2c0 80da 	blt.w	801effe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ee4a:	f10e 3aff 	add.w	sl, lr, #4294967295
 801ee4e:	45d4      	cmp	ip, sl
 801ee50:	f280 80d5 	bge.w	801effe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ee54:	b21b      	sxth	r3, r3
 801ee56:	fb0c 2203 	mla	r2, ip, r3, r2
 801ee5a:	9d07      	ldr	r5, [sp, #28]
 801ee5c:	eb05 0a02 	add.w	sl, r5, r2
 801ee60:	5caa      	ldrb	r2, [r5, r2]
 801ee62:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801ee66:	2800      	cmp	r0, #0
 801ee68:	f000 80c0 	beq.w	801efec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801ee6c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ee70:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801ee74:	920b      	str	r2, [sp, #44]	; 0x2c
 801ee76:	b151      	cbz	r1, 801ee8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ee78:	eb0a 0203 	add.w	r2, sl, r3
 801ee7c:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801ee80:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ee84:	9309      	str	r3, [sp, #36]	; 0x24
 801ee86:	7853      	ldrb	r3, [r2, #1]
 801ee88:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ee8c:	930c      	str	r3, [sp, #48]	; 0x30
 801ee8e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ee90:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ee92:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ee96:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ee9a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ee9e:	ea4c 0c03 	orr.w	ip, ip, r3
 801eea2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801eea4:	041b      	lsls	r3, r3, #16
 801eea6:	fb10 f201 	smulbb	r2, r0, r1
 801eeaa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801eeae:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801eeb2:	10d2      	asrs	r2, r2, #3
 801eeb4:	432b      	orrs	r3, r5
 801eeb6:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801eeba:	4353      	muls	r3, r2
 801eebc:	fb0a 330c 	mla	r3, sl, ip, r3
 801eec0:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801eec4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801eec8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801eecc:	ea4c 0e0e 	orr.w	lr, ip, lr
 801eed0:	f1c1 0c10 	rsb	ip, r1, #16
 801eed4:	ebac 0c00 	sub.w	ip, ip, r0
 801eed8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801eedc:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801eee0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eee2:	0418      	lsls	r0, r3, #16
 801eee4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801eee8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801eeec:	4318      	orrs	r0, r3
 801eeee:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801eef2:	fb02 c200 	mla	r2, r2, r0, ip
 801eef6:	0d53      	lsrs	r3, r2, #21
 801eef8:	0952      	lsrs	r2, r2, #5
 801eefa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801eefe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ef02:	431a      	orrs	r2, r3
 801ef04:	f8a8 2000 	strh.w	r2, [r8]
 801ef08:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ef0a:	441c      	add	r4, r3
 801ef0c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ef0e:	f108 0802 	add.w	r8, r8, #2
 801ef12:	441e      	add	r6, r3
 801ef14:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ef18:	e77c      	b.n	801ee14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ef1a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ef1c:	441c      	add	r4, r3
 801ef1e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ef20:	441e      	add	r6, r3
 801ef22:	9b06      	ldr	r3, [sp, #24]
 801ef24:	3b01      	subs	r3, #1
 801ef26:	9306      	str	r3, [sp, #24]
 801ef28:	f109 0902 	add.w	r9, r9, #2
 801ef2c:	e752      	b.n	801edd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ef2e:	d020      	beq.n	801ef72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ef30:	9b06      	ldr	r3, [sp, #24]
 801ef32:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801ef34:	3b01      	subs	r3, #1
 801ef36:	fb00 4003 	mla	r0, r0, r3, r4
 801ef3a:	1400      	asrs	r0, r0, #16
 801ef3c:	f53f af67 	bmi.w	801ee0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ef40:	3901      	subs	r1, #1
 801ef42:	4288      	cmp	r0, r1
 801ef44:	f6bf af63 	bge.w	801ee0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ef48:	9920      	ldr	r1, [sp, #128]	; 0x80
 801ef4a:	fb01 6303 	mla	r3, r1, r3, r6
 801ef4e:	141b      	asrs	r3, r3, #16
 801ef50:	f53f af5d 	bmi.w	801ee0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ef54:	3a01      	subs	r2, #1
 801ef56:	4293      	cmp	r3, r2
 801ef58:	f6bf af59 	bge.w	801ee0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ef5c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801ef60:	46ca      	mov	sl, r9
 801ef62:	f1b8 0f00 	cmp.w	r8, #0
 801ef66:	dc67      	bgt.n	801f038 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801ef68:	9b06      	ldr	r3, [sp, #24]
 801ef6a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ef6e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801ef72:	9b08      	ldr	r3, [sp, #32]
 801ef74:	2b00      	cmp	r3, #0
 801ef76:	f340 80d7 	ble.w	801f128 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801ef7a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ef7e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ef82:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ef86:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ef88:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ef8c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ef90:	eeb0 6a62 	vmov.f32	s12, s5
 801ef94:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ef98:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ef9c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801efa0:	ee16 4a10 	vmov	r4, s12
 801efa4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801efa8:	eeb0 6a43 	vmov.f32	s12, s6
 801efac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801efb0:	ee12 2a90 	vmov	r2, s5
 801efb4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801efb8:	fb92 f3f3 	sdiv	r3, r2, r3
 801efbc:	ee13 2a10 	vmov	r2, s6
 801efc0:	931f      	str	r3, [sp, #124]	; 0x7c
 801efc2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801efc4:	fb92 f3f3 	sdiv	r3, r2, r3
 801efc8:	9320      	str	r3, [sp, #128]	; 0x80
 801efca:	9b08      	ldr	r3, [sp, #32]
 801efcc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801efce:	3b01      	subs	r3, #1
 801efd0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801efd4:	9308      	str	r3, [sp, #32]
 801efd6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801efd8:	bf08      	it	eq
 801efda:	4613      	moveq	r3, r2
 801efdc:	ee16 6a10 	vmov	r6, s12
 801efe0:	9306      	str	r3, [sp, #24]
 801efe2:	eeb0 3a67 	vmov.f32	s6, s15
 801efe6:	eef0 2a47 	vmov.f32	s5, s14
 801efea:	e6e4      	b.n	801edb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801efec:	2900      	cmp	r1, #0
 801efee:	f43f af4e 	beq.w	801ee8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801eff2:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801eff6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801effa:	9309      	str	r3, [sp, #36]	; 0x24
 801effc:	e747      	b.n	801ee8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801effe:	f112 0a01 	adds.w	sl, r2, #1
 801f002:	d481      	bmi.n	801ef08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f004:	4553      	cmp	r3, sl
 801f006:	f6ff af7f 	blt.w	801ef08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f00a:	f11c 0a01 	adds.w	sl, ip, #1
 801f00e:	f53f af7b 	bmi.w	801ef08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f012:	45d6      	cmp	lr, sl
 801f014:	f6ff af78 	blt.w	801ef08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f018:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801f01c:	b21b      	sxth	r3, r3
 801f01e:	fa0f f28e 	sxth.w	r2, lr
 801f022:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801f026:	9201      	str	r2, [sp, #4]
 801f028:	9300      	str	r3, [sp, #0]
 801f02a:	9a07      	ldr	r2, [sp, #28]
 801f02c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801f02e:	463b      	mov	r3, r7
 801f030:	4641      	mov	r1, r8
 801f032:	f7ff fe21 	bl	801ec78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801f036:	e767      	b.n	801ef08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f038:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f03a:	9d07      	ldr	r5, [sp, #28]
 801f03c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f040:	1422      	asrs	r2, r4, #16
 801f042:	1431      	asrs	r1, r6, #16
 801f044:	fb03 2101 	mla	r1, r3, r1, r2
 801f048:	9a07      	ldr	r2, [sp, #28]
 801f04a:	440a      	add	r2, r1
 801f04c:	5c69      	ldrb	r1, [r5, r1]
 801f04e:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801f052:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f056:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801f05a:	f1be 0f00 	cmp.w	lr, #0
 801f05e:	d05c      	beq.n	801f11a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f060:	f892 c001 	ldrb.w	ip, [r2, #1]
 801f064:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801f068:	950d      	str	r5, [sp, #52]	; 0x34
 801f06a:	b150      	cbz	r0, 801f082 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f06c:	eb02 0c03 	add.w	ip, r2, r3
 801f070:	5cd3      	ldrb	r3, [r2, r3]
 801f072:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f076:	930a      	str	r3, [sp, #40]	; 0x28
 801f078:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801f07c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f080:	930e      	str	r3, [sp, #56]	; 0x38
 801f082:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f084:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f086:	fb1e f200 	smulbb	r2, lr, r0
 801f08a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f08e:	10d2      	asrs	r2, r2, #3
 801f090:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f094:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f098:	ea4c 0c03 	orr.w	ip, ip, r3
 801f09c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801f0a0:	9311      	str	r3, [sp, #68]	; 0x44
 801f0a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f0a4:	041b      	lsls	r3, r3, #16
 801f0a6:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801f0aa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f0ae:	ea43 030b 	orr.w	r3, r3, fp
 801f0b2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f0b4:	4353      	muls	r3, r2
 801f0b6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f0ba:	fb05 3c0c 	mla	ip, r5, ip, r3
 801f0be:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f0c2:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801f0c6:	ea43 0b01 	orr.w	fp, r3, r1
 801f0ca:	f1c0 0110 	rsb	r1, r0, #16
 801f0ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f0d0:	eba1 0e0e 	sub.w	lr, r1, lr
 801f0d4:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801f0d8:	fb0e cc0b 	mla	ip, lr, fp, ip
 801f0dc:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801f0e0:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801f0e4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f0e8:	ea4b 0e0e 	orr.w	lr, fp, lr
 801f0ec:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801f0f0:	fb02 cc0e 	mla	ip, r2, lr, ip
 801f0f4:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801f0f8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f0fc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f100:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f104:	ea43 0c0c 	orr.w	ip, r3, ip
 801f108:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f10a:	f82a cb02 	strh.w	ip, [sl], #2
 801f10e:	441c      	add	r4, r3
 801f110:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f112:	f108 38ff 	add.w	r8, r8, #4294967295
 801f116:	441e      	add	r6, r3
 801f118:	e723      	b.n	801ef62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801f11a:	2800      	cmp	r0, #0
 801f11c:	d0b1      	beq.n	801f082 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f11e:	5cd3      	ldrb	r3, [r2, r3]
 801f120:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f124:	930a      	str	r3, [sp, #40]	; 0x28
 801f126:	e7ac      	b.n	801f082 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f128:	b013      	add	sp, #76	; 0x4c
 801f12a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f12e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801f12e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f132:	880d      	ldrh	r5, [r1, #0]
 801f134:	b087      	sub	sp, #28
 801f136:	10ef      	asrs	r7, r5, #3
 801f138:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801f13c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f140:	00ed      	lsls	r5, r5, #3
 801f142:	9701      	str	r7, [sp, #4]
 801f144:	b2ed      	uxtb	r5, r5
 801f146:	9502      	str	r5, [sp, #8]
 801f148:	9d01      	ldr	r5, [sp, #4]
 801f14a:	9103      	str	r1, [sp, #12]
 801f14c:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801f150:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801f154:	9902      	ldr	r1, [sp, #8]
 801f156:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801f15a:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801f15e:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801f162:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801f166:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801f16a:	022d      	lsls	r5, r5, #8
 801f16c:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801f170:	fb06 0709 	mla	r7, r6, r9, r0
 801f174:	430d      	orrs	r5, r1
 801f176:	2e00      	cmp	r6, #0
 801f178:	eb02 0c07 	add.w	ip, r2, r7
 801f17c:	9505      	str	r5, [sp, #20]
 801f17e:	f2c0 80b6 	blt.w	801f2ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f182:	45b3      	cmp	fp, r6
 801f184:	f340 80b3 	ble.w	801f2ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f188:	2800      	cmp	r0, #0
 801f18a:	f2c0 80ae 	blt.w	801f2ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f18e:	4581      	cmp	r9, r0
 801f190:	f340 80ab 	ble.w	801f2ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f194:	5dd7      	ldrb	r7, [r2, r7]
 801f196:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f19a:	441f      	add	r7, r3
 801f19c:	1c42      	adds	r2, r0, #1
 801f19e:	f100 80a9 	bmi.w	801f2f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f1a2:	4591      	cmp	r9, r2
 801f1a4:	f340 80a6 	ble.w	801f2f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f1a8:	2c00      	cmp	r4, #0
 801f1aa:	f000 80a3 	beq.w	801f2f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f1ae:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f1b2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f1b6:	441d      	add	r5, r3
 801f1b8:	3601      	adds	r6, #1
 801f1ba:	f100 809f 	bmi.w	801f2fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f1be:	45b3      	cmp	fp, r6
 801f1c0:	f340 809c 	ble.w	801f2fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f1c4:	f1be 0f00 	cmp.w	lr, #0
 801f1c8:	f000 8098 	beq.w	801f2fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f1cc:	2800      	cmp	r0, #0
 801f1ce:	f2c0 8093 	blt.w	801f2f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f1d2:	4581      	cmp	r9, r0
 801f1d4:	f340 8090 	ble.w	801f2f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f1d8:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801f1dc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f1e0:	441e      	add	r6, r3
 801f1e2:	3001      	adds	r0, #1
 801f1e4:	f100 808d 	bmi.w	801f302 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f1e8:	4581      	cmp	r9, r0
 801f1ea:	f340 808a 	ble.w	801f302 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f1ee:	2c00      	cmp	r4, #0
 801f1f0:	f000 8087 	beq.w	801f302 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f1f4:	44e1      	add	r9, ip
 801f1f6:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f1fa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f1fe:	4413      	add	r3, r2
 801f200:	b2a4      	uxth	r4, r4
 801f202:	fa1f fe8e 	uxth.w	lr, lr
 801f206:	fb04 fb0e 	mul.w	fp, r4, lr
 801f20a:	0124      	lsls	r4, r4, #4
 801f20c:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801f210:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801f214:	eba4 040b 	sub.w	r4, r4, fp
 801f218:	fa1f f08e 	uxth.w	r0, lr
 801f21c:	b2a2      	uxth	r2, r4
 801f21e:	78ac      	ldrb	r4, [r5, #2]
 801f220:	f897 c002 	ldrb.w	ip, [r7, #2]
 801f224:	9901      	ldr	r1, [sp, #4]
 801f226:	eba9 0900 	sub.w	r9, r9, r0
 801f22a:	fa1f f989 	uxth.w	r9, r9
 801f22e:	4354      	muls	r4, r2
 801f230:	fb09 440c 	mla	r4, r9, ip, r4
 801f234:	f896 c002 	ldrb.w	ip, [r6, #2]
 801f238:	fb00 440c 	mla	r4, r0, ip, r4
 801f23c:	f893 c002 	ldrb.w	ip, [r3, #2]
 801f240:	fa1f fe88 	uxth.w	lr, r8
 801f244:	ea6f 0808 	mvn.w	r8, r8
 801f248:	fa5f f888 	uxtb.w	r8, r8
 801f24c:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801f250:	fb1a fa08 	smulbb	sl, sl, r8
 801f254:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f258:	fb0c ac0e 	mla	ip, ip, lr, sl
 801f25c:	f895 a001 	ldrb.w	sl, [r5, #1]
 801f260:	787c      	ldrb	r4, [r7, #1]
 801f262:	782d      	ldrb	r5, [r5, #0]
 801f264:	783f      	ldrb	r7, [r7, #0]
 801f266:	fb02 fa0a 	mul.w	sl, r2, sl
 801f26a:	fb09 aa04 	mla	sl, r9, r4, sl
 801f26e:	7874      	ldrb	r4, [r6, #1]
 801f270:	436a      	muls	r2, r5
 801f272:	7835      	ldrb	r5, [r6, #0]
 801f274:	fb00 aa04 	mla	sl, r0, r4, sl
 801f278:	fb09 2207 	mla	r2, r9, r7, r2
 801f27c:	785c      	ldrb	r4, [r3, #1]
 801f27e:	781b      	ldrb	r3, [r3, #0]
 801f280:	fb00 2005 	mla	r0, r0, r5, r2
 801f284:	fb0b a404 	mla	r4, fp, r4, sl
 801f288:	fb0b 0b03 	mla	fp, fp, r3, r0
 801f28c:	9b02      	ldr	r3, [sp, #8]
 801f28e:	fb11 fa08 	smulbb	sl, r1, r8
 801f292:	fa1f fc8c 	uxth.w	ip, ip
 801f296:	fb13 f808 	smulbb	r8, r3, r8
 801f29a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801f29e:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801f2a2:	fb04 a40e 	mla	r4, r4, lr, sl
 801f2a6:	f10c 0301 	add.w	r3, ip, #1
 801f2aa:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801f2ae:	fa1f fe8e 	uxth.w	lr, lr
 801f2b2:	b2a4      	uxth	r4, r4
 801f2b4:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f2b8:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801f2bc:	f104 0a01 	add.w	sl, r4, #1
 801f2c0:	f10e 0c01 	add.w	ip, lr, #1
 801f2c4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f2c8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801f2cc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f2d0:	0964      	lsrs	r4, r4, #5
 801f2d2:	ea4c 0c03 	orr.w	ip, ip, r3
 801f2d6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801f2da:	9b03      	ldr	r3, [sp, #12]
 801f2dc:	ea4c 0c04 	orr.w	ip, ip, r4
 801f2e0:	f8a3 c000 	strh.w	ip, [r3]
 801f2e4:	b007      	add	sp, #28
 801f2e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f2ea:	af05      	add	r7, sp, #20
 801f2ec:	e756      	b.n	801f19c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801f2ee:	ad05      	add	r5, sp, #20
 801f2f0:	462f      	mov	r7, r5
 801f2f2:	e761      	b.n	801f1b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f2f4:	ad05      	add	r5, sp, #20
 801f2f6:	e75f      	b.n	801f1b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f2f8:	ae05      	add	r6, sp, #20
 801f2fa:	e772      	b.n	801f1e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801f2fc:	ab05      	add	r3, sp, #20
 801f2fe:	461e      	mov	r6, r3
 801f300:	e77e      	b.n	801f200 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801f302:	ab05      	add	r3, sp, #20
 801f304:	e77c      	b.n	801f200 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801f306 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f306:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f30a:	b095      	sub	sp, #84	; 0x54
 801f30c:	9212      	str	r2, [sp, #72]	; 0x48
 801f30e:	9309      	str	r3, [sp, #36]	; 0x24
 801f310:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801f312:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801f316:	930f      	str	r3, [sp, #60]	; 0x3c
 801f318:	910e      	str	r1, [sp, #56]	; 0x38
 801f31a:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801f31e:	9013      	str	r0, [sp, #76]	; 0x4c
 801f320:	6850      	ldr	r0, [r2, #4]
 801f322:	6812      	ldr	r2, [r2, #0]
 801f324:	fb00 1303 	mla	r3, r0, r3, r1
 801f328:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f32c:	930a      	str	r3, [sp, #40]	; 0x28
 801f32e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f330:	681b      	ldr	r3, [r3, #0]
 801f332:	930d      	str	r3, [sp, #52]	; 0x34
 801f334:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f336:	685c      	ldr	r4, [r3, #4]
 801f338:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f33a:	43db      	mvns	r3, r3
 801f33c:	b2db      	uxtb	r3, r3
 801f33e:	3404      	adds	r4, #4
 801f340:	930b      	str	r3, [sp, #44]	; 0x2c
 801f342:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f344:	2b00      	cmp	r3, #0
 801f346:	dc03      	bgt.n	801f350 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801f348:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f34a:	2b00      	cmp	r3, #0
 801f34c:	f340 8255 	ble.w	801f7fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f350:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f352:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f356:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f35a:	1e48      	subs	r0, r1, #1
 801f35c:	1e55      	subs	r5, r2, #1
 801f35e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f360:	2b00      	cmp	r3, #0
 801f362:	f340 80f9 	ble.w	801f558 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801f366:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801f368:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f36a:	1436      	asrs	r6, r6, #16
 801f36c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f370:	d406      	bmi.n	801f380 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f372:	4286      	cmp	r6, r0
 801f374:	da04      	bge.n	801f380 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f376:	2b00      	cmp	r3, #0
 801f378:	db02      	blt.n	801f380 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f37a:	42ab      	cmp	r3, r5
 801f37c:	f2c0 80ed 	blt.w	801f55a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801f380:	3601      	adds	r6, #1
 801f382:	f100 80da 	bmi.w	801f53a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f386:	42b1      	cmp	r1, r6
 801f388:	f2c0 80d7 	blt.w	801f53a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f38c:	3301      	adds	r3, #1
 801f38e:	f100 80d4 	bmi.w	801f53a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f392:	429a      	cmp	r2, r3
 801f394:	f2c0 80d1 	blt.w	801f53a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f398:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f39a:	9311      	str	r3, [sp, #68]	; 0x44
 801f39c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f39e:	930c      	str	r3, [sp, #48]	; 0x30
 801f3a0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f3a2:	2b00      	cmp	r3, #0
 801f3a4:	f340 80fa 	ble.w	801f59c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801f3a8:	9826      	ldr	r0, [sp, #152]	; 0x98
 801f3aa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f3ac:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f3ae:	68c6      	ldr	r6, [r0, #12]
 801f3b0:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f3b2:	141d      	asrs	r5, r3, #16
 801f3b4:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f3b8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f3ba:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f3bc:	1400      	asrs	r0, r0, #16
 801f3be:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f3c2:	6892      	ldr	r2, [r2, #8]
 801f3c4:	f100 813e 	bmi.w	801f644 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f3c8:	1e57      	subs	r7, r2, #1
 801f3ca:	42b8      	cmp	r0, r7
 801f3cc:	f280 813a 	bge.w	801f644 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f3d0:	2d00      	cmp	r5, #0
 801f3d2:	f2c0 8137 	blt.w	801f644 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f3d6:	1e77      	subs	r7, r6, #1
 801f3d8:	42bd      	cmp	r5, r7
 801f3da:	f280 8133 	bge.w	801f644 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f3de:	b212      	sxth	r2, r2
 801f3e0:	fb05 0002 	mla	r0, r5, r2, r0
 801f3e4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f3e6:	f815 a000 	ldrb.w	sl, [r5, r0]
 801f3ea:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801f3ee:	182e      	adds	r6, r5, r0
 801f3f0:	eb04 050a 	add.w	r5, r4, sl
 801f3f4:	2b00      	cmp	r3, #0
 801f3f6:	f000 8117 	beq.w	801f628 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801f3fa:	f896 c001 	ldrb.w	ip, [r6, #1]
 801f3fe:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801f402:	44a4      	add	ip, r4
 801f404:	2900      	cmp	r1, #0
 801f406:	f000 8117 	beq.w	801f638 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801f40a:	18b0      	adds	r0, r6, r2
 801f40c:	5cb2      	ldrb	r2, [r6, r2]
 801f40e:	7840      	ldrb	r0, [r0, #1]
 801f410:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f414:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f418:	4422      	add	r2, r4
 801f41a:	4420      	add	r0, r4
 801f41c:	b29b      	uxth	r3, r3
 801f41e:	b289      	uxth	r1, r1
 801f420:	fb03 f901 	mul.w	r9, r3, r1
 801f424:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f428:	011b      	lsls	r3, r3, #4
 801f42a:	b289      	uxth	r1, r1
 801f42c:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801f430:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f434:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f436:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801f43a:	f8b6 e000 	ldrh.w	lr, [r6]
 801f43e:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801f442:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801f446:	eba3 0309 	sub.w	r3, r3, r9
 801f44a:	b29b      	uxth	r3, r3
 801f44c:	eba8 0801 	sub.w	r8, r8, r1
 801f450:	fa1f f888 	uxth.w	r8, r8
 801f454:	435f      	muls	r7, r3
 801f456:	fb08 770b 	mla	r7, r8, fp, r7
 801f45a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f45e:	9310      	str	r3, [sp, #64]	; 0x40
 801f460:	fb01 770b 	mla	r7, r1, fp, r7
 801f464:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f468:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f46a:	fb09 770b 	mla	r7, r9, fp, r7
 801f46e:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801f472:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f476:	fb1b fb03 	smulbb	fp, fp, r3
 801f47a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f47e:	fb07 b706 	mla	r7, r7, r6, fp
 801f482:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f484:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f488:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f48c:	f89c c000 	ldrb.w	ip, [ip]
 801f490:	435d      	muls	r5, r3
 801f492:	fb08 550b 	mla	r5, r8, fp, r5
 801f496:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f49a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f49c:	fb01 550b 	mla	r5, r1, fp, r5
 801f4a0:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f4a4:	fb09 550b 	mla	r5, r9, fp, r5
 801f4a8:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801f4ac:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f4b0:	fb1b fb03 	smulbb	fp, fp, r3
 801f4b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f4b6:	fb03 f30c 	mul.w	r3, r3, ip
 801f4ba:	f892 c000 	ldrb.w	ip, [r2]
 801f4be:	fb08 330a 	mla	r3, r8, sl, r3
 801f4c2:	fb01 330c 	mla	r3, r1, ip, r3
 801f4c6:	f890 c000 	ldrb.w	ip, [r0]
 801f4ca:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f4ce:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f4d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f4d4:	fa5f fe8e 	uxtb.w	lr, lr
 801f4d8:	b2bf      	uxth	r7, r7
 801f4da:	fb1e fe03 	smulbb	lr, lr, r3
 801f4de:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f4e2:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f4e6:	fb05 b506 	mla	r5, r5, r6, fp
 801f4ea:	1c7b      	adds	r3, r7, #1
 801f4ec:	fb0c e606 	mla	r6, ip, r6, lr
 801f4f0:	b2ad      	uxth	r5, r5
 801f4f2:	b2b6      	uxth	r6, r6
 801f4f4:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801f4f8:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801f4fc:	f105 0b01 	add.w	fp, r5, #1
 801f500:	1c77      	adds	r7, r6, #1
 801f502:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801f506:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f50a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f50e:	096d      	lsrs	r5, r5, #5
 801f510:	431f      	orrs	r7, r3
 801f512:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f516:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f518:	433d      	orrs	r5, r7
 801f51a:	801d      	strh	r5, [r3, #0]
 801f51c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f51e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f520:	3302      	adds	r3, #2
 801f522:	930c      	str	r3, [sp, #48]	; 0x30
 801f524:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f526:	4413      	add	r3, r2
 801f528:	931f      	str	r3, [sp, #124]	; 0x7c
 801f52a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f52c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f52e:	4413      	add	r3, r2
 801f530:	9320      	str	r3, [sp, #128]	; 0x80
 801f532:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f534:	3b01      	subs	r3, #1
 801f536:	9311      	str	r3, [sp, #68]	; 0x44
 801f538:	e732      	b.n	801f3a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f53a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f53c:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801f53e:	4433      	add	r3, r6
 801f540:	931f      	str	r3, [sp, #124]	; 0x7c
 801f542:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801f544:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f546:	4433      	add	r3, r6
 801f548:	9320      	str	r3, [sp, #128]	; 0x80
 801f54a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f54c:	3b01      	subs	r3, #1
 801f54e:	9309      	str	r3, [sp, #36]	; 0x24
 801f550:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f552:	3302      	adds	r3, #2
 801f554:	930a      	str	r3, [sp, #40]	; 0x28
 801f556:	e702      	b.n	801f35e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f558:	d027      	beq.n	801f5aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801f55a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f55c:	9821      	ldr	r0, [sp, #132]	; 0x84
 801f55e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f560:	3b01      	subs	r3, #1
 801f562:	fb00 5003 	mla	r0, r0, r3, r5
 801f566:	1400      	asrs	r0, r0, #16
 801f568:	f53f af16 	bmi.w	801f398 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f56c:	3901      	subs	r1, #1
 801f56e:	4288      	cmp	r0, r1
 801f570:	f6bf af12 	bge.w	801f398 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f574:	9922      	ldr	r1, [sp, #136]	; 0x88
 801f576:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f578:	fb01 0303 	mla	r3, r1, r3, r0
 801f57c:	141b      	asrs	r3, r3, #16
 801f57e:	f53f af0b 	bmi.w	801f398 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f582:	3a01      	subs	r2, #1
 801f584:	4293      	cmp	r3, r2
 801f586:	f6bf af07 	bge.w	801f398 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f58a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f58c:	9311      	str	r3, [sp, #68]	; 0x44
 801f58e:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801f592:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f594:	930c      	str	r3, [sp, #48]	; 0x30
 801f596:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f598:	2b00      	cmp	r3, #0
 801f59a:	dc70      	bgt.n	801f67e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801f59c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f59e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f5a0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f5a4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f5a8:	930a      	str	r3, [sp, #40]	; 0x28
 801f5aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f5ac:	2b00      	cmp	r3, #0
 801f5ae:	f340 8124 	ble.w	801f7fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f5b2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f5b6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f5ba:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f5be:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f5c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f5c4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f5c8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f5cc:	eef0 6a62 	vmov.f32	s13, s5
 801f5d0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f5d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f5d8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f5dc:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801f5e0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f5e4:	eef0 6a43 	vmov.f32	s13, s6
 801f5e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f5ec:	ee12 2a90 	vmov	r2, s5
 801f5f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f5f4:	fb92 f3f3 	sdiv	r3, r2, r3
 801f5f8:	ee13 2a10 	vmov	r2, s6
 801f5fc:	9321      	str	r3, [sp, #132]	; 0x84
 801f5fe:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f600:	fb92 f3f3 	sdiv	r3, r2, r3
 801f604:	9322      	str	r3, [sp, #136]	; 0x88
 801f606:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f608:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f60a:	3b01      	subs	r3, #1
 801f60c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f610:	930e      	str	r3, [sp, #56]	; 0x38
 801f612:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f614:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801f618:	bf08      	it	eq
 801f61a:	4613      	moveq	r3, r2
 801f61c:	9309      	str	r3, [sp, #36]	; 0x24
 801f61e:	eeb0 3a67 	vmov.f32	s6, s15
 801f622:	eef0 2a47 	vmov.f32	s5, s14
 801f626:	e68c      	b.n	801f342 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f628:	b149      	cbz	r1, 801f63e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801f62a:	5cb2      	ldrb	r2, [r6, r2]
 801f62c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f630:	4422      	add	r2, r4
 801f632:	4628      	mov	r0, r5
 801f634:	46ac      	mov	ip, r5
 801f636:	e6f1      	b.n	801f41c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f638:	4628      	mov	r0, r5
 801f63a:	462a      	mov	r2, r5
 801f63c:	e6ee      	b.n	801f41c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f63e:	4628      	mov	r0, r5
 801f640:	462a      	mov	r2, r5
 801f642:	e7f7      	b.n	801f634 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801f644:	1c47      	adds	r7, r0, #1
 801f646:	f53f af69 	bmi.w	801f51c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f64a:	42ba      	cmp	r2, r7
 801f64c:	f6ff af66 	blt.w	801f51c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f650:	1c6f      	adds	r7, r5, #1
 801f652:	f53f af63 	bmi.w	801f51c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f656:	42be      	cmp	r6, r7
 801f658:	f6ff af60 	blt.w	801f51c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f65c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801f65e:	9002      	str	r0, [sp, #8]
 801f660:	b236      	sxth	r6, r6
 801f662:	b212      	sxth	r2, r2
 801f664:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801f668:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801f66c:	9200      	str	r2, [sp, #0]
 801f66e:	9601      	str	r6, [sp, #4]
 801f670:	4623      	mov	r3, r4
 801f672:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801f676:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801f678:	f7ff fd59 	bl	801f12e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801f67c:	e74e      	b.n	801f51c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f67e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f680:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f682:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f684:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f686:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f68a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f68c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801f690:	142d      	asrs	r5, r5, #16
 801f692:	1400      	asrs	r0, r0, #16
 801f694:	fb02 5000 	mla	r0, r2, r0, r5
 801f698:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f69a:	f815 9000 	ldrb.w	r9, [r5, r0]
 801f69e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f6a2:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801f6a6:	182e      	adds	r6, r5, r0
 801f6a8:	eb04 0509 	add.w	r5, r4, r9
 801f6ac:	2b00      	cmp	r3, #0
 801f6ae:	f000 8096 	beq.w	801f7de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f6b2:	7877      	ldrb	r7, [r6, #1]
 801f6b4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f6b8:	4427      	add	r7, r4
 801f6ba:	2900      	cmp	r1, #0
 801f6bc:	f000 8097 	beq.w	801f7ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801f6c0:	18b0      	adds	r0, r6, r2
 801f6c2:	5cb2      	ldrb	r2, [r6, r2]
 801f6c4:	7840      	ldrb	r0, [r0, #1]
 801f6c6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f6ca:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f6ce:	4422      	add	r2, r4
 801f6d0:	4420      	add	r0, r4
 801f6d2:	b29b      	uxth	r3, r3
 801f6d4:	b289      	uxth	r1, r1
 801f6d6:	fb03 f801 	mul.w	r8, r3, r1
 801f6da:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f6dc:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f6e0:	f8b6 c000 	ldrh.w	ip, [r6]
 801f6e4:	78be      	ldrb	r6, [r7, #2]
 801f6e6:	f814 9009 	ldrb.w	r9, [r4, r9]
 801f6ea:	011b      	lsls	r3, r3, #4
 801f6ec:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801f6f0:	b289      	uxth	r1, r1
 801f6f2:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801f6f6:	eba3 0308 	sub.w	r3, r3, r8
 801f6fa:	b29b      	uxth	r3, r3
 801f6fc:	ebae 0e01 	sub.w	lr, lr, r1
 801f700:	fa1f fe8e 	uxth.w	lr, lr
 801f704:	435e      	muls	r6, r3
 801f706:	fb0e 660b 	mla	r6, lr, fp, r6
 801f70a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f70e:	9310      	str	r3, [sp, #64]	; 0x40
 801f710:	fb01 660b 	mla	r6, r1, fp, r6
 801f714:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f718:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f71a:	fb08 660b 	mla	r6, r8, fp, r6
 801f71e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801f722:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f726:	fb1b fb03 	smulbb	fp, fp, r3
 801f72a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f72e:	fb06 b60a 	mla	r6, r6, sl, fp
 801f732:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f734:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f738:	787d      	ldrb	r5, [r7, #1]
 801f73a:	783f      	ldrb	r7, [r7, #0]
 801f73c:	435d      	muls	r5, r3
 801f73e:	fb0e 550b 	mla	r5, lr, fp, r5
 801f742:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f746:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f748:	fb01 550b 	mla	r5, r1, fp, r5
 801f74c:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f750:	fb08 550b 	mla	r5, r8, fp, r5
 801f754:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f758:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f75c:	fb1b fb03 	smulbb	fp, fp, r3
 801f760:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f762:	437b      	muls	r3, r7
 801f764:	7817      	ldrb	r7, [r2, #0]
 801f766:	fb0e 3309 	mla	r3, lr, r9, r3
 801f76a:	fb01 3307 	mla	r3, r1, r7, r3
 801f76e:	7807      	ldrb	r7, [r0, #0]
 801f770:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f774:	fb08 3707 	mla	r7, r8, r7, r3
 801f778:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f77a:	fa5f fc8c 	uxtb.w	ip, ip
 801f77e:	fb1c fc03 	smulbb	ip, ip, r3
 801f782:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f786:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f78a:	fb05 b50a 	mla	r5, r5, sl, fp
 801f78e:	fb07 c70a 	mla	r7, r7, sl, ip
 801f792:	b2b6      	uxth	r6, r6
 801f794:	b2ad      	uxth	r5, r5
 801f796:	b2bf      	uxth	r7, r7
 801f798:	1c73      	adds	r3, r6, #1
 801f79a:	1c7a      	adds	r2, r7, #1
 801f79c:	f105 0b01 	add.w	fp, r5, #1
 801f7a0:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801f7a4:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801f7a8:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f7ac:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f7b0:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f7b4:	096d      	lsrs	r5, r5, #5
 801f7b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f7b8:	4316      	orrs	r6, r2
 801f7ba:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f7be:	432e      	orrs	r6, r5
 801f7c0:	f823 6b02 	strh.w	r6, [r3], #2
 801f7c4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f7c6:	930c      	str	r3, [sp, #48]	; 0x30
 801f7c8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f7ca:	4413      	add	r3, r2
 801f7cc:	931f      	str	r3, [sp, #124]	; 0x7c
 801f7ce:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f7d0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f7d2:	4413      	add	r3, r2
 801f7d4:	9320      	str	r3, [sp, #128]	; 0x80
 801f7d6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f7d8:	3b01      	subs	r3, #1
 801f7da:	9311      	str	r3, [sp, #68]	; 0x44
 801f7dc:	e6db      	b.n	801f596 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801f7de:	b149      	cbz	r1, 801f7f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801f7e0:	5cb2      	ldrb	r2, [r6, r2]
 801f7e2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f7e6:	4422      	add	r2, r4
 801f7e8:	4628      	mov	r0, r5
 801f7ea:	462f      	mov	r7, r5
 801f7ec:	e771      	b.n	801f6d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f7ee:	4628      	mov	r0, r5
 801f7f0:	462a      	mov	r2, r5
 801f7f2:	e76e      	b.n	801f6d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f7f4:	4628      	mov	r0, r5
 801f7f6:	462a      	mov	r2, r5
 801f7f8:	e7f7      	b.n	801f7ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f7fa:	b015      	add	sp, #84	; 0x54
 801f7fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f800 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801f800:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f804:	880f      	ldrh	r7, [r1, #0]
 801f806:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801f80a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801f80e:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801f812:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801f816:	023c      	lsls	r4, r7, #8
 801f818:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801f81c:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801f820:	017c      	lsls	r4, r7, #5
 801f822:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801f826:	00ff      	lsls	r7, r7, #3
 801f828:	ea4b 0404 	orr.w	r4, fp, r4
 801f82c:	b2ff      	uxtb	r7, r7
 801f82e:	fb05 ca0e 	mla	sl, r5, lr, ip
 801f832:	4327      	orrs	r7, r4
 801f834:	2d00      	cmp	r5, #0
 801f836:	eb02 080a 	add.w	r8, r2, sl
 801f83a:	9701      	str	r7, [sp, #4]
 801f83c:	db7e      	blt.n	801f93c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f83e:	45a9      	cmp	r9, r5
 801f840:	dd7c      	ble.n	801f93c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f842:	f1bc 0f00 	cmp.w	ip, #0
 801f846:	db77      	blt.n	801f938 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f848:	45e6      	cmp	lr, ip
 801f84a:	dd75      	ble.n	801f938 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f84c:	f812 700a 	ldrb.w	r7, [r2, sl]
 801f850:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f854:	441f      	add	r7, r3
 801f856:	f11c 0201 	adds.w	r2, ip, #1
 801f85a:	d472      	bmi.n	801f942 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f85c:	4596      	cmp	lr, r2
 801f85e:	dd70      	ble.n	801f942 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f860:	2800      	cmp	r0, #0
 801f862:	d06e      	beq.n	801f942 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f864:	f898 4001 	ldrb.w	r4, [r8, #1]
 801f868:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801f86c:	441c      	add	r4, r3
 801f86e:	3501      	adds	r5, #1
 801f870:	d46b      	bmi.n	801f94a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f872:	45a9      	cmp	r9, r5
 801f874:	dd69      	ble.n	801f94a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f876:	2e00      	cmp	r6, #0
 801f878:	d067      	beq.n	801f94a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f87a:	f1bc 0f00 	cmp.w	ip, #0
 801f87e:	db62      	blt.n	801f946 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f880:	45e6      	cmp	lr, ip
 801f882:	dd60      	ble.n	801f946 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f884:	f818 500e 	ldrb.w	r5, [r8, lr]
 801f888:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f88c:	441d      	add	r5, r3
 801f88e:	f11c 0201 	adds.w	r2, ip, #1
 801f892:	d45d      	bmi.n	801f950 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f894:	4596      	cmp	lr, r2
 801f896:	dd5b      	ble.n	801f950 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f898:	2800      	cmp	r0, #0
 801f89a:	d059      	beq.n	801f950 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f89c:	44c6      	add	lr, r8
 801f89e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f8a2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f8a6:	4413      	add	r3, r2
 801f8a8:	b280      	uxth	r0, r0
 801f8aa:	b2b2      	uxth	r2, r6
 801f8ac:	fb00 f602 	mul.w	r6, r0, r2
 801f8b0:	0100      	lsls	r0, r0, #4
 801f8b2:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801f8b6:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801f8ba:	1b80      	subs	r0, r0, r6
 801f8bc:	fa1f fc82 	uxth.w	ip, r2
 801f8c0:	b282      	uxth	r2, r0
 801f8c2:	78a0      	ldrb	r0, [r4, #2]
 801f8c4:	f897 e002 	ldrb.w	lr, [r7, #2]
 801f8c8:	f897 9000 	ldrb.w	r9, [r7]
 801f8cc:	787f      	ldrb	r7, [r7, #1]
 801f8ce:	eba8 080c 	sub.w	r8, r8, ip
 801f8d2:	fa1f f888 	uxth.w	r8, r8
 801f8d6:	4350      	muls	r0, r2
 801f8d8:	fb08 0e0e 	mla	lr, r8, lr, r0
 801f8dc:	78a8      	ldrb	r0, [r5, #2]
 801f8de:	fb0c e000 	mla	r0, ip, r0, lr
 801f8e2:	f893 e002 	ldrb.w	lr, [r3, #2]
 801f8e6:	fb06 0e0e 	mla	lr, r6, lr, r0
 801f8ea:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801f8ee:	f894 e000 	ldrb.w	lr, [r4]
 801f8f2:	fb02 fe0e 	mul.w	lr, r2, lr
 801f8f6:	fb08 e909 	mla	r9, r8, r9, lr
 801f8fa:	f895 e000 	ldrb.w	lr, [r5]
 801f8fe:	fb0c 990e 	mla	r9, ip, lr, r9
 801f902:	f893 e000 	ldrb.w	lr, [r3]
 801f906:	785b      	ldrb	r3, [r3, #1]
 801f908:	fb06 9e0e 	mla	lr, r6, lr, r9
 801f90c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801f910:	ea4e 0e00 	orr.w	lr, lr, r0
 801f914:	7860      	ldrb	r0, [r4, #1]
 801f916:	4350      	muls	r0, r2
 801f918:	786a      	ldrb	r2, [r5, #1]
 801f91a:	fb08 0007 	mla	r0, r8, r7, r0
 801f91e:	fb0c 0202 	mla	r2, ip, r2, r0
 801f922:	fb06 2303 	mla	r3, r6, r3, r2
 801f926:	095b      	lsrs	r3, r3, #5
 801f928:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f92c:	ea4e 0303 	orr.w	r3, lr, r3
 801f930:	800b      	strh	r3, [r1, #0]
 801f932:	b003      	add	sp, #12
 801f934:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f938:	af01      	add	r7, sp, #4
 801f93a:	e78c      	b.n	801f856 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801f93c:	ac01      	add	r4, sp, #4
 801f93e:	4627      	mov	r7, r4
 801f940:	e795      	b.n	801f86e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801f942:	ac01      	add	r4, sp, #4
 801f944:	e793      	b.n	801f86e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801f946:	ad01      	add	r5, sp, #4
 801f948:	e7a1      	b.n	801f88e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801f94a:	ab01      	add	r3, sp, #4
 801f94c:	461d      	mov	r5, r3
 801f94e:	e7ab      	b.n	801f8a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801f950:	ab01      	add	r3, sp, #4
 801f952:	e7a9      	b.n	801f8a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801f954 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f958:	b08f      	sub	sp, #60	; 0x3c
 801f95a:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801f95e:	920c      	str	r2, [sp, #48]	; 0x30
 801f960:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801f962:	910a      	str	r1, [sp, #40]	; 0x28
 801f964:	9306      	str	r3, [sp, #24]
 801f966:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801f96a:	900d      	str	r0, [sp, #52]	; 0x34
 801f96c:	6850      	ldr	r0, [r2, #4]
 801f96e:	6812      	ldr	r2, [r2, #0]
 801f970:	fb00 1303 	mla	r3, r0, r3, r1
 801f974:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f978:	9307      	str	r3, [sp, #28]
 801f97a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f97c:	681b      	ldr	r3, [r3, #0]
 801f97e:	9308      	str	r3, [sp, #32]
 801f980:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f982:	685c      	ldr	r4, [r3, #4]
 801f984:	3404      	adds	r4, #4
 801f986:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f988:	2b00      	cmp	r3, #0
 801f98a:	dc03      	bgt.n	801f994 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801f98c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f98e:	2b00      	cmp	r3, #0
 801f990:	f340 81d6 	ble.w	801fd40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801f994:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f996:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f99a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f99e:	1e48      	subs	r0, r1, #1
 801f9a0:	1e56      	subs	r6, r2, #1
 801f9a2:	9b06      	ldr	r3, [sp, #24]
 801f9a4:	2b00      	cmp	r3, #0
 801f9a6:	f340 80b7 	ble.w	801fb18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801f9aa:	ea5f 472b 	movs.w	r7, fp, asr #16
 801f9ae:	ea4f 4325 	mov.w	r3, r5, asr #16
 801f9b2:	d406      	bmi.n	801f9c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f9b4:	4287      	cmp	r7, r0
 801f9b6:	da04      	bge.n	801f9c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f9b8:	2b00      	cmp	r3, #0
 801f9ba:	db02      	blt.n	801f9c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f9bc:	42b3      	cmp	r3, r6
 801f9be:	f2c0 80ac 	blt.w	801fb1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801f9c2:	3701      	adds	r7, #1
 801f9c4:	f100 809d 	bmi.w	801fb02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f9c8:	42b9      	cmp	r1, r7
 801f9ca:	f2c0 809a 	blt.w	801fb02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f9ce:	3301      	adds	r3, #1
 801f9d0:	f100 8097 	bmi.w	801fb02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f9d4:	429a      	cmp	r2, r3
 801f9d6:	f2c0 8094 	blt.w	801fb02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f9da:	9b06      	ldr	r3, [sp, #24]
 801f9dc:	930b      	str	r3, [sp, #44]	; 0x2c
 801f9de:	9b07      	ldr	r3, [sp, #28]
 801f9e0:	9309      	str	r3, [sp, #36]	; 0x24
 801f9e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f9e4:	2b00      	cmp	r3, #0
 801f9e6:	f340 80b5 	ble.w	801fb54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801f9ea:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f9ec:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f9ee:	68c7      	ldr	r7, [r0, #12]
 801f9f0:	6892      	ldr	r2, [r2, #8]
 801f9f2:	ea5f 402b 	movs.w	r0, fp, asr #16
 801f9f6:	ea4f 4625 	mov.w	r6, r5, asr #16
 801f9fa:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801f9fe:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fa02:	f100 80fb 	bmi.w	801fbfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fa06:	f102 3cff 	add.w	ip, r2, #4294967295
 801fa0a:	4560      	cmp	r0, ip
 801fa0c:	f280 80f6 	bge.w	801fbfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fa10:	2e00      	cmp	r6, #0
 801fa12:	f2c0 80f3 	blt.w	801fbfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fa16:	f107 3cff 	add.w	ip, r7, #4294967295
 801fa1a:	4566      	cmp	r6, ip
 801fa1c:	f280 80ee 	bge.w	801fbfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fa20:	b212      	sxth	r2, r2
 801fa22:	fb06 0002 	mla	r0, r6, r2, r0
 801fa26:	9e08      	ldr	r6, [sp, #32]
 801fa28:	1837      	adds	r7, r6, r0
 801fa2a:	5c30      	ldrb	r0, [r6, r0]
 801fa2c:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801fa30:	eb04 0c08 	add.w	ip, r4, r8
 801fa34:	2b00      	cmp	r3, #0
 801fa36:	f000 80d3 	beq.w	801fbe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801fa3a:	787e      	ldrb	r6, [r7, #1]
 801fa3c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801fa40:	4426      	add	r6, r4
 801fa42:	2900      	cmp	r1, #0
 801fa44:	f000 80d4 	beq.w	801fbf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801fa48:	18b8      	adds	r0, r7, r2
 801fa4a:	5cba      	ldrb	r2, [r7, r2]
 801fa4c:	7840      	ldrb	r0, [r0, #1]
 801fa4e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fa52:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fa56:	4422      	add	r2, r4
 801fa58:	4420      	add	r0, r4
 801fa5a:	b29b      	uxth	r3, r3
 801fa5c:	b289      	uxth	r1, r1
 801fa5e:	fb03 f901 	mul.w	r9, r3, r1
 801fa62:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fa66:	011b      	lsls	r3, r3, #4
 801fa68:	b289      	uxth	r1, r1
 801fa6a:	78b7      	ldrb	r7, [r6, #2]
 801fa6c:	f89c a002 	ldrb.w	sl, [ip, #2]
 801fa70:	f89c c001 	ldrb.w	ip, [ip, #1]
 801fa74:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fa78:	eba3 0309 	sub.w	r3, r3, r9
 801fa7c:	b29b      	uxth	r3, r3
 801fa7e:	ebae 0e01 	sub.w	lr, lr, r1
 801fa82:	fa1f fe8e 	uxth.w	lr, lr
 801fa86:	435f      	muls	r7, r3
 801fa88:	fb0e 770a 	mla	r7, lr, sl, r7
 801fa8c:	f892 a002 	ldrb.w	sl, [r2, #2]
 801fa90:	fb01 770a 	mla	r7, r1, sl, r7
 801fa94:	f890 a002 	ldrb.w	sl, [r0, #2]
 801fa98:	fb09 7a0a 	mla	sl, r9, sl, r7
 801fa9c:	f814 7008 	ldrb.w	r7, [r4, r8]
 801faa0:	f896 8000 	ldrb.w	r8, [r6]
 801faa4:	7876      	ldrb	r6, [r6, #1]
 801faa6:	fb03 f808 	mul.w	r8, r3, r8
 801faaa:	fb0e 8807 	mla	r8, lr, r7, r8
 801faae:	7817      	ldrb	r7, [r2, #0]
 801fab0:	fb01 8807 	mla	r8, r1, r7, r8
 801fab4:	7807      	ldrb	r7, [r0, #0]
 801fab6:	fb09 8707 	mla	r7, r9, r7, r8
 801faba:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801fabe:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fac2:	ea47 070a 	orr.w	r7, r7, sl
 801fac6:	4373      	muls	r3, r6
 801fac8:	f892 a001 	ldrb.w	sl, [r2, #1]
 801facc:	fb0e 330c 	mla	r3, lr, ip, r3
 801fad0:	fb01 310a 	mla	r1, r1, sl, r3
 801fad4:	f890 a001 	ldrb.w	sl, [r0, #1]
 801fad8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fada:	fb09 1a0a 	mla	sl, r9, sl, r1
 801fade:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fae2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801fae6:	ea47 070a 	orr.w	r7, r7, sl
 801faea:	801f      	strh	r7, [r3, #0]
 801faec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801faee:	3302      	adds	r3, #2
 801faf0:	9309      	str	r3, [sp, #36]	; 0x24
 801faf2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801faf4:	449b      	add	fp, r3
 801faf6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801faf8:	441d      	add	r5, r3
 801fafa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fafc:	3b01      	subs	r3, #1
 801fafe:	930b      	str	r3, [sp, #44]	; 0x2c
 801fb00:	e76f      	b.n	801f9e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801fb02:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fb04:	449b      	add	fp, r3
 801fb06:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fb08:	441d      	add	r5, r3
 801fb0a:	9b06      	ldr	r3, [sp, #24]
 801fb0c:	3b01      	subs	r3, #1
 801fb0e:	9306      	str	r3, [sp, #24]
 801fb10:	9b07      	ldr	r3, [sp, #28]
 801fb12:	3302      	adds	r3, #2
 801fb14:	9307      	str	r3, [sp, #28]
 801fb16:	e744      	b.n	801f9a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801fb18:	d023      	beq.n	801fb62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801fb1a:	9b06      	ldr	r3, [sp, #24]
 801fb1c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801fb1e:	3b01      	subs	r3, #1
 801fb20:	fb00 b003 	mla	r0, r0, r3, fp
 801fb24:	1400      	asrs	r0, r0, #16
 801fb26:	f53f af58 	bmi.w	801f9da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fb2a:	3901      	subs	r1, #1
 801fb2c:	4288      	cmp	r0, r1
 801fb2e:	f6bf af54 	bge.w	801f9da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fb32:	991c      	ldr	r1, [sp, #112]	; 0x70
 801fb34:	fb01 5303 	mla	r3, r1, r3, r5
 801fb38:	141b      	asrs	r3, r3, #16
 801fb3a:	f53f af4e 	bmi.w	801f9da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fb3e:	3a01      	subs	r2, #1
 801fb40:	4293      	cmp	r3, r2
 801fb42:	f6bf af4a 	bge.w	801f9da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fb46:	9b06      	ldr	r3, [sp, #24]
 801fb48:	9309      	str	r3, [sp, #36]	; 0x24
 801fb4a:	9b07      	ldr	r3, [sp, #28]
 801fb4c:	930b      	str	r3, [sp, #44]	; 0x2c
 801fb4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fb50:	2b00      	cmp	r3, #0
 801fb52:	dc70      	bgt.n	801fc36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801fb54:	9b06      	ldr	r3, [sp, #24]
 801fb56:	9a07      	ldr	r2, [sp, #28]
 801fb58:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801fb5c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fb60:	9307      	str	r3, [sp, #28]
 801fb62:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fb64:	2b00      	cmp	r3, #0
 801fb66:	f340 80eb 	ble.w	801fd40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801fb6a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fb6e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fb72:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fb76:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fb78:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fb7c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fb80:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fb84:	eef0 6a62 	vmov.f32	s13, s5
 801fb88:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fb8c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fb90:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fb94:	ee16 ba90 	vmov	fp, s13
 801fb98:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fb9c:	eef0 6a43 	vmov.f32	s13, s6
 801fba0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fba4:	ee12 2a90 	vmov	r2, s5
 801fba8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fbac:	fb92 f3f3 	sdiv	r3, r2, r3
 801fbb0:	ee13 2a10 	vmov	r2, s6
 801fbb4:	931b      	str	r3, [sp, #108]	; 0x6c
 801fbb6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fbb8:	fb92 f3f3 	sdiv	r3, r2, r3
 801fbbc:	931c      	str	r3, [sp, #112]	; 0x70
 801fbbe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fbc0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fbc2:	3b01      	subs	r3, #1
 801fbc4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fbc8:	930a      	str	r3, [sp, #40]	; 0x28
 801fbca:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fbcc:	bf08      	it	eq
 801fbce:	4613      	moveq	r3, r2
 801fbd0:	ee16 5a90 	vmov	r5, s13
 801fbd4:	9306      	str	r3, [sp, #24]
 801fbd6:	eeb0 3a67 	vmov.f32	s6, s15
 801fbda:	eef0 2a47 	vmov.f32	s5, s14
 801fbde:	e6d2      	b.n	801f986 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801fbe0:	b149      	cbz	r1, 801fbf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801fbe2:	5cba      	ldrb	r2, [r7, r2]
 801fbe4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fbe8:	4422      	add	r2, r4
 801fbea:	4660      	mov	r0, ip
 801fbec:	4666      	mov	r6, ip
 801fbee:	e734      	b.n	801fa5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801fbf0:	4660      	mov	r0, ip
 801fbf2:	4662      	mov	r2, ip
 801fbf4:	e731      	b.n	801fa5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801fbf6:	4660      	mov	r0, ip
 801fbf8:	4662      	mov	r2, ip
 801fbfa:	e7f7      	b.n	801fbec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801fbfc:	f110 0c01 	adds.w	ip, r0, #1
 801fc00:	f53f af74 	bmi.w	801faec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fc04:	4562      	cmp	r2, ip
 801fc06:	f6ff af71 	blt.w	801faec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fc0a:	f116 0c01 	adds.w	ip, r6, #1
 801fc0e:	f53f af6d 	bmi.w	801faec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fc12:	4567      	cmp	r7, ip
 801fc14:	f6ff af6a 	blt.w	801faec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fc18:	b23f      	sxth	r7, r7
 801fc1a:	b212      	sxth	r2, r2
 801fc1c:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801fc20:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801fc24:	9200      	str	r2, [sp, #0]
 801fc26:	9701      	str	r7, [sp, #4]
 801fc28:	4623      	mov	r3, r4
 801fc2a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801fc2e:	980d      	ldr	r0, [sp, #52]	; 0x34
 801fc30:	f7ff fde6 	bl	801f800 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801fc34:	e75a      	b.n	801faec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fc36:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801fc38:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801fc3c:	ea4f 462b 	mov.w	r6, fp, asr #16
 801fc40:	1428      	asrs	r0, r5, #16
 801fc42:	fb02 6000 	mla	r0, r2, r0, r6
 801fc46:	9e08      	ldr	r6, [sp, #32]
 801fc48:	f816 8000 	ldrb.w	r8, [r6, r0]
 801fc4c:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801fc50:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801fc54:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fc58:	1837      	adds	r7, r6, r0
 801fc5a:	eb04 0c08 	add.w	ip, r4, r8
 801fc5e:	2b00      	cmp	r3, #0
 801fc60:	d060      	beq.n	801fd24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801fc62:	787e      	ldrb	r6, [r7, #1]
 801fc64:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801fc68:	4426      	add	r6, r4
 801fc6a:	2900      	cmp	r1, #0
 801fc6c:	d062      	beq.n	801fd34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801fc6e:	18b8      	adds	r0, r7, r2
 801fc70:	5cba      	ldrb	r2, [r7, r2]
 801fc72:	7840      	ldrb	r0, [r0, #1]
 801fc74:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fc78:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fc7c:	4422      	add	r2, r4
 801fc7e:	4420      	add	r0, r4
 801fc80:	b29b      	uxth	r3, r3
 801fc82:	b289      	uxth	r1, r1
 801fc84:	fb03 f901 	mul.w	r9, r3, r1
 801fc88:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fc8c:	011b      	lsls	r3, r3, #4
 801fc8e:	b289      	uxth	r1, r1
 801fc90:	78b7      	ldrb	r7, [r6, #2]
 801fc92:	f89c a002 	ldrb.w	sl, [ip, #2]
 801fc96:	f89c c001 	ldrb.w	ip, [ip, #1]
 801fc9a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fc9e:	eba3 0309 	sub.w	r3, r3, r9
 801fca2:	b29b      	uxth	r3, r3
 801fca4:	ebae 0e01 	sub.w	lr, lr, r1
 801fca8:	fa1f fe8e 	uxth.w	lr, lr
 801fcac:	435f      	muls	r7, r3
 801fcae:	fb0e 770a 	mla	r7, lr, sl, r7
 801fcb2:	f892 a002 	ldrb.w	sl, [r2, #2]
 801fcb6:	fb01 770a 	mla	r7, r1, sl, r7
 801fcba:	f890 a002 	ldrb.w	sl, [r0, #2]
 801fcbe:	fb09 7a0a 	mla	sl, r9, sl, r7
 801fcc2:	f814 7008 	ldrb.w	r7, [r4, r8]
 801fcc6:	f896 8000 	ldrb.w	r8, [r6]
 801fcca:	7876      	ldrb	r6, [r6, #1]
 801fccc:	fb03 f808 	mul.w	r8, r3, r8
 801fcd0:	fb0e 8807 	mla	r8, lr, r7, r8
 801fcd4:	7817      	ldrb	r7, [r2, #0]
 801fcd6:	fb01 8807 	mla	r8, r1, r7, r8
 801fcda:	7807      	ldrb	r7, [r0, #0]
 801fcdc:	fb09 8707 	mla	r7, r9, r7, r8
 801fce0:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801fce4:	4373      	muls	r3, r6
 801fce6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fcea:	7856      	ldrb	r6, [r2, #1]
 801fcec:	ea47 070a 	orr.w	r7, r7, sl
 801fcf0:	fb0e 330c 	mla	r3, lr, ip, r3
 801fcf4:	f890 a001 	ldrb.w	sl, [r0, #1]
 801fcf8:	fb01 3306 	mla	r3, r1, r6, r3
 801fcfc:	fb09 3a0a 	mla	sl, r9, sl, r3
 801fd00:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fd04:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fd06:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801fd0a:	ea47 070a 	orr.w	r7, r7, sl
 801fd0e:	f823 7b02 	strh.w	r7, [r3], #2
 801fd12:	930b      	str	r3, [sp, #44]	; 0x2c
 801fd14:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fd16:	449b      	add	fp, r3
 801fd18:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fd1a:	441d      	add	r5, r3
 801fd1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fd1e:	3b01      	subs	r3, #1
 801fd20:	9309      	str	r3, [sp, #36]	; 0x24
 801fd22:	e714      	b.n	801fb4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801fd24:	b149      	cbz	r1, 801fd3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801fd26:	5cba      	ldrb	r2, [r7, r2]
 801fd28:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fd2c:	4422      	add	r2, r4
 801fd2e:	4660      	mov	r0, ip
 801fd30:	4666      	mov	r6, ip
 801fd32:	e7a5      	b.n	801fc80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801fd34:	4660      	mov	r0, ip
 801fd36:	4662      	mov	r2, ip
 801fd38:	e7a2      	b.n	801fc80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801fd3a:	4660      	mov	r0, ip
 801fd3c:	4662      	mov	r2, ip
 801fd3e:	e7f7      	b.n	801fd30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801fd40:	b00f      	add	sp, #60	; 0x3c
 801fd42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fd46 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801fd46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fd4a:	b085      	sub	sp, #20
 801fd4c:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801fd50:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801fd54:	9102      	str	r1, [sp, #8]
 801fd56:	2c00      	cmp	r4, #0
 801fd58:	fb04 710c 	mla	r1, r4, ip, r7
 801fd5c:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801fd60:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801fd64:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801fd68:	eb02 0e01 	add.w	lr, r2, r1
 801fd6c:	f2c0 8122 	blt.w	801ffb4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801fd70:	45a0      	cmp	r8, r4
 801fd72:	f340 811f 	ble.w	801ffb4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801fd76:	2f00      	cmp	r7, #0
 801fd78:	f2c0 811a 	blt.w	801ffb0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801fd7c:	45bc      	cmp	ip, r7
 801fd7e:	f340 8117 	ble.w	801ffb0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801fd82:	5c52      	ldrb	r2, [r2, r1]
 801fd84:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801fd88:	1c7a      	adds	r2, r7, #1
 801fd8a:	f100 8116 	bmi.w	801ffba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801fd8e:	4594      	cmp	ip, r2
 801fd90:	f340 8113 	ble.w	801ffba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801fd94:	2e00      	cmp	r6, #0
 801fd96:	f000 8112 	beq.w	801ffbe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801fd9a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801fd9e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801fda2:	3401      	adds	r4, #1
 801fda4:	f100 810f 	bmi.w	801ffc6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801fda8:	45a0      	cmp	r8, r4
 801fdaa:	f340 810c 	ble.w	801ffc6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801fdae:	2800      	cmp	r0, #0
 801fdb0:	f000 810c 	beq.w	801ffcc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801fdb4:	2f00      	cmp	r7, #0
 801fdb6:	f2c0 8104 	blt.w	801ffc2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801fdba:	45bc      	cmp	ip, r7
 801fdbc:	f340 8101 	ble.w	801ffc2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801fdc0:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801fdc4:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801fdc8:	3701      	adds	r7, #1
 801fdca:	f100 8102 	bmi.w	801ffd2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801fdce:	45bc      	cmp	ip, r7
 801fdd0:	f340 80ff 	ble.w	801ffd2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801fdd4:	2e00      	cmp	r6, #0
 801fdd6:	f000 80fe 	beq.w	801ffd6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801fdda:	44f4      	add	ip, lr
 801fddc:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801fde0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801fde4:	b2b6      	uxth	r6, r6
 801fde6:	b280      	uxth	r0, r0
 801fde8:	fb00 fe06 	mul.w	lr, r0, r6
 801fdec:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801fdf0:	0136      	lsls	r6, r6, #4
 801fdf2:	eba6 070e 	sub.w	r7, r6, lr
 801fdf6:	b280      	uxth	r0, r0
 801fdf8:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801fdfc:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801fe00:	b2bf      	uxth	r7, r7
 801fe02:	1a1b      	subs	r3, r3, r0
 801fe04:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801fe08:	b29b      	uxth	r3, r3
 801fe0a:	fb0a f607 	mul.w	r6, sl, r7
 801fe0e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801fe12:	fb0b 6603 	mla	r6, fp, r3, r6
 801fe16:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801fe1a:	fb00 6609 	mla	r6, r0, r9, r6
 801fe1e:	fb0e 6608 	mla	r6, lr, r8, r6
 801fe22:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801fe26:	9600      	str	r6, [sp, #0]
 801fe28:	2e00      	cmp	r6, #0
 801fe2a:	f000 80be 	beq.w	801ffaa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801fe2e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801fe32:	fb0b fc0c 	mul.w	ip, fp, ip
 801fe36:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801fe3a:	fb0b f505 	mul.w	r5, fp, r5
 801fe3e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801fe42:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801fe46:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801fe4a:	44dc      	add	ip, fp
 801fe4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fe50:	9501      	str	r5, [sp, #4]
 801fe52:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801fe56:	9503      	str	r5, [sp, #12]
 801fe58:	9d01      	ldr	r5, [sp, #4]
 801fe5a:	9e02      	ldr	r6, [sp, #8]
 801fe5c:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801fe60:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801fe64:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801fe68:	fb0a fc0c 	mul.w	ip, sl, ip
 801fe6c:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801fe70:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801fe74:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801fe78:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801fe7c:	4465      	add	r5, ip
 801fe7e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801fe82:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801fe86:	fb09 fc0c 	mul.w	ip, r9, ip
 801fe8a:	fb09 f904 	mul.w	r9, r9, r4
 801fe8e:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801fe92:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801fe96:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801fe9a:	fb08 f404 	mul.w	r4, r8, r4
 801fe9e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801fea2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801fea6:	fb08 f802 	mul.w	r8, r8, r2
 801feaa:	fb0a fa01 	mul.w	sl, sl, r1
 801feae:	0a22      	lsrs	r2, r4, #8
 801feb0:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801feb4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801feb8:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801febc:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801fec0:	4414      	add	r4, r2
 801fec2:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801fec6:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801feca:	0a2d      	lsrs	r5, r5, #8
 801fecc:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801fed0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801fed4:	9a03      	ldr	r2, [sp, #12]
 801fed6:	8836      	ldrh	r6, [r6, #0]
 801fed8:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801fedc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801fee0:	437d      	muls	r5, r7
 801fee2:	4461      	add	r1, ip
 801fee4:	0a24      	lsrs	r4, r4, #8
 801fee6:	fb02 5503 	mla	r5, r2, r3, r5
 801feea:	0a09      	lsrs	r1, r1, #8
 801feec:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801fef0:	fb04 540e 	mla	r4, r4, lr, r5
 801fef4:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801fef8:	fb01 4100 	mla	r1, r1, r0, r4
 801fefc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ff00:	0a09      	lsrs	r1, r1, #8
 801ff02:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ff06:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801ff0a:	fb07 f70a 	mul.w	r7, r7, sl
 801ff0e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801ff12:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801ff16:	fb03 7101 	mla	r1, r3, r1, r7
 801ff1a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ff1e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801ff22:	fb0e 1e08 	mla	lr, lr, r8, r1
 801ff26:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801ff2a:	fb00 e101 	mla	r1, r0, r1, lr
 801ff2e:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801ff32:	9a00      	ldr	r2, [sp, #0]
 801ff34:	b287      	uxth	r7, r0
 801ff36:	437a      	muls	r2, r7
 801ff38:	0a09      	lsrs	r1, r1, #8
 801ff3a:	1c53      	adds	r3, r2, #1
 801ff3c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ff40:	4321      	orrs	r1, r4
 801ff42:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ff46:	1235      	asrs	r5, r6, #8
 801ff48:	0c0a      	lsrs	r2, r1, #16
 801ff4a:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801ff4e:	b2db      	uxtb	r3, r3
 801ff50:	fb12 f207 	smulbb	r2, r2, r7
 801ff54:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ff58:	fb05 2503 	mla	r5, r5, r3, r2
 801ff5c:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801ff60:	10f2      	asrs	r2, r6, #3
 801ff62:	b2c8      	uxtb	r0, r1
 801ff64:	00f6      	lsls	r6, r6, #3
 801ff66:	fb14 f407 	smulbb	r4, r4, r7
 801ff6a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ff6e:	b2f6      	uxtb	r6, r6
 801ff70:	fb10 f007 	smulbb	r0, r0, r7
 801ff74:	fb02 4203 	mla	r2, r2, r3, r4
 801ff78:	b2ad      	uxth	r5, r5
 801ff7a:	fb06 0303 	mla	r3, r6, r3, r0
 801ff7e:	b299      	uxth	r1, r3
 801ff80:	b294      	uxth	r4, r2
 801ff82:	1c6b      	adds	r3, r5, #1
 801ff84:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ff88:	1c62      	adds	r2, r4, #1
 801ff8a:	1c4b      	adds	r3, r1, #1
 801ff8c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ff90:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801ff94:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ff98:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ff9c:	0952      	lsrs	r2, r2, #5
 801ff9e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ffa2:	432b      	orrs	r3, r5
 801ffa4:	4313      	orrs	r3, r2
 801ffa6:	9a02      	ldr	r2, [sp, #8]
 801ffa8:	8013      	strh	r3, [r2, #0]
 801ffaa:	b005      	add	sp, #20
 801ffac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ffb0:	2500      	movs	r5, #0
 801ffb2:	e6e9      	b.n	801fd88 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801ffb4:	2100      	movs	r1, #0
 801ffb6:	460d      	mov	r5, r1
 801ffb8:	e6f3      	b.n	801fda2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ffba:	2100      	movs	r1, #0
 801ffbc:	e6f1      	b.n	801fda2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ffbe:	4631      	mov	r1, r6
 801ffc0:	e6ef      	b.n	801fda2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ffc2:	2400      	movs	r4, #0
 801ffc4:	e700      	b.n	801fdc8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801ffc6:	2200      	movs	r2, #0
 801ffc8:	4614      	mov	r4, r2
 801ffca:	e70b      	b.n	801fde4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ffcc:	4602      	mov	r2, r0
 801ffce:	4604      	mov	r4, r0
 801ffd0:	e708      	b.n	801fde4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ffd2:	2200      	movs	r2, #0
 801ffd4:	e706      	b.n	801fde4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ffd6:	4632      	mov	r2, r6
 801ffd8:	e704      	b.n	801fde4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801ffda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ffda:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ffde:	b09f      	sub	sp, #124	; 0x7c
 801ffe0:	921b      	str	r2, [sp, #108]	; 0x6c
 801ffe2:	9309      	str	r3, [sp, #36]	; 0x24
 801ffe4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801ffe6:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801ffea:	931c      	str	r3, [sp, #112]	; 0x70
 801ffec:	9119      	str	r1, [sp, #100]	; 0x64
 801ffee:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801fff2:	901d      	str	r0, [sp, #116]	; 0x74
 801fff4:	6850      	ldr	r0, [r2, #4]
 801fff6:	6812      	ldr	r2, [r2, #0]
 801fff8:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801fffa:	fb00 1303 	mla	r3, r0, r3, r1
 801fffe:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020002:	930c      	str	r3, [sp, #48]	; 0x30
 8020004:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020006:	681b      	ldr	r3, [r3, #0]
 8020008:	9312      	str	r3, [sp, #72]	; 0x48
 802000a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802000c:	685e      	ldr	r6, [r3, #4]
 802000e:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8020012:	930d      	str	r3, [sp, #52]	; 0x34
 8020014:	3604      	adds	r6, #4
 8020016:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020018:	2b00      	cmp	r3, #0
 802001a:	dc03      	bgt.n	8020024 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802001c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802001e:	2b00      	cmp	r3, #0
 8020020:	f340 8388 	ble.w	8020734 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8020024:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020026:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802002a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802002e:	1e48      	subs	r0, r1, #1
 8020030:	1e57      	subs	r7, r2, #1
 8020032:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020034:	2b00      	cmp	r3, #0
 8020036:	f340 8195 	ble.w	8020364 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802003a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802003c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020040:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020044:	d406      	bmi.n	8020054 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020046:	4584      	cmp	ip, r0
 8020048:	da04      	bge.n	8020054 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802004a:	2b00      	cmp	r3, #0
 802004c:	db02      	blt.n	8020054 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802004e:	42bb      	cmp	r3, r7
 8020050:	f2c0 8189 	blt.w	8020366 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8020054:	f11c 0c01 	adds.w	ip, ip, #1
 8020058:	f100 8177 	bmi.w	802034a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802005c:	4561      	cmp	r1, ip
 802005e:	f2c0 8174 	blt.w	802034a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8020062:	3301      	adds	r3, #1
 8020064:	f100 8171 	bmi.w	802034a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8020068:	429a      	cmp	r2, r3
 802006a:	f2c0 816e 	blt.w	802034a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802006e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020070:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8020072:	931a      	str	r3, [sp, #104]	; 0x68
 8020074:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8020076:	2b00      	cmp	r3, #0
 8020078:	f340 8193 	ble.w	80203a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 802007c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802007e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020082:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020084:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8020088:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802008a:	141b      	asrs	r3, r3, #16
 802008c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020090:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020094:	f100 81d6 	bmi.w	8020444 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8020098:	f100 38ff 	add.w	r8, r0, #4294967295
 802009c:	4543      	cmp	r3, r8
 802009e:	f280 81d1 	bge.w	8020444 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80200a2:	f1bc 0f00 	cmp.w	ip, #0
 80200a6:	f2c0 81cd 	blt.w	8020444 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80200aa:	f10e 38ff 	add.w	r8, lr, #4294967295
 80200ae:	45c4      	cmp	ip, r8
 80200b0:	f280 81c8 	bge.w	8020444 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80200b4:	b200      	sxth	r0, r0
 80200b6:	fb0c 3300 	mla	r3, ip, r0, r3
 80200ba:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80200bc:	eb04 0803 	add.w	r8, r4, r3
 80200c0:	5ce3      	ldrb	r3, [r4, r3]
 80200c2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80200c6:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80200ca:	2a00      	cmp	r2, #0
 80200cc:	f000 81af 	beq.w	802042e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80200d0:	f898 c001 	ldrb.w	ip, [r8, #1]
 80200d4:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80200d8:	940e      	str	r4, [sp, #56]	; 0x38
 80200da:	0e24      	lsrs	r4, r4, #24
 80200dc:	9415      	str	r4, [sp, #84]	; 0x54
 80200de:	b179      	cbz	r1, 8020100 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80200e0:	eb08 0c00 	add.w	ip, r8, r0
 80200e4:	f818 0000 	ldrb.w	r0, [r8, r0]
 80200e8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80200ec:	900a      	str	r0, [sp, #40]	; 0x28
 80200ee:	0e00      	lsrs	r0, r0, #24
 80200f0:	9013      	str	r0, [sp, #76]	; 0x4c
 80200f2:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80200f6:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80200fa:	900f      	str	r0, [sp, #60]	; 0x3c
 80200fc:	0e00      	lsrs	r0, r0, #24
 80200fe:	9016      	str	r0, [sp, #88]	; 0x58
 8020100:	b292      	uxth	r2, r2
 8020102:	b289      	uxth	r1, r1
 8020104:	fb02 f901 	mul.w	r9, r2, r1
 8020108:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802010c:	0112      	lsls	r2, r2, #4
 802010e:	eba2 0809 	sub.w	r8, r2, r9
 8020112:	b289      	uxth	r1, r1
 8020114:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020118:	9815      	ldr	r0, [sp, #84]	; 0x54
 802011a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802011c:	fa1f f888 	uxth.w	r8, r8
 8020120:	1a52      	subs	r2, r2, r1
 8020122:	b292      	uxth	r2, r2
 8020124:	fb08 f000 	mul.w	r0, r8, r0
 8020128:	fb02 000e 	mla	r0, r2, lr, r0
 802012c:	fb01 0004 	mla	r0, r1, r4, r0
 8020130:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020132:	fb09 0004 	mla	r0, r9, r4, r0
 8020136:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802013a:	2800      	cmp	r0, #0
 802013c:	f000 80fa 	beq.w	8020334 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020140:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8020144:	d01b      	beq.n	802017e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020146:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802014a:	fb0e fa0a 	mul.w	sl, lr, sl
 802014e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020152:	fb0e fe03 	mul.w	lr, lr, r3
 8020156:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802015a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802015e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020162:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8020166:	4453      	add	r3, sl
 8020168:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802016c:	0a1b      	lsrs	r3, r3, #8
 802016e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020172:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020176:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802017a:	ea43 030c 	orr.w	r3, r3, ip
 802017e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020180:	2cff      	cmp	r4, #255	; 0xff
 8020182:	d021      	beq.n	80201c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020184:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020186:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802018a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802018c:	fb04 fb0b 	mul.w	fp, r4, fp
 8020190:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020192:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020196:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020198:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802019c:	fb04 fa0a 	mul.w	sl, r4, sl
 80201a0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80201a4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80201a8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80201ac:	44de      	add	lr, fp
 80201ae:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80201b2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80201b6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80201ba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80201be:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80201c2:	ea4e 040a 	orr.w	r4, lr, sl
 80201c6:	940e      	str	r4, [sp, #56]	; 0x38
 80201c8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80201ca:	2cff      	cmp	r4, #255	; 0xff
 80201cc:	d021      	beq.n	8020212 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80201ce:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80201d0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80201d4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80201d6:	fb04 fb0b 	mul.w	fp, r4, fp
 80201da:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80201dc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80201e0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80201e2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80201e6:	fb04 fa0a 	mul.w	sl, r4, sl
 80201ea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80201ee:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80201f2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80201f6:	44de      	add	lr, fp
 80201f8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80201fc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020200:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020204:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020208:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802020c:	ea4e 040a 	orr.w	r4, lr, sl
 8020210:	940a      	str	r4, [sp, #40]	; 0x28
 8020212:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020214:	2cff      	cmp	r4, #255	; 0xff
 8020216:	d021      	beq.n	802025c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8020218:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802021a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802021e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020220:	fb04 fb0b 	mul.w	fp, r4, fp
 8020224:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020226:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802022a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802022c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020230:	fb04 fa0a 	mul.w	sl, r4, sl
 8020234:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020238:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802023c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020240:	44de      	add	lr, fp
 8020242:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020246:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802024a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802024e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020252:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020256:	ea4e 040a 	orr.w	r4, lr, sl
 802025a:	940f      	str	r4, [sp, #60]	; 0x3c
 802025c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802025e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020262:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020264:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8020268:	fb08 fc0c 	mul.w	ip, r8, ip
 802026c:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020270:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020274:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020276:	fb01 cc0e 	mla	ip, r1, lr, ip
 802027a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802027e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020280:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020284:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8020288:	fb08 f80e 	mul.w	r8, r8, lr
 802028c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020290:	fb02 8303 	mla	r3, r2, r3, r8
 8020294:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020296:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020298:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802029c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802029e:	fb01 330a 	mla	r3, r1, sl, r3
 80202a2:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80202a6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80202a8:	fb09 3901 	mla	r9, r9, r1, r3
 80202ac:	4342      	muls	r2, r0
 80202ae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80202b2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80202b6:	883b      	ldrh	r3, [r7, #0]
 80202b8:	1c50      	adds	r0, r2, #1
 80202ba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80202be:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80202c2:	ea4c 0c09 	orr.w	ip, ip, r9
 80202c6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80202ca:	1219      	asrs	r1, r3, #8
 80202cc:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80202d0:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80202d4:	b2c0      	uxtb	r0, r0
 80202d6:	fb12 f204 	smulbb	r2, r2, r4
 80202da:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80202de:	fb01 2100 	mla	r1, r1, r0, r2
 80202e2:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80202e6:	10da      	asrs	r2, r3, #3
 80202e8:	fa5f fc8c 	uxtb.w	ip, ip
 80202ec:	00db      	lsls	r3, r3, #3
 80202ee:	fb1c fc04 	smulbb	ip, ip, r4
 80202f2:	b2db      	uxtb	r3, r3
 80202f4:	b289      	uxth	r1, r1
 80202f6:	fb03 c300 	mla	r3, r3, r0, ip
 80202fa:	fa1f fc83 	uxth.w	ip, r3
 80202fe:	1c4b      	adds	r3, r1, #1
 8020300:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020304:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020308:	fb1e fe04 	smulbb	lr, lr, r4
 802030c:	f10c 0301 	add.w	r3, ip, #1
 8020310:	fb02 e200 	mla	r2, r2, r0, lr
 8020314:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8020318:	b292      	uxth	r2, r2
 802031a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802031e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020322:	430b      	orrs	r3, r1
 8020324:	1c51      	adds	r1, r2, #1
 8020326:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802032a:	0952      	lsrs	r2, r2, #5
 802032c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020330:	4313      	orrs	r3, r2
 8020332:	803b      	strh	r3, [r7, #0]
 8020334:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020336:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020338:	441a      	add	r2, r3
 802033a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802033c:	9229      	str	r2, [sp, #164]	; 0xa4
 802033e:	441d      	add	r5, r3
 8020340:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8020342:	3b01      	subs	r3, #1
 8020344:	3702      	adds	r7, #2
 8020346:	931a      	str	r3, [sp, #104]	; 0x68
 8020348:	e694      	b.n	8020074 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802034a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802034c:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802034e:	441c      	add	r4, r3
 8020350:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020352:	9429      	str	r4, [sp, #164]	; 0xa4
 8020354:	441d      	add	r5, r3
 8020356:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020358:	3b01      	subs	r3, #1
 802035a:	9309      	str	r3, [sp, #36]	; 0x24
 802035c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802035e:	3302      	adds	r3, #2
 8020360:	930c      	str	r3, [sp, #48]	; 0x30
 8020362:	e666      	b.n	8020032 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020364:	d024      	beq.n	80203b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8020366:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020368:	982b      	ldr	r0, [sp, #172]	; 0xac
 802036a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802036c:	3b01      	subs	r3, #1
 802036e:	fb00 4003 	mla	r0, r0, r3, r4
 8020372:	1400      	asrs	r0, r0, #16
 8020374:	f53f ae7b 	bmi.w	802006e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020378:	3901      	subs	r1, #1
 802037a:	4288      	cmp	r0, r1
 802037c:	f6bf ae77 	bge.w	802006e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020380:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8020382:	fb01 5303 	mla	r3, r1, r3, r5
 8020386:	141b      	asrs	r3, r3, #16
 8020388:	f53f ae71 	bmi.w	802006e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802038c:	3a01      	subs	r2, #1
 802038e:	4293      	cmp	r3, r2
 8020390:	f6bf ae6d 	bge.w	802006e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020394:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8020398:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 802039c:	f1bb 0f00 	cmp.w	fp, #0
 80203a0:	dc70      	bgt.n	8020484 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80203a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80203a4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80203a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80203aa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80203ae:	930c      	str	r3, [sp, #48]	; 0x30
 80203b0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80203b2:	2b00      	cmp	r3, #0
 80203b4:	f340 81be 	ble.w	8020734 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80203b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80203bc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80203c0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80203c4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80203c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80203ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 80203ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80203d2:	eef0 6a62 	vmov.f32	s13, s5
 80203d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80203da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80203de:	ee77 2a62 	vsub.f32	s5, s14, s5
 80203e2:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80203e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80203ea:	eef0 6a43 	vmov.f32	s13, s6
 80203ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80203f2:	ee12 2a90 	vmov	r2, s5
 80203f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80203fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80203fe:	ee13 2a10 	vmov	r2, s6
 8020402:	932b      	str	r3, [sp, #172]	; 0xac
 8020404:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020406:	fb92 f3f3 	sdiv	r3, r2, r3
 802040a:	932c      	str	r3, [sp, #176]	; 0xb0
 802040c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802040e:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8020410:	3b01      	subs	r3, #1
 8020412:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020416:	9319      	str	r3, [sp, #100]	; 0x64
 8020418:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802041a:	bf08      	it	eq
 802041c:	4613      	moveq	r3, r2
 802041e:	ee16 5a90 	vmov	r5, s13
 8020422:	9309      	str	r3, [sp, #36]	; 0x24
 8020424:	eeb0 3a67 	vmov.f32	s6, s15
 8020428:	eef0 2a47 	vmov.f32	s5, s14
 802042c:	e5f3      	b.n	8020016 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802042e:	2900      	cmp	r1, #0
 8020430:	f43f ae66 	beq.w	8020100 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020434:	f818 0000 	ldrb.w	r0, [r8, r0]
 8020438:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802043c:	900a      	str	r0, [sp, #40]	; 0x28
 802043e:	0e00      	lsrs	r0, r0, #24
 8020440:	9013      	str	r0, [sp, #76]	; 0x4c
 8020442:	e65d      	b.n	8020100 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020444:	f113 0801 	adds.w	r8, r3, #1
 8020448:	f53f af74 	bmi.w	8020334 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802044c:	4540      	cmp	r0, r8
 802044e:	f6ff af71 	blt.w	8020334 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020452:	f11c 0801 	adds.w	r8, ip, #1
 8020456:	f53f af6d 	bmi.w	8020334 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802045a:	45c6      	cmp	lr, r8
 802045c:	f6ff af6a 	blt.w	8020334 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020460:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8020462:	9302      	str	r3, [sp, #8]
 8020464:	b200      	sxth	r0, r0
 8020466:	fa0f f38e 	sxth.w	r3, lr
 802046a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 802046e:	e9cd c203 	strd	ip, r2, [sp, #12]
 8020472:	9301      	str	r3, [sp, #4]
 8020474:	9000      	str	r0, [sp, #0]
 8020476:	4633      	mov	r3, r6
 8020478:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802047a:	981d      	ldr	r0, [sp, #116]	; 0x74
 802047c:	4639      	mov	r1, r7
 802047e:	f7ff fc62 	bl	801fd46 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8020482:	e757      	b.n	8020334 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020484:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020486:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020488:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802048c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802048e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020492:	1427      	asrs	r7, r4, #16
 8020494:	142b      	asrs	r3, r5, #16
 8020496:	fb01 7303 	mla	r3, r1, r3, r7
 802049a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802049c:	18e7      	adds	r7, r4, r3
 802049e:	5ce3      	ldrb	r3, [r4, r3]
 80204a0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80204a4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80204a8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80204ac:	2a00      	cmp	r2, #0
 80204ae:	f000 8137 	beq.w	8020720 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80204b2:	f897 e001 	ldrb.w	lr, [r7, #1]
 80204b6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80204ba:	9410      	str	r4, [sp, #64]	; 0x40
 80204bc:	0e24      	lsrs	r4, r4, #24
 80204be:	9417      	str	r4, [sp, #92]	; 0x5c
 80204c0:	b170      	cbz	r0, 80204e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80204c2:	eb07 0e01 	add.w	lr, r7, r1
 80204c6:	5c79      	ldrb	r1, [r7, r1]
 80204c8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80204cc:	910b      	str	r1, [sp, #44]	; 0x2c
 80204ce:	0e09      	lsrs	r1, r1, #24
 80204d0:	9114      	str	r1, [sp, #80]	; 0x50
 80204d2:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80204d6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80204da:	9111      	str	r1, [sp, #68]	; 0x44
 80204dc:	0e09      	lsrs	r1, r1, #24
 80204de:	9118      	str	r1, [sp, #96]	; 0x60
 80204e0:	b292      	uxth	r2, r2
 80204e2:	b280      	uxth	r0, r0
 80204e4:	fb02 f800 	mul.w	r8, r2, r0
 80204e8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80204ec:	0112      	lsls	r2, r2, #4
 80204ee:	eba2 0e08 	sub.w	lr, r2, r8
 80204f2:	b280      	uxth	r0, r0
 80204f4:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80204f8:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80204fa:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80204fc:	fa1f fe8e 	uxth.w	lr, lr
 8020500:	1a12      	subs	r2, r2, r0
 8020502:	b292      	uxth	r2, r2
 8020504:	fb0e f101 	mul.w	r1, lr, r1
 8020508:	fb02 110c 	mla	r1, r2, ip, r1
 802050c:	fb00 1104 	mla	r1, r0, r4, r1
 8020510:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020512:	fb08 1104 	mla	r1, r8, r4, r1
 8020516:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802051a:	2900      	cmp	r1, #0
 802051c:	f000 80f5 	beq.w	802070a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8020520:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8020524:	d019      	beq.n	802055a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8020526:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802052a:	fb0c fa0a 	mul.w	sl, ip, sl
 802052e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020532:	fb0c fc03 	mul.w	ip, ip, r3
 8020536:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802053a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802053e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020542:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8020546:	4453      	add	r3, sl
 8020548:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802054c:	0a1b      	lsrs	r3, r3, #8
 802054e:	0a3f      	lsrs	r7, r7, #8
 8020550:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020554:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020558:	433b      	orrs	r3, r7
 802055a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802055c:	2cff      	cmp	r4, #255	; 0xff
 802055e:	d020      	beq.n	80205a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8020560:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020562:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020566:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020568:	4367      	muls	r7, r4
 802056a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802056c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020570:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020572:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020576:	fb04 fa0a 	mul.w	sl, r4, sl
 802057a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802057e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020582:	44bc      	add	ip, r7
 8020584:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020588:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802058c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020590:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020594:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020598:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802059c:	ea4c 040a 	orr.w	r4, ip, sl
 80205a0:	9410      	str	r4, [sp, #64]	; 0x40
 80205a2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80205a4:	2cff      	cmp	r4, #255	; 0xff
 80205a6:	d020      	beq.n	80205ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 80205a8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80205aa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80205ae:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80205b0:	4367      	muls	r7, r4
 80205b2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80205b4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80205b8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80205ba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80205be:	fb04 fa0a 	mul.w	sl, r4, sl
 80205c2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80205c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80205ca:	44bc      	add	ip, r7
 80205cc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80205d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80205d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80205d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80205dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80205e0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80205e4:	ea4c 040a 	orr.w	r4, ip, sl
 80205e8:	940b      	str	r4, [sp, #44]	; 0x2c
 80205ea:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80205ec:	2cff      	cmp	r4, #255	; 0xff
 80205ee:	d020      	beq.n	8020632 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80205f0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80205f2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80205f6:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80205f8:	4367      	muls	r7, r4
 80205fa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80205fc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020600:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020602:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020606:	fb04 fa0a 	mul.w	sl, r4, sl
 802060a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802060e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020612:	44bc      	add	ip, r7
 8020614:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020618:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802061c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020620:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020624:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020628:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802062c:	ea4c 040a 	orr.w	r4, ip, sl
 8020630:	9411      	str	r4, [sp, #68]	; 0x44
 8020632:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020634:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020638:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802063a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802063e:	fb0e f707 	mul.w	r7, lr, r7
 8020642:	fb02 770c 	mla	r7, r2, ip, r7
 8020646:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802064a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802064c:	fb00 770c 	mla	r7, r0, ip, r7
 8020650:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020654:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020656:	fb08 770c 	mla	r7, r8, ip, r7
 802065a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 802065e:	fb0e fe0c 	mul.w	lr, lr, ip
 8020662:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020666:	fb02 e303 	mla	r3, r2, r3, lr
 802066a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802066c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802066e:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020672:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8020674:	fb00 330a 	mla	r3, r0, sl, r3
 8020678:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 802067c:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020680:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020682:	f8b9 0000 	ldrh.w	r0, [r9]
 8020686:	434b      	muls	r3, r1
 8020688:	0a3f      	lsrs	r7, r7, #8
 802068a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802068e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020692:	1c59      	adds	r1, r3, #1
 8020694:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8020698:	ea47 070c 	orr.w	r7, r7, ip
 802069c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80206a0:	1202      	asrs	r2, r0, #8
 80206a2:	0c3b      	lsrs	r3, r7, #16
 80206a4:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80206a8:	b2c9      	uxtb	r1, r1
 80206aa:	fb13 f304 	smulbb	r3, r3, r4
 80206ae:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80206b2:	fb02 3201 	mla	r2, r2, r1, r3
 80206b6:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80206ba:	10c3      	asrs	r3, r0, #3
 80206bc:	b2ff      	uxtb	r7, r7
 80206be:	00c0      	lsls	r0, r0, #3
 80206c0:	b292      	uxth	r2, r2
 80206c2:	fb1c fc04 	smulbb	ip, ip, r4
 80206c6:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80206ca:	b2c0      	uxtb	r0, r0
 80206cc:	fb17 f704 	smulbb	r7, r7, r4
 80206d0:	fb03 c301 	mla	r3, r3, r1, ip
 80206d4:	fb00 7001 	mla	r0, r0, r1, r7
 80206d8:	f102 0c01 	add.w	ip, r2, #1
 80206dc:	b280      	uxth	r0, r0
 80206de:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80206e2:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80206e6:	1c42      	adds	r2, r0, #1
 80206e8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80206ec:	b29b      	uxth	r3, r3
 80206ee:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80206f2:	ea42 020c 	orr.w	r2, r2, ip
 80206f6:	f103 0c01 	add.w	ip, r3, #1
 80206fa:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80206fe:	095b      	lsrs	r3, r3, #5
 8020700:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020704:	431a      	orrs	r2, r3
 8020706:	f8a9 2000 	strh.w	r2, [r9]
 802070a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802070c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802070e:	441a      	add	r2, r3
 8020710:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020712:	9229      	str	r2, [sp, #164]	; 0xa4
 8020714:	f109 0902 	add.w	r9, r9, #2
 8020718:	441d      	add	r5, r3
 802071a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802071e:	e63d      	b.n	802039c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8020720:	2800      	cmp	r0, #0
 8020722:	f43f aedd 	beq.w	80204e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020726:	5c79      	ldrb	r1, [r7, r1]
 8020728:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802072c:	910b      	str	r1, [sp, #44]	; 0x2c
 802072e:	0e09      	lsrs	r1, r1, #24
 8020730:	9114      	str	r1, [sp, #80]	; 0x50
 8020732:	e6d5      	b.n	80204e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020734:	b01f      	add	sp, #124	; 0x7c
 8020736:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802073a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802073a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802073e:	b089      	sub	sp, #36	; 0x24
 8020740:	9101      	str	r1, [sp, #4]
 8020742:	9801      	ldr	r0, [sp, #4]
 8020744:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8020748:	8800      	ldrh	r0, [r0, #0]
 802074a:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 802074e:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8020752:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8020756:	1206      	asrs	r6, r0, #8
 8020758:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 802075c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020760:	9602      	str	r6, [sp, #8]
 8020762:	10c6      	asrs	r6, r0, #3
 8020764:	00c0      	lsls	r0, r0, #3
 8020766:	b2c0      	uxtb	r0, r0
 8020768:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 802076c:	9004      	str	r0, [sp, #16]
 802076e:	2f00      	cmp	r7, #0
 8020770:	fb07 100c 	mla	r0, r7, ip, r1
 8020774:	9603      	str	r6, [sp, #12]
 8020776:	eb02 0e00 	add.w	lr, r2, r0
 802077a:	f2c0 810a 	blt.w	8020992 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 802077e:	45b8      	cmp	r8, r7
 8020780:	f340 8107 	ble.w	8020992 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020784:	2900      	cmp	r1, #0
 8020786:	f2c0 8102 	blt.w	802098e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802078a:	458c      	cmp	ip, r1
 802078c:	f340 80ff 	ble.w	802098e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020790:	5c12      	ldrb	r2, [r2, r0]
 8020792:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8020796:	1c4a      	adds	r2, r1, #1
 8020798:	f100 80fe 	bmi.w	8020998 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 802079c:	4594      	cmp	ip, r2
 802079e:	f340 80fb 	ble.w	8020998 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80207a2:	2d00      	cmp	r5, #0
 80207a4:	f000 80fa 	beq.w	802099c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 80207a8:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80207ac:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80207b0:	3701      	adds	r7, #1
 80207b2:	f100 80f7 	bmi.w	80209a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80207b6:	45b8      	cmp	r8, r7
 80207b8:	f340 80f4 	ble.w	80209a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80207bc:	2c00      	cmp	r4, #0
 80207be:	f000 80f4 	beq.w	80209aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 80207c2:	2900      	cmp	r1, #0
 80207c4:	eb0e 020c 	add.w	r2, lr, ip
 80207c8:	f2c0 80ea 	blt.w	80209a0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80207cc:	458c      	cmp	ip, r1
 80207ce:	f340 80e7 	ble.w	80209a0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80207d2:	f81e 700c 	ldrb.w	r7, [lr, ip]
 80207d6:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 80207da:	3101      	adds	r1, #1
 80207dc:	f100 80e8 	bmi.w	80209b0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80207e0:	458c      	cmp	ip, r1
 80207e2:	f340 80e5 	ble.w	80209b0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80207e6:	2d00      	cmp	r5, #0
 80207e8:	f000 80e4 	beq.w	80209b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 80207ec:	7852      	ldrb	r2, [r2, #1]
 80207ee:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80207f2:	0e0b      	lsrs	r3, r1, #24
 80207f4:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 80207f8:	9300      	str	r3, [sp, #0]
 80207fa:	b2a4      	uxth	r4, r4
 80207fc:	b2ab      	uxth	r3, r5
 80207fe:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8020802:	fb03 f904 	mul.w	r9, r3, r4
 8020806:	fb0a f505 	mul.w	r5, sl, r5
 802080a:	011b      	lsls	r3, r3, #4
 802080c:	eba3 0e09 	sub.w	lr, r3, r9
 8020810:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8020814:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8020818:	0a28      	lsrs	r0, r5, #8
 802081a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 802081e:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8020822:	4405      	add	r5, r0
 8020824:	0a2d      	lsrs	r5, r5, #8
 8020826:	fb0a f303 	mul.w	r3, sl, r3
 802082a:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 802082e:	9005      	str	r0, [sp, #20]
 8020830:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8020834:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8020838:	0a1b      	lsrs	r3, r3, #8
 802083a:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 802083e:	9306      	str	r3, [sp, #24]
 8020840:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8020844:	fb0b f303 	mul.w	r3, fp, r3
 8020848:	0a1d      	lsrs	r5, r3, #8
 802084a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 802084e:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8020852:	fb0b f606 	mul.w	r6, fp, r6
 8020856:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 802085a:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 802085e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020862:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020866:	fb08 f707 	mul.w	r7, r8, r7
 802086a:	441d      	add	r5, r3
 802086c:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8020870:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8020874:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8020878:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 802087c:	fb08 fc0c 	mul.w	ip, r8, ip
 8020880:	0a1b      	lsrs	r3, r3, #8
 8020882:	9307      	str	r3, [sp, #28]
 8020884:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8020888:	0e0b      	lsrs	r3, r1, #24
 802088a:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 802088e:	435f      	muls	r7, r3
 8020890:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020894:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020898:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 802089c:	4460      	add	r0, ip
 802089e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80208a2:	b2a4      	uxth	r4, r4
 80208a4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80208a8:	0a2d      	lsrs	r5, r5, #8
 80208aa:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80208ae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80208b2:	fa1f fe8e 	uxth.w	lr, lr
 80208b6:	4359      	muls	r1, r3
 80208b8:	1b12      	subs	r2, r2, r4
 80208ba:	9b05      	ldr	r3, [sp, #20]
 80208bc:	44bc      	add	ip, r7
 80208be:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80208c2:	b292      	uxth	r2, r2
 80208c4:	fb05 f50e 	mul.w	r5, r5, lr
 80208c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80208cc:	fb03 5502 	mla	r5, r3, r2, r5
 80208d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80208d4:	9b06      	ldr	r3, [sp, #24]
 80208d6:	f501 7780 	add.w	r7, r1, #256	; 0x100
 80208da:	0a36      	lsrs	r6, r6, #8
 80208dc:	0a00      	lsrs	r0, r0, #8
 80208de:	fb0c 5509 	mla	r5, ip, r9, r5
 80208e2:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80208e6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80208ea:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80208ee:	fb00 5504 	mla	r5, r0, r4, r5
 80208f2:	fb0e f606 	mul.w	r6, lr, r6
 80208f6:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 80208fa:	0a09      	lsrs	r1, r1, #8
 80208fc:	9b07      	ldr	r3, [sp, #28]
 80208fe:	fb02 6000 	mla	r0, r2, r0, r6
 8020902:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020906:	fb09 0001 	mla	r0, r9, r1, r0
 802090a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802090e:	fb0e fe0b 	mul.w	lr, lr, fp
 8020912:	fb04 0003 	mla	r0, r4, r3, r0
 8020916:	fb02 e20a 	mla	r2, r2, sl, lr
 802091a:	9b00      	ldr	r3, [sp, #0]
 802091c:	fb04 2408 	mla	r4, r4, r8, r2
 8020920:	fb09 4903 	mla	r9, r9, r3, r4
 8020924:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8020928:	9b02      	ldr	r3, [sp, #8]
 802092a:	9a04      	ldr	r2, [sp, #16]
 802092c:	fa5f f989 	uxtb.w	r9, r9
 8020930:	fb03 f109 	mul.w	r1, r3, r9
 8020934:	9b03      	ldr	r3, [sp, #12]
 8020936:	0a2d      	lsrs	r5, r5, #8
 8020938:	0a00      	lsrs	r0, r0, #8
 802093a:	fb03 f309 	mul.w	r3, r3, r9
 802093e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8020942:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020946:	4305      	orrs	r5, r0
 8020948:	fb02 f909 	mul.w	r9, r2, r9
 802094c:	1c58      	adds	r0, r3, #1
 802094e:	1c4a      	adds	r2, r1, #1
 8020950:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020954:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020958:	0a2b      	lsrs	r3, r5, #8
 802095a:	0c2a      	lsrs	r2, r5, #16
 802095c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020960:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8020964:	00db      	lsls	r3, r3, #3
 8020966:	0212      	lsls	r2, r2, #8
 8020968:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 802096c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020970:	4313      	orrs	r3, r2
 8020972:	f109 0201 	add.w	r2, r9, #1
 8020976:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 802097a:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 802097e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8020982:	431d      	orrs	r5, r3
 8020984:	9b01      	ldr	r3, [sp, #4]
 8020986:	801d      	strh	r5, [r3, #0]
 8020988:	b009      	add	sp, #36	; 0x24
 802098a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802098e:	2000      	movs	r0, #0
 8020990:	e701      	b.n	8020796 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8020992:	2600      	movs	r6, #0
 8020994:	4630      	mov	r0, r6
 8020996:	e70b      	b.n	80207b0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020998:	2600      	movs	r6, #0
 802099a:	e709      	b.n	80207b0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 802099c:	462e      	mov	r6, r5
 802099e:	e707      	b.n	80207b0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80209a0:	2700      	movs	r7, #0
 80209a2:	e71a      	b.n	80207da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 80209a4:	2100      	movs	r1, #0
 80209a6:	460f      	mov	r7, r1
 80209a8:	e723      	b.n	80207f2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80209aa:	4621      	mov	r1, r4
 80209ac:	4627      	mov	r7, r4
 80209ae:	e720      	b.n	80207f2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80209b0:	2100      	movs	r1, #0
 80209b2:	e71e      	b.n	80207f2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80209b4:	4629      	mov	r1, r5
 80209b6:	e71c      	b.n	80207f2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

080209b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80209b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80209bc:	b09b      	sub	sp, #108	; 0x6c
 80209be:	9218      	str	r2, [sp, #96]	; 0x60
 80209c0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80209c2:	9116      	str	r1, [sp, #88]	; 0x58
 80209c4:	9307      	str	r3, [sp, #28]
 80209c6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80209ca:	9019      	str	r0, [sp, #100]	; 0x64
 80209cc:	6850      	ldr	r0, [r2, #4]
 80209ce:	6812      	ldr	r2, [r2, #0]
 80209d0:	9d26      	ldr	r5, [sp, #152]	; 0x98
 80209d2:	fb00 1303 	mla	r3, r0, r3, r1
 80209d6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80209da:	930a      	str	r3, [sp, #40]	; 0x28
 80209dc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80209de:	681b      	ldr	r3, [r3, #0]
 80209e0:	930f      	str	r3, [sp, #60]	; 0x3c
 80209e2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80209e4:	685e      	ldr	r6, [r3, #4]
 80209e6:	3604      	adds	r6, #4
 80209e8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80209ea:	2b00      	cmp	r3, #0
 80209ec:	dc03      	bgt.n	80209f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80209ee:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80209f0:	2b00      	cmp	r3, #0
 80209f2:	f340 8373 	ble.w	80210dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80209f6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80209f8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80209fc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020a00:	1e48      	subs	r0, r1, #1
 8020a02:	1e57      	subs	r7, r2, #1
 8020a04:	9b07      	ldr	r3, [sp, #28]
 8020a06:	2b00      	cmp	r3, #0
 8020a08:	f340 8190 	ble.w	8020d2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8020a0c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020a0e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020a12:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020a16:	d406      	bmi.n	8020a26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020a18:	4584      	cmp	ip, r0
 8020a1a:	da04      	bge.n	8020a26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020a1c:	2b00      	cmp	r3, #0
 8020a1e:	db02      	blt.n	8020a26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020a20:	42bb      	cmp	r3, r7
 8020a22:	f2c0 8184 	blt.w	8020d2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8020a26:	f11c 0c01 	adds.w	ip, ip, #1
 8020a2a:	f100 8172 	bmi.w	8020d12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020a2e:	4561      	cmp	r1, ip
 8020a30:	f2c0 816f 	blt.w	8020d12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020a34:	3301      	adds	r3, #1
 8020a36:	f100 816c 	bmi.w	8020d12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020a3a:	429a      	cmp	r2, r3
 8020a3c:	f2c0 8169 	blt.w	8020d12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020a40:	9b07      	ldr	r3, [sp, #28]
 8020a42:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8020a44:	9317      	str	r3, [sp, #92]	; 0x5c
 8020a46:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020a48:	2b00      	cmp	r3, #0
 8020a4a:	f340 818e 	ble.w	8020d6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8020a4e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020a50:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020a54:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020a56:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8020a5a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020a5c:	141b      	asrs	r3, r3, #16
 8020a5e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020a62:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020a66:	f100 81d1 	bmi.w	8020e0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020a6a:	f101 38ff 	add.w	r8, r1, #4294967295
 8020a6e:	4543      	cmp	r3, r8
 8020a70:	f280 81cc 	bge.w	8020e0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020a74:	f1bc 0f00 	cmp.w	ip, #0
 8020a78:	f2c0 81c8 	blt.w	8020e0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020a7c:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020a80:	45c4      	cmp	ip, r8
 8020a82:	f280 81c3 	bge.w	8020e0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020a86:	b209      	sxth	r1, r1
 8020a88:	fb0c 3301 	mla	r3, ip, r1, r3
 8020a8c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020a8e:	eb04 0803 	add.w	r8, r4, r3
 8020a92:	5ce3      	ldrb	r3, [r4, r3]
 8020a94:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020a98:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8020a9c:	2a00      	cmp	r2, #0
 8020a9e:	f000 81aa 	beq.w	8020df6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8020aa2:	f898 c001 	ldrb.w	ip, [r8, #1]
 8020aa6:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8020aaa:	940b      	str	r4, [sp, #44]	; 0x2c
 8020aac:	0e24      	lsrs	r4, r4, #24
 8020aae:	9412      	str	r4, [sp, #72]	; 0x48
 8020ab0:	b178      	cbz	r0, 8020ad2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020ab2:	eb08 0c01 	add.w	ip, r8, r1
 8020ab6:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020aba:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020abe:	9108      	str	r1, [sp, #32]
 8020ac0:	0e09      	lsrs	r1, r1, #24
 8020ac2:	9110      	str	r1, [sp, #64]	; 0x40
 8020ac4:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8020ac8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020acc:	910c      	str	r1, [sp, #48]	; 0x30
 8020ace:	0e09      	lsrs	r1, r1, #24
 8020ad0:	9113      	str	r1, [sp, #76]	; 0x4c
 8020ad2:	b292      	uxth	r2, r2
 8020ad4:	b280      	uxth	r0, r0
 8020ad6:	fb02 f900 	mul.w	r9, r2, r0
 8020ada:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8020ade:	0112      	lsls	r2, r2, #4
 8020ae0:	eba2 0809 	sub.w	r8, r2, r9
 8020ae4:	b280      	uxth	r0, r0
 8020ae6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020aea:	9912      	ldr	r1, [sp, #72]	; 0x48
 8020aec:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020aee:	fa1f f888 	uxth.w	r8, r8
 8020af2:	1a12      	subs	r2, r2, r0
 8020af4:	b292      	uxth	r2, r2
 8020af6:	fb08 f101 	mul.w	r1, r8, r1
 8020afa:	fb02 110e 	mla	r1, r2, lr, r1
 8020afe:	fb00 1104 	mla	r1, r0, r4, r1
 8020b02:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020b04:	fb09 1104 	mla	r1, r9, r4, r1
 8020b08:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020b0c:	2900      	cmp	r1, #0
 8020b0e:	f000 80f5 	beq.w	8020cfc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020b12:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8020b16:	d01b      	beq.n	8020b50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020b18:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020b1c:	fb0e fa0a 	mul.w	sl, lr, sl
 8020b20:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020b24:	fb0e fe03 	mul.w	lr, lr, r3
 8020b28:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020b2c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020b30:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020b34:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8020b38:	4453      	add	r3, sl
 8020b3a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020b3e:	0a1b      	lsrs	r3, r3, #8
 8020b40:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020b44:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020b48:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020b4c:	ea43 030c 	orr.w	r3, r3, ip
 8020b50:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020b52:	2cff      	cmp	r4, #255	; 0xff
 8020b54:	d021      	beq.n	8020b9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8020b56:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020b58:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020b5c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020b5e:	fb04 fb0b 	mul.w	fp, r4, fp
 8020b62:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020b64:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020b68:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020b6a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020b6e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020b72:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020b76:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020b7a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020b7e:	44de      	add	lr, fp
 8020b80:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020b84:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020b88:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020b8c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020b90:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020b94:	ea4e 040a 	orr.w	r4, lr, sl
 8020b98:	940b      	str	r4, [sp, #44]	; 0x2c
 8020b9a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020b9c:	2cff      	cmp	r4, #255	; 0xff
 8020b9e:	d021      	beq.n	8020be4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8020ba0:	9c08      	ldr	r4, [sp, #32]
 8020ba2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020ba6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020ba8:	fb04 fb0b 	mul.w	fp, r4, fp
 8020bac:	9c08      	ldr	r4, [sp, #32]
 8020bae:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020bb2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020bb4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020bb8:	fb04 fa0a 	mul.w	sl, r4, sl
 8020bbc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020bc0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020bc4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020bc8:	44de      	add	lr, fp
 8020bca:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020bce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020bd2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020bd6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020bda:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020bde:	ea4e 040a 	orr.w	r4, lr, sl
 8020be2:	9408      	str	r4, [sp, #32]
 8020be4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020be6:	2cff      	cmp	r4, #255	; 0xff
 8020be8:	d021      	beq.n	8020c2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8020bea:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020bec:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020bf0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020bf2:	fb04 fb0b 	mul.w	fp, r4, fp
 8020bf6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020bf8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020bfc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020bfe:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020c02:	fb04 fa0a 	mul.w	sl, r4, sl
 8020c06:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020c0a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020c0e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020c12:	44de      	add	lr, fp
 8020c14:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020c18:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020c1c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020c20:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020c24:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020c28:	ea4e 040a 	orr.w	r4, lr, sl
 8020c2c:	940c      	str	r4, [sp, #48]	; 0x30
 8020c2e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020c30:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020c34:	9c08      	ldr	r4, [sp, #32]
 8020c36:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8020c3a:	fb08 fc0c 	mul.w	ip, r8, ip
 8020c3e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020c42:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020c46:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020c48:	fb00 cc0e 	mla	ip, r0, lr, ip
 8020c4c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020c50:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020c52:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020c56:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8020c5a:	fb08 f80e 	mul.w	r8, r8, lr
 8020c5e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020c62:	fb02 8303 	mla	r3, r2, r3, r8
 8020c66:	9a08      	ldr	r2, [sp, #32]
 8020c68:	f8b7 8000 	ldrh.w	r8, [r7]
 8020c6c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020c70:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020c72:	fb00 330a 	mla	r3, r0, sl, r3
 8020c76:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8020c7a:	fb09 3900 	mla	r9, r9, r0, r3
 8020c7e:	43c9      	mvns	r1, r1
 8020c80:	ea4f 2228 	mov.w	r2, r8, asr #8
 8020c84:	fa5f fe81 	uxtb.w	lr, r1
 8020c88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020c8c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020c90:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020c94:	fb02 f20e 	mul.w	r2, r2, lr
 8020c98:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020c9c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020ca0:	ea4c 0c09 	orr.w	ip, ip, r9
 8020ca4:	1c53      	adds	r3, r2, #1
 8020ca6:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8020caa:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8020cae:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8020cb2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020cb6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8020cba:	4a63      	ldr	r2, [pc, #396]	; (8020e48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8020cbc:	fb00 f00e 	mul.w	r0, r0, lr
 8020cc0:	b2db      	uxtb	r3, r3
 8020cc2:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8020cc6:	1c43      	adds	r3, r0, #1
 8020cc8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020ccc:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8020cd0:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8020cd4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020cd8:	b2c9      	uxtb	r1, r1
 8020cda:	00db      	lsls	r3, r3, #3
 8020cdc:	fb01 f10e 	mul.w	r1, r1, lr
 8020ce0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020ce4:	4313      	orrs	r3, r2
 8020ce6:	1c4a      	adds	r2, r1, #1
 8020ce8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020cec:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8020cf0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8020cf4:	ea4c 0c03 	orr.w	ip, ip, r3
 8020cf8:	f8a7 c000 	strh.w	ip, [r7]
 8020cfc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020cfe:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8020d00:	441a      	add	r2, r3
 8020d02:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020d04:	9225      	str	r2, [sp, #148]	; 0x94
 8020d06:	441d      	add	r5, r3
 8020d08:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020d0a:	3b01      	subs	r3, #1
 8020d0c:	3702      	adds	r7, #2
 8020d0e:	9317      	str	r3, [sp, #92]	; 0x5c
 8020d10:	e699      	b.n	8020a46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020d12:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020d14:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020d16:	441c      	add	r4, r3
 8020d18:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020d1a:	9425      	str	r4, [sp, #148]	; 0x94
 8020d1c:	441d      	add	r5, r3
 8020d1e:	9b07      	ldr	r3, [sp, #28]
 8020d20:	3b01      	subs	r3, #1
 8020d22:	9307      	str	r3, [sp, #28]
 8020d24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020d26:	3302      	adds	r3, #2
 8020d28:	930a      	str	r3, [sp, #40]	; 0x28
 8020d2a:	e66b      	b.n	8020a04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8020d2c:	d024      	beq.n	8020d78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8020d2e:	9b07      	ldr	r3, [sp, #28]
 8020d30:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8020d32:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020d34:	3b01      	subs	r3, #1
 8020d36:	fb00 4003 	mla	r0, r0, r3, r4
 8020d3a:	1400      	asrs	r0, r0, #16
 8020d3c:	f53f ae80 	bmi.w	8020a40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020d40:	3901      	subs	r1, #1
 8020d42:	4288      	cmp	r0, r1
 8020d44:	f6bf ae7c 	bge.w	8020a40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020d48:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8020d4a:	fb01 5303 	mla	r3, r1, r3, r5
 8020d4e:	141b      	asrs	r3, r3, #16
 8020d50:	f53f ae76 	bmi.w	8020a40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020d54:	3a01      	subs	r2, #1
 8020d56:	4293      	cmp	r3, r2
 8020d58:	f6bf ae72 	bge.w	8020a40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020d5c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8020d60:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8020d64:	f1bb 0f00 	cmp.w	fp, #0
 8020d68:	dc70      	bgt.n	8020e4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8020d6a:	9b07      	ldr	r3, [sp, #28]
 8020d6c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020d70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020d72:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020d76:	930a      	str	r3, [sp, #40]	; 0x28
 8020d78:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020d7a:	2b00      	cmp	r3, #0
 8020d7c:	f340 81ae 	ble.w	80210dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020d80:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020d84:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020d88:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020d8c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020d8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020d92:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020d96:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020d9a:	eef0 6a62 	vmov.f32	s13, s5
 8020d9e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020da2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020da6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020daa:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8020dae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020db2:	eef0 6a43 	vmov.f32	s13, s6
 8020db6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020dba:	ee12 2a90 	vmov	r2, s5
 8020dbe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020dc2:	fb92 f3f3 	sdiv	r3, r2, r3
 8020dc6:	ee13 2a10 	vmov	r2, s6
 8020dca:	9327      	str	r3, [sp, #156]	; 0x9c
 8020dcc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020dce:	fb92 f3f3 	sdiv	r3, r2, r3
 8020dd2:	9328      	str	r3, [sp, #160]	; 0xa0
 8020dd4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020dd6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8020dd8:	3b01      	subs	r3, #1
 8020dda:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020dde:	9316      	str	r3, [sp, #88]	; 0x58
 8020de0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020de2:	bf08      	it	eq
 8020de4:	4613      	moveq	r3, r2
 8020de6:	ee16 5a90 	vmov	r5, s13
 8020dea:	9307      	str	r3, [sp, #28]
 8020dec:	eeb0 3a67 	vmov.f32	s6, s15
 8020df0:	eef0 2a47 	vmov.f32	s5, s14
 8020df4:	e5f8      	b.n	80209e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8020df6:	2800      	cmp	r0, #0
 8020df8:	f43f ae6b 	beq.w	8020ad2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020dfc:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020e00:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020e04:	9108      	str	r1, [sp, #32]
 8020e06:	0e09      	lsrs	r1, r1, #24
 8020e08:	9110      	str	r1, [sp, #64]	; 0x40
 8020e0a:	e662      	b.n	8020ad2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020e0c:	f113 0801 	adds.w	r8, r3, #1
 8020e10:	f53f af74 	bmi.w	8020cfc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020e14:	4541      	cmp	r1, r8
 8020e16:	f6ff af71 	blt.w	8020cfc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020e1a:	f11c 0801 	adds.w	r8, ip, #1
 8020e1e:	f53f af6d 	bmi.w	8020cfc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020e22:	45c6      	cmp	lr, r8
 8020e24:	f6ff af6a 	blt.w	8020cfc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020e28:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8020e2c:	b209      	sxth	r1, r1
 8020e2e:	fa0f f38e 	sxth.w	r3, lr
 8020e32:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8020e36:	9301      	str	r3, [sp, #4]
 8020e38:	9100      	str	r1, [sp, #0]
 8020e3a:	4633      	mov	r3, r6
 8020e3c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020e3e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8020e40:	4639      	mov	r1, r7
 8020e42:	f7ff fc7a 	bl	802073a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8020e46:	e759      	b.n	8020cfc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020e48:	fffff800 	.word	0xfffff800
 8020e4c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020e4e:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020e50:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020e54:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020e56:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020e5a:	1427      	asrs	r7, r4, #16
 8020e5c:	142b      	asrs	r3, r5, #16
 8020e5e:	fb01 7303 	mla	r3, r1, r3, r7
 8020e62:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020e64:	18e7      	adds	r7, r4, r3
 8020e66:	5ce3      	ldrb	r3, [r4, r3]
 8020e68:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020e6c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020e70:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020e74:	2a00      	cmp	r2, #0
 8020e76:	f000 8127 	beq.w	80210c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8020e7a:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020e7e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8020e82:	940d      	str	r4, [sp, #52]	; 0x34
 8020e84:	0e24      	lsrs	r4, r4, #24
 8020e86:	9414      	str	r4, [sp, #80]	; 0x50
 8020e88:	b170      	cbz	r0, 8020ea8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020e8a:	eb07 0e01 	add.w	lr, r7, r1
 8020e8e:	5c79      	ldrb	r1, [r7, r1]
 8020e90:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020e94:	9109      	str	r1, [sp, #36]	; 0x24
 8020e96:	0e09      	lsrs	r1, r1, #24
 8020e98:	9111      	str	r1, [sp, #68]	; 0x44
 8020e9a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020e9e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020ea2:	910e      	str	r1, [sp, #56]	; 0x38
 8020ea4:	0e09      	lsrs	r1, r1, #24
 8020ea6:	9115      	str	r1, [sp, #84]	; 0x54
 8020ea8:	b292      	uxth	r2, r2
 8020eaa:	b280      	uxth	r0, r0
 8020eac:	fb02 f800 	mul.w	r8, r2, r0
 8020eb0:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020eb4:	0112      	lsls	r2, r2, #4
 8020eb6:	eba2 0e08 	sub.w	lr, r2, r8
 8020eba:	b280      	uxth	r0, r0
 8020ebc:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8020ec0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020ec2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020ec4:	fa1f fe8e 	uxth.w	lr, lr
 8020ec8:	1a09      	subs	r1, r1, r0
 8020eca:	b289      	uxth	r1, r1
 8020ecc:	fb0e f202 	mul.w	r2, lr, r2
 8020ed0:	fb01 220c 	mla	r2, r1, ip, r2
 8020ed4:	fb00 2204 	mla	r2, r0, r4, r2
 8020ed8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020eda:	fb08 2204 	mla	r2, r8, r4, r2
 8020ede:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8020ee2:	2a00      	cmp	r2, #0
 8020ee4:	f000 80e5 	beq.w	80210b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8020ee8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8020eec:	d019      	beq.n	8020f22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8020eee:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020ef2:	fb0c fa0a 	mul.w	sl, ip, sl
 8020ef6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020efa:	fb0c fc03 	mul.w	ip, ip, r3
 8020efe:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020f02:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020f06:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020f0a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8020f0e:	4453      	add	r3, sl
 8020f10:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020f14:	0a1b      	lsrs	r3, r3, #8
 8020f16:	0a3f      	lsrs	r7, r7, #8
 8020f18:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020f1c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020f20:	433b      	orrs	r3, r7
 8020f22:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020f24:	2cff      	cmp	r4, #255	; 0xff
 8020f26:	d020      	beq.n	8020f6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8020f28:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020f2a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020f2e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020f30:	4367      	muls	r7, r4
 8020f32:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020f34:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020f38:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020f3a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020f3e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020f42:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020f46:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020f4a:	44bc      	add	ip, r7
 8020f4c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020f50:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020f54:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020f58:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020f5c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020f60:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020f64:	ea4c 040a 	orr.w	r4, ip, sl
 8020f68:	940d      	str	r4, [sp, #52]	; 0x34
 8020f6a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020f6c:	2cff      	cmp	r4, #255	; 0xff
 8020f6e:	d020      	beq.n	8020fb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8020f70:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8020f72:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020f76:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020f78:	4367      	muls	r7, r4
 8020f7a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8020f7c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020f80:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020f82:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020f86:	fb04 fa0a 	mul.w	sl, r4, sl
 8020f8a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020f8e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020f92:	44bc      	add	ip, r7
 8020f94:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020f98:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020f9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020fa0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020fa4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020fa8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020fac:	ea4c 040a 	orr.w	r4, ip, sl
 8020fb0:	9409      	str	r4, [sp, #36]	; 0x24
 8020fb2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020fb4:	2cff      	cmp	r4, #255	; 0xff
 8020fb6:	d020      	beq.n	8020ffa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8020fb8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020fba:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020fbe:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020fc0:	4367      	muls	r7, r4
 8020fc2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020fc4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020fc8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020fca:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020fce:	fb04 fa0a 	mul.w	sl, r4, sl
 8020fd2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020fd6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020fda:	44bc      	add	ip, r7
 8020fdc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020fe0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020fe4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020fe8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020fec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020ff0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020ff4:	ea4c 040a 	orr.w	r4, ip, sl
 8020ff8:	940e      	str	r4, [sp, #56]	; 0x38
 8020ffa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020ffc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021000:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8021002:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8021006:	fb0e f707 	mul.w	r7, lr, r7
 802100a:	fb01 770c 	mla	r7, r1, ip, r7
 802100e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021012:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021014:	fb00 770c 	mla	r7, r0, ip, r7
 8021018:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802101c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802101e:	fb08 770c 	mla	r7, r8, ip, r7
 8021022:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8021026:	fb0e fe0c 	mul.w	lr, lr, ip
 802102a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802102e:	fb01 e303 	mla	r3, r1, r3, lr
 8021032:	9909      	ldr	r1, [sp, #36]	; 0x24
 8021034:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8021038:	990e      	ldr	r1, [sp, #56]	; 0x38
 802103a:	fb00 330a 	mla	r3, r0, sl, r3
 802103e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8021042:	fb08 3c0c 	mla	ip, r8, ip, r3
 8021046:	f8b9 3000 	ldrh.w	r3, [r9]
 802104a:	43d2      	mvns	r2, r2
 802104c:	1218      	asrs	r0, r3, #8
 802104e:	b2d2      	uxtb	r2, r2
 8021050:	10d9      	asrs	r1, r3, #3
 8021052:	0a3f      	lsrs	r7, r7, #8
 8021054:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021058:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802105c:	00db      	lsls	r3, r3, #3
 802105e:	4350      	muls	r0, r2
 8021060:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8021064:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021068:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802106c:	b2db      	uxtb	r3, r3
 802106e:	ea47 070c 	orr.w	r7, r7, ip
 8021072:	4351      	muls	r1, r2
 8021074:	4353      	muls	r3, r2
 8021076:	1c42      	adds	r2, r0, #1
 8021078:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802107c:	0c3a      	lsrs	r2, r7, #16
 802107e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021082:	4a18      	ldr	r2, [pc, #96]	; (80210e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8021084:	b2c0      	uxtb	r0, r0
 8021086:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 802108a:	1c4a      	adds	r2, r1, #1
 802108c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021090:	0a3a      	lsrs	r2, r7, #8
 8021092:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021096:	00c9      	lsls	r1, r1, #3
 8021098:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802109c:	4301      	orrs	r1, r0
 802109e:	1c58      	adds	r0, r3, #1
 80210a0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80210a4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80210a8:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80210ac:	4308      	orrs	r0, r1
 80210ae:	f8a9 0000 	strh.w	r0, [r9]
 80210b2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80210b4:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80210b6:	441a      	add	r2, r3
 80210b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80210ba:	9225      	str	r2, [sp, #148]	; 0x94
 80210bc:	f109 0902 	add.w	r9, r9, #2
 80210c0:	441d      	add	r5, r3
 80210c2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80210c6:	e64d      	b.n	8020d64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 80210c8:	2800      	cmp	r0, #0
 80210ca:	f43f aeed 	beq.w	8020ea8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80210ce:	5c79      	ldrb	r1, [r7, r1]
 80210d0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80210d4:	9109      	str	r1, [sp, #36]	; 0x24
 80210d6:	0e09      	lsrs	r1, r1, #24
 80210d8:	9111      	str	r1, [sp, #68]	; 0x44
 80210da:	e6e5      	b.n	8020ea8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80210dc:	b01b      	add	sp, #108	; 0x6c
 80210de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80210e2:	bf00      	nop
 80210e4:	fffff800 	.word	0xfffff800

080210e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80210e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80210ec:	b085      	sub	sp, #20
 80210ee:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 80210f2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80210f6:	9103      	str	r1, [sp, #12]
 80210f8:	fb00 7406 	mla	r4, r0, r6, r7
 80210fc:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8021100:	2800      	cmp	r0, #0
 8021102:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8021106:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802110a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 802110e:	9501      	str	r5, [sp, #4]
 8021110:	eb03 0904 	add.w	r9, r3, r4
 8021114:	f2c0 8150 	blt.w	80213b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8021118:	4583      	cmp	fp, r0
 802111a:	f340 814d 	ble.w	80213b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 802111e:	2f00      	cmp	r7, #0
 8021120:	f2c0 8146 	blt.w	80213b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8021124:	42be      	cmp	r6, r7
 8021126:	f340 8143 	ble.w	80213b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802112a:	f813 c004 	ldrb.w	ip, [r3, r4]
 802112e:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8021132:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021136:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 802113a:	4355      	muls	r5, r2
 802113c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021140:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8021144:	fb0c f203 	mul.w	r2, ip, r3
 8021148:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 802114c:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8021150:	441d      	add	r5, r3
 8021152:	f102 0320 	add.w	r3, r2, #32
 8021156:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802115a:	0a1b      	lsrs	r3, r3, #8
 802115c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021160:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021164:	431c      	orrs	r4, r3
 8021166:	1c7b      	adds	r3, r7, #1
 8021168:	f100 812b 	bmi.w	80213c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 802116c:	429e      	cmp	r6, r3
 802116e:	f340 8128 	ble.w	80213c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8021172:	2900      	cmp	r1, #0
 8021174:	f000 8128 	beq.w	80213c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8021178:	9a01      	ldr	r2, [sp, #4]
 802117a:	f899 3001 	ldrb.w	r3, [r9, #1]
 802117e:	8855      	ldrh	r5, [r2, #2]
 8021180:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8021184:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8021188:	fb08 f802 	mul.w	r8, r8, r2
 802118c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021190:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8021194:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8021198:	435d      	muls	r5, r3
 802119a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802119e:	44d0      	add	r8, sl
 80211a0:	f105 0a20 	add.w	sl, r5, #32
 80211a4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80211a8:	0a2d      	lsrs	r5, r5, #8
 80211aa:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80211ae:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80211b2:	432a      	orrs	r2, r5
 80211b4:	3001      	adds	r0, #1
 80211b6:	f100 810d 	bmi.w	80213d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80211ba:	4583      	cmp	fp, r0
 80211bc:	f340 810a 	ble.w	80213d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80211c0:	f1be 0f00 	cmp.w	lr, #0
 80211c4:	f000 810b 	beq.w	80213de <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 80211c8:	2f00      	cmp	r7, #0
 80211ca:	f2c0 8100 	blt.w	80213ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80211ce:	42be      	cmp	r6, r7
 80211d0:	f340 80fd 	ble.w	80213ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80211d4:	9801      	ldr	r0, [sp, #4]
 80211d6:	f819 5006 	ldrb.w	r5, [r9, r6]
 80211da:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80211de:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80211e2:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80211e6:	fb0a fa00 	mul.w	sl, sl, r0
 80211ea:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80211ee:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80211f2:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80211f6:	fb05 f808 	mul.w	r8, r5, r8
 80211fa:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80211fe:	4482      	add	sl, r0
 8021200:	f108 0020 	add.w	r0, r8, #32
 8021204:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021208:	0a00      	lsrs	r0, r0, #8
 802120a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 802120e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021212:	ea4b 0b00 	orr.w	fp, fp, r0
 8021216:	3701      	adds	r7, #1
 8021218:	f100 80e6 	bmi.w	80213e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 802121c:	42be      	cmp	r6, r7
 802121e:	f340 80e3 	ble.w	80213e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8021222:	2900      	cmp	r1, #0
 8021224:	f000 80e3 	beq.w	80213ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8021228:	3601      	adds	r6, #1
 802122a:	9801      	ldr	r0, [sp, #4]
 802122c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021230:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8021234:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8021238:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 802123c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021240:	fb09 f906 	mul.w	r9, r9, r6
 8021244:	fb07 f800 	mul.w	r8, r7, r0
 8021248:	f64f 001f 	movw	r0, #63519	; 0xf81f
 802124c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021250:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8021254:	44d1      	add	r9, sl
 8021256:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802125a:	f108 0020 	add.w	r0, r8, #32
 802125e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021262:	0a00      	lsrs	r0, r0, #8
 8021264:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021268:	4330      	orrs	r0, r6
 802126a:	b28e      	uxth	r6, r1
 802126c:	fa1f f98e 	uxth.w	r9, lr
 8021270:	fb06 f809 	mul.w	r8, r6, r9
 8021274:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8021278:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 802127c:	0136      	lsls	r6, r6, #4
 802127e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021282:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8021286:	9601      	str	r6, [sp, #4]
 8021288:	ea4a 0404 	orr.w	r4, sl, r4
 802128c:	fa1f f689 	uxth.w	r6, r9
 8021290:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021294:	fb11 f90e 	smulbb	r9, r1, lr
 8021298:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 802129c:	9602      	str	r6, [sp, #8]
 802129e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80212a2:	4626      	mov	r6, r4
 80212a4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80212a8:	f1ce 0410 	rsb	r4, lr, #16
 80212ac:	1a64      	subs	r4, r4, r1
 80212ae:	ea4a 0202 	orr.w	r2, sl, r2
 80212b2:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80212b6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80212ba:	434a      	muls	r2, r1
 80212bc:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80212c0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80212c4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80212c8:	fb04 2406 	mla	r4, r4, r6, r2
 80212cc:	ea4a 0000 	orr.w	r0, sl, r0
 80212d0:	fb09 4200 	mla	r2, r9, r0, r4
 80212d4:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80212d8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80212dc:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80212e0:	ea44 0b0b 	orr.w	fp, r4, fp
 80212e4:	9c01      	ldr	r4, [sp, #4]
 80212e6:	9e02      	ldr	r6, [sp, #8]
 80212e8:	9903      	ldr	r1, [sp, #12]
 80212ea:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 80212ee:	1ba4      	subs	r4, r4, r6
 80212f0:	9e01      	ldr	r6, [sp, #4]
 80212f2:	8808      	ldrh	r0, [r1, #0]
 80212f4:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 80212f8:	eba6 0608 	sub.w	r6, r6, r8
 80212fc:	b2b6      	uxth	r6, r6
 80212fe:	b2a4      	uxth	r4, r4
 8021300:	4373      	muls	r3, r6
 8021302:	fb0c 3304 	mla	r3, ip, r4, r3
 8021306:	9c02      	ldr	r4, [sp, #8]
 8021308:	fb04 3505 	mla	r5, r4, r5, r3
 802130c:	fb08 5707 	mla	r7, r8, r7, r5
 8021310:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021314:	b289      	uxth	r1, r1
 8021316:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802131a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802131e:	434f      	muls	r7, r1
 8021320:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021324:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021328:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802132c:	1c7b      	adds	r3, r7, #1
 802132e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021332:	ea42 0e0e 	orr.w	lr, r2, lr
 8021336:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802133a:	fa1f f28e 	uxth.w	r2, lr
 802133e:	1203      	asrs	r3, r0, #8
 8021340:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8021344:	b2ff      	uxtb	r7, r7
 8021346:	1215      	asrs	r5, r2, #8
 8021348:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802134c:	fb13 f307 	smulbb	r3, r3, r7
 8021350:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021354:	fb05 3501 	mla	r5, r5, r1, r3
 8021358:	10c3      	asrs	r3, r0, #3
 802135a:	10d4      	asrs	r4, r2, #3
 802135c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021360:	fb13 f307 	smulbb	r3, r3, r7
 8021364:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8021368:	fb04 3401 	mla	r4, r4, r1, r3
 802136c:	00c3      	lsls	r3, r0, #3
 802136e:	00d2      	lsls	r2, r2, #3
 8021370:	b2db      	uxtb	r3, r3
 8021372:	fb13 f307 	smulbb	r3, r3, r7
 8021376:	b2d2      	uxtb	r2, r2
 8021378:	fb02 3101 	mla	r1, r2, r1, r3
 802137c:	b2ad      	uxth	r5, r5
 802137e:	b289      	uxth	r1, r1
 8021380:	b2a4      	uxth	r4, r4
 8021382:	1c6b      	adds	r3, r5, #1
 8021384:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021388:	1c62      	adds	r2, r4, #1
 802138a:	1c4b      	adds	r3, r1, #1
 802138c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021390:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8021394:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021398:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802139c:	0964      	lsrs	r4, r4, #5
 802139e:	432b      	orrs	r3, r5
 80213a0:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80213a4:	9a03      	ldr	r2, [sp, #12]
 80213a6:	4323      	orrs	r3, r4
 80213a8:	8013      	strh	r3, [r2, #0]
 80213aa:	b005      	add	sp, #20
 80213ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80213b0:	f04f 0c00 	mov.w	ip, #0
 80213b4:	4664      	mov	r4, ip
 80213b6:	e6d6      	b.n	8021166 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80213b8:	2300      	movs	r3, #0
 80213ba:	469c      	mov	ip, r3
 80213bc:	461a      	mov	r2, r3
 80213be:	461c      	mov	r4, r3
 80213c0:	e6f8      	b.n	80211b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80213c2:	2300      	movs	r3, #0
 80213c4:	461a      	mov	r2, r3
 80213c6:	e6f5      	b.n	80211b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80213c8:	460b      	mov	r3, r1
 80213ca:	460a      	mov	r2, r1
 80213cc:	e6f2      	b.n	80211b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80213ce:	2500      	movs	r5, #0
 80213d0:	46ab      	mov	fp, r5
 80213d2:	e720      	b.n	8021216 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80213d4:	2700      	movs	r7, #0
 80213d6:	463d      	mov	r5, r7
 80213d8:	4638      	mov	r0, r7
 80213da:	46bb      	mov	fp, r7
 80213dc:	e745      	b.n	802126a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80213de:	4677      	mov	r7, lr
 80213e0:	4675      	mov	r5, lr
 80213e2:	4670      	mov	r0, lr
 80213e4:	46f3      	mov	fp, lr
 80213e6:	e740      	b.n	802126a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80213e8:	2700      	movs	r7, #0
 80213ea:	4638      	mov	r0, r7
 80213ec:	e73d      	b.n	802126a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80213ee:	460f      	mov	r7, r1
 80213f0:	4608      	mov	r0, r1
 80213f2:	e73a      	b.n	802126a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080213f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80213f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80213f8:	b097      	sub	sp, #92	; 0x5c
 80213fa:	9214      	str	r2, [sp, #80]	; 0x50
 80213fc:	9308      	str	r3, [sp, #32]
 80213fe:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021400:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8021404:	9312      	str	r3, [sp, #72]	; 0x48
 8021406:	9111      	str	r1, [sp, #68]	; 0x44
 8021408:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 802140c:	9015      	str	r0, [sp, #84]	; 0x54
 802140e:	6850      	ldr	r0, [r2, #4]
 8021410:	6812      	ldr	r2, [r2, #0]
 8021412:	fb00 1303 	mla	r3, r0, r3, r1
 8021416:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802141a:	9309      	str	r3, [sp, #36]	; 0x24
 802141c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802141e:	681b      	ldr	r3, [r3, #0]
 8021420:	930b      	str	r3, [sp, #44]	; 0x2c
 8021422:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021424:	685b      	ldr	r3, [r3, #4]
 8021426:	930c      	str	r3, [sp, #48]	; 0x30
 8021428:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 802142c:	930a      	str	r3, [sp, #40]	; 0x28
 802142e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021430:	2b00      	cmp	r3, #0
 8021432:	dc03      	bgt.n	802143c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021434:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8021436:	2b00      	cmp	r3, #0
 8021438:	f340 83cb 	ble.w	8021bd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 802143c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802143e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021442:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021446:	1e48      	subs	r0, r1, #1
 8021448:	1e55      	subs	r5, r2, #1
 802144a:	9b08      	ldr	r3, [sp, #32]
 802144c:	2b00      	cmp	r3, #0
 802144e:	f340 81a3 	ble.w	8021798 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8021452:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8021454:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021456:	1436      	asrs	r6, r6, #16
 8021458:	ea4f 4323 	mov.w	r3, r3, asr #16
 802145c:	d406      	bmi.n	802146c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802145e:	4286      	cmp	r6, r0
 8021460:	da04      	bge.n	802146c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021462:	2b00      	cmp	r3, #0
 8021464:	db02      	blt.n	802146c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021466:	42ab      	cmp	r3, r5
 8021468:	f2c0 8197 	blt.w	802179a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 802146c:	3601      	adds	r6, #1
 802146e:	f100 8184 	bmi.w	802177a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021472:	42b1      	cmp	r1, r6
 8021474:	f2c0 8181 	blt.w	802177a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021478:	3301      	adds	r3, #1
 802147a:	f100 817e 	bmi.w	802177a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802147e:	429a      	cmp	r2, r3
 8021480:	f2c0 817b 	blt.w	802177a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021484:	9b08      	ldr	r3, [sp, #32]
 8021486:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8021488:	9313      	str	r3, [sp, #76]	; 0x4c
 802148a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802148e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021490:	2b00      	cmp	r3, #0
 8021492:	f340 81a4 	ble.w	80217de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8021496:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021498:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802149a:	1418      	asrs	r0, r3, #16
 802149c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802149e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80214a2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80214a4:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80214a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80214aa:	142d      	asrs	r5, r5, #16
 80214ac:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80214b0:	f100 81f8 	bmi.w	80218a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80214b4:	f102 3eff 	add.w	lr, r2, #4294967295
 80214b8:	4575      	cmp	r5, lr
 80214ba:	f280 81f3 	bge.w	80218a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80214be:	2800      	cmp	r0, #0
 80214c0:	f2c0 81f0 	blt.w	80218a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80214c4:	f103 3eff 	add.w	lr, r3, #4294967295
 80214c8:	4570      	cmp	r0, lr
 80214ca:	f280 81eb 	bge.w	80218a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80214ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80214d0:	b212      	sxth	r2, r2
 80214d2:	fb00 5002 	mla	r0, r0, r2, r5
 80214d6:	fa1f fe81 	uxth.w	lr, r1
 80214da:	eb03 0a00 	add.w	sl, r3, r0
 80214de:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80214e2:	f813 9000 	ldrb.w	r9, [r3, r0]
 80214e6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80214ea:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80214ee:	b29b      	uxth	r3, r3
 80214f0:	f1bc 0f00 	cmp.w	ip, #0
 80214f4:	f000 81b9 	beq.w	802186a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80214f8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80214fc:	940d      	str	r4, [sp, #52]	; 0x34
 80214fe:	eb0a 0b02 	add.w	fp, sl, r2
 8021502:	fa1f fa8c 	uxth.w	sl, ip
 8021506:	fb0a fe0e 	mul.w	lr, sl, lr
 802150a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802150e:	fa1f fa8a 	uxth.w	sl, sl
 8021512:	eba5 050e 	sub.w	r5, r5, lr
 8021516:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802151a:	940e      	str	r4, [sp, #56]	; 0x38
 802151c:	eba3 030a 	sub.w	r3, r3, sl
 8021520:	b2ad      	uxth	r5, r5
 8021522:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021524:	b29b      	uxth	r3, r3
 8021526:	fb08 f505 	mul.w	r5, r8, r5
 802152a:	fb09 5303 	mla	r3, r9, r3, r5
 802152e:	fb0a 3304 	mla	r3, sl, r4, r3
 8021532:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021534:	fb0e 3304 	mla	r3, lr, r4, r3
 8021538:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802153c:	2b00      	cmp	r3, #0
 802153e:	f000 810f 	beq.w	8021760 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021542:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021544:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021548:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 802154c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021550:	f000 8190 	beq.w	8021874 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8021554:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021558:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802155c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021560:	fb09 f000 	mul.w	r0, r9, r0
 8021564:	fb0a fe0e 	mul.w	lr, sl, lr
 8021568:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 802156c:	f100 0b20 	add.w	fp, r0, #32
 8021570:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021574:	44ce      	add	lr, r9
 8021576:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802157a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802157e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021582:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021586:	ea4e 0909 	orr.w	r9, lr, r9
 802158a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802158e:	8868      	ldrh	r0, [r5, #2]
 8021590:	d019      	beq.n	80215c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8021592:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021596:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802159a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802159e:	fb08 f800 	mul.w	r8, r8, r0
 80215a2:	fb0a fe0e 	mul.w	lr, sl, lr
 80215a6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80215aa:	f108 0b20 	add.w	fp, r8, #32
 80215ae:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80215b2:	4486      	add	lr, r0
 80215b4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80215b8:	0a00      	lsrs	r0, r0, #8
 80215ba:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80215be:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80215c2:	ea4e 0000 	orr.w	r0, lr, r0
 80215c6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80215ca:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80215ce:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80215d2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80215d6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80215da:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80215de:	ea4e 0909 	orr.w	r9, lr, r9
 80215e2:	ea4a 0000 	orr.w	r0, sl, r0
 80215e6:	f1bc 0f00 	cmp.w	ip, #0
 80215ea:	f000 8145 	beq.w	8021878 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80215ee:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80215f2:	3a01      	subs	r2, #1
 80215f4:	0052      	lsls	r2, r2, #1
 80215f6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80215f8:	3202      	adds	r2, #2
 80215fa:	2cff      	cmp	r4, #255	; 0xff
 80215fc:	eb05 0e02 	add.w	lr, r5, r2
 8021600:	5aaa      	ldrh	r2, [r5, r2]
 8021602:	d018      	beq.n	8021636 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8021604:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8021608:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802160c:	fb04 fa02 	mul.w	sl, r4, r2
 8021610:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021614:	fb08 f805 	mul.w	r8, r8, r5
 8021618:	f10a 0520 	add.w	r5, sl, #32
 802161c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021620:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8021624:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021628:	4442      	add	r2, r8
 802162a:	0a2d      	lsrs	r5, r5, #8
 802162c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021630:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021634:	432a      	orrs	r2, r5
 8021636:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021638:	f8be 5002 	ldrh.w	r5, [lr, #2]
 802163c:	2cff      	cmp	r4, #255	; 0xff
 802163e:	d01a      	beq.n	8021676 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8021640:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8021644:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021648:	fb04 fa05 	mul.w	sl, r4, r5
 802164c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021650:	fb08 f80e 	mul.w	r8, r8, lr
 8021654:	f10a 0e20 	add.w	lr, sl, #32
 8021658:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 802165c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021660:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021664:	4445      	add	r5, r8
 8021666:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802166a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802166e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8021672:	ea45 050e 	orr.w	r5, r5, lr
 8021676:	fb1c fe01 	smulbb	lr, ip, r1
 802167a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802167e:	f1cc 0810 	rsb	r8, ip, #16
 8021682:	eba8 0801 	sub.w	r8, r8, r1
 8021686:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802168a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802168e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8021692:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8021696:	4341      	muls	r1, r0
 8021698:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802169c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80216a0:	ea4a 0202 	orr.w	r2, sl, r2
 80216a4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80216a8:	fb09 1108 	mla	r1, r9, r8, r1
 80216ac:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80216b0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80216b4:	fb0c 1102 	mla	r1, ip, r2, r1
 80216b8:	ea4b 0505 	orr.w	r5, fp, r5
 80216bc:	fb0e 1e05 	mla	lr, lr, r5, r1
 80216c0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80216c4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80216c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80216cc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80216d0:	ea42 0e0e 	orr.w	lr, r2, lr
 80216d4:	fa1f f28e 	uxth.w	r2, lr
 80216d8:	2bff      	cmp	r3, #255	; 0xff
 80216da:	d103      	bne.n	80216e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80216dc:	9912      	ldr	r1, [sp, #72]	; 0x48
 80216de:	29ff      	cmp	r1, #255	; 0xff
 80216e0:	f000 80de 	beq.w	80218a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80216e4:	990a      	ldr	r1, [sp, #40]	; 0x28
 80216e6:	8838      	ldrh	r0, [r7, #0]
 80216e8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80216ea:	434b      	muls	r3, r1
 80216ec:	f103 0c01 	add.w	ip, r3, #1
 80216f0:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80216f4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80216f8:	fa5f fc83 	uxtb.w	ip, r3
 80216fc:	1203      	asrs	r3, r0, #8
 80216fe:	1215      	asrs	r5, r2, #8
 8021700:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021704:	fb13 f30c 	smulbb	r3, r3, ip
 8021708:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802170c:	fb05 3501 	mla	r5, r5, r1, r3
 8021710:	10c3      	asrs	r3, r0, #3
 8021712:	10d1      	asrs	r1, r2, #3
 8021714:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021718:	fb13 f30c 	smulbb	r3, r3, ip
 802171c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021720:	fb01 3104 	mla	r1, r1, r4, r3
 8021724:	00c3      	lsls	r3, r0, #3
 8021726:	00d2      	lsls	r2, r2, #3
 8021728:	b2db      	uxtb	r3, r3
 802172a:	b2d2      	uxtb	r2, r2
 802172c:	fb13 f30c 	smulbb	r3, r3, ip
 8021730:	b2ad      	uxth	r5, r5
 8021732:	fb02 3304 	mla	r3, r2, r4, r3
 8021736:	b29a      	uxth	r2, r3
 8021738:	1c6b      	adds	r3, r5, #1
 802173a:	b289      	uxth	r1, r1
 802173c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021740:	1c53      	adds	r3, r2, #1
 8021742:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021746:	1c4a      	adds	r2, r1, #1
 8021748:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802174c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021750:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021754:	0949      	lsrs	r1, r1, #5
 8021756:	432b      	orrs	r3, r5
 8021758:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802175c:	430b      	orrs	r3, r1
 802175e:	803b      	strh	r3, [r7, #0]
 8021760:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021762:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021764:	4413      	add	r3, r2
 8021766:	9321      	str	r3, [sp, #132]	; 0x84
 8021768:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802176a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802176c:	441a      	add	r2, r3
 802176e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021770:	9222      	str	r2, [sp, #136]	; 0x88
 8021772:	3b01      	subs	r3, #1
 8021774:	3702      	adds	r7, #2
 8021776:	9313      	str	r3, [sp, #76]	; 0x4c
 8021778:	e689      	b.n	802148e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802177a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802177c:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 802177e:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8021780:	4433      	add	r3, r6
 8021782:	9321      	str	r3, [sp, #132]	; 0x84
 8021784:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021786:	441c      	add	r4, r3
 8021788:	9b08      	ldr	r3, [sp, #32]
 802178a:	9422      	str	r4, [sp, #136]	; 0x88
 802178c:	3b01      	subs	r3, #1
 802178e:	9308      	str	r3, [sp, #32]
 8021790:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021792:	3302      	adds	r3, #2
 8021794:	9309      	str	r3, [sp, #36]	; 0x24
 8021796:	e658      	b.n	802144a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8021798:	d028      	beq.n	80217ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802179a:	9b08      	ldr	r3, [sp, #32]
 802179c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 802179e:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80217a0:	3b01      	subs	r3, #1
 80217a2:	fb00 5003 	mla	r0, r0, r3, r5
 80217a6:	1400      	asrs	r0, r0, #16
 80217a8:	f53f ae6c 	bmi.w	8021484 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80217ac:	3901      	subs	r1, #1
 80217ae:	4288      	cmp	r0, r1
 80217b0:	f6bf ae68 	bge.w	8021484 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80217b4:	9924      	ldr	r1, [sp, #144]	; 0x90
 80217b6:	9822      	ldr	r0, [sp, #136]	; 0x88
 80217b8:	fb01 0303 	mla	r3, r1, r3, r0
 80217bc:	141b      	asrs	r3, r3, #16
 80217be:	f53f ae61 	bmi.w	8021484 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80217c2:	3a01      	subs	r2, #1
 80217c4:	4293      	cmp	r3, r2
 80217c6:	f6bf ae5d 	bge.w	8021484 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80217ca:	9b08      	ldr	r3, [sp, #32]
 80217cc:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80217d0:	9313      	str	r3, [sp, #76]	; 0x4c
 80217d2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80217d6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80217d8:	2b00      	cmp	r3, #0
 80217da:	f300 8082 	bgt.w	80218e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80217de:	9b08      	ldr	r3, [sp, #32]
 80217e0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80217e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80217e6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80217ea:	9309      	str	r3, [sp, #36]	; 0x24
 80217ec:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80217ee:	2b00      	cmp	r3, #0
 80217f0:	f340 81ef 	ble.w	8021bd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80217f4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80217f8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80217fc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021800:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021802:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021806:	ee31 1a05 	vadd.f32	s2, s2, s10
 802180a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802180e:	eef0 6a62 	vmov.f32	s13, s5
 8021812:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021816:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802181a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802181e:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8021822:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021826:	eef0 6a43 	vmov.f32	s13, s6
 802182a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802182e:	ee12 2a90 	vmov	r2, s5
 8021832:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021836:	fb92 f3f3 	sdiv	r3, r2, r3
 802183a:	ee13 2a10 	vmov	r2, s6
 802183e:	9323      	str	r3, [sp, #140]	; 0x8c
 8021840:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021842:	fb92 f3f3 	sdiv	r3, r2, r3
 8021846:	9324      	str	r3, [sp, #144]	; 0x90
 8021848:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802184a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802184c:	3b01      	subs	r3, #1
 802184e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021852:	9311      	str	r3, [sp, #68]	; 0x44
 8021854:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021856:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 802185a:	bf08      	it	eq
 802185c:	4613      	moveq	r3, r2
 802185e:	9308      	str	r3, [sp, #32]
 8021860:	eeb0 3a67 	vmov.f32	s6, s15
 8021864:	eef0 2a47 	vmov.f32	s5, s14
 8021868:	e5e1      	b.n	802142e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802186a:	fb08 f505 	mul.w	r5, r8, r5
 802186e:	fb09 5303 	mla	r3, r9, r3, r5
 8021872:	e661      	b.n	8021538 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8021874:	4681      	mov	r9, r0
 8021876:	e688      	b.n	802158a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8021878:	f1c1 0210 	rsb	r2, r1, #16
 802187c:	4341      	muls	r1, r0
 802187e:	fb09 1902 	mla	r9, r9, r2, r1
 8021882:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021886:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802188a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802188e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021892:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021896:	ea42 0909 	orr.w	r9, r2, r9
 802189a:	fa1f f289 	uxth.w	r2, r9
 802189e:	e71b      	b.n	80216d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 80218a0:	803a      	strh	r2, [r7, #0]
 80218a2:	e75d      	b.n	8021760 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80218a4:	f115 0e01 	adds.w	lr, r5, #1
 80218a8:	f53f af5a 	bmi.w	8021760 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80218ac:	4572      	cmp	r2, lr
 80218ae:	f6ff af57 	blt.w	8021760 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80218b2:	f110 0e01 	adds.w	lr, r0, #1
 80218b6:	f53f af53 	bmi.w	8021760 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80218ba:	4573      	cmp	r3, lr
 80218bc:	f6ff af50 	blt.w	8021760 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80218c0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80218c2:	9502      	str	r5, [sp, #8]
 80218c4:	b21b      	sxth	r3, r3
 80218c6:	b212      	sxth	r2, r2
 80218c8:	e9cd 0103 	strd	r0, r1, [sp, #12]
 80218cc:	9301      	str	r3, [sp, #4]
 80218ce:	9200      	str	r2, [sp, #0]
 80218d0:	e9cd c405 	strd	ip, r4, [sp, #20]
 80218d4:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 80218d8:	4639      	mov	r1, r7
 80218da:	9815      	ldr	r0, [sp, #84]	; 0x54
 80218dc:	f7ff fc04 	bl	80210e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80218e0:	e73e      	b.n	8021760 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80218e2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80218e4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80218e8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80218ea:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80218ee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80218f0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80218f4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80218f6:	141f      	asrs	r7, r3, #16
 80218f8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80218fa:	141b      	asrs	r3, r3, #16
 80218fc:	fb01 3707 	mla	r7, r1, r7, r3
 8021900:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021902:	fa1f fc82 	uxth.w	ip, r2
 8021906:	eb03 0a07 	add.w	sl, r3, r7
 802190a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802190e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8021912:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021916:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802191a:	b29b      	uxth	r3, r3
 802191c:	2d00      	cmp	r5, #0
 802191e:	f000 813d 	beq.w	8021b9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8021922:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8021926:	940f      	str	r4, [sp, #60]	; 0x3c
 8021928:	eb0a 0b01 	add.w	fp, sl, r1
 802192c:	fa1f fa85 	uxth.w	sl, r5
 8021930:	fb0a fc0c 	mul.w	ip, sl, ip
 8021934:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8021938:	fa1f fa8a 	uxth.w	sl, sl
 802193c:	eba0 000c 	sub.w	r0, r0, ip
 8021940:	eba3 030a 	sub.w	r3, r3, sl
 8021944:	b280      	uxth	r0, r0
 8021946:	fb08 f000 	mul.w	r0, r8, r0
 802194a:	b29b      	uxth	r3, r3
 802194c:	fb09 0303 	mla	r3, r9, r3, r0
 8021950:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021952:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021956:	9410      	str	r4, [sp, #64]	; 0x40
 8021958:	fb0a 3300 	mla	r3, sl, r0, r3
 802195c:	fb0c 3304 	mla	r3, ip, r4, r3
 8021960:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021964:	2b00      	cmp	r3, #0
 8021966:	f000 810b 	beq.w	8021b80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 802196a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 802196c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802196e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021972:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8021976:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802197a:	f000 8114 	beq.w	8021ba6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 802197e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021982:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021986:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802198a:	fb09 f707 	mul.w	r7, r9, r7
 802198e:	fb0a fc0c 	mul.w	ip, sl, ip
 8021992:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8021996:	f107 0b20 	add.w	fp, r7, #32
 802199a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802199e:	44cc      	add	ip, r9
 80219a0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80219a4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80219a8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80219ac:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80219b0:	ea4c 0909 	orr.w	r9, ip, r9
 80219b4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80219b8:	8847      	ldrh	r7, [r0, #2]
 80219ba:	d019      	beq.n	80219f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 80219bc:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80219c0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80219c4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80219c8:	fb08 f807 	mul.w	r8, r8, r7
 80219cc:	fb0a fc0c 	mul.w	ip, sl, ip
 80219d0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80219d4:	f108 0b20 	add.w	fp, r8, #32
 80219d8:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80219dc:	44bc      	add	ip, r7
 80219de:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80219e2:	0a3f      	lsrs	r7, r7, #8
 80219e4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80219e8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80219ec:	ea4c 0707 	orr.w	r7, ip, r7
 80219f0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80219f4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80219f8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80219fc:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021a00:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021a04:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021a08:	ea4c 0909 	orr.w	r9, ip, r9
 8021a0c:	ea4a 0707 	orr.w	r7, sl, r7
 8021a10:	2d00      	cmp	r5, #0
 8021a12:	f000 80ca 	beq.w	8021baa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8021a16:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8021a1a:	3901      	subs	r1, #1
 8021a1c:	0049      	lsls	r1, r1, #1
 8021a1e:	3102      	adds	r1, #2
 8021a20:	eb00 0c01 	add.w	ip, r0, r1
 8021a24:	5a41      	ldrh	r1, [r0, r1]
 8021a26:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021a28:	28ff      	cmp	r0, #255	; 0xff
 8021a2a:	d019      	beq.n	8021a60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8021a2c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021a2e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8021a32:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021a36:	fb04 fa01 	mul.w	sl, r4, r1
 8021a3a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021a3e:	fb08 f800 	mul.w	r8, r8, r0
 8021a42:	f10a 0020 	add.w	r0, sl, #32
 8021a46:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8021a4a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8021a4e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021a52:	4441      	add	r1, r8
 8021a54:	0a00      	lsrs	r0, r0, #8
 8021a56:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8021a5a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021a5e:	4301      	orrs	r1, r0
 8021a60:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021a62:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8021a66:	2cff      	cmp	r4, #255	; 0xff
 8021a68:	d01a      	beq.n	8021aa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8021a6a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8021a6e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021a72:	fb04 fa00 	mul.w	sl, r4, r0
 8021a76:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021a7a:	fb08 f80c 	mul.w	r8, r8, ip
 8021a7e:	f10a 0c20 	add.w	ip, sl, #32
 8021a82:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8021a86:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8021a8a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021a8e:	4440      	add	r0, r8
 8021a90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021a94:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8021a98:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8021a9c:	ea40 000c 	orr.w	r0, r0, ip
 8021aa0:	fb15 fc02 	smulbb	ip, r5, r2
 8021aa4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8021aa8:	f1c5 0810 	rsb	r8, r5, #16
 8021aac:	eba8 0802 	sub.w	r8, r8, r2
 8021ab0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8021ab4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8021ab8:	437a      	muls	r2, r7
 8021aba:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8021abe:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8021ac2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021ac6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021aca:	fb09 2208 	mla	r2, r9, r8, r2
 8021ace:	ea4a 0101 	orr.w	r1, sl, r1
 8021ad2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8021ad6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021ada:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021ade:	fb05 2201 	mla	r2, r5, r1, r2
 8021ae2:	ea4b 0000 	orr.w	r0, fp, r0
 8021ae6:	fb0c 2200 	mla	r2, ip, r0, r2
 8021aea:	0d57      	lsrs	r7, r2, #21
 8021aec:	0952      	lsrs	r2, r2, #5
 8021aee:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021af2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021af6:	433a      	orrs	r2, r7
 8021af8:	2bff      	cmp	r3, #255	; 0xff
 8021afa:	b292      	uxth	r2, r2
 8021afc:	d102      	bne.n	8021b04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8021afe:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021b00:	29ff      	cmp	r1, #255	; 0xff
 8021b02:	d063      	beq.n	8021bcc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8021b04:	980a      	ldr	r0, [sp, #40]	; 0x28
 8021b06:	f8be 1000 	ldrh.w	r1, [lr]
 8021b0a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021b0c:	4343      	muls	r3, r0
 8021b0e:	1c58      	adds	r0, r3, #1
 8021b10:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8021b14:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021b18:	1208      	asrs	r0, r1, #8
 8021b1a:	b2db      	uxtb	r3, r3
 8021b1c:	1215      	asrs	r5, r2, #8
 8021b1e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021b22:	fb10 f003 	smulbb	r0, r0, r3
 8021b26:	10cf      	asrs	r7, r1, #3
 8021b28:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021b2c:	00c9      	lsls	r1, r1, #3
 8021b2e:	fb05 0504 	mla	r5, r5, r4, r0
 8021b32:	b2c9      	uxtb	r1, r1
 8021b34:	10d0      	asrs	r0, r2, #3
 8021b36:	00d2      	lsls	r2, r2, #3
 8021b38:	fb11 f103 	smulbb	r1, r1, r3
 8021b3c:	b2d2      	uxtb	r2, r2
 8021b3e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021b42:	fb02 1204 	mla	r2, r2, r4, r1
 8021b46:	fb17 f703 	smulbb	r7, r7, r3
 8021b4a:	b2ad      	uxth	r5, r5
 8021b4c:	b292      	uxth	r2, r2
 8021b4e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021b52:	fb00 7004 	mla	r0, r0, r4, r7
 8021b56:	1c6b      	adds	r3, r5, #1
 8021b58:	1c57      	adds	r7, r2, #1
 8021b5a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021b5e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8021b62:	b280      	uxth	r0, r0
 8021b64:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021b68:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021b6c:	433d      	orrs	r5, r7
 8021b6e:	1c47      	adds	r7, r0, #1
 8021b70:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021b74:	097f      	lsrs	r7, r7, #5
 8021b76:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021b7a:	433d      	orrs	r5, r7
 8021b7c:	f8ae 5000 	strh.w	r5, [lr]
 8021b80:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021b82:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021b84:	4413      	add	r3, r2
 8021b86:	9321      	str	r3, [sp, #132]	; 0x84
 8021b88:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021b8a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021b8c:	441a      	add	r2, r3
 8021b8e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021b90:	9222      	str	r2, [sp, #136]	; 0x88
 8021b92:	3b01      	subs	r3, #1
 8021b94:	f10e 0e02 	add.w	lr, lr, #2
 8021b98:	9313      	str	r3, [sp, #76]	; 0x4c
 8021b9a:	e61c      	b.n	80217d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8021b9c:	fb08 f000 	mul.w	r0, r8, r0
 8021ba0:	fb09 0303 	mla	r3, r9, r3, r0
 8021ba4:	e6dc      	b.n	8021960 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8021ba6:	46b9      	mov	r9, r7
 8021ba8:	e704      	b.n	80219b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8021baa:	f1c2 0110 	rsb	r1, r2, #16
 8021bae:	437a      	muls	r2, r7
 8021bb0:	fb09 2901 	mla	r9, r9, r1, r2
 8021bb4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021bb8:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8021bbc:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8021bc0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021bc4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021bc8:	4302      	orrs	r2, r0
 8021bca:	e795      	b.n	8021af8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8021bcc:	f8ae 2000 	strh.w	r2, [lr]
 8021bd0:	e7d6      	b.n	8021b80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8021bd2:	b017      	add	sp, #92	; 0x5c
 8021bd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021bd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8021bd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021bdc:	b085      	sub	sp, #20
 8021bde:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8021be2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8021be6:	9103      	str	r1, [sp, #12]
 8021be8:	fb00 7406 	mla	r4, r0, r6, r7
 8021bec:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8021bf0:	2800      	cmp	r0, #0
 8021bf2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8021bf6:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8021bfa:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8021bfe:	9501      	str	r5, [sp, #4]
 8021c00:	eb02 0904 	add.w	r9, r2, r4
 8021c04:	f2c0 8141 	blt.w	8021e8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021c08:	4583      	cmp	fp, r0
 8021c0a:	f340 813e 	ble.w	8021e8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021c0e:	2f00      	cmp	r7, #0
 8021c10:	f2c0 8137 	blt.w	8021e82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021c14:	42be      	cmp	r6, r7
 8021c16:	f340 8134 	ble.w	8021e82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021c1a:	f812 c004 	ldrb.w	ip, [r2, r4]
 8021c1e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8021c22:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021c26:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8021c2a:	4355      	muls	r5, r2
 8021c2c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021c30:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8021c34:	fb0c f203 	mul.w	r2, ip, r3
 8021c38:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8021c3c:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8021c40:	441d      	add	r5, r3
 8021c42:	f102 0320 	add.w	r3, r2, #32
 8021c46:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021c4a:	0a1b      	lsrs	r3, r3, #8
 8021c4c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021c50:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021c54:	431c      	orrs	r4, r3
 8021c56:	1c7b      	adds	r3, r7, #1
 8021c58:	f100 811c 	bmi.w	8021e94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021c5c:	429e      	cmp	r6, r3
 8021c5e:	f340 8119 	ble.w	8021e94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021c62:	2900      	cmp	r1, #0
 8021c64:	f000 8119 	beq.w	8021e9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8021c68:	9a01      	ldr	r2, [sp, #4]
 8021c6a:	f899 3001 	ldrb.w	r3, [r9, #1]
 8021c6e:	8855      	ldrh	r5, [r2, #2]
 8021c70:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8021c74:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8021c78:	fb08 f802 	mul.w	r8, r8, r2
 8021c7c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021c80:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8021c84:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8021c88:	435d      	muls	r5, r3
 8021c8a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021c8e:	44d0      	add	r8, sl
 8021c90:	f105 0a20 	add.w	sl, r5, #32
 8021c94:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021c98:	0a2d      	lsrs	r5, r5, #8
 8021c9a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8021c9e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021ca2:	432a      	orrs	r2, r5
 8021ca4:	3001      	adds	r0, #1
 8021ca6:	f100 80fe 	bmi.w	8021ea6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8021caa:	4583      	cmp	fp, r0
 8021cac:	f340 80fb 	ble.w	8021ea6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8021cb0:	f1be 0f00 	cmp.w	lr, #0
 8021cb4:	f000 80fc 	beq.w	8021eb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8021cb8:	2f00      	cmp	r7, #0
 8021cba:	f2c0 80f1 	blt.w	8021ea0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8021cbe:	42be      	cmp	r6, r7
 8021cc0:	f340 80ee 	ble.w	8021ea0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8021cc4:	9801      	ldr	r0, [sp, #4]
 8021cc6:	f819 5006 	ldrb.w	r5, [r9, r6]
 8021cca:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8021cce:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8021cd2:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8021cd6:	fb0a fa00 	mul.w	sl, sl, r0
 8021cda:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8021cde:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8021ce2:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8021ce6:	fb05 f808 	mul.w	r8, r5, r8
 8021cea:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8021cee:	4482      	add	sl, r0
 8021cf0:	f108 0020 	add.w	r0, r8, #32
 8021cf4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021cf8:	0a00      	lsrs	r0, r0, #8
 8021cfa:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8021cfe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021d02:	ea4b 0b00 	orr.w	fp, fp, r0
 8021d06:	3701      	adds	r7, #1
 8021d08:	f100 80d7 	bmi.w	8021eba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8021d0c:	42be      	cmp	r6, r7
 8021d0e:	f340 80d4 	ble.w	8021eba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8021d12:	2900      	cmp	r1, #0
 8021d14:	f000 80d4 	beq.w	8021ec0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8021d18:	3601      	adds	r6, #1
 8021d1a:	9801      	ldr	r0, [sp, #4]
 8021d1c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021d20:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8021d24:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8021d28:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8021d2c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021d30:	fb09 f906 	mul.w	r9, r9, r6
 8021d34:	fb07 f800 	mul.w	r8, r7, r0
 8021d38:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8021d3c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021d40:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8021d44:	44d1      	add	r9, sl
 8021d46:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8021d4a:	f108 0020 	add.w	r0, r8, #32
 8021d4e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021d52:	0a00      	lsrs	r0, r0, #8
 8021d54:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021d58:	4330      	orrs	r0, r6
 8021d5a:	b28e      	uxth	r6, r1
 8021d5c:	fa1f f98e 	uxth.w	r9, lr
 8021d60:	fb06 f809 	mul.w	r8, r6, r9
 8021d64:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8021d68:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8021d6c:	0136      	lsls	r6, r6, #4
 8021d6e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021d72:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8021d76:	9601      	str	r6, [sp, #4]
 8021d78:	ea4a 0404 	orr.w	r4, sl, r4
 8021d7c:	fa1f f689 	uxth.w	r6, r9
 8021d80:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021d84:	fb11 f90e 	smulbb	r9, r1, lr
 8021d88:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8021d8c:	9602      	str	r6, [sp, #8]
 8021d8e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021d92:	4626      	mov	r6, r4
 8021d94:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021d98:	f1ce 0410 	rsb	r4, lr, #16
 8021d9c:	1a64      	subs	r4, r4, r1
 8021d9e:	ea4a 0202 	orr.w	r2, sl, r2
 8021da2:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8021da6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021daa:	434a      	muls	r2, r1
 8021dac:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021db0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021db4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021db8:	fb04 2406 	mla	r4, r4, r6, r2
 8021dbc:	ea4a 0000 	orr.w	r0, sl, r0
 8021dc0:	fb09 4200 	mla	r2, r9, r0, r4
 8021dc4:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021dc8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8021dcc:	9801      	ldr	r0, [sp, #4]
 8021dce:	9903      	ldr	r1, [sp, #12]
 8021dd0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021dd4:	ea44 0b0b 	orr.w	fp, r4, fp
 8021dd8:	9c02      	ldr	r4, [sp, #8]
 8021dda:	8809      	ldrh	r1, [r1, #0]
 8021ddc:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8021de0:	1b00      	subs	r0, r0, r4
 8021de2:	9c01      	ldr	r4, [sp, #4]
 8021de4:	eba4 0608 	sub.w	r6, r4, r8
 8021de8:	b2b6      	uxth	r6, r6
 8021dea:	b280      	uxth	r0, r0
 8021dec:	4373      	muls	r3, r6
 8021dee:	fb0c 3300 	mla	r3, ip, r0, r3
 8021df2:	9802      	ldr	r0, [sp, #8]
 8021df4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021df8:	fb00 3505 	mla	r5, r0, r5, r3
 8021dfc:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8021e00:	fb08 5707 	mla	r7, r8, r7, r5
 8021e04:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021e08:	120b      	asrs	r3, r1, #8
 8021e0a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021e0e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8021e12:	b2ff      	uxtb	r7, r7
 8021e14:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021e18:	10c8      	asrs	r0, r1, #3
 8021e1a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021e1e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021e22:	00c9      	lsls	r1, r1, #3
 8021e24:	437b      	muls	r3, r7
 8021e26:	ea42 0e0e 	orr.w	lr, r2, lr
 8021e2a:	b2c9      	uxtb	r1, r1
 8021e2c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021e30:	fa1f f28e 	uxth.w	r2, lr
 8021e34:	4378      	muls	r0, r7
 8021e36:	434f      	muls	r7, r1
 8021e38:	1c59      	adds	r1, r3, #1
 8021e3a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8021e3e:	1213      	asrs	r3, r2, #8
 8021e40:	f023 0307 	bic.w	r3, r3, #7
 8021e44:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021e48:	1c41      	adds	r1, r0, #1
 8021e4a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8021e4e:	10d1      	asrs	r1, r2, #3
 8021e50:	f021 0103 	bic.w	r1, r1, #3
 8021e54:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021e58:	021b      	lsls	r3, r3, #8
 8021e5a:	00c9      	lsls	r1, r1, #3
 8021e5c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021e60:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8021e64:	430b      	orrs	r3, r1
 8021e66:	1c79      	adds	r1, r7, #1
 8021e68:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8021e6c:	00d2      	lsls	r2, r2, #3
 8021e6e:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8021e72:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021e76:	431a      	orrs	r2, r3
 8021e78:	9b03      	ldr	r3, [sp, #12]
 8021e7a:	801a      	strh	r2, [r3, #0]
 8021e7c:	b005      	add	sp, #20
 8021e7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021e82:	f04f 0c00 	mov.w	ip, #0
 8021e86:	4664      	mov	r4, ip
 8021e88:	e6e5      	b.n	8021c56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8021e8a:	2300      	movs	r3, #0
 8021e8c:	469c      	mov	ip, r3
 8021e8e:	461a      	mov	r2, r3
 8021e90:	461c      	mov	r4, r3
 8021e92:	e707      	b.n	8021ca4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021e94:	2300      	movs	r3, #0
 8021e96:	461a      	mov	r2, r3
 8021e98:	e704      	b.n	8021ca4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021e9a:	460b      	mov	r3, r1
 8021e9c:	460a      	mov	r2, r1
 8021e9e:	e701      	b.n	8021ca4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021ea0:	2500      	movs	r5, #0
 8021ea2:	46ab      	mov	fp, r5
 8021ea4:	e72f      	b.n	8021d06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8021ea6:	2700      	movs	r7, #0
 8021ea8:	463d      	mov	r5, r7
 8021eaa:	4638      	mov	r0, r7
 8021eac:	46bb      	mov	fp, r7
 8021eae:	e754      	b.n	8021d5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021eb0:	4677      	mov	r7, lr
 8021eb2:	4675      	mov	r5, lr
 8021eb4:	4670      	mov	r0, lr
 8021eb6:	46f3      	mov	fp, lr
 8021eb8:	e74f      	b.n	8021d5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021eba:	2700      	movs	r7, #0
 8021ebc:	4638      	mov	r0, r7
 8021ebe:	e74c      	b.n	8021d5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021ec0:	460f      	mov	r7, r1
 8021ec2:	4608      	mov	r0, r1
 8021ec4:	e749      	b.n	8021d5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08021ec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021ec8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021ecc:	b093      	sub	sp, #76	; 0x4c
 8021ece:	9210      	str	r2, [sp, #64]	; 0x40
 8021ed0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021ed2:	910e      	str	r1, [sp, #56]	; 0x38
 8021ed4:	9306      	str	r3, [sp, #24]
 8021ed6:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8021eda:	9011      	str	r0, [sp, #68]	; 0x44
 8021edc:	6850      	ldr	r0, [r2, #4]
 8021ede:	6812      	ldr	r2, [r2, #0]
 8021ee0:	fb00 1303 	mla	r3, r0, r3, r1
 8021ee4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021ee8:	9307      	str	r3, [sp, #28]
 8021eea:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021eec:	681b      	ldr	r3, [r3, #0]
 8021eee:	9308      	str	r3, [sp, #32]
 8021ef0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021ef2:	685b      	ldr	r3, [r3, #4]
 8021ef4:	9309      	str	r3, [sp, #36]	; 0x24
 8021ef6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021ef8:	2b00      	cmp	r3, #0
 8021efa:	dc03      	bgt.n	8021f04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021efc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021efe:	2b00      	cmp	r3, #0
 8021f00:	f340 83b4 	ble.w	802266c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8021f04:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021f06:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021f0a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021f0e:	1e48      	subs	r0, r1, #1
 8021f10:	1e55      	subs	r5, r2, #1
 8021f12:	9b06      	ldr	r3, [sp, #24]
 8021f14:	2b00      	cmp	r3, #0
 8021f16:	f340 8163 	ble.w	80221e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8021f1a:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8021f1c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021f1e:	1436      	asrs	r6, r6, #16
 8021f20:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021f24:	d406      	bmi.n	8021f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021f26:	4286      	cmp	r6, r0
 8021f28:	da04      	bge.n	8021f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021f2a:	2b00      	cmp	r3, #0
 8021f2c:	db02      	blt.n	8021f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021f2e:	42ab      	cmp	r3, r5
 8021f30:	f2c0 8157 	blt.w	80221e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8021f34:	3601      	adds	r6, #1
 8021f36:	f100 8144 	bmi.w	80221c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021f3a:	42b1      	cmp	r1, r6
 8021f3c:	f2c0 8141 	blt.w	80221c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021f40:	3301      	adds	r3, #1
 8021f42:	f100 813e 	bmi.w	80221c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021f46:	429a      	cmp	r2, r3
 8021f48:	f2c0 813b 	blt.w	80221c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021f4c:	9b06      	ldr	r3, [sp, #24]
 8021f4e:	9f07      	ldr	r7, [sp, #28]
 8021f50:	930f      	str	r3, [sp, #60]	; 0x3c
 8021f52:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021f56:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021f58:	2b00      	cmp	r3, #0
 8021f5a:	f340 8164 	ble.w	8022226 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8021f5e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021f60:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8021f62:	1418      	asrs	r0, r3, #16
 8021f64:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021f66:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021f6a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021f6c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021f70:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021f72:	142d      	asrs	r5, r5, #16
 8021f74:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021f78:	f100 81ee 	bmi.w	8022358 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021f7c:	f102 3eff 	add.w	lr, r2, #4294967295
 8021f80:	4575      	cmp	r5, lr
 8021f82:	f280 81e9 	bge.w	8022358 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021f86:	2800      	cmp	r0, #0
 8021f88:	f2c0 81e6 	blt.w	8022358 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021f8c:	f103 3eff 	add.w	lr, r3, #4294967295
 8021f90:	4570      	cmp	r0, lr
 8021f92:	f280 81e1 	bge.w	8022358 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021f96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021f98:	b212      	sxth	r2, r2
 8021f9a:	fb00 5002 	mla	r0, r0, r2, r5
 8021f9e:	fa1f fe81 	uxth.w	lr, r1
 8021fa2:	eb03 0a00 	add.w	sl, r3, r0
 8021fa6:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8021faa:	f813 9000 	ldrb.w	r9, [r3, r0]
 8021fae:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021fb2:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8021fb6:	b29b      	uxth	r3, r3
 8021fb8:	f1bc 0f00 	cmp.w	ip, #0
 8021fbc:	f000 8179 	beq.w	80222b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8021fc0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8021fc4:	940a      	str	r4, [sp, #40]	; 0x28
 8021fc6:	eb0a 0b02 	add.w	fp, sl, r2
 8021fca:	fa1f fa8c 	uxth.w	sl, ip
 8021fce:	fb0a fe0e 	mul.w	lr, sl, lr
 8021fd2:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8021fd6:	fa1f fa8a 	uxth.w	sl, sl
 8021fda:	eba5 050e 	sub.w	r5, r5, lr
 8021fde:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021fe2:	940b      	str	r4, [sp, #44]	; 0x2c
 8021fe4:	eba3 030a 	sub.w	r3, r3, sl
 8021fe8:	b2ad      	uxth	r5, r5
 8021fea:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021fec:	b29b      	uxth	r3, r3
 8021fee:	fb08 f505 	mul.w	r5, r8, r5
 8021ff2:	fb09 5303 	mla	r3, r9, r3, r5
 8021ff6:	fb0a 3304 	mla	r3, sl, r4, r3
 8021ffa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021ffc:	fb0e 3304 	mla	r3, lr, r4, r3
 8022000:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022004:	2b00      	cmp	r3, #0
 8022006:	f000 80cf 	beq.w	80221a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802200a:	9c08      	ldr	r4, [sp, #32]
 802200c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022010:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8022014:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8022018:	f000 8150 	beq.w	80222bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 802201c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022020:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022024:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022028:	fb09 f000 	mul.w	r0, r9, r0
 802202c:	fb0a fe0e 	mul.w	lr, sl, lr
 8022030:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8022034:	f100 0b20 	add.w	fp, r0, #32
 8022038:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802203c:	44ce      	add	lr, r9
 802203e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8022042:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022046:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802204a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802204e:	ea4e 0909 	orr.w	r9, lr, r9
 8022052:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022056:	8868      	ldrh	r0, [r5, #2]
 8022058:	d019      	beq.n	802208e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 802205a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802205e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022062:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022066:	fb08 f800 	mul.w	r8, r8, r0
 802206a:	fb0a fe0e 	mul.w	lr, sl, lr
 802206e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8022072:	f108 0b20 	add.w	fp, r8, #32
 8022076:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802207a:	4486      	add	lr, r0
 802207c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8022080:	0a00      	lsrs	r0, r0, #8
 8022082:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8022086:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802208a:	ea4e 0000 	orr.w	r0, lr, r0
 802208e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8022092:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022096:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802209a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802209e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80220a2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80220a6:	ea4e 0909 	orr.w	r9, lr, r9
 80220aa:	ea4a 0000 	orr.w	r0, sl, r0
 80220ae:	f1bc 0f00 	cmp.w	ip, #0
 80220b2:	f000 8105 	beq.w	80222c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80220b6:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80220ba:	3a01      	subs	r2, #1
 80220bc:	0052      	lsls	r2, r2, #1
 80220be:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80220c0:	3202      	adds	r2, #2
 80220c2:	2cff      	cmp	r4, #255	; 0xff
 80220c4:	eb05 0e02 	add.w	lr, r5, r2
 80220c8:	5aaa      	ldrh	r2, [r5, r2]
 80220ca:	d018      	beq.n	80220fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80220cc:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80220d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80220d4:	fb04 fa02 	mul.w	sl, r4, r2
 80220d8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80220dc:	fb08 f805 	mul.w	r8, r8, r5
 80220e0:	f10a 0520 	add.w	r5, sl, #32
 80220e4:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80220e8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80220ec:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80220f0:	4442      	add	r2, r8
 80220f2:	0a2d      	lsrs	r5, r5, #8
 80220f4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80220f8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80220fc:	432a      	orrs	r2, r5
 80220fe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022100:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8022104:	2cff      	cmp	r4, #255	; 0xff
 8022106:	d01a      	beq.n	802213e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8022108:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 802210c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022110:	fb04 fa05 	mul.w	sl, r4, r5
 8022114:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022118:	fb08 f80e 	mul.w	r8, r8, lr
 802211c:	f10a 0e20 	add.w	lr, sl, #32
 8022120:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8022124:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8022128:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802212c:	4445      	add	r5, r8
 802212e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022132:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8022136:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802213a:	ea45 050e 	orr.w	r5, r5, lr
 802213e:	fb1c fe01 	smulbb	lr, ip, r1
 8022142:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8022146:	f1cc 0810 	rsb	r8, ip, #16
 802214a:	eba8 0801 	sub.w	r8, r8, r1
 802214e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022152:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8022156:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802215a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802215e:	4341      	muls	r1, r0
 8022160:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022164:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022168:	ea4a 0202 	orr.w	r2, sl, r2
 802216c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8022170:	fb09 1108 	mla	r1, r9, r8, r1
 8022174:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022178:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802217c:	fb0c 1102 	mla	r1, ip, r2, r1
 8022180:	ea4b 0505 	orr.w	r5, fp, r5
 8022184:	fb0e 1e05 	mla	lr, lr, r5, r1
 8022188:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802218c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022190:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022194:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022198:	ea42 0e0e 	orr.w	lr, r2, lr
 802219c:	fa1f f28e 	uxth.w	r2, lr
 80221a0:	2bff      	cmp	r3, #255	; 0xff
 80221a2:	f040 80a1 	bne.w	80222e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80221a6:	803a      	strh	r2, [r7, #0]
 80221a8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80221aa:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80221ac:	4413      	add	r3, r2
 80221ae:	931d      	str	r3, [sp, #116]	; 0x74
 80221b0:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80221b2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80221b4:	441a      	add	r2, r3
 80221b6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80221b8:	921e      	str	r2, [sp, #120]	; 0x78
 80221ba:	3b01      	subs	r3, #1
 80221bc:	3702      	adds	r7, #2
 80221be:	930f      	str	r3, [sp, #60]	; 0x3c
 80221c0:	e6c9      	b.n	8021f56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80221c2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80221c4:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80221c6:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 80221c8:	4433      	add	r3, r6
 80221ca:	931d      	str	r3, [sp, #116]	; 0x74
 80221cc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80221ce:	441c      	add	r4, r3
 80221d0:	9b06      	ldr	r3, [sp, #24]
 80221d2:	941e      	str	r4, [sp, #120]	; 0x78
 80221d4:	3b01      	subs	r3, #1
 80221d6:	9306      	str	r3, [sp, #24]
 80221d8:	9b07      	ldr	r3, [sp, #28]
 80221da:	3302      	adds	r3, #2
 80221dc:	9307      	str	r3, [sp, #28]
 80221de:	e698      	b.n	8021f12 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80221e0:	d028      	beq.n	8022234 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80221e2:	9b06      	ldr	r3, [sp, #24]
 80221e4:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80221e6:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80221e8:	3b01      	subs	r3, #1
 80221ea:	fb00 5003 	mla	r0, r0, r3, r5
 80221ee:	1400      	asrs	r0, r0, #16
 80221f0:	f53f aeac 	bmi.w	8021f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80221f4:	3901      	subs	r1, #1
 80221f6:	4288      	cmp	r0, r1
 80221f8:	f6bf aea8 	bge.w	8021f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80221fc:	9920      	ldr	r1, [sp, #128]	; 0x80
 80221fe:	981e      	ldr	r0, [sp, #120]	; 0x78
 8022200:	fb01 0303 	mla	r3, r1, r3, r0
 8022204:	141b      	asrs	r3, r3, #16
 8022206:	f53f aea1 	bmi.w	8021f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802220a:	3a01      	subs	r2, #1
 802220c:	4293      	cmp	r3, r2
 802220e:	f6bf ae9d 	bge.w	8021f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022212:	9b06      	ldr	r3, [sp, #24]
 8022214:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8022218:	930f      	str	r3, [sp, #60]	; 0x3c
 802221a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802221e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022220:	2b00      	cmp	r3, #0
 8022222:	f300 80b6 	bgt.w	8022392 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8022226:	9b06      	ldr	r3, [sp, #24]
 8022228:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802222c:	9b07      	ldr	r3, [sp, #28]
 802222e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022232:	9307      	str	r3, [sp, #28]
 8022234:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022236:	2b00      	cmp	r3, #0
 8022238:	f340 8218 	ble.w	802266c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 802223c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022240:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022244:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022248:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802224a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802224e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022252:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022256:	eef0 6a62 	vmov.f32	s13, s5
 802225a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802225e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022262:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022266:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802226a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802226e:	eef0 6a43 	vmov.f32	s13, s6
 8022272:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022276:	ee12 2a90 	vmov	r2, s5
 802227a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802227e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022282:	ee13 2a10 	vmov	r2, s6
 8022286:	931f      	str	r3, [sp, #124]	; 0x7c
 8022288:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802228a:	fb92 f3f3 	sdiv	r3, r2, r3
 802228e:	9320      	str	r3, [sp, #128]	; 0x80
 8022290:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022292:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022294:	3b01      	subs	r3, #1
 8022296:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802229a:	930e      	str	r3, [sp, #56]	; 0x38
 802229c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802229e:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 80222a2:	bf08      	it	eq
 80222a4:	4613      	moveq	r3, r2
 80222a6:	9306      	str	r3, [sp, #24]
 80222a8:	eeb0 3a67 	vmov.f32	s6, s15
 80222ac:	eef0 2a47 	vmov.f32	s5, s14
 80222b0:	e621      	b.n	8021ef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80222b2:	fb08 f505 	mul.w	r5, r8, r5
 80222b6:	fb09 5303 	mla	r3, r9, r3, r5
 80222ba:	e6a1      	b.n	8022000 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80222bc:	4681      	mov	r9, r0
 80222be:	e6c8      	b.n	8022052 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80222c0:	f1c1 0210 	rsb	r2, r1, #16
 80222c4:	4341      	muls	r1, r0
 80222c6:	fb09 1902 	mla	r9, r9, r2, r1
 80222ca:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80222ce:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80222d2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80222d6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80222da:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80222de:	ea42 0909 	orr.w	r9, r2, r9
 80222e2:	fa1f f289 	uxth.w	r2, r9
 80222e6:	e75b      	b.n	80221a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80222e8:	f8b7 c000 	ldrh.w	ip, [r7]
 80222ec:	43db      	mvns	r3, r3
 80222ee:	ea4f 202c 	mov.w	r0, ip, asr #8
 80222f2:	fa5f fe83 	uxtb.w	lr, r3
 80222f6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80222fa:	fb00 f00e 	mul.w	r0, r0, lr
 80222fe:	1c41      	adds	r1, r0, #1
 8022300:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022304:	1211      	asrs	r1, r2, #8
 8022306:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802230a:	f021 0107 	bic.w	r1, r1, #7
 802230e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022312:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8022316:	48d7      	ldr	r0, [pc, #860]	; (8022674 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022318:	fb05 f50e 	mul.w	r5, r5, lr
 802231c:	b2c9      	uxtb	r1, r1
 802231e:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8022322:	1c69      	adds	r1, r5, #1
 8022324:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8022328:	10d1      	asrs	r1, r2, #3
 802232a:	f021 0103 	bic.w	r1, r1, #3
 802232e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8022332:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8022336:	b2db      	uxtb	r3, r3
 8022338:	00c9      	lsls	r1, r1, #3
 802233a:	fb03 f30e 	mul.w	r3, r3, lr
 802233e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022342:	4301      	orrs	r1, r0
 8022344:	1c58      	adds	r0, r3, #1
 8022346:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802234a:	00d2      	lsls	r2, r2, #3
 802234c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022350:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022354:	430a      	orrs	r2, r1
 8022356:	e726      	b.n	80221a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8022358:	f115 0e01 	adds.w	lr, r5, #1
 802235c:	f53f af24 	bmi.w	80221a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022360:	4572      	cmp	r2, lr
 8022362:	f6ff af21 	blt.w	80221a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022366:	f110 0e01 	adds.w	lr, r0, #1
 802236a:	f53f af1d 	bmi.w	80221a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802236e:	4573      	cmp	r3, lr
 8022370:	f6ff af1a 	blt.w	80221a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022374:	b21b      	sxth	r3, r3
 8022376:	b212      	sxth	r2, r2
 8022378:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 802237c:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8022380:	9301      	str	r3, [sp, #4]
 8022382:	9200      	str	r2, [sp, #0]
 8022384:	4639      	mov	r1, r7
 8022386:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802238a:	9811      	ldr	r0, [sp, #68]	; 0x44
 802238c:	f7ff fc24 	bl	8021bd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8022390:	e70a      	b.n	80221a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022392:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022394:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022398:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802239a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802239e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80223a0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80223a4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80223a6:	141f      	asrs	r7, r3, #16
 80223a8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80223aa:	141b      	asrs	r3, r3, #16
 80223ac:	fb01 3707 	mla	r7, r1, r7, r3
 80223b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80223b2:	fa1f fc82 	uxth.w	ip, r2
 80223b6:	eb03 0a07 	add.w	sl, r3, r7
 80223ba:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80223be:	f813 9007 	ldrb.w	r9, [r3, r7]
 80223c2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80223c6:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80223ca:	b29b      	uxth	r3, r3
 80223cc:	2d00      	cmp	r5, #0
 80223ce:	f000 80fe 	beq.w	80225ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80223d2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80223d6:	940c      	str	r4, [sp, #48]	; 0x30
 80223d8:	eb0a 0b01 	add.w	fp, sl, r1
 80223dc:	fa1f fa85 	uxth.w	sl, r5
 80223e0:	fb0a fc0c 	mul.w	ip, sl, ip
 80223e4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80223e8:	fa1f fa8a 	uxth.w	sl, sl
 80223ec:	eba0 000c 	sub.w	r0, r0, ip
 80223f0:	eba3 030a 	sub.w	r3, r3, sl
 80223f4:	b280      	uxth	r0, r0
 80223f6:	fb08 f000 	mul.w	r0, r8, r0
 80223fa:	b29b      	uxth	r3, r3
 80223fc:	fb09 0303 	mla	r3, r9, r3, r0
 8022400:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022402:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022406:	940d      	str	r4, [sp, #52]	; 0x34
 8022408:	fb0a 3300 	mla	r3, sl, r0, r3
 802240c:	fb0c 3304 	mla	r3, ip, r4, r3
 8022410:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022414:	2b00      	cmp	r3, #0
 8022416:	f000 80cc 	beq.w	80225b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802241a:	9808      	ldr	r0, [sp, #32]
 802241c:	9c08      	ldr	r4, [sp, #32]
 802241e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022422:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8022426:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802242a:	f000 80d5 	beq.w	80225d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802242e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022432:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022436:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802243a:	fb09 f707 	mul.w	r7, r9, r7
 802243e:	fb0a fc0c 	mul.w	ip, sl, ip
 8022442:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8022446:	f107 0b20 	add.w	fp, r7, #32
 802244a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802244e:	44cc      	add	ip, r9
 8022450:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022454:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022458:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802245c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022460:	ea4c 0909 	orr.w	r9, ip, r9
 8022464:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022468:	8847      	ldrh	r7, [r0, #2]
 802246a:	d019      	beq.n	80224a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 802246c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022470:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022474:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022478:	fb08 f807 	mul.w	r8, r8, r7
 802247c:	fb0a fc0c 	mul.w	ip, sl, ip
 8022480:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022484:	f108 0b20 	add.w	fp, r8, #32
 8022488:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802248c:	44bc      	add	ip, r7
 802248e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022492:	0a3f      	lsrs	r7, r7, #8
 8022494:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022498:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802249c:	ea4c 0707 	orr.w	r7, ip, r7
 80224a0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80224a4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80224a8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80224ac:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80224b0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80224b4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80224b8:	ea4c 0909 	orr.w	r9, ip, r9
 80224bc:	ea4a 0707 	orr.w	r7, sl, r7
 80224c0:	2d00      	cmp	r5, #0
 80224c2:	f000 808b 	beq.w	80225dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 80224c6:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80224ca:	3901      	subs	r1, #1
 80224cc:	0049      	lsls	r1, r1, #1
 80224ce:	3102      	adds	r1, #2
 80224d0:	eb00 0c01 	add.w	ip, r0, r1
 80224d4:	5a41      	ldrh	r1, [r0, r1]
 80224d6:	980c      	ldr	r0, [sp, #48]	; 0x30
 80224d8:	28ff      	cmp	r0, #255	; 0xff
 80224da:	d019      	beq.n	8022510 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 80224dc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80224de:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80224e2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80224e6:	fb04 fa01 	mul.w	sl, r4, r1
 80224ea:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80224ee:	fb08 f800 	mul.w	r8, r8, r0
 80224f2:	f10a 0020 	add.w	r0, sl, #32
 80224f6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80224fa:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80224fe:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022502:	4441      	add	r1, r8
 8022504:	0a00      	lsrs	r0, r0, #8
 8022506:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802250a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802250e:	4301      	orrs	r1, r0
 8022510:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022512:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022516:	2cff      	cmp	r4, #255	; 0xff
 8022518:	d01a      	beq.n	8022550 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802251a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 802251e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022522:	fb04 fa00 	mul.w	sl, r4, r0
 8022526:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802252a:	fb08 f80c 	mul.w	r8, r8, ip
 802252e:	f10a 0c20 	add.w	ip, sl, #32
 8022532:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8022536:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802253a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802253e:	4440      	add	r0, r8
 8022540:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022544:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022548:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802254c:	ea40 000c 	orr.w	r0, r0, ip
 8022550:	fb15 fc02 	smulbb	ip, r5, r2
 8022554:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022558:	f1c5 0810 	rsb	r8, r5, #16
 802255c:	eba8 0802 	sub.w	r8, r8, r2
 8022560:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022564:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022568:	437a      	muls	r2, r7
 802256a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802256e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022572:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022576:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802257a:	fb09 2208 	mla	r2, r9, r8, r2
 802257e:	ea4a 0101 	orr.w	r1, sl, r1
 8022582:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8022586:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802258a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802258e:	fb05 2201 	mla	r2, r5, r1, r2
 8022592:	ea4b 0000 	orr.w	r0, fp, r0
 8022596:	fb0c 2200 	mla	r2, ip, r0, r2
 802259a:	0d57      	lsrs	r7, r2, #21
 802259c:	0952      	lsrs	r2, r2, #5
 802259e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80225a2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80225a6:	433a      	orrs	r2, r7
 80225a8:	2bff      	cmp	r3, #255	; 0xff
 80225aa:	b292      	uxth	r2, r2
 80225ac:	d127      	bne.n	80225fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 80225ae:	f8ae 2000 	strh.w	r2, [lr]
 80225b2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80225b4:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80225b6:	4413      	add	r3, r2
 80225b8:	931d      	str	r3, [sp, #116]	; 0x74
 80225ba:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80225bc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80225be:	441a      	add	r2, r3
 80225c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80225c2:	921e      	str	r2, [sp, #120]	; 0x78
 80225c4:	3b01      	subs	r3, #1
 80225c6:	f10e 0e02 	add.w	lr, lr, #2
 80225ca:	930f      	str	r3, [sp, #60]	; 0x3c
 80225cc:	e627      	b.n	802221e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80225ce:	fb08 f000 	mul.w	r0, r8, r0
 80225d2:	fb09 0303 	mla	r3, r9, r3, r0
 80225d6:	e71b      	b.n	8022410 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 80225d8:	46b9      	mov	r9, r7
 80225da:	e743      	b.n	8022464 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 80225dc:	f1c2 0110 	rsb	r1, r2, #16
 80225e0:	437a      	muls	r2, r7
 80225e2:	fb09 2901 	mla	r9, r9, r1, r2
 80225e6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80225ea:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80225ee:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80225f2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80225f6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80225fa:	4302      	orrs	r2, r0
 80225fc:	e7d4      	b.n	80225a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 80225fe:	f8be 7000 	ldrh.w	r7, [lr]
 8022602:	4c1c      	ldr	r4, [pc, #112]	; (8022674 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022604:	43db      	mvns	r3, r3
 8022606:	1238      	asrs	r0, r7, #8
 8022608:	fa5f fc83 	uxtb.w	ip, r3
 802260c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022610:	10fd      	asrs	r5, r7, #3
 8022612:	fb00 f00c 	mul.w	r0, r0, ip
 8022616:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802261a:	fb05 f10c 	mul.w	r1, r5, ip
 802261e:	1c45      	adds	r5, r0, #1
 8022620:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022624:	1215      	asrs	r5, r2, #8
 8022626:	f025 0507 	bic.w	r5, r5, #7
 802262a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802262e:	1c4d      	adds	r5, r1, #1
 8022630:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8022634:	10d1      	asrs	r1, r2, #3
 8022636:	f021 0103 	bic.w	r1, r1, #3
 802263a:	00fb      	lsls	r3, r7, #3
 802263c:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8022640:	b2db      	uxtb	r3, r3
 8022642:	b2c0      	uxtb	r0, r0
 8022644:	00c9      	lsls	r1, r1, #3
 8022646:	fb03 f30c 	mul.w	r3, r3, ip
 802264a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802264e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8022652:	4308      	orrs	r0, r1
 8022654:	1c59      	adds	r1, r3, #1
 8022656:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802265a:	00d2      	lsls	r2, r2, #3
 802265c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8022660:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8022664:	4318      	orrs	r0, r3
 8022666:	f8ae 0000 	strh.w	r0, [lr]
 802266a:	e7a2      	b.n	80225b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802266c:	b013      	add	sp, #76	; 0x4c
 802266e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022672:	bf00      	nop
 8022674:	fffff800 	.word	0xfffff800

08022678 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8022678:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802267c:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8022680:	fb05 4c03 	mla	ip, r5, r3, r4
 8022684:	2d00      	cmp	r5, #0
 8022686:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802268a:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 802268e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8022692:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8022696:	8808      	ldrh	r0, [r1, #0]
 8022698:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 802269c:	f2c0 80a7 	blt.w	80227ee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80226a0:	45aa      	cmp	sl, r5
 80226a2:	f340 80a4 	ble.w	80227ee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80226a6:	2c00      	cmp	r4, #0
 80226a8:	f2c0 809f 	blt.w	80227ea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80226ac:	42a3      	cmp	r3, r4
 80226ae:	f340 809c 	ble.w	80227ea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80226b2:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 80226b6:	1c62      	adds	r2, r4, #1
 80226b8:	f100 809c 	bmi.w	80227f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80226bc:	4293      	cmp	r3, r2
 80226be:	f340 8099 	ble.w	80227f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80226c2:	f1b9 0f00 	cmp.w	r9, #0
 80226c6:	f000 8095 	beq.w	80227f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80226ca:	f8be c002 	ldrh.w	ip, [lr, #2]
 80226ce:	3501      	adds	r5, #1
 80226d0:	f100 8094 	bmi.w	80227fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80226d4:	45aa      	cmp	sl, r5
 80226d6:	f340 8091 	ble.w	80227fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80226da:	2f00      	cmp	r7, #0
 80226dc:	f000 808e 	beq.w	80227fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80226e0:	2c00      	cmp	r4, #0
 80226e2:	f2c0 8089 	blt.w	80227f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80226e6:	42a3      	cmp	r3, r4
 80226e8:	f340 8086 	ble.w	80227f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80226ec:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80226f0:	3401      	adds	r4, #1
 80226f2:	f100 8086 	bmi.w	8022802 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80226f6:	42a3      	cmp	r3, r4
 80226f8:	f340 8083 	ble.w	8022802 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80226fc:	f1b9 0f00 	cmp.w	r9, #0
 8022700:	d07f      	beq.n	8022802 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022702:	3301      	adds	r3, #1
 8022704:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8022708:	ea4f 4408 	mov.w	r4, r8, lsl #16
 802270c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022710:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8022714:	fb19 fe07 	smulbb	lr, r9, r7
 8022718:	ea44 0808 	orr.w	r8, r4, r8
 802271c:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8022720:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8022724:	f1c7 0210 	rsb	r2, r7, #16
 8022728:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802272c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022730:	ea44 0c0c 	orr.w	ip, r4, ip
 8022734:	eba2 0209 	sub.w	r2, r2, r9
 8022738:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 802273c:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8022740:	fb04 f40c 	mul.w	r4, r4, ip
 8022744:	fb02 4808 	mla	r8, r2, r8, r4
 8022748:	041a      	lsls	r2, r3, #16
 802274a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802274e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022752:	4313      	orrs	r3, r2
 8022754:	042a      	lsls	r2, r5, #16
 8022756:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802275a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802275e:	fb0e 8303 	mla	r3, lr, r3, r8
 8022762:	432a      	orrs	r2, r5
 8022764:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8022768:	fb07 3202 	mla	r2, r7, r2, r3
 802276c:	0d53      	lsrs	r3, r2, #21
 802276e:	0952      	lsrs	r2, r2, #5
 8022770:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022774:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022778:	431a      	orrs	r2, r3
 802277a:	b293      	uxth	r3, r2
 802277c:	b2b4      	uxth	r4, r6
 802277e:	1202      	asrs	r2, r0, #8
 8022780:	43f6      	mvns	r6, r6
 8022782:	b2f6      	uxtb	r6, r6
 8022784:	121d      	asrs	r5, r3, #8
 8022786:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802278a:	fb12 f206 	smulbb	r2, r2, r6
 802278e:	10c7      	asrs	r7, r0, #3
 8022790:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022794:	00c0      	lsls	r0, r0, #3
 8022796:	fb05 2504 	mla	r5, r5, r4, r2
 802279a:	b2c0      	uxtb	r0, r0
 802279c:	10da      	asrs	r2, r3, #3
 802279e:	00db      	lsls	r3, r3, #3
 80227a0:	b2db      	uxtb	r3, r3
 80227a2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80227a6:	fb10 f006 	smulbb	r0, r0, r6
 80227aa:	b2ad      	uxth	r5, r5
 80227ac:	fb03 0004 	mla	r0, r3, r4, r0
 80227b0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80227b4:	fb17 f706 	smulbb	r7, r7, r6
 80227b8:	b280      	uxth	r0, r0
 80227ba:	1c6b      	adds	r3, r5, #1
 80227bc:	fb02 7204 	mla	r2, r2, r4, r7
 80227c0:	b292      	uxth	r2, r2
 80227c2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80227c6:	1c43      	adds	r3, r0, #1
 80227c8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80227cc:	1c50      	adds	r0, r2, #1
 80227ce:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80227d2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80227d6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80227da:	0952      	lsrs	r2, r2, #5
 80227dc:	432b      	orrs	r3, r5
 80227de:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80227e2:	4313      	orrs	r3, r2
 80227e4:	800b      	strh	r3, [r1, #0]
 80227e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80227ea:	4680      	mov	r8, r0
 80227ec:	e763      	b.n	80226b6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80227ee:	4684      	mov	ip, r0
 80227f0:	4680      	mov	r8, r0
 80227f2:	e76c      	b.n	80226ce <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80227f4:	4684      	mov	ip, r0
 80227f6:	e76a      	b.n	80226ce <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80227f8:	4605      	mov	r5, r0
 80227fa:	e779      	b.n	80226f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 80227fc:	4603      	mov	r3, r0
 80227fe:	4605      	mov	r5, r0
 8022800:	e782      	b.n	8022708 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8022802:	4603      	mov	r3, r0
 8022804:	e780      	b.n	8022708 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08022806 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022806:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802280a:	b093      	sub	sp, #76	; 0x4c
 802280c:	461d      	mov	r5, r3
 802280e:	9210      	str	r2, [sp, #64]	; 0x40
 8022810:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022812:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8022816:	920b      	str	r2, [sp, #44]	; 0x2c
 8022818:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 802281c:	910a      	str	r1, [sp, #40]	; 0x28
 802281e:	6859      	ldr	r1, [r3, #4]
 8022820:	681b      	ldr	r3, [r3, #0]
 8022822:	9011      	str	r0, [sp, #68]	; 0x44
 8022824:	fb01 2707 	mla	r7, r1, r7, r2
 8022828:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 802282c:	9307      	str	r3, [sp, #28]
 802282e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022830:	681b      	ldr	r3, [r3, #0]
 8022832:	9309      	str	r3, [sp, #36]	; 0x24
 8022834:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022836:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 802283a:	43db      	mvns	r3, r3
 802283c:	b2db      	uxtb	r3, r3
 802283e:	9308      	str	r3, [sp, #32]
 8022840:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022842:	2b00      	cmp	r3, #0
 8022844:	dc03      	bgt.n	802284e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022846:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022848:	2b00      	cmp	r3, #0
 802284a:	f340 8203 	ble.w	8022c54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802284e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022850:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022854:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022858:	1e48      	subs	r0, r1, #1
 802285a:	f102 3cff 	add.w	ip, r2, #4294967295
 802285e:	2d00      	cmp	r5, #0
 8022860:	f340 80da 	ble.w	8022a18 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8022864:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022868:	ea4f 4326 	mov.w	r3, r6, asr #16
 802286c:	d406      	bmi.n	802287c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802286e:	4586      	cmp	lr, r0
 8022870:	da04      	bge.n	802287c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022872:	2b00      	cmp	r3, #0
 8022874:	db02      	blt.n	802287c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022876:	4563      	cmp	r3, ip
 8022878:	f2c0 80cf 	blt.w	8022a1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 802287c:	f11e 0e01 	adds.w	lr, lr, #1
 8022880:	f100 80c1 	bmi.w	8022a06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022884:	4571      	cmp	r1, lr
 8022886:	f2c0 80be 	blt.w	8022a06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802288a:	3301      	adds	r3, #1
 802288c:	f100 80bb 	bmi.w	8022a06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022890:	429a      	cmp	r2, r3
 8022892:	f2c0 80b8 	blt.w	8022a06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022896:	f8dd 801c 	ldr.w	r8, [sp, #28]
 802289a:	46a9      	mov	r9, r5
 802289c:	f1b9 0f00 	cmp.w	r9, #0
 80228a0:	f340 80d8 	ble.w	8022a54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 80228a4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80228a6:	1421      	asrs	r1, r4, #16
 80228a8:	ea4f 4026 	mov.w	r0, r6, asr #16
 80228ac:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80228b0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80228b4:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80228b8:	f100 8111 	bmi.w	8022ade <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80228bc:	f10e 3aff 	add.w	sl, lr, #4294967295
 80228c0:	4551      	cmp	r1, sl
 80228c2:	f280 810c 	bge.w	8022ade <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80228c6:	2800      	cmp	r0, #0
 80228c8:	f2c0 8109 	blt.w	8022ade <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80228cc:	f103 3aff 	add.w	sl, r3, #4294967295
 80228d0:	4550      	cmp	r0, sl
 80228d2:	f280 8104 	bge.w	8022ade <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80228d6:	fa0f f38e 	sxth.w	r3, lr
 80228da:	fb00 1103 	mla	r1, r0, r3, r1
 80228de:	9809      	ldr	r0, [sp, #36]	; 0x24
 80228e0:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80228e4:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80228e8:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80228ec:	f1bc 0f00 	cmp.w	ip, #0
 80228f0:	d007      	beq.n	8022902 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80228f2:	005b      	lsls	r3, r3, #1
 80228f4:	eb0a 0003 	add.w	r0, sl, r3
 80228f8:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80228fc:	930c      	str	r3, [sp, #48]	; 0x30
 80228fe:	8843      	ldrh	r3, [r0, #2]
 8022900:	930d      	str	r3, [sp, #52]	; 0x34
 8022902:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8022906:	fb12 f30c 	smulbb	r3, r2, ip
 802290a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802290e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022912:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022916:	10db      	asrs	r3, r3, #3
 8022918:	ea40 000e 	orr.w	r0, r0, lr
 802291c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022920:	f1cc 0e10 	rsb	lr, ip, #16
 8022924:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022928:	ebae 0e02 	sub.w	lr, lr, r2
 802292c:	ea4a 0101 	orr.w	r1, sl, r1
 8022930:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022934:	4351      	muls	r1, r2
 8022936:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8022938:	9f08      	ldr	r7, [sp, #32]
 802293a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802293e:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022942:	0410      	lsls	r0, r2, #16
 8022944:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022948:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802294c:	4310      	orrs	r0, r2
 802294e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022950:	990c      	ldr	r1, [sp, #48]	; 0x30
 8022952:	0412      	lsls	r2, r2, #16
 8022954:	fb03 e000 	mla	r0, r3, r0, lr
 8022958:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802295c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8022960:	ea42 020e 	orr.w	r2, r2, lr
 8022964:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022968:	fb03 0302 	mla	r3, r3, r2, r0
 802296c:	0d5a      	lsrs	r2, r3, #21
 802296e:	095b      	lsrs	r3, r3, #5
 8022970:	f8b8 0000 	ldrh.w	r0, [r8]
 8022974:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022978:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802297c:	4313      	orrs	r3, r2
 802297e:	b29b      	uxth	r3, r3
 8022980:	1201      	asrs	r1, r0, #8
 8022982:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8022986:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802298a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802298e:	fb11 f107 	smulbb	r1, r1, r7
 8022992:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8022996:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802299a:	00c0      	lsls	r0, r0, #3
 802299c:	fb0c 1c02 	mla	ip, ip, r2, r1
 80229a0:	b2c0      	uxtb	r0, r0
 80229a2:	10d9      	asrs	r1, r3, #3
 80229a4:	00db      	lsls	r3, r3, #3
 80229a6:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80229aa:	b2db      	uxtb	r3, r3
 80229ac:	fb10 f007 	smulbb	r0, r0, r7
 80229b0:	fa1f fc8c 	uxth.w	ip, ip
 80229b4:	fb03 0302 	mla	r3, r3, r2, r0
 80229b8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80229bc:	fb1e fe07 	smulbb	lr, lr, r7
 80229c0:	fb01 e102 	mla	r1, r1, r2, lr
 80229c4:	b29a      	uxth	r2, r3
 80229c6:	f10c 0301 	add.w	r3, ip, #1
 80229ca:	b289      	uxth	r1, r1
 80229cc:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80229d0:	1c53      	adds	r3, r2, #1
 80229d2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80229d6:	1c4a      	adds	r2, r1, #1
 80229d8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80229dc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80229e0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80229e4:	0949      	lsrs	r1, r1, #5
 80229e6:	ea43 030c 	orr.w	r3, r3, ip
 80229ea:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80229ee:	430b      	orrs	r3, r1
 80229f0:	f8a8 3000 	strh.w	r3, [r8]
 80229f4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80229f6:	441c      	add	r4, r3
 80229f8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80229fa:	f108 0802 	add.w	r8, r8, #2
 80229fe:	441e      	add	r6, r3
 8022a00:	f109 39ff 	add.w	r9, r9, #4294967295
 8022a04:	e74a      	b.n	802289c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8022a06:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022a08:	441c      	add	r4, r3
 8022a0a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022a0c:	441e      	add	r6, r3
 8022a0e:	9b07      	ldr	r3, [sp, #28]
 8022a10:	3302      	adds	r3, #2
 8022a12:	3d01      	subs	r5, #1
 8022a14:	9307      	str	r3, [sp, #28]
 8022a16:	e722      	b.n	802285e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022a18:	d022      	beq.n	8022a60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8022a1a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022a1c:	1e6b      	subs	r3, r5, #1
 8022a1e:	fb00 4003 	mla	r0, r0, r3, r4
 8022a22:	1400      	asrs	r0, r0, #16
 8022a24:	f53f af37 	bmi.w	8022896 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022a28:	3901      	subs	r1, #1
 8022a2a:	4288      	cmp	r0, r1
 8022a2c:	f6bf af33 	bge.w	8022896 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022a30:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022a32:	fb01 6303 	mla	r3, r1, r3, r6
 8022a36:	141b      	asrs	r3, r3, #16
 8022a38:	f53f af2d 	bmi.w	8022896 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022a3c:	3a01      	subs	r2, #1
 8022a3e:	4293      	cmp	r3, r2
 8022a40:	f6bf af29 	bge.w	8022896 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022a44:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8022a48:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8022a4c:	46a8      	mov	r8, r5
 8022a4e:	f1b8 0f00 	cmp.w	r8, #0
 8022a52:	dc5e      	bgt.n	8022b12 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8022a54:	9b07      	ldr	r3, [sp, #28]
 8022a56:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022a5a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8022a5e:	9307      	str	r3, [sp, #28]
 8022a60:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022a62:	2b00      	cmp	r3, #0
 8022a64:	f340 80f6 	ble.w	8022c54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8022a68:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022a6c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022a70:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022a74:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022a76:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022a7a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022a7e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022a82:	eef0 6a62 	vmov.f32	s13, s5
 8022a86:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022a8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022a8e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022a92:	ee16 4a90 	vmov	r4, s13
 8022a96:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022a9a:	eef0 6a43 	vmov.f32	s13, s6
 8022a9e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022aa2:	ee12 2a90 	vmov	r2, s5
 8022aa6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022aaa:	fb92 f3f3 	sdiv	r3, r2, r3
 8022aae:	ee13 2a10 	vmov	r2, s6
 8022ab2:	931f      	str	r3, [sp, #124]	; 0x7c
 8022ab4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022ab6:	fb92 f3f3 	sdiv	r3, r2, r3
 8022aba:	9320      	str	r3, [sp, #128]	; 0x80
 8022abc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022abe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022ac0:	3b01      	subs	r3, #1
 8022ac2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022ac6:	930a      	str	r3, [sp, #40]	; 0x28
 8022ac8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022aca:	ee16 6a90 	vmov	r6, s13
 8022ace:	bf14      	ite	ne
 8022ad0:	461d      	movne	r5, r3
 8022ad2:	4615      	moveq	r5, r2
 8022ad4:	eeb0 3a67 	vmov.f32	s6, s15
 8022ad8:	eef0 2a47 	vmov.f32	s5, s14
 8022adc:	e6b0      	b.n	8022840 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022ade:	f111 0a01 	adds.w	sl, r1, #1
 8022ae2:	d487      	bmi.n	80229f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022ae4:	45d6      	cmp	lr, sl
 8022ae6:	db85      	blt.n	80229f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022ae8:	f110 0a01 	adds.w	sl, r0, #1
 8022aec:	d482      	bmi.n	80229f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022aee:	4553      	cmp	r3, sl
 8022af0:	db80      	blt.n	80229f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022af2:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8022af4:	9101      	str	r1, [sp, #4]
 8022af6:	b21b      	sxth	r3, r3
 8022af8:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8022afc:	9300      	str	r3, [sp, #0]
 8022afe:	e9cd c704 	strd	ip, r7, [sp, #16]
 8022b02:	fa0f f38e 	sxth.w	r3, lr
 8022b06:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022b08:	9811      	ldr	r0, [sp, #68]	; 0x44
 8022b0a:	4641      	mov	r1, r8
 8022b0c:	f7ff fdb4 	bl	8022678 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8022b10:	e770      	b.n	80229f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022b12:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022b14:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8022b16:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022b1a:	1430      	asrs	r0, r6, #16
 8022b1c:	1423      	asrs	r3, r4, #16
 8022b1e:	fb01 3000 	mla	r0, r1, r0, r3
 8022b22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022b24:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8022b28:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8022b2c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8022b30:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022b34:	8858      	ldrh	r0, [r3, #2]
 8022b36:	f1be 0f00 	cmp.w	lr, #0
 8022b3a:	d00b      	beq.n	8022b54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8022b3c:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022b40:	3901      	subs	r1, #1
 8022b42:	0049      	lsls	r1, r1, #1
 8022b44:	3102      	adds	r1, #2
 8022b46:	eb03 0b01 	add.w	fp, r3, r1
 8022b4a:	5a5b      	ldrh	r3, [r3, r1]
 8022b4c:	930e      	str	r3, [sp, #56]	; 0x38
 8022b4e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022b52:	930f      	str	r3, [sp, #60]	; 0x3c
 8022b54:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8022b58:	fb12 f30e 	smulbb	r3, r2, lr
 8022b5c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022b60:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022b64:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8022b68:	10db      	asrs	r3, r3, #3
 8022b6a:	ea41 010c 	orr.w	r1, r1, ip
 8022b6e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022b72:	f1ce 0c10 	rsb	ip, lr, #16
 8022b76:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022b7a:	ebac 0c02 	sub.w	ip, ip, r2
 8022b7e:	ea4b 0000 	orr.w	r0, fp, r0
 8022b82:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022b86:	4350      	muls	r0, r2
 8022b88:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022b8a:	9f08      	ldr	r7, [sp, #32]
 8022b8c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8022b90:	fb0c 0c01 	mla	ip, ip, r1, r0
 8022b94:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022b98:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8022b9c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8022b9e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8022ba0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022ba4:	0412      	lsls	r2, r2, #16
 8022ba6:	ea4b 0101 	orr.w	r1, fp, r1
 8022baa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022bae:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022bb2:	fb03 c101 	mla	r1, r3, r1, ip
 8022bb6:	4302      	orrs	r2, r0
 8022bb8:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8022bbc:	fb03 1202 	mla	r2, r3, r2, r1
 8022bc0:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8022bc4:	0952      	lsrs	r2, r2, #5
 8022bc6:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8022bca:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8022bce:	f8b9 2000 	ldrh.w	r2, [r9]
 8022bd2:	ea4b 0303 	orr.w	r3, fp, r3
 8022bd6:	b29b      	uxth	r3, r3
 8022bd8:	1211      	asrs	r1, r2, #8
 8022bda:	1218      	asrs	r0, r3, #8
 8022bdc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022be0:	fb11 f107 	smulbb	r1, r1, r7
 8022be4:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8022be8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022bec:	00d2      	lsls	r2, r2, #3
 8022bee:	fb00 100a 	mla	r0, r0, sl, r1
 8022bf2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8022bf6:	10d9      	asrs	r1, r3, #3
 8022bf8:	b2d2      	uxtb	r2, r2
 8022bfa:	00db      	lsls	r3, r3, #3
 8022bfc:	fb1c fc07 	smulbb	ip, ip, r7
 8022c00:	fb12 f207 	smulbb	r2, r2, r7
 8022c04:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022c08:	b2db      	uxtb	r3, r3
 8022c0a:	b280      	uxth	r0, r0
 8022c0c:	fb01 c10a 	mla	r1, r1, sl, ip
 8022c10:	fb03 230a 	mla	r3, r3, sl, r2
 8022c14:	b29b      	uxth	r3, r3
 8022c16:	b289      	uxth	r1, r1
 8022c18:	1c42      	adds	r2, r0, #1
 8022c1a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022c1e:	f101 0c01 	add.w	ip, r1, #1
 8022c22:	1c5a      	adds	r2, r3, #1
 8022c24:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022c28:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8022c2c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022c2e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8022c32:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022c36:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022c3a:	4310      	orrs	r0, r2
 8022c3c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022c40:	441c      	add	r4, r3
 8022c42:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022c44:	ea40 000c 	orr.w	r0, r0, ip
 8022c48:	f829 0b02 	strh.w	r0, [r9], #2
 8022c4c:	441e      	add	r6, r3
 8022c4e:	f108 38ff 	add.w	r8, r8, #4294967295
 8022c52:	e6fc      	b.n	8022a4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8022c54:	b013      	add	sp, #76	; 0x4c
 8022c56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022c5a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8022c5a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8022c5e:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8022c62:	fb0e 4703 	mla	r7, lr, r3, r4
 8022c66:	f1be 0f00 	cmp.w	lr, #0
 8022c6a:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8022c6e:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8022c72:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8022c76:	8808      	ldrh	r0, [r1, #0]
 8022c78:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8022c7c:	db60      	blt.n	8022d40 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022c7e:	45f1      	cmp	r9, lr
 8022c80:	dd5e      	ble.n	8022d40 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022c82:	2c00      	cmp	r4, #0
 8022c84:	db5a      	blt.n	8022d3c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022c86:	42a3      	cmp	r3, r4
 8022c88:	dd58      	ble.n	8022d3c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022c8a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8022c8e:	1c62      	adds	r2, r4, #1
 8022c90:	d459      	bmi.n	8022d46 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022c92:	4293      	cmp	r3, r2
 8022c94:	dd57      	ble.n	8022d46 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022c96:	2d00      	cmp	r5, #0
 8022c98:	d055      	beq.n	8022d46 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022c9a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8022c9e:	f11e 0e01 	adds.w	lr, lr, #1
 8022ca2:	d454      	bmi.n	8022d4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022ca4:	45f1      	cmp	r9, lr
 8022ca6:	dd52      	ble.n	8022d4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022ca8:	2e00      	cmp	r6, #0
 8022caa:	d050      	beq.n	8022d4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022cac:	2c00      	cmp	r4, #0
 8022cae:	db4c      	blt.n	8022d4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8022cb0:	42a3      	cmp	r3, r4
 8022cb2:	dd4a      	ble.n	8022d4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8022cb4:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8022cb8:	3401      	adds	r4, #1
 8022cba:	d405      	bmi.n	8022cc8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022cbc:	42a3      	cmp	r3, r4
 8022cbe:	dd03      	ble.n	8022cc8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022cc0:	b115      	cbz	r5, 8022cc8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022cc2:	3301      	adds	r3, #1
 8022cc4:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8022cc8:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8022ccc:	fb15 f406 	smulbb	r4, r5, r6
 8022cd0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022cd4:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8022cd8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022cdc:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8022ce0:	ea43 0c0c 	orr.w	ip, r3, ip
 8022ce4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022ce8:	f1c6 0310 	rsb	r3, r6, #16
 8022cec:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022cf0:	1b5b      	subs	r3, r3, r5
 8022cf2:	ea4e 0707 	orr.w	r7, lr, r7
 8022cf6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8022cfa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022cfe:	437d      	muls	r5, r7
 8022d00:	fb03 5c0c 	mla	ip, r3, ip, r5
 8022d04:	0403      	lsls	r3, r0, #16
 8022d06:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022d0a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022d0e:	4318      	orrs	r0, r3
 8022d10:	0413      	lsls	r3, r2, #16
 8022d12:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022d16:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022d1a:	4313      	orrs	r3, r2
 8022d1c:	fb04 c000 	mla	r0, r4, r0, ip
 8022d20:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8022d24:	fb06 0003 	mla	r0, r6, r3, r0
 8022d28:	0d43      	lsrs	r3, r0, #21
 8022d2a:	0940      	lsrs	r0, r0, #5
 8022d2c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022d30:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022d34:	4318      	orrs	r0, r3
 8022d36:	8008      	strh	r0, [r1, #0]
 8022d38:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8022d3c:	4684      	mov	ip, r0
 8022d3e:	e7a6      	b.n	8022c8e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8022d40:	4607      	mov	r7, r0
 8022d42:	4684      	mov	ip, r0
 8022d44:	e7ab      	b.n	8022c9e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8022d46:	4607      	mov	r7, r0
 8022d48:	e7a9      	b.n	8022c9e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8022d4a:	4602      	mov	r2, r0
 8022d4c:	e7b4      	b.n	8022cb8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8022d4e:	4602      	mov	r2, r0
 8022d50:	e7ba      	b.n	8022cc8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08022d52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022d52:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022d56:	b08f      	sub	sp, #60	; 0x3c
 8022d58:	461d      	mov	r5, r3
 8022d5a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022d5c:	920c      	str	r2, [sp, #48]	; 0x30
 8022d5e:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8022d62:	9107      	str	r1, [sp, #28]
 8022d64:	6859      	ldr	r1, [r3, #4]
 8022d66:	681b      	ldr	r3, [r3, #0]
 8022d68:	900d      	str	r0, [sp, #52]	; 0x34
 8022d6a:	fb01 2707 	mla	r7, r1, r7, r2
 8022d6e:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8022d72:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022d74:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8022d78:	f8d3 8000 	ldr.w	r8, [r3]
 8022d7c:	9b07      	ldr	r3, [sp, #28]
 8022d7e:	2b00      	cmp	r3, #0
 8022d80:	dc03      	bgt.n	8022d8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8022d82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022d84:	2b00      	cmp	r3, #0
 8022d86:	f340 8181 	ble.w	802308c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8022d8a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022d8c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022d90:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022d94:	1e48      	subs	r0, r1, #1
 8022d96:	f102 3cff 	add.w	ip, r2, #4294967295
 8022d9a:	2d00      	cmp	r5, #0
 8022d9c:	f340 809b 	ble.w	8022ed6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8022da0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022da4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022da8:	d406      	bmi.n	8022db8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022daa:	4586      	cmp	lr, r0
 8022dac:	da04      	bge.n	8022db8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022dae:	2b00      	cmp	r3, #0
 8022db0:	db02      	blt.n	8022db8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022db2:	4563      	cmp	r3, ip
 8022db4:	f2c0 8090 	blt.w	8022ed8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022db8:	f11e 0e01 	adds.w	lr, lr, #1
 8022dbc:	f100 8084 	bmi.w	8022ec8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022dc0:	4571      	cmp	r1, lr
 8022dc2:	f2c0 8081 	blt.w	8022ec8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022dc6:	3301      	adds	r3, #1
 8022dc8:	d47e      	bmi.n	8022ec8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022dca:	429a      	cmp	r2, r3
 8022dcc:	db7c      	blt.n	8022ec8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022dce:	46aa      	mov	sl, r5
 8022dd0:	46b9      	mov	r9, r7
 8022dd2:	f1ba 0f00 	cmp.w	sl, #0
 8022dd6:	f340 8099 	ble.w	8022f0c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8022dda:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022ddc:	1421      	asrs	r1, r4, #16
 8022dde:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022de2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022de6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022dea:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8022dee:	f100 80d0 	bmi.w	8022f92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022df2:	f10e 3bff 	add.w	fp, lr, #4294967295
 8022df6:	4559      	cmp	r1, fp
 8022df8:	f280 80cb 	bge.w	8022f92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022dfc:	2800      	cmp	r0, #0
 8022dfe:	f2c0 80c8 	blt.w	8022f92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022e02:	f103 3bff 	add.w	fp, r3, #4294967295
 8022e06:	4558      	cmp	r0, fp
 8022e08:	f280 80c3 	bge.w	8022f92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022e0c:	fa0f fe8e 	sxth.w	lr, lr
 8022e10:	fb00 110e 	mla	r1, r0, lr, r1
 8022e14:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8022e18:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8022e1c:	8841      	ldrh	r1, [r0, #2]
 8022e1e:	f1bc 0f00 	cmp.w	ip, #0
 8022e22:	d00b      	beq.n	8022e3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8022e24:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8022e28:	3b01      	subs	r3, #1
 8022e2a:	005b      	lsls	r3, r3, #1
 8022e2c:	3302      	adds	r3, #2
 8022e2e:	eb00 0e03 	add.w	lr, r0, r3
 8022e32:	5ac3      	ldrh	r3, [r0, r3]
 8022e34:	9308      	str	r3, [sp, #32]
 8022e36:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8022e3a:	9309      	str	r3, [sp, #36]	; 0x24
 8022e3c:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8022e40:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022e44:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022e48:	ea40 000b 	orr.w	r0, r0, fp
 8022e4c:	fb12 f30c 	smulbb	r3, r2, ip
 8022e50:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022e54:	10db      	asrs	r3, r3, #3
 8022e56:	f1cc 0e10 	rsb	lr, ip, #16
 8022e5a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022e5e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022e62:	ebae 0e02 	sub.w	lr, lr, r2
 8022e66:	ea4b 0101 	orr.w	r1, fp, r1
 8022e6a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022e6e:	4351      	muls	r1, r2
 8022e70:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022e72:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8022e76:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022e7a:	0410      	lsls	r0, r2, #16
 8022e7c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022e80:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022e84:	4310      	orrs	r0, r2
 8022e86:	9a08      	ldr	r2, [sp, #32]
 8022e88:	9908      	ldr	r1, [sp, #32]
 8022e8a:	0412      	lsls	r2, r2, #16
 8022e8c:	fb03 e000 	mla	r0, r3, r0, lr
 8022e90:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022e94:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8022e98:	ea42 020e 	orr.w	r2, r2, lr
 8022e9c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022ea0:	fb03 0302 	mla	r3, r3, r2, r0
 8022ea4:	0d5a      	lsrs	r2, r3, #21
 8022ea6:	095b      	lsrs	r3, r3, #5
 8022ea8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022eac:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022eb0:	4313      	orrs	r3, r2
 8022eb2:	f8a9 3000 	strh.w	r3, [r9]
 8022eb6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022eb8:	441c      	add	r4, r3
 8022eba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022ebc:	f109 0902 	add.w	r9, r9, #2
 8022ec0:	441e      	add	r6, r3
 8022ec2:	f10a 3aff 	add.w	sl, sl, #4294967295
 8022ec6:	e784      	b.n	8022dd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8022ec8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022eca:	441c      	add	r4, r3
 8022ecc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022ece:	3d01      	subs	r5, #1
 8022ed0:	441e      	add	r6, r3
 8022ed2:	3702      	adds	r7, #2
 8022ed4:	e761      	b.n	8022d9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022ed6:	d01d      	beq.n	8022f14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8022ed8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8022eda:	1e6b      	subs	r3, r5, #1
 8022edc:	fb00 4003 	mla	r0, r0, r3, r4
 8022ee0:	1400      	asrs	r0, r0, #16
 8022ee2:	f53f af74 	bmi.w	8022dce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022ee6:	3901      	subs	r1, #1
 8022ee8:	4288      	cmp	r0, r1
 8022eea:	f6bf af70 	bge.w	8022dce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022eee:	991c      	ldr	r1, [sp, #112]	; 0x70
 8022ef0:	fb01 6303 	mla	r3, r1, r3, r6
 8022ef4:	141b      	asrs	r3, r3, #16
 8022ef6:	f53f af6a 	bmi.w	8022dce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022efa:	3a01      	subs	r2, #1
 8022efc:	4293      	cmp	r3, r2
 8022efe:	f6bf af66 	bge.w	8022dce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022f02:	46a9      	mov	r9, r5
 8022f04:	46ba      	mov	sl, r7
 8022f06:	f1b9 0f00 	cmp.w	r9, #0
 8022f0a:	dc5a      	bgt.n	8022fc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8022f0c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022f10:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8022f14:	9b07      	ldr	r3, [sp, #28]
 8022f16:	2b00      	cmp	r3, #0
 8022f18:	f340 80b8 	ble.w	802308c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8022f1c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022f20:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022f24:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022f28:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022f2a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022f2e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022f32:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022f36:	eef0 6a62 	vmov.f32	s13, s5
 8022f3a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022f3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022f42:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022f46:	ee16 4a90 	vmov	r4, s13
 8022f4a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022f4e:	eef0 6a43 	vmov.f32	s13, s6
 8022f52:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022f56:	ee12 2a90 	vmov	r2, s5
 8022f5a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022f5e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022f62:	ee13 2a10 	vmov	r2, s6
 8022f66:	931b      	str	r3, [sp, #108]	; 0x6c
 8022f68:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022f6a:	fb92 f3f3 	sdiv	r3, r2, r3
 8022f6e:	931c      	str	r3, [sp, #112]	; 0x70
 8022f70:	9b07      	ldr	r3, [sp, #28]
 8022f72:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022f74:	3b01      	subs	r3, #1
 8022f76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022f7a:	9307      	str	r3, [sp, #28]
 8022f7c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022f7e:	ee16 6a90 	vmov	r6, s13
 8022f82:	bf14      	ite	ne
 8022f84:	461d      	movne	r5, r3
 8022f86:	4615      	moveq	r5, r2
 8022f88:	eeb0 3a67 	vmov.f32	s6, s15
 8022f8c:	eef0 2a47 	vmov.f32	s5, s14
 8022f90:	e6f4      	b.n	8022d7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8022f92:	f111 0b01 	adds.w	fp, r1, #1
 8022f96:	d48e      	bmi.n	8022eb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022f98:	45de      	cmp	lr, fp
 8022f9a:	db8c      	blt.n	8022eb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022f9c:	f110 0b01 	adds.w	fp, r0, #1
 8022fa0:	d489      	bmi.n	8022eb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022fa2:	455b      	cmp	r3, fp
 8022fa4:	db87      	blt.n	8022eb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022fa6:	b21b      	sxth	r3, r3
 8022fa8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8022fac:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8022fb0:	9300      	str	r3, [sp, #0]
 8022fb2:	4642      	mov	r2, r8
 8022fb4:	fa0f f38e 	sxth.w	r3, lr
 8022fb8:	4649      	mov	r1, r9
 8022fba:	980d      	ldr	r0, [sp, #52]	; 0x34
 8022fbc:	f7ff fe4d 	bl	8022c5a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8022fc0:	e779      	b.n	8022eb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022fc2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022fc4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8022fc8:	1420      	asrs	r0, r4, #16
 8022fca:	1431      	asrs	r1, r6, #16
 8022fcc:	fb03 0101 	mla	r1, r3, r1, r0
 8022fd0:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8022fd4:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8022fd8:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8022fdc:	8841      	ldrh	r1, [r0, #2]
 8022fde:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022fe2:	f1be 0f00 	cmp.w	lr, #0
 8022fe6:	d00b      	beq.n	8023000 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8022fe8:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8022fec:	3b01      	subs	r3, #1
 8022fee:	005b      	lsls	r3, r3, #1
 8022ff0:	3302      	adds	r3, #2
 8022ff2:	eb00 0b03 	add.w	fp, r0, r3
 8022ff6:	5ac3      	ldrh	r3, [r0, r3]
 8022ff8:	930a      	str	r3, [sp, #40]	; 0x28
 8022ffa:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022ffe:	930b      	str	r3, [sp, #44]	; 0x2c
 8023000:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8023004:	fb12 f30e 	smulbb	r3, r2, lr
 8023008:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802300c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023010:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023014:	10db      	asrs	r3, r3, #3
 8023016:	ea40 000c 	orr.w	r0, r0, ip
 802301a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802301e:	f1ce 0c10 	rsb	ip, lr, #16
 8023022:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023026:	ebac 0c02 	sub.w	ip, ip, r2
 802302a:	ea4b 0101 	orr.w	r1, fp, r1
 802302e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023032:	4351      	muls	r1, r2
 8023034:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8023036:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802303a:	fb0c 1c00 	mla	ip, ip, r0, r1
 802303e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8023042:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8023046:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8023048:	990a      	ldr	r1, [sp, #40]	; 0x28
 802304a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802304e:	0412      	lsls	r2, r2, #16
 8023050:	ea4b 0000 	orr.w	r0, fp, r0
 8023054:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023058:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 802305c:	fb03 c000 	mla	r0, r3, r0, ip
 8023060:	ea42 0b0b 	orr.w	fp, r2, fp
 8023064:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8023068:	fb03 000b 	mla	r0, r3, fp, r0
 802306c:	0d43      	lsrs	r3, r0, #21
 802306e:	0940      	lsrs	r0, r0, #5
 8023070:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023074:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023078:	4318      	orrs	r0, r3
 802307a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802307c:	f82a 0b02 	strh.w	r0, [sl], #2
 8023080:	441c      	add	r4, r3
 8023082:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023084:	f109 39ff 	add.w	r9, r9, #4294967295
 8023088:	441e      	add	r6, r3
 802308a:	e73c      	b.n	8022f06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802308c:	b00f      	add	sp, #60	; 0x3c
 802308e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023092 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8023092:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023096:	b085      	sub	sp, #20
 8023098:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 802309c:	9102      	str	r1, [sp, #8]
 802309e:	2c00      	cmp	r4, #0
 80230a0:	fb04 7103 	mla	r1, r4, r3, r7
 80230a4:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80230a8:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80230ac:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80230b0:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80230b4:	f2c0 811b 	blt.w	80232ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80230b8:	45a6      	cmp	lr, r4
 80230ba:	f340 8118 	ble.w	80232ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80230be:	2f00      	cmp	r7, #0
 80230c0:	f2c0 8113 	blt.w	80232ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80230c4:	42bb      	cmp	r3, r7
 80230c6:	f340 8110 	ble.w	80232ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80230ca:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80230ce:	1c7a      	adds	r2, r7, #1
 80230d0:	f100 8110 	bmi.w	80232f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80230d4:	4293      	cmp	r3, r2
 80230d6:	f340 810d 	ble.w	80232f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80230da:	2e00      	cmp	r6, #0
 80230dc:	f000 810c 	beq.w	80232f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 80230e0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80230e4:	3401      	adds	r4, #1
 80230e6:	f100 810b 	bmi.w	8023300 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80230ea:	45a6      	cmp	lr, r4
 80230ec:	f340 8108 	ble.w	8023300 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80230f0:	2800      	cmp	r0, #0
 80230f2:	f000 8108 	beq.w	8023306 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 80230f6:	2f00      	cmp	r7, #0
 80230f8:	f2c0 8100 	blt.w	80232fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80230fc:	42bb      	cmp	r3, r7
 80230fe:	f340 80fd 	ble.w	80232fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8023102:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8023106:	3701      	adds	r7, #1
 8023108:	f100 8100 	bmi.w	802330c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802310c:	42bb      	cmp	r3, r7
 802310e:	f340 80fd 	ble.w	802330c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8023112:	2e00      	cmp	r6, #0
 8023114:	f000 80fc 	beq.w	8023310 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8023118:	3301      	adds	r3, #1
 802311a:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 802311e:	b2b6      	uxth	r6, r6
 8023120:	b280      	uxth	r0, r0
 8023122:	fb00 fe06 	mul.w	lr, r0, r6
 8023126:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802312a:	0136      	lsls	r6, r6, #4
 802312c:	eba6 070e 	sub.w	r7, r6, lr
 8023130:	b280      	uxth	r0, r0
 8023132:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8023136:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802313a:	b2bf      	uxth	r7, r7
 802313c:	1a1b      	subs	r3, r3, r0
 802313e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023142:	b29b      	uxth	r3, r3
 8023144:	fb0a f607 	mul.w	r6, sl, r7
 8023148:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802314c:	fb0b 6603 	mla	r6, fp, r3, r6
 8023150:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023154:	fb00 6609 	mla	r6, r0, r9, r6
 8023158:	fb0e 6608 	mla	r6, lr, r8, r6
 802315c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023160:	9600      	str	r6, [sp, #0]
 8023162:	2e00      	cmp	r6, #0
 8023164:	f000 80be 	beq.w	80232e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8023168:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802316c:	fb0b fc0c 	mul.w	ip, fp, ip
 8023170:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8023174:	fb0b f505 	mul.w	r5, fp, r5
 8023178:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802317c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023180:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023184:	44dc      	add	ip, fp
 8023186:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802318a:	9501      	str	r5, [sp, #4]
 802318c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023190:	9503      	str	r5, [sp, #12]
 8023192:	9d01      	ldr	r5, [sp, #4]
 8023194:	9e02      	ldr	r6, [sp, #8]
 8023196:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802319a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802319e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80231a2:	fb0a fc0c 	mul.w	ip, sl, ip
 80231a6:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80231aa:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80231ae:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80231b2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80231b6:	4465      	add	r5, ip
 80231b8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80231bc:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80231c0:	fb09 fc0c 	mul.w	ip, r9, ip
 80231c4:	fb09 f904 	mul.w	r9, r9, r4
 80231c8:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80231cc:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80231d0:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80231d4:	fb08 f404 	mul.w	r4, r8, r4
 80231d8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80231dc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80231e0:	fb08 f802 	mul.w	r8, r8, r2
 80231e4:	fb0a fa01 	mul.w	sl, sl, r1
 80231e8:	0a22      	lsrs	r2, r4, #8
 80231ea:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80231ee:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80231f2:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80231f6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80231fa:	4414      	add	r4, r2
 80231fc:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023200:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023204:	0a2d      	lsrs	r5, r5, #8
 8023206:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802320a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802320e:	9a03      	ldr	r2, [sp, #12]
 8023210:	8836      	ldrh	r6, [r6, #0]
 8023212:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023216:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802321a:	437d      	muls	r5, r7
 802321c:	4461      	add	r1, ip
 802321e:	0a24      	lsrs	r4, r4, #8
 8023220:	fb02 5503 	mla	r5, r2, r3, r5
 8023224:	0a09      	lsrs	r1, r1, #8
 8023226:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802322a:	fb04 540e 	mla	r4, r4, lr, r5
 802322e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023232:	fb01 4100 	mla	r1, r1, r0, r4
 8023236:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802323a:	0a09      	lsrs	r1, r1, #8
 802323c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023240:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8023244:	fb07 f70a 	mul.w	r7, r7, sl
 8023248:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802324c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023250:	fb03 7101 	mla	r1, r3, r1, r7
 8023254:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023258:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802325c:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023260:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8023264:	fb00 e101 	mla	r1, r0, r1, lr
 8023268:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 802326c:	9a00      	ldr	r2, [sp, #0]
 802326e:	b287      	uxth	r7, r0
 8023270:	437a      	muls	r2, r7
 8023272:	0a09      	lsrs	r1, r1, #8
 8023274:	1c53      	adds	r3, r2, #1
 8023276:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802327a:	4321      	orrs	r1, r4
 802327c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023280:	1235      	asrs	r5, r6, #8
 8023282:	0c0a      	lsrs	r2, r1, #16
 8023284:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8023288:	b2db      	uxtb	r3, r3
 802328a:	fb12 f207 	smulbb	r2, r2, r7
 802328e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023292:	fb05 2503 	mla	r5, r5, r3, r2
 8023296:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802329a:	10f2      	asrs	r2, r6, #3
 802329c:	b2c8      	uxtb	r0, r1
 802329e:	00f6      	lsls	r6, r6, #3
 80232a0:	fb14 f407 	smulbb	r4, r4, r7
 80232a4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80232a8:	b2f6      	uxtb	r6, r6
 80232aa:	fb10 f007 	smulbb	r0, r0, r7
 80232ae:	fb02 4203 	mla	r2, r2, r3, r4
 80232b2:	b2ad      	uxth	r5, r5
 80232b4:	fb06 0303 	mla	r3, r6, r3, r0
 80232b8:	b299      	uxth	r1, r3
 80232ba:	b294      	uxth	r4, r2
 80232bc:	1c6b      	adds	r3, r5, #1
 80232be:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80232c2:	1c62      	adds	r2, r4, #1
 80232c4:	1c4b      	adds	r3, r1, #1
 80232c6:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80232ca:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80232ce:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80232d2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80232d6:	0952      	lsrs	r2, r2, #5
 80232d8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80232dc:	432b      	orrs	r3, r5
 80232de:	4313      	orrs	r3, r2
 80232e0:	9a02      	ldr	r2, [sp, #8]
 80232e2:	8013      	strh	r3, [r2, #0]
 80232e4:	b005      	add	sp, #20
 80232e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80232ea:	2500      	movs	r5, #0
 80232ec:	e6ef      	b.n	80230ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80232ee:	2100      	movs	r1, #0
 80232f0:	460d      	mov	r5, r1
 80232f2:	e6f7      	b.n	80230e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80232f4:	2100      	movs	r1, #0
 80232f6:	e6f5      	b.n	80230e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80232f8:	4631      	mov	r1, r6
 80232fa:	e6f3      	b.n	80230e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80232fc:	2400      	movs	r4, #0
 80232fe:	e702      	b.n	8023106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8023300:	2200      	movs	r2, #0
 8023302:	4614      	mov	r4, r2
 8023304:	e70b      	b.n	802311e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023306:	4602      	mov	r2, r0
 8023308:	4604      	mov	r4, r0
 802330a:	e708      	b.n	802311e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802330c:	2200      	movs	r2, #0
 802330e:	e706      	b.n	802311e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023310:	4632      	mov	r2, r6
 8023312:	e704      	b.n	802311e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08023314 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023314:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023318:	b09d      	sub	sp, #116	; 0x74
 802331a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 802331e:	9219      	str	r2, [sp, #100]	; 0x64
 8023320:	9307      	str	r3, [sp, #28]
 8023322:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8023324:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8023328:	931a      	str	r3, [sp, #104]	; 0x68
 802332a:	9117      	str	r1, [sp, #92]	; 0x5c
 802332c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8023330:	901b      	str	r0, [sp, #108]	; 0x6c
 8023332:	6850      	ldr	r0, [r2, #4]
 8023334:	6812      	ldr	r2, [r2, #0]
 8023336:	fb00 1303 	mla	r3, r0, r3, r1
 802333a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802333e:	930a      	str	r3, [sp, #40]	; 0x28
 8023340:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023342:	681b      	ldr	r3, [r3, #0]
 8023344:	9310      	str	r3, [sp, #64]	; 0x40
 8023346:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802334a:	930b      	str	r3, [sp, #44]	; 0x2c
 802334c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802334e:	2b00      	cmp	r3, #0
 8023350:	dc03      	bgt.n	802335a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8023352:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8023354:	2b00      	cmp	r3, #0
 8023356:	f340 8375 	ble.w	8023a44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802335a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802335c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023360:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023364:	1e48      	subs	r0, r1, #1
 8023366:	1e57      	subs	r7, r2, #1
 8023368:	9b07      	ldr	r3, [sp, #28]
 802336a:	2b00      	cmp	r3, #0
 802336c:	f340 818e 	ble.w	802368c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8023370:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023374:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023378:	d406      	bmi.n	8023388 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802337a:	4584      	cmp	ip, r0
 802337c:	da04      	bge.n	8023388 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802337e:	2b00      	cmp	r3, #0
 8023380:	db02      	blt.n	8023388 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023382:	42bb      	cmp	r3, r7
 8023384:	f2c0 8183 	blt.w	802368e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8023388:	f11c 0c01 	adds.w	ip, ip, #1
 802338c:	f100 8173 	bmi.w	8023676 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023390:	4561      	cmp	r1, ip
 8023392:	f2c0 8170 	blt.w	8023676 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023396:	3301      	adds	r3, #1
 8023398:	f100 816d 	bmi.w	8023676 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802339c:	429a      	cmp	r2, r3
 802339e:	f2c0 816a 	blt.w	8023676 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80233a2:	9b07      	ldr	r3, [sp, #28]
 80233a4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80233a6:	9318      	str	r3, [sp, #96]	; 0x60
 80233a8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80233aa:	2b00      	cmp	r3, #0
 80233ac:	f340 818c 	ble.w	80236c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 80233b0:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80233b2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80233b4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80233b8:	689b      	ldr	r3, [r3, #8]
 80233ba:	1422      	asrs	r2, r4, #16
 80233bc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80233c0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80233c4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80233c8:	f100 81cd 	bmi.w	8023766 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80233cc:	f103 38ff 	add.w	r8, r3, #4294967295
 80233d0:	4542      	cmp	r2, r8
 80233d2:	f280 81c8 	bge.w	8023766 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80233d6:	f1bc 0f00 	cmp.w	ip, #0
 80233da:	f2c0 81c4 	blt.w	8023766 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80233de:	f10e 38ff 	add.w	r8, lr, #4294967295
 80233e2:	45c4      	cmp	ip, r8
 80233e4:	f280 81bf 	bge.w	8023766 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80233e8:	b21b      	sxth	r3, r3
 80233ea:	fb0c 2203 	mla	r2, ip, r3, r2
 80233ee:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80233f0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80233f4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80233f8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80233fc:	2800      	cmp	r0, #0
 80233fe:	f000 81a9 	beq.w	8023754 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8023402:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023406:	950c      	str	r5, [sp, #48]	; 0x30
 8023408:	0e2d      	lsrs	r5, r5, #24
 802340a:	9513      	str	r5, [sp, #76]	; 0x4c
 802340c:	b181      	cbz	r1, 8023430 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802340e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8023412:	3b01      	subs	r3, #1
 8023414:	009b      	lsls	r3, r3, #2
 8023416:	3304      	adds	r3, #4
 8023418:	eb08 0c03 	add.w	ip, r8, r3
 802341c:	f858 3003 	ldr.w	r3, [r8, r3]
 8023420:	9308      	str	r3, [sp, #32]
 8023422:	0e1b      	lsrs	r3, r3, #24
 8023424:	9311      	str	r3, [sp, #68]	; 0x44
 8023426:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802342a:	930d      	str	r3, [sp, #52]	; 0x34
 802342c:	0e1b      	lsrs	r3, r3, #24
 802342e:	9314      	str	r3, [sp, #80]	; 0x50
 8023430:	b280      	uxth	r0, r0
 8023432:	b289      	uxth	r1, r1
 8023434:	fb00 f901 	mul.w	r9, r0, r1
 8023438:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802343c:	0100      	lsls	r0, r0, #4
 802343e:	eba0 0809 	sub.w	r8, r0, r9
 8023442:	b289      	uxth	r1, r1
 8023444:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8023448:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802344a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802344c:	fa1f f888 	uxth.w	r8, r8
 8023450:	1a5b      	subs	r3, r3, r1
 8023452:	b29b      	uxth	r3, r3
 8023454:	fb08 f000 	mul.w	r0, r8, r0
 8023458:	fb03 000e 	mla	r0, r3, lr, r0
 802345c:	fb01 0005 	mla	r0, r1, r5, r0
 8023460:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023462:	fb09 0005 	mla	r0, r9, r5, r0
 8023466:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802346a:	2800      	cmp	r0, #0
 802346c:	f000 80fa 	beq.w	8023664 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023470:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023474:	d01b      	beq.n	80234ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8023476:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802347a:	fb0e fa0a 	mul.w	sl, lr, sl
 802347e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023482:	fb0e fe02 	mul.w	lr, lr, r2
 8023486:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802348a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802348e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023492:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023496:	4452      	add	r2, sl
 8023498:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802349c:	0a12      	lsrs	r2, r2, #8
 802349e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80234a2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80234a6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80234aa:	ea42 020c 	orr.w	r2, r2, ip
 80234ae:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80234b0:	2dff      	cmp	r5, #255	; 0xff
 80234b2:	d021      	beq.n	80234f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80234b4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80234b6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80234ba:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80234bc:	fb05 fb0b 	mul.w	fp, r5, fp
 80234c0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80234c2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80234c6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80234c8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80234cc:	fb05 fa0a 	mul.w	sl, r5, sl
 80234d0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80234d4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80234d8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80234dc:	44de      	add	lr, fp
 80234de:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80234e2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80234e6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80234ea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80234ee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80234f2:	ea4e 050a 	orr.w	r5, lr, sl
 80234f6:	950c      	str	r5, [sp, #48]	; 0x30
 80234f8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80234fa:	2dff      	cmp	r5, #255	; 0xff
 80234fc:	d021      	beq.n	8023542 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 80234fe:	9d08      	ldr	r5, [sp, #32]
 8023500:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023504:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023506:	fb05 fb0b 	mul.w	fp, r5, fp
 802350a:	9d08      	ldr	r5, [sp, #32]
 802350c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023510:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023512:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023516:	fb05 fa0a 	mul.w	sl, r5, sl
 802351a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802351e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023522:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023526:	44de      	add	lr, fp
 8023528:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802352c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023530:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023534:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023538:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802353c:	ea4e 050a 	orr.w	r5, lr, sl
 8023540:	9508      	str	r5, [sp, #32]
 8023542:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023544:	2dff      	cmp	r5, #255	; 0xff
 8023546:	d021      	beq.n	802358c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8023548:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802354a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802354e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023550:	fb05 fb0b 	mul.w	fp, r5, fp
 8023554:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023556:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802355a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802355c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023560:	fb05 fa0a 	mul.w	sl, r5, sl
 8023564:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023568:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802356c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023570:	44de      	add	lr, fp
 8023572:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023576:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802357a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802357e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023582:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023586:	ea4e 050a 	orr.w	r5, lr, sl
 802358a:	950d      	str	r5, [sp, #52]	; 0x34
 802358c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802358e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023592:	9d08      	ldr	r5, [sp, #32]
 8023594:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8023598:	fb08 fc0c 	mul.w	ip, r8, ip
 802359c:	fb03 cc0e 	mla	ip, r3, lr, ip
 80235a0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80235a4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80235a6:	fb01 cc0e 	mla	ip, r1, lr, ip
 80235aa:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80235ae:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80235b0:	fb09 cc0e 	mla	ip, r9, lr, ip
 80235b4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80235b8:	fb08 f80e 	mul.w	r8, r8, lr
 80235bc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80235c0:	fb03 8202 	mla	r2, r3, r2, r8
 80235c4:	9b08      	ldr	r3, [sp, #32]
 80235c6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80235c8:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80235cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80235ce:	fb01 220a 	mla	r2, r1, sl, r2
 80235d2:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80235d6:	fb09 2901 	mla	r9, r9, r1, r2
 80235da:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80235dc:	883b      	ldrh	r3, [r7, #0]
 80235de:	4342      	muls	r2, r0
 80235e0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80235e4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80235e8:	1c50      	adds	r0, r2, #1
 80235ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80235ee:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80235f2:	ea4c 0c09 	orr.w	ip, ip, r9
 80235f6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80235fa:	1219      	asrs	r1, r3, #8
 80235fc:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8023600:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8023604:	b2c0      	uxtb	r0, r0
 8023606:	fb12 f205 	smulbb	r2, r2, r5
 802360a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802360e:	fb01 2100 	mla	r1, r1, r0, r2
 8023612:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8023616:	10da      	asrs	r2, r3, #3
 8023618:	fa5f fc8c 	uxtb.w	ip, ip
 802361c:	00db      	lsls	r3, r3, #3
 802361e:	fb1c fc05 	smulbb	ip, ip, r5
 8023622:	b2db      	uxtb	r3, r3
 8023624:	b289      	uxth	r1, r1
 8023626:	fb03 c300 	mla	r3, r3, r0, ip
 802362a:	fa1f fc83 	uxth.w	ip, r3
 802362e:	1c4b      	adds	r3, r1, #1
 8023630:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023634:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023638:	fb1e fe05 	smulbb	lr, lr, r5
 802363c:	f10c 0301 	add.w	r3, ip, #1
 8023640:	fb02 e200 	mla	r2, r2, r0, lr
 8023644:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8023648:	b292      	uxth	r2, r2
 802364a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802364e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023652:	430b      	orrs	r3, r1
 8023654:	1c51      	adds	r1, r2, #1
 8023656:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802365a:	0952      	lsrs	r2, r2, #5
 802365c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023660:	4313      	orrs	r3, r2
 8023662:	803b      	strh	r3, [r7, #0]
 8023664:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023666:	441c      	add	r4, r3
 8023668:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802366a:	441e      	add	r6, r3
 802366c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802366e:	3b01      	subs	r3, #1
 8023670:	3702      	adds	r7, #2
 8023672:	9318      	str	r3, [sp, #96]	; 0x60
 8023674:	e698      	b.n	80233a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8023676:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023678:	441c      	add	r4, r3
 802367a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802367c:	441e      	add	r6, r3
 802367e:	9b07      	ldr	r3, [sp, #28]
 8023680:	3b01      	subs	r3, #1
 8023682:	9307      	str	r3, [sp, #28]
 8023684:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023686:	3302      	adds	r3, #2
 8023688:	930a      	str	r3, [sp, #40]	; 0x28
 802368a:	e66d      	b.n	8023368 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 802368c:	d023      	beq.n	80236d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802368e:	9b07      	ldr	r3, [sp, #28]
 8023690:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8023692:	3b01      	subs	r3, #1
 8023694:	fb00 4003 	mla	r0, r0, r3, r4
 8023698:	1400      	asrs	r0, r0, #16
 802369a:	f53f ae82 	bmi.w	80233a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802369e:	3901      	subs	r1, #1
 80236a0:	4288      	cmp	r0, r1
 80236a2:	f6bf ae7e 	bge.w	80233a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80236a6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80236a8:	fb01 6303 	mla	r3, r1, r3, r6
 80236ac:	141b      	asrs	r3, r3, #16
 80236ae:	f53f ae78 	bmi.w	80233a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80236b2:	3a01      	subs	r2, #1
 80236b4:	4293      	cmp	r3, r2
 80236b6:	f6bf ae74 	bge.w	80233a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80236ba:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80236be:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80236c2:	f1bb 0f00 	cmp.w	fp, #0
 80236c6:	dc6c      	bgt.n	80237a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80236c8:	9b07      	ldr	r3, [sp, #28]
 80236ca:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80236ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80236d0:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80236d4:	930a      	str	r3, [sp, #40]	; 0x28
 80236d6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80236d8:	2b00      	cmp	r3, #0
 80236da:	f340 81b3 	ble.w	8023a44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80236de:	ee30 0a04 	vadd.f32	s0, s0, s8
 80236e2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80236e6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80236ea:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80236ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80236f0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80236f4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80236f8:	eef0 6a62 	vmov.f32	s13, s5
 80236fc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023700:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023704:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023708:	ee16 4a90 	vmov	r4, s13
 802370c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023710:	eef0 6a43 	vmov.f32	s13, s6
 8023714:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023718:	ee12 2a90 	vmov	r2, s5
 802371c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023720:	fb92 f3f3 	sdiv	r3, r2, r3
 8023724:	ee13 2a10 	vmov	r2, s6
 8023728:	9329      	str	r3, [sp, #164]	; 0xa4
 802372a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802372c:	fb92 f3f3 	sdiv	r3, r2, r3
 8023730:	932a      	str	r3, [sp, #168]	; 0xa8
 8023732:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023734:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8023736:	3b01      	subs	r3, #1
 8023738:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802373c:	9317      	str	r3, [sp, #92]	; 0x5c
 802373e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023740:	bf08      	it	eq
 8023742:	4613      	moveq	r3, r2
 8023744:	ee16 6a90 	vmov	r6, s13
 8023748:	9307      	str	r3, [sp, #28]
 802374a:	eeb0 3a67 	vmov.f32	s6, s15
 802374e:	eef0 2a47 	vmov.f32	s5, s14
 8023752:	e5fb      	b.n	802334c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8023754:	2900      	cmp	r1, #0
 8023756:	f43f ae6b 	beq.w	8023430 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802375a:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 802375e:	9308      	str	r3, [sp, #32]
 8023760:	0e1b      	lsrs	r3, r3, #24
 8023762:	9311      	str	r3, [sp, #68]	; 0x44
 8023764:	e664      	b.n	8023430 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023766:	f112 0801 	adds.w	r8, r2, #1
 802376a:	f53f af7b 	bmi.w	8023664 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802376e:	4543      	cmp	r3, r8
 8023770:	f6ff af78 	blt.w	8023664 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023774:	f11c 0801 	adds.w	r8, ip, #1
 8023778:	f53f af74 	bmi.w	8023664 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802377c:	45c6      	cmp	lr, r8
 802377e:	f6ff af71 	blt.w	8023664 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023782:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8023784:	9201      	str	r2, [sp, #4]
 8023786:	fa0f f28e 	sxth.w	r2, lr
 802378a:	e9cd 1504 	strd	r1, r5, [sp, #16]
 802378e:	e9cd c002 	strd	ip, r0, [sp, #8]
 8023792:	9200      	str	r2, [sp, #0]
 8023794:	b21b      	sxth	r3, r3
 8023796:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023798:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802379a:	4639      	mov	r1, r7
 802379c:	f7ff fc79 	bl	8023092 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 80237a0:	e760      	b.n	8023664 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80237a2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80237a4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80237a6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80237aa:	1427      	asrs	r7, r4, #16
 80237ac:	1433      	asrs	r3, r6, #16
 80237ae:	fb01 7303 	mla	r3, r1, r3, r7
 80237b2:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 80237b6:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80237ba:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80237be:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80237c2:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80237c6:	2a00      	cmp	r2, #0
 80237c8:	f000 8133 	beq.w	8023a32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80237cc:	687d      	ldr	r5, [r7, #4]
 80237ce:	950e      	str	r5, [sp, #56]	; 0x38
 80237d0:	0e2d      	lsrs	r5, r5, #24
 80237d2:	9515      	str	r5, [sp, #84]	; 0x54
 80237d4:	b178      	cbz	r0, 80237f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80237d6:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80237da:	3901      	subs	r1, #1
 80237dc:	0089      	lsls	r1, r1, #2
 80237de:	3104      	adds	r1, #4
 80237e0:	eb07 0e01 	add.w	lr, r7, r1
 80237e4:	5879      	ldr	r1, [r7, r1]
 80237e6:	9109      	str	r1, [sp, #36]	; 0x24
 80237e8:	0e09      	lsrs	r1, r1, #24
 80237ea:	9112      	str	r1, [sp, #72]	; 0x48
 80237ec:	f8de 1004 	ldr.w	r1, [lr, #4]
 80237f0:	910f      	str	r1, [sp, #60]	; 0x3c
 80237f2:	0e09      	lsrs	r1, r1, #24
 80237f4:	9116      	str	r1, [sp, #88]	; 0x58
 80237f6:	b292      	uxth	r2, r2
 80237f8:	b280      	uxth	r0, r0
 80237fa:	fb02 f800 	mul.w	r8, r2, r0
 80237fe:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8023802:	0112      	lsls	r2, r2, #4
 8023804:	eba2 0e08 	sub.w	lr, r2, r8
 8023808:	b280      	uxth	r0, r0
 802380a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802380e:	9915      	ldr	r1, [sp, #84]	; 0x54
 8023810:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023812:	fa1f fe8e 	uxth.w	lr, lr
 8023816:	1a12      	subs	r2, r2, r0
 8023818:	b292      	uxth	r2, r2
 802381a:	fb0e f101 	mul.w	r1, lr, r1
 802381e:	fb02 110c 	mla	r1, r2, ip, r1
 8023822:	fb00 1105 	mla	r1, r0, r5, r1
 8023826:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023828:	fb08 1105 	mla	r1, r8, r5, r1
 802382c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8023830:	2900      	cmp	r1, #0
 8023832:	f000 80f5 	beq.w	8023a20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8023836:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802383a:	d019      	beq.n	8023870 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 802383c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8023840:	fb0c fa0a 	mul.w	sl, ip, sl
 8023844:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023848:	fb0c fc03 	mul.w	ip, ip, r3
 802384c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023850:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023854:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023858:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802385c:	4453      	add	r3, sl
 802385e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023862:	0a1b      	lsrs	r3, r3, #8
 8023864:	0a3f      	lsrs	r7, r7, #8
 8023866:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802386a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802386e:	433b      	orrs	r3, r7
 8023870:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023872:	2dff      	cmp	r5, #255	; 0xff
 8023874:	d020      	beq.n	80238b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8023876:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023878:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802387c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802387e:	436f      	muls	r7, r5
 8023880:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023882:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023886:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023888:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802388c:	fb05 fa0a 	mul.w	sl, r5, sl
 8023890:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023894:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023898:	44bc      	add	ip, r7
 802389a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802389e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80238a2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80238a6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80238aa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80238ae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80238b2:	ea4c 050a 	orr.w	r5, ip, sl
 80238b6:	950e      	str	r5, [sp, #56]	; 0x38
 80238b8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80238ba:	2dff      	cmp	r5, #255	; 0xff
 80238bc:	d020      	beq.n	8023900 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 80238be:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80238c0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80238c4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80238c6:	436f      	muls	r7, r5
 80238c8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80238ca:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80238ce:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80238d0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80238d4:	fb05 fa0a 	mul.w	sl, r5, sl
 80238d8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80238dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80238e0:	44bc      	add	ip, r7
 80238e2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80238e6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80238ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80238ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80238f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80238f6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80238fa:	ea4c 050a 	orr.w	r5, ip, sl
 80238fe:	9509      	str	r5, [sp, #36]	; 0x24
 8023900:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023902:	2dff      	cmp	r5, #255	; 0xff
 8023904:	d020      	beq.n	8023948 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8023906:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023908:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802390c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802390e:	436f      	muls	r7, r5
 8023910:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023912:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023916:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023918:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802391c:	fb05 fa0a 	mul.w	sl, r5, sl
 8023920:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023924:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023928:	44bc      	add	ip, r7
 802392a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802392e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023932:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023936:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802393a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802393e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023942:	ea4c 050a 	orr.w	r5, ip, sl
 8023946:	950f      	str	r5, [sp, #60]	; 0x3c
 8023948:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802394a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802394e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023950:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8023954:	fb0e f707 	mul.w	r7, lr, r7
 8023958:	fb02 770c 	mla	r7, r2, ip, r7
 802395c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023960:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023962:	fb00 770c 	mla	r7, r0, ip, r7
 8023966:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802396a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802396c:	fb08 770c 	mla	r7, r8, ip, r7
 8023970:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8023974:	fb0e fe0c 	mul.w	lr, lr, ip
 8023978:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802397c:	fb02 e303 	mla	r3, r2, r3, lr
 8023980:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023982:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023984:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8023988:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802398a:	fb00 330a 	mla	r3, r0, sl, r3
 802398e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8023992:	fb08 3c0c 	mla	ip, r8, ip, r3
 8023996:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023998:	f8b9 0000 	ldrh.w	r0, [r9]
 802399c:	4359      	muls	r1, r3
 802399e:	0a3f      	lsrs	r7, r7, #8
 80239a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80239a4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80239a8:	1c4b      	adds	r3, r1, #1
 80239aa:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80239ae:	ea47 070c 	orr.w	r7, r7, ip
 80239b2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80239b6:	1202      	asrs	r2, r0, #8
 80239b8:	0c3b      	lsrs	r3, r7, #16
 80239ba:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80239be:	b2c9      	uxtb	r1, r1
 80239c0:	fb13 f305 	smulbb	r3, r3, r5
 80239c4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80239c8:	fb02 3201 	mla	r2, r2, r1, r3
 80239cc:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80239d0:	10c3      	asrs	r3, r0, #3
 80239d2:	b2ff      	uxtb	r7, r7
 80239d4:	00c0      	lsls	r0, r0, #3
 80239d6:	b2c0      	uxtb	r0, r0
 80239d8:	fb17 f705 	smulbb	r7, r7, r5
 80239dc:	fb00 7001 	mla	r0, r0, r1, r7
 80239e0:	b292      	uxth	r2, r2
 80239e2:	fb1c fc05 	smulbb	ip, ip, r5
 80239e6:	b280      	uxth	r0, r0
 80239e8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80239ec:	fb03 c301 	mla	r3, r3, r1, ip
 80239f0:	1c51      	adds	r1, r2, #1
 80239f2:	f100 0c01 	add.w	ip, r0, #1
 80239f6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80239fa:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 80239fe:	b29b      	uxth	r3, r3
 8023a00:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8023a04:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8023a08:	ea4c 0202 	orr.w	r2, ip, r2
 8023a0c:	f103 0c01 	add.w	ip, r3, #1
 8023a10:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8023a14:	095b      	lsrs	r3, r3, #5
 8023a16:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023a1a:	431a      	orrs	r2, r3
 8023a1c:	f8a9 2000 	strh.w	r2, [r9]
 8023a20:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023a22:	441c      	add	r4, r3
 8023a24:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023a26:	f109 0902 	add.w	r9, r9, #2
 8023a2a:	441e      	add	r6, r3
 8023a2c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8023a30:	e647      	b.n	80236c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8023a32:	2800      	cmp	r0, #0
 8023a34:	f43f aedf 	beq.w	80237f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023a38:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8023a3c:	9109      	str	r1, [sp, #36]	; 0x24
 8023a3e:	0e09      	lsrs	r1, r1, #24
 8023a40:	9112      	str	r1, [sp, #72]	; 0x48
 8023a42:	e6d8      	b.n	80237f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023a44:	b01d      	add	sp, #116	; 0x74
 8023a46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023a4a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8023a4a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023a4e:	b085      	sub	sp, #20
 8023a50:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8023a54:	9102      	str	r1, [sp, #8]
 8023a56:	2c00      	cmp	r4, #0
 8023a58:	fb04 7103 	mla	r1, r4, r3, r7
 8023a5c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8023a60:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8023a64:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8023a68:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8023a6c:	f2c0 810c 	blt.w	8023c88 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023a70:	45a6      	cmp	lr, r4
 8023a72:	f340 8109 	ble.w	8023c88 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023a76:	2f00      	cmp	r7, #0
 8023a78:	f2c0 8104 	blt.w	8023c84 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023a7c:	42bb      	cmp	r3, r7
 8023a7e:	f340 8101 	ble.w	8023c84 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023a82:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8023a86:	1c7a      	adds	r2, r7, #1
 8023a88:	f100 8101 	bmi.w	8023c8e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023a8c:	4293      	cmp	r3, r2
 8023a8e:	f340 80fe 	ble.w	8023c8e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023a92:	2e00      	cmp	r6, #0
 8023a94:	f000 80fd 	beq.w	8023c92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8023a98:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8023a9c:	3401      	adds	r4, #1
 8023a9e:	f100 80fc 	bmi.w	8023c9a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023aa2:	45a6      	cmp	lr, r4
 8023aa4:	f340 80f9 	ble.w	8023c9a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023aa8:	2800      	cmp	r0, #0
 8023aaa:	f000 80f9 	beq.w	8023ca0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8023aae:	2f00      	cmp	r7, #0
 8023ab0:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8023ab4:	f2c0 80ef 	blt.w	8023c96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023ab8:	42bb      	cmp	r3, r7
 8023aba:	f340 80ec 	ble.w	8023c96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023abe:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8023ac2:	3701      	adds	r7, #1
 8023ac4:	f100 80ef 	bmi.w	8023ca6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023ac8:	42bb      	cmp	r3, r7
 8023aca:	f340 80ec 	ble.w	8023ca6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023ace:	2e00      	cmp	r6, #0
 8023ad0:	f000 80eb 	beq.w	8023caa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8023ad4:	6852      	ldr	r2, [r2, #4]
 8023ad6:	b2b6      	uxth	r6, r6
 8023ad8:	b280      	uxth	r0, r0
 8023ada:	fb00 fe06 	mul.w	lr, r0, r6
 8023ade:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023ae2:	0136      	lsls	r6, r6, #4
 8023ae4:	eba6 070e 	sub.w	r7, r6, lr
 8023ae8:	b280      	uxth	r0, r0
 8023aea:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8023aee:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023af2:	b2bf      	uxth	r7, r7
 8023af4:	1a1b      	subs	r3, r3, r0
 8023af6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023afa:	b29b      	uxth	r3, r3
 8023afc:	fb07 f60a 	mul.w	r6, r7, sl
 8023b00:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023b04:	fb0b 6603 	mla	r6, fp, r3, r6
 8023b08:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023b0c:	fb00 6609 	mla	r6, r0, r9, r6
 8023b10:	fb0e 6608 	mla	r6, lr, r8, r6
 8023b14:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023b18:	9600      	str	r6, [sp, #0]
 8023b1a:	2e00      	cmp	r6, #0
 8023b1c:	f000 80af 	beq.w	8023c7e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8023b20:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023b24:	fb0b fc0c 	mul.w	ip, fp, ip
 8023b28:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8023b2c:	fb0b f505 	mul.w	r5, fp, r5
 8023b30:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023b34:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023b38:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023b3c:	44dc      	add	ip, fp
 8023b3e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023b42:	9501      	str	r5, [sp, #4]
 8023b44:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023b48:	9503      	str	r5, [sp, #12]
 8023b4a:	9d01      	ldr	r5, [sp, #4]
 8023b4c:	9e02      	ldr	r6, [sp, #8]
 8023b4e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8023b52:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023b56:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023b5a:	fb0a fc0c 	mul.w	ip, sl, ip
 8023b5e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023b62:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023b66:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023b6a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023b6e:	4465      	add	r5, ip
 8023b70:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023b74:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023b78:	fb09 fc0c 	mul.w	ip, r9, ip
 8023b7c:	fb09 f904 	mul.w	r9, r9, r4
 8023b80:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023b84:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023b88:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023b8c:	fb08 f404 	mul.w	r4, r8, r4
 8023b90:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023b94:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023b98:	fb08 f802 	mul.w	r8, r8, r2
 8023b9c:	fb0a fa01 	mul.w	sl, sl, r1
 8023ba0:	0a22      	lsrs	r2, r4, #8
 8023ba2:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023ba6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023baa:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8023bae:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023bb2:	4414      	add	r4, r2
 8023bb4:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023bb8:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023bbc:	0a2d      	lsrs	r5, r5, #8
 8023bbe:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023bc2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023bc6:	9a03      	ldr	r2, [sp, #12]
 8023bc8:	8836      	ldrh	r6, [r6, #0]
 8023bca:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023bce:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023bd2:	437d      	muls	r5, r7
 8023bd4:	4461      	add	r1, ip
 8023bd6:	0a24      	lsrs	r4, r4, #8
 8023bd8:	fb02 5503 	mla	r5, r2, r3, r5
 8023bdc:	0a09      	lsrs	r1, r1, #8
 8023bde:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023be2:	fb04 540e 	mla	r4, r4, lr, r5
 8023be6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023bea:	fb01 4100 	mla	r1, r1, r0, r4
 8023bee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023bf2:	0a09      	lsrs	r1, r1, #8
 8023bf4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023bf8:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8023bfc:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023c00:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023c04:	fb07 f70a 	mul.w	r7, r7, sl
 8023c08:	fb03 7101 	mla	r1, r3, r1, r7
 8023c0c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023c10:	9b00      	ldr	r3, [sp, #0]
 8023c12:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023c16:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023c1a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8023c1e:	fb00 e101 	mla	r1, r0, r1, lr
 8023c22:	43da      	mvns	r2, r3
 8023c24:	1233      	asrs	r3, r6, #8
 8023c26:	b2d2      	uxtb	r2, r2
 8023c28:	10f0      	asrs	r0, r6, #3
 8023c2a:	0a09      	lsrs	r1, r1, #8
 8023c2c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023c30:	00f6      	lsls	r6, r6, #3
 8023c32:	4353      	muls	r3, r2
 8023c34:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023c38:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023c3c:	b2f6      	uxtb	r6, r6
 8023c3e:	4321      	orrs	r1, r4
 8023c40:	4350      	muls	r0, r2
 8023c42:	4356      	muls	r6, r2
 8023c44:	1c5a      	adds	r2, r3, #1
 8023c46:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023c4a:	0c0b      	lsrs	r3, r1, #16
 8023c4c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023c50:	1c42      	adds	r2, r0, #1
 8023c52:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023c56:	0a0a      	lsrs	r2, r1, #8
 8023c58:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8023c5c:	021b      	lsls	r3, r3, #8
 8023c5e:	00d2      	lsls	r2, r2, #3
 8023c60:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023c64:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8023c68:	4313      	orrs	r3, r2
 8023c6a:	1c72      	adds	r2, r6, #1
 8023c6c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8023c70:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8023c74:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8023c78:	4319      	orrs	r1, r3
 8023c7a:	9b02      	ldr	r3, [sp, #8]
 8023c7c:	8019      	strh	r1, [r3, #0]
 8023c7e:	b005      	add	sp, #20
 8023c80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023c84:	2500      	movs	r5, #0
 8023c86:	e6fe      	b.n	8023a86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8023c88:	2100      	movs	r1, #0
 8023c8a:	460d      	mov	r5, r1
 8023c8c:	e706      	b.n	8023a9c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023c8e:	2100      	movs	r1, #0
 8023c90:	e704      	b.n	8023a9c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023c92:	4631      	mov	r1, r6
 8023c94:	e702      	b.n	8023a9c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023c96:	2400      	movs	r4, #0
 8023c98:	e713      	b.n	8023ac2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8023c9a:	2200      	movs	r2, #0
 8023c9c:	4614      	mov	r4, r2
 8023c9e:	e71a      	b.n	8023ad6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023ca0:	4602      	mov	r2, r0
 8023ca2:	4604      	mov	r4, r0
 8023ca4:	e717      	b.n	8023ad6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023ca6:	2200      	movs	r2, #0
 8023ca8:	e715      	b.n	8023ad6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023caa:	4632      	mov	r2, r6
 8023cac:	e713      	b.n	8023ad6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08023cb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023cb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023cb4:	b09b      	sub	sp, #108	; 0x6c
 8023cb6:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8023cba:	9218      	str	r2, [sp, #96]	; 0x60
 8023cbc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8023cbe:	9116      	str	r1, [sp, #88]	; 0x58
 8023cc0:	9307      	str	r3, [sp, #28]
 8023cc2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8023cc6:	9019      	str	r0, [sp, #100]	; 0x64
 8023cc8:	6850      	ldr	r0, [r2, #4]
 8023cca:	6812      	ldr	r2, [r2, #0]
 8023ccc:	fb00 1303 	mla	r3, r0, r3, r1
 8023cd0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023cd4:	930a      	str	r3, [sp, #40]	; 0x28
 8023cd6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023cd8:	681b      	ldr	r3, [r3, #0]
 8023cda:	930f      	str	r3, [sp, #60]	; 0x3c
 8023cdc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023cde:	2b00      	cmp	r3, #0
 8023ce0:	dc03      	bgt.n	8023cea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023ce2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023ce4:	2b00      	cmp	r3, #0
 8023ce6:	f340 8386 	ble.w	80243f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8023cea:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023cec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023cf0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023cf4:	1e48      	subs	r0, r1, #1
 8023cf6:	1e57      	subs	r7, r2, #1
 8023cf8:	9b07      	ldr	r3, [sp, #28]
 8023cfa:	2b00      	cmp	r3, #0
 8023cfc:	f340 8166 	ble.w	8023fcc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8023d00:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023d04:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023d08:	d406      	bmi.n	8023d18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023d0a:	4584      	cmp	ip, r0
 8023d0c:	da04      	bge.n	8023d18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023d0e:	2b00      	cmp	r3, #0
 8023d10:	db02      	blt.n	8023d18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023d12:	42bb      	cmp	r3, r7
 8023d14:	f2c0 815b 	blt.w	8023fce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8023d18:	f11c 0c01 	adds.w	ip, ip, #1
 8023d1c:	f100 814b 	bmi.w	8023fb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023d20:	4561      	cmp	r1, ip
 8023d22:	f2c0 8148 	blt.w	8023fb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023d26:	3301      	adds	r3, #1
 8023d28:	f100 8145 	bmi.w	8023fb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023d2c:	429a      	cmp	r2, r3
 8023d2e:	f2c0 8142 	blt.w	8023fb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023d32:	9b07      	ldr	r3, [sp, #28]
 8023d34:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8023d36:	9317      	str	r3, [sp, #92]	; 0x5c
 8023d38:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023d3a:	2b00      	cmp	r3, #0
 8023d3c:	f340 8165 	ble.w	802400a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023d40:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8023d42:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023d44:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023d48:	689b      	ldr	r3, [r3, #8]
 8023d4a:	1422      	asrs	r2, r4, #16
 8023d4c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023d50:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8023d54:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023d58:	f100 81d5 	bmi.w	8024106 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023d5c:	f103 38ff 	add.w	r8, r3, #4294967295
 8023d60:	4542      	cmp	r2, r8
 8023d62:	f280 81d0 	bge.w	8024106 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023d66:	f1bc 0f00 	cmp.w	ip, #0
 8023d6a:	f2c0 81cc 	blt.w	8024106 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023d6e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023d72:	45c4      	cmp	ip, r8
 8023d74:	f280 81c7 	bge.w	8024106 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023d78:	b21b      	sxth	r3, r3
 8023d7a:	fb0c 2203 	mla	r2, ip, r3, r2
 8023d7e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023d80:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023d84:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023d88:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8023d8c:	2900      	cmp	r1, #0
 8023d8e:	f000 8182 	beq.w	8024096 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8023d92:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023d96:	950b      	str	r5, [sp, #44]	; 0x2c
 8023d98:	0e2d      	lsrs	r5, r5, #24
 8023d9a:	9512      	str	r5, [sp, #72]	; 0x48
 8023d9c:	b180      	cbz	r0, 8023dc0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023d9e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8023da2:	3b01      	subs	r3, #1
 8023da4:	009b      	lsls	r3, r3, #2
 8023da6:	3304      	adds	r3, #4
 8023da8:	eb08 0c03 	add.w	ip, r8, r3
 8023dac:	f858 3003 	ldr.w	r3, [r8, r3]
 8023db0:	9308      	str	r3, [sp, #32]
 8023db2:	0e1b      	lsrs	r3, r3, #24
 8023db4:	9310      	str	r3, [sp, #64]	; 0x40
 8023db6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8023dba:	930c      	str	r3, [sp, #48]	; 0x30
 8023dbc:	0e1b      	lsrs	r3, r3, #24
 8023dbe:	9313      	str	r3, [sp, #76]	; 0x4c
 8023dc0:	b289      	uxth	r1, r1
 8023dc2:	b280      	uxth	r0, r0
 8023dc4:	fb01 f900 	mul.w	r9, r1, r0
 8023dc8:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8023dcc:	0109      	lsls	r1, r1, #4
 8023dce:	eba1 0809 	sub.w	r8, r1, r9
 8023dd2:	b280      	uxth	r0, r0
 8023dd4:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8023dd8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8023dda:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023ddc:	fa1f f888 	uxth.w	r8, r8
 8023de0:	1a09      	subs	r1, r1, r0
 8023de2:	b289      	uxth	r1, r1
 8023de4:	fb08 f303 	mul.w	r3, r8, r3
 8023de8:	fb01 330e 	mla	r3, r1, lr, r3
 8023dec:	fb00 3305 	mla	r3, r0, r5, r3
 8023df0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023df2:	fb09 3305 	mla	r3, r9, r5, r3
 8023df6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023dfa:	2b00      	cmp	r3, #0
 8023dfc:	f000 80d2 	beq.w	8023fa4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023e00:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023e04:	d01b      	beq.n	8023e3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8023e06:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8023e0a:	fb0e fa0a 	mul.w	sl, lr, sl
 8023e0e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023e12:	fb0e fe02 	mul.w	lr, lr, r2
 8023e16:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8023e1a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023e1e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023e22:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023e26:	4452      	add	r2, sl
 8023e28:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023e2c:	0a12      	lsrs	r2, r2, #8
 8023e2e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023e32:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023e36:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023e3a:	ea42 020c 	orr.w	r2, r2, ip
 8023e3e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023e40:	2dff      	cmp	r5, #255	; 0xff
 8023e42:	d021      	beq.n	8023e88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8023e44:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023e46:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023e4a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023e4c:	fb05 fb0b 	mul.w	fp, r5, fp
 8023e50:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023e52:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023e56:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023e58:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023e5c:	fb05 fa0a 	mul.w	sl, r5, sl
 8023e60:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023e64:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023e68:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023e6c:	44de      	add	lr, fp
 8023e6e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023e72:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023e76:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023e7a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023e7e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023e82:	ea4e 050a 	orr.w	r5, lr, sl
 8023e86:	950b      	str	r5, [sp, #44]	; 0x2c
 8023e88:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023e8a:	2dff      	cmp	r5, #255	; 0xff
 8023e8c:	d021      	beq.n	8023ed2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8023e8e:	9d08      	ldr	r5, [sp, #32]
 8023e90:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023e94:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023e96:	fb05 fb0b 	mul.w	fp, r5, fp
 8023e9a:	9d08      	ldr	r5, [sp, #32]
 8023e9c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023ea0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023ea2:	fb05 fa0e 	mul.w	sl, r5, lr
 8023ea6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023eaa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023eae:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023eb2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023eb6:	44de      	add	lr, fp
 8023eb8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023ebc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023ec0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023ec4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023ec8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023ecc:	ea4e 050a 	orr.w	r5, lr, sl
 8023ed0:	9508      	str	r5, [sp, #32]
 8023ed2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023ed4:	2dff      	cmp	r5, #255	; 0xff
 8023ed6:	d021      	beq.n	8023f1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8023ed8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023eda:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023ede:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023ee0:	fb05 fb0b 	mul.w	fp, r5, fp
 8023ee4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023ee6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023eea:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023eec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023ef0:	fb05 fa0a 	mul.w	sl, r5, sl
 8023ef4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023ef8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023efc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023f00:	44de      	add	lr, fp
 8023f02:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023f06:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023f0a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023f0e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023f12:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023f16:	ea4e 050a 	orr.w	r5, lr, sl
 8023f1a:	950c      	str	r5, [sp, #48]	; 0x30
 8023f1c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023f1e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023f22:	9d08      	ldr	r5, [sp, #32]
 8023f24:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8023f28:	fb08 fc0c 	mul.w	ip, r8, ip
 8023f2c:	fb01 cc0e 	mla	ip, r1, lr, ip
 8023f30:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023f34:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023f36:	fb00 cc0e 	mla	ip, r0, lr, ip
 8023f3a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023f3e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023f40:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023f44:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023f48:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023f4c:	fb08 f80e 	mul.w	r8, r8, lr
 8023f50:	fb01 8202 	mla	r2, r1, r2, r8
 8023f54:	9908      	ldr	r1, [sp, #32]
 8023f56:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8023f5a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8023f5c:	fb00 220a 	mla	r2, r0, sl, r2
 8023f60:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8023f64:	fb09 2900 	mla	r9, r9, r0, r2
 8023f68:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023f6c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023f70:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023f74:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023f78:	ea4c 0c09 	orr.w	ip, ip, r9
 8023f7c:	2bff      	cmp	r3, #255	; 0xff
 8023f7e:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8023f82:	f040 8091 	bne.w	80240a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8023f86:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8023f8a:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8023f8e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023f92:	f022 0207 	bic.w	r2, r2, #7
 8023f96:	431a      	orrs	r2, r3
 8023f98:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8023f9c:	ea4c 0c02 	orr.w	ip, ip, r2
 8023fa0:	f8a7 c000 	strh.w	ip, [r7]
 8023fa4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023fa6:	441c      	add	r4, r3
 8023fa8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023faa:	441e      	add	r6, r3
 8023fac:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023fae:	3b01      	subs	r3, #1
 8023fb0:	3702      	adds	r7, #2
 8023fb2:	9317      	str	r3, [sp, #92]	; 0x5c
 8023fb4:	e6c0      	b.n	8023d38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8023fb6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023fb8:	441c      	add	r4, r3
 8023fba:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023fbc:	441e      	add	r6, r3
 8023fbe:	9b07      	ldr	r3, [sp, #28]
 8023fc0:	3b01      	subs	r3, #1
 8023fc2:	9307      	str	r3, [sp, #28]
 8023fc4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023fc6:	3302      	adds	r3, #2
 8023fc8:	930a      	str	r3, [sp, #40]	; 0x28
 8023fca:	e695      	b.n	8023cf8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023fcc:	d024      	beq.n	8024018 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8023fce:	9b07      	ldr	r3, [sp, #28]
 8023fd0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8023fd2:	3b01      	subs	r3, #1
 8023fd4:	fb00 4003 	mla	r0, r0, r3, r4
 8023fd8:	1400      	asrs	r0, r0, #16
 8023fda:	f53f aeaa 	bmi.w	8023d32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023fde:	3901      	subs	r1, #1
 8023fe0:	4288      	cmp	r0, r1
 8023fe2:	f6bf aea6 	bge.w	8023d32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023fe6:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8023fe8:	fb01 6303 	mla	r3, r1, r3, r6
 8023fec:	141b      	asrs	r3, r3, #16
 8023fee:	f53f aea0 	bmi.w	8023d32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023ff2:	3a01      	subs	r2, #1
 8023ff4:	4293      	cmp	r3, r2
 8023ff6:	f6bf ae9c 	bge.w	8023d32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023ffa:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023ffe:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8024002:	f1bb 0f00 	cmp.w	fp, #0
 8024006:	f300 809a 	bgt.w	802413e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802400a:	9b07      	ldr	r3, [sp, #28]
 802400c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024010:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024012:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8024016:	930a      	str	r3, [sp, #40]	; 0x28
 8024018:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802401a:	2b00      	cmp	r3, #0
 802401c:	f340 81eb 	ble.w	80243f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024020:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024024:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024028:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802402c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802402e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024032:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024036:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802403a:	eef0 6a62 	vmov.f32	s13, s5
 802403e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024042:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024046:	ee77 2a62 	vsub.f32	s5, s14, s5
 802404a:	ee16 4a90 	vmov	r4, s13
 802404e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024052:	eef0 6a43 	vmov.f32	s13, s6
 8024056:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802405a:	ee12 2a90 	vmov	r2, s5
 802405e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024062:	fb92 f3f3 	sdiv	r3, r2, r3
 8024066:	ee13 2a10 	vmov	r2, s6
 802406a:	9327      	str	r3, [sp, #156]	; 0x9c
 802406c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802406e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024072:	9328      	str	r3, [sp, #160]	; 0xa0
 8024074:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024076:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8024078:	3b01      	subs	r3, #1
 802407a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802407e:	9316      	str	r3, [sp, #88]	; 0x58
 8024080:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024082:	bf08      	it	eq
 8024084:	4613      	moveq	r3, r2
 8024086:	ee16 6a90 	vmov	r6, s13
 802408a:	9307      	str	r3, [sp, #28]
 802408c:	eeb0 3a67 	vmov.f32	s6, s15
 8024090:	eef0 2a47 	vmov.f32	s5, s14
 8024094:	e622      	b.n	8023cdc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8024096:	2800      	cmp	r0, #0
 8024098:	f43f ae92 	beq.w	8023dc0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802409c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80240a0:	9308      	str	r3, [sp, #32]
 80240a2:	0e1b      	lsrs	r3, r3, #24
 80240a4:	9310      	str	r3, [sp, #64]	; 0x40
 80240a6:	e68b      	b.n	8023dc0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80240a8:	8839      	ldrh	r1, [r7, #0]
 80240aa:	4dd4      	ldr	r5, [pc, #848]	; (80243fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80240ac:	43db      	mvns	r3, r3
 80240ae:	ea4f 2e21 	mov.w	lr, r1, asr #8
 80240b2:	fa5f f883 	uxtb.w	r8, r3
 80240b6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80240ba:	fb0e fe08 	mul.w	lr, lr, r8
 80240be:	10c8      	asrs	r0, r1, #3
 80240c0:	00cb      	lsls	r3, r1, #3
 80240c2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80240c6:	f10e 0101 	add.w	r1, lr, #1
 80240ca:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 80240ce:	fb00 f008 	mul.w	r0, r0, r8
 80240d2:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80240d6:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 80240da:	f100 0e01 	add.w	lr, r0, #1
 80240de:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 80240e2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80240e6:	b2db      	uxtb	r3, r3
 80240e8:	b2c9      	uxtb	r1, r1
 80240ea:	00d2      	lsls	r2, r2, #3
 80240ec:	fb03 f308 	mul.w	r3, r3, r8
 80240f0:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 80240f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80240f8:	430a      	orrs	r2, r1
 80240fa:	1c59      	adds	r1, r3, #1
 80240fc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8024100:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8024104:	e748      	b.n	8023f98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8024106:	f112 0801 	adds.w	r8, r2, #1
 802410a:	f53f af4b 	bmi.w	8023fa4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802410e:	4543      	cmp	r3, r8
 8024110:	f6ff af48 	blt.w	8023fa4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024114:	f11c 0801 	adds.w	r8, ip, #1
 8024118:	f53f af44 	bmi.w	8023fa4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802411c:	45c6      	cmp	lr, r8
 802411e:	f6ff af41 	blt.w	8023fa4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024122:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8024126:	fa0f f28e 	sxth.w	r2, lr
 802412a:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802412e:	9200      	str	r2, [sp, #0]
 8024130:	b21b      	sxth	r3, r3
 8024132:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024134:	9819      	ldr	r0, [sp, #100]	; 0x64
 8024136:	4639      	mov	r1, r7
 8024138:	f7ff fc87 	bl	8023a4a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 802413c:	e732      	b.n	8023fa4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802413e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024140:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024142:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8024146:	1421      	asrs	r1, r4, #16
 8024148:	1433      	asrs	r3, r6, #16
 802414a:	fb07 1303 	mla	r3, r7, r3, r1
 802414e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8024150:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8024154:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8024158:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802415c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024160:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024164:	2a00      	cmp	r2, #0
 8024166:	f000 8107 	beq.w	8024378 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802416a:	684d      	ldr	r5, [r1, #4]
 802416c:	950d      	str	r5, [sp, #52]	; 0x34
 802416e:	0e2d      	lsrs	r5, r5, #24
 8024170:	9514      	str	r5, [sp, #80]	; 0x50
 8024172:	b178      	cbz	r0, 8024194 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8024174:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8024178:	3f01      	subs	r7, #1
 802417a:	00bf      	lsls	r7, r7, #2
 802417c:	3704      	adds	r7, #4
 802417e:	eb01 0e07 	add.w	lr, r1, r7
 8024182:	59c9      	ldr	r1, [r1, r7]
 8024184:	9109      	str	r1, [sp, #36]	; 0x24
 8024186:	0e09      	lsrs	r1, r1, #24
 8024188:	9111      	str	r1, [sp, #68]	; 0x44
 802418a:	f8de 1004 	ldr.w	r1, [lr, #4]
 802418e:	910e      	str	r1, [sp, #56]	; 0x38
 8024190:	0e09      	lsrs	r1, r1, #24
 8024192:	9115      	str	r1, [sp, #84]	; 0x54
 8024194:	b292      	uxth	r2, r2
 8024196:	b280      	uxth	r0, r0
 8024198:	fb02 f900 	mul.w	r9, r2, r0
 802419c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80241a0:	0112      	lsls	r2, r2, #4
 80241a2:	eba2 0e09 	sub.w	lr, r2, r9
 80241a6:	b280      	uxth	r0, r0
 80241a8:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80241ac:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80241ae:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80241b0:	fa1f fe8e 	uxth.w	lr, lr
 80241b4:	1a09      	subs	r1, r1, r0
 80241b6:	b289      	uxth	r1, r1
 80241b8:	fb0e f202 	mul.w	r2, lr, r2
 80241bc:	fb01 220c 	mla	r2, r1, ip, r2
 80241c0:	fb00 2205 	mla	r2, r0, r5, r2
 80241c4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80241c6:	fb09 2205 	mla	r2, r9, r5, r2
 80241ca:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80241ce:	2a00      	cmp	r2, #0
 80241d0:	f000 80c9 	beq.w	8024366 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80241d4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80241d8:	d019      	beq.n	802420e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 80241da:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80241de:	fb0c fa0a 	mul.w	sl, ip, sl
 80241e2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80241e6:	fb0c fc03 	mul.w	ip, ip, r3
 80241ea:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80241ee:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80241f2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80241f6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80241fa:	4453      	add	r3, sl
 80241fc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024200:	0a1b      	lsrs	r3, r3, #8
 8024202:	0a3f      	lsrs	r7, r7, #8
 8024204:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024208:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802420c:	433b      	orrs	r3, r7
 802420e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024210:	2dff      	cmp	r5, #255	; 0xff
 8024212:	d020      	beq.n	8024256 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8024214:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024216:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802421a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802421c:	436f      	muls	r7, r5
 802421e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024220:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024224:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024226:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802422a:	fb05 fa0a 	mul.w	sl, r5, sl
 802422e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024232:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024236:	44bc      	add	ip, r7
 8024238:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802423c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024240:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024244:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024248:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802424c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024250:	ea4c 050a 	orr.w	r5, ip, sl
 8024254:	950d      	str	r5, [sp, #52]	; 0x34
 8024256:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024258:	2dff      	cmp	r5, #255	; 0xff
 802425a:	d020      	beq.n	802429e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 802425c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802425e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024262:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024264:	436f      	muls	r7, r5
 8024266:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024268:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802426c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802426e:	fb05 fa0c 	mul.w	sl, r5, ip
 8024272:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024276:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802427a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802427e:	44bc      	add	ip, r7
 8024280:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024284:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024288:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802428c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024290:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024294:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024298:	ea4c 050a 	orr.w	r5, ip, sl
 802429c:	9509      	str	r5, [sp, #36]	; 0x24
 802429e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80242a0:	2dff      	cmp	r5, #255	; 0xff
 80242a2:	d020      	beq.n	80242e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 80242a4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80242a6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80242aa:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80242ac:	436f      	muls	r7, r5
 80242ae:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80242b0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80242b4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80242b6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80242ba:	fb05 fa0a 	mul.w	sl, r5, sl
 80242be:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80242c2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80242c6:	44bc      	add	ip, r7
 80242c8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80242cc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80242d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80242d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80242d8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80242dc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80242e0:	ea4c 050a 	orr.w	r5, ip, sl
 80242e4:	950e      	str	r5, [sp, #56]	; 0x38
 80242e6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80242e8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80242ec:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80242ee:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80242f2:	fb0e f707 	mul.w	r7, lr, r7
 80242f6:	fb01 770c 	mla	r7, r1, ip, r7
 80242fa:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80242fe:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024300:	fb00 770c 	mla	r7, r0, ip, r7
 8024304:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024308:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802430a:	fb09 770c 	mla	r7, r9, ip, r7
 802430e:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024312:	fb0e fe0c 	mul.w	lr, lr, ip
 8024316:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802431a:	fb01 e303 	mla	r3, r1, r3, lr
 802431e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8024320:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8024324:	990e      	ldr	r1, [sp, #56]	; 0x38
 8024326:	fb00 330a 	mla	r3, r0, sl, r3
 802432a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802432e:	fb09 3c0c 	mla	ip, r9, ip, r3
 8024332:	0a3f      	lsrs	r7, r7, #8
 8024334:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024338:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802433c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024340:	ea47 070c 	orr.w	r7, r7, ip
 8024344:	2aff      	cmp	r2, #255	; 0xff
 8024346:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802434a:	d11e      	bne.n	802438a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 802434c:	097a      	lsrs	r2, r7, #5
 802434e:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8024352:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024356:	f023 0307 	bic.w	r3, r3, #7
 802435a:	4313      	orrs	r3, r2
 802435c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024360:	431f      	orrs	r7, r3
 8024362:	f8a8 7000 	strh.w	r7, [r8]
 8024366:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024368:	441c      	add	r4, r3
 802436a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802436c:	f108 0802 	add.w	r8, r8, #2
 8024370:	441e      	add	r6, r3
 8024372:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024376:	e644      	b.n	8024002 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8024378:	2800      	cmp	r0, #0
 802437a:	f43f af0b 	beq.w	8024194 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802437e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8024382:	9109      	str	r1, [sp, #36]	; 0x24
 8024384:	0e09      	lsrs	r1, r1, #24
 8024386:	9111      	str	r1, [sp, #68]	; 0x44
 8024388:	e704      	b.n	8024194 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802438a:	f8b8 1000 	ldrh.w	r1, [r8]
 802438e:	43d2      	mvns	r2, r2
 8024390:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8024394:	fa5f fe82 	uxtb.w	lr, r2
 8024398:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802439c:	fb0c fc0e 	mul.w	ip, ip, lr
 80243a0:	10c8      	asrs	r0, r1, #3
 80243a2:	00ca      	lsls	r2, r1, #3
 80243a4:	f10c 0101 	add.w	r1, ip, #1
 80243a8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80243ac:	0c39      	lsrs	r1, r7, #16
 80243ae:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80243b2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80243b6:	4911      	ldr	r1, [pc, #68]	; (80243fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80243b8:	fb00 f00e 	mul.w	r0, r0, lr
 80243bc:	fa5f fc8c 	uxtb.w	ip, ip
 80243c0:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80243c4:	b2d2      	uxtb	r2, r2
 80243c6:	1c41      	adds	r1, r0, #1
 80243c8:	fb02 f20e 	mul.w	r2, r2, lr
 80243cc:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80243d0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80243d4:	1c51      	adds	r1, r2, #1
 80243d6:	00c0      	lsls	r0, r0, #3
 80243d8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80243dc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80243e0:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80243e4:	ea4c 0c00 	orr.w	ip, ip, r0
 80243e8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80243ec:	ea47 0c0c 	orr.w	ip, r7, ip
 80243f0:	f8a8 c000 	strh.w	ip, [r8]
 80243f4:	e7b7      	b.n	8024366 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80243f6:	b01b      	add	sp, #108	; 0x6c
 80243f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80243fc:	fffff800 	.word	0xfffff800

08024400 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8024400:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024404:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8024408:	2d00      	cmp	r5, #0
 802440a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802440e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8024412:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024416:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802441a:	fb05 0e03 	mla	lr, r5, r3, r0
 802441e:	f2c0 808c 	blt.w	802453a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024422:	45a9      	cmp	r9, r5
 8024424:	f340 8089 	ble.w	802453a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024428:	2800      	cmp	r0, #0
 802442a:	f2c0 8084 	blt.w	8024536 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802442e:	4580      	cmp	r8, r0
 8024430:	f340 8081 	ble.w	8024536 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024434:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024438:	f01e 0f01 	tst.w	lr, #1
 802443c:	5d16      	ldrb	r6, [r2, r4]
 802443e:	bf0c      	ite	eq
 8024440:	f006 060f 	andeq.w	r6, r6, #15
 8024444:	1136      	asrne	r6, r6, #4
 8024446:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802444a:	b2f6      	uxtb	r6, r6
 802444c:	1c44      	adds	r4, r0, #1
 802444e:	d477      	bmi.n	8024540 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024450:	45a0      	cmp	r8, r4
 8024452:	dd75      	ble.n	8024540 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024454:	2f00      	cmp	r7, #0
 8024456:	d075      	beq.n	8024544 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8024458:	f10e 0a01 	add.w	sl, lr, #1
 802445c:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024460:	f01a 0f01 	tst.w	sl, #1
 8024464:	5d14      	ldrb	r4, [r2, r4]
 8024466:	bf0c      	ite	eq
 8024468:	f004 040f 	andeq.w	r4, r4, #15
 802446c:	1124      	asrne	r4, r4, #4
 802446e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024472:	b2e4      	uxtb	r4, r4
 8024474:	3501      	adds	r5, #1
 8024476:	d469      	bmi.n	802454c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8024478:	45a9      	cmp	r9, r5
 802447a:	dd67      	ble.n	802454c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802447c:	f1bc 0f00 	cmp.w	ip, #0
 8024480:	d067      	beq.n	8024552 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8024482:	2800      	cmp	r0, #0
 8024484:	db60      	blt.n	8024548 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8024486:	4580      	cmp	r8, r0
 8024488:	dd5e      	ble.n	8024548 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802448a:	eb03 090e 	add.w	r9, r3, lr
 802448e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024492:	f019 0f01 	tst.w	r9, #1
 8024496:	5d55      	ldrb	r5, [r2, r5]
 8024498:	bf0c      	ite	eq
 802449a:	f005 050f 	andeq.w	r5, r5, #15
 802449e:	112d      	asrne	r5, r5, #4
 80244a0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80244a4:	b2ed      	uxtb	r5, r5
 80244a6:	3001      	adds	r0, #1
 80244a8:	d456      	bmi.n	8024558 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80244aa:	4580      	cmp	r8, r0
 80244ac:	dd54      	ble.n	8024558 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80244ae:	2f00      	cmp	r7, #0
 80244b0:	d054      	beq.n	802455c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 80244b2:	3301      	adds	r3, #1
 80244b4:	449e      	add	lr, r3
 80244b6:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80244ba:	f01e 0f01 	tst.w	lr, #1
 80244be:	5cd0      	ldrb	r0, [r2, r3]
 80244c0:	bf0c      	ite	eq
 80244c2:	f000 000f 	andeq.w	r0, r0, #15
 80244c6:	1100      	asrne	r0, r0, #4
 80244c8:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80244cc:	b2c3      	uxtb	r3, r0
 80244ce:	b2ba      	uxth	r2, r7
 80244d0:	fa1f fc8c 	uxth.w	ip, ip
 80244d4:	fb02 f00c 	mul.w	r0, r2, ip
 80244d8:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80244dc:	0112      	lsls	r2, r2, #4
 80244de:	fa1f fc8c 	uxth.w	ip, ip
 80244e2:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80244e6:	1a12      	subs	r2, r2, r0
 80244e8:	eba7 070c 	sub.w	r7, r7, ip
 80244ec:	b292      	uxth	r2, r2
 80244ee:	b2bf      	uxth	r7, r7
 80244f0:	4362      	muls	r2, r4
 80244f2:	fb06 2207 	mla	r2, r6, r7, r2
 80244f6:	fb0c 2505 	mla	r5, ip, r5, r2
 80244fa:	fb00 5303 	mla	r3, r0, r3, r5
 80244fe:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024502:	b1b3      	cbz	r3, 8024532 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024504:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8024508:	435a      	muls	r2, r3
 802450a:	1c53      	adds	r3, r2, #1
 802450c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024510:	4a2d      	ldr	r2, [pc, #180]	; (80245c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8024512:	121b      	asrs	r3, r3, #8
 8024514:	6812      	ldr	r2, [r2, #0]
 8024516:	2bff      	cmp	r3, #255	; 0xff
 8024518:	ea4f 2612 	mov.w	r6, r2, lsr #8
 802451c:	d120      	bne.n	8024560 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 802451e:	4b2b      	ldr	r3, [pc, #172]	; (80245cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8024520:	0950      	lsrs	r0, r2, #5
 8024522:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024526:	4033      	ands	r3, r6
 8024528:	4318      	orrs	r0, r3
 802452a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802452e:	4302      	orrs	r2, r0
 8024530:	800a      	strh	r2, [r1, #0]
 8024532:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024536:	2600      	movs	r6, #0
 8024538:	e788      	b.n	802444c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802453a:	2400      	movs	r4, #0
 802453c:	4626      	mov	r6, r4
 802453e:	e799      	b.n	8024474 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024540:	2400      	movs	r4, #0
 8024542:	e797      	b.n	8024474 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024544:	463c      	mov	r4, r7
 8024546:	e795      	b.n	8024474 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024548:	2500      	movs	r5, #0
 802454a:	e7ac      	b.n	80244a6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 802454c:	2300      	movs	r3, #0
 802454e:	461d      	mov	r5, r3
 8024550:	e7bd      	b.n	80244ce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024552:	4663      	mov	r3, ip
 8024554:	4665      	mov	r5, ip
 8024556:	e7ba      	b.n	80244ce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024558:	2300      	movs	r3, #0
 802455a:	e7b8      	b.n	80244ce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802455c:	463b      	mov	r3, r7
 802455e:	e7b6      	b.n	80244ce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024560:	880d      	ldrh	r5, [r1, #0]
 8024562:	b29f      	uxth	r7, r3
 8024564:	122c      	asrs	r4, r5, #8
 8024566:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802456a:	43db      	mvns	r3, r3
 802456c:	b2db      	uxtb	r3, r3
 802456e:	fb10 f007 	smulbb	r0, r0, r7
 8024572:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024576:	fb04 0403 	mla	r4, r4, r3, r0
 802457a:	b2f6      	uxtb	r6, r6
 802457c:	10e8      	asrs	r0, r5, #3
 802457e:	b2d2      	uxtb	r2, r2
 8024580:	00ed      	lsls	r5, r5, #3
 8024582:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024586:	fb12 f207 	smulbb	r2, r2, r7
 802458a:	fb16 f607 	smulbb	r6, r6, r7
 802458e:	b2ed      	uxtb	r5, r5
 8024590:	b2a4      	uxth	r4, r4
 8024592:	fb00 6603 	mla	r6, r0, r3, r6
 8024596:	fb05 2303 	mla	r3, r5, r3, r2
 802459a:	b29a      	uxth	r2, r3
 802459c:	1c63      	adds	r3, r4, #1
 802459e:	b2b0      	uxth	r0, r6
 80245a0:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80245a4:	1c53      	adds	r3, r2, #1
 80245a6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80245aa:	1c42      	adds	r2, r0, #1
 80245ac:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80245b0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80245b4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80245b8:	0940      	lsrs	r0, r0, #5
 80245ba:	4323      	orrs	r3, r4
 80245bc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80245c0:	4303      	orrs	r3, r0
 80245c2:	800b      	strh	r3, [r1, #0]
 80245c4:	e7b5      	b.n	8024532 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80245c6:	bf00      	nop
 80245c8:	200137e4 	.word	0x200137e4
 80245cc:	00fff800 	.word	0x00fff800

080245d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80245d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80245d4:	b097      	sub	sp, #92	; 0x5c
 80245d6:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80245da:	9214      	str	r2, [sp, #80]	; 0x50
 80245dc:	9309      	str	r3, [sp, #36]	; 0x24
 80245de:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80245e0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80245e4:	910d      	str	r1, [sp, #52]	; 0x34
 80245e6:	930f      	str	r3, [sp, #60]	; 0x3c
 80245e8:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80245ec:	9015      	str	r0, [sp, #84]	; 0x54
 80245ee:	6850      	ldr	r0, [r2, #4]
 80245f0:	6812      	ldr	r2, [r2, #0]
 80245f2:	fb00 1303 	mla	r3, r0, r3, r1
 80245f6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80245fa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80245fc:	689b      	ldr	r3, [r3, #8]
 80245fe:	3301      	adds	r3, #1
 8024600:	f023 0301 	bic.w	r3, r3, #1
 8024604:	930a      	str	r3, [sp, #40]	; 0x28
 8024606:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024608:	681f      	ldr	r7, [r3, #0]
 802460a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802460c:	2b00      	cmp	r3, #0
 802460e:	dc03      	bgt.n	8024618 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024610:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8024612:	2b00      	cmp	r3, #0
 8024614:	f340 8287 	ble.w	8024b26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8024618:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802461a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802461e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024622:	1e48      	subs	r0, r1, #1
 8024624:	f102 3cff 	add.w	ip, r2, #4294967295
 8024628:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802462a:	2b00      	cmp	r3, #0
 802462c:	f340 80c4 	ble.w	80247b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8024630:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024634:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024638:	d406      	bmi.n	8024648 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802463a:	4586      	cmp	lr, r0
 802463c:	da04      	bge.n	8024648 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802463e:	2b00      	cmp	r3, #0
 8024640:	db02      	blt.n	8024648 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024642:	4563      	cmp	r3, ip
 8024644:	f2c0 80b9 	blt.w	80247ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8024648:	f11e 0e01 	adds.w	lr, lr, #1
 802464c:	f100 80aa 	bmi.w	80247a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024650:	4571      	cmp	r1, lr
 8024652:	f2c0 80a7 	blt.w	80247a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024656:	3301      	adds	r3, #1
 8024658:	f100 80a4 	bmi.w	80247a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802465c:	429a      	cmp	r2, r3
 802465e:	f2c0 80a1 	blt.w	80247a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024662:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024664:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8024668:	930e      	str	r3, [sp, #56]	; 0x38
 802466a:	46c8      	mov	r8, r9
 802466c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802466e:	2b00      	cmp	r3, #0
 8024670:	f340 80c3 	ble.w	80247fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8024674:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024676:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802467a:	1423      	asrs	r3, r4, #16
 802467c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024680:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024684:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024688:	f100 814d 	bmi.w	8024926 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802468c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024690:	455b      	cmp	r3, fp
 8024692:	f280 8148 	bge.w	8024926 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024696:	2800      	cmp	r0, #0
 8024698:	f2c0 8145 	blt.w	8024926 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802469c:	f10e 3bff 	add.w	fp, lr, #4294967295
 80246a0:	4558      	cmp	r0, fp
 80246a2:	f280 8140 	bge.w	8024926 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80246a6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80246a8:	fb00 3305 	mla	r3, r0, r5, r3
 80246ac:	0858      	lsrs	r0, r3, #1
 80246ae:	07dd      	lsls	r5, r3, #31
 80246b0:	f817 c000 	ldrb.w	ip, [r7, r0]
 80246b4:	bf54      	ite	pl
 80246b6:	f00c 0c0f 	andpl.w	ip, ip, #15
 80246ba:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80246be:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80246c2:	fa5f fc8c 	uxtb.w	ip, ip
 80246c6:	2a00      	cmp	r2, #0
 80246c8:	f000 80db 	beq.w	8024882 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80246cc:	1c58      	adds	r0, r3, #1
 80246ce:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80246d2:	07c0      	lsls	r0, r0, #31
 80246d4:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80246d8:	bf54      	ite	pl
 80246da:	f00e 0e0f 	andpl.w	lr, lr, #15
 80246de:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80246e2:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80246e6:	fa5f f08e 	uxtb.w	r0, lr
 80246ea:	9010      	str	r0, [sp, #64]	; 0x40
 80246ec:	b1c9      	cbz	r1, 8024722 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80246ee:	4453      	add	r3, sl
 80246f0:	0858      	lsrs	r0, r3, #1
 80246f2:	07dd      	lsls	r5, r3, #31
 80246f4:	5c38      	ldrb	r0, [r7, r0]
 80246f6:	bf54      	ite	pl
 80246f8:	f000 000f 	andpl.w	r0, r0, #15
 80246fc:	1100      	asrmi	r0, r0, #4
 80246fe:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024702:	3301      	adds	r3, #1
 8024704:	b2c0      	uxtb	r0, r0
 8024706:	900b      	str	r0, [sp, #44]	; 0x2c
 8024708:	0858      	lsrs	r0, r3, #1
 802470a:	07dd      	lsls	r5, r3, #31
 802470c:	f817 e000 	ldrb.w	lr, [r7, r0]
 8024710:	bf54      	ite	pl
 8024712:	f00e 030f 	andpl.w	r3, lr, #15
 8024716:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802471a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802471e:	b2db      	uxtb	r3, r3
 8024720:	9311      	str	r3, [sp, #68]	; 0x44
 8024722:	b292      	uxth	r2, r2
 8024724:	b289      	uxth	r1, r1
 8024726:	fb02 f301 	mul.w	r3, r2, r1
 802472a:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 802472e:	0112      	lsls	r2, r2, #4
 8024730:	b289      	uxth	r1, r1
 8024732:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8024736:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024738:	1ad2      	subs	r2, r2, r3
 802473a:	1a40      	subs	r0, r0, r1
 802473c:	b292      	uxth	r2, r2
 802473e:	436a      	muls	r2, r5
 8024740:	b280      	uxth	r0, r0
 8024742:	fb0c 2c00 	mla	ip, ip, r0, r2
 8024746:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024748:	fb01 c102 	mla	r1, r1, r2, ip
 802474c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802474e:	fb03 1302 	mla	r3, r3, r2, r1
 8024752:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024756:	b1db      	cbz	r3, 8024790 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024758:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802475a:	4353      	muls	r3, r2
 802475c:	1c5a      	adds	r2, r3, #1
 802475e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024762:	4ac6      	ldr	r2, [pc, #792]	; (8024a7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024764:	121b      	asrs	r3, r3, #8
 8024766:	6812      	ldr	r2, [r2, #0]
 8024768:	2bff      	cmp	r3, #255	; 0xff
 802476a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802476e:	f040 8099 	bne.w	80248a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8024772:	0953      	lsrs	r3, r2, #5
 8024774:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8024778:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802477c:	f02c 0c07 	bic.w	ip, ip, #7
 8024780:	ea43 0c0c 	orr.w	ip, r3, ip
 8024784:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024788:	ea4c 0202 	orr.w	r2, ip, r2
 802478c:	f8a8 2000 	strh.w	r2, [r8]
 8024790:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024792:	441c      	add	r4, r3
 8024794:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024796:	441e      	add	r6, r3
 8024798:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802479a:	3b01      	subs	r3, #1
 802479c:	f108 0802 	add.w	r8, r8, #2
 80247a0:	930e      	str	r3, [sp, #56]	; 0x38
 80247a2:	e763      	b.n	802466c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80247a4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80247a6:	441c      	add	r4, r3
 80247a8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80247aa:	441e      	add	r6, r3
 80247ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80247ae:	3b01      	subs	r3, #1
 80247b0:	9309      	str	r3, [sp, #36]	; 0x24
 80247b2:	f109 0902 	add.w	r9, r9, #2
 80247b6:	e737      	b.n	8024628 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80247b8:	d024      	beq.n	8024804 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80247ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80247bc:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80247be:	3b01      	subs	r3, #1
 80247c0:	fb00 4003 	mla	r0, r0, r3, r4
 80247c4:	1400      	asrs	r0, r0, #16
 80247c6:	f53f af4c 	bmi.w	8024662 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80247ca:	3901      	subs	r1, #1
 80247cc:	4288      	cmp	r0, r1
 80247ce:	f6bf af48 	bge.w	8024662 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80247d2:	9924      	ldr	r1, [sp, #144]	; 0x90
 80247d4:	fb01 6303 	mla	r3, r1, r3, r6
 80247d8:	141b      	asrs	r3, r3, #16
 80247da:	f53f af42 	bmi.w	8024662 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80247de:	3a01      	subs	r2, #1
 80247e0:	4293      	cmp	r3, r2
 80247e2:	f6bf af3e 	bge.w	8024662 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80247e6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80247ea:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80247ee:	930e      	str	r3, [sp, #56]	; 0x38
 80247f0:	46c8      	mov	r8, r9
 80247f2:	f1bb 0f00 	cmp.w	fp, #0
 80247f6:	f300 80b7 	bgt.w	8024968 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80247fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80247fc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024800:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024804:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024806:	2b00      	cmp	r3, #0
 8024808:	f340 818d 	ble.w	8024b26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802480c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024810:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024814:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024818:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802481a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802481e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024822:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024826:	eef0 6a62 	vmov.f32	s13, s5
 802482a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802482e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024832:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024836:	ee16 4a90 	vmov	r4, s13
 802483a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802483e:	eef0 6a43 	vmov.f32	s13, s6
 8024842:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024846:	ee12 2a90 	vmov	r2, s5
 802484a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802484e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024852:	ee13 2a10 	vmov	r2, s6
 8024856:	9323      	str	r3, [sp, #140]	; 0x8c
 8024858:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802485a:	fb92 f3f3 	sdiv	r3, r2, r3
 802485e:	9324      	str	r3, [sp, #144]	; 0x90
 8024860:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024862:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024864:	3b01      	subs	r3, #1
 8024866:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802486a:	930d      	str	r3, [sp, #52]	; 0x34
 802486c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802486e:	bf08      	it	eq
 8024870:	4613      	moveq	r3, r2
 8024872:	ee16 6a90 	vmov	r6, s13
 8024876:	9309      	str	r3, [sp, #36]	; 0x24
 8024878:	eeb0 3a67 	vmov.f32	s6, s15
 802487c:	eef0 2a47 	vmov.f32	s5, s14
 8024880:	e6c3      	b.n	802460a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024882:	2900      	cmp	r1, #0
 8024884:	f43f af4d 	beq.w	8024722 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024888:	eb0a 0003 	add.w	r0, sl, r3
 802488c:	0843      	lsrs	r3, r0, #1
 802488e:	07c0      	lsls	r0, r0, #31
 8024890:	5cfb      	ldrb	r3, [r7, r3]
 8024892:	bf54      	ite	pl
 8024894:	f003 030f 	andpl.w	r3, r3, #15
 8024898:	111b      	asrmi	r3, r3, #4
 802489a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802489e:	b2db      	uxtb	r3, r3
 80248a0:	930b      	str	r3, [sp, #44]	; 0x2c
 80248a2:	e73e      	b.n	8024722 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80248a4:	f8b8 e000 	ldrh.w	lr, [r8]
 80248a8:	fa1f fb83 	uxth.w	fp, r3
 80248ac:	ea4f 202e 	mov.w	r0, lr, asr #8
 80248b0:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80248b4:	43db      	mvns	r3, r3
 80248b6:	b2db      	uxtb	r3, r3
 80248b8:	fb11 f10b 	smulbb	r1, r1, fp
 80248bc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80248c0:	fb00 1003 	mla	r0, r0, r3, r1
 80248c4:	fa5f fc8c 	uxtb.w	ip, ip
 80248c8:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80248cc:	b2d2      	uxtb	r2, r2
 80248ce:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80248d2:	b280      	uxth	r0, r0
 80248d4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80248d8:	fb1c fc0b 	smulbb	ip, ip, fp
 80248dc:	fa5f fe8e 	uxtb.w	lr, lr
 80248e0:	fb12 fb0b 	smulbb	fp, r2, fp
 80248e4:	fb01 cc03 	mla	ip, r1, r3, ip
 80248e8:	fb0e bb03 	mla	fp, lr, r3, fp
 80248ec:	1c43      	adds	r3, r0, #1
 80248ee:	fa1f fc8c 	uxth.w	ip, ip
 80248f2:	fa1f fb8b 	uxth.w	fp, fp
 80248f6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80248fa:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 80248fe:	f10c 0101 	add.w	r1, ip, #1
 8024902:	f10b 0001 	add.w	r0, fp, #1
 8024906:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802490a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802490e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8024912:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024916:	4318      	orrs	r0, r3
 8024918:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802491c:	ea40 000c 	orr.w	r0, r0, ip
 8024920:	f8a8 0000 	strh.w	r0, [r8]
 8024924:	e734      	b.n	8024790 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024926:	f113 0b01 	adds.w	fp, r3, #1
 802492a:	f53f af31 	bmi.w	8024790 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802492e:	45dc      	cmp	ip, fp
 8024930:	f6ff af2e 	blt.w	8024790 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024934:	f110 0b01 	adds.w	fp, r0, #1
 8024938:	f53f af2a 	bmi.w	8024790 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802493c:	45de      	cmp	lr, fp
 802493e:	f6ff af27 	blt.w	8024790 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024942:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024944:	9302      	str	r3, [sp, #8]
 8024946:	fa0f f38e 	sxth.w	r3, lr
 802494a:	9301      	str	r3, [sp, #4]
 802494c:	fa0f f38c 	sxth.w	r3, ip
 8024950:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8024954:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8024958:	9300      	str	r3, [sp, #0]
 802495a:	463a      	mov	r2, r7
 802495c:	4653      	mov	r3, sl
 802495e:	4641      	mov	r1, r8
 8024960:	9815      	ldr	r0, [sp, #84]	; 0x54
 8024962:	f7ff fd4d 	bl	8024400 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8024966:	e713      	b.n	8024790 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024968:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802496a:	1422      	asrs	r2, r4, #16
 802496c:	1433      	asrs	r3, r6, #16
 802496e:	fb05 2303 	mla	r3, r5, r3, r2
 8024972:	085a      	lsrs	r2, r3, #1
 8024974:	07dd      	lsls	r5, r3, #31
 8024976:	5cba      	ldrb	r2, [r7, r2]
 8024978:	bf54      	ite	pl
 802497a:	f002 020f 	andpl.w	r2, r2, #15
 802497e:	1112      	asrmi	r2, r2, #4
 8024980:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024984:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8024988:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802498c:	b2d2      	uxtb	r2, r2
 802498e:	2900      	cmp	r1, #0
 8024990:	d076      	beq.n	8024a80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8024992:	f103 0e01 	add.w	lr, r3, #1
 8024996:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802499a:	f01e 0f01 	tst.w	lr, #1
 802499e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80249a2:	bf0c      	ite	eq
 80249a4:	f00c 0c0f 	andeq.w	ip, ip, #15
 80249a8:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80249ac:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80249b0:	fa5f f58c 	uxtb.w	r5, ip
 80249b4:	9512      	str	r5, [sp, #72]	; 0x48
 80249b6:	b300      	cbz	r0, 80249fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80249b8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80249ba:	442b      	add	r3, r5
 80249bc:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80249c0:	07dd      	lsls	r5, r3, #31
 80249c2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80249c6:	bf54      	ite	pl
 80249c8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80249cc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80249d0:	3301      	adds	r3, #1
 80249d2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80249d6:	fa5f f58c 	uxtb.w	r5, ip
 80249da:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80249de:	950c      	str	r5, [sp, #48]	; 0x30
 80249e0:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80249e4:	07dd      	lsls	r5, r3, #31
 80249e6:	bf54      	ite	pl
 80249e8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80249ec:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80249f0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80249f4:	fa5f f38c 	uxtb.w	r3, ip
 80249f8:	9313      	str	r3, [sp, #76]	; 0x4c
 80249fa:	b289      	uxth	r1, r1
 80249fc:	b280      	uxth	r0, r0
 80249fe:	fb01 f300 	mul.w	r3, r1, r0
 8024a02:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8024a06:	0109      	lsls	r1, r1, #4
 8024a08:	b280      	uxth	r0, r0
 8024a0a:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8024a0e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024a10:	1ac9      	subs	r1, r1, r3
 8024a12:	ebac 0c00 	sub.w	ip, ip, r0
 8024a16:	b289      	uxth	r1, r1
 8024a18:	4369      	muls	r1, r5
 8024a1a:	fa1f fc8c 	uxth.w	ip, ip
 8024a1e:	fb02 120c 	mla	r2, r2, ip, r1
 8024a22:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024a24:	fb00 2001 	mla	r0, r0, r1, r2
 8024a28:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8024a2a:	fb03 0302 	mla	r3, r3, r2, r0
 8024a2e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024a32:	b1d3      	cbz	r3, 8024a6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8024a34:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024a36:	4353      	muls	r3, r2
 8024a38:	1c5a      	adds	r2, r3, #1
 8024a3a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024a3e:	4a0f      	ldr	r2, [pc, #60]	; (8024a7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024a40:	121b      	asrs	r3, r3, #8
 8024a42:	6812      	ldr	r2, [r2, #0]
 8024a44:	2bff      	cmp	r3, #255	; 0xff
 8024a46:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024a4a:	d12d      	bne.n	8024aa8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8024a4c:	0953      	lsrs	r3, r2, #5
 8024a4e:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8024a52:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024a56:	f02c 0c07 	bic.w	ip, ip, #7
 8024a5a:	ea43 0c0c 	orr.w	ip, r3, ip
 8024a5e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024a62:	ea4c 0202 	orr.w	r2, ip, r2
 8024a66:	f8a8 2000 	strh.w	r2, [r8]
 8024a6a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024a6c:	441c      	add	r4, r3
 8024a6e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024a70:	f108 0802 	add.w	r8, r8, #2
 8024a74:	441e      	add	r6, r3
 8024a76:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024a7a:	e6ba      	b.n	80247f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8024a7c:	200137e4 	.word	0x200137e4
 8024a80:	2800      	cmp	r0, #0
 8024a82:	d0ba      	beq.n	80249fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024a84:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024a86:	442b      	add	r3, r5
 8024a88:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024a8c:	07db      	lsls	r3, r3, #31
 8024a8e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024a92:	bf54      	ite	pl
 8024a94:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024a98:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024a9c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024aa0:	fa5f f38c 	uxtb.w	r3, ip
 8024aa4:	930c      	str	r3, [sp, #48]	; 0x30
 8024aa6:	e7a8      	b.n	80249fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024aa8:	f8b8 e000 	ldrh.w	lr, [r8]
 8024aac:	fa1f fa83 	uxth.w	sl, r3
 8024ab0:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024ab4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024ab8:	43db      	mvns	r3, r3
 8024aba:	b2db      	uxtb	r3, r3
 8024abc:	fb11 f10a 	smulbb	r1, r1, sl
 8024ac0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024ac4:	fb00 1003 	mla	r0, r0, r3, r1
 8024ac8:	b2d2      	uxtb	r2, r2
 8024aca:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8024ace:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024ad2:	fa5f fe8e 	uxtb.w	lr, lr
 8024ad6:	fb12 f20a 	smulbb	r2, r2, sl
 8024ada:	fb0e 2203 	mla	r2, lr, r3, r2
 8024ade:	fa5f fc8c 	uxtb.w	ip, ip
 8024ae2:	b280      	uxth	r0, r0
 8024ae4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024ae8:	b292      	uxth	r2, r2
 8024aea:	fb1c fc0a 	smulbb	ip, ip, sl
 8024aee:	fb01 cc03 	mla	ip, r1, r3, ip
 8024af2:	1c43      	adds	r3, r0, #1
 8024af4:	1c51      	adds	r1, r2, #1
 8024af6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024afa:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8024afe:	fa1f fc8c 	uxth.w	ip, ip
 8024b02:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8024b06:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8024b0a:	4308      	orrs	r0, r1
 8024b0c:	f10c 0101 	add.w	r1, ip, #1
 8024b10:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024b14:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024b18:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024b1c:	ea40 000c 	orr.w	r0, r0, ip
 8024b20:	f8a8 0000 	strh.w	r0, [r8]
 8024b24:	e7a1      	b.n	8024a6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8024b26:	b017      	add	sp, #92	; 0x5c
 8024b28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024b2c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8024b2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024b30:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8024b34:	2d00      	cmp	r5, #0
 8024b36:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024b3a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8024b3e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024b42:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8024b46:	fb05 0e03 	mla	lr, r5, r3, r0
 8024b4a:	f2c0 80b0 	blt.w	8024cae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024b4e:	45a9      	cmp	r9, r5
 8024b50:	f340 80ad 	ble.w	8024cae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024b54:	2800      	cmp	r0, #0
 8024b56:	f2c0 80a8 	blt.w	8024caa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024b5a:	4580      	cmp	r8, r0
 8024b5c:	f340 80a5 	ble.w	8024caa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024b60:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024b64:	f01e 0f01 	tst.w	lr, #1
 8024b68:	5d16      	ldrb	r6, [r2, r4]
 8024b6a:	bf0c      	ite	eq
 8024b6c:	f006 060f 	andeq.w	r6, r6, #15
 8024b70:	1136      	asrne	r6, r6, #4
 8024b72:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8024b76:	b2f6      	uxtb	r6, r6
 8024b78:	1c44      	adds	r4, r0, #1
 8024b7a:	f100 809b 	bmi.w	8024cb4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024b7e:	45a0      	cmp	r8, r4
 8024b80:	f340 8098 	ble.w	8024cb4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024b84:	2f00      	cmp	r7, #0
 8024b86:	f000 8097 	beq.w	8024cb8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8024b8a:	f10e 0a01 	add.w	sl, lr, #1
 8024b8e:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024b92:	f01a 0f01 	tst.w	sl, #1
 8024b96:	5d14      	ldrb	r4, [r2, r4]
 8024b98:	bf0c      	ite	eq
 8024b9a:	f004 040f 	andeq.w	r4, r4, #15
 8024b9e:	1124      	asrne	r4, r4, #4
 8024ba0:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024ba4:	b2e4      	uxtb	r4, r4
 8024ba6:	3501      	adds	r5, #1
 8024ba8:	f100 808a 	bmi.w	8024cc0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024bac:	45a9      	cmp	r9, r5
 8024bae:	f340 8087 	ble.w	8024cc0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024bb2:	f1bc 0f00 	cmp.w	ip, #0
 8024bb6:	f000 8086 	beq.w	8024cc6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8024bba:	2800      	cmp	r0, #0
 8024bbc:	db7e      	blt.n	8024cbc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024bbe:	4580      	cmp	r8, r0
 8024bc0:	dd7c      	ble.n	8024cbc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024bc2:	eb03 090e 	add.w	r9, r3, lr
 8024bc6:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024bca:	f019 0f01 	tst.w	r9, #1
 8024bce:	5d55      	ldrb	r5, [r2, r5]
 8024bd0:	bf0c      	ite	eq
 8024bd2:	f005 050f 	andeq.w	r5, r5, #15
 8024bd6:	112d      	asrne	r5, r5, #4
 8024bd8:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024bdc:	b2ed      	uxtb	r5, r5
 8024bde:	3001      	adds	r0, #1
 8024be0:	d474      	bmi.n	8024ccc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024be2:	4580      	cmp	r8, r0
 8024be4:	dd72      	ble.n	8024ccc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024be6:	2f00      	cmp	r7, #0
 8024be8:	d072      	beq.n	8024cd0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8024bea:	3301      	adds	r3, #1
 8024bec:	449e      	add	lr, r3
 8024bee:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024bf2:	f01e 0f01 	tst.w	lr, #1
 8024bf6:	5cd0      	ldrb	r0, [r2, r3]
 8024bf8:	bf0c      	ite	eq
 8024bfa:	f000 000f 	andeq.w	r0, r0, #15
 8024bfe:	1100      	asrne	r0, r0, #4
 8024c00:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024c04:	b2c3      	uxtb	r3, r0
 8024c06:	b2ba      	uxth	r2, r7
 8024c08:	fa1f fc8c 	uxth.w	ip, ip
 8024c0c:	fb02 f00c 	mul.w	r0, r2, ip
 8024c10:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8024c14:	0112      	lsls	r2, r2, #4
 8024c16:	fa1f fc8c 	uxth.w	ip, ip
 8024c1a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8024c1e:	1a12      	subs	r2, r2, r0
 8024c20:	eba7 070c 	sub.w	r7, r7, ip
 8024c24:	b292      	uxth	r2, r2
 8024c26:	b2bf      	uxth	r7, r7
 8024c28:	4362      	muls	r2, r4
 8024c2a:	fb06 2207 	mla	r2, r6, r7, r2
 8024c2e:	fb0c 2505 	mla	r5, ip, r5, r2
 8024c32:	fb00 5303 	mla	r3, r0, r3, r5
 8024c36:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024c3a:	b3a3      	cbz	r3, 8024ca6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8024c3c:	4a25      	ldr	r2, [pc, #148]	; (8024cd4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8024c3e:	880e      	ldrh	r6, [r1, #0]
 8024c40:	6815      	ldr	r5, [r2, #0]
 8024c42:	1234      	asrs	r4, r6, #8
 8024c44:	b29a      	uxth	r2, r3
 8024c46:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8024c4a:	43db      	mvns	r3, r3
 8024c4c:	b2db      	uxtb	r3, r3
 8024c4e:	fb10 f002 	smulbb	r0, r0, r2
 8024c52:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024c56:	fb04 0403 	mla	r4, r4, r3, r0
 8024c5a:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8024c5e:	10f0      	asrs	r0, r6, #3
 8024c60:	b2ed      	uxtb	r5, r5
 8024c62:	00f6      	lsls	r6, r6, #3
 8024c64:	fb17 f702 	smulbb	r7, r7, r2
 8024c68:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024c6c:	fb15 f202 	smulbb	r2, r5, r2
 8024c70:	b2f6      	uxtb	r6, r6
 8024c72:	b2a4      	uxth	r4, r4
 8024c74:	fb00 7003 	mla	r0, r0, r3, r7
 8024c78:	fb06 2303 	mla	r3, r6, r3, r2
 8024c7c:	b29a      	uxth	r2, r3
 8024c7e:	1c63      	adds	r3, r4, #1
 8024c80:	b280      	uxth	r0, r0
 8024c82:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024c86:	1c53      	adds	r3, r2, #1
 8024c88:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024c8c:	1c42      	adds	r2, r0, #1
 8024c8e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024c92:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024c96:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024c9a:	0940      	lsrs	r0, r0, #5
 8024c9c:	4323      	orrs	r3, r4
 8024c9e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024ca2:	4303      	orrs	r3, r0
 8024ca4:	800b      	strh	r3, [r1, #0]
 8024ca6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024caa:	2600      	movs	r6, #0
 8024cac:	e764      	b.n	8024b78 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8024cae:	2400      	movs	r4, #0
 8024cb0:	4626      	mov	r6, r4
 8024cb2:	e778      	b.n	8024ba6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024cb4:	2400      	movs	r4, #0
 8024cb6:	e776      	b.n	8024ba6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024cb8:	463c      	mov	r4, r7
 8024cba:	e774      	b.n	8024ba6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024cbc:	2500      	movs	r5, #0
 8024cbe:	e78e      	b.n	8024bde <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8024cc0:	2300      	movs	r3, #0
 8024cc2:	461d      	mov	r5, r3
 8024cc4:	e79f      	b.n	8024c06 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024cc6:	4663      	mov	r3, ip
 8024cc8:	4665      	mov	r5, ip
 8024cca:	e79c      	b.n	8024c06 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024ccc:	2300      	movs	r3, #0
 8024cce:	e79a      	b.n	8024c06 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024cd0:	463b      	mov	r3, r7
 8024cd2:	e798      	b.n	8024c06 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024cd4:	200137e4 	.word	0x200137e4

08024cd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024cd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024cdc:	b093      	sub	sp, #76	; 0x4c
 8024cde:	461d      	mov	r5, r3
 8024ce0:	920c      	str	r2, [sp, #48]	; 0x30
 8024ce2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8024ce4:	9107      	str	r1, [sp, #28]
 8024ce6:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8024cea:	9011      	str	r0, [sp, #68]	; 0x44
 8024cec:	6850      	ldr	r0, [r2, #4]
 8024cee:	6812      	ldr	r2, [r2, #0]
 8024cf0:	fb00 1303 	mla	r3, r0, r3, r1
 8024cf4:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8024cf8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024cfa:	689b      	ldr	r3, [r3, #8]
 8024cfc:	3301      	adds	r3, #1
 8024cfe:	f023 0301 	bic.w	r3, r3, #1
 8024d02:	9306      	str	r3, [sp, #24]
 8024d04:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024d06:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8024d0a:	681f      	ldr	r7, [r3, #0]
 8024d0c:	9b07      	ldr	r3, [sp, #28]
 8024d0e:	2b00      	cmp	r3, #0
 8024d10:	dc03      	bgt.n	8024d1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8024d12:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024d14:	2b00      	cmp	r3, #0
 8024d16:	f340 8267 	ble.w	80251e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8024d1a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024d1c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024d20:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024d24:	1e48      	subs	r0, r1, #1
 8024d26:	f102 3cff 	add.w	ip, r2, #4294967295
 8024d2a:	2d00      	cmp	r5, #0
 8024d2c:	f340 80b8 	ble.w	8024ea0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8024d30:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024d34:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024d38:	d406      	bmi.n	8024d48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024d3a:	4586      	cmp	lr, r0
 8024d3c:	da04      	bge.n	8024d48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024d3e:	2b00      	cmp	r3, #0
 8024d40:	db02      	blt.n	8024d48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024d42:	4563      	cmp	r3, ip
 8024d44:	f2c0 80ad 	blt.w	8024ea2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8024d48:	f11e 0e01 	adds.w	lr, lr, #1
 8024d4c:	f100 80a0 	bmi.w	8024e90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024d50:	4571      	cmp	r1, lr
 8024d52:	f2c0 809d 	blt.w	8024e90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024d56:	3301      	adds	r3, #1
 8024d58:	f100 809a 	bmi.w	8024e90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024d5c:	429a      	cmp	r2, r3
 8024d5e:	f2c0 8097 	blt.w	8024e90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024d62:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8024d66:	9509      	str	r5, [sp, #36]	; 0x24
 8024d68:	46c8      	mov	r8, r9
 8024d6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024d6c:	2b00      	cmp	r3, #0
 8024d6e:	f340 80b6 	ble.w	8024ede <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8024d72:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8024d76:	9308      	str	r3, [sp, #32]
 8024d78:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024d7a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8024d7e:	1423      	asrs	r3, r4, #16
 8024d80:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024d84:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024d88:	f100 813e 	bmi.w	8025008 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024d8c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024d90:	455b      	cmp	r3, fp
 8024d92:	f280 8139 	bge.w	8025008 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024d96:	2800      	cmp	r0, #0
 8024d98:	f2c0 8136 	blt.w	8025008 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024d9c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024da0:	4558      	cmp	r0, fp
 8024da2:	f280 8131 	bge.w	8025008 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024da6:	9a06      	ldr	r2, [sp, #24]
 8024da8:	fb00 3302 	mla	r3, r0, r2, r3
 8024dac:	0858      	lsrs	r0, r3, #1
 8024dae:	07da      	lsls	r2, r3, #31
 8024db0:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024db4:	9a08      	ldr	r2, [sp, #32]
 8024db6:	bf54      	ite	pl
 8024db8:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024dbc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024dc0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024dc4:	fa5f fc8c 	uxtb.w	ip, ip
 8024dc8:	2a00      	cmp	r2, #0
 8024dca:	f000 80cb 	beq.w	8024f64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8024dce:	1c58      	adds	r0, r3, #1
 8024dd0:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024dd4:	07c0      	lsls	r0, r0, #31
 8024dd6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024dda:	bf54      	ite	pl
 8024ddc:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024de0:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024de4:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024de8:	fa5f fe8e 	uxtb.w	lr, lr
 8024dec:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8024df0:	b1b9      	cbz	r1, 8024e22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024df2:	4453      	add	r3, sl
 8024df4:	0858      	lsrs	r0, r3, #1
 8024df6:	07da      	lsls	r2, r3, #31
 8024df8:	5c38      	ldrb	r0, [r7, r0]
 8024dfa:	bf54      	ite	pl
 8024dfc:	f000 000f 	andpl.w	r0, r0, #15
 8024e00:	1100      	asrmi	r0, r0, #4
 8024e02:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024e06:	b2c0      	uxtb	r0, r0
 8024e08:	900a      	str	r0, [sp, #40]	; 0x28
 8024e0a:	1c58      	adds	r0, r3, #1
 8024e0c:	0843      	lsrs	r3, r0, #1
 8024e0e:	07c2      	lsls	r2, r0, #31
 8024e10:	5cfb      	ldrb	r3, [r7, r3]
 8024e12:	bf54      	ite	pl
 8024e14:	f003 030f 	andpl.w	r3, r3, #15
 8024e18:	111b      	asrmi	r3, r3, #4
 8024e1a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024e1e:	b2db      	uxtb	r3, r3
 8024e20:	930e      	str	r3, [sp, #56]	; 0x38
 8024e22:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8024e26:	b289      	uxth	r1, r1
 8024e28:	fb02 f301 	mul.w	r3, r2, r1
 8024e2c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024e30:	0112      	lsls	r2, r2, #4
 8024e32:	b289      	uxth	r1, r1
 8024e34:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8024e38:	1a40      	subs	r0, r0, r1
 8024e3a:	fa1f fe80 	uxth.w	lr, r0
 8024e3e:	1ad2      	subs	r2, r2, r3
 8024e40:	980d      	ldr	r0, [sp, #52]	; 0x34
 8024e42:	b292      	uxth	r2, r2
 8024e44:	4342      	muls	r2, r0
 8024e46:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8024e4a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8024e4c:	fb01 c102 	mla	r1, r1, r2, ip
 8024e50:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8024e52:	fb03 1302 	mla	r3, r3, r2, r1
 8024e56:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024e5a:	2bff      	cmp	r3, #255	; 0xff
 8024e5c:	f040 8093 	bne.w	8024f86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8024e60:	4bbe      	ldr	r3, [pc, #760]	; (802515c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024e62:	681a      	ldr	r2, [r3, #0]
 8024e64:	4bbe      	ldr	r3, [pc, #760]	; (8025160 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8024e66:	0951      	lsrs	r1, r2, #5
 8024e68:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8024e6c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024e70:	430b      	orrs	r3, r1
 8024e72:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024e76:	4313      	orrs	r3, r2
 8024e78:	f8a8 3000 	strh.w	r3, [r8]
 8024e7c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024e7e:	441c      	add	r4, r3
 8024e80:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024e82:	441e      	add	r6, r3
 8024e84:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024e86:	3b01      	subs	r3, #1
 8024e88:	f108 0802 	add.w	r8, r8, #2
 8024e8c:	9309      	str	r3, [sp, #36]	; 0x24
 8024e8e:	e76c      	b.n	8024d6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024e90:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024e92:	441c      	add	r4, r3
 8024e94:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024e96:	3d01      	subs	r5, #1
 8024e98:	441e      	add	r6, r3
 8024e9a:	f109 0902 	add.w	r9, r9, #2
 8024e9e:	e744      	b.n	8024d2a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8024ea0:	d021      	beq.n	8024ee6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8024ea2:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8024ea4:	1e6b      	subs	r3, r5, #1
 8024ea6:	fb00 4003 	mla	r0, r0, r3, r4
 8024eaa:	1400      	asrs	r0, r0, #16
 8024eac:	f53f af59 	bmi.w	8024d62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024eb0:	3901      	subs	r1, #1
 8024eb2:	4288      	cmp	r0, r1
 8024eb4:	f6bf af55 	bge.w	8024d62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024eb8:	9920      	ldr	r1, [sp, #128]	; 0x80
 8024eba:	fb01 6303 	mla	r3, r1, r3, r6
 8024ebe:	141b      	asrs	r3, r3, #16
 8024ec0:	f53f af4f 	bmi.w	8024d62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024ec4:	3a01      	subs	r2, #1
 8024ec6:	4293      	cmp	r3, r2
 8024ec8:	f6bf af4b 	bge.w	8024d62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024ecc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8024ed0:	9308      	str	r3, [sp, #32]
 8024ed2:	46a8      	mov	r8, r5
 8024ed4:	46ce      	mov	lr, r9
 8024ed6:	f1b8 0f00 	cmp.w	r8, #0
 8024eda:	f300 80b5 	bgt.w	8025048 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8024ede:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024ee2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024ee6:	9b07      	ldr	r3, [sp, #28]
 8024ee8:	2b00      	cmp	r3, #0
 8024eea:	f340 817d 	ble.w	80251e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8024eee:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024ef2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024ef6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024efa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024efc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024f00:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024f04:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024f08:	eef0 6a62 	vmov.f32	s13, s5
 8024f0c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024f10:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024f14:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024f18:	ee16 4a90 	vmov	r4, s13
 8024f1c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024f20:	eef0 6a43 	vmov.f32	s13, s6
 8024f24:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024f28:	ee12 2a90 	vmov	r2, s5
 8024f2c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024f30:	fb92 f3f3 	sdiv	r3, r2, r3
 8024f34:	ee13 2a10 	vmov	r2, s6
 8024f38:	931f      	str	r3, [sp, #124]	; 0x7c
 8024f3a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024f3c:	fb92 f3f3 	sdiv	r3, r2, r3
 8024f40:	9320      	str	r3, [sp, #128]	; 0x80
 8024f42:	9b07      	ldr	r3, [sp, #28]
 8024f44:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024f46:	3b01      	subs	r3, #1
 8024f48:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024f4c:	9307      	str	r3, [sp, #28]
 8024f4e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024f50:	ee16 6a90 	vmov	r6, s13
 8024f54:	bf14      	ite	ne
 8024f56:	461d      	movne	r5, r3
 8024f58:	4615      	moveq	r5, r2
 8024f5a:	eeb0 3a67 	vmov.f32	s6, s15
 8024f5e:	eef0 2a47 	vmov.f32	s5, s14
 8024f62:	e6d3      	b.n	8024d0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8024f64:	2900      	cmp	r1, #0
 8024f66:	f43f af5c 	beq.w	8024e22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024f6a:	eb0a 0003 	add.w	r0, sl, r3
 8024f6e:	0843      	lsrs	r3, r0, #1
 8024f70:	07c0      	lsls	r0, r0, #31
 8024f72:	5cfb      	ldrb	r3, [r7, r3]
 8024f74:	bf54      	ite	pl
 8024f76:	f003 030f 	andpl.w	r3, r3, #15
 8024f7a:	111b      	asrmi	r3, r3, #4
 8024f7c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024f80:	b2db      	uxtb	r3, r3
 8024f82:	930a      	str	r3, [sp, #40]	; 0x28
 8024f84:	e74d      	b.n	8024e22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024f86:	2b00      	cmp	r3, #0
 8024f88:	f43f af78 	beq.w	8024e7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024f8c:	4a73      	ldr	r2, [pc, #460]	; (802515c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024f8e:	f8b8 c000 	ldrh.w	ip, [r8]
 8024f92:	6810      	ldr	r0, [r2, #0]
 8024f94:	fa1f fe83 	uxth.w	lr, r3
 8024f98:	ea4f 212c 	mov.w	r1, ip, asr #8
 8024f9c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8024fa0:	43db      	mvns	r3, r3
 8024fa2:	b2db      	uxtb	r3, r3
 8024fa4:	fb12 f20e 	smulbb	r2, r2, lr
 8024fa8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024fac:	fb01 2103 	mla	r1, r1, r3, r2
 8024fb0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8024fb4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8024fb8:	b2c0      	uxtb	r0, r0
 8024fba:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8024fbe:	fb1b fb0e 	smulbb	fp, fp, lr
 8024fc2:	b289      	uxth	r1, r1
 8024fc4:	fb10 fe0e 	smulbb	lr, r0, lr
 8024fc8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024fcc:	fa5f fc8c 	uxtb.w	ip, ip
 8024fd0:	fb02 b203 	mla	r2, r2, r3, fp
 8024fd4:	1c48      	adds	r0, r1, #1
 8024fd6:	fb0c e303 	mla	r3, ip, r3, lr
 8024fda:	b292      	uxth	r2, r2
 8024fdc:	b29b      	uxth	r3, r3
 8024fde:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8024fe2:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8024fe6:	f102 0b01 	add.w	fp, r2, #1
 8024fea:	1c59      	adds	r1, r3, #1
 8024fec:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8024ff0:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8024ff4:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8024ff8:	0952      	lsrs	r2, r2, #5
 8024ffa:	4301      	orrs	r1, r0
 8024ffc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025000:	4311      	orrs	r1, r2
 8025002:	f8a8 1000 	strh.w	r1, [r8]
 8025006:	e739      	b.n	8024e7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025008:	f113 0b01 	adds.w	fp, r3, #1
 802500c:	f53f af36 	bmi.w	8024e7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025010:	45dc      	cmp	ip, fp
 8025012:	f6ff af33 	blt.w	8024e7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025016:	f110 0b01 	adds.w	fp, r0, #1
 802501a:	f53f af2f 	bmi.w	8024e7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802501e:	45de      	cmp	lr, fp
 8025020:	f6ff af2c 	blt.w	8024e7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025024:	9a08      	ldr	r2, [sp, #32]
 8025026:	9302      	str	r3, [sp, #8]
 8025028:	fa0f f38e 	sxth.w	r3, lr
 802502c:	9301      	str	r3, [sp, #4]
 802502e:	fa0f f38c 	sxth.w	r3, ip
 8025032:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8025036:	9105      	str	r1, [sp, #20]
 8025038:	9300      	str	r3, [sp, #0]
 802503a:	463a      	mov	r2, r7
 802503c:	4653      	mov	r3, sl
 802503e:	4641      	mov	r1, r8
 8025040:	9811      	ldr	r0, [sp, #68]	; 0x44
 8025042:	f7ff fd73 	bl	8024b2c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8025046:	e719      	b.n	8024e7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025048:	9906      	ldr	r1, [sp, #24]
 802504a:	1422      	asrs	r2, r4, #16
 802504c:	1433      	asrs	r3, r6, #16
 802504e:	fb01 2303 	mla	r3, r1, r3, r2
 8025052:	085a      	lsrs	r2, r3, #1
 8025054:	07d9      	lsls	r1, r3, #31
 8025056:	5cba      	ldrb	r2, [r7, r2]
 8025058:	bf54      	ite	pl
 802505a:	f002 020f 	andpl.w	r2, r2, #15
 802505e:	1112      	asrmi	r2, r2, #4
 8025060:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8025064:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8025068:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802506c:	b2d2      	uxtb	r2, r2
 802506e:	2800      	cmp	r0, #0
 8025070:	d062      	beq.n	8025138 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8025072:	f103 0a01 	add.w	sl, r3, #1
 8025076:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802507a:	f01a 0f01 	tst.w	sl, #1
 802507e:	5c79      	ldrb	r1, [r7, r1]
 8025080:	bf0c      	ite	eq
 8025082:	f001 010f 	andeq.w	r1, r1, #15
 8025086:	1109      	asrne	r1, r1, #4
 8025088:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802508c:	b2c9      	uxtb	r1, r1
 802508e:	910f      	str	r1, [sp, #60]	; 0x3c
 8025090:	f1bc 0f00 	cmp.w	ip, #0
 8025094:	d019      	beq.n	80250ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8025096:	9908      	ldr	r1, [sp, #32]
 8025098:	440b      	add	r3, r1
 802509a:	0859      	lsrs	r1, r3, #1
 802509c:	f013 0f01 	tst.w	r3, #1
 80250a0:	5c79      	ldrb	r1, [r7, r1]
 80250a2:	bf0c      	ite	eq
 80250a4:	f001 010f 	andeq.w	r1, r1, #15
 80250a8:	1109      	asrne	r1, r1, #4
 80250aa:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80250ae:	b2c9      	uxtb	r1, r1
 80250b0:	3301      	adds	r3, #1
 80250b2:	910b      	str	r1, [sp, #44]	; 0x2c
 80250b4:	0859      	lsrs	r1, r3, #1
 80250b6:	07db      	lsls	r3, r3, #31
 80250b8:	5c79      	ldrb	r1, [r7, r1]
 80250ba:	bf54      	ite	pl
 80250bc:	f001 010f 	andpl.w	r1, r1, #15
 80250c0:	1109      	asrmi	r1, r1, #4
 80250c2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80250c6:	b2c9      	uxtb	r1, r1
 80250c8:	9110      	str	r1, [sp, #64]	; 0x40
 80250ca:	b280      	uxth	r0, r0
 80250cc:	fa1f fc8c 	uxth.w	ip, ip
 80250d0:	fb00 f30c 	mul.w	r3, r0, ip
 80250d4:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80250d8:	0100      	lsls	r0, r0, #4
 80250da:	fa1f fc8c 	uxth.w	ip, ip
 80250de:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 80250e2:	eba1 010c 	sub.w	r1, r1, ip
 80250e6:	fa1f fa81 	uxth.w	sl, r1
 80250ea:	1ac0      	subs	r0, r0, r3
 80250ec:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80250ee:	b280      	uxth	r0, r0
 80250f0:	4348      	muls	r0, r1
 80250f2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80250f4:	fb02 020a 	mla	r2, r2, sl, r0
 80250f8:	fb0c 2c01 	mla	ip, ip, r1, r2
 80250fc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80250fe:	fb03 c302 	mla	r3, r3, r2, ip
 8025102:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025106:	2bff      	cmp	r3, #255	; 0xff
 8025108:	d12c      	bne.n	8025164 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802510a:	4b14      	ldr	r3, [pc, #80]	; (802515c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802510c:	681a      	ldr	r2, [r3, #0]
 802510e:	4b14      	ldr	r3, [pc, #80]	; (8025160 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8025110:	0951      	lsrs	r1, r2, #5
 8025112:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8025116:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802511a:	430b      	orrs	r3, r1
 802511c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025120:	4313      	orrs	r3, r2
 8025122:	f8ae 3000 	strh.w	r3, [lr]
 8025126:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025128:	441c      	add	r4, r3
 802512a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802512c:	f10e 0e02 	add.w	lr, lr, #2
 8025130:	441e      	add	r6, r3
 8025132:	f108 38ff 	add.w	r8, r8, #4294967295
 8025136:	e6ce      	b.n	8024ed6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8025138:	f1bc 0f00 	cmp.w	ip, #0
 802513c:	d0c5      	beq.n	80250ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802513e:	9908      	ldr	r1, [sp, #32]
 8025140:	440b      	add	r3, r1
 8025142:	0859      	lsrs	r1, r3, #1
 8025144:	07db      	lsls	r3, r3, #31
 8025146:	5c79      	ldrb	r1, [r7, r1]
 8025148:	bf54      	ite	pl
 802514a:	f001 010f 	andpl.w	r1, r1, #15
 802514e:	1109      	asrmi	r1, r1, #4
 8025150:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8025154:	b2c9      	uxtb	r1, r1
 8025156:	910b      	str	r1, [sp, #44]	; 0x2c
 8025158:	e7b7      	b.n	80250ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802515a:	bf00      	nop
 802515c:	200137e4 	.word	0x200137e4
 8025160:	fffff800 	.word	0xfffff800
 8025164:	2b00      	cmp	r3, #0
 8025166:	d0de      	beq.n	8025126 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8025168:	4a21      	ldr	r2, [pc, #132]	; (80251f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802516a:	f8be c000 	ldrh.w	ip, [lr]
 802516e:	6810      	ldr	r0, [r2, #0]
 8025170:	fa1f fa83 	uxth.w	sl, r3
 8025174:	ea4f 212c 	mov.w	r1, ip, asr #8
 8025178:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802517c:	43db      	mvns	r3, r3
 802517e:	b2db      	uxtb	r3, r3
 8025180:	fb12 f20a 	smulbb	r2, r2, sl
 8025184:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8025188:	fb01 2103 	mla	r1, r1, r3, r2
 802518c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8025190:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025194:	b2c0      	uxtb	r0, r0
 8025196:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802519a:	fa5f fc8c 	uxtb.w	ip, ip
 802519e:	fb10 f00a 	smulbb	r0, r0, sl
 80251a2:	fb0c 0003 	mla	r0, ip, r3, r0
 80251a6:	b289      	uxth	r1, r1
 80251a8:	fb1b fb0a 	smulbb	fp, fp, sl
 80251ac:	b280      	uxth	r0, r0
 80251ae:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80251b2:	fb02 b203 	mla	r2, r2, r3, fp
 80251b6:	1c4b      	adds	r3, r1, #1
 80251b8:	f100 0b01 	add.w	fp, r0, #1
 80251bc:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80251c0:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80251c4:	b292      	uxth	r2, r2
 80251c6:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80251ca:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80251ce:	ea4b 0101 	orr.w	r1, fp, r1
 80251d2:	f102 0b01 	add.w	fp, r2, #1
 80251d6:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80251da:	0952      	lsrs	r2, r2, #5
 80251dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80251e0:	4311      	orrs	r1, r2
 80251e2:	f8ae 1000 	strh.w	r1, [lr]
 80251e6:	e79e      	b.n	8025126 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80251e8:	b013      	add	sp, #76	; 0x4c
 80251ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80251ee:	bf00      	nop
 80251f0:	200137e4 	.word	0x200137e4

080251f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80251f4:	b570      	push	{r4, r5, r6, lr}
 80251f6:	1208      	asrs	r0, r1, #8
 80251f8:	b29e      	uxth	r6, r3
 80251fa:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80251fe:	1213      	asrs	r3, r2, #8
 8025200:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025204:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025208:	fb13 f305 	smulbb	r3, r3, r5
 802520c:	fb10 f006 	smulbb	r0, r0, r6
 8025210:	4418      	add	r0, r3
 8025212:	10cc      	asrs	r4, r1, #3
 8025214:	10d3      	asrs	r3, r2, #3
 8025216:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802521a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802521e:	fb13 f305 	smulbb	r3, r3, r5
 8025222:	fb14 f406 	smulbb	r4, r4, r6
 8025226:	00c9      	lsls	r1, r1, #3
 8025228:	00d2      	lsls	r2, r2, #3
 802522a:	441c      	add	r4, r3
 802522c:	b2d2      	uxtb	r2, r2
 802522e:	b2cb      	uxtb	r3, r1
 8025230:	fb12 f205 	smulbb	r2, r2, r5
 8025234:	b280      	uxth	r0, r0
 8025236:	fb13 f306 	smulbb	r3, r3, r6
 802523a:	4413      	add	r3, r2
 802523c:	1c42      	adds	r2, r0, #1
 802523e:	b29b      	uxth	r3, r3
 8025240:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025244:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8025248:	1c58      	adds	r0, r3, #1
 802524a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802524e:	b2a4      	uxth	r4, r4
 8025250:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025254:	4310      	orrs	r0, r2
 8025256:	1c62      	adds	r2, r4, #1
 8025258:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802525c:	0964      	lsrs	r4, r4, #5
 802525e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025262:	4320      	orrs	r0, r4
 8025264:	bd70      	pop	{r4, r5, r6, pc}
	...

08025268 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8025268:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802526c:	b08f      	sub	sp, #60	; 0x3c
 802526e:	461c      	mov	r4, r3
 8025270:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8025274:	9004      	str	r0, [sp, #16]
 8025276:	460d      	mov	r5, r1
 8025278:	4616      	mov	r6, r2
 802527a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802527c:	2f00      	cmp	r7, #0
 802527e:	f000 80f6 	beq.w	802546e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8025282:	6820      	ldr	r0, [r4, #0]
 8025284:	6861      	ldr	r1, [r4, #4]
 8025286:	aa0a      	add	r2, sp, #40	; 0x28
 8025288:	c203      	stmia	r2!, {r0, r1}
 802528a:	6818      	ldr	r0, [r3, #0]
 802528c:	6859      	ldr	r1, [r3, #4]
 802528e:	aa0c      	add	r2, sp, #48	; 0x30
 8025290:	c203      	stmia	r2!, {r0, r1}
 8025292:	a80a      	add	r0, sp, #40	; 0x28
 8025294:	f7ef fc90 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025298:	4621      	mov	r1, r4
 802529a:	a80c      	add	r0, sp, #48	; 0x30
 802529c:	f7ef fcd0 	bl	8014c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80252a0:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80252a4:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80252a8:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80252ac:	f002 0301 	and.w	r3, r2, #1
 80252b0:	9306      	str	r3, [sp, #24]
 80252b2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80252b6:	f003 0101 	and.w	r1, r3, #1
 80252ba:	9105      	str	r1, [sp, #20]
 80252bc:	9805      	ldr	r0, [sp, #20]
 80252be:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80252c2:	4403      	add	r3, r0
 80252c4:	fb01 2303 	mla	r3, r1, r3, r2
 80252c8:	f04f 0802 	mov.w	r8, #2
 80252cc:	fb93 f3f8 	sdiv	r3, r3, r8
 80252d0:	441d      	add	r5, r3
 80252d2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80252d6:	441a      	add	r2, r3
 80252d8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80252dc:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80252e0:	4419      	add	r1, r3
 80252e2:	4b64      	ldr	r3, [pc, #400]	; (8025474 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80252e4:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80252e8:	6818      	ldr	r0, [r3, #0]
 80252ea:	6803      	ldr	r3, [r0, #0]
 80252ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80252ee:	4798      	blx	r3
 80252f0:	4a61      	ldr	r2, [pc, #388]	; (8025478 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80252f2:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80252f6:	8813      	ldrh	r3, [r2, #0]
 80252f8:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 80252fc:	2fff      	cmp	r7, #255	; 0xff
 80252fe:	fb03 a404 	mla	r4, r3, r4, sl
 8025302:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025306:	f106 0604 	add.w	r6, r6, #4
 802530a:	4611      	mov	r1, r2
 802530c:	fb03 fb0b 	mul.w	fp, r3, fp
 8025310:	d06b      	beq.n	80253ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8025312:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 8025316:	9303      	str	r3, [sp, #12]
 8025318:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 802531c:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025320:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8025324:	9b07      	ldr	r3, [sp, #28]
 8025326:	42a3      	cmp	r3, r4
 8025328:	f240 809c 	bls.w	8025464 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802532c:	9b06      	ldr	r3, [sp, #24]
 802532e:	2b00      	cmp	r3, #0
 8025330:	d039      	beq.n	80253a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8025332:	782b      	ldrb	r3, [r5, #0]
 8025334:	8822      	ldrh	r2, [r4, #0]
 8025336:	9804      	ldr	r0, [sp, #16]
 8025338:	f003 030f 	and.w	r3, r3, #15
 802533c:	f105 0801 	add.w	r8, r5, #1
 8025340:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025344:	9b03      	ldr	r3, [sp, #12]
 8025346:	9300      	str	r3, [sp, #0]
 8025348:	463b      	mov	r3, r7
 802534a:	f7ff ff53 	bl	80251f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802534e:	f824 0b02 	strh.w	r0, [r4], #2
 8025352:	f109 3bff 	add.w	fp, r9, #4294967295
 8025356:	f1bb 0f01 	cmp.w	fp, #1
 802535a:	46a2      	mov	sl, r4
 802535c:	f104 0404 	add.w	r4, r4, #4
 8025360:	dd24      	ble.n	80253ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8025362:	f898 3000 	ldrb.w	r3, [r8]
 8025366:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802536a:	9804      	ldr	r0, [sp, #16]
 802536c:	091b      	lsrs	r3, r3, #4
 802536e:	f1ab 0b02 	sub.w	fp, fp, #2
 8025372:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025376:	9b03      	ldr	r3, [sp, #12]
 8025378:	9300      	str	r3, [sp, #0]
 802537a:	463b      	mov	r3, r7
 802537c:	f7ff ff3a 	bl	80251f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025380:	f824 0c04 	strh.w	r0, [r4, #-4]
 8025384:	f818 3b01 	ldrb.w	r3, [r8], #1
 8025388:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802538c:	9804      	ldr	r0, [sp, #16]
 802538e:	f003 030f 	and.w	r3, r3, #15
 8025392:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025396:	9b03      	ldr	r3, [sp, #12]
 8025398:	9300      	str	r3, [sp, #0]
 802539a:	463b      	mov	r3, r7
 802539c:	f7ff ff2a 	bl	80251f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80253a0:	f824 0c02 	strh.w	r0, [r4, #-2]
 80253a4:	e7d7      	b.n	8025356 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80253a6:	46a8      	mov	r8, r5
 80253a8:	46cb      	mov	fp, r9
 80253aa:	e7d4      	b.n	8025356 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80253ac:	d10e      	bne.n	80253cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 80253ae:	f898 3000 	ldrb.w	r3, [r8]
 80253b2:	f8ba 2000 	ldrh.w	r2, [sl]
 80253b6:	9804      	ldr	r0, [sp, #16]
 80253b8:	091b      	lsrs	r3, r3, #4
 80253ba:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80253be:	9b03      	ldr	r3, [sp, #12]
 80253c0:	9300      	str	r3, [sp, #0]
 80253c2:	463b      	mov	r3, r7
 80253c4:	f7ff ff16 	bl	80251f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80253c8:	f82a 0b02 	strh.w	r0, [sl], #2
 80253cc:	9b08      	ldr	r3, [sp, #32]
 80253ce:	9a05      	ldr	r2, [sp, #20]
 80253d0:	881c      	ldrh	r4, [r3, #0]
 80253d2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80253d6:	eba4 0409 	sub.w	r4, r4, r9
 80253da:	4413      	add	r3, r2
 80253dc:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80253e0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80253e2:	fb93 f3f2 	sdiv	r3, r3, r2
 80253e6:	441d      	add	r5, r3
 80253e8:	e79c      	b.n	8025324 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80253ea:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80253ee:	45a3      	cmp	fp, r4
 80253f0:	d938      	bls.n	8025464 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80253f2:	9b06      	ldr	r3, [sp, #24]
 80253f4:	b1f3      	cbz	r3, 8025434 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80253f6:	782b      	ldrb	r3, [r5, #0]
 80253f8:	f003 030f 	and.w	r3, r3, #15
 80253fc:	1c6a      	adds	r2, r5, #1
 80253fe:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025402:	8023      	strh	r3, [r4, #0]
 8025404:	f109 30ff 	add.w	r0, r9, #4294967295
 8025408:	3402      	adds	r4, #2
 802540a:	2801      	cmp	r0, #1
 802540c:	4623      	mov	r3, r4
 802540e:	f104 0404 	add.w	r4, r4, #4
 8025412:	dd12      	ble.n	802543a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8025414:	7813      	ldrb	r3, [r2, #0]
 8025416:	091b      	lsrs	r3, r3, #4
 8025418:	3802      	subs	r0, #2
 802541a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802541e:	f824 3c04 	strh.w	r3, [r4, #-4]
 8025422:	f812 3b01 	ldrb.w	r3, [r2], #1
 8025426:	f003 030f 	and.w	r3, r3, #15
 802542a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802542e:	f824 3c02 	strh.w	r3, [r4, #-2]
 8025432:	e7ea      	b.n	802540a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8025434:	462a      	mov	r2, r5
 8025436:	4648      	mov	r0, r9
 8025438:	e7e7      	b.n	802540a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802543a:	d106      	bne.n	802544a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 802543c:	7812      	ldrb	r2, [r2, #0]
 802543e:	0912      	lsrs	r2, r2, #4
 8025440:	3302      	adds	r3, #2
 8025442:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8025446:	f823 2c02 	strh.w	r2, [r3, #-2]
 802544a:	880c      	ldrh	r4, [r1, #0]
 802544c:	9a05      	ldr	r2, [sp, #20]
 802544e:	eba4 0409 	sub.w	r4, r4, r9
 8025452:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8025456:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802545a:	4413      	add	r3, r2
 802545c:	fb93 f3f8 	sdiv	r3, r3, r8
 8025460:	441d      	add	r5, r3
 8025462:	e7c4      	b.n	80253ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8025464:	4b03      	ldr	r3, [pc, #12]	; (8025474 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8025466:	6818      	ldr	r0, [r3, #0]
 8025468:	6803      	ldr	r3, [r0, #0]
 802546a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802546c:	4798      	blx	r3
 802546e:	b00f      	add	sp, #60	; 0x3c
 8025470:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025474:	200137d4 	.word	0x200137d4
 8025478:	200137ce 	.word	0x200137ce

0802547c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 802547c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802547e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8025482:	2dff      	cmp	r5, #255	; 0xff
 8025484:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8025488:	d10c      	bne.n	80254a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802548a:	2bff      	cmp	r3, #255	; 0xff
 802548c:	d10a      	bne.n	80254a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802548e:	4b25      	ldr	r3, [pc, #148]	; (8025524 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8025490:	0948      	lsrs	r0, r1, #5
 8025492:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025496:	403b      	ands	r3, r7
 8025498:	4318      	orrs	r0, r3
 802549a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802549e:	4308      	orrs	r0, r1
 80254a0:	b280      	uxth	r0, r0
 80254a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80254a4:	fb15 f503 	smulbb	r5, r5, r3
 80254a8:	b2ab      	uxth	r3, r5
 80254aa:	1c5d      	adds	r5, r3, #1
 80254ac:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 80254b0:	1214      	asrs	r4, r2, #8
 80254b2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80254b6:	fa1f fc85 	uxth.w	ip, r5
 80254ba:	10d6      	asrs	r6, r2, #3
 80254bc:	00d0      	lsls	r0, r2, #3
 80254be:	43ed      	mvns	r5, r5
 80254c0:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80254c4:	f3c1 4207 	ubfx	r2, r1, #16, #8
 80254c8:	b2eb      	uxtb	r3, r5
 80254ca:	b2c0      	uxtb	r0, r0
 80254cc:	fb12 f20c 	smulbb	r2, r2, ip
 80254d0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80254d4:	fb04 2403 	mla	r4, r4, r3, r2
 80254d8:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80254dc:	b2c8      	uxtb	r0, r1
 80254de:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80254e2:	b2fd      	uxtb	r5, r7
 80254e4:	fb10 f00c 	smulbb	r0, r0, ip
 80254e8:	b2a4      	uxth	r4, r4
 80254ea:	fb02 0003 	mla	r0, r2, r3, r0
 80254ee:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80254f2:	fb15 f50c 	smulbb	r5, r5, ip
 80254f6:	fb06 5503 	mla	r5, r6, r3, r5
 80254fa:	b283      	uxth	r3, r0
 80254fc:	1c60      	adds	r0, r4, #1
 80254fe:	b2ad      	uxth	r5, r5
 8025500:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8025504:	1c58      	adds	r0, r3, #1
 8025506:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802550a:	1c6b      	adds	r3, r5, #1
 802550c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025510:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025514:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025518:	096d      	lsrs	r5, r5, #5
 802551a:	4320      	orrs	r0, r4
 802551c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025520:	4328      	orrs	r0, r5
 8025522:	e7be      	b.n	80254a2 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8025524:	00fff800 	.word	0x00fff800

08025528 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8025528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802552c:	461c      	mov	r4, r3
 802552e:	b08d      	sub	sp, #52	; 0x34
 8025530:	460d      	mov	r5, r1
 8025532:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025534:	6861      	ldr	r1, [r4, #4]
 8025536:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 802553a:	4680      	mov	r8, r0
 802553c:	6820      	ldr	r0, [r4, #0]
 802553e:	4616      	mov	r6, r2
 8025540:	aa08      	add	r2, sp, #32
 8025542:	c203      	stmia	r2!, {r0, r1}
 8025544:	6818      	ldr	r0, [r3, #0]
 8025546:	6859      	ldr	r1, [r3, #4]
 8025548:	aa0a      	add	r2, sp, #40	; 0x28
 802554a:	c203      	stmia	r2!, {r0, r1}
 802554c:	a808      	add	r0, sp, #32
 802554e:	f7ef fb33 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025552:	4621      	mov	r1, r4
 8025554:	a80a      	add	r0, sp, #40	; 0x28
 8025556:	f7ef fb73 	bl	8014c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802555a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 802555e:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8025562:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8025566:	f002 0301 	and.w	r3, r2, #1
 802556a:	9303      	str	r3, [sp, #12]
 802556c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8025570:	f003 0101 	and.w	r1, r3, #1
 8025574:	9102      	str	r1, [sp, #8]
 8025576:	9802      	ldr	r0, [sp, #8]
 8025578:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 802557c:	4403      	add	r3, r0
 802557e:	fb01 2303 	mla	r3, r1, r3, r2
 8025582:	f04f 0a02 	mov.w	sl, #2
 8025586:	fb93 f3fa 	sdiv	r3, r3, sl
 802558a:	441d      	add	r5, r3
 802558c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8025590:	441a      	add	r2, r3
 8025592:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8025596:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 802559a:	4a3f      	ldr	r2, [pc, #252]	; (8025698 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 802559c:	9205      	str	r2, [sp, #20]
 802559e:	4419      	add	r1, r3
 80255a0:	6810      	ldr	r0, [r2, #0]
 80255a2:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 80255a6:	6803      	ldr	r3, [r0, #0]
 80255a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80255aa:	4798      	blx	r3
 80255ac:	4b3b      	ldr	r3, [pc, #236]	; (802569c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 80255ae:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 80255b2:	8819      	ldrh	r1, [r3, #0]
 80255b4:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 80255b8:	fb01 c404 	mla	r4, r1, r4, ip
 80255bc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80255c0:	434f      	muls	r7, r1
 80255c2:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 80255c6:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 80255ca:	3604      	adds	r6, #4
 80255cc:	9204      	str	r2, [sp, #16]
 80255ce:	9b04      	ldr	r3, [sp, #16]
 80255d0:	429c      	cmp	r4, r3
 80255d2:	d258      	bcs.n	8025686 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80255d4:	9b03      	ldr	r3, [sp, #12]
 80255d6:	2b00      	cmp	r3, #0
 80255d8:	d034      	beq.n	8025644 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 80255da:	782b      	ldrb	r3, [r5, #0]
 80255dc:	f003 030f 	and.w	r3, r3, #15
 80255e0:	1c6f      	adds	r7, r5, #1
 80255e2:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80255e6:	0e0b      	lsrs	r3, r1, #24
 80255e8:	d006      	beq.n	80255f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80255ea:	8822      	ldrh	r2, [r4, #0]
 80255ec:	9300      	str	r3, [sp, #0]
 80255ee:	4640      	mov	r0, r8
 80255f0:	464b      	mov	r3, r9
 80255f2:	f7ff ff43 	bl	802547c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80255f6:	8020      	strh	r0, [r4, #0]
 80255f8:	3402      	adds	r4, #2
 80255fa:	f10b 3aff 	add.w	sl, fp, #4294967295
 80255fe:	f1ba 0f01 	cmp.w	sl, #1
 8025602:	dd22      	ble.n	802564a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8025604:	783b      	ldrb	r3, [r7, #0]
 8025606:	091b      	lsrs	r3, r3, #4
 8025608:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802560c:	0e0b      	lsrs	r3, r1, #24
 802560e:	d006      	beq.n	802561e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8025610:	8822      	ldrh	r2, [r4, #0]
 8025612:	9300      	str	r3, [sp, #0]
 8025614:	4640      	mov	r0, r8
 8025616:	464b      	mov	r3, r9
 8025618:	f7ff ff30 	bl	802547c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802561c:	8020      	strh	r0, [r4, #0]
 802561e:	f817 3b01 	ldrb.w	r3, [r7], #1
 8025622:	f003 030f 	and.w	r3, r3, #15
 8025626:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802562a:	0e0b      	lsrs	r3, r1, #24
 802562c:	d006      	beq.n	802563c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 802562e:	8862      	ldrh	r2, [r4, #2]
 8025630:	9300      	str	r3, [sp, #0]
 8025632:	4640      	mov	r0, r8
 8025634:	464b      	mov	r3, r9
 8025636:	f7ff ff21 	bl	802547c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802563a:	8060      	strh	r0, [r4, #2]
 802563c:	3404      	adds	r4, #4
 802563e:	f1aa 0a02 	sub.w	sl, sl, #2
 8025642:	e7dc      	b.n	80255fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8025644:	462f      	mov	r7, r5
 8025646:	46da      	mov	sl, fp
 8025648:	e7d9      	b.n	80255fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802564a:	d10d      	bne.n	8025668 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 802564c:	783b      	ldrb	r3, [r7, #0]
 802564e:	091b      	lsrs	r3, r3, #4
 8025650:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025654:	0e0b      	lsrs	r3, r1, #24
 8025656:	d006      	beq.n	8025666 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8025658:	8822      	ldrh	r2, [r4, #0]
 802565a:	9300      	str	r3, [sp, #0]
 802565c:	4640      	mov	r0, r8
 802565e:	464b      	mov	r3, r9
 8025660:	f7ff ff0c 	bl	802547c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025664:	8020      	strh	r0, [r4, #0]
 8025666:	3402      	adds	r4, #2
 8025668:	9b06      	ldr	r3, [sp, #24]
 802566a:	9a02      	ldr	r2, [sp, #8]
 802566c:	881b      	ldrh	r3, [r3, #0]
 802566e:	eba3 030b 	sub.w	r3, r3, fp
 8025672:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8025676:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 802567a:	4413      	add	r3, r2
 802567c:	9a07      	ldr	r2, [sp, #28]
 802567e:	fb93 f3f2 	sdiv	r3, r3, r2
 8025682:	441d      	add	r5, r3
 8025684:	e7a3      	b.n	80255ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8025686:	9b05      	ldr	r3, [sp, #20]
 8025688:	6818      	ldr	r0, [r3, #0]
 802568a:	6803      	ldr	r3, [r0, #0]
 802568c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802568e:	4798      	blx	r3
 8025690:	b00d      	add	sp, #52	; 0x34
 8025692:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025696:	bf00      	nop
 8025698:	200137d4 	.word	0x200137d4
 802569c:	200137ce 	.word	0x200137ce

080256a0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 80256a0:	b570      	push	{r4, r5, r6, lr}
 80256a2:	1214      	asrs	r4, r2, #8
 80256a4:	788d      	ldrb	r5, [r1, #2]
 80256a6:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80256aa:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80256ae:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80256b2:	fb15 f503 	smulbb	r5, r5, r3
 80256b6:	fb04 5506 	mla	r5, r4, r6, r5
 80256ba:	10d0      	asrs	r0, r2, #3
 80256bc:	784c      	ldrb	r4, [r1, #1]
 80256be:	7809      	ldrb	r1, [r1, #0]
 80256c0:	00d2      	lsls	r2, r2, #3
 80256c2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80256c6:	b2d2      	uxtb	r2, r2
 80256c8:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 80256cc:	fb14 f403 	smulbb	r4, r4, r3
 80256d0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80256d4:	fb11 f303 	smulbb	r3, r1, r3
 80256d8:	fb00 4406 	mla	r4, r0, r6, r4
 80256dc:	fb02 3306 	mla	r3, r2, r6, r3
 80256e0:	b2ad      	uxth	r5, r5
 80256e2:	b29b      	uxth	r3, r3
 80256e4:	b2a4      	uxth	r4, r4
 80256e6:	1c68      	adds	r0, r5, #1
 80256e8:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80256ec:	1c62      	adds	r2, r4, #1
 80256ee:	1c58      	adds	r0, r3, #1
 80256f0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80256f4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80256f8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80256fc:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025700:	0964      	lsrs	r4, r4, #5
 8025702:	4328      	orrs	r0, r5
 8025704:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025708:	4320      	orrs	r0, r4
 802570a:	bd70      	pop	{r4, r5, r6, pc}

0802570c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 802570c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025710:	b08f      	sub	sp, #60	; 0x3c
 8025712:	461c      	mov	r4, r3
 8025714:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8025718:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802571a:	4682      	mov	sl, r0
 802571c:	460e      	mov	r6, r1
 802571e:	4615      	mov	r5, r2
 8025720:	2f00      	cmp	r7, #0
 8025722:	f000 8142 	beq.w	80259aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8025726:	6820      	ldr	r0, [r4, #0]
 8025728:	6861      	ldr	r1, [r4, #4]
 802572a:	aa0a      	add	r2, sp, #40	; 0x28
 802572c:	c203      	stmia	r2!, {r0, r1}
 802572e:	6818      	ldr	r0, [r3, #0]
 8025730:	6859      	ldr	r1, [r3, #4]
 8025732:	aa0c      	add	r2, sp, #48	; 0x30
 8025734:	c203      	stmia	r2!, {r0, r1}
 8025736:	a80a      	add	r0, sp, #40	; 0x28
 8025738:	f7ef fa3e 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802573c:	4621      	mov	r1, r4
 802573e:	a80c      	add	r0, sp, #48	; 0x30
 8025740:	f7ef fa7e 	bl	8014c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025744:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8025748:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 802574c:	f002 0301 	and.w	r3, r2, #1
 8025750:	9306      	str	r3, [sp, #24]
 8025752:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025756:	f003 0101 	and.w	r1, r3, #1
 802575a:	9105      	str	r1, [sp, #20]
 802575c:	9805      	ldr	r0, [sp, #20]
 802575e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8025762:	4403      	add	r3, r0
 8025764:	fb01 2303 	mla	r3, r1, r3, r2
 8025768:	f04f 0802 	mov.w	r8, #2
 802576c:	fb93 f3f8 	sdiv	r3, r3, r8
 8025770:	441e      	add	r6, r3
 8025772:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8025776:	441a      	add	r2, r3
 8025778:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802577c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8025780:	4419      	add	r1, r3
 8025782:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8025786:	9303      	str	r3, [sp, #12]
 8025788:	4b89      	ldr	r3, [pc, #548]	; (80259b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802578a:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 802578e:	6818      	ldr	r0, [r3, #0]
 8025790:	6803      	ldr	r3, [r0, #0]
 8025792:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025794:	4798      	blx	r3
 8025796:	4a87      	ldr	r2, [pc, #540]	; (80259b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8025798:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802579c:	8813      	ldrh	r3, [r2, #0]
 802579e:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 80257a2:	2fff      	cmp	r7, #255	; 0xff
 80257a4:	fb03 9404 	mla	r4, r3, r4, r9
 80257a8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80257ac:	f105 0504 	add.w	r5, r5, #4
 80257b0:	4694      	mov	ip, r2
 80257b2:	fb03 f30b 	mul.w	r3, r3, fp
 80257b6:	d071      	beq.n	802589c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80257b8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80257bc:	43f9      	mvns	r1, r7
 80257be:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80257c2:	b2c9      	uxtb	r1, r1
 80257c4:	9104      	str	r1, [sp, #16]
 80257c6:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80257ca:	9b07      	ldr	r3, [sp, #28]
 80257cc:	42a3      	cmp	r3, r4
 80257ce:	f240 80e7 	bls.w	80259a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80257d2:	9b06      	ldr	r3, [sp, #24]
 80257d4:	2b00      	cmp	r3, #0
 80257d6:	d03d      	beq.n	8025854 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 80257d8:	7831      	ldrb	r1, [r6, #0]
 80257da:	9b04      	ldr	r3, [sp, #16]
 80257dc:	8822      	ldrh	r2, [r4, #0]
 80257de:	9300      	str	r3, [sp, #0]
 80257e0:	f001 010f 	and.w	r1, r1, #15
 80257e4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80257e8:	463b      	mov	r3, r7
 80257ea:	4429      	add	r1, r5
 80257ec:	4650      	mov	r0, sl
 80257ee:	f7ff ff57 	bl	80256a0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80257f2:	9b03      	ldr	r3, [sp, #12]
 80257f4:	f824 0b02 	strh.w	r0, [r4], #2
 80257f8:	f106 0801 	add.w	r8, r6, #1
 80257fc:	f103 3bff 	add.w	fp, r3, #4294967295
 8025800:	f1bb 0f01 	cmp.w	fp, #1
 8025804:	46a1      	mov	r9, r4
 8025806:	f104 0404 	add.w	r4, r4, #4
 802580a:	dd27      	ble.n	802585c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 802580c:	f898 1000 	ldrb.w	r1, [r8]
 8025810:	9b04      	ldr	r3, [sp, #16]
 8025812:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8025816:	9300      	str	r3, [sp, #0]
 8025818:	0909      	lsrs	r1, r1, #4
 802581a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802581e:	463b      	mov	r3, r7
 8025820:	4429      	add	r1, r5
 8025822:	4650      	mov	r0, sl
 8025824:	f7ff ff3c 	bl	80256a0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025828:	f824 0c04 	strh.w	r0, [r4, #-4]
 802582c:	f818 1b01 	ldrb.w	r1, [r8], #1
 8025830:	9b04      	ldr	r3, [sp, #16]
 8025832:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8025836:	9300      	str	r3, [sp, #0]
 8025838:	f001 010f 	and.w	r1, r1, #15
 802583c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025840:	463b      	mov	r3, r7
 8025842:	4429      	add	r1, r5
 8025844:	4650      	mov	r0, sl
 8025846:	f7ff ff2b 	bl	80256a0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802584a:	f1ab 0b02 	sub.w	fp, fp, #2
 802584e:	f824 0c02 	strh.w	r0, [r4, #-2]
 8025852:	e7d5      	b.n	8025800 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8025854:	46b0      	mov	r8, r6
 8025856:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802585a:	e7d1      	b.n	8025800 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 802585c:	d10f      	bne.n	802587e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 802585e:	f898 1000 	ldrb.w	r1, [r8]
 8025862:	9b04      	ldr	r3, [sp, #16]
 8025864:	f8b9 2000 	ldrh.w	r2, [r9]
 8025868:	9300      	str	r3, [sp, #0]
 802586a:	0909      	lsrs	r1, r1, #4
 802586c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025870:	463b      	mov	r3, r7
 8025872:	4429      	add	r1, r5
 8025874:	4650      	mov	r0, sl
 8025876:	f7ff ff13 	bl	80256a0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802587a:	f829 0b02 	strh.w	r0, [r9], #2
 802587e:	9b08      	ldr	r3, [sp, #32]
 8025880:	9a05      	ldr	r2, [sp, #20]
 8025882:	881c      	ldrh	r4, [r3, #0]
 8025884:	9b03      	ldr	r3, [sp, #12]
 8025886:	1ae4      	subs	r4, r4, r3
 8025888:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802588c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025890:	4413      	add	r3, r2
 8025892:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025894:	fb93 f3f2 	sdiv	r3, r3, r2
 8025898:	441e      	add	r6, r3
 802589a:	e796      	b.n	80257ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 802589c:	4f46      	ldr	r7, [pc, #280]	; (80259b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 802589e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80258a2:	42a3      	cmp	r3, r4
 80258a4:	d97c      	bls.n	80259a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80258a6:	9a06      	ldr	r2, [sp, #24]
 80258a8:	2a00      	cmp	r2, #0
 80258aa:	d054      	beq.n	8025956 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80258ac:	7830      	ldrb	r0, [r6, #0]
 80258ae:	f000 000f 	and.w	r0, r0, #15
 80258b2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80258b6:	eb05 0e00 	add.w	lr, r5, r0
 80258ba:	5c28      	ldrb	r0, [r5, r0]
 80258bc:	f89e 2002 	ldrb.w	r2, [lr, #2]
 80258c0:	f89e e001 	ldrb.w	lr, [lr, #1]
 80258c4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80258c8:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80258cc:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80258d0:	ea42 020e 	orr.w	r2, r2, lr
 80258d4:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 80258d8:	f824 2b02 	strh.w	r2, [r4], #2
 80258dc:	9a03      	ldr	r2, [sp, #12]
 80258de:	1c71      	adds	r1, r6, #1
 80258e0:	f102 3eff 	add.w	lr, r2, #4294967295
 80258e4:	f1be 0f01 	cmp.w	lr, #1
 80258e8:	4620      	mov	r0, r4
 80258ea:	f104 0404 	add.w	r4, r4, #4
 80258ee:	dd36      	ble.n	802595e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 80258f0:	7808      	ldrb	r0, [r1, #0]
 80258f2:	0900      	lsrs	r0, r0, #4
 80258f4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80258f8:	eb05 0a00 	add.w	sl, r5, r0
 80258fc:	f1ae 0e02 	sub.w	lr, lr, #2
 8025900:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8025904:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8025908:	00d2      	lsls	r2, r2, #3
 802590a:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 802590e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025912:	ea49 0202 	orr.w	r2, r9, r2
 8025916:	f815 9000 	ldrb.w	r9, [r5, r0]
 802591a:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802591e:	f824 2c04 	strh.w	r2, [r4, #-4]
 8025922:	f811 0b01 	ldrb.w	r0, [r1], #1
 8025926:	f000 000f 	and.w	r0, r0, #15
 802592a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802592e:	eb05 0a00 	add.w	sl, r5, r0
 8025932:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8025936:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802593a:	00d2      	lsls	r2, r2, #3
 802593c:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8025940:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025944:	ea49 0202 	orr.w	r2, r9, r2
 8025948:	f815 9000 	ldrb.w	r9, [r5, r0]
 802594c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8025950:	f824 2c02 	strh.w	r2, [r4, #-2]
 8025954:	e7c6      	b.n	80258e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8025956:	4631      	mov	r1, r6
 8025958:	f8dd e00c 	ldr.w	lr, [sp, #12]
 802595c:	e7c2      	b.n	80258e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802595e:	d111      	bne.n	8025984 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8025960:	7809      	ldrb	r1, [r1, #0]
 8025962:	0909      	lsrs	r1, r1, #4
 8025964:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025968:	186c      	adds	r4, r5, r1
 802596a:	5c69      	ldrb	r1, [r5, r1]
 802596c:	78a2      	ldrb	r2, [r4, #2]
 802596e:	7864      	ldrb	r4, [r4, #1]
 8025970:	00e4      	lsls	r4, r4, #3
 8025972:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8025976:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802597a:	4322      	orrs	r2, r4
 802597c:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8025980:	f820 2b02 	strh.w	r2, [r0], #2
 8025984:	9a03      	ldr	r2, [sp, #12]
 8025986:	f8bc 4000 	ldrh.w	r4, [ip]
 802598a:	9905      	ldr	r1, [sp, #20]
 802598c:	1aa4      	subs	r4, r4, r2
 802598e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8025992:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025996:	440a      	add	r2, r1
 8025998:	fb92 f2f8 	sdiv	r2, r2, r8
 802599c:	4416      	add	r6, r2
 802599e:	e780      	b.n	80258a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 80259a0:	4b03      	ldr	r3, [pc, #12]	; (80259b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80259a2:	6818      	ldr	r0, [r3, #0]
 80259a4:	6803      	ldr	r3, [r0, #0]
 80259a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80259a8:	4798      	blx	r3
 80259aa:	b00f      	add	sp, #60	; 0x3c
 80259ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80259b0:	200137d4 	.word	0x200137d4
 80259b4:	200137ce 	.word	0x200137ce
 80259b8:	fffff800 	.word	0xfffff800

080259bc <CRC_Lock>:
 80259bc:	b530      	push	{r4, r5, lr}
 80259be:	4a20      	ldr	r2, [pc, #128]	; (8025a40 <CRC_Lock+0x84>)
 80259c0:	6813      	ldr	r3, [r2, #0]
 80259c2:	f023 0301 	bic.w	r3, r3, #1
 80259c6:	6013      	str	r3, [r2, #0]
 80259c8:	4b1e      	ldr	r3, [pc, #120]	; (8025a44 <CRC_Lock+0x88>)
 80259ca:	681a      	ldr	r2, [r3, #0]
 80259cc:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 80259d0:	4022      	ands	r2, r4
 80259d2:	f24c 2540 	movw	r5, #49728	; 0xc240
 80259d6:	42aa      	cmp	r2, r5
 80259d8:	d005      	beq.n	80259e6 <CRC_Lock+0x2a>
 80259da:	681b      	ldr	r3, [r3, #0]
 80259dc:	f24c 2270 	movw	r2, #49776	; 0xc270
 80259e0:	4023      	ands	r3, r4
 80259e2:	4293      	cmp	r3, r2
 80259e4:	d124      	bne.n	8025a30 <CRC_Lock+0x74>
 80259e6:	4b18      	ldr	r3, [pc, #96]	; (8025a48 <CRC_Lock+0x8c>)
 80259e8:	681b      	ldr	r3, [r3, #0]
 80259ea:	bb0b      	cbnz	r3, 8025a30 <CRC_Lock+0x74>
 80259ec:	4b17      	ldr	r3, [pc, #92]	; (8025a4c <CRC_Lock+0x90>)
 80259ee:	681a      	ldr	r2, [r3, #0]
 80259f0:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80259f4:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 80259f8:	d00d      	beq.n	8025a16 <CRC_Lock+0x5a>
 80259fa:	681a      	ldr	r2, [r3, #0]
 80259fc:	f240 4483 	movw	r4, #1155	; 0x483
 8025a00:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025a04:	42a2      	cmp	r2, r4
 8025a06:	d006      	beq.n	8025a16 <CRC_Lock+0x5a>
 8025a08:	681b      	ldr	r3, [r3, #0]
 8025a0a:	f240 4285 	movw	r2, #1157	; 0x485
 8025a0e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8025a12:	4293      	cmp	r3, r2
 8025a14:	d10c      	bne.n	8025a30 <CRC_Lock+0x74>
 8025a16:	4b0e      	ldr	r3, [pc, #56]	; (8025a50 <CRC_Lock+0x94>)
 8025a18:	2201      	movs	r2, #1
 8025a1a:	601a      	str	r2, [r3, #0]
 8025a1c:	681a      	ldr	r2, [r3, #0]
 8025a1e:	2a00      	cmp	r2, #0
 8025a20:	d1fc      	bne.n	8025a1c <CRC_Lock+0x60>
 8025a22:	4b0c      	ldr	r3, [pc, #48]	; (8025a54 <CRC_Lock+0x98>)
 8025a24:	6018      	str	r0, [r3, #0]
 8025a26:	6818      	ldr	r0, [r3, #0]
 8025a28:	1a43      	subs	r3, r0, r1
 8025a2a:	4258      	negs	r0, r3
 8025a2c:	4158      	adcs	r0, r3
 8025a2e:	bd30      	pop	{r4, r5, pc}
 8025a30:	4b09      	ldr	r3, [pc, #36]	; (8025a58 <CRC_Lock+0x9c>)
 8025a32:	2201      	movs	r2, #1
 8025a34:	601a      	str	r2, [r3, #0]
 8025a36:	681a      	ldr	r2, [r3, #0]
 8025a38:	2a00      	cmp	r2, #0
 8025a3a:	d1fc      	bne.n	8025a36 <CRC_Lock+0x7a>
 8025a3c:	4b07      	ldr	r3, [pc, #28]	; (8025a5c <CRC_Lock+0xa0>)
 8025a3e:	e7f1      	b.n	8025a24 <CRC_Lock+0x68>
 8025a40:	e0002000 	.word	0xe0002000
 8025a44:	e000ed00 	.word	0xe000ed00
 8025a48:	e0042000 	.word	0xe0042000
 8025a4c:	5c001000 	.word	0x5c001000
 8025a50:	58024c08 	.word	0x58024c08
 8025a54:	58024c00 	.word	0x58024c00
 8025a58:	40023008 	.word	0x40023008
 8025a5c:	40023000 	.word	0x40023000

08025a60 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8025a60:	6101      	str	r1, [r0, #16]
 8025a62:	4770      	bx	lr

08025a64 <_ZN8touchgfx8Gestures4tickEv>:
 8025a64:	7b83      	ldrb	r3, [r0, #14]
 8025a66:	b14b      	cbz	r3, 8025a7c <_ZN8touchgfx8Gestures4tickEv+0x18>
 8025a68:	8903      	ldrh	r3, [r0, #8]
 8025a6a:	3301      	adds	r3, #1
 8025a6c:	b29b      	uxth	r3, r3
 8025a6e:	2b07      	cmp	r3, #7
 8025a70:	8103      	strh	r3, [r0, #8]
 8025a72:	bf81      	itttt	hi
 8025a74:	2300      	movhi	r3, #0
 8025a76:	8143      	strhhi	r3, [r0, #10]
 8025a78:	8183      	strhhi	r3, [r0, #12]
 8025a7a:	7383      	strbhi	r3, [r0, #14]
 8025a7c:	4770      	bx	lr
	...

08025a80 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8025a80:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8025a84:	4698      	mov	r8, r3
 8025a86:	8883      	ldrh	r3, [r0, #4]
 8025a88:	f8ad 3006 	strh.w	r3, [sp, #6]
 8025a8c:	eba8 0303 	sub.w	r3, r8, r3
 8025a90:	b21b      	sxth	r3, r3
 8025a92:	4604      	mov	r4, r0
 8025a94:	2b00      	cmp	r3, #0
 8025a96:	4617      	mov	r7, r2
 8025a98:	4a18      	ldr	r2, [pc, #96]	; (8025afc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8025a9a:	9200      	str	r2, [sp, #0]
 8025a9c:	bfb8      	it	lt
 8025a9e:	425b      	neglt	r3, r3
 8025aa0:	8aa2      	ldrh	r2, [r4, #20]
 8025aa2:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8025aa6:	f8ad 800a 	strh.w	r8, [sp, #10]
 8025aaa:	b21b      	sxth	r3, r3
 8025aac:	460e      	mov	r6, r1
 8025aae:	4293      	cmp	r3, r2
 8025ab0:	88c1      	ldrh	r1, [r0, #6]
 8025ab2:	f8ad 1008 	strh.w	r1, [sp, #8]
 8025ab6:	f04f 0000 	mov.w	r0, #0
 8025aba:	f88d 0004 	strb.w	r0, [sp, #4]
 8025abe:	f8ad 500c 	strh.w	r5, [sp, #12]
 8025ac2:	dc07      	bgt.n	8025ad4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8025ac4:	1a69      	subs	r1, r5, r1
 8025ac6:	b209      	sxth	r1, r1
 8025ac8:	2900      	cmp	r1, #0
 8025aca:	bfb8      	it	lt
 8025acc:	4249      	neglt	r1, r1
 8025ace:	b209      	sxth	r1, r1
 8025ad0:	428a      	cmp	r2, r1
 8025ad2:	da10      	bge.n	8025af6 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8025ad4:	6920      	ldr	r0, [r4, #16]
 8025ad6:	6803      	ldr	r3, [r0, #0]
 8025ad8:	4669      	mov	r1, sp
 8025ada:	685b      	ldr	r3, [r3, #4]
 8025adc:	4798      	blx	r3
 8025ade:	eba8 0606 	sub.w	r6, r8, r6
 8025ae2:	2300      	movs	r3, #0
 8025ae4:	1bef      	subs	r7, r5, r7
 8025ae6:	2001      	movs	r0, #1
 8025ae8:	8123      	strh	r3, [r4, #8]
 8025aea:	8166      	strh	r6, [r4, #10]
 8025aec:	81a7      	strh	r7, [r4, #12]
 8025aee:	f8a4 8004 	strh.w	r8, [r4, #4]
 8025af2:	80e5      	strh	r5, [r4, #6]
 8025af4:	73a0      	strb	r0, [r4, #14]
 8025af6:	b004      	add	sp, #16
 8025af8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025afc:	0802cefc 	.word	0x0802cefc

08025b00 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8025b00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025b02:	461e      	mov	r6, r3
 8025b04:	1e4b      	subs	r3, r1, #1
 8025b06:	2b01      	cmp	r3, #1
 8025b08:	b085      	sub	sp, #20
 8025b0a:	4604      	mov	r4, r0
 8025b0c:	460d      	mov	r5, r1
 8025b0e:	4617      	mov	r7, r2
 8025b10:	d84b      	bhi.n	8025baa <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8025b12:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8025b16:	1cd3      	adds	r3, r2, #3
 8025b18:	b29b      	uxth	r3, r3
 8025b1a:	2b06      	cmp	r3, #6
 8025b1c:	d916      	bls.n	8025b4c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8025b1e:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8025bc0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025b22:	f8cd c004 	str.w	ip, [sp, #4]
 8025b26:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025b2a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025b2e:	6900      	ldr	r0, [r0, #16]
 8025b30:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025b34:	f04f 0c00 	mov.w	ip, #0
 8025b38:	f88d c008 	strb.w	ip, [sp, #8]
 8025b3c:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025b40:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025b44:	6803      	ldr	r3, [r0, #0]
 8025b46:	a901      	add	r1, sp, #4
 8025b48:	689b      	ldr	r3, [r3, #8]
 8025b4a:	4798      	blx	r3
 8025b4c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8025b50:	1cd3      	adds	r3, r2, #3
 8025b52:	b29b      	uxth	r3, r3
 8025b54:	2b06      	cmp	r3, #6
 8025b56:	d916      	bls.n	8025b86 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025b58:	f8df c064 	ldr.w	ip, [pc, #100]	; 8025bc0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025b5c:	f8cd c004 	str.w	ip, [sp, #4]
 8025b60:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025b64:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025b68:	6920      	ldr	r0, [r4, #16]
 8025b6a:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025b6e:	f04f 0c01 	mov.w	ip, #1
 8025b72:	f88d c008 	strb.w	ip, [sp, #8]
 8025b76:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025b7a:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025b7e:	6803      	ldr	r3, [r0, #0]
 8025b80:	a901      	add	r1, sp, #4
 8025b82:	689b      	ldr	r3, [r3, #8]
 8025b84:	4798      	blx	r3
 8025b86:	4b0d      	ldr	r3, [pc, #52]	; (8025bbc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8025b88:	9301      	str	r3, [sp, #4]
 8025b8a:	6920      	ldr	r0, [r4, #16]
 8025b8c:	f88d 5008 	strb.w	r5, [sp, #8]
 8025b90:	2300      	movs	r3, #0
 8025b92:	f8ad 700a 	strh.w	r7, [sp, #10]
 8025b96:	f8ad 600c 	strh.w	r6, [sp, #12]
 8025b9a:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025b9e:	6803      	ldr	r3, [r0, #0]
 8025ba0:	a901      	add	r1, sp, #4
 8025ba2:	681b      	ldr	r3, [r3, #0]
 8025ba4:	4798      	blx	r3
 8025ba6:	b005      	add	sp, #20
 8025ba8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025baa:	2900      	cmp	r1, #0
 8025bac:	d1eb      	bne.n	8025b86 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025bae:	80a2      	strh	r2, [r4, #4]
 8025bb0:	80c6      	strh	r6, [r0, #6]
 8025bb2:	60a1      	str	r1, [r4, #8]
 8025bb4:	81a1      	strh	r1, [r4, #12]
 8025bb6:	73a1      	strb	r1, [r4, #14]
 8025bb8:	e7e5      	b.n	8025b86 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025bba:	bf00      	nop
 8025bbc:	0802cee8 	.word	0x0802cee8
 8025bc0:	0802cf10 	.word	0x0802cf10

08025bc4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8025bc4:	10c9      	asrs	r1, r1, #3
 8025bc6:	2900      	cmp	r1, #0
 8025bc8:	bfb8      	it	lt
 8025bca:	4249      	neglt	r1, r1
 8025bcc:	2801      	cmp	r0, #1
 8025bce:	d108      	bne.n	8025be2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8025bd0:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8025bd4:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8025bd8:	4601      	mov	r1, r0
 8025bda:	dd02      	ble.n	8025be2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8025bdc:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8025be0:	4770      	bx	lr
 8025be2:	29ff      	cmp	r1, #255	; 0xff
 8025be4:	bfa8      	it	ge
 8025be6:	21ff      	movge	r1, #255	; 0xff
 8025be8:	4608      	mov	r0, r1
 8025bea:	4770      	bx	lr

08025bec <_ZN8touchgfx10Rasterizer6lineToEii>:
 8025bec:	b410      	push	{r4}
 8025bee:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8025bf2:	429c      	cmp	r4, r3
 8025bf4:	d803      	bhi.n	8025bfe <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8025bf6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025bfa:	f7ed bae3 	b.w	80131c4 <_ZN8touchgfx7Outline6lineToEii>
 8025bfe:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025c02:	4770      	bx	lr

08025c04 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8025c04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025c08:	b08b      	sub	sp, #44	; 0x2c
 8025c0a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8025c0e:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8025c12:	9308      	str	r3, [sp, #32]
 8025c14:	4606      	mov	r6, r0
 8025c16:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8025c1a:	9309      	str	r3, [sp, #36]	; 0x24
 8025c1c:	468a      	mov	sl, r1
 8025c1e:	f7ed fc3e 	bl	801349e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8025c22:	68b5      	ldr	r5, [r6, #8]
 8025c24:	4604      	mov	r4, r0
 8025c26:	2d00      	cmp	r5, #0
 8025c28:	d044      	beq.n	8025cb4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8025c2a:	6873      	ldr	r3, [r6, #4]
 8025c2c:	42ab      	cmp	r3, r5
 8025c2e:	d33d      	bcc.n	8025cac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8025c30:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8025c34:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8025c38:	eb02 0b03 	add.w	fp, r2, r3
 8025c3c:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8025c40:	fb02 1203 	mla	r2, r2, r3, r1
 8025c44:	9205      	str	r2, [sp, #20]
 8025c46:	1e6a      	subs	r2, r5, #1
 8025c48:	9204      	str	r2, [sp, #16]
 8025c4a:	f04f 0800 	mov.w	r8, #0
 8025c4e:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8025c52:	f9b4 7000 	ldrsh.w	r7, [r4]
 8025c56:	454b      	cmp	r3, r9
 8025c58:	463a      	mov	r2, r7
 8025c5a:	d008      	beq.n	8025c6e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8025c5c:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8025c60:	eb03 0b09 	add.w	fp, r3, r9
 8025c64:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8025c68:	fb03 1309 	mla	r3, r3, r9, r1
 8025c6c:	9305      	str	r3, [sp, #20]
 8025c6e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8025c72:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8025c76:	4498      	add	r8, r3
 8025c78:	9b04      	ldr	r3, [sp, #16]
 8025c7a:	3b01      	subs	r3, #1
 8025c7c:	9304      	str	r3, [sp, #16]
 8025c7e:	9b04      	ldr	r3, [sp, #16]
 8025c80:	3301      	adds	r3, #1
 8025c82:	d015      	beq.n	8025cb0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8025c84:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8025c88:	42bb      	cmp	r3, r7
 8025c8a:	d117      	bne.n	8025cbc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8025c8c:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8025c90:	9b04      	ldr	r3, [sp, #16]
 8025c92:	4548      	cmp	r0, r9
 8025c94:	f103 33ff 	add.w	r3, r3, #4294967295
 8025c98:	d17f      	bne.n	8025d9a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8025c9a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8025c9e:	4401      	add	r1, r0
 8025ca0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8025ca4:	4480      	add	r8, r0
 8025ca6:	e7e9      	b.n	8025c7c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8025ca8:	461f      	mov	r7, r3
 8025caa:	e044      	b.n	8025d36 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8025cac:	2000      	movs	r0, #0
 8025cae:	e002      	b.n	8025cb6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8025cb0:	2900      	cmp	r1, #0
 8025cb2:	d16f      	bne.n	8025d94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8025cb4:	2001      	movs	r0, #1
 8025cb6:	b00b      	add	sp, #44	; 0x2c
 8025cb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025cbc:	2900      	cmp	r1, #0
 8025cbe:	d030      	beq.n	8025d22 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8025cc0:	2f00      	cmp	r7, #0
 8025cc2:	db29      	blt.n	8025d18 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8025cc4:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8025cc8:	42bb      	cmp	r3, r7
 8025cca:	dd25      	ble.n	8025d18 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8025ccc:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8025cd0:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8025cd4:	f7ff ff76 	bl	8025bc4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8025cd8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025cda:	fb10 f003 	smulbb	r0, r0, r3
 8025cde:	b280      	uxth	r0, r0
 8025ce0:	1c41      	adds	r1, r0, #1
 8025ce2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025ce6:	1209      	asrs	r1, r1, #8
 8025ce8:	f011 0fff 	tst.w	r1, #255	; 0xff
 8025cec:	d014      	beq.n	8025d18 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8025cee:	9808      	ldr	r0, [sp, #32]
 8025cf0:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8025cf2:	b2c9      	uxtb	r1, r1
 8025cf4:	b2ba      	uxth	r2, r7
 8025cf6:	9102      	str	r1, [sp, #8]
 8025cf8:	2101      	movs	r1, #1
 8025cfa:	4413      	add	r3, r2
 8025cfc:	9101      	str	r1, [sp, #4]
 8025cfe:	4402      	add	r2, r0
 8025d00:	fa0f f18b 	sxth.w	r1, fp
 8025d04:	f8da 0000 	ldr.w	r0, [sl]
 8025d08:	9100      	str	r1, [sp, #0]
 8025d0a:	6941      	ldr	r1, [r0, #20]
 8025d0c:	b21b      	sxth	r3, r3
 8025d0e:	460d      	mov	r5, r1
 8025d10:	b212      	sxth	r2, r2
 8025d12:	9905      	ldr	r1, [sp, #20]
 8025d14:	4650      	mov	r0, sl
 8025d16:	47a8      	blx	r5
 8025d18:	9b04      	ldr	r3, [sp, #16]
 8025d1a:	3301      	adds	r3, #1
 8025d1c:	f107 0201 	add.w	r2, r7, #1
 8025d20:	d0c8      	beq.n	8025cb4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8025d22:	f9b4 7000 	ldrsh.w	r7, [r4]
 8025d26:	1abb      	subs	r3, r7, r2
 8025d28:	2b00      	cmp	r3, #0
 8025d2a:	dd31      	ble.n	8025d90 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025d2c:	2a00      	cmp	r2, #0
 8025d2e:	dabb      	bge.n	8025ca8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8025d30:	2f00      	cmp	r7, #0
 8025d32:	dd2d      	ble.n	8025d90 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025d34:	2200      	movs	r2, #0
 8025d36:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8025d3a:	19d1      	adds	r1, r2, r7
 8025d3c:	4299      	cmp	r1, r3
 8025d3e:	db02      	blt.n	8025d46 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8025d40:	1a9f      	subs	r7, r3, r2
 8025d42:	2f00      	cmp	r7, #0
 8025d44:	dd24      	ble.n	8025d90 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025d46:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8025d4a:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8025d4e:	f7ff ff39 	bl	8025bc4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8025d52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025d54:	fb10 f003 	smulbb	r0, r0, r3
 8025d58:	b280      	uxth	r0, r0
 8025d5a:	1c41      	adds	r1, r0, #1
 8025d5c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025d60:	1209      	asrs	r1, r1, #8
 8025d62:	f011 0fff 	tst.w	r1, #255	; 0xff
 8025d66:	d013      	beq.n	8025d90 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025d68:	9808      	ldr	r0, [sp, #32]
 8025d6a:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8025d6c:	b292      	uxth	r2, r2
 8025d6e:	b2c9      	uxtb	r1, r1
 8025d70:	4413      	add	r3, r2
 8025d72:	9102      	str	r1, [sp, #8]
 8025d74:	4402      	add	r2, r0
 8025d76:	b23f      	sxth	r7, r7
 8025d78:	f8da 0000 	ldr.w	r0, [sl]
 8025d7c:	9701      	str	r7, [sp, #4]
 8025d7e:	fa0f f18b 	sxth.w	r1, fp
 8025d82:	9100      	str	r1, [sp, #0]
 8025d84:	6947      	ldr	r7, [r0, #20]
 8025d86:	9905      	ldr	r1, [sp, #20]
 8025d88:	b21b      	sxth	r3, r3
 8025d8a:	b212      	sxth	r2, r2
 8025d8c:	4650      	mov	r0, sl
 8025d8e:	47b8      	blx	r7
 8025d90:	464b      	mov	r3, r9
 8025d92:	e75c      	b.n	8025c4e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8025d94:	2f00      	cmp	r7, #0
 8025d96:	da95      	bge.n	8025cc4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8025d98:	e78c      	b.n	8025cb4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8025d9a:	2900      	cmp	r1, #0
 8025d9c:	d0f8      	beq.n	8025d90 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025d9e:	e78f      	b.n	8025cc0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08025da0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8025da0:	4b4b      	ldr	r3, [pc, #300]	; (8025ed0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8025da2:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8025da6:	2500      	movs	r5, #0
 8025da8:	f100 0620 	add.w	r6, r0, #32
 8025dac:	4604      	mov	r4, r0
 8025dae:	e9c0 3100 	strd	r3, r1, [r0]
 8025db2:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8025db6:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8025dba:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8025dbe:	f100 0718 	add.w	r7, r0, #24
 8025dc2:	4630      	mov	r0, r6
 8025dc4:	4690      	mov	r8, r2
 8025dc6:	f7ec fd35 	bl	8012834 <_ZN8touchgfx7OutlineC1Ev>
 8025dca:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8025dce:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8025dd2:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8025dd6:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8025dda:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8025dde:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8025de2:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8025de6:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8025dea:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8025dee:	f9b8 2000 	ldrsh.w	r2, [r8]
 8025df2:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8025df6:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8025dfa:	9500      	str	r5, [sp, #0]
 8025dfc:	4410      	add	r0, r2
 8025dfe:	b280      	uxth	r0, r0
 8025e00:	fa0f fa80 	sxth.w	sl, r0
 8025e04:	45aa      	cmp	sl, r5
 8025e06:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8025e0a:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8025e0e:	dd5c      	ble.n	8025eca <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8025e10:	4591      	cmp	r9, r2
 8025e12:	dd5a      	ble.n	8025eca <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8025e14:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8025e18:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8025e1c:	440b      	add	r3, r1
 8025e1e:	b29b      	uxth	r3, r3
 8025e20:	b21d      	sxth	r5, r3
 8025e22:	2d00      	cmp	r5, #0
 8025e24:	dd51      	ble.n	8025eca <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8025e26:	458e      	cmp	lr, r1
 8025e28:	dd4f      	ble.n	8025eca <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8025e2a:	45d1      	cmp	r9, sl
 8025e2c:	bfb8      	it	lt
 8025e2e:	fa1f f089 	uxthlt.w	r0, r9
 8025e32:	45ae      	cmp	lr, r5
 8025e34:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8025e38:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8025e3c:	bfb8      	it	lt
 8025e3e:	fa1f f38e 	uxthlt.w	r3, lr
 8025e42:	1a80      	subs	r0, r0, r2
 8025e44:	1a5b      	subs	r3, r3, r1
 8025e46:	f8ad 0004 	strh.w	r0, [sp, #4]
 8025e4a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8025e4e:	f8ad 2000 	strh.w	r2, [sp]
 8025e52:	f8ad 1002 	strh.w	r1, [sp, #2]
 8025e56:	466d      	mov	r5, sp
 8025e58:	e895 0003 	ldmia.w	r5, {r0, r1}
 8025e5c:	e887 0003 	stmia.w	r7, {r0, r1}
 8025e60:	f8dc 3000 	ldr.w	r3, [ip]
 8025e64:	4660      	mov	r0, ip
 8025e66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025e68:	4639      	mov	r1, r7
 8025e6a:	4798      	blx	r3
 8025e6c:	6861      	ldr	r1, [r4, #4]
 8025e6e:	4628      	mov	r0, r5
 8025e70:	3104      	adds	r1, #4
 8025e72:	f7ee fee5 	bl	8014c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025e76:	4638      	mov	r0, r7
 8025e78:	f7ee fe9e 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025e7c:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8025e80:	f8bd 2000 	ldrh.w	r2, [sp]
 8025e84:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8025e88:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8025e8c:	4630      	mov	r0, r6
 8025e8e:	f7ec fcb5 	bl	80127fc <_ZN8touchgfx7Outline5resetEv>
 8025e92:	f9bd 3000 	ldrsh.w	r3, [sp]
 8025e96:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8025e9a:	015b      	lsls	r3, r3, #5
 8025e9c:	60a3      	str	r3, [r4, #8]
 8025e9e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8025ea2:	015b      	lsls	r3, r3, #5
 8025ea4:	60e3      	str	r3, [r4, #12]
 8025ea6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8025eaa:	015b      	lsls	r3, r3, #5
 8025eac:	6123      	str	r3, [r4, #16]
 8025eae:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8025eb2:	015b      	lsls	r3, r3, #5
 8025eb4:	6163      	str	r3, [r4, #20]
 8025eb6:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8025eba:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8025ebe:	4620      	mov	r0, r4
 8025ec0:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8025ec4:	b002      	add	sp, #8
 8025ec6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025eca:	2300      	movs	r3, #0
 8025ecc:	9301      	str	r3, [sp, #4]
 8025ece:	e7c2      	b.n	8025e56 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8025ed0:	0802d234 	.word	0x0802d234

08025ed4 <_ZN8touchgfx6Canvas5closeEv>:
 8025ed4:	b538      	push	{r3, r4, r5, lr}
 8025ed6:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8025eda:	4604      	mov	r4, r0
 8025edc:	b193      	cbz	r3, 8025f04 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8025ede:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8025ee2:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8025ee6:	4213      	tst	r3, r2
 8025ee8:	d10c      	bne.n	8025f04 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8025eea:	f100 0520 	add.w	r5, r0, #32
 8025eee:	b123      	cbz	r3, 8025efa <_ZN8touchgfx6Canvas5closeEv+0x26>
 8025ef0:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8025ef4:	4628      	mov	r0, r5
 8025ef6:	f7ff fe79 	bl	8025bec <_ZN8touchgfx10Rasterizer6lineToEii>
 8025efa:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8025efe:	4628      	mov	r0, r5
 8025f00:	f7ff fe74 	bl	8025bec <_ZN8touchgfx10Rasterizer6lineToEii>
 8025f04:	2300      	movs	r3, #0
 8025f06:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8025f0a:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8025f0e:	4298      	cmp	r0, r3
 8025f10:	bf34      	ite	cc
 8025f12:	2000      	movcc	r0, #0
 8025f14:	2001      	movcs	r0, #1
 8025f16:	bd38      	pop	{r3, r4, r5, pc}

08025f18 <_ZN8touchgfx6Canvas6renderEh>:
 8025f18:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8025f1c:	4604      	mov	r4, r0
 8025f1e:	6840      	ldr	r0, [r0, #4]
 8025f20:	6803      	ldr	r3, [r0, #0]
 8025f22:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8025f24:	460d      	mov	r5, r1
 8025f26:	4798      	blx	r3
 8025f28:	fb10 f105 	smulbb	r1, r0, r5
 8025f2c:	b289      	uxth	r1, r1
 8025f2e:	1c4d      	adds	r5, r1, #1
 8025f30:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8025f34:	122d      	asrs	r5, r5, #8
 8025f36:	f000 809d 	beq.w	8026074 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8025f3a:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8025f3e:	2b00      	cmp	r3, #0
 8025f40:	f000 8098 	beq.w	8026074 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8025f44:	4620      	mov	r0, r4
 8025f46:	f7ff ffc5 	bl	8025ed4 <_ZN8touchgfx6Canvas5closeEv>
 8025f4a:	4607      	mov	r7, r0
 8025f4c:	2800      	cmp	r0, #0
 8025f4e:	d048      	beq.n	8025fe2 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8025f50:	6863      	ldr	r3, [r4, #4]
 8025f52:	4e49      	ldr	r6, [pc, #292]	; (8026078 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8025f54:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8025f56:	6837      	ldr	r7, [r6, #0]
 8025f58:	6803      	ldr	r3, [r0, #0]
 8025f5a:	689b      	ldr	r3, [r3, #8]
 8025f5c:	4798      	blx	r3
 8025f5e:	4601      	mov	r1, r0
 8025f60:	4638      	mov	r0, r7
 8025f62:	f7ea fdb9 	bl	8010ad8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8025f66:	4607      	mov	r7, r0
 8025f68:	f7dd fba4 	bl	80036b4 <_ZN8touchgfx3HAL3lcdEv>
 8025f6c:	6803      	ldr	r3, [r0, #0]
 8025f6e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8025f70:	4798      	blx	r3
 8025f72:	4680      	mov	r8, r0
 8025f74:	f7dd fb9e 	bl	80036b4 <_ZN8touchgfx3HAL3lcdEv>
 8025f78:	6803      	ldr	r3, [r0, #0]
 8025f7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025f7c:	4798      	blx	r3
 8025f7e:	280b      	cmp	r0, #11
 8025f80:	d85d      	bhi.n	802603e <_ZN8touchgfx6Canvas6renderEh+0x126>
 8025f82:	e8df f000 	tbb	[pc, r0]
 8025f86:	5e53      	.short	0x5e53
 8025f88:	325c066e 	.word	0x325c066e
 8025f8c:	67676742 	.word	0x67676742
 8025f90:	6767      	.short	0x6767
 8025f92:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025f96:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8025f9a:	2208      	movs	r2, #8
 8025f9c:	fb91 f2f2 	sdiv	r2, r1, r2
 8025fa0:	fb08 2303 	mla	r3, r8, r3, r2
 8025fa4:	441f      	add	r7, r3
 8025fa6:	424b      	negs	r3, r1
 8025fa8:	f003 0307 	and.w	r3, r3, #7
 8025fac:	f001 0107 	and.w	r1, r1, #7
 8025fb0:	bf58      	it	pl
 8025fb2:	4259      	negpl	r1, r3
 8025fb4:	b2c9      	uxtb	r1, r1
 8025fb6:	b2ed      	uxtb	r5, r5
 8025fb8:	e9cd 1500 	strd	r1, r5, [sp]
 8025fbc:	6860      	ldr	r0, [r4, #4]
 8025fbe:	463a      	mov	r2, r7
 8025fc0:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8025fc2:	fa0f f388 	sxth.w	r3, r8
 8025fc6:	f104 0020 	add.w	r0, r4, #32
 8025fca:	f7ff fe1b 	bl	8025c04 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8025fce:	6863      	ldr	r3, [r4, #4]
 8025fd0:	4607      	mov	r7, r0
 8025fd2:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8025fd4:	6803      	ldr	r3, [r0, #0]
 8025fd6:	691b      	ldr	r3, [r3, #16]
 8025fd8:	4798      	blx	r3
 8025fda:	6830      	ldr	r0, [r6, #0]
 8025fdc:	6803      	ldr	r3, [r0, #0]
 8025fde:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025fe0:	4798      	blx	r3
 8025fe2:	4638      	mov	r0, r7
 8025fe4:	b002      	add	sp, #8
 8025fe6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025fea:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025fee:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8025ff2:	2204      	movs	r2, #4
 8025ff4:	fb91 f2f2 	sdiv	r2, r1, r2
 8025ff8:	fb08 2303 	mla	r3, r8, r3, r2
 8025ffc:	441f      	add	r7, r3
 8025ffe:	424b      	negs	r3, r1
 8026000:	f003 0303 	and.w	r3, r3, #3
 8026004:	f001 0103 	and.w	r1, r1, #3
 8026008:	e7d2      	b.n	8025fb0 <_ZN8touchgfx6Canvas6renderEh+0x98>
 802600a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802600e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026012:	2900      	cmp	r1, #0
 8026014:	f04f 0202 	mov.w	r2, #2
 8026018:	fb91 f2f2 	sdiv	r2, r1, r2
 802601c:	f001 0101 	and.w	r1, r1, #1
 8026020:	fb08 2303 	mla	r3, r8, r3, r2
 8026024:	441f      	add	r7, r3
 8026026:	bfb8      	it	lt
 8026028:	4249      	neglt	r1, r1
 802602a:	e7c3      	b.n	8025fb4 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 802602c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026030:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8026034:	fb08 f303 	mul.w	r3, r8, r3
 8026038:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802603c:	441f      	add	r7, r3
 802603e:	2100      	movs	r1, #0
 8026040:	e7b9      	b.n	8025fb6 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8026042:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026046:	fb08 f203 	mul.w	r2, r8, r3
 802604a:	8b23      	ldrh	r3, [r4, #24]
 802604c:	2103      	movs	r1, #3
 802604e:	fb13 2301 	smlabb	r3, r3, r1, r2
 8026052:	e7f3      	b.n	802603c <_ZN8touchgfx6Canvas6renderEh+0x124>
 8026054:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026058:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802605c:	fb08 2303 	mla	r3, r8, r3, r2
 8026060:	e7ec      	b.n	802603c <_ZN8touchgfx6Canvas6renderEh+0x124>
 8026062:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026066:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802606a:	fb08 f303 	mul.w	r3, r8, r3
 802606e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8026072:	e7e3      	b.n	802603c <_ZN8touchgfx6Canvas6renderEh+0x124>
 8026074:	2701      	movs	r7, #1
 8026076:	e7b4      	b.n	8025fe2 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8026078:	200137d4 	.word	0x200137d4

0802607c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 802607c:	b510      	push	{r4, lr}
 802607e:	4b07      	ldr	r3, [pc, #28]	; (802609c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8026080:	781b      	ldrb	r3, [r3, #0]
 8026082:	2b01      	cmp	r3, #1
 8026084:	d108      	bne.n	8026098 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8026086:	6843      	ldr	r3, [r0, #4]
 8026088:	6814      	ldr	r4, [r2, #0]
 802608a:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802608e:	680b      	ldr	r3, [r1, #0]
 8026090:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8026094:	6013      	str	r3, [r2, #0]
 8026096:	600c      	str	r4, [r1, #0]
 8026098:	bd10      	pop	{r4, pc}
 802609a:	bf00      	nop
 802609c:	200137cc 	.word	0x200137cc

080260a0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 80260a0:	b513      	push	{r0, r1, r4, lr}
 80260a2:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 80260a6:	4604      	mov	r4, r0
 80260a8:	e9cd 2100 	strd	r2, r1, [sp]
 80260ac:	b9a3      	cbnz	r3, 80260d8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 80260ae:	466a      	mov	r2, sp
 80260b0:	a901      	add	r1, sp, #4
 80260b2:	4620      	mov	r0, r4
 80260b4:	f7ff ffe2 	bl	802607c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80260b8:	68a3      	ldr	r3, [r4, #8]
 80260ba:	9901      	ldr	r1, [sp, #4]
 80260bc:	9a00      	ldr	r2, [sp, #0]
 80260be:	1ac9      	subs	r1, r1, r3
 80260c0:	68e3      	ldr	r3, [r4, #12]
 80260c2:	9101      	str	r1, [sp, #4]
 80260c4:	1ad2      	subs	r2, r2, r3
 80260c6:	2a00      	cmp	r2, #0
 80260c8:	9200      	str	r2, [sp, #0]
 80260ca:	da0b      	bge.n	80260e4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 80260cc:	2301      	movs	r3, #1
 80260ce:	2900      	cmp	r1, #0
 80260d0:	da0e      	bge.n	80260f0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 80260d2:	f043 0304 	orr.w	r3, r3, #4
 80260d6:	e013      	b.n	8026100 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 80260d8:	f7ff fefc 	bl	8025ed4 <_ZN8touchgfx6Canvas5closeEv>
 80260dc:	2800      	cmp	r0, #0
 80260de:	d1e6      	bne.n	80260ae <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 80260e0:	b002      	add	sp, #8
 80260e2:	bd10      	pop	{r4, pc}
 80260e4:	6963      	ldr	r3, [r4, #20]
 80260e6:	429a      	cmp	r2, r3
 80260e8:	bfac      	ite	ge
 80260ea:	2302      	movge	r3, #2
 80260ec:	2300      	movlt	r3, #0
 80260ee:	e7ee      	b.n	80260ce <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 80260f0:	6920      	ldr	r0, [r4, #16]
 80260f2:	4281      	cmp	r1, r0
 80260f4:	bfac      	ite	ge
 80260f6:	2008      	movge	r0, #8
 80260f8:	2000      	movlt	r0, #0
 80260fa:	4318      	orrs	r0, r3
 80260fc:	b2c3      	uxtb	r3, r0
 80260fe:	b158      	cbz	r0, 8026118 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8026100:	2200      	movs	r2, #0
 8026102:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8026106:	9901      	ldr	r1, [sp, #4]
 8026108:	9a00      	ldr	r2, [sp, #0]
 802610a:	66a1      	str	r1, [r4, #104]	; 0x68
 802610c:	66e2      	str	r2, [r4, #108]	; 0x6c
 802610e:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8026112:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8026116:	e7e3      	b.n	80260e0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8026118:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802611c:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8026120:	4298      	cmp	r0, r3
 8026122:	d803      	bhi.n	802612c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8026124:	f104 0020 	add.w	r0, r4, #32
 8026128:	f7ed f866 	bl	80131f8 <_ZN8touchgfx7Outline6moveToEii>
 802612c:	2301      	movs	r3, #1
 802612e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8026132:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8026136:	2300      	movs	r3, #0
 8026138:	e7e5      	b.n	8026106 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802613a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802613a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802613c:	ab02      	add	r3, sp, #8
 802613e:	4604      	mov	r4, r0
 8026140:	f843 2d08 	str.w	r2, [r3, #-8]!
 8026144:	9101      	str	r1, [sp, #4]
 8026146:	461a      	mov	r2, r3
 8026148:	a901      	add	r1, sp, #4
 802614a:	f7ff ff97 	bl	802607c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802614e:	68a3      	ldr	r3, [r4, #8]
 8026150:	9901      	ldr	r1, [sp, #4]
 8026152:	9a00      	ldr	r2, [sp, #0]
 8026154:	1ac9      	subs	r1, r1, r3
 8026156:	68e3      	ldr	r3, [r4, #12]
 8026158:	9101      	str	r1, [sp, #4]
 802615a:	1ad2      	subs	r2, r2, r3
 802615c:	2a00      	cmp	r2, #0
 802615e:	9200      	str	r2, [sp, #0]
 8026160:	db1c      	blt.n	802619c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8026162:	6963      	ldr	r3, [r4, #20]
 8026164:	429a      	cmp	r2, r3
 8026166:	bfac      	ite	ge
 8026168:	2002      	movge	r0, #2
 802616a:	2000      	movlt	r0, #0
 802616c:	2900      	cmp	r1, #0
 802616e:	db17      	blt.n	80261a0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8026170:	6923      	ldr	r3, [r4, #16]
 8026172:	4299      	cmp	r1, r3
 8026174:	bfac      	ite	ge
 8026176:	2308      	movge	r3, #8
 8026178:	2300      	movlt	r3, #0
 802617a:	4303      	orrs	r3, r0
 802617c:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8026180:	b2dd      	uxtb	r5, r3
 8026182:	b978      	cbnz	r0, 80261a4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8026184:	f104 0020 	add.w	r0, r4, #32
 8026188:	f7ff fd30 	bl	8025bec <_ZN8touchgfx10Rasterizer6lineToEii>
 802618c:	9b01      	ldr	r3, [sp, #4]
 802618e:	65e3      	str	r3, [r4, #92]	; 0x5c
 8026190:	9b00      	ldr	r3, [sp, #0]
 8026192:	6623      	str	r3, [r4, #96]	; 0x60
 8026194:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8026198:	b002      	add	sp, #8
 802619a:	bd70      	pop	{r4, r5, r6, pc}
 802619c:	2001      	movs	r0, #1
 802619e:	e7e5      	b.n	802616c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 80261a0:	2304      	movs	r3, #4
 80261a2:	e7ea      	b.n	802617a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 80261a4:	b113      	cbz	r3, 80261ac <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 80261a6:	ea10 0305 	ands.w	r3, r0, r5
 80261aa:	d11c      	bne.n	80261e6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 80261ac:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 80261b0:	f104 0620 	add.w	r6, r4, #32
 80261b4:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 80261b8:	b98b      	cbnz	r3, 80261de <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 80261ba:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80261be:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80261c2:	4298      	cmp	r0, r3
 80261c4:	d802      	bhi.n	80261cc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 80261c6:	4630      	mov	r0, r6
 80261c8:	f7ed f816 	bl	80131f8 <_ZN8touchgfx7Outline6moveToEii>
 80261cc:	2301      	movs	r3, #1
 80261ce:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80261d2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80261d6:	e9dd 2100 	ldrd	r2, r1, [sp]
 80261da:	4630      	mov	r0, r6
 80261dc:	e7d4      	b.n	8026188 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 80261de:	4630      	mov	r0, r6
 80261e0:	f7ff fd04 	bl	8025bec <_ZN8touchgfx10Rasterizer6lineToEii>
 80261e4:	e7f7      	b.n	80261d6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 80261e6:	461d      	mov	r5, r3
 80261e8:	e7d0      	b.n	802618c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

080261ec <_ZN8touchgfx6CanvasD1Ev>:
 80261ec:	b510      	push	{r4, lr}
 80261ee:	4b04      	ldr	r3, [pc, #16]	; (8026200 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 80261f0:	4604      	mov	r4, r0
 80261f2:	f840 3b20 	str.w	r3, [r0], #32
 80261f6:	f7ec faf9 	bl	80127ec <_ZN8touchgfx7OutlineD1Ev>
 80261fa:	4620      	mov	r0, r4
 80261fc:	bd10      	pop	{r4, pc}
 80261fe:	bf00      	nop
 8026200:	0802d234 	.word	0x0802d234

08026204 <_ZN8touchgfx6CanvasD0Ev>:
 8026204:	b510      	push	{r4, lr}
 8026206:	4604      	mov	r4, r0
 8026208:	f7ff fff0 	bl	80261ec <_ZN8touchgfx6CanvasD1Ev>
 802620c:	4620      	mov	r0, r4
 802620e:	2170      	movs	r1, #112	; 0x70
 8026210:	f001 fbe5 	bl	80279de <_ZdlPvj>
 8026214:	4620      	mov	r0, r4
 8026216:	bd10      	pop	{r4, pc}

08026218 <_ZN8touchgfx6CircleD1Ev>:
 8026218:	4770      	bx	lr

0802621a <_ZN8touchgfx6CircleD0Ev>:
 802621a:	b510      	push	{r4, lr}
 802621c:	2148      	movs	r1, #72	; 0x48
 802621e:	4604      	mov	r4, r0
 8026220:	f001 fbdd 	bl	80279de <_ZdlPvj>
 8026224:	4620      	mov	r0, r4
 8026226:	bd10      	pop	{r4, pc}

08026228 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8026228:	b508      	push	{r3, lr}
 802622a:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 802622e:	f7ea ffa9 	bl	8011184 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026232:	bd08      	pop	{r3, pc}

08026234 <_ZN8touchgfx6CircleC1Ev>:
 8026234:	b510      	push	{r4, lr}
 8026236:	4604      	mov	r4, r0
 8026238:	f7ea fe40 	bl	8010ebc <_ZN8touchgfx12CanvasWidgetC1Ev>
 802623c:	4b08      	ldr	r3, [pc, #32]	; (8026260 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 802623e:	6023      	str	r3, [r4, #0]
 8026240:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8026244:	2300      	movs	r3, #0
 8026246:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 802624a:	f24b 4205 	movw	r2, #46085	; 0xb405
 802624e:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8026252:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8026256:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 802625a:	60a3      	str	r3, [r4, #8]
 802625c:	4620      	mov	r0, r4
 802625e:	bd10      	pop	{r4, pc}
 8026260:	0802d248 	.word	0x0802d248

08026264 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8026264:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026268:	428a      	cmp	r2, r1
 802626a:	4680      	mov	r8, r0
 802626c:	4610      	mov	r0, r2
 802626e:	4699      	mov	r9, r3
 8026270:	bfa6      	itte	ge
 8026272:	460a      	movge	r2, r1
 8026274:	4603      	movge	r3, r0
 8026276:	460b      	movlt	r3, r1
 8026278:	1a99      	subs	r1, r3, r2
 802627a:	b085      	sub	sp, #20
 802627c:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8026280:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 8026284:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8026286:	bfa4      	itt	ge
 8026288:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 802628c:	2200      	movge	r2, #0
 802628e:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 8026292:	9300      	str	r3, [sp, #0]
 8026294:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 8026298:	f102 0b01 	add.w	fp, r2, #1
 802629c:	2c00      	cmp	r4, #0
 802629e:	f040 80af 	bne.w	8026400 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 80262a2:	4610      	mov	r0, r2
 80262a4:	9201      	str	r2, [sp, #4]
 80262a6:	f7ea ff6d 	bl	8011184 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80262aa:	a903      	add	r1, sp, #12
 80262ac:	9003      	str	r0, [sp, #12]
 80262ae:	4650      	mov	r0, sl
 80262b0:	f7ea fe30 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80262b4:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 80262b8:	9a01      	ldr	r2, [sp, #4]
 80262ba:	4408      	add	r0, r1
 80262bc:	f8d9 1000 	ldr.w	r1, [r9]
 80262c0:	4281      	cmp	r1, r0
 80262c2:	bfc8      	it	gt
 80262c4:	f8c9 0000 	strgt.w	r0, [r9]
 80262c8:	6839      	ldr	r1, [r7, #0]
 80262ca:	4288      	cmp	r0, r1
 80262cc:	bfc8      	it	gt
 80262ce:	6038      	strgt	r0, [r7, #0]
 80262d0:	4610      	mov	r0, r2
 80262d2:	f7ff ffa9 	bl	8026228 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80262d6:	a903      	add	r1, sp, #12
 80262d8:	9003      	str	r0, [sp, #12]
 80262da:	4650      	mov	r0, sl
 80262dc:	f7ea fe1a 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80262e0:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80262e4:	1a10      	subs	r0, r2, r0
 80262e6:	6832      	ldr	r2, [r6, #0]
 80262e8:	4282      	cmp	r2, r0
 80262ea:	bfc8      	it	gt
 80262ec:	6030      	strgt	r0, [r6, #0]
 80262ee:	682a      	ldr	r2, [r5, #0]
 80262f0:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 80262f4:	4290      	cmp	r0, r2
 80262f6:	fb9b f2f1 	sdiv	r2, fp, r1
 80262fa:	fb01 b212 	mls	r2, r1, r2, fp
 80262fe:	eba1 0202 	sub.w	r2, r1, r2
 8026302:	bfc8      	it	gt
 8026304:	6028      	strgt	r0, [r5, #0]
 8026306:	fb92 f0f1 	sdiv	r0, r2, r1
 802630a:	fb01 2210 	mls	r2, r1, r0, r2
 802630e:	4493      	add	fp, r2
 8026310:	9b00      	ldr	r3, [sp, #0]
 8026312:	455b      	cmp	r3, fp
 8026314:	db2a      	blt.n	802636c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 8026316:	4658      	mov	r0, fp
 8026318:	f7ea ff34 	bl	8011184 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802631c:	a903      	add	r1, sp, #12
 802631e:	9003      	str	r0, [sp, #12]
 8026320:	4650      	mov	r0, sl
 8026322:	f7ea fdf7 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026326:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802632a:	4410      	add	r0, r2
 802632c:	f8d9 2000 	ldr.w	r2, [r9]
 8026330:	4282      	cmp	r2, r0
 8026332:	bfc8      	it	gt
 8026334:	f8c9 0000 	strgt.w	r0, [r9]
 8026338:	683a      	ldr	r2, [r7, #0]
 802633a:	4290      	cmp	r0, r2
 802633c:	bfc8      	it	gt
 802633e:	6038      	strgt	r0, [r7, #0]
 8026340:	4658      	mov	r0, fp
 8026342:	f7ff ff71 	bl	8026228 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026346:	a903      	add	r1, sp, #12
 8026348:	9003      	str	r0, [sp, #12]
 802634a:	4650      	mov	r0, sl
 802634c:	f7ea fde2 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026350:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026354:	1a10      	subs	r0, r2, r0
 8026356:	6832      	ldr	r2, [r6, #0]
 8026358:	4282      	cmp	r2, r0
 802635a:	bfc8      	it	gt
 802635c:	6030      	strgt	r0, [r6, #0]
 802635e:	682a      	ldr	r2, [r5, #0]
 8026360:	4290      	cmp	r0, r2
 8026362:	bfc8      	it	gt
 8026364:	6028      	strgt	r0, [r5, #0]
 8026366:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802636a:	e7d1      	b.n	8026310 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 802636c:	9b00      	ldr	r3, [sp, #0]
 802636e:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8026372:	455b      	cmp	r3, fp
 8026374:	dd27      	ble.n	80263c6 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 8026376:	4618      	mov	r0, r3
 8026378:	f7ea ff04 	bl	8011184 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802637c:	a903      	add	r1, sp, #12
 802637e:	9003      	str	r0, [sp, #12]
 8026380:	4650      	mov	r0, sl
 8026382:	f7ea fdc7 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026386:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802638a:	4410      	add	r0, r2
 802638c:	f8d9 2000 	ldr.w	r2, [r9]
 8026390:	4282      	cmp	r2, r0
 8026392:	bfc8      	it	gt
 8026394:	f8c9 0000 	strgt.w	r0, [r9]
 8026398:	683a      	ldr	r2, [r7, #0]
 802639a:	4290      	cmp	r0, r2
 802639c:	bfc8      	it	gt
 802639e:	6038      	strgt	r0, [r7, #0]
 80263a0:	9800      	ldr	r0, [sp, #0]
 80263a2:	f7ff ff41 	bl	8026228 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80263a6:	a903      	add	r1, sp, #12
 80263a8:	9003      	str	r0, [sp, #12]
 80263aa:	4650      	mov	r0, sl
 80263ac:	f7ea fdb2 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80263b0:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80263b4:	1a10      	subs	r0, r2, r0
 80263b6:	6832      	ldr	r2, [r6, #0]
 80263b8:	4282      	cmp	r2, r0
 80263ba:	bfc8      	it	gt
 80263bc:	6030      	strgt	r0, [r6, #0]
 80263be:	682a      	ldr	r2, [r5, #0]
 80263c0:	4290      	cmp	r0, r2
 80263c2:	bfc8      	it	gt
 80263c4:	6028      	strgt	r0, [r5, #0]
 80263c6:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80263ca:	f8d9 1000 	ldr.w	r1, [r9]
 80263ce:	4291      	cmp	r1, r2
 80263d0:	bfc8      	it	gt
 80263d2:	f8c9 2000 	strgt.w	r2, [r9]
 80263d6:	683a      	ldr	r2, [r7, #0]
 80263d8:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 80263dc:	429a      	cmp	r2, r3
 80263de:	bfb8      	it	lt
 80263e0:	603b      	strlt	r3, [r7, #0]
 80263e2:	6832      	ldr	r2, [r6, #0]
 80263e4:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80263e8:	429a      	cmp	r2, r3
 80263ea:	bfc8      	it	gt
 80263ec:	6033      	strgt	r3, [r6, #0]
 80263ee:	682a      	ldr	r2, [r5, #0]
 80263f0:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80263f4:	429a      	cmp	r2, r3
 80263f6:	da00      	bge.n	80263fa <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 80263f8:	602b      	str	r3, [r5, #0]
 80263fa:	b005      	add	sp, #20
 80263fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026400:	2002      	movs	r0, #2
 8026402:	3401      	adds	r4, #1
 8026404:	fb94 f4f0 	sdiv	r4, r4, r0
 8026408:	4610      	mov	r0, r2
 802640a:	9201      	str	r2, [sp, #4]
 802640c:	f7ea feba 	bl	8011184 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026410:	a903      	add	r1, sp, #12
 8026412:	9003      	str	r0, [sp, #12]
 8026414:	4650      	mov	r0, sl
 8026416:	f7ea fd7d 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802641a:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 802641e:	9a01      	ldr	r2, [sp, #4]
 8026420:	4408      	add	r0, r1
 8026422:	f8d9 1000 	ldr.w	r1, [r9]
 8026426:	1b03      	subs	r3, r0, r4
 8026428:	4299      	cmp	r1, r3
 802642a:	bfc8      	it	gt
 802642c:	f8c9 3000 	strgt.w	r3, [r9]
 8026430:	6839      	ldr	r1, [r7, #0]
 8026432:	428b      	cmp	r3, r1
 8026434:	bfc8      	it	gt
 8026436:	603b      	strgt	r3, [r7, #0]
 8026438:	f8d9 1000 	ldr.w	r1, [r9]
 802643c:	4420      	add	r0, r4
 802643e:	4281      	cmp	r1, r0
 8026440:	bfc8      	it	gt
 8026442:	f8c9 0000 	strgt.w	r0, [r9]
 8026446:	6839      	ldr	r1, [r7, #0]
 8026448:	4288      	cmp	r0, r1
 802644a:	bfc8      	it	gt
 802644c:	6038      	strgt	r0, [r7, #0]
 802644e:	4610      	mov	r0, r2
 8026450:	f7ff feea 	bl	8026228 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026454:	a903      	add	r1, sp, #12
 8026456:	9003      	str	r0, [sp, #12]
 8026458:	4650      	mov	r0, sl
 802645a:	f7ea fd5b 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802645e:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026462:	1a10      	subs	r0, r2, r0
 8026464:	6832      	ldr	r2, [r6, #0]
 8026466:	1b01      	subs	r1, r0, r4
 8026468:	428a      	cmp	r2, r1
 802646a:	bfc8      	it	gt
 802646c:	6031      	strgt	r1, [r6, #0]
 802646e:	682a      	ldr	r2, [r5, #0]
 8026470:	4291      	cmp	r1, r2
 8026472:	bfc8      	it	gt
 8026474:	6029      	strgt	r1, [r5, #0]
 8026476:	6832      	ldr	r2, [r6, #0]
 8026478:	4420      	add	r0, r4
 802647a:	4282      	cmp	r2, r0
 802647c:	bfc8      	it	gt
 802647e:	6030      	strgt	r0, [r6, #0]
 8026480:	682a      	ldr	r2, [r5, #0]
 8026482:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8026486:	4290      	cmp	r0, r2
 8026488:	fb9b f2f1 	sdiv	r2, fp, r1
 802648c:	fb01 b212 	mls	r2, r1, r2, fp
 8026490:	eba1 0202 	sub.w	r2, r1, r2
 8026494:	bfc8      	it	gt
 8026496:	6028      	strgt	r0, [r5, #0]
 8026498:	fb92 f0f1 	sdiv	r0, r2, r1
 802649c:	fb01 2210 	mls	r2, r1, r0, r2
 80264a0:	4493      	add	fp, r2
 80264a2:	9b00      	ldr	r3, [sp, #0]
 80264a4:	455b      	cmp	r3, fp
 80264a6:	db40      	blt.n	802652a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 80264a8:	4658      	mov	r0, fp
 80264aa:	f7ea fe6b 	bl	8011184 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80264ae:	a903      	add	r1, sp, #12
 80264b0:	9003      	str	r0, [sp, #12]
 80264b2:	4650      	mov	r0, sl
 80264b4:	f7ea fd2e 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80264b8:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80264bc:	4410      	add	r0, r2
 80264be:	f8d9 2000 	ldr.w	r2, [r9]
 80264c2:	1b01      	subs	r1, r0, r4
 80264c4:	428a      	cmp	r2, r1
 80264c6:	bfc8      	it	gt
 80264c8:	f8c9 1000 	strgt.w	r1, [r9]
 80264cc:	683a      	ldr	r2, [r7, #0]
 80264ce:	4291      	cmp	r1, r2
 80264d0:	bfc8      	it	gt
 80264d2:	6039      	strgt	r1, [r7, #0]
 80264d4:	f8d9 2000 	ldr.w	r2, [r9]
 80264d8:	4420      	add	r0, r4
 80264da:	4282      	cmp	r2, r0
 80264dc:	bfc8      	it	gt
 80264de:	f8c9 0000 	strgt.w	r0, [r9]
 80264e2:	683a      	ldr	r2, [r7, #0]
 80264e4:	4290      	cmp	r0, r2
 80264e6:	bfc8      	it	gt
 80264e8:	6038      	strgt	r0, [r7, #0]
 80264ea:	4658      	mov	r0, fp
 80264ec:	f7ff fe9c 	bl	8026228 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80264f0:	a903      	add	r1, sp, #12
 80264f2:	9003      	str	r0, [sp, #12]
 80264f4:	4650      	mov	r0, sl
 80264f6:	f7ea fd0d 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80264fa:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80264fe:	1a10      	subs	r0, r2, r0
 8026500:	6832      	ldr	r2, [r6, #0]
 8026502:	1b01      	subs	r1, r0, r4
 8026504:	428a      	cmp	r2, r1
 8026506:	bfc8      	it	gt
 8026508:	6031      	strgt	r1, [r6, #0]
 802650a:	682a      	ldr	r2, [r5, #0]
 802650c:	4291      	cmp	r1, r2
 802650e:	bfc8      	it	gt
 8026510:	6029      	strgt	r1, [r5, #0]
 8026512:	6832      	ldr	r2, [r6, #0]
 8026514:	4420      	add	r0, r4
 8026516:	4282      	cmp	r2, r0
 8026518:	bfc8      	it	gt
 802651a:	6030      	strgt	r0, [r6, #0]
 802651c:	682a      	ldr	r2, [r5, #0]
 802651e:	4290      	cmp	r0, r2
 8026520:	bfc8      	it	gt
 8026522:	6028      	strgt	r0, [r5, #0]
 8026524:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8026528:	e7bb      	b.n	80264a2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 802652a:	9b00      	ldr	r3, [sp, #0]
 802652c:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8026530:	455b      	cmp	r3, fp
 8026532:	f77f af62 	ble.w	80263fa <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8026536:	4618      	mov	r0, r3
 8026538:	f7ea fe24 	bl	8011184 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802653c:	a903      	add	r1, sp, #12
 802653e:	9003      	str	r0, [sp, #12]
 8026540:	4650      	mov	r0, sl
 8026542:	f7ea fce7 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026546:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802654a:	4410      	add	r0, r2
 802654c:	f8d9 2000 	ldr.w	r2, [r9]
 8026550:	1b01      	subs	r1, r0, r4
 8026552:	428a      	cmp	r2, r1
 8026554:	bfc8      	it	gt
 8026556:	f8c9 1000 	strgt.w	r1, [r9]
 802655a:	683a      	ldr	r2, [r7, #0]
 802655c:	4291      	cmp	r1, r2
 802655e:	bfc8      	it	gt
 8026560:	6039      	strgt	r1, [r7, #0]
 8026562:	f8d9 2000 	ldr.w	r2, [r9]
 8026566:	4420      	add	r0, r4
 8026568:	4282      	cmp	r2, r0
 802656a:	bfc8      	it	gt
 802656c:	f8c9 0000 	strgt.w	r0, [r9]
 8026570:	683b      	ldr	r3, [r7, #0]
 8026572:	4298      	cmp	r0, r3
 8026574:	bfc8      	it	gt
 8026576:	6038      	strgt	r0, [r7, #0]
 8026578:	9800      	ldr	r0, [sp, #0]
 802657a:	f7ff fe55 	bl	8026228 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802657e:	a903      	add	r1, sp, #12
 8026580:	9003      	str	r0, [sp, #12]
 8026582:	4650      	mov	r0, sl
 8026584:	f7ea fcc6 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026588:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802658c:	6832      	ldr	r2, [r6, #0]
 802658e:	1a18      	subs	r0, r3, r0
 8026590:	1b03      	subs	r3, r0, r4
 8026592:	429a      	cmp	r2, r3
 8026594:	bfc8      	it	gt
 8026596:	6033      	strgt	r3, [r6, #0]
 8026598:	682a      	ldr	r2, [r5, #0]
 802659a:	4293      	cmp	r3, r2
 802659c:	bfc8      	it	gt
 802659e:	602b      	strgt	r3, [r5, #0]
 80265a0:	6833      	ldr	r3, [r6, #0]
 80265a2:	4404      	add	r4, r0
 80265a4:	42a3      	cmp	r3, r4
 80265a6:	bfc8      	it	gt
 80265a8:	6034      	strgt	r4, [r6, #0]
 80265aa:	682b      	ldr	r3, [r5, #0]
 80265ac:	429c      	cmp	r4, r3
 80265ae:	bfc8      	it	gt
 80265b0:	602c      	strgt	r4, [r5, #0]
 80265b2:	e722      	b.n	80263fa <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

080265b4 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 80265b4:	b530      	push	{r4, r5, lr}
 80265b6:	4604      	mov	r4, r0
 80265b8:	4608      	mov	r0, r1
 80265ba:	4611      	mov	r1, r2
 80265bc:	461a      	mov	r2, r3
 80265be:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80265c2:	b089      	sub	sp, #36	; 0x24
 80265c4:	015b      	lsls	r3, r3, #5
 80265c6:	9304      	str	r3, [sp, #16]
 80265c8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80265cc:	2500      	movs	r5, #0
 80265ce:	015b      	lsls	r3, r3, #5
 80265d0:	e9cd 3506 	strd	r3, r5, [sp, #24]
 80265d4:	ab07      	add	r3, sp, #28
 80265d6:	9302      	str	r3, [sp, #8]
 80265d8:	ab06      	add	r3, sp, #24
 80265da:	9301      	str	r3, [sp, #4]
 80265dc:	ab05      	add	r3, sp, #20
 80265de:	9300      	str	r3, [sp, #0]
 80265e0:	ab04      	add	r3, sp, #16
 80265e2:	9505      	str	r5, [sp, #20]
 80265e4:	f7ff fe3e 	bl	8026264 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 80265e8:	2520      	movs	r5, #32
 80265ea:	9a04      	ldr	r2, [sp, #16]
 80265ec:	9805      	ldr	r0, [sp, #20]
 80265ee:	fb92 f2f5 	sdiv	r2, r2, r5
 80265f2:	fb90 f0f5 	sdiv	r0, r0, r5
 80265f6:	b292      	uxth	r2, r2
 80265f8:	3002      	adds	r0, #2
 80265fa:	1a80      	subs	r0, r0, r2
 80265fc:	9b06      	ldr	r3, [sp, #24]
 80265fe:	9907      	ldr	r1, [sp, #28]
 8026600:	fb93 f3f5 	sdiv	r3, r3, r5
 8026604:	fb91 f1f5 	sdiv	r1, r1, r5
 8026608:	b29b      	uxth	r3, r3
 802660a:	3102      	adds	r1, #2
 802660c:	1ac9      	subs	r1, r1, r3
 802660e:	3a01      	subs	r2, #1
 8026610:	3b01      	subs	r3, #1
 8026612:	80a0      	strh	r0, [r4, #4]
 8026614:	4620      	mov	r0, r4
 8026616:	8022      	strh	r2, [r4, #0]
 8026618:	8063      	strh	r3, [r4, #2]
 802661a:	80e1      	strh	r1, [r4, #6]
 802661c:	b009      	add	sp, #36	; 0x24
 802661e:	bd30      	pop	{r4, r5, pc}

08026620 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8026620:	b510      	push	{r4, lr}
 8026622:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 8026626:	4604      	mov	r4, r0
 8026628:	f7ff ffc4 	bl	80265b4 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 802662c:	4620      	mov	r0, r4
 802662e:	bd10      	pop	{r4, pc}

08026630 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8026630:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026632:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 8026636:	4606      	mov	r6, r0
 8026638:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 802663c:	6813      	ldr	r3, [r2, #0]
 802663e:	42a5      	cmp	r5, r4
 8026640:	ea4f 1040 	mov.w	r0, r0, lsl #5
 8026644:	da2b      	bge.n	802669e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 8026646:	42a3      	cmp	r3, r4
 8026648:	dd14      	ble.n	8026674 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 802664a:	b168      	cbz	r0, 8026668 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802664c:	4267      	negs	r7, r4
 802664e:	fb97 f2f0 	sdiv	r2, r7, r0
 8026652:	fb00 7212 	mls	r2, r0, r2, r7
 8026656:	1a82      	subs	r2, r0, r2
 8026658:	fb92 f7f0 	sdiv	r7, r2, r0
 802665c:	fb00 2017 	mls	r0, r0, r7, r2
 8026660:	1a24      	subs	r4, r4, r0
 8026662:	42ac      	cmp	r4, r5
 8026664:	bfb8      	it	lt
 8026666:	462c      	movlt	r4, r5
 8026668:	4630      	mov	r0, r6
 802666a:	4622      	mov	r2, r4
 802666c:	f7ff ffa2 	bl	80265b4 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8026670:	4630      	mov	r0, r6
 8026672:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8026674:	42ab      	cmp	r3, r5
 8026676:	dd0e      	ble.n	8026696 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8026678:	b168      	cbz	r0, 8026696 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802667a:	425f      	negs	r7, r3
 802667c:	fb97 f2f0 	sdiv	r2, r7, r0
 8026680:	fb00 7212 	mls	r2, r0, r2, r7
 8026684:	1a82      	subs	r2, r0, r2
 8026686:	fb92 f7f0 	sdiv	r7, r2, r0
 802668a:	fb00 2017 	mls	r0, r0, r7, r2
 802668e:	1a1b      	subs	r3, r3, r0
 8026690:	42ab      	cmp	r3, r5
 8026692:	bfb8      	it	lt
 8026694:	462b      	movlt	r3, r5
 8026696:	4622      	mov	r2, r4
 8026698:	461c      	mov	r4, r3
 802669a:	4613      	mov	r3, r2
 802669c:	e7e4      	b.n	8026668 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802669e:	42a3      	cmp	r3, r4
 80266a0:	da10      	bge.n	80266c4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 80266a2:	b148      	cbz	r0, 80266b8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 80266a4:	fb94 f2f0 	sdiv	r2, r4, r0
 80266a8:	fb00 4212 	mls	r2, r0, r2, r4
 80266ac:	1a82      	subs	r2, r0, r2
 80266ae:	fb92 f7f0 	sdiv	r7, r2, r0
 80266b2:	fb00 2017 	mls	r0, r0, r7, r2
 80266b6:	4404      	add	r4, r0
 80266b8:	42a5      	cmp	r5, r4
 80266ba:	bfa8      	it	ge
 80266bc:	4625      	movge	r5, r4
 80266be:	461c      	mov	r4, r3
 80266c0:	462b      	mov	r3, r5
 80266c2:	e7d1      	b.n	8026668 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80266c4:	42ab      	cmp	r3, r5
 80266c6:	dacf      	bge.n	8026668 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80266c8:	2800      	cmp	r0, #0
 80266ca:	d0cd      	beq.n	8026668 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80266cc:	fb93 f2f0 	sdiv	r2, r3, r0
 80266d0:	fb00 3212 	mls	r2, r0, r2, r3
 80266d4:	1a82      	subs	r2, r0, r2
 80266d6:	fb92 f7f0 	sdiv	r7, r2, r0
 80266da:	fb00 2017 	mls	r0, r0, r7, r2
 80266de:	4403      	add	r3, r0
 80266e0:	42ab      	cmp	r3, r5
 80266e2:	bfa8      	it	ge
 80266e4:	462b      	movge	r3, r5
 80266e6:	e7bf      	b.n	8026668 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

080266e8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 80266e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80266ec:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 80266f0:	42ae      	cmp	r6, r5
 80266f2:	bfa2      	ittt	ge
 80266f4:	4633      	movge	r3, r6
 80266f6:	462e      	movge	r6, r5
 80266f8:	461d      	movge	r5, r3
 80266fa:	1bab      	subs	r3, r5, r6
 80266fc:	468b      	mov	fp, r1
 80266fe:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8026700:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 8026704:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 8026708:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802670c:	f04f 0220 	mov.w	r2, #32
 8026710:	b0ab      	sub	sp, #172	; 0xac
 8026712:	4604      	mov	r4, r0
 8026714:	bfa4      	itt	ge
 8026716:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 802671a:	2600      	movge	r6, #0
 802671c:	fb99 f9f2 	sdiv	r9, r9, r2
 8026720:	fb9a faf2 	sdiv	sl, sl, r2
 8026724:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8026726:	2900      	cmp	r1, #0
 8026728:	f000 80f5 	beq.w	8026916 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 802672c:	f9bb 0000 	ldrsh.w	r0, [fp]
 8026730:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 8026734:	eba9 0700 	sub.w	r7, r9, r0
 8026738:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 802673c:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8026740:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 8026744:	ebaa 0802 	sub.w	r8, sl, r2
 8026748:	4407      	add	r7, r0
 802674a:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 802674e:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8026752:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 8026756:	b23f      	sxth	r7, r7
 8026758:	4490      	add	r8, r2
 802675a:	eba9 0707 	sub.w	r7, r9, r7
 802675e:	fa0f f888 	sxth.w	r8, r8
 8026762:	ebaa 0808 	sub.w	r8, sl, r8
 8026766:	2f00      	cmp	r7, #0
 8026768:	bfb8      	it	lt
 802676a:	427f      	neglt	r7, r7
 802676c:	f1b8 0f00 	cmp.w	r8, #0
 8026770:	bfb8      	it	lt
 8026772:	f1c8 0800 	rsblt	r8, r8, #0
 8026776:	45bc      	cmp	ip, r7
 8026778:	bfcc      	ite	gt
 802677a:	f10c 0701 	addgt.w	r7, ip, #1
 802677e:	3701      	addle	r7, #1
 8026780:	4540      	cmp	r0, r8
 8026782:	bfc8      	it	gt
 8026784:	f100 0801 	addgt.w	r8, r0, #1
 8026788:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 802678c:	f100 0001 	add.w	r0, r0, #1
 8026790:	ea4f 0060 	mov.w	r0, r0, asr #1
 8026794:	f04f 0202 	mov.w	r2, #2
 8026798:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 802679c:	fb91 f1f2 	sdiv	r1, r1, r2
 80267a0:	eba3 0301 	sub.w	r3, r3, r1
 80267a4:	bfd8      	it	le
 80267a6:	f108 0801 	addle.w	r8, r8, #1
 80267aa:	9201      	str	r2, [sp, #4]
 80267ac:	930d      	str	r3, [sp, #52]	; 0x34
 80267ae:	f7ea fcc9 	bl	8011144 <_ZN8touchgfx7CWRUtil4sineEi>
 80267b2:	a92a      	add	r1, sp, #168	; 0xa8
 80267b4:	fb08 f808 	mul.w	r8, r8, r8
 80267b8:	f841 0d70 	str.w	r0, [r1, #-112]!
 80267bc:	a80d      	add	r0, sp, #52	; 0x34
 80267be:	f7ea fba9 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80267c2:	fb07 8707 	mla	r7, r7, r7, r8
 80267c6:	f04f 0c20 	mov.w	ip, #32
 80267ca:	fb90 f0fc 	sdiv	r0, r0, ip
 80267ce:	4340      	muls	r0, r0
 80267d0:	4287      	cmp	r7, r0
 80267d2:	9a01      	ldr	r2, [sp, #4]
 80267d4:	da04      	bge.n	80267e0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 80267d6:	2401      	movs	r4, #1
 80267d8:	4620      	mov	r0, r4
 80267da:	b02b      	add	sp, #172	; 0xac
 80267dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80267e0:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80267e2:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80267e4:	fb91 f3f2 	sdiv	r3, r1, r2
 80267e8:	4403      	add	r3, r0
 80267ea:	fb93 f3fc 	sdiv	r3, r3, ip
 80267ee:	f9bb 1000 	ldrsh.w	r1, [fp]
 80267f2:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 80267f6:	440a      	add	r2, r1
 80267f8:	b212      	sxth	r2, r2
 80267fa:	454a      	cmp	r2, r9
 80267fc:	bfa8      	it	ge
 80267fe:	464a      	movge	r2, r9
 8026800:	428a      	cmp	r2, r1
 8026802:	bfac      	ite	ge
 8026804:	eba9 0902 	subge.w	r9, r9, r2
 8026808:	eba9 0901 	sublt.w	r9, r9, r1
 802680c:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8026810:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8026814:	440a      	add	r2, r1
 8026816:	b212      	sxth	r2, r2
 8026818:	4552      	cmp	r2, sl
 802681a:	bfa8      	it	ge
 802681c:	4652      	movge	r2, sl
 802681e:	428a      	cmp	r2, r1
 8026820:	bfac      	ite	ge
 8026822:	ebaa 0a02 	subge.w	sl, sl, r2
 8026826:	ebaa 0a01 	sublt.w	sl, sl, r1
 802682a:	3301      	adds	r3, #1
 802682c:	fb0a fa0a 	mul.w	sl, sl, sl
 8026830:	fb09 a909 	mla	r9, r9, r9, sl
 8026834:	435b      	muls	r3, r3
 8026836:	4599      	cmp	r9, r3
 8026838:	dccd      	bgt.n	80267d6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 802683a:	465a      	mov	r2, fp
 802683c:	4621      	mov	r1, r4
 802683e:	a80e      	add	r0, sp, #56	; 0x38
 8026840:	f7ff faae 	bl	8025da0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8026844:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8026846:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8026848:	9209      	str	r2, [sp, #36]	; 0x24
 802684a:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 802684e:	930a      	str	r3, [sp, #40]	; 0x28
 8026850:	dd07      	ble.n	8026862 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 8026852:	2102      	movs	r1, #2
 8026854:	fb93 f3f1 	sdiv	r3, r3, r1
 8026858:	4413      	add	r3, r2
 802685a:	930a      	str	r3, [sp, #40]	; 0x28
 802685c:	fb93 f3f1 	sdiv	r3, r3, r1
 8026860:	9309      	str	r3, [sp, #36]	; 0x24
 8026862:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8026866:	4630      	mov	r0, r6
 8026868:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802686c:	930b      	str	r3, [sp, #44]	; 0x2c
 802686e:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8026872:	f7ea fc87 	bl	8011184 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026876:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 802687a:	f04f 0a02 	mov.w	sl, #2
 802687e:	f849 0d74 	str.w	r0, [r9, #-116]!
 8026882:	a80b      	add	r0, sp, #44	; 0x2c
 8026884:	4649      	mov	r1, r9
 8026886:	f7ea fb45 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802688a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802688c:	fb90 f0fa 	sdiv	r0, r0, sl
 8026890:	eb00 0b03 	add.w	fp, r0, r3
 8026894:	4630      	mov	r0, r6
 8026896:	f7ff fcc7 	bl	8026228 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802689a:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 802689e:	017f      	lsls	r7, r7, #5
 80268a0:	f848 0d78 	str.w	r0, [r8, #-120]!
 80268a4:	a80b      	add	r0, sp, #44	; 0x2c
 80268a6:	4641      	mov	r1, r8
 80268a8:	f7ea fb34 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80268ac:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80268ae:	fb90 f0fa 	sdiv	r0, r0, sl
 80268b2:	4659      	mov	r1, fp
 80268b4:	1a12      	subs	r2, r2, r0
 80268b6:	a80e      	add	r0, sp, #56	; 0x38
 80268b8:	f7ff fbf2 	bl	80260a0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80268bc:	f106 0a20 	add.w	sl, r6, #32
 80268c0:	bb67      	cbnz	r7, 802691c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 80268c2:	46b3      	mov	fp, r6
 80268c4:	45aa      	cmp	sl, r5
 80268c6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80268c8:	dc33      	bgt.n	8026932 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 80268ca:	9909      	ldr	r1, [sp, #36]	; 0x24
 80268cc:	4650      	mov	r0, sl
 80268ce:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 80268d2:	920b      	str	r2, [sp, #44]	; 0x2c
 80268d4:	f7ea fc56 	bl	8011184 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80268d8:	4641      	mov	r1, r8
 80268da:	900c      	str	r0, [sp, #48]	; 0x30
 80268dc:	a80b      	add	r0, sp, #44	; 0x2c
 80268de:	f7ea fb19 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80268e2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80268e4:	2302      	movs	r3, #2
 80268e6:	fb90 f0f3 	sdiv	r0, r0, r3
 80268ea:	eb00 0b02 	add.w	fp, r0, r2
 80268ee:	4650      	mov	r0, sl
 80268f0:	f7ff fc9a 	bl	8026228 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80268f4:	4649      	mov	r1, r9
 80268f6:	900d      	str	r0, [sp, #52]	; 0x34
 80268f8:	a80b      	add	r0, sp, #44	; 0x2c
 80268fa:	f7ea fb0b 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80268fe:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026900:	2302      	movs	r3, #2
 8026902:	4659      	mov	r1, fp
 8026904:	fb90 f0f3 	sdiv	r0, r0, r3
 8026908:	1a12      	subs	r2, r2, r0
 802690a:	a80e      	add	r0, sp, #56	; 0x38
 802690c:	46d3      	mov	fp, sl
 802690e:	f7ff fc14 	bl	802613a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026912:	44ba      	add	sl, r7
 8026914:	e7d6      	b.n	80268c4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 8026916:	fb93 f3f2 	sdiv	r3, r3, r2
 802691a:	e768      	b.n	80267ee <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 802691c:	fb9a f2f7 	sdiv	r2, sl, r7
 8026920:	fb07 a212 	mls	r2, r7, r2, sl
 8026924:	1aba      	subs	r2, r7, r2
 8026926:	fb92 f1f7 	sdiv	r1, r2, r7
 802692a:	fb07 2211 	mls	r2, r7, r1, r2
 802692e:	4492      	add	sl, r2
 8026930:	e7c7      	b.n	80268c2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 8026932:	45ab      	cmp	fp, r5
 8026934:	da23      	bge.n	802697e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 8026936:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026938:	4628      	mov	r0, r5
 802693a:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 802693e:	920b      	str	r2, [sp, #44]	; 0x2c
 8026940:	f7ea fc20 	bl	8011184 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026944:	4641      	mov	r1, r8
 8026946:	900c      	str	r0, [sp, #48]	; 0x30
 8026948:	a80b      	add	r0, sp, #44	; 0x2c
 802694a:	f7ea fae3 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802694e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026950:	f04f 0a02 	mov.w	sl, #2
 8026954:	fb90 f0fa 	sdiv	r0, r0, sl
 8026958:	4403      	add	r3, r0
 802695a:	4628      	mov	r0, r5
 802695c:	9301      	str	r3, [sp, #4]
 802695e:	f7ff fc63 	bl	8026228 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026962:	4649      	mov	r1, r9
 8026964:	900d      	str	r0, [sp, #52]	; 0x34
 8026966:	a80b      	add	r0, sp, #44	; 0x2c
 8026968:	f7ea fad4 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802696c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802696e:	9b01      	ldr	r3, [sp, #4]
 8026970:	fb90 f0fa 	sdiv	r0, r0, sl
 8026974:	4619      	mov	r1, r3
 8026976:	1a12      	subs	r2, r2, r0
 8026978:	a80e      	add	r0, sp, #56	; 0x38
 802697a:	f7ff fbde 	bl	802613a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802697e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026980:	b99b      	cbnz	r3, 80269aa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8026982:	1bad      	subs	r5, r5, r6
 8026984:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8026988:	da04      	bge.n	8026994 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802698a:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 802698e:	a80e      	add	r0, sp, #56	; 0x38
 8026990:	f7ff fbd3 	bl	802613a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026994:	21ff      	movs	r1, #255	; 0xff
 8026996:	a80e      	add	r0, sp, #56	; 0x38
 8026998:	f7ff fabe 	bl	8025f18 <_ZN8touchgfx6Canvas6renderEh>
 802699c:	4604      	mov	r4, r0
 802699e:	4b8a      	ldr	r3, [pc, #552]	; (8026bc8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 80269a0:	930e      	str	r3, [sp, #56]	; 0x38
 80269a2:	a816      	add	r0, sp, #88	; 0x58
 80269a4:	f7eb ff22 	bl	80127ec <_ZN8touchgfx7OutlineD1Ev>
 80269a8:	e716      	b.n	80267d8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 80269aa:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 80269ae:	429a      	cmp	r2, r3
 80269b0:	f0c0 8107 	bcc.w	8026bc2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 80269b4:	1bab      	subs	r3, r5, r6
 80269b6:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 80269ba:	9301      	str	r3, [sp, #4]
 80269bc:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80269c0:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 80269c4:	da43      	bge.n	8026a4e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 80269c6:	4628      	mov	r0, r5
 80269c8:	f7ea fbdc 	bl	8011184 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80269cc:	4649      	mov	r1, r9
 80269ce:	900d      	str	r0, [sp, #52]	; 0x34
 80269d0:	a809      	add	r0, sp, #36	; 0x24
 80269d2:	f7ea fa9f 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80269d6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80269d8:	18c3      	adds	r3, r0, r3
 80269da:	4628      	mov	r0, r5
 80269dc:	9303      	str	r3, [sp, #12]
 80269de:	f7ff fc23 	bl	8026228 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80269e2:	4649      	mov	r1, r9
 80269e4:	900d      	str	r0, [sp, #52]	; 0x34
 80269e6:	a809      	add	r0, sp, #36	; 0x24
 80269e8:	f7ea fa94 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80269ec:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80269ee:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 80269f2:	1a1b      	subs	r3, r3, r0
 80269f4:	9302      	str	r3, [sp, #8]
 80269f6:	9204      	str	r2, [sp, #16]
 80269f8:	eb0a 0305 	add.w	r3, sl, r5
 80269fc:	9a04      	ldr	r2, [sp, #16]
 80269fe:	4293      	cmp	r3, r2
 8026a00:	da25      	bge.n	8026a4e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8026a02:	4618      	mov	r0, r3
 8026a04:	9306      	str	r3, [sp, #24]
 8026a06:	f7ea fbbd 	bl	8011184 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026a0a:	4649      	mov	r1, r9
 8026a0c:	900d      	str	r0, [sp, #52]	; 0x34
 8026a0e:	a80a      	add	r0, sp, #40	; 0x28
 8026a10:	f7ea fa80 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026a14:	9b03      	ldr	r3, [sp, #12]
 8026a16:	2202      	movs	r2, #2
 8026a18:	fb90 f0f2 	sdiv	r0, r0, r2
 8026a1c:	18c3      	adds	r3, r0, r3
 8026a1e:	9305      	str	r3, [sp, #20]
 8026a20:	9b06      	ldr	r3, [sp, #24]
 8026a22:	9207      	str	r2, [sp, #28]
 8026a24:	4618      	mov	r0, r3
 8026a26:	f7ff fbff 	bl	8026228 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026a2a:	a92a      	add	r1, sp, #168	; 0xa8
 8026a2c:	f841 0d78 	str.w	r0, [r1, #-120]!
 8026a30:	a80a      	add	r0, sp, #40	; 0x28
 8026a32:	f7ea fa6f 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026a36:	9b02      	ldr	r3, [sp, #8]
 8026a38:	9a07      	ldr	r2, [sp, #28]
 8026a3a:	9905      	ldr	r1, [sp, #20]
 8026a3c:	fb90 f2f2 	sdiv	r2, r0, r2
 8026a40:	a80e      	add	r0, sp, #56	; 0x38
 8026a42:	1a9a      	subs	r2, r3, r2
 8026a44:	f7ff fb79 	bl	802613a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026a48:	9b06      	ldr	r3, [sp, #24]
 8026a4a:	4453      	add	r3, sl
 8026a4c:	e7d6      	b.n	80269fc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8026a4e:	45ab      	cmp	fp, r5
 8026a50:	da25      	bge.n	8026a9e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8026a52:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8026a56:	4628      	mov	r0, r5
 8026a58:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8026a5c:	930b      	str	r3, [sp, #44]	; 0x2c
 8026a5e:	f7ea fb91 	bl	8011184 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026a62:	4641      	mov	r1, r8
 8026a64:	900c      	str	r0, [sp, #48]	; 0x30
 8026a66:	a80b      	add	r0, sp, #44	; 0x2c
 8026a68:	f7ea fa54 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026a6c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026a6e:	2202      	movs	r2, #2
 8026a70:	fb90 f0f2 	sdiv	r0, r0, r2
 8026a74:	eb00 0903 	add.w	r9, r0, r3
 8026a78:	4628      	mov	r0, r5
 8026a7a:	9202      	str	r2, [sp, #8]
 8026a7c:	f7ff fbd4 	bl	8026228 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026a80:	a92a      	add	r1, sp, #168	; 0xa8
 8026a82:	f841 0d74 	str.w	r0, [r1, #-116]!
 8026a86:	a80b      	add	r0, sp, #44	; 0x2c
 8026a88:	f7ea fa44 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026a8c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8026a8e:	9a02      	ldr	r2, [sp, #8]
 8026a90:	fb90 f2f2 	sdiv	r2, r0, r2
 8026a94:	4649      	mov	r1, r9
 8026a96:	1a9a      	subs	r2, r3, r2
 8026a98:	a80e      	add	r0, sp, #56	; 0x38
 8026a9a:	f7ff fb4e 	bl	802613a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026a9e:	46d9      	mov	r9, fp
 8026aa0:	2502      	movs	r5, #2
 8026aa2:	45b1      	cmp	r9, r6
 8026aa4:	db25      	blt.n	8026af2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8026aa6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8026aaa:	4648      	mov	r0, r9
 8026aac:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8026ab0:	930b      	str	r3, [sp, #44]	; 0x2c
 8026ab2:	f7ea fb67 	bl	8011184 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026ab6:	4641      	mov	r1, r8
 8026ab8:	900c      	str	r0, [sp, #48]	; 0x30
 8026aba:	a80b      	add	r0, sp, #44	; 0x2c
 8026abc:	f7ea fa2a 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026ac0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026ac2:	fb90 f0f5 	sdiv	r0, r0, r5
 8026ac6:	eb00 0b03 	add.w	fp, r0, r3
 8026aca:	4648      	mov	r0, r9
 8026acc:	f7ff fbac 	bl	8026228 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026ad0:	a90d      	add	r1, sp, #52	; 0x34
 8026ad2:	900d      	str	r0, [sp, #52]	; 0x34
 8026ad4:	a80b      	add	r0, sp, #44	; 0x2c
 8026ad6:	f7ea fa1d 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026ada:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026adc:	fb90 f0f5 	sdiv	r0, r0, r5
 8026ae0:	4659      	mov	r1, fp
 8026ae2:	1a12      	subs	r2, r2, r0
 8026ae4:	a80e      	add	r0, sp, #56	; 0x38
 8026ae6:	46cb      	mov	fp, r9
 8026ae8:	f7ff fb27 	bl	802613a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026aec:	eba9 0907 	sub.w	r9, r9, r7
 8026af0:	e7d7      	b.n	8026aa2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8026af2:	455e      	cmp	r6, fp
 8026af4:	da22      	bge.n	8026b3c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8026af6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8026afa:	4630      	mov	r0, r6
 8026afc:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8026b00:	930b      	str	r3, [sp, #44]	; 0x2c
 8026b02:	f7ea fb3f 	bl	8011184 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026b06:	4641      	mov	r1, r8
 8026b08:	900c      	str	r0, [sp, #48]	; 0x30
 8026b0a:	a80b      	add	r0, sp, #44	; 0x2c
 8026b0c:	f7ea fa02 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026b10:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8026b12:	2502      	movs	r5, #2
 8026b14:	fb90 f0f5 	sdiv	r0, r0, r5
 8026b18:	4407      	add	r7, r0
 8026b1a:	4630      	mov	r0, r6
 8026b1c:	f7ff fb84 	bl	8026228 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026b20:	a92a      	add	r1, sp, #168	; 0xa8
 8026b22:	f841 0d74 	str.w	r0, [r1, #-116]!
 8026b26:	a80b      	add	r0, sp, #44	; 0x2c
 8026b28:	f7ea f9f4 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026b2c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026b2e:	fb90 f0f5 	sdiv	r0, r0, r5
 8026b32:	4639      	mov	r1, r7
 8026b34:	1a12      	subs	r2, r2, r0
 8026b36:	a80e      	add	r0, sp, #56	; 0x38
 8026b38:	f7ff faff 	bl	802613a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026b3c:	9b01      	ldr	r3, [sp, #4]
 8026b3e:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8026b42:	f6bf af27 	bge.w	8026994 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8026b46:	4630      	mov	r0, r6
 8026b48:	f7ea fb1c 	bl	8011184 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026b4c:	ad2a      	add	r5, sp, #168	; 0xa8
 8026b4e:	f04f 0b02 	mov.w	fp, #2
 8026b52:	f845 0d74 	str.w	r0, [r5, #-116]!
 8026b56:	a809      	add	r0, sp, #36	; 0x24
 8026b58:	4629      	mov	r1, r5
 8026b5a:	f7ea f9db 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026b5e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026b60:	eb00 0903 	add.w	r9, r0, r3
 8026b64:	4630      	mov	r0, r6
 8026b66:	f7ff fb5f 	bl	8026228 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026b6a:	4629      	mov	r1, r5
 8026b6c:	900d      	str	r0, [sp, #52]	; 0x34
 8026b6e:	a809      	add	r0, sp, #36	; 0x24
 8026b70:	f7ea f9d0 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026b74:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8026b76:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8026b7a:	eba3 0800 	sub.w	r8, r3, r0
 8026b7e:	4454      	add	r4, sl
 8026b80:	42a6      	cmp	r6, r4
 8026b82:	f77f af07 	ble.w	8026994 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8026b86:	4620      	mov	r0, r4
 8026b88:	f7ea fafc 	bl	8011184 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026b8c:	4629      	mov	r1, r5
 8026b8e:	900d      	str	r0, [sp, #52]	; 0x34
 8026b90:	a80a      	add	r0, sp, #40	; 0x28
 8026b92:	f7ea f9bf 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026b96:	fb90 f0fb 	sdiv	r0, r0, fp
 8026b9a:	eb00 0709 	add.w	r7, r0, r9
 8026b9e:	4620      	mov	r0, r4
 8026ba0:	f7ff fb42 	bl	8026228 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026ba4:	a90c      	add	r1, sp, #48	; 0x30
 8026ba6:	900c      	str	r0, [sp, #48]	; 0x30
 8026ba8:	a80a      	add	r0, sp, #40	; 0x28
 8026baa:	f7ea f9b3 	bl	8010f14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026bae:	4639      	mov	r1, r7
 8026bb0:	fb90 f2fb 	sdiv	r2, r0, fp
 8026bb4:	a80e      	add	r0, sp, #56	; 0x38
 8026bb6:	eba8 0202 	sub.w	r2, r8, r2
 8026bba:	f7ff fabe 	bl	802613a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026bbe:	4454      	add	r4, sl
 8026bc0:	e7de      	b.n	8026b80 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8026bc2:	2400      	movs	r4, #0
 8026bc4:	e6eb      	b.n	802699e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8026bc6:	bf00      	nop
 8026bc8:	0802d234 	.word	0x0802d234

08026bcc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8026bcc:	b570      	push	{r4, r5, r6, lr}
 8026bce:	790b      	ldrb	r3, [r1, #4]
 8026bd0:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8026bd4:	2b00      	cmp	r3, #0
 8026bd6:	bf0c      	ite	eq
 8026bd8:	2301      	moveq	r3, #1
 8026bda:	2300      	movne	r3, #0
 8026bdc:	4604      	mov	r4, r0
 8026bde:	460e      	mov	r6, r1
 8026be0:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8026be4:	d109      	bne.n	8026bfa <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8026be6:	b14d      	cbz	r5, 8026bfc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8026be8:	7933      	ldrb	r3, [r6, #4]
 8026bea:	2b01      	cmp	r3, #1
 8026bec:	d10c      	bne.n	8026c08 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8026bee:	6823      	ldr	r3, [r4, #0]
 8026bf0:	4620      	mov	r0, r4
 8026bf2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8026bf4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8026bf8:	4718      	bx	r3
 8026bfa:	b12d      	cbz	r5, 8026c08 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8026bfc:	6823      	ldr	r3, [r4, #0]
 8026bfe:	4620      	mov	r0, r4
 8026c00:	695b      	ldr	r3, [r3, #20]
 8026c02:	4798      	blx	r3
 8026c04:	2d00      	cmp	r5, #0
 8026c06:	d1ef      	bne.n	8026be8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8026c08:	bd70      	pop	{r4, r5, r6, pc}

08026c0a <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8026c0a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8026c0e:	4770      	bx	lr

08026c10 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8026c10:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8026c14:	4770      	bx	lr

08026c16 <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8026c16:	6802      	ldr	r2, [r0, #0]
 8026c18:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8026c1c:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8026c1e:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8026c22:	4710      	bx	r2

08026c24 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8026c24:	6802      	ldr	r2, [r0, #0]
 8026c26:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8026c2a:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8026c2c:	eef0 0a40 	vmov.f32	s1, s0
 8026c30:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026c34:	4710      	bx	r2

08026c36 <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8026c36:	6802      	ldr	r2, [r0, #0]
 8026c38:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8026c3c:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8026c3e:	eeb0 1a40 	vmov.f32	s2, s0
 8026c42:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026c46:	4710      	bx	r2

08026c48 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8026c48:	6802      	ldr	r2, [r0, #0]
 8026c4a:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8026c4e:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8026c50:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8026c54:	4710      	bx	r2

08026c56 <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8026c56:	6802      	ldr	r2, [r0, #0]
 8026c58:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8026c5c:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8026c5e:	eef0 0a40 	vmov.f32	s1, s0
 8026c62:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026c66:	4710      	bx	r2

08026c68 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8026c68:	6802      	ldr	r2, [r0, #0]
 8026c6a:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8026c6e:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8026c70:	eeb0 1a40 	vmov.f32	s2, s0
 8026c74:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026c78:	4710      	bx	r2

08026c7a <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8026c7a:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026c7e:	4770      	bx	lr

08026c80 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8026c80:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8026c84:	4770      	bx	lr

08026c86 <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8026c86:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8026c8a:	4770      	bx	lr

08026c8c <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8026c8c:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8026c90:	4770      	bx	lr

08026c92 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8026c92:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8026c96:	4770      	bx	lr

08026c98 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8026c98:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8026c9c:	4770      	bx	lr

08026c9e <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8026c9e:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8026ca2:	4770      	bx	lr

08026ca4 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8026ca4:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8026ca8:	4770      	bx	lr

08026caa <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8026caa:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8026cae:	4770      	bx	lr

08026cb0 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8026cb0:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8026cb4:	4770      	bx	lr

08026cb6 <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8026cb6:	ee07 2a90 	vmov	s15, r2
 8026cba:	6803      	ldr	r3, [r0, #0]
 8026cbc:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8026cc0:	ee07 1a90 	vmov	s15, r1
 8026cc4:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8026cc8:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8026ccc:	4718      	bx	r3

08026cce <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8026cce:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8026cd2:	4770      	bx	lr

08026cd4 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8026cd4:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8026cd8:	4770      	bx	lr

08026cda <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8026cda:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8026cde:	4770      	bx	lr

08026ce0 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8026ce0:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8026ce4:	4770      	bx	lr

08026ce6 <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8026ce6:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8026cea:	4770      	bx	lr

08026cec <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8026cec:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8026cf0:	4770      	bx	lr

08026cf2 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8026cf2:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8026cf6:	4770      	bx	lr

08026cf8 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8026cf8:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8026cfc:	4770      	bx	lr

08026cfe <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8026cfe:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8026d02:	4770      	bx	lr

08026d04 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8026d04:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8026d08:	4770      	bx	lr

08026d0a <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8026d0a:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8026d0e:	4770      	bx	lr

08026d10 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8026d10:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8026d14:	4770      	bx	lr

08026d16 <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8026d16:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8026d1a:	4770      	bx	lr

08026d1c <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8026d1c:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8026d20:	4770      	bx	lr

08026d22 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 8026d22:	b510      	push	{r4, lr}
 8026d24:	ed2d 8b04 	vpush	{d8-d9}
 8026d28:	6803      	ldr	r3, [r0, #0]
 8026d2a:	4604      	mov	r4, r0
 8026d2c:	699b      	ldr	r3, [r3, #24]
 8026d2e:	eeb0 8a40 	vmov.f32	s16, s0
 8026d32:	eef0 8a60 	vmov.f32	s17, s1
 8026d36:	eeb0 9a41 	vmov.f32	s18, s2
 8026d3a:	4798      	blx	r3
 8026d3c:	6823      	ldr	r3, [r4, #0]
 8026d3e:	4620      	mov	r0, r4
 8026d40:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8026d42:	eeb0 1a49 	vmov.f32	s2, s18
 8026d46:	eef0 0a68 	vmov.f32	s1, s17
 8026d4a:	eeb0 0a48 	vmov.f32	s0, s16
 8026d4e:	4798      	blx	r3
 8026d50:	ecbd 8b04 	vpop	{d8-d9}
 8026d54:	6823      	ldr	r3, [r4, #0]
 8026d56:	4620      	mov	r0, r4
 8026d58:	699b      	ldr	r3, [r3, #24]
 8026d5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8026d5e:	4718      	bx	r3

08026d60 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8026d60:	b510      	push	{r4, lr}
 8026d62:	ed2d 8b02 	vpush	{d8}
 8026d66:	6803      	ldr	r3, [r0, #0]
 8026d68:	4604      	mov	r4, r0
 8026d6a:	699b      	ldr	r3, [r3, #24]
 8026d6c:	eeb0 8a40 	vmov.f32	s16, s0
 8026d70:	4798      	blx	r3
 8026d72:	6823      	ldr	r3, [r4, #0]
 8026d74:	4620      	mov	r0, r4
 8026d76:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8026d7a:	eeb0 0a48 	vmov.f32	s0, s16
 8026d7e:	4798      	blx	r3
 8026d80:	ecbd 8b02 	vpop	{d8}
 8026d84:	6823      	ldr	r3, [r4, #0]
 8026d86:	4620      	mov	r0, r4
 8026d88:	699b      	ldr	r3, [r3, #24]
 8026d8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8026d8e:	4718      	bx	r3

08026d90 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8026d90:	2200      	movs	r2, #0
 8026d92:	8002      	strh	r2, [r0, #0]
 8026d94:	8042      	strh	r2, [r0, #2]
 8026d96:	8082      	strh	r2, [r0, #4]
 8026d98:	80c2      	strh	r2, [r0, #6]
 8026d9a:	4770      	bx	lr

08026d9c <_ZN8touchgfx13TextureMapperD1Ev>:
 8026d9c:	4770      	bx	lr

08026d9e <_ZN8touchgfx13TextureMapperD0Ev>:
 8026d9e:	b510      	push	{r4, lr}
 8026da0:	2190      	movs	r1, #144	; 0x90
 8026da2:	4604      	mov	r4, r0
 8026da4:	f000 fe1b 	bl	80279de <_ZdlPvj>
 8026da8:	4620      	mov	r0, r4
 8026daa:	bd10      	pop	{r4, pc}

08026dac <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8026dac:	b538      	push	{r3, r4, r5, lr}
 8026dae:	2500      	movs	r5, #0
 8026db0:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8026db4:	2301      	movs	r3, #1
 8026db6:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8026dba:	4b1f      	ldr	r3, [pc, #124]	; (8026e38 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8026dbc:	8085      	strh	r5, [r0, #4]
 8026dbe:	80c5      	strh	r5, [r0, #6]
 8026dc0:	8105      	strh	r5, [r0, #8]
 8026dc2:	8145      	strh	r5, [r0, #10]
 8026dc4:	8185      	strh	r5, [r0, #12]
 8026dc6:	81c5      	strh	r5, [r0, #14]
 8026dc8:	8205      	strh	r5, [r0, #16]
 8026dca:	8245      	strh	r5, [r0, #18]
 8026dcc:	61c5      	str	r5, [r0, #28]
 8026dce:	8405      	strh	r5, [r0, #32]
 8026dd0:	8445      	strh	r5, [r0, #34]	; 0x22
 8026dd2:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8026dd6:	6003      	str	r3, [r0, #0]
 8026dd8:	880b      	ldrh	r3, [r1, #0]
 8026dda:	84c3      	strh	r3, [r0, #38]	; 0x26
 8026ddc:	23ff      	movs	r3, #255	; 0xff
 8026dde:	4604      	mov	r4, r0
 8026de0:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8026de4:	f7eb fb93 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8026de8:	4b14      	ldr	r3, [pc, #80]	; (8026e3c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8026dea:	6023      	str	r3, [r4, #0]
 8026dec:	2300      	movs	r3, #0
 8026dee:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8026df2:	4913      	ldr	r1, [pc, #76]	; (8026e40 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8026df4:	62e3      	str	r3, [r4, #44]	; 0x2c
 8026df6:	6323      	str	r3, [r4, #48]	; 0x30
 8026df8:	6363      	str	r3, [r4, #52]	; 0x34
 8026dfa:	63a3      	str	r3, [r4, #56]	; 0x38
 8026dfc:	63e3      	str	r3, [r4, #60]	; 0x3c
 8026dfe:	6463      	str	r3, [r4, #68]	; 0x44
 8026e00:	64a3      	str	r3, [r4, #72]	; 0x48
 8026e02:	6523      	str	r3, [r4, #80]	; 0x50
 8026e04:	6563      	str	r3, [r4, #84]	; 0x54
 8026e06:	65e3      	str	r3, [r4, #92]	; 0x5c
 8026e08:	6623      	str	r3, [r4, #96]	; 0x60
 8026e0a:	66a3      	str	r3, [r4, #104]	; 0x68
 8026e0c:	66e3      	str	r3, [r4, #108]	; 0x6c
 8026e0e:	6763      	str	r3, [r4, #116]	; 0x74
 8026e10:	67a3      	str	r3, [r4, #120]	; 0x78
 8026e12:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8026e16:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8026e1a:	230c      	movs	r3, #12
 8026e1c:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8026e20:	6422      	str	r2, [r4, #64]	; 0x40
 8026e22:	64e1      	str	r1, [r4, #76]	; 0x4c
 8026e24:	65a1      	str	r1, [r4, #88]	; 0x58
 8026e26:	6662      	str	r2, [r4, #100]	; 0x64
 8026e28:	6722      	str	r2, [r4, #112]	; 0x70
 8026e2a:	67e2      	str	r2, [r4, #124]	; 0x7c
 8026e2c:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8026e30:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 8026e34:	4620      	mov	r0, r4
 8026e36:	bd38      	pop	{r3, r4, r5, pc}
 8026e38:	0802ccdc 	.word	0x0802ccdc
 8026e3c:	0802d2c0 	.word	0x0802d2c0
 8026e40:	447a0000 	.word	0x447a0000

08026e44 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 8026e44:	b570      	push	{r4, r5, r6, lr}
 8026e46:	ed2d 8b04 	vpush	{d8-d9}
 8026e4a:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8026e4e:	add0      	add	r5, sp, #832	; 0x340
 8026e50:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8026e52:	f825 3d40 	strh.w	r3, [r5, #-64]!
 8026e56:	4604      	mov	r4, r0
 8026e58:	4628      	mov	r0, r5
 8026e5a:	f7f1 fa7f 	bl	801835c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8026e5e:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8026e60:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8026e64:	4606      	mov	r6, r0
 8026e66:	4628      	mov	r0, r5
 8026e68:	f7f1 faac 	bl	80183c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8026e6c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8026e70:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8026e74:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8026e76:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 8026e7a:	9312      	str	r3, [sp, #72]	; 0x48
 8026e7c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026e80:	1c72      	adds	r2, r6, #1
 8026e82:	3001      	adds	r0, #1
 8026e84:	ee76 5ac7 	vsub.f32	s11, s13, s14
 8026e88:	ee07 2a90 	vmov	s15, r2
 8026e8c:	ee06 0a90 	vmov	s13, r0
 8026e90:	ee36 6a47 	vsub.f32	s12, s12, s14
 8026e94:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8026e98:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8026e9c:	ee77 7a86 	vadd.f32	s15, s15, s12
 8026ea0:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8026ea4:	9316      	str	r3, [sp, #88]	; 0x58
 8026ea6:	931a      	str	r3, [sp, #104]	; 0x68
 8026ea8:	931e      	str	r3, [sp, #120]	; 0x78
 8026eaa:	2300      	movs	r3, #0
 8026eac:	9320      	str	r3, [sp, #128]	; 0x80
 8026eae:	9321      	str	r3, [sp, #132]	; 0x84
 8026eb0:	9322      	str	r3, [sp, #136]	; 0x88
 8026eb2:	9324      	str	r3, [sp, #144]	; 0x90
 8026eb4:	9325      	str	r3, [sp, #148]	; 0x94
 8026eb6:	9326      	str	r3, [sp, #152]	; 0x98
 8026eb8:	9328      	str	r3, [sp, #160]	; 0xa0
 8026eba:	9329      	str	r3, [sp, #164]	; 0xa4
 8026ebc:	932a      	str	r3, [sp, #168]	; 0xa8
 8026ebe:	932c      	str	r3, [sp, #176]	; 0xb0
 8026ec0:	932d      	str	r3, [sp, #180]	; 0xb4
 8026ec2:	932e      	str	r3, [sp, #184]	; 0xb8
 8026ec4:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8026ec8:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8026ecc:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8026ed0:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8026ed4:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8026ed8:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8026edc:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8026ee0:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 8026ee4:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8026ee8:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8026eec:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8026ef0:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 8026ef4:	a830      	add	r0, sp, #192	; 0xc0
 8026ef6:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 8026efa:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8026efe:	f000 fc43 	bl	8027788 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026f02:	eeb1 0a49 	vneg.f32	s0, s18
 8026f06:	a830      	add	r0, sp, #192	; 0xc0
 8026f08:	f000 fd12 	bl	8027930 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8026f0c:	eeb1 0a68 	vneg.f32	s0, s17
 8026f10:	f000 fd1c 	bl	802794c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8026f14:	eeb1 0a48 	vneg.f32	s0, s16
 8026f18:	f000 fd27 	bl	802796a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8026f1c:	a840      	add	r0, sp, #256	; 0x100
 8026f1e:	f000 fc33 	bl	8027788 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026f22:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 8026f26:	a840      	add	r0, sp, #256	; 0x100
 8026f28:	f000 fc86 	bl	8027838 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8026f2c:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8026f30:	f000 fcac 	bl	802788c <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 8026f34:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8026f38:	f000 fcd1 	bl	80278de <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8026f3c:	a850      	add	r0, sp, #320	; 0x140
 8026f3e:	f000 fc23 	bl	8027788 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026f42:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8026f46:	a850      	add	r0, sp, #320	; 0x140
 8026f48:	f000 fd1e 	bl	8027988 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8026f4c:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8026f50:	f000 fd26 	bl	80279a0 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 8026f54:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8026f58:	f000 fd2f 	bl	80279ba <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8026f5c:	a860      	add	r0, sp, #384	; 0x180
 8026f5e:	f000 fc13 	bl	8027788 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026f62:	eeb0 0a49 	vmov.f32	s0, s18
 8026f66:	a860      	add	r0, sp, #384	; 0x180
 8026f68:	f000 fce2 	bl	8027930 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8026f6c:	eeb0 0a68 	vmov.f32	s0, s17
 8026f70:	f000 fcec 	bl	802794c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8026f74:	eeb0 0a48 	vmov.f32	s0, s16
 8026f78:	f000 fcf7 	bl	802796a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8026f7c:	aa50      	add	r2, sp, #320	; 0x140
 8026f7e:	a960      	add	r1, sp, #384	; 0x180
 8026f80:	a8b0      	add	r0, sp, #704	; 0x2c0
 8026f82:	f000 fc1b 	bl	80277bc <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026f86:	4628      	mov	r0, r5
 8026f88:	aa40      	add	r2, sp, #256	; 0x100
 8026f8a:	a9b0      	add	r1, sp, #704	; 0x2c0
 8026f8c:	f000 fc16 	bl	80277bc <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026f90:	4629      	mov	r1, r5
 8026f92:	aa30      	add	r2, sp, #192	; 0xc0
 8026f94:	a870      	add	r0, sp, #448	; 0x1c0
 8026f96:	f000 fc11 	bl	80277bc <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026f9a:	a880      	add	r0, sp, #512	; 0x200
 8026f9c:	f000 fbf4 	bl	8027788 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026fa0:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8026fa4:	a880      	add	r0, sp, #512	; 0x200
 8026fa6:	eeb1 0a40 	vneg.f32	s0, s0
 8026faa:	f000 fcc1 	bl	8027930 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8026fae:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8026fb2:	a880      	add	r0, sp, #512	; 0x200
 8026fb4:	eeb1 0a40 	vneg.f32	s0, s0
 8026fb8:	f000 fcc8 	bl	802794c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8026fbc:	a890      	add	r0, sp, #576	; 0x240
 8026fbe:	f000 fbe3 	bl	8027788 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026fc2:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 8026fc6:	a890      	add	r0, sp, #576	; 0x240
 8026fc8:	f000 fc26 	bl	8027818 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8026fcc:	a8a0      	add	r0, sp, #640	; 0x280
 8026fce:	f000 fbdb 	bl	8027788 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026fd2:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8026fd6:	a8a0      	add	r0, sp, #640	; 0x280
 8026fd8:	f000 fcaa 	bl	8027930 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8026fdc:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8026fe0:	f000 fcb4 	bl	802794c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8026fe4:	aa90      	add	r2, sp, #576	; 0x240
 8026fe6:	a9a0      	add	r1, sp, #640	; 0x280
 8026fe8:	a8b0      	add	r0, sp, #704	; 0x2c0
 8026fea:	f000 fbe7 	bl	80277bc <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026fee:	4628      	mov	r0, r5
 8026ff0:	aa80      	add	r2, sp, #512	; 0x200
 8026ff2:	a9b0      	add	r1, sp, #704	; 0x2c0
 8026ff4:	f000 fbe2 	bl	80277bc <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026ff8:	4629      	mov	r1, r5
 8026ffa:	aa70      	add	r2, sp, #448	; 0x1c0
 8026ffc:	4668      	mov	r0, sp
 8026ffe:	466d      	mov	r5, sp
 8027000:	f000 fbdc 	bl	80277bc <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027004:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8027006:	ae70      	add	r6, sp, #448	; 0x1c0
 8027008:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802700a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802700c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802700e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8027010:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8027012:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8027016:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 802701a:	2500      	movs	r5, #0
 802701c:	0129      	lsls	r1, r5, #4
 802701e:	ab20      	add	r3, sp, #128	; 0x80
 8027020:	185e      	adds	r6, r3, r1
 8027022:	ab10      	add	r3, sp, #64	; 0x40
 8027024:	4419      	add	r1, r3
 8027026:	a870      	add	r0, sp, #448	; 0x1c0
 8027028:	f000 fb7e 	bl	8027728 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 802702c:	3501      	adds	r5, #1
 802702e:	2d04      	cmp	r5, #4
 8027030:	ed86 0a00 	vstr	s0, [r6]
 8027034:	edc6 0a01 	vstr	s1, [r6, #4]
 8027038:	ed86 1a02 	vstr	s2, [r6, #8]
 802703c:	edc6 1a03 	vstr	s3, [r6, #12]
 8027040:	d1ec      	bne.n	802701c <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 8027042:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 8027046:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 802704a:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 802704e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8027052:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 8027056:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802705a:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 802705e:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 8027062:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8027066:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802706a:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 802706e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8027072:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 8027076:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802707a:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 802707e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8027082:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 8027086:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 802708a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802708e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8027092:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 8027096:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 802709a:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 802709e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80270a2:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 80270a6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80270aa:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 80270ae:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 80270b2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80270b6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80270ba:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 80270be:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 80270c2:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 80270c6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80270ca:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 80270ce:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80270d2:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 80270d6:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 80270da:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80270de:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80270e2:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 80270e6:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 80270ea:	ecbd 8b04 	vpop	{d8-d9}
 80270ee:	bd70      	pop	{r4, r5, r6, pc}

080270f0 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 80270f0:	b510      	push	{r4, lr}
 80270f2:	4604      	mov	r4, r0
 80270f4:	f7eb fa0b 	bl	801250e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80270f8:	4620      	mov	r0, r4
 80270fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80270fe:	f7ff bea1 	b.w	8026e44 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027102 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 8027102:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 8027106:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 802710a:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 802710e:	f7ff be99 	b.w	8026e44 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027112 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 8027112:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 8027116:	f7ff be95 	b.w	8026e44 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802711a <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 802711a:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 802711e:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 8027122:	f7ff be8f 	b.w	8026e44 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027126 <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 8027126:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802712a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802712e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027132:	bfd8      	it	le
 8027134:	eeb0 0a67 	vmovle.f32	s0, s15
 8027138:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 802713c:	f7ff be82 	b.w	8026e44 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027140 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8027140:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 8027144:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8027148:	f7ff be7c 	b.w	8026e44 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802714c <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 802714c:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8027150:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8027154:	f7ff be76 	b.w	8026e44 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027158 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 8027158:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 802715c:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8027160:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 8027164:	f7ff be6e 	b.w	8026e44 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027168 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 8027168:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802716c:	ed2d 8b04 	vpush	{d8-d9}
 8027170:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 8027174:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 8027178:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 802717c:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8027180:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8027184:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027188:	bf54      	ite	pl
 802718a:	eeb0 0a69 	vmovpl.f32	s0, s19
 802718e:	eeb0 0a48 	vmovmi.f32	s0, s16
 8027192:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8027196:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802719a:	bfd8      	it	le
 802719c:	eeb0 0a49 	vmovle.f32	s0, s18
 80271a0:	eef4 8ac0 	vcmpe.f32	s17, s0
 80271a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80271a8:	bfd8      	it	le
 80271aa:	eeb0 0a68 	vmovle.f32	s0, s17
 80271ae:	460c      	mov	r4, r1
 80271b0:	4607      	mov	r7, r0
 80271b2:	f000 fd09 	bl	8027bc8 <floorf>
 80271b6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80271ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80271be:	bf58      	it	pl
 80271c0:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80271c4:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80271c8:	bf56      	itet	pl
 80271ca:	ee10 3a10 	vmovpl	r3, s0
 80271ce:	2600      	movmi	r6, #0
 80271d0:	b21e      	sxthpl	r6, r3
 80271d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80271d6:	bfd8      	it	le
 80271d8:	eeb0 8a69 	vmovle.f32	s16, s19
 80271dc:	eeb4 9ac8 	vcmpe.f32	s18, s16
 80271e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80271e4:	bf58      	it	pl
 80271e6:	eeb0 8a49 	vmovpl.f32	s16, s18
 80271ea:	eef4 8ac8 	vcmpe.f32	s17, s16
 80271ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80271f2:	bf54      	ite	pl
 80271f4:	eeb0 0a68 	vmovpl.f32	s0, s17
 80271f8:	eeb0 0a48 	vmovmi.f32	s0, s16
 80271fc:	f000 fca2 	bl	8027b44 <ceilf>
 8027200:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8027204:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8027208:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 802720c:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8027210:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 8027214:	ee07 8a90 	vmov	s15, r8
 8027218:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802721c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8027220:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027224:	bfd8      	it	le
 8027226:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802722a:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802722e:	bfdc      	itt	le
 8027230:	ee10 3a10 	vmovle	r3, s0
 8027234:	fa0f f883 	sxthle.w	r8, r3
 8027238:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802723c:	bf54      	ite	pl
 802723e:	eeb0 0a69 	vmovpl.f32	s0, s19
 8027242:	eeb0 0a48 	vmovmi.f32	s0, s16
 8027246:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802724a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802724e:	bfd8      	it	le
 8027250:	eeb0 0a49 	vmovle.f32	s0, s18
 8027254:	eef4 8ac0 	vcmpe.f32	s17, s0
 8027258:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802725c:	bfd8      	it	le
 802725e:	eeb0 0a68 	vmovle.f32	s0, s17
 8027262:	f000 fcb1 	bl	8027bc8 <floorf>
 8027266:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802726a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802726e:	bf58      	it	pl
 8027270:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8027274:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8027278:	bf56      	itet	pl
 802727a:	ee10 3a10 	vmovpl	r3, s0
 802727e:	2500      	movmi	r5, #0
 8027280:	b21d      	sxthpl	r5, r3
 8027282:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027286:	bfd8      	it	le
 8027288:	eeb0 8a69 	vmovle.f32	s16, s19
 802728c:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8027290:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027294:	bf58      	it	pl
 8027296:	eeb0 8a49 	vmovpl.f32	s16, s18
 802729a:	eef4 8ac8 	vcmpe.f32	s17, s16
 802729e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80272a2:	bf54      	ite	pl
 80272a4:	eeb0 0a68 	vmovpl.f32	s0, s17
 80272a8:	eeb0 0a48 	vmovmi.f32	s0, s16
 80272ac:	f000 fc4a 	bl	8027b44 <ceilf>
 80272b0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80272b4:	803e      	strh	r6, [r7, #0]
 80272b6:	ee07 3a90 	vmov	s15, r3
 80272ba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80272be:	807d      	strh	r5, [r7, #2]
 80272c0:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80272c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80272c8:	bfd8      	it	le
 80272ca:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 80272ce:	eba8 0606 	sub.w	r6, r8, r6
 80272d2:	bfdc      	itt	le
 80272d4:	ee10 3a10 	vmovle	r3, s0
 80272d8:	b21b      	sxthle	r3, r3
 80272da:	1b5d      	subs	r5, r3, r5
 80272dc:	80be      	strh	r6, [r7, #4]
 80272de:	80fd      	strh	r5, [r7, #6]
 80272e0:	ecbd 8b04 	vpop	{d8-d9}
 80272e4:	4638      	mov	r0, r7
 80272e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080272ea <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 80272ea:	b513      	push	{r0, r1, r4, lr}
 80272ec:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80272f0:	4604      	mov	r4, r0
 80272f2:	b143      	cbz	r3, 8027306 <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 80272f4:	4601      	mov	r1, r0
 80272f6:	4668      	mov	r0, sp
 80272f8:	f7ff ff36 	bl	8027168 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 80272fc:	6823      	ldr	r3, [r4, #0]
 80272fe:	4669      	mov	r1, sp
 8027300:	691b      	ldr	r3, [r3, #16]
 8027302:	4620      	mov	r0, r4
 8027304:	4798      	blx	r3
 8027306:	b002      	add	sp, #8
 8027308:	bd10      	pop	{r4, pc}

0802730a <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 802730a:	4603      	mov	r3, r0
 802730c:	3026      	adds	r0, #38	; 0x26
 802730e:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8027312:	b90b      	cbnz	r3, 8027318 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 8027314:	f7ef b82c 	b.w	8016370 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8027318:	f7ef b83a 	b.w	8016390 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

0802731c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 802731c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027320:	ed2d 8b04 	vpush	{d8-d9}
 8027324:	4604      	mov	r4, r0
 8027326:	469b      	mov	fp, r3
 8027328:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 802732c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8027330:	f9b1 6000 	ldrsh.w	r6, [r1]
 8027334:	8888      	ldrh	r0, [r1, #4]
 8027336:	b0b3      	sub	sp, #204	; 0xcc
 8027338:	4430      	add	r0, r6
 802733a:	b280      	uxth	r0, r0
 802733c:	9206      	str	r2, [sp, #24]
 802733e:	fa0f fe80 	sxth.w	lr, r0
 8027342:	2200      	movs	r2, #0
 8027344:	4596      	cmp	lr, r2
 8027346:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 802734a:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 802734e:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 8027352:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 8027354:	9211      	str	r2, [sp, #68]	; 0x44
 8027356:	f340 8129 	ble.w	80275ac <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802735a:	45b4      	cmp	ip, r6
 802735c:	f340 8126 	ble.w	80275ac <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8027360:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8027364:	88ca      	ldrh	r2, [r1, #6]
 8027366:	442a      	add	r2, r5
 8027368:	b292      	uxth	r2, r2
 802736a:	b211      	sxth	r1, r2
 802736c:	2900      	cmp	r1, #0
 802736e:	f340 811d 	ble.w	80275ac <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8027372:	42ab      	cmp	r3, r5
 8027374:	f340 811a 	ble.w	80275ac <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8027378:	45f4      	cmp	ip, lr
 802737a:	bfb8      	it	lt
 802737c:	fa1f f08c 	uxthlt.w	r0, ip
 8027380:	428b      	cmp	r3, r1
 8027382:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8027386:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802738a:	bfb8      	it	lt
 802738c:	b29a      	uxthlt	r2, r3
 802738e:	1b80      	subs	r0, r0, r6
 8027390:	1b52      	subs	r2, r2, r5
 8027392:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 8027396:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 802739a:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 802739e:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 80273a2:	ab11      	add	r3, sp, #68	; 0x44
 80273a4:	e893 0003 	ldmia.w	r3, {r0, r1}
 80273a8:	6822      	ldr	r2, [r4, #0]
 80273aa:	9307      	str	r3, [sp, #28]
 80273ac:	ad13      	add	r5, sp, #76	; 0x4c
 80273ae:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80273b0:	e885 0003 	stmia.w	r5, {r0, r1}
 80273b4:	4629      	mov	r1, r5
 80273b6:	4620      	mov	r0, r4
 80273b8:	4790      	blx	r2
 80273ba:	4621      	mov	r1, r4
 80273bc:	a815      	add	r0, sp, #84	; 0x54
 80273be:	f7ee ff33 	bl	8016228 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80273c2:	a815      	add	r0, sp, #84	; 0x54
 80273c4:	f7ed fbf8 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80273c8:	9b07      	ldr	r3, [sp, #28]
 80273ca:	1d26      	adds	r6, r4, #4
 80273cc:	4618      	mov	r0, r3
 80273ce:	4631      	mov	r1, r6
 80273d0:	f7ed fc36 	bl	8014c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80273d4:	4628      	mov	r0, r5
 80273d6:	f104 0526 	add.w	r5, r4, #38	; 0x26
 80273da:	f7ed fbed 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80273de:	4628      	mov	r0, r5
 80273e0:	f7f1 f8a8 	bl	8018534 <_ZNK8touchgfx6Bitmap7getDataEv>
 80273e4:	9007      	str	r0, [sp, #28]
 80273e6:	2800      	cmp	r0, #0
 80273e8:	f000 80db 	beq.w	80275a2 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 80273ec:	f8db 2000 	ldr.w	r2, [fp]
 80273f0:	9209      	str	r2, [sp, #36]	; 0x24
 80273f2:	f8db 2004 	ldr.w	r2, [fp, #4]
 80273f6:	920a      	str	r2, [sp, #40]	; 0x28
 80273f8:	f8db 2008 	ldr.w	r2, [fp, #8]
 80273fc:	920b      	str	r2, [sp, #44]	; 0x2c
 80273fe:	f8db 200c 	ldr.w	r2, [fp, #12]
 8027402:	920c      	str	r2, [sp, #48]	; 0x30
 8027404:	f8da 2000 	ldr.w	r2, [sl]
 8027408:	920d      	str	r2, [sp, #52]	; 0x34
 802740a:	f8da 2004 	ldr.w	r2, [sl, #4]
 802740e:	920e      	str	r2, [sp, #56]	; 0x38
 8027410:	f8da 2008 	ldr.w	r2, [sl, #8]
 8027414:	920f      	str	r2, [sp, #60]	; 0x3c
 8027416:	f8da 200c 	ldr.w	r2, [sl, #12]
 802741a:	9210      	str	r2, [sp, #64]	; 0x40
 802741c:	a90d      	add	r1, sp, #52	; 0x34
 802741e:	4632      	mov	r2, r6
 8027420:	a809      	add	r0, sp, #36	; 0x24
 8027422:	f7ed fbf1 	bl	8014c08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027426:	4632      	mov	r2, r6
 8027428:	a90e      	add	r1, sp, #56	; 0x38
 802742a:	a80a      	add	r0, sp, #40	; 0x28
 802742c:	f7ed fbec 	bl	8014c08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027430:	4632      	mov	r2, r6
 8027432:	a90f      	add	r1, sp, #60	; 0x3c
 8027434:	a80b      	add	r0, sp, #44	; 0x2c
 8027436:	f7ed fbe7 	bl	8014c08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802743a:	4632      	mov	r2, r6
 802743c:	a910      	add	r1, sp, #64	; 0x40
 802743e:	a80c      	add	r0, sp, #48	; 0x30
 8027440:	f7ed fbe2 	bl	8014c08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027444:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8027448:	edd7 4a00 	vldr	s9, [r7]
 802744c:	edd7 5a01 	vldr	s11, [r7, #4]
 8027450:	ed98 4a00 	vldr	s8, [r8]
 8027454:	ed98 5a01 	vldr	s10, [r8, #4]
 8027458:	ed99 9a00 	vldr	s18, [r9]
 802745c:	ed99 8a01 	vldr	s16, [r9, #4]
 8027460:	edd9 8a02 	vldr	s17, [r9, #8]
 8027464:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8027468:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 802746c:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8027470:	eef0 6a67 	vmov.f32	s13, s15
 8027474:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8027478:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 802747c:	eeb0 7a67 	vmov.f32	s14, s15
 8027480:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8027484:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 8027488:	eeb0 6a67 	vmov.f32	s12, s15
 802748c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027490:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8027494:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 8027498:	ee16 6a10 	vmov	r6, s12
 802749c:	eeb0 6a67 	vmov.f32	s12, s15
 80274a0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80274a4:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 80274a8:	f8d7 a008 	ldr.w	sl, [r7, #8]
 80274ac:	f8d8 b008 	ldr.w	fp, [r8, #8]
 80274b0:	68ff      	ldr	r7, [r7, #12]
 80274b2:	9624      	str	r6, [sp, #144]	; 0x90
 80274b4:	ee16 0a10 	vmov	r0, s12
 80274b8:	eeb0 6a67 	vmov.f32	s12, s15
 80274bc:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80274c0:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 80274c4:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 80274c8:	ee16 1a10 	vmov	r1, s12
 80274cc:	eeb0 6a67 	vmov.f32	s12, s15
 80274d0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80274d4:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 80274d8:	ee16 2a10 	vmov	r2, s12
 80274dc:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 80274e0:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 80274e4:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80274e8:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 80274ec:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80274f0:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 80274f4:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 80274f8:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 80274fc:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8027500:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 8027504:	922d      	str	r2, [sp, #180]	; 0xb4
 8027506:	4a2b      	ldr	r2, [pc, #172]	; (80275b4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 8027508:	9b06      	ldr	r3, [sp, #24]
 802750a:	8812      	ldrh	r2, [r2, #0]
 802750c:	9317      	str	r3, [sp, #92]	; 0x5c
 802750e:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8027512:	9b07      	ldr	r3, [sp, #28]
 8027514:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8027518:	4628      	mov	r0, r5
 802751a:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 802751e:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 8027522:	9218      	str	r2, [sp, #96]	; 0x60
 8027524:	9319      	str	r3, [sp, #100]	; 0x64
 8027526:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 802752a:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 802752e:	9731      	str	r7, [sp, #196]	; 0xc4
 8027530:	f7f1 f830 	bl	8018594 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8027534:	901a      	str	r0, [sp, #104]	; 0x68
 8027536:	4628      	mov	r0, r5
 8027538:	f7f0 ff10 	bl	801835c <_ZNK8touchgfx6Bitmap8getWidthEv>
 802753c:	901b      	str	r0, [sp, #108]	; 0x6c
 802753e:	4628      	mov	r0, r5
 8027540:	f7f0 ff40 	bl	80183c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8027544:	901c      	str	r0, [sp, #112]	; 0x70
 8027546:	4628      	mov	r0, r5
 8027548:	f7f0 ff08 	bl	801835c <_ZNK8touchgfx6Bitmap8getWidthEv>
 802754c:	eeb4 9a48 	vcmp.f32	s18, s16
 8027550:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027554:	901d      	str	r0, [sp, #116]	; 0x74
 8027556:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 802755a:	d107      	bne.n	802756c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 802755c:	eeb4 8a68 	vcmp.f32	s16, s17
 8027560:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027564:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8027568:	bf08      	it	eq
 802756a:	461e      	moveq	r6, r3
 802756c:	4b12      	ldr	r3, [pc, #72]	; (80275b8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 802756e:	681b      	ldr	r3, [r3, #0]
 8027570:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8027574:	b10a      	cbz	r2, 802757a <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 8027576:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8027578:	b905      	cbnz	r5, 802757c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 802757a:	689d      	ldr	r5, [r3, #8]
 802757c:	682b      	ldr	r3, [r5, #0]
 802757e:	4620      	mov	r0, r4
 8027580:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8027582:	f7ff fec2 	bl	802730a <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 8027586:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 802758a:	9604      	str	r6, [sp, #16]
 802758c:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8027590:	ab13      	add	r3, sp, #76	; 0x4c
 8027592:	9301      	str	r3, [sp, #4]
 8027594:	ab15      	add	r3, sp, #84	; 0x54
 8027596:	9300      	str	r3, [sp, #0]
 8027598:	aa1e      	add	r2, sp, #120	; 0x78
 802759a:	ab19      	add	r3, sp, #100	; 0x64
 802759c:	a917      	add	r1, sp, #92	; 0x5c
 802759e:	4628      	mov	r0, r5
 80275a0:	47b8      	blx	r7
 80275a2:	b033      	add	sp, #204	; 0xcc
 80275a4:	ecbd 8b04 	vpop	{d8-d9}
 80275a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80275ac:	2300      	movs	r3, #0
 80275ae:	9312      	str	r3, [sp, #72]	; 0x48
 80275b0:	e6f7      	b.n	80273a2 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 80275b2:	bf00      	nop
 80275b4:	200137ce 	.word	0x200137ce
 80275b8:	200137d4 	.word	0x200137d4

080275bc <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 80275bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80275c0:	ed2d 8b02 	vpush	{d8}
 80275c4:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80275c8:	b098      	sub	sp, #96	; 0x60
 80275ca:	4604      	mov	r4, r0
 80275cc:	4688      	mov	r8, r1
 80275ce:	2b00      	cmp	r3, #0
 80275d0:	d077      	beq.n	80276c2 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 80275d2:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80275d6:	4628      	mov	r0, r5
 80275d8:	f7f0 fec0 	bl	801835c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80275dc:	ee07 0a90 	vmov	s15, r0
 80275e0:	4628      	mov	r0, r5
 80275e2:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 80275e6:	f7f0 feed 	bl	80183c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80275ea:	4b4e      	ldr	r3, [pc, #312]	; (8027724 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 80275ec:	781b      	ldrb	r3, [r3, #0]
 80275ee:	ee07 0a90 	vmov	s15, r0
 80275f2:	2b01      	cmp	r3, #1
 80275f4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80275f8:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 80275fc:	d066      	beq.n	80276cc <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 80275fe:	eeb0 6a47 	vmov.f32	s12, s14
 8027602:	ee17 3a10 	vmov	r3, s14
 8027606:	eeb0 4a48 	vmov.f32	s8, s16
 802760a:	eeb0 7a48 	vmov.f32	s14, s16
 802760e:	eef0 4a67 	vmov.f32	s9, s15
 8027612:	eeb0 8a67 	vmov.f32	s16, s15
 8027616:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 802761a:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 802761e:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 8027622:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 8027626:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 802762a:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 802762e:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8027630:	6e66      	ldr	r6, [r4, #100]	; 0x64
 8027632:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8027634:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 8027638:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 802763c:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8027640:	ee73 1a65 	vsub.f32	s3, s6, s11
 8027644:	ee72 6ac5 	vsub.f32	s13, s5, s10
 8027648:	ee32 1a45 	vsub.f32	s2, s4, s10
 802764c:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8027650:	ee73 1ae5 	vsub.f32	s3, s7, s11
 8027654:	eee1 6a21 	vfma.f32	s13, s2, s3
 8027658:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 802765c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027660:	dd3d      	ble.n	80276de <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 8027662:	ed8d 5a04 	vstr	s10, [sp, #16]
 8027666:	ed8d 2a05 	vstr	s4, [sp, #20]
 802766a:	edcd 2a06 	vstr	s5, [sp, #24]
 802766e:	f8cd c01c 	str.w	ip, [sp, #28]
 8027672:	edcd 5a08 	vstr	s11, [sp, #32]
 8027676:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 802767a:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 802767e:	970b      	str	r7, [sp, #44]	; 0x2c
 8027680:	960c      	str	r6, [sp, #48]	; 0x30
 8027682:	950d      	str	r5, [sp, #52]	; 0x34
 8027684:	920e      	str	r2, [sp, #56]	; 0x38
 8027686:	900f      	str	r0, [sp, #60]	; 0x3c
 8027688:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 802768c:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8027690:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 8027694:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 8027698:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 802769c:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 80276a0:	9316      	str	r3, [sp, #88]	; 0x58
 80276a2:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 80276a6:	ab14      	add	r3, sp, #80	; 0x50
 80276a8:	9303      	str	r3, [sp, #12]
 80276aa:	ab10      	add	r3, sp, #64	; 0x40
 80276ac:	9302      	str	r3, [sp, #8]
 80276ae:	ab0c      	add	r3, sp, #48	; 0x30
 80276b0:	9301      	str	r3, [sp, #4]
 80276b2:	ab08      	add	r3, sp, #32
 80276b4:	9300      	str	r3, [sp, #0]
 80276b6:	2200      	movs	r2, #0
 80276b8:	ab04      	add	r3, sp, #16
 80276ba:	4641      	mov	r1, r8
 80276bc:	4620      	mov	r0, r4
 80276be:	f7ff fe2d 	bl	802731c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 80276c2:	b018      	add	sp, #96	; 0x60
 80276c4:	ecbd 8b02 	vpop	{d8}
 80276c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80276cc:	eeb0 6a48 	vmov.f32	s12, s16
 80276d0:	eef0 4a47 	vmov.f32	s9, s14
 80276d4:	ee17 3a90 	vmov	r3, s15
 80276d8:	eeb0 4a67 	vmov.f32	s8, s15
 80276dc:	e79b      	b.n	8027616 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 80276de:	ed8d 5a05 	vstr	s10, [sp, #20]
 80276e2:	ed8d 2a04 	vstr	s4, [sp, #16]
 80276e6:	f8cd c018 	str.w	ip, [sp, #24]
 80276ea:	edcd 2a07 	vstr	s5, [sp, #28]
 80276ee:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 80276f2:	ed8d 3a08 	vstr	s6, [sp, #32]
 80276f6:	970a      	str	r7, [sp, #40]	; 0x28
 80276f8:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 80276fc:	960d      	str	r6, [sp, #52]	; 0x34
 80276fe:	950c      	str	r5, [sp, #48]	; 0x30
 8027700:	900e      	str	r0, [sp, #56]	; 0x38
 8027702:	920f      	str	r2, [sp, #60]	; 0x3c
 8027704:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 8027708:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 802770c:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8027710:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8027714:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 8027718:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 802771c:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8027720:	9317      	str	r3, [sp, #92]	; 0x5c
 8027722:	e7c0      	b.n	80276a6 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8027724:	200137cc 	.word	0x200137cc

08027728 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 8027728:	b5f0      	push	{r4, r5, r6, r7, lr}
 802772a:	b08d      	sub	sp, #52	; 0x34
 802772c:	2300      	movs	r3, #0
 802772e:	9304      	str	r3, [sp, #16]
 8027730:	9305      	str	r3, [sp, #20]
 8027732:	9306      	str	r3, [sp, #24]
 8027734:	aa04      	add	r2, sp, #16
 8027736:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 802773a:	9307      	str	r3, [sp, #28]
 802773c:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8027740:	4613      	mov	r3, r2
 8027742:	f101 0710 	add.w	r7, r1, #16
 8027746:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8027784 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 802774a:	460c      	mov	r4, r1
 802774c:	4605      	mov	r5, r0
 802774e:	ecb4 7a01 	vldmia	r4!, {s14}
 8027752:	ecf5 6a01 	vldmia	r5!, {s13}
 8027756:	42bc      	cmp	r4, r7
 8027758:	eee6 7a87 	vfma.f32	s15, s13, s14
 802775c:	d1f7      	bne.n	802774e <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 802775e:	3010      	adds	r0, #16
 8027760:	42b0      	cmp	r0, r6
 8027762:	ece2 7a01 	vstmia	r2!, {s15}
 8027766:	d1ee      	bne.n	8027746 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 8027768:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802776a:	ac0c      	add	r4, sp, #48	; 0x30
 802776c:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8027770:	ed9d 0a08 	vldr	s0, [sp, #32]
 8027774:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 8027778:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 802777c:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8027780:	b00d      	add	sp, #52	; 0x34
 8027782:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027784:	00000000 	.word	0x00000000

08027788 <_ZN8touchgfx9Matrix4x4C1Ev>:
 8027788:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 80277b8 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 802778c:	2300      	movs	r3, #0
 802778e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8027792:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 8027796:	2200      	movs	r2, #0
 8027798:	4293      	cmp	r3, r2
 802779a:	f102 0201 	add.w	r2, r2, #1
 802779e:	bf14      	ite	ne
 80277a0:	eef0 6a47 	vmovne.f32	s13, s14
 80277a4:	eef0 6a67 	vmoveq.f32	s13, s15
 80277a8:	2a04      	cmp	r2, #4
 80277aa:	ece1 6a01 	vstmia	r1!, {s13}
 80277ae:	d1f3      	bne.n	8027798 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 80277b0:	3301      	adds	r3, #1
 80277b2:	2b04      	cmp	r3, #4
 80277b4:	d1ed      	bne.n	8027792 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 80277b6:	4770      	bx	lr
 80277b8:	00000000 	.word	0x00000000

080277bc <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 80277bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80277c0:	460c      	mov	r4, r1
 80277c2:	4605      	mov	r5, r0
 80277c4:	4690      	mov	r8, r2
 80277c6:	f7ff ffdf 	bl	8027788 <_ZN8touchgfx9Matrix4x4C1Ev>
 80277ca:	4628      	mov	r0, r5
 80277cc:	4621      	mov	r1, r4
 80277ce:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 80277d2:	2300      	movs	r3, #0
 80277d4:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8027814 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 80277d8:	eb08 0603 	add.w	r6, r8, r3
 80277dc:	460f      	mov	r7, r1
 80277de:	2400      	movs	r4, #0
 80277e0:	4632      	mov	r2, r6
 80277e2:	ecf7 6a01 	vldmia	r7!, {s13}
 80277e6:	ed92 7a00 	vldr	s14, [r2]
 80277ea:	3401      	adds	r4, #1
 80277ec:	2c04      	cmp	r4, #4
 80277ee:	f106 0610 	add.w	r6, r6, #16
 80277f2:	eee6 7a87 	vfma.f32	s15, s13, s14
 80277f6:	d1f3      	bne.n	80277e0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 80277f8:	18c2      	adds	r2, r0, r3
 80277fa:	3304      	adds	r3, #4
 80277fc:	2b10      	cmp	r3, #16
 80277fe:	edc2 7a00 	vstr	s15, [r2]
 8027802:	d1e7      	bne.n	80277d4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 8027804:	3110      	adds	r1, #16
 8027806:	4561      	cmp	r1, ip
 8027808:	f100 0010 	add.w	r0, r0, #16
 802780c:	d1e1      	bne.n	80277d2 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 802780e:	4628      	mov	r0, r5
 8027810:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027814:	00000000 	.word	0x00000000

08027818 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 8027818:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802781c:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8027820:	f100 0320 	add.w	r3, r0, #32
 8027824:	3030      	adds	r0, #48	; 0x30
 8027826:	ecf3 7a01 	vldmia	r3!, {s15}
 802782a:	ee60 7a27 	vmul.f32	s15, s0, s15
 802782e:	4283      	cmp	r3, r0
 8027830:	edc3 7a03 	vstr	s15, [r3, #12]
 8027834:	d1f7      	bne.n	8027826 <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 8027836:	4770      	bx	lr

08027838 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 8027838:	b510      	push	{r4, lr}
 802783a:	ed2d 8b02 	vpush	{d8}
 802783e:	4604      	mov	r4, r0
 8027840:	eef0 8a40 	vmov.f32	s17, s0
 8027844:	f000 f938 	bl	8027ab8 <sinf>
 8027848:	eeb0 8a40 	vmov.f32	s16, s0
 802784c:	eeb0 0a68 	vmov.f32	s0, s17
 8027850:	f000 f8ee 	bl	8027a30 <cosf>
 8027854:	f104 0310 	add.w	r3, r4, #16
 8027858:	f104 0220 	add.w	r2, r4, #32
 802785c:	eeb1 6a48 	vneg.f32	s12, s16
 8027860:	edd3 7a04 	vldr	s15, [r3, #16]
 8027864:	edd3 6a00 	vldr	s13, [r3]
 8027868:	ee26 7a27 	vmul.f32	s14, s12, s15
 802786c:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027870:	eea6 7a80 	vfma.f32	s14, s13, s0
 8027874:	eee6 7a88 	vfma.f32	s15, s13, s16
 8027878:	eca3 7a01 	vstmia	r3!, {s14}
 802787c:	429a      	cmp	r2, r3
 802787e:	edc3 7a03 	vstr	s15, [r3, #12]
 8027882:	d1ed      	bne.n	8027860 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8027884:	ecbd 8b02 	vpop	{d8}
 8027888:	4620      	mov	r0, r4
 802788a:	bd10      	pop	{r4, pc}

0802788c <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 802788c:	b510      	push	{r4, lr}
 802788e:	ed2d 8b02 	vpush	{d8}
 8027892:	4604      	mov	r4, r0
 8027894:	eef0 8a40 	vmov.f32	s17, s0
 8027898:	f000 f90e 	bl	8027ab8 <sinf>
 802789c:	eeb0 8a40 	vmov.f32	s16, s0
 80278a0:	eeb0 0a68 	vmov.f32	s0, s17
 80278a4:	f000 f8c4 	bl	8027a30 <cosf>
 80278a8:	4623      	mov	r3, r4
 80278aa:	f104 0210 	add.w	r2, r4, #16
 80278ae:	eeb1 6a48 	vneg.f32	s12, s16
 80278b2:	edd3 7a08 	vldr	s15, [r3, #32]
 80278b6:	edd3 6a00 	vldr	s13, [r3]
 80278ba:	ee27 7a88 	vmul.f32	s14, s15, s16
 80278be:	ee67 7a80 	vmul.f32	s15, s15, s0
 80278c2:	eea6 7a80 	vfma.f32	s14, s13, s0
 80278c6:	eee6 7a26 	vfma.f32	s15, s12, s13
 80278ca:	eca3 7a01 	vstmia	r3!, {s14}
 80278ce:	429a      	cmp	r2, r3
 80278d0:	edc3 7a07 	vstr	s15, [r3, #28]
 80278d4:	d1ed      	bne.n	80278b2 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 80278d6:	ecbd 8b02 	vpop	{d8}
 80278da:	4620      	mov	r0, r4
 80278dc:	bd10      	pop	{r4, pc}

080278de <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 80278de:	b510      	push	{r4, lr}
 80278e0:	ed2d 8b02 	vpush	{d8}
 80278e4:	4604      	mov	r4, r0
 80278e6:	eef0 8a40 	vmov.f32	s17, s0
 80278ea:	f000 f8e5 	bl	8027ab8 <sinf>
 80278ee:	eeb0 8a40 	vmov.f32	s16, s0
 80278f2:	eeb0 0a68 	vmov.f32	s0, s17
 80278f6:	f000 f89b 	bl	8027a30 <cosf>
 80278fa:	4623      	mov	r3, r4
 80278fc:	f104 0210 	add.w	r2, r4, #16
 8027900:	eeb1 6a48 	vneg.f32	s12, s16
 8027904:	edd3 7a04 	vldr	s15, [r3, #16]
 8027908:	edd3 6a00 	vldr	s13, [r3]
 802790c:	ee26 7a27 	vmul.f32	s14, s12, s15
 8027910:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027914:	eea6 7a80 	vfma.f32	s14, s13, s0
 8027918:	eee6 7a88 	vfma.f32	s15, s13, s16
 802791c:	eca3 7a01 	vstmia	r3!, {s14}
 8027920:	429a      	cmp	r2, r3
 8027922:	edc3 7a03 	vstr	s15, [r3, #12]
 8027926:	d1ed      	bne.n	8027904 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8027928:	ecbd 8b02 	vpop	{d8}
 802792c:	4620      	mov	r0, r4
 802792e:	bd10      	pop	{r4, pc}

08027930 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8027930:	4603      	mov	r3, r0
 8027932:	f100 0210 	add.w	r2, r0, #16
 8027936:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 802793a:	edd3 7a00 	vldr	s15, [r3]
 802793e:	eee7 7a00 	vfma.f32	s15, s14, s0
 8027942:	ece3 7a01 	vstmia	r3!, {s15}
 8027946:	4293      	cmp	r3, r2
 8027948:	d1f5      	bne.n	8027936 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 802794a:	4770      	bx	lr

0802794c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 802794c:	f100 0310 	add.w	r3, r0, #16
 8027950:	f100 0220 	add.w	r2, r0, #32
 8027954:	ed93 7a08 	vldr	s14, [r3, #32]
 8027958:	edd3 7a00 	vldr	s15, [r3]
 802795c:	eee7 7a00 	vfma.f32	s15, s14, s0
 8027960:	ece3 7a01 	vstmia	r3!, {s15}
 8027964:	4293      	cmp	r3, r2
 8027966:	d1f5      	bne.n	8027954 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 8027968:	4770      	bx	lr

0802796a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 802796a:	f100 0320 	add.w	r3, r0, #32
 802796e:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8027972:	ed93 7a04 	vldr	s14, [r3, #16]
 8027976:	edd3 7a00 	vldr	s15, [r3]
 802797a:	eee7 7a00 	vfma.f32	s15, s14, s0
 802797e:	ece3 7a01 	vstmia	r3!, {s15}
 8027982:	4293      	cmp	r3, r2
 8027984:	d1f5      	bne.n	8027972 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 8027986:	4770      	bx	lr

08027988 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8027988:	4603      	mov	r3, r0
 802798a:	f100 0210 	add.w	r2, r0, #16
 802798e:	edd3 7a00 	vldr	s15, [r3]
 8027992:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027996:	ece3 7a01 	vstmia	r3!, {s15}
 802799a:	4293      	cmp	r3, r2
 802799c:	d1f7      	bne.n	802798e <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 802799e:	4770      	bx	lr

080279a0 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 80279a0:	f100 0310 	add.w	r3, r0, #16
 80279a4:	f100 0220 	add.w	r2, r0, #32
 80279a8:	edd3 7a00 	vldr	s15, [r3]
 80279ac:	ee67 7a80 	vmul.f32	s15, s15, s0
 80279b0:	ece3 7a01 	vstmia	r3!, {s15}
 80279b4:	4293      	cmp	r3, r2
 80279b6:	d1f7      	bne.n	80279a8 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 80279b8:	4770      	bx	lr

080279ba <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 80279ba:	f100 0320 	add.w	r3, r0, #32
 80279be:	f100 0230 	add.w	r2, r0, #48	; 0x30
 80279c2:	edd3 7a00 	vldr	s15, [r3]
 80279c6:	ee67 7a80 	vmul.f32	s15, s15, s0
 80279ca:	ece3 7a01 	vstmia	r3!, {s15}
 80279ce:	4293      	cmp	r3, r2
 80279d0:	d1f7      	bne.n	80279c2 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 80279d2:	4770      	bx	lr

080279d4 <__aeabi_atexit>:
 80279d4:	460b      	mov	r3, r1
 80279d6:	4601      	mov	r1, r0
 80279d8:	4618      	mov	r0, r3
 80279da:	f000 bed1 	b.w	8028780 <__cxa_atexit>

080279de <_ZdlPvj>:
 80279de:	f000 b812 	b.w	8027a06 <_ZdlPv>

080279e2 <__cxa_guard_acquire>:
 80279e2:	6803      	ldr	r3, [r0, #0]
 80279e4:	07db      	lsls	r3, r3, #31
 80279e6:	d406      	bmi.n	80279f6 <__cxa_guard_acquire+0x14>
 80279e8:	7843      	ldrb	r3, [r0, #1]
 80279ea:	b103      	cbz	r3, 80279ee <__cxa_guard_acquire+0xc>
 80279ec:	deff      	udf	#255	; 0xff
 80279ee:	2301      	movs	r3, #1
 80279f0:	7043      	strb	r3, [r0, #1]
 80279f2:	4618      	mov	r0, r3
 80279f4:	4770      	bx	lr
 80279f6:	2000      	movs	r0, #0
 80279f8:	4770      	bx	lr

080279fa <__cxa_guard_release>:
 80279fa:	2301      	movs	r3, #1
 80279fc:	6003      	str	r3, [r0, #0]
 80279fe:	4770      	bx	lr

08027a00 <__cxa_pure_virtual>:
 8027a00:	b508      	push	{r3, lr}
 8027a02:	f000 f80f 	bl	8027a24 <_ZSt9terminatev>

08027a06 <_ZdlPv>:
 8027a06:	f000 be07 	b.w	8028618 <free>

08027a0a <_ZN10__cxxabiv111__terminateEPFvvE>:
 8027a0a:	b508      	push	{r3, lr}
 8027a0c:	4780      	blx	r0
 8027a0e:	f000 fdcf 	bl	80285b0 <abort>
	...

08027a14 <_ZSt13get_terminatev>:
 8027a14:	4b02      	ldr	r3, [pc, #8]	; (8027a20 <_ZSt13get_terminatev+0xc>)
 8027a16:	6818      	ldr	r0, [r3, #0]
 8027a18:	f3bf 8f5b 	dmb	ish
 8027a1c:	4770      	bx	lr
 8027a1e:	bf00      	nop
 8027a20:	20000104 	.word	0x20000104

08027a24 <_ZSt9terminatev>:
 8027a24:	b508      	push	{r3, lr}
 8027a26:	f7ff fff5 	bl	8027a14 <_ZSt13get_terminatev>
 8027a2a:	f7ff ffee 	bl	8027a0a <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08027a30 <cosf>:
 8027a30:	ee10 3a10 	vmov	r3, s0
 8027a34:	b507      	push	{r0, r1, r2, lr}
 8027a36:	4a1e      	ldr	r2, [pc, #120]	; (8027ab0 <cosf+0x80>)
 8027a38:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8027a3c:	4293      	cmp	r3, r2
 8027a3e:	dc06      	bgt.n	8027a4e <cosf+0x1e>
 8027a40:	eddf 0a1c 	vldr	s1, [pc, #112]	; 8027ab4 <cosf+0x84>
 8027a44:	b003      	add	sp, #12
 8027a46:	f85d eb04 	ldr.w	lr, [sp], #4
 8027a4a:	f000 b8ff 	b.w	8027c4c <__kernel_cosf>
 8027a4e:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8027a52:	db04      	blt.n	8027a5e <cosf+0x2e>
 8027a54:	ee30 0a40 	vsub.f32	s0, s0, s0
 8027a58:	b003      	add	sp, #12
 8027a5a:	f85d fb04 	ldr.w	pc, [sp], #4
 8027a5e:	4668      	mov	r0, sp
 8027a60:	f000 f99a 	bl	8027d98 <__ieee754_rem_pio2f>
 8027a64:	f000 0003 	and.w	r0, r0, #3
 8027a68:	2801      	cmp	r0, #1
 8027a6a:	d009      	beq.n	8027a80 <cosf+0x50>
 8027a6c:	2802      	cmp	r0, #2
 8027a6e:	d010      	beq.n	8027a92 <cosf+0x62>
 8027a70:	b9b0      	cbnz	r0, 8027aa0 <cosf+0x70>
 8027a72:	eddd 0a01 	vldr	s1, [sp, #4]
 8027a76:	ed9d 0a00 	vldr	s0, [sp]
 8027a7a:	f000 f8e7 	bl	8027c4c <__kernel_cosf>
 8027a7e:	e7eb      	b.n	8027a58 <cosf+0x28>
 8027a80:	eddd 0a01 	vldr	s1, [sp, #4]
 8027a84:	ed9d 0a00 	vldr	s0, [sp]
 8027a88:	f000 f93e 	bl	8027d08 <__kernel_sinf>
 8027a8c:	eeb1 0a40 	vneg.f32	s0, s0
 8027a90:	e7e2      	b.n	8027a58 <cosf+0x28>
 8027a92:	eddd 0a01 	vldr	s1, [sp, #4]
 8027a96:	ed9d 0a00 	vldr	s0, [sp]
 8027a9a:	f000 f8d7 	bl	8027c4c <__kernel_cosf>
 8027a9e:	e7f5      	b.n	8027a8c <cosf+0x5c>
 8027aa0:	eddd 0a01 	vldr	s1, [sp, #4]
 8027aa4:	ed9d 0a00 	vldr	s0, [sp]
 8027aa8:	2001      	movs	r0, #1
 8027aaa:	f000 f92d 	bl	8027d08 <__kernel_sinf>
 8027aae:	e7d3      	b.n	8027a58 <cosf+0x28>
 8027ab0:	3f490fd8 	.word	0x3f490fd8
 8027ab4:	00000000 	.word	0x00000000

08027ab8 <sinf>:
 8027ab8:	ee10 3a10 	vmov	r3, s0
 8027abc:	b507      	push	{r0, r1, r2, lr}
 8027abe:	4a1f      	ldr	r2, [pc, #124]	; (8027b3c <sinf+0x84>)
 8027ac0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8027ac4:	4293      	cmp	r3, r2
 8027ac6:	dc07      	bgt.n	8027ad8 <sinf+0x20>
 8027ac8:	eddf 0a1d 	vldr	s1, [pc, #116]	; 8027b40 <sinf+0x88>
 8027acc:	2000      	movs	r0, #0
 8027ace:	b003      	add	sp, #12
 8027ad0:	f85d eb04 	ldr.w	lr, [sp], #4
 8027ad4:	f000 b918 	b.w	8027d08 <__kernel_sinf>
 8027ad8:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8027adc:	db04      	blt.n	8027ae8 <sinf+0x30>
 8027ade:	ee30 0a40 	vsub.f32	s0, s0, s0
 8027ae2:	b003      	add	sp, #12
 8027ae4:	f85d fb04 	ldr.w	pc, [sp], #4
 8027ae8:	4668      	mov	r0, sp
 8027aea:	f000 f955 	bl	8027d98 <__ieee754_rem_pio2f>
 8027aee:	f000 0003 	and.w	r0, r0, #3
 8027af2:	2801      	cmp	r0, #1
 8027af4:	d00a      	beq.n	8027b0c <sinf+0x54>
 8027af6:	2802      	cmp	r0, #2
 8027af8:	d00f      	beq.n	8027b1a <sinf+0x62>
 8027afa:	b9c0      	cbnz	r0, 8027b2e <sinf+0x76>
 8027afc:	eddd 0a01 	vldr	s1, [sp, #4]
 8027b00:	ed9d 0a00 	vldr	s0, [sp]
 8027b04:	2001      	movs	r0, #1
 8027b06:	f000 f8ff 	bl	8027d08 <__kernel_sinf>
 8027b0a:	e7ea      	b.n	8027ae2 <sinf+0x2a>
 8027b0c:	eddd 0a01 	vldr	s1, [sp, #4]
 8027b10:	ed9d 0a00 	vldr	s0, [sp]
 8027b14:	f000 f89a 	bl	8027c4c <__kernel_cosf>
 8027b18:	e7e3      	b.n	8027ae2 <sinf+0x2a>
 8027b1a:	eddd 0a01 	vldr	s1, [sp, #4]
 8027b1e:	ed9d 0a00 	vldr	s0, [sp]
 8027b22:	2001      	movs	r0, #1
 8027b24:	f000 f8f0 	bl	8027d08 <__kernel_sinf>
 8027b28:	eeb1 0a40 	vneg.f32	s0, s0
 8027b2c:	e7d9      	b.n	8027ae2 <sinf+0x2a>
 8027b2e:	eddd 0a01 	vldr	s1, [sp, #4]
 8027b32:	ed9d 0a00 	vldr	s0, [sp]
 8027b36:	f000 f889 	bl	8027c4c <__kernel_cosf>
 8027b3a:	e7f5      	b.n	8027b28 <sinf+0x70>
 8027b3c:	3f490fd8 	.word	0x3f490fd8
 8027b40:	00000000 	.word	0x00000000

08027b44 <ceilf>:
 8027b44:	ee10 3a10 	vmov	r3, s0
 8027b48:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8027b4c:	3a7f      	subs	r2, #127	; 0x7f
 8027b4e:	2a16      	cmp	r2, #22
 8027b50:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8027b54:	dc2a      	bgt.n	8027bac <ceilf+0x68>
 8027b56:	2a00      	cmp	r2, #0
 8027b58:	da11      	bge.n	8027b7e <ceilf+0x3a>
 8027b5a:	eddf 7a19 	vldr	s15, [pc, #100]	; 8027bc0 <ceilf+0x7c>
 8027b5e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8027b62:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027b66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027b6a:	dd05      	ble.n	8027b78 <ceilf+0x34>
 8027b6c:	2b00      	cmp	r3, #0
 8027b6e:	db23      	blt.n	8027bb8 <ceilf+0x74>
 8027b70:	2900      	cmp	r1, #0
 8027b72:	bf18      	it	ne
 8027b74:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 8027b78:	ee00 3a10 	vmov	s0, r3
 8027b7c:	4770      	bx	lr
 8027b7e:	4911      	ldr	r1, [pc, #68]	; (8027bc4 <ceilf+0x80>)
 8027b80:	4111      	asrs	r1, r2
 8027b82:	420b      	tst	r3, r1
 8027b84:	d0fa      	beq.n	8027b7c <ceilf+0x38>
 8027b86:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8027bc0 <ceilf+0x7c>
 8027b8a:	ee30 0a27 	vadd.f32	s0, s0, s15
 8027b8e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027b92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027b96:	ddef      	ble.n	8027b78 <ceilf+0x34>
 8027b98:	2b00      	cmp	r3, #0
 8027b9a:	bfc2      	ittt	gt
 8027b9c:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8027ba0:	fa40 f202 	asrgt.w	r2, r0, r2
 8027ba4:	189b      	addgt	r3, r3, r2
 8027ba6:	ea23 0301 	bic.w	r3, r3, r1
 8027baa:	e7e5      	b.n	8027b78 <ceilf+0x34>
 8027bac:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8027bb0:	d3e4      	bcc.n	8027b7c <ceilf+0x38>
 8027bb2:	ee30 0a00 	vadd.f32	s0, s0, s0
 8027bb6:	4770      	bx	lr
 8027bb8:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8027bbc:	e7dc      	b.n	8027b78 <ceilf+0x34>
 8027bbe:	bf00      	nop
 8027bc0:	7149f2ca 	.word	0x7149f2ca
 8027bc4:	007fffff 	.word	0x007fffff

08027bc8 <floorf>:
 8027bc8:	ee10 3a10 	vmov	r3, s0
 8027bcc:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8027bd0:	3a7f      	subs	r2, #127	; 0x7f
 8027bd2:	2a16      	cmp	r2, #22
 8027bd4:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8027bd8:	dc2a      	bgt.n	8027c30 <floorf+0x68>
 8027bda:	2a00      	cmp	r2, #0
 8027bdc:	da11      	bge.n	8027c02 <floorf+0x3a>
 8027bde:	eddf 7a18 	vldr	s15, [pc, #96]	; 8027c40 <floorf+0x78>
 8027be2:	ee30 0a27 	vadd.f32	s0, s0, s15
 8027be6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027bea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027bee:	dd05      	ble.n	8027bfc <floorf+0x34>
 8027bf0:	2b00      	cmp	r3, #0
 8027bf2:	da23      	bge.n	8027c3c <floorf+0x74>
 8027bf4:	4a13      	ldr	r2, [pc, #76]	; (8027c44 <floorf+0x7c>)
 8027bf6:	2900      	cmp	r1, #0
 8027bf8:	bf18      	it	ne
 8027bfa:	4613      	movne	r3, r2
 8027bfc:	ee00 3a10 	vmov	s0, r3
 8027c00:	4770      	bx	lr
 8027c02:	4911      	ldr	r1, [pc, #68]	; (8027c48 <floorf+0x80>)
 8027c04:	4111      	asrs	r1, r2
 8027c06:	420b      	tst	r3, r1
 8027c08:	d0fa      	beq.n	8027c00 <floorf+0x38>
 8027c0a:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8027c40 <floorf+0x78>
 8027c0e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8027c12:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027c16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027c1a:	ddef      	ble.n	8027bfc <floorf+0x34>
 8027c1c:	2b00      	cmp	r3, #0
 8027c1e:	bfbe      	ittt	lt
 8027c20:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 8027c24:	fa40 f202 	asrlt.w	r2, r0, r2
 8027c28:	189b      	addlt	r3, r3, r2
 8027c2a:	ea23 0301 	bic.w	r3, r3, r1
 8027c2e:	e7e5      	b.n	8027bfc <floorf+0x34>
 8027c30:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8027c34:	d3e4      	bcc.n	8027c00 <floorf+0x38>
 8027c36:	ee30 0a00 	vadd.f32	s0, s0, s0
 8027c3a:	4770      	bx	lr
 8027c3c:	2300      	movs	r3, #0
 8027c3e:	e7dd      	b.n	8027bfc <floorf+0x34>
 8027c40:	7149f2ca 	.word	0x7149f2ca
 8027c44:	bf800000 	.word	0xbf800000
 8027c48:	007fffff 	.word	0x007fffff

08027c4c <__kernel_cosf>:
 8027c4c:	ee10 3a10 	vmov	r3, s0
 8027c50:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8027c54:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8027c58:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8027c5c:	da05      	bge.n	8027c6a <__kernel_cosf+0x1e>
 8027c5e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8027c62:	ee17 2a90 	vmov	r2, s15
 8027c66:	2a00      	cmp	r2, #0
 8027c68:	d03b      	beq.n	8027ce2 <__kernel_cosf+0x96>
 8027c6a:	ee20 7a00 	vmul.f32	s14, s0, s0
 8027c6e:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8027ce8 <__kernel_cosf+0x9c>
 8027c72:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 8027cec <__kernel_cosf+0xa0>
 8027c76:	4a1e      	ldr	r2, [pc, #120]	; (8027cf0 <__kernel_cosf+0xa4>)
 8027c78:	eea7 6a27 	vfma.f32	s12, s14, s15
 8027c7c:	4293      	cmp	r3, r2
 8027c7e:	eddf 7a1d 	vldr	s15, [pc, #116]	; 8027cf4 <__kernel_cosf+0xa8>
 8027c82:	eee6 7a07 	vfma.f32	s15, s12, s14
 8027c86:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 8027cf8 <__kernel_cosf+0xac>
 8027c8a:	eea7 6a87 	vfma.f32	s12, s15, s14
 8027c8e:	eddf 7a1b 	vldr	s15, [pc, #108]	; 8027cfc <__kernel_cosf+0xb0>
 8027c92:	eee6 7a07 	vfma.f32	s15, s12, s14
 8027c96:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 8027d00 <__kernel_cosf+0xb4>
 8027c9a:	eea7 6a87 	vfma.f32	s12, s15, s14
 8027c9e:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 8027ca2:	ee26 6a07 	vmul.f32	s12, s12, s14
 8027ca6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8027caa:	eee7 0a06 	vfma.f32	s1, s14, s12
 8027cae:	ee67 7a27 	vmul.f32	s15, s14, s15
 8027cb2:	dc04      	bgt.n	8027cbe <__kernel_cosf+0x72>
 8027cb4:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8027cb8:	ee36 0ae7 	vsub.f32	s0, s13, s15
 8027cbc:	4770      	bx	lr
 8027cbe:	4a11      	ldr	r2, [pc, #68]	; (8027d04 <__kernel_cosf+0xb8>)
 8027cc0:	4293      	cmp	r3, r2
 8027cc2:	bfda      	itte	le
 8027cc4:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 8027cc8:	ee07 3a10 	vmovle	s14, r3
 8027ccc:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 8027cd0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027cd4:	ee36 0ac7 	vsub.f32	s0, s13, s14
 8027cd8:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8027cdc:	ee30 0a67 	vsub.f32	s0, s0, s15
 8027ce0:	4770      	bx	lr
 8027ce2:	eeb0 0a66 	vmov.f32	s0, s13
 8027ce6:	4770      	bx	lr
 8027ce8:	ad47d74e 	.word	0xad47d74e
 8027cec:	310f74f6 	.word	0x310f74f6
 8027cf0:	3e999999 	.word	0x3e999999
 8027cf4:	b493f27c 	.word	0xb493f27c
 8027cf8:	37d00d01 	.word	0x37d00d01
 8027cfc:	bab60b61 	.word	0xbab60b61
 8027d00:	3d2aaaab 	.word	0x3d2aaaab
 8027d04:	3f480000 	.word	0x3f480000

08027d08 <__kernel_sinf>:
 8027d08:	ee10 3a10 	vmov	r3, s0
 8027d0c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8027d10:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8027d14:	da04      	bge.n	8027d20 <__kernel_sinf+0x18>
 8027d16:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8027d1a:	ee17 3a90 	vmov	r3, s15
 8027d1e:	b35b      	cbz	r3, 8027d78 <__kernel_sinf+0x70>
 8027d20:	ee20 7a00 	vmul.f32	s14, s0, s0
 8027d24:	eddf 7a15 	vldr	s15, [pc, #84]	; 8027d7c <__kernel_sinf+0x74>
 8027d28:	ed9f 6a15 	vldr	s12, [pc, #84]	; 8027d80 <__kernel_sinf+0x78>
 8027d2c:	eea7 6a27 	vfma.f32	s12, s14, s15
 8027d30:	eddf 7a14 	vldr	s15, [pc, #80]	; 8027d84 <__kernel_sinf+0x7c>
 8027d34:	eee6 7a07 	vfma.f32	s15, s12, s14
 8027d38:	ed9f 6a13 	vldr	s12, [pc, #76]	; 8027d88 <__kernel_sinf+0x80>
 8027d3c:	eea7 6a87 	vfma.f32	s12, s15, s14
 8027d40:	eddf 7a12 	vldr	s15, [pc, #72]	; 8027d8c <__kernel_sinf+0x84>
 8027d44:	ee60 6a07 	vmul.f32	s13, s0, s14
 8027d48:	eee6 7a07 	vfma.f32	s15, s12, s14
 8027d4c:	b930      	cbnz	r0, 8027d5c <__kernel_sinf+0x54>
 8027d4e:	ed9f 6a10 	vldr	s12, [pc, #64]	; 8027d90 <__kernel_sinf+0x88>
 8027d52:	eea7 6a27 	vfma.f32	s12, s14, s15
 8027d56:	eea6 0a26 	vfma.f32	s0, s12, s13
 8027d5a:	4770      	bx	lr
 8027d5c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8027d60:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8027d64:	eee0 7a86 	vfma.f32	s15, s1, s12
 8027d68:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8027d6c:	eddf 7a09 	vldr	s15, [pc, #36]	; 8027d94 <__kernel_sinf+0x8c>
 8027d70:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8027d74:	ee30 0a60 	vsub.f32	s0, s0, s1
 8027d78:	4770      	bx	lr
 8027d7a:	bf00      	nop
 8027d7c:	2f2ec9d3 	.word	0x2f2ec9d3
 8027d80:	b2d72f34 	.word	0xb2d72f34
 8027d84:	3638ef1b 	.word	0x3638ef1b
 8027d88:	b9500d01 	.word	0xb9500d01
 8027d8c:	3c088889 	.word	0x3c088889
 8027d90:	be2aaaab 	.word	0xbe2aaaab
 8027d94:	3e2aaaab 	.word	0x3e2aaaab

08027d98 <__ieee754_rem_pio2f>:
 8027d98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027d9a:	ee10 6a10 	vmov	r6, s0
 8027d9e:	4b86      	ldr	r3, [pc, #536]	; (8027fb8 <__ieee754_rem_pio2f+0x220>)
 8027da0:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 8027da4:	429d      	cmp	r5, r3
 8027da6:	b087      	sub	sp, #28
 8027da8:	4604      	mov	r4, r0
 8027daa:	dc05      	bgt.n	8027db8 <__ieee754_rem_pio2f+0x20>
 8027dac:	2300      	movs	r3, #0
 8027dae:	ed80 0a00 	vstr	s0, [r0]
 8027db2:	6043      	str	r3, [r0, #4]
 8027db4:	2000      	movs	r0, #0
 8027db6:	e020      	b.n	8027dfa <__ieee754_rem_pio2f+0x62>
 8027db8:	4b80      	ldr	r3, [pc, #512]	; (8027fbc <__ieee754_rem_pio2f+0x224>)
 8027dba:	429d      	cmp	r5, r3
 8027dbc:	dc38      	bgt.n	8027e30 <__ieee754_rem_pio2f+0x98>
 8027dbe:	2e00      	cmp	r6, #0
 8027dc0:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 8027fc0 <__ieee754_rem_pio2f+0x228>
 8027dc4:	4b7f      	ldr	r3, [pc, #508]	; (8027fc4 <__ieee754_rem_pio2f+0x22c>)
 8027dc6:	f025 050f 	bic.w	r5, r5, #15
 8027dca:	dd18      	ble.n	8027dfe <__ieee754_rem_pio2f+0x66>
 8027dcc:	429d      	cmp	r5, r3
 8027dce:	ee70 7a47 	vsub.f32	s15, s0, s14
 8027dd2:	bf09      	itett	eq
 8027dd4:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 8027fc8 <__ieee754_rem_pio2f+0x230>
 8027dd8:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 8027fcc <__ieee754_rem_pio2f+0x234>
 8027ddc:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8027de0:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 8027fd0 <__ieee754_rem_pio2f+0x238>
 8027de4:	ee77 6ac7 	vsub.f32	s13, s15, s14
 8027de8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8027dec:	edc0 6a00 	vstr	s13, [r0]
 8027df0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027df4:	edc0 7a01 	vstr	s15, [r0, #4]
 8027df8:	2001      	movs	r0, #1
 8027dfa:	b007      	add	sp, #28
 8027dfc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027dfe:	429d      	cmp	r5, r3
 8027e00:	ee70 7a07 	vadd.f32	s15, s0, s14
 8027e04:	bf09      	itett	eq
 8027e06:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 8027fc8 <__ieee754_rem_pio2f+0x230>
 8027e0a:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 8027fcc <__ieee754_rem_pio2f+0x234>
 8027e0e:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8027e12:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 8027fd0 <__ieee754_rem_pio2f+0x238>
 8027e16:	ee77 6a87 	vadd.f32	s13, s15, s14
 8027e1a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8027e1e:	edc0 6a00 	vstr	s13, [r0]
 8027e22:	ee77 7a87 	vadd.f32	s15, s15, s14
 8027e26:	edc0 7a01 	vstr	s15, [r0, #4]
 8027e2a:	f04f 30ff 	mov.w	r0, #4294967295
 8027e2e:	e7e4      	b.n	8027dfa <__ieee754_rem_pio2f+0x62>
 8027e30:	4b68      	ldr	r3, [pc, #416]	; (8027fd4 <__ieee754_rem_pio2f+0x23c>)
 8027e32:	429d      	cmp	r5, r3
 8027e34:	dc71      	bgt.n	8027f1a <__ieee754_rem_pio2f+0x182>
 8027e36:	f000 f8db 	bl	8027ff0 <fabsf>
 8027e3a:	ed9f 7a67 	vldr	s14, [pc, #412]	; 8027fd8 <__ieee754_rem_pio2f+0x240>
 8027e3e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8027e42:	eee0 7a07 	vfma.f32	s15, s0, s14
 8027e46:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8027e4a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8027e4e:	ee17 0a90 	vmov	r0, s15
 8027e52:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8027fc0 <__ieee754_rem_pio2f+0x228>
 8027e56:	eea7 0a67 	vfms.f32	s0, s14, s15
 8027e5a:	281f      	cmp	r0, #31
 8027e5c:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8027fcc <__ieee754_rem_pio2f+0x234>
 8027e60:	ee67 7a27 	vmul.f32	s15, s14, s15
 8027e64:	eeb1 6a47 	vneg.f32	s12, s14
 8027e68:	ee70 6a67 	vsub.f32	s13, s0, s15
 8027e6c:	ee16 2a90 	vmov	r2, s13
 8027e70:	dc1c      	bgt.n	8027eac <__ieee754_rem_pio2f+0x114>
 8027e72:	495a      	ldr	r1, [pc, #360]	; (8027fdc <__ieee754_rem_pio2f+0x244>)
 8027e74:	1e47      	subs	r7, r0, #1
 8027e76:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 8027e7a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8027e7e:	428b      	cmp	r3, r1
 8027e80:	d014      	beq.n	8027eac <__ieee754_rem_pio2f+0x114>
 8027e82:	6022      	str	r2, [r4, #0]
 8027e84:	ed94 7a00 	vldr	s14, [r4]
 8027e88:	ee30 0a47 	vsub.f32	s0, s0, s14
 8027e8c:	2e00      	cmp	r6, #0
 8027e8e:	ee30 0a67 	vsub.f32	s0, s0, s15
 8027e92:	ed84 0a01 	vstr	s0, [r4, #4]
 8027e96:	dab0      	bge.n	8027dfa <__ieee754_rem_pio2f+0x62>
 8027e98:	eeb1 7a47 	vneg.f32	s14, s14
 8027e9c:	eeb1 0a40 	vneg.f32	s0, s0
 8027ea0:	ed84 7a00 	vstr	s14, [r4]
 8027ea4:	ed84 0a01 	vstr	s0, [r4, #4]
 8027ea8:	4240      	negs	r0, r0
 8027eaa:	e7a6      	b.n	8027dfa <__ieee754_rem_pio2f+0x62>
 8027eac:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8027eb0:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 8027eb4:	2908      	cmp	r1, #8
 8027eb6:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8027eba:	dde2      	ble.n	8027e82 <__ieee754_rem_pio2f+0xea>
 8027ebc:	eddf 5a42 	vldr	s11, [pc, #264]	; 8027fc8 <__ieee754_rem_pio2f+0x230>
 8027ec0:	eef0 6a40 	vmov.f32	s13, s0
 8027ec4:	eee6 6a25 	vfma.f32	s13, s12, s11
 8027ec8:	ee70 7a66 	vsub.f32	s15, s0, s13
 8027ecc:	eee6 7a25 	vfma.f32	s15, s12, s11
 8027ed0:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8027fd0 <__ieee754_rem_pio2f+0x238>
 8027ed4:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8027ed8:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8027edc:	ee15 2a90 	vmov	r2, s11
 8027ee0:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8027ee4:	1a5b      	subs	r3, r3, r1
 8027ee6:	2b19      	cmp	r3, #25
 8027ee8:	dc04      	bgt.n	8027ef4 <__ieee754_rem_pio2f+0x15c>
 8027eea:	edc4 5a00 	vstr	s11, [r4]
 8027eee:	eeb0 0a66 	vmov.f32	s0, s13
 8027ef2:	e7c7      	b.n	8027e84 <__ieee754_rem_pio2f+0xec>
 8027ef4:	eddf 5a3a 	vldr	s11, [pc, #232]	; 8027fe0 <__ieee754_rem_pio2f+0x248>
 8027ef8:	eeb0 0a66 	vmov.f32	s0, s13
 8027efc:	eea6 0a25 	vfma.f32	s0, s12, s11
 8027f00:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8027f04:	eddf 6a37 	vldr	s13, [pc, #220]	; 8027fe4 <__ieee754_rem_pio2f+0x24c>
 8027f08:	eee6 7a25 	vfma.f32	s15, s12, s11
 8027f0c:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8027f10:	ee30 7a67 	vsub.f32	s14, s0, s15
 8027f14:	ed84 7a00 	vstr	s14, [r4]
 8027f18:	e7b4      	b.n	8027e84 <__ieee754_rem_pio2f+0xec>
 8027f1a:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 8027f1e:	db06      	blt.n	8027f2e <__ieee754_rem_pio2f+0x196>
 8027f20:	ee70 7a40 	vsub.f32	s15, s0, s0
 8027f24:	edc0 7a01 	vstr	s15, [r0, #4]
 8027f28:	edc0 7a00 	vstr	s15, [r0]
 8027f2c:	e742      	b.n	8027db4 <__ieee754_rem_pio2f+0x1c>
 8027f2e:	15ea      	asrs	r2, r5, #23
 8027f30:	3a86      	subs	r2, #134	; 0x86
 8027f32:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8027f36:	ee07 3a90 	vmov	s15, r3
 8027f3a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8027f3e:	eddf 6a2a 	vldr	s13, [pc, #168]	; 8027fe8 <__ieee754_rem_pio2f+0x250>
 8027f42:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8027f46:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027f4a:	ed8d 7a03 	vstr	s14, [sp, #12]
 8027f4e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8027f52:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8027f56:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8027f5a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027f5e:	ed8d 7a04 	vstr	s14, [sp, #16]
 8027f62:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8027f66:	eef5 7a40 	vcmp.f32	s15, #0.0
 8027f6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027f6e:	edcd 7a05 	vstr	s15, [sp, #20]
 8027f72:	d11e      	bne.n	8027fb2 <__ieee754_rem_pio2f+0x21a>
 8027f74:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8027f78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027f7c:	bf14      	ite	ne
 8027f7e:	2302      	movne	r3, #2
 8027f80:	2301      	moveq	r3, #1
 8027f82:	491a      	ldr	r1, [pc, #104]	; (8027fec <__ieee754_rem_pio2f+0x254>)
 8027f84:	9101      	str	r1, [sp, #4]
 8027f86:	2102      	movs	r1, #2
 8027f88:	9100      	str	r1, [sp, #0]
 8027f8a:	a803      	add	r0, sp, #12
 8027f8c:	4621      	mov	r1, r4
 8027f8e:	f000 f89d 	bl	80280cc <__kernel_rem_pio2f>
 8027f92:	2e00      	cmp	r6, #0
 8027f94:	f6bf af31 	bge.w	8027dfa <__ieee754_rem_pio2f+0x62>
 8027f98:	edd4 7a00 	vldr	s15, [r4]
 8027f9c:	eef1 7a67 	vneg.f32	s15, s15
 8027fa0:	edc4 7a00 	vstr	s15, [r4]
 8027fa4:	edd4 7a01 	vldr	s15, [r4, #4]
 8027fa8:	eef1 7a67 	vneg.f32	s15, s15
 8027fac:	edc4 7a01 	vstr	s15, [r4, #4]
 8027fb0:	e77a      	b.n	8027ea8 <__ieee754_rem_pio2f+0x110>
 8027fb2:	2303      	movs	r3, #3
 8027fb4:	e7e5      	b.n	8027f82 <__ieee754_rem_pio2f+0x1ea>
 8027fb6:	bf00      	nop
 8027fb8:	3f490fd8 	.word	0x3f490fd8
 8027fbc:	4016cbe3 	.word	0x4016cbe3
 8027fc0:	3fc90f80 	.word	0x3fc90f80
 8027fc4:	3fc90fd0 	.word	0x3fc90fd0
 8027fc8:	37354400 	.word	0x37354400
 8027fcc:	37354443 	.word	0x37354443
 8027fd0:	2e85a308 	.word	0x2e85a308
 8027fd4:	43490f80 	.word	0x43490f80
 8027fd8:	3f22f984 	.word	0x3f22f984
 8027fdc:	0802d3cc 	.word	0x0802d3cc
 8027fe0:	2e85a300 	.word	0x2e85a300
 8027fe4:	248d3132 	.word	0x248d3132
 8027fe8:	43800000 	.word	0x43800000
 8027fec:	0802d44c 	.word	0x0802d44c

08027ff0 <fabsf>:
 8027ff0:	ee10 3a10 	vmov	r3, s0
 8027ff4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8027ff8:	ee00 3a10 	vmov	s0, r3
 8027ffc:	4770      	bx	lr
	...

08028000 <scalbnf>:
 8028000:	ee10 3a10 	vmov	r3, s0
 8028004:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 8028008:	d02b      	beq.n	8028062 <scalbnf+0x62>
 802800a:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802800e:	d302      	bcc.n	8028016 <scalbnf+0x16>
 8028010:	ee30 0a00 	vadd.f32	s0, s0, s0
 8028014:	4770      	bx	lr
 8028016:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802801a:	d123      	bne.n	8028064 <scalbnf+0x64>
 802801c:	4b24      	ldr	r3, [pc, #144]	; (80280b0 <scalbnf+0xb0>)
 802801e:	eddf 7a25 	vldr	s15, [pc, #148]	; 80280b4 <scalbnf+0xb4>
 8028022:	4298      	cmp	r0, r3
 8028024:	ee20 0a27 	vmul.f32	s0, s0, s15
 8028028:	db17      	blt.n	802805a <scalbnf+0x5a>
 802802a:	ee10 3a10 	vmov	r3, s0
 802802e:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8028032:	3a19      	subs	r2, #25
 8028034:	f24c 3150 	movw	r1, #50000	; 0xc350
 8028038:	4288      	cmp	r0, r1
 802803a:	dd15      	ble.n	8028068 <scalbnf+0x68>
 802803c:	eddf 7a1e 	vldr	s15, [pc, #120]	; 80280b8 <scalbnf+0xb8>
 8028040:	eddf 6a1e 	vldr	s13, [pc, #120]	; 80280bc <scalbnf+0xbc>
 8028044:	ee10 3a10 	vmov	r3, s0
 8028048:	eeb0 7a67 	vmov.f32	s14, s15
 802804c:	2b00      	cmp	r3, #0
 802804e:	bfb8      	it	lt
 8028050:	eef0 7a66 	vmovlt.f32	s15, s13
 8028054:	ee27 0a87 	vmul.f32	s0, s15, s14
 8028058:	4770      	bx	lr
 802805a:	eddf 7a19 	vldr	s15, [pc, #100]	; 80280c0 <scalbnf+0xc0>
 802805e:	ee27 0a80 	vmul.f32	s0, s15, s0
 8028062:	4770      	bx	lr
 8028064:	0dd2      	lsrs	r2, r2, #23
 8028066:	e7e5      	b.n	8028034 <scalbnf+0x34>
 8028068:	4410      	add	r0, r2
 802806a:	28fe      	cmp	r0, #254	; 0xfe
 802806c:	dce6      	bgt.n	802803c <scalbnf+0x3c>
 802806e:	2800      	cmp	r0, #0
 8028070:	dd06      	ble.n	8028080 <scalbnf+0x80>
 8028072:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8028076:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802807a:	ee00 3a10 	vmov	s0, r3
 802807e:	4770      	bx	lr
 8028080:	f110 0f16 	cmn.w	r0, #22
 8028084:	da09      	bge.n	802809a <scalbnf+0x9a>
 8028086:	eddf 7a0e 	vldr	s15, [pc, #56]	; 80280c0 <scalbnf+0xc0>
 802808a:	eddf 6a0e 	vldr	s13, [pc, #56]	; 80280c4 <scalbnf+0xc4>
 802808e:	ee10 3a10 	vmov	r3, s0
 8028092:	eeb0 7a67 	vmov.f32	s14, s15
 8028096:	2b00      	cmp	r3, #0
 8028098:	e7d9      	b.n	802804e <scalbnf+0x4e>
 802809a:	3019      	adds	r0, #25
 802809c:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 80280a0:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 80280a4:	ed9f 0a08 	vldr	s0, [pc, #32]	; 80280c8 <scalbnf+0xc8>
 80280a8:	ee07 3a90 	vmov	s15, r3
 80280ac:	e7d7      	b.n	802805e <scalbnf+0x5e>
 80280ae:	bf00      	nop
 80280b0:	ffff3cb0 	.word	0xffff3cb0
 80280b4:	4c000000 	.word	0x4c000000
 80280b8:	7149f2ca 	.word	0x7149f2ca
 80280bc:	f149f2ca 	.word	0xf149f2ca
 80280c0:	0da24260 	.word	0x0da24260
 80280c4:	8da24260 	.word	0x8da24260
 80280c8:	33000000 	.word	0x33000000

080280cc <__kernel_rem_pio2f>:
 80280cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80280d0:	ed2d 8b04 	vpush	{d8-d9}
 80280d4:	b0d9      	sub	sp, #356	; 0x164
 80280d6:	4688      	mov	r8, r1
 80280d8:	9002      	str	r0, [sp, #8]
 80280da:	49b8      	ldr	r1, [pc, #736]	; (80283bc <__kernel_rem_pio2f+0x2f0>)
 80280dc:	9866      	ldr	r0, [sp, #408]	; 0x198
 80280de:	9301      	str	r3, [sp, #4]
 80280e0:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 80280e4:	9901      	ldr	r1, [sp, #4]
 80280e6:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 80280e8:	f101 3bff 	add.w	fp, r1, #4294967295
 80280ec:	1d11      	adds	r1, r2, #4
 80280ee:	db25      	blt.n	802813c <__kernel_rem_pio2f+0x70>
 80280f0:	1ed0      	subs	r0, r2, #3
 80280f2:	bf48      	it	mi
 80280f4:	1d10      	addmi	r0, r2, #4
 80280f6:	10c0      	asrs	r0, r0, #3
 80280f8:	1c45      	adds	r5, r0, #1
 80280fa:	00e9      	lsls	r1, r5, #3
 80280fc:	eba0 070b 	sub.w	r7, r0, fp
 8028100:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 80283cc <__kernel_rem_pio2f+0x300>
 8028104:	9103      	str	r1, [sp, #12]
 8028106:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802810a:	eb0a 0c0b 	add.w	ip, sl, fp
 802810e:	ae1c      	add	r6, sp, #112	; 0x70
 8028110:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 8028114:	2400      	movs	r4, #0
 8028116:	4564      	cmp	r4, ip
 8028118:	dd12      	ble.n	8028140 <__kernel_rem_pio2f+0x74>
 802811a:	9901      	ldr	r1, [sp, #4]
 802811c:	ac1c      	add	r4, sp, #112	; 0x70
 802811e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8028122:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 8028126:	f04f 0c00 	mov.w	ip, #0
 802812a:	45d4      	cmp	ip, sl
 802812c:	dc27      	bgt.n	802817e <__kernel_rem_pio2f+0xb2>
 802812e:	f8dd e008 	ldr.w	lr, [sp, #8]
 8028132:	eddf 7aa6 	vldr	s15, [pc, #664]	; 80283cc <__kernel_rem_pio2f+0x300>
 8028136:	4627      	mov	r7, r4
 8028138:	2600      	movs	r6, #0
 802813a:	e016      	b.n	802816a <__kernel_rem_pio2f+0x9e>
 802813c:	2000      	movs	r0, #0
 802813e:	e7db      	b.n	80280f8 <__kernel_rem_pio2f+0x2c>
 8028140:	42e7      	cmn	r7, r4
 8028142:	bf5d      	ittte	pl
 8028144:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 8028148:	ee07 1a90 	vmovpl	s15, r1
 802814c:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8028150:	eef0 7a47 	vmovmi.f32	s15, s14
 8028154:	ece6 7a01 	vstmia	r6!, {s15}
 8028158:	3401      	adds	r4, #1
 802815a:	e7dc      	b.n	8028116 <__kernel_rem_pio2f+0x4a>
 802815c:	ecfe 6a01 	vldmia	lr!, {s13}
 8028160:	ed97 7a00 	vldr	s14, [r7]
 8028164:	eee6 7a87 	vfma.f32	s15, s13, s14
 8028168:	3601      	adds	r6, #1
 802816a:	455e      	cmp	r6, fp
 802816c:	f1a7 0704 	sub.w	r7, r7, #4
 8028170:	ddf4      	ble.n	802815c <__kernel_rem_pio2f+0x90>
 8028172:	ece9 7a01 	vstmia	r9!, {s15}
 8028176:	f10c 0c01 	add.w	ip, ip, #1
 802817a:	3404      	adds	r4, #4
 802817c:	e7d5      	b.n	802812a <__kernel_rem_pio2f+0x5e>
 802817e:	a908      	add	r1, sp, #32
 8028180:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8028184:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 8028188:	eddf 8a8f 	vldr	s17, [pc, #572]	; 80283c8 <__kernel_rem_pio2f+0x2fc>
 802818c:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 80283c4 <__kernel_rem_pio2f+0x2f8>
 8028190:	9105      	str	r1, [sp, #20]
 8028192:	9304      	str	r3, [sp, #16]
 8028194:	4656      	mov	r6, sl
 8028196:	00b3      	lsls	r3, r6, #2
 8028198:	9306      	str	r3, [sp, #24]
 802819a:	ab58      	add	r3, sp, #352	; 0x160
 802819c:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 80281a0:	ac08      	add	r4, sp, #32
 80281a2:	ab44      	add	r3, sp, #272	; 0x110
 80281a4:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 80281a8:	46a4      	mov	ip, r4
 80281aa:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 80281ae:	4637      	mov	r7, r6
 80281b0:	2f00      	cmp	r7, #0
 80281b2:	f1a0 0004 	sub.w	r0, r0, #4
 80281b6:	dc4a      	bgt.n	802824e <__kernel_rem_pio2f+0x182>
 80281b8:	4628      	mov	r0, r5
 80281ba:	9207      	str	r2, [sp, #28]
 80281bc:	f7ff ff20 	bl	8028000 <scalbnf>
 80281c0:	eeb0 8a40 	vmov.f32	s16, s0
 80281c4:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 80281c8:	ee28 0a00 	vmul.f32	s0, s16, s0
 80281cc:	f7ff fcfc 	bl	8027bc8 <floorf>
 80281d0:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 80281d4:	eea0 8a67 	vfms.f32	s16, s0, s15
 80281d8:	2d00      	cmp	r5, #0
 80281da:	9a07      	ldr	r2, [sp, #28]
 80281dc:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 80281e0:	ee17 9a90 	vmov	r9, s15
 80281e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80281e8:	ee38 8a67 	vsub.f32	s16, s16, s15
 80281ec:	dd41      	ble.n	8028272 <__kernel_rem_pio2f+0x1a6>
 80281ee:	f106 3cff 	add.w	ip, r6, #4294967295
 80281f2:	ab08      	add	r3, sp, #32
 80281f4:	f1c5 0e08 	rsb	lr, r5, #8
 80281f8:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 80281fc:	fa47 f00e 	asr.w	r0, r7, lr
 8028200:	4481      	add	r9, r0
 8028202:	fa00 f00e 	lsl.w	r0, r0, lr
 8028206:	1a3f      	subs	r7, r7, r0
 8028208:	f1c5 0007 	rsb	r0, r5, #7
 802820c:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 8028210:	4107      	asrs	r7, r0
 8028212:	2f00      	cmp	r7, #0
 8028214:	dd3c      	ble.n	8028290 <__kernel_rem_pio2f+0x1c4>
 8028216:	f04f 0e00 	mov.w	lr, #0
 802821a:	f109 0901 	add.w	r9, r9, #1
 802821e:	4671      	mov	r1, lr
 8028220:	4576      	cmp	r6, lr
 8028222:	dc67      	bgt.n	80282f4 <__kernel_rem_pio2f+0x228>
 8028224:	2d00      	cmp	r5, #0
 8028226:	dd03      	ble.n	8028230 <__kernel_rem_pio2f+0x164>
 8028228:	2d01      	cmp	r5, #1
 802822a:	d074      	beq.n	8028316 <__kernel_rem_pio2f+0x24a>
 802822c:	2d02      	cmp	r5, #2
 802822e:	d07b      	beq.n	8028328 <__kernel_rem_pio2f+0x25c>
 8028230:	2f02      	cmp	r7, #2
 8028232:	d12d      	bne.n	8028290 <__kernel_rem_pio2f+0x1c4>
 8028234:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8028238:	ee30 8a48 	vsub.f32	s16, s0, s16
 802823c:	b341      	cbz	r1, 8028290 <__kernel_rem_pio2f+0x1c4>
 802823e:	4628      	mov	r0, r5
 8028240:	9207      	str	r2, [sp, #28]
 8028242:	f7ff fedd 	bl	8028000 <scalbnf>
 8028246:	9a07      	ldr	r2, [sp, #28]
 8028248:	ee38 8a40 	vsub.f32	s16, s16, s0
 802824c:	e020      	b.n	8028290 <__kernel_rem_pio2f+0x1c4>
 802824e:	ee60 7a28 	vmul.f32	s15, s0, s17
 8028252:	3f01      	subs	r7, #1
 8028254:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8028258:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802825c:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8028260:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8028264:	ecac 0a01 	vstmia	ip!, {s0}
 8028268:	ed90 0a00 	vldr	s0, [r0]
 802826c:	ee37 0a80 	vadd.f32	s0, s15, s0
 8028270:	e79e      	b.n	80281b0 <__kernel_rem_pio2f+0xe4>
 8028272:	d105      	bne.n	8028280 <__kernel_rem_pio2f+0x1b4>
 8028274:	1e70      	subs	r0, r6, #1
 8028276:	ab08      	add	r3, sp, #32
 8028278:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802827c:	11ff      	asrs	r7, r7, #7
 802827e:	e7c8      	b.n	8028212 <__kernel_rem_pio2f+0x146>
 8028280:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8028284:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8028288:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802828c:	da30      	bge.n	80282f0 <__kernel_rem_pio2f+0x224>
 802828e:	2700      	movs	r7, #0
 8028290:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8028294:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028298:	f040 809a 	bne.w	80283d0 <__kernel_rem_pio2f+0x304>
 802829c:	1e74      	subs	r4, r6, #1
 802829e:	46a4      	mov	ip, r4
 80282a0:	2100      	movs	r1, #0
 80282a2:	45d4      	cmp	ip, sl
 80282a4:	da47      	bge.n	8028336 <__kernel_rem_pio2f+0x26a>
 80282a6:	2900      	cmp	r1, #0
 80282a8:	d063      	beq.n	8028372 <__kernel_rem_pio2f+0x2a6>
 80282aa:	ab08      	add	r3, sp, #32
 80282ac:	3d08      	subs	r5, #8
 80282ae:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 80282b2:	2b00      	cmp	r3, #0
 80282b4:	d07f      	beq.n	80283b6 <__kernel_rem_pio2f+0x2ea>
 80282b6:	4628      	mov	r0, r5
 80282b8:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 80282bc:	f7ff fea0 	bl	8028000 <scalbnf>
 80282c0:	1c63      	adds	r3, r4, #1
 80282c2:	aa44      	add	r2, sp, #272	; 0x110
 80282c4:	ed9f 7a40 	vldr	s14, [pc, #256]	; 80283c8 <__kernel_rem_pio2f+0x2fc>
 80282c8:	0099      	lsls	r1, r3, #2
 80282ca:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 80282ce:	4623      	mov	r3, r4
 80282d0:	2b00      	cmp	r3, #0
 80282d2:	f280 80ad 	bge.w	8028430 <__kernel_rem_pio2f+0x364>
 80282d6:	4623      	mov	r3, r4
 80282d8:	2b00      	cmp	r3, #0
 80282da:	f2c0 80cb 	blt.w	8028474 <__kernel_rem_pio2f+0x3a8>
 80282de:	aa44      	add	r2, sp, #272	; 0x110
 80282e0:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 80282e4:	4e36      	ldr	r6, [pc, #216]	; (80283c0 <__kernel_rem_pio2f+0x2f4>)
 80282e6:	eddf 7a39 	vldr	s15, [pc, #228]	; 80283cc <__kernel_rem_pio2f+0x300>
 80282ea:	2000      	movs	r0, #0
 80282ec:	1ae2      	subs	r2, r4, r3
 80282ee:	e0b6      	b.n	802845e <__kernel_rem_pio2f+0x392>
 80282f0:	2702      	movs	r7, #2
 80282f2:	e790      	b.n	8028216 <__kernel_rem_pio2f+0x14a>
 80282f4:	6820      	ldr	r0, [r4, #0]
 80282f6:	b949      	cbnz	r1, 802830c <__kernel_rem_pio2f+0x240>
 80282f8:	b118      	cbz	r0, 8028302 <__kernel_rem_pio2f+0x236>
 80282fa:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 80282fe:	6020      	str	r0, [r4, #0]
 8028300:	2001      	movs	r0, #1
 8028302:	f10e 0e01 	add.w	lr, lr, #1
 8028306:	3404      	adds	r4, #4
 8028308:	4601      	mov	r1, r0
 802830a:	e789      	b.n	8028220 <__kernel_rem_pio2f+0x154>
 802830c:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 8028310:	6020      	str	r0, [r4, #0]
 8028312:	4608      	mov	r0, r1
 8028314:	e7f5      	b.n	8028302 <__kernel_rem_pio2f+0x236>
 8028316:	1e74      	subs	r4, r6, #1
 8028318:	ab08      	add	r3, sp, #32
 802831a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802831e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8028322:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8028326:	e783      	b.n	8028230 <__kernel_rem_pio2f+0x164>
 8028328:	1e74      	subs	r4, r6, #1
 802832a:	ab08      	add	r3, sp, #32
 802832c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8028330:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8028334:	e7f5      	b.n	8028322 <__kernel_rem_pio2f+0x256>
 8028336:	ab08      	add	r3, sp, #32
 8028338:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802833c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8028340:	4301      	orrs	r1, r0
 8028342:	e7ae      	b.n	80282a2 <__kernel_rem_pio2f+0x1d6>
 8028344:	3001      	adds	r0, #1
 8028346:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802834a:	2f00      	cmp	r7, #0
 802834c:	d0fa      	beq.n	8028344 <__kernel_rem_pio2f+0x278>
 802834e:	9b06      	ldr	r3, [sp, #24]
 8028350:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 8028354:	eb0d 0403 	add.w	r4, sp, r3
 8028358:	9b01      	ldr	r3, [sp, #4]
 802835a:	18f7      	adds	r7, r6, r3
 802835c:	ab1c      	add	r3, sp, #112	; 0x70
 802835e:	f106 0c01 	add.w	ip, r6, #1
 8028362:	3c4c      	subs	r4, #76	; 0x4c
 8028364:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8028368:	4430      	add	r0, r6
 802836a:	4560      	cmp	r0, ip
 802836c:	da04      	bge.n	8028378 <__kernel_rem_pio2f+0x2ac>
 802836e:	4606      	mov	r6, r0
 8028370:	e711      	b.n	8028196 <__kernel_rem_pio2f+0xca>
 8028372:	9c05      	ldr	r4, [sp, #20]
 8028374:	2001      	movs	r0, #1
 8028376:	e7e6      	b.n	8028346 <__kernel_rem_pio2f+0x27a>
 8028378:	9b04      	ldr	r3, [sp, #16]
 802837a:	f8dd e008 	ldr.w	lr, [sp, #8]
 802837e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8028382:	9306      	str	r3, [sp, #24]
 8028384:	ee07 3a90 	vmov	s15, r3
 8028388:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802838c:	2600      	movs	r6, #0
 802838e:	ece7 7a01 	vstmia	r7!, {s15}
 8028392:	eddf 7a0e 	vldr	s15, [pc, #56]	; 80283cc <__kernel_rem_pio2f+0x300>
 8028396:	46b9      	mov	r9, r7
 8028398:	455e      	cmp	r6, fp
 802839a:	dd04      	ble.n	80283a6 <__kernel_rem_pio2f+0x2da>
 802839c:	ece4 7a01 	vstmia	r4!, {s15}
 80283a0:	f10c 0c01 	add.w	ip, ip, #1
 80283a4:	e7e1      	b.n	802836a <__kernel_rem_pio2f+0x29e>
 80283a6:	ecfe 6a01 	vldmia	lr!, {s13}
 80283aa:	ed39 7a01 	vldmdb	r9!, {s14}
 80283ae:	3601      	adds	r6, #1
 80283b0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80283b4:	e7f0      	b.n	8028398 <__kernel_rem_pio2f+0x2cc>
 80283b6:	3c01      	subs	r4, #1
 80283b8:	e777      	b.n	80282aa <__kernel_rem_pio2f+0x1de>
 80283ba:	bf00      	nop
 80283bc:	0802d790 	.word	0x0802d790
 80283c0:	0802d764 	.word	0x0802d764
 80283c4:	43800000 	.word	0x43800000
 80283c8:	3b800000 	.word	0x3b800000
 80283cc:	00000000 	.word	0x00000000
 80283d0:	9b03      	ldr	r3, [sp, #12]
 80283d2:	eeb0 0a48 	vmov.f32	s0, s16
 80283d6:	1a98      	subs	r0, r3, r2
 80283d8:	f7ff fe12 	bl	8028000 <scalbnf>
 80283dc:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 80283c4 <__kernel_rem_pio2f+0x2f8>
 80283e0:	eeb4 0ac7 	vcmpe.f32	s0, s14
 80283e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80283e8:	db19      	blt.n	802841e <__kernel_rem_pio2f+0x352>
 80283ea:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 80283c8 <__kernel_rem_pio2f+0x2fc>
 80283ee:	ee60 7a27 	vmul.f32	s15, s0, s15
 80283f2:	aa08      	add	r2, sp, #32
 80283f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80283f8:	1c74      	adds	r4, r6, #1
 80283fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80283fe:	3508      	adds	r5, #8
 8028400:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8028404:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8028408:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802840c:	ee10 3a10 	vmov	r3, s0
 8028410:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8028414:	ee17 3a90 	vmov	r3, s15
 8028418:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802841c:	e74b      	b.n	80282b6 <__kernel_rem_pio2f+0x1ea>
 802841e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8028422:	aa08      	add	r2, sp, #32
 8028424:	ee10 3a10 	vmov	r3, s0
 8028428:	4634      	mov	r4, r6
 802842a:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802842e:	e742      	b.n	80282b6 <__kernel_rem_pio2f+0x1ea>
 8028430:	a808      	add	r0, sp, #32
 8028432:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8028436:	9001      	str	r0, [sp, #4]
 8028438:	ee07 0a90 	vmov	s15, r0
 802843c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028440:	3b01      	subs	r3, #1
 8028442:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028446:	ee20 0a07 	vmul.f32	s0, s0, s14
 802844a:	ed62 7a01 	vstmdb	r2!, {s15}
 802844e:	e73f      	b.n	80282d0 <__kernel_rem_pio2f+0x204>
 8028450:	ecf6 6a01 	vldmia	r6!, {s13}
 8028454:	ecb5 7a01 	vldmia	r5!, {s14}
 8028458:	eee6 7a87 	vfma.f32	s15, s13, s14
 802845c:	3001      	adds	r0, #1
 802845e:	4550      	cmp	r0, sl
 8028460:	dc01      	bgt.n	8028466 <__kernel_rem_pio2f+0x39a>
 8028462:	4290      	cmp	r0, r2
 8028464:	ddf4      	ble.n	8028450 <__kernel_rem_pio2f+0x384>
 8028466:	a858      	add	r0, sp, #352	; 0x160
 8028468:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802846c:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 8028470:	3b01      	subs	r3, #1
 8028472:	e731      	b.n	80282d8 <__kernel_rem_pio2f+0x20c>
 8028474:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8028476:	2b02      	cmp	r3, #2
 8028478:	dc09      	bgt.n	802848e <__kernel_rem_pio2f+0x3c2>
 802847a:	2b00      	cmp	r3, #0
 802847c:	dc2b      	bgt.n	80284d6 <__kernel_rem_pio2f+0x40a>
 802847e:	d044      	beq.n	802850a <__kernel_rem_pio2f+0x43e>
 8028480:	f009 0007 	and.w	r0, r9, #7
 8028484:	b059      	add	sp, #356	; 0x164
 8028486:	ecbd 8b04 	vpop	{d8-d9}
 802848a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802848e:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8028490:	2b03      	cmp	r3, #3
 8028492:	d1f5      	bne.n	8028480 <__kernel_rem_pio2f+0x3b4>
 8028494:	aa30      	add	r2, sp, #192	; 0xc0
 8028496:	1f0b      	subs	r3, r1, #4
 8028498:	4413      	add	r3, r2
 802849a:	461a      	mov	r2, r3
 802849c:	4620      	mov	r0, r4
 802849e:	2800      	cmp	r0, #0
 80284a0:	f1a2 0204 	sub.w	r2, r2, #4
 80284a4:	dc52      	bgt.n	802854c <__kernel_rem_pio2f+0x480>
 80284a6:	4622      	mov	r2, r4
 80284a8:	2a01      	cmp	r2, #1
 80284aa:	f1a3 0304 	sub.w	r3, r3, #4
 80284ae:	dc5d      	bgt.n	802856c <__kernel_rem_pio2f+0x4a0>
 80284b0:	ab30      	add	r3, sp, #192	; 0xc0
 80284b2:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 80283cc <__kernel_rem_pio2f+0x300>
 80284b6:	440b      	add	r3, r1
 80284b8:	2c01      	cmp	r4, #1
 80284ba:	dc67      	bgt.n	802858c <__kernel_rem_pio2f+0x4c0>
 80284bc:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80284c0:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 80284c4:	2f00      	cmp	r7, #0
 80284c6:	d167      	bne.n	8028598 <__kernel_rem_pio2f+0x4cc>
 80284c8:	edc8 6a00 	vstr	s13, [r8]
 80284cc:	ed88 7a01 	vstr	s14, [r8, #4]
 80284d0:	edc8 7a02 	vstr	s15, [r8, #8]
 80284d4:	e7d4      	b.n	8028480 <__kernel_rem_pio2f+0x3b4>
 80284d6:	ab30      	add	r3, sp, #192	; 0xc0
 80284d8:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 80283cc <__kernel_rem_pio2f+0x300>
 80284dc:	440b      	add	r3, r1
 80284de:	4622      	mov	r2, r4
 80284e0:	2a00      	cmp	r2, #0
 80284e2:	da24      	bge.n	802852e <__kernel_rem_pio2f+0x462>
 80284e4:	b34f      	cbz	r7, 802853a <__kernel_rem_pio2f+0x46e>
 80284e6:	eef1 7a47 	vneg.f32	s15, s14
 80284ea:	edc8 7a00 	vstr	s15, [r8]
 80284ee:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 80284f2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80284f6:	aa31      	add	r2, sp, #196	; 0xc4
 80284f8:	2301      	movs	r3, #1
 80284fa:	429c      	cmp	r4, r3
 80284fc:	da20      	bge.n	8028540 <__kernel_rem_pio2f+0x474>
 80284fe:	b10f      	cbz	r7, 8028504 <__kernel_rem_pio2f+0x438>
 8028500:	eef1 7a67 	vneg.f32	s15, s15
 8028504:	edc8 7a01 	vstr	s15, [r8, #4]
 8028508:	e7ba      	b.n	8028480 <__kernel_rem_pio2f+0x3b4>
 802850a:	ab30      	add	r3, sp, #192	; 0xc0
 802850c:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 80283cc <__kernel_rem_pio2f+0x300>
 8028510:	440b      	add	r3, r1
 8028512:	2c00      	cmp	r4, #0
 8028514:	da05      	bge.n	8028522 <__kernel_rem_pio2f+0x456>
 8028516:	b10f      	cbz	r7, 802851c <__kernel_rem_pio2f+0x450>
 8028518:	eef1 7a67 	vneg.f32	s15, s15
 802851c:	edc8 7a00 	vstr	s15, [r8]
 8028520:	e7ae      	b.n	8028480 <__kernel_rem_pio2f+0x3b4>
 8028522:	ed33 7a01 	vldmdb	r3!, {s14}
 8028526:	3c01      	subs	r4, #1
 8028528:	ee77 7a87 	vadd.f32	s15, s15, s14
 802852c:	e7f1      	b.n	8028512 <__kernel_rem_pio2f+0x446>
 802852e:	ed73 7a01 	vldmdb	r3!, {s15}
 8028532:	3a01      	subs	r2, #1
 8028534:	ee37 7a27 	vadd.f32	s14, s14, s15
 8028538:	e7d2      	b.n	80284e0 <__kernel_rem_pio2f+0x414>
 802853a:	eef0 7a47 	vmov.f32	s15, s14
 802853e:	e7d4      	b.n	80284ea <__kernel_rem_pio2f+0x41e>
 8028540:	ecb2 7a01 	vldmia	r2!, {s14}
 8028544:	3301      	adds	r3, #1
 8028546:	ee77 7a87 	vadd.f32	s15, s15, s14
 802854a:	e7d6      	b.n	80284fa <__kernel_rem_pio2f+0x42e>
 802854c:	edd2 7a00 	vldr	s15, [r2]
 8028550:	edd2 6a01 	vldr	s13, [r2, #4]
 8028554:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8028558:	3801      	subs	r0, #1
 802855a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802855e:	ed82 7a00 	vstr	s14, [r2]
 8028562:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8028566:	edc2 7a01 	vstr	s15, [r2, #4]
 802856a:	e798      	b.n	802849e <__kernel_rem_pio2f+0x3d2>
 802856c:	edd3 7a00 	vldr	s15, [r3]
 8028570:	edd3 6a01 	vldr	s13, [r3, #4]
 8028574:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8028578:	3a01      	subs	r2, #1
 802857a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802857e:	ed83 7a00 	vstr	s14, [r3]
 8028582:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8028586:	edc3 7a01 	vstr	s15, [r3, #4]
 802858a:	e78d      	b.n	80284a8 <__kernel_rem_pio2f+0x3dc>
 802858c:	ed33 7a01 	vldmdb	r3!, {s14}
 8028590:	3c01      	subs	r4, #1
 8028592:	ee77 7a87 	vadd.f32	s15, s15, s14
 8028596:	e78f      	b.n	80284b8 <__kernel_rem_pio2f+0x3ec>
 8028598:	eef1 6a66 	vneg.f32	s13, s13
 802859c:	eeb1 7a47 	vneg.f32	s14, s14
 80285a0:	edc8 6a00 	vstr	s13, [r8]
 80285a4:	ed88 7a01 	vstr	s14, [r8, #4]
 80285a8:	eef1 7a67 	vneg.f32	s15, s15
 80285ac:	e790      	b.n	80284d0 <__kernel_rem_pio2f+0x404>
 80285ae:	bf00      	nop

080285b0 <abort>:
 80285b0:	b508      	push	{r3, lr}
 80285b2:	2006      	movs	r0, #6
 80285b4:	f000 fa3a 	bl	8028a2c <raise>
 80285b8:	2001      	movs	r0, #1
 80285ba:	f7d9 fe3b 	bl	8002234 <_exit>
	...

080285c0 <__assert_func>:
 80285c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80285c2:	4614      	mov	r4, r2
 80285c4:	461a      	mov	r2, r3
 80285c6:	4b09      	ldr	r3, [pc, #36]	; (80285ec <__assert_func+0x2c>)
 80285c8:	681b      	ldr	r3, [r3, #0]
 80285ca:	4605      	mov	r5, r0
 80285cc:	68d8      	ldr	r0, [r3, #12]
 80285ce:	b14c      	cbz	r4, 80285e4 <__assert_func+0x24>
 80285d0:	4b07      	ldr	r3, [pc, #28]	; (80285f0 <__assert_func+0x30>)
 80285d2:	9100      	str	r1, [sp, #0]
 80285d4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80285d8:	4906      	ldr	r1, [pc, #24]	; (80285f4 <__assert_func+0x34>)
 80285da:	462b      	mov	r3, r5
 80285dc:	f000 f982 	bl	80288e4 <fiprintf>
 80285e0:	f7ff ffe6 	bl	80285b0 <abort>
 80285e4:	4b04      	ldr	r3, [pc, #16]	; (80285f8 <__assert_func+0x38>)
 80285e6:	461c      	mov	r4, r3
 80285e8:	e7f3      	b.n	80285d2 <__assert_func+0x12>
 80285ea:	bf00      	nop
 80285ec:	20000160 	.word	0x20000160
 80285f0:	0802d79c 	.word	0x0802d79c
 80285f4:	0802d7a9 	.word	0x0802d7a9
 80285f8:	0802d7d7 	.word	0x0802d7d7

080285fc <atexit>:
 80285fc:	2300      	movs	r3, #0
 80285fe:	4601      	mov	r1, r0
 8028600:	461a      	mov	r2, r3
 8028602:	4618      	mov	r0, r3
 8028604:	f000 bb16 	b.w	8028c34 <__register_exitproc>

08028608 <malloc>:
 8028608:	4b02      	ldr	r3, [pc, #8]	; (8028614 <malloc+0xc>)
 802860a:	4601      	mov	r1, r0
 802860c:	6818      	ldr	r0, [r3, #0]
 802860e:	f000 b82b 	b.w	8028668 <_malloc_r>
 8028612:	bf00      	nop
 8028614:	20000160 	.word	0x20000160

08028618 <free>:
 8028618:	4b02      	ldr	r3, [pc, #8]	; (8028624 <free+0xc>)
 802861a:	4601      	mov	r1, r0
 802861c:	6818      	ldr	r0, [r3, #0]
 802861e:	f000 bb67 	b.w	8028cf0 <_free_r>
 8028622:	bf00      	nop
 8028624:	20000160 	.word	0x20000160

08028628 <sbrk_aligned>:
 8028628:	b570      	push	{r4, r5, r6, lr}
 802862a:	4e0e      	ldr	r6, [pc, #56]	; (8028664 <sbrk_aligned+0x3c>)
 802862c:	460c      	mov	r4, r1
 802862e:	6831      	ldr	r1, [r6, #0]
 8028630:	4605      	mov	r5, r0
 8028632:	b911      	cbnz	r1, 802863a <sbrk_aligned+0x12>
 8028634:	f000 faa0 	bl	8028b78 <_sbrk_r>
 8028638:	6030      	str	r0, [r6, #0]
 802863a:	4621      	mov	r1, r4
 802863c:	4628      	mov	r0, r5
 802863e:	f000 fa9b 	bl	8028b78 <_sbrk_r>
 8028642:	1c43      	adds	r3, r0, #1
 8028644:	d00a      	beq.n	802865c <sbrk_aligned+0x34>
 8028646:	1cc4      	adds	r4, r0, #3
 8028648:	f024 0403 	bic.w	r4, r4, #3
 802864c:	42a0      	cmp	r0, r4
 802864e:	d007      	beq.n	8028660 <sbrk_aligned+0x38>
 8028650:	1a21      	subs	r1, r4, r0
 8028652:	4628      	mov	r0, r5
 8028654:	f000 fa90 	bl	8028b78 <_sbrk_r>
 8028658:	3001      	adds	r0, #1
 802865a:	d101      	bne.n	8028660 <sbrk_aligned+0x38>
 802865c:	f04f 34ff 	mov.w	r4, #4294967295
 8028660:	4620      	mov	r0, r4
 8028662:	bd70      	pop	{r4, r5, r6, pc}
 8028664:	2001412c 	.word	0x2001412c

08028668 <_malloc_r>:
 8028668:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802866c:	1ccd      	adds	r5, r1, #3
 802866e:	f025 0503 	bic.w	r5, r5, #3
 8028672:	3508      	adds	r5, #8
 8028674:	2d0c      	cmp	r5, #12
 8028676:	bf38      	it	cc
 8028678:	250c      	movcc	r5, #12
 802867a:	2d00      	cmp	r5, #0
 802867c:	4607      	mov	r7, r0
 802867e:	db01      	blt.n	8028684 <_malloc_r+0x1c>
 8028680:	42a9      	cmp	r1, r5
 8028682:	d905      	bls.n	8028690 <_malloc_r+0x28>
 8028684:	230c      	movs	r3, #12
 8028686:	603b      	str	r3, [r7, #0]
 8028688:	2600      	movs	r6, #0
 802868a:	4630      	mov	r0, r6
 802868c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8028690:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8028764 <_malloc_r+0xfc>
 8028694:	f000 f868 	bl	8028768 <__malloc_lock>
 8028698:	f8d8 3000 	ldr.w	r3, [r8]
 802869c:	461c      	mov	r4, r3
 802869e:	bb5c      	cbnz	r4, 80286f8 <_malloc_r+0x90>
 80286a0:	4629      	mov	r1, r5
 80286a2:	4638      	mov	r0, r7
 80286a4:	f7ff ffc0 	bl	8028628 <sbrk_aligned>
 80286a8:	1c43      	adds	r3, r0, #1
 80286aa:	4604      	mov	r4, r0
 80286ac:	d155      	bne.n	802875a <_malloc_r+0xf2>
 80286ae:	f8d8 4000 	ldr.w	r4, [r8]
 80286b2:	4626      	mov	r6, r4
 80286b4:	2e00      	cmp	r6, #0
 80286b6:	d145      	bne.n	8028744 <_malloc_r+0xdc>
 80286b8:	2c00      	cmp	r4, #0
 80286ba:	d048      	beq.n	802874e <_malloc_r+0xe6>
 80286bc:	6823      	ldr	r3, [r4, #0]
 80286be:	4631      	mov	r1, r6
 80286c0:	4638      	mov	r0, r7
 80286c2:	eb04 0903 	add.w	r9, r4, r3
 80286c6:	f000 fa57 	bl	8028b78 <_sbrk_r>
 80286ca:	4581      	cmp	r9, r0
 80286cc:	d13f      	bne.n	802874e <_malloc_r+0xe6>
 80286ce:	6821      	ldr	r1, [r4, #0]
 80286d0:	1a6d      	subs	r5, r5, r1
 80286d2:	4629      	mov	r1, r5
 80286d4:	4638      	mov	r0, r7
 80286d6:	f7ff ffa7 	bl	8028628 <sbrk_aligned>
 80286da:	3001      	adds	r0, #1
 80286dc:	d037      	beq.n	802874e <_malloc_r+0xe6>
 80286de:	6823      	ldr	r3, [r4, #0]
 80286e0:	442b      	add	r3, r5
 80286e2:	6023      	str	r3, [r4, #0]
 80286e4:	f8d8 3000 	ldr.w	r3, [r8]
 80286e8:	2b00      	cmp	r3, #0
 80286ea:	d038      	beq.n	802875e <_malloc_r+0xf6>
 80286ec:	685a      	ldr	r2, [r3, #4]
 80286ee:	42a2      	cmp	r2, r4
 80286f0:	d12b      	bne.n	802874a <_malloc_r+0xe2>
 80286f2:	2200      	movs	r2, #0
 80286f4:	605a      	str	r2, [r3, #4]
 80286f6:	e00f      	b.n	8028718 <_malloc_r+0xb0>
 80286f8:	6822      	ldr	r2, [r4, #0]
 80286fa:	1b52      	subs	r2, r2, r5
 80286fc:	d41f      	bmi.n	802873e <_malloc_r+0xd6>
 80286fe:	2a0b      	cmp	r2, #11
 8028700:	d917      	bls.n	8028732 <_malloc_r+0xca>
 8028702:	1961      	adds	r1, r4, r5
 8028704:	42a3      	cmp	r3, r4
 8028706:	6025      	str	r5, [r4, #0]
 8028708:	bf18      	it	ne
 802870a:	6059      	strne	r1, [r3, #4]
 802870c:	6863      	ldr	r3, [r4, #4]
 802870e:	bf08      	it	eq
 8028710:	f8c8 1000 	streq.w	r1, [r8]
 8028714:	5162      	str	r2, [r4, r5]
 8028716:	604b      	str	r3, [r1, #4]
 8028718:	4638      	mov	r0, r7
 802871a:	f104 060b 	add.w	r6, r4, #11
 802871e:	f000 f829 	bl	8028774 <__malloc_unlock>
 8028722:	f026 0607 	bic.w	r6, r6, #7
 8028726:	1d23      	adds	r3, r4, #4
 8028728:	1af2      	subs	r2, r6, r3
 802872a:	d0ae      	beq.n	802868a <_malloc_r+0x22>
 802872c:	1b9b      	subs	r3, r3, r6
 802872e:	50a3      	str	r3, [r4, r2]
 8028730:	e7ab      	b.n	802868a <_malloc_r+0x22>
 8028732:	42a3      	cmp	r3, r4
 8028734:	6862      	ldr	r2, [r4, #4]
 8028736:	d1dd      	bne.n	80286f4 <_malloc_r+0x8c>
 8028738:	f8c8 2000 	str.w	r2, [r8]
 802873c:	e7ec      	b.n	8028718 <_malloc_r+0xb0>
 802873e:	4623      	mov	r3, r4
 8028740:	6864      	ldr	r4, [r4, #4]
 8028742:	e7ac      	b.n	802869e <_malloc_r+0x36>
 8028744:	4634      	mov	r4, r6
 8028746:	6876      	ldr	r6, [r6, #4]
 8028748:	e7b4      	b.n	80286b4 <_malloc_r+0x4c>
 802874a:	4613      	mov	r3, r2
 802874c:	e7cc      	b.n	80286e8 <_malloc_r+0x80>
 802874e:	230c      	movs	r3, #12
 8028750:	603b      	str	r3, [r7, #0]
 8028752:	4638      	mov	r0, r7
 8028754:	f000 f80e 	bl	8028774 <__malloc_unlock>
 8028758:	e797      	b.n	802868a <_malloc_r+0x22>
 802875a:	6025      	str	r5, [r4, #0]
 802875c:	e7dc      	b.n	8028718 <_malloc_r+0xb0>
 802875e:	605b      	str	r3, [r3, #4]
 8028760:	deff      	udf	#255	; 0xff
 8028762:	bf00      	nop
 8028764:	20014128 	.word	0x20014128

08028768 <__malloc_lock>:
 8028768:	4801      	ldr	r0, [pc, #4]	; (8028770 <__malloc_lock+0x8>)
 802876a:	f000 ba52 	b.w	8028c12 <__retarget_lock_acquire_recursive>
 802876e:	bf00      	nop
 8028770:	20014271 	.word	0x20014271

08028774 <__malloc_unlock>:
 8028774:	4801      	ldr	r0, [pc, #4]	; (802877c <__malloc_unlock+0x8>)
 8028776:	f000 ba4d 	b.w	8028c14 <__retarget_lock_release_recursive>
 802877a:	bf00      	nop
 802877c:	20014271 	.word	0x20014271

08028780 <__cxa_atexit>:
 8028780:	b510      	push	{r4, lr}
 8028782:	4c05      	ldr	r4, [pc, #20]	; (8028798 <__cxa_atexit+0x18>)
 8028784:	4613      	mov	r3, r2
 8028786:	b12c      	cbz	r4, 8028794 <__cxa_atexit+0x14>
 8028788:	460a      	mov	r2, r1
 802878a:	4601      	mov	r1, r0
 802878c:	2002      	movs	r0, #2
 802878e:	f000 fa51 	bl	8028c34 <__register_exitproc>
 8028792:	bd10      	pop	{r4, pc}
 8028794:	4620      	mov	r0, r4
 8028796:	e7fc      	b.n	8028792 <__cxa_atexit+0x12>
 8028798:	08028c35 	.word	0x08028c35

0802879c <std>:
 802879c:	2300      	movs	r3, #0
 802879e:	b510      	push	{r4, lr}
 80287a0:	4604      	mov	r4, r0
 80287a2:	e9c0 3300 	strd	r3, r3, [r0]
 80287a6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80287aa:	6083      	str	r3, [r0, #8]
 80287ac:	8181      	strh	r1, [r0, #12]
 80287ae:	6643      	str	r3, [r0, #100]	; 0x64
 80287b0:	81c2      	strh	r2, [r0, #14]
 80287b2:	6183      	str	r3, [r0, #24]
 80287b4:	4619      	mov	r1, r3
 80287b6:	2208      	movs	r2, #8
 80287b8:	305c      	adds	r0, #92	; 0x5c
 80287ba:	f000 f906 	bl	80289ca <memset>
 80287be:	4b0d      	ldr	r3, [pc, #52]	; (80287f4 <std+0x58>)
 80287c0:	6263      	str	r3, [r4, #36]	; 0x24
 80287c2:	4b0d      	ldr	r3, [pc, #52]	; (80287f8 <std+0x5c>)
 80287c4:	62a3      	str	r3, [r4, #40]	; 0x28
 80287c6:	4b0d      	ldr	r3, [pc, #52]	; (80287fc <std+0x60>)
 80287c8:	62e3      	str	r3, [r4, #44]	; 0x2c
 80287ca:	4b0d      	ldr	r3, [pc, #52]	; (8028800 <std+0x64>)
 80287cc:	6323      	str	r3, [r4, #48]	; 0x30
 80287ce:	4b0d      	ldr	r3, [pc, #52]	; (8028804 <std+0x68>)
 80287d0:	6224      	str	r4, [r4, #32]
 80287d2:	429c      	cmp	r4, r3
 80287d4:	d006      	beq.n	80287e4 <std+0x48>
 80287d6:	f103 0268 	add.w	r2, r3, #104	; 0x68
 80287da:	4294      	cmp	r4, r2
 80287dc:	d002      	beq.n	80287e4 <std+0x48>
 80287de:	33d0      	adds	r3, #208	; 0xd0
 80287e0:	429c      	cmp	r4, r3
 80287e2:	d105      	bne.n	80287f0 <std+0x54>
 80287e4:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80287e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80287ec:	f000 ba10 	b.w	8028c10 <__retarget_lock_init_recursive>
 80287f0:	bd10      	pop	{r4, pc}
 80287f2:	bf00      	nop
 80287f4:	08028945 	.word	0x08028945
 80287f8:	08028967 	.word	0x08028967
 80287fc:	0802899f 	.word	0x0802899f
 8028800:	080289c3 	.word	0x080289c3
 8028804:	20014130 	.word	0x20014130

08028808 <stdio_exit_handler>:
 8028808:	4a02      	ldr	r2, [pc, #8]	; (8028814 <stdio_exit_handler+0xc>)
 802880a:	4903      	ldr	r1, [pc, #12]	; (8028818 <stdio_exit_handler+0x10>)
 802880c:	4803      	ldr	r0, [pc, #12]	; (802881c <stdio_exit_handler+0x14>)
 802880e:	f000 b87b 	b.w	8028908 <_fwalk_sglue>
 8028812:	bf00      	nop
 8028814:	20000108 	.word	0x20000108
 8028818:	0802943d 	.word	0x0802943d
 802881c:	20000114 	.word	0x20000114

08028820 <cleanup_stdio>:
 8028820:	6841      	ldr	r1, [r0, #4]
 8028822:	4b0c      	ldr	r3, [pc, #48]	; (8028854 <cleanup_stdio+0x34>)
 8028824:	4299      	cmp	r1, r3
 8028826:	b510      	push	{r4, lr}
 8028828:	4604      	mov	r4, r0
 802882a:	d001      	beq.n	8028830 <cleanup_stdio+0x10>
 802882c:	f000 fe06 	bl	802943c <_fflush_r>
 8028830:	68a1      	ldr	r1, [r4, #8]
 8028832:	4b09      	ldr	r3, [pc, #36]	; (8028858 <cleanup_stdio+0x38>)
 8028834:	4299      	cmp	r1, r3
 8028836:	d002      	beq.n	802883e <cleanup_stdio+0x1e>
 8028838:	4620      	mov	r0, r4
 802883a:	f000 fdff 	bl	802943c <_fflush_r>
 802883e:	68e1      	ldr	r1, [r4, #12]
 8028840:	4b06      	ldr	r3, [pc, #24]	; (802885c <cleanup_stdio+0x3c>)
 8028842:	4299      	cmp	r1, r3
 8028844:	d004      	beq.n	8028850 <cleanup_stdio+0x30>
 8028846:	4620      	mov	r0, r4
 8028848:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802884c:	f000 bdf6 	b.w	802943c <_fflush_r>
 8028850:	bd10      	pop	{r4, pc}
 8028852:	bf00      	nop
 8028854:	20014130 	.word	0x20014130
 8028858:	20014198 	.word	0x20014198
 802885c:	20014200 	.word	0x20014200

08028860 <global_stdio_init.part.0>:
 8028860:	b510      	push	{r4, lr}
 8028862:	4b0b      	ldr	r3, [pc, #44]	; (8028890 <global_stdio_init.part.0+0x30>)
 8028864:	4c0b      	ldr	r4, [pc, #44]	; (8028894 <global_stdio_init.part.0+0x34>)
 8028866:	4a0c      	ldr	r2, [pc, #48]	; (8028898 <global_stdio_init.part.0+0x38>)
 8028868:	601a      	str	r2, [r3, #0]
 802886a:	4620      	mov	r0, r4
 802886c:	2200      	movs	r2, #0
 802886e:	2104      	movs	r1, #4
 8028870:	f7ff ff94 	bl	802879c <std>
 8028874:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8028878:	2201      	movs	r2, #1
 802887a:	2109      	movs	r1, #9
 802887c:	f7ff ff8e 	bl	802879c <std>
 8028880:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8028884:	2202      	movs	r2, #2
 8028886:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802888a:	2112      	movs	r1, #18
 802888c:	f7ff bf86 	b.w	802879c <std>
 8028890:	20014268 	.word	0x20014268
 8028894:	20014130 	.word	0x20014130
 8028898:	08028809 	.word	0x08028809

0802889c <__sfp_lock_acquire>:
 802889c:	4801      	ldr	r0, [pc, #4]	; (80288a4 <__sfp_lock_acquire+0x8>)
 802889e:	f000 b9b8 	b.w	8028c12 <__retarget_lock_acquire_recursive>
 80288a2:	bf00      	nop
 80288a4:	20014272 	.word	0x20014272

080288a8 <__sfp_lock_release>:
 80288a8:	4801      	ldr	r0, [pc, #4]	; (80288b0 <__sfp_lock_release+0x8>)
 80288aa:	f000 b9b3 	b.w	8028c14 <__retarget_lock_release_recursive>
 80288ae:	bf00      	nop
 80288b0:	20014272 	.word	0x20014272

080288b4 <__sinit>:
 80288b4:	b510      	push	{r4, lr}
 80288b6:	4604      	mov	r4, r0
 80288b8:	f7ff fff0 	bl	802889c <__sfp_lock_acquire>
 80288bc:	6a23      	ldr	r3, [r4, #32]
 80288be:	b11b      	cbz	r3, 80288c8 <__sinit+0x14>
 80288c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80288c4:	f7ff bff0 	b.w	80288a8 <__sfp_lock_release>
 80288c8:	4b04      	ldr	r3, [pc, #16]	; (80288dc <__sinit+0x28>)
 80288ca:	6223      	str	r3, [r4, #32]
 80288cc:	4b04      	ldr	r3, [pc, #16]	; (80288e0 <__sinit+0x2c>)
 80288ce:	681b      	ldr	r3, [r3, #0]
 80288d0:	2b00      	cmp	r3, #0
 80288d2:	d1f5      	bne.n	80288c0 <__sinit+0xc>
 80288d4:	f7ff ffc4 	bl	8028860 <global_stdio_init.part.0>
 80288d8:	e7f2      	b.n	80288c0 <__sinit+0xc>
 80288da:	bf00      	nop
 80288dc:	08028821 	.word	0x08028821
 80288e0:	20014268 	.word	0x20014268

080288e4 <fiprintf>:
 80288e4:	b40e      	push	{r1, r2, r3}
 80288e6:	b503      	push	{r0, r1, lr}
 80288e8:	4601      	mov	r1, r0
 80288ea:	ab03      	add	r3, sp, #12
 80288ec:	4805      	ldr	r0, [pc, #20]	; (8028904 <fiprintf+0x20>)
 80288ee:	f853 2b04 	ldr.w	r2, [r3], #4
 80288f2:	6800      	ldr	r0, [r0, #0]
 80288f4:	9301      	str	r3, [sp, #4]
 80288f6:	f000 fa71 	bl	8028ddc <_vfiprintf_r>
 80288fa:	b002      	add	sp, #8
 80288fc:	f85d eb04 	ldr.w	lr, [sp], #4
 8028900:	b003      	add	sp, #12
 8028902:	4770      	bx	lr
 8028904:	20000160 	.word	0x20000160

08028908 <_fwalk_sglue>:
 8028908:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802890c:	4607      	mov	r7, r0
 802890e:	4688      	mov	r8, r1
 8028910:	4614      	mov	r4, r2
 8028912:	2600      	movs	r6, #0
 8028914:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8028918:	f1b9 0901 	subs.w	r9, r9, #1
 802891c:	d505      	bpl.n	802892a <_fwalk_sglue+0x22>
 802891e:	6824      	ldr	r4, [r4, #0]
 8028920:	2c00      	cmp	r4, #0
 8028922:	d1f7      	bne.n	8028914 <_fwalk_sglue+0xc>
 8028924:	4630      	mov	r0, r6
 8028926:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802892a:	89ab      	ldrh	r3, [r5, #12]
 802892c:	2b01      	cmp	r3, #1
 802892e:	d907      	bls.n	8028940 <_fwalk_sglue+0x38>
 8028930:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8028934:	3301      	adds	r3, #1
 8028936:	d003      	beq.n	8028940 <_fwalk_sglue+0x38>
 8028938:	4629      	mov	r1, r5
 802893a:	4638      	mov	r0, r7
 802893c:	47c0      	blx	r8
 802893e:	4306      	orrs	r6, r0
 8028940:	3568      	adds	r5, #104	; 0x68
 8028942:	e7e9      	b.n	8028918 <_fwalk_sglue+0x10>

08028944 <__sread>:
 8028944:	b510      	push	{r4, lr}
 8028946:	460c      	mov	r4, r1
 8028948:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802894c:	f000 f8ee 	bl	8028b2c <_read_r>
 8028950:	2800      	cmp	r0, #0
 8028952:	bfab      	itete	ge
 8028954:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8028956:	89a3      	ldrhlt	r3, [r4, #12]
 8028958:	181b      	addge	r3, r3, r0
 802895a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802895e:	bfac      	ite	ge
 8028960:	6563      	strge	r3, [r4, #84]	; 0x54
 8028962:	81a3      	strhlt	r3, [r4, #12]
 8028964:	bd10      	pop	{r4, pc}

08028966 <__swrite>:
 8028966:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802896a:	461f      	mov	r7, r3
 802896c:	898b      	ldrh	r3, [r1, #12]
 802896e:	05db      	lsls	r3, r3, #23
 8028970:	4605      	mov	r5, r0
 8028972:	460c      	mov	r4, r1
 8028974:	4616      	mov	r6, r2
 8028976:	d505      	bpl.n	8028984 <__swrite+0x1e>
 8028978:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802897c:	2302      	movs	r3, #2
 802897e:	2200      	movs	r2, #0
 8028980:	f000 f8c2 	bl	8028b08 <_lseek_r>
 8028984:	89a3      	ldrh	r3, [r4, #12]
 8028986:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802898a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802898e:	81a3      	strh	r3, [r4, #12]
 8028990:	4632      	mov	r2, r6
 8028992:	463b      	mov	r3, r7
 8028994:	4628      	mov	r0, r5
 8028996:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802899a:	f000 b8fd 	b.w	8028b98 <_write_r>

0802899e <__sseek>:
 802899e:	b510      	push	{r4, lr}
 80289a0:	460c      	mov	r4, r1
 80289a2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80289a6:	f000 f8af 	bl	8028b08 <_lseek_r>
 80289aa:	1c43      	adds	r3, r0, #1
 80289ac:	89a3      	ldrh	r3, [r4, #12]
 80289ae:	bf15      	itete	ne
 80289b0:	6560      	strne	r0, [r4, #84]	; 0x54
 80289b2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80289b6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80289ba:	81a3      	strheq	r3, [r4, #12]
 80289bc:	bf18      	it	ne
 80289be:	81a3      	strhne	r3, [r4, #12]
 80289c0:	bd10      	pop	{r4, pc}

080289c2 <__sclose>:
 80289c2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80289c6:	f000 b839 	b.w	8028a3c <_close_r>

080289ca <memset>:
 80289ca:	4402      	add	r2, r0
 80289cc:	4603      	mov	r3, r0
 80289ce:	4293      	cmp	r3, r2
 80289d0:	d100      	bne.n	80289d4 <memset+0xa>
 80289d2:	4770      	bx	lr
 80289d4:	f803 1b01 	strb.w	r1, [r3], #1
 80289d8:	e7f9      	b.n	80289ce <memset+0x4>

080289da <_raise_r>:
 80289da:	291f      	cmp	r1, #31
 80289dc:	b538      	push	{r3, r4, r5, lr}
 80289de:	4604      	mov	r4, r0
 80289e0:	460d      	mov	r5, r1
 80289e2:	d904      	bls.n	80289ee <_raise_r+0x14>
 80289e4:	2316      	movs	r3, #22
 80289e6:	6003      	str	r3, [r0, #0]
 80289e8:	f04f 30ff 	mov.w	r0, #4294967295
 80289ec:	bd38      	pop	{r3, r4, r5, pc}
 80289ee:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80289f0:	b112      	cbz	r2, 80289f8 <_raise_r+0x1e>
 80289f2:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80289f6:	b94b      	cbnz	r3, 8028a0c <_raise_r+0x32>
 80289f8:	4620      	mov	r0, r4
 80289fa:	f000 f8bb 	bl	8028b74 <_getpid_r>
 80289fe:	462a      	mov	r2, r5
 8028a00:	4601      	mov	r1, r0
 8028a02:	4620      	mov	r0, r4
 8028a04:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8028a08:	f000 b8a2 	b.w	8028b50 <_kill_r>
 8028a0c:	2b01      	cmp	r3, #1
 8028a0e:	d00a      	beq.n	8028a26 <_raise_r+0x4c>
 8028a10:	1c59      	adds	r1, r3, #1
 8028a12:	d103      	bne.n	8028a1c <_raise_r+0x42>
 8028a14:	2316      	movs	r3, #22
 8028a16:	6003      	str	r3, [r0, #0]
 8028a18:	2001      	movs	r0, #1
 8028a1a:	e7e7      	b.n	80289ec <_raise_r+0x12>
 8028a1c:	2400      	movs	r4, #0
 8028a1e:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8028a22:	4628      	mov	r0, r5
 8028a24:	4798      	blx	r3
 8028a26:	2000      	movs	r0, #0
 8028a28:	e7e0      	b.n	80289ec <_raise_r+0x12>
	...

08028a2c <raise>:
 8028a2c:	4b02      	ldr	r3, [pc, #8]	; (8028a38 <raise+0xc>)
 8028a2e:	4601      	mov	r1, r0
 8028a30:	6818      	ldr	r0, [r3, #0]
 8028a32:	f7ff bfd2 	b.w	80289da <_raise_r>
 8028a36:	bf00      	nop
 8028a38:	20000160 	.word	0x20000160

08028a3c <_close_r>:
 8028a3c:	b538      	push	{r3, r4, r5, lr}
 8028a3e:	4d06      	ldr	r5, [pc, #24]	; (8028a58 <_close_r+0x1c>)
 8028a40:	2300      	movs	r3, #0
 8028a42:	4604      	mov	r4, r0
 8028a44:	4608      	mov	r0, r1
 8028a46:	602b      	str	r3, [r5, #0]
 8028a48:	f7d9 fc16 	bl	8002278 <_close>
 8028a4c:	1c43      	adds	r3, r0, #1
 8028a4e:	d102      	bne.n	8028a56 <_close_r+0x1a>
 8028a50:	682b      	ldr	r3, [r5, #0]
 8028a52:	b103      	cbz	r3, 8028a56 <_close_r+0x1a>
 8028a54:	6023      	str	r3, [r4, #0]
 8028a56:	bd38      	pop	{r3, r4, r5, pc}
 8028a58:	2001426c 	.word	0x2001426c

08028a5c <_reclaim_reent>:
 8028a5c:	4b29      	ldr	r3, [pc, #164]	; (8028b04 <_reclaim_reent+0xa8>)
 8028a5e:	681b      	ldr	r3, [r3, #0]
 8028a60:	4283      	cmp	r3, r0
 8028a62:	b570      	push	{r4, r5, r6, lr}
 8028a64:	4604      	mov	r4, r0
 8028a66:	d04b      	beq.n	8028b00 <_reclaim_reent+0xa4>
 8028a68:	69c3      	ldr	r3, [r0, #28]
 8028a6a:	b143      	cbz	r3, 8028a7e <_reclaim_reent+0x22>
 8028a6c:	68db      	ldr	r3, [r3, #12]
 8028a6e:	2b00      	cmp	r3, #0
 8028a70:	d144      	bne.n	8028afc <_reclaim_reent+0xa0>
 8028a72:	69e3      	ldr	r3, [r4, #28]
 8028a74:	6819      	ldr	r1, [r3, #0]
 8028a76:	b111      	cbz	r1, 8028a7e <_reclaim_reent+0x22>
 8028a78:	4620      	mov	r0, r4
 8028a7a:	f000 f939 	bl	8028cf0 <_free_r>
 8028a7e:	6961      	ldr	r1, [r4, #20]
 8028a80:	b111      	cbz	r1, 8028a88 <_reclaim_reent+0x2c>
 8028a82:	4620      	mov	r0, r4
 8028a84:	f000 f934 	bl	8028cf0 <_free_r>
 8028a88:	69e1      	ldr	r1, [r4, #28]
 8028a8a:	b111      	cbz	r1, 8028a92 <_reclaim_reent+0x36>
 8028a8c:	4620      	mov	r0, r4
 8028a8e:	f000 f92f 	bl	8028cf0 <_free_r>
 8028a92:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8028a94:	b111      	cbz	r1, 8028a9c <_reclaim_reent+0x40>
 8028a96:	4620      	mov	r0, r4
 8028a98:	f000 f92a 	bl	8028cf0 <_free_r>
 8028a9c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8028a9e:	b111      	cbz	r1, 8028aa6 <_reclaim_reent+0x4a>
 8028aa0:	4620      	mov	r0, r4
 8028aa2:	f000 f925 	bl	8028cf0 <_free_r>
 8028aa6:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8028aa8:	b111      	cbz	r1, 8028ab0 <_reclaim_reent+0x54>
 8028aaa:	4620      	mov	r0, r4
 8028aac:	f000 f920 	bl	8028cf0 <_free_r>
 8028ab0:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8028ab2:	b111      	cbz	r1, 8028aba <_reclaim_reent+0x5e>
 8028ab4:	4620      	mov	r0, r4
 8028ab6:	f000 f91b 	bl	8028cf0 <_free_r>
 8028aba:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8028abc:	b111      	cbz	r1, 8028ac4 <_reclaim_reent+0x68>
 8028abe:	4620      	mov	r0, r4
 8028ac0:	f000 f916 	bl	8028cf0 <_free_r>
 8028ac4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8028ac6:	b111      	cbz	r1, 8028ace <_reclaim_reent+0x72>
 8028ac8:	4620      	mov	r0, r4
 8028aca:	f000 f911 	bl	8028cf0 <_free_r>
 8028ace:	6a23      	ldr	r3, [r4, #32]
 8028ad0:	b1b3      	cbz	r3, 8028b00 <_reclaim_reent+0xa4>
 8028ad2:	4620      	mov	r0, r4
 8028ad4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8028ad8:	4718      	bx	r3
 8028ada:	5949      	ldr	r1, [r1, r5]
 8028adc:	b941      	cbnz	r1, 8028af0 <_reclaim_reent+0x94>
 8028ade:	3504      	adds	r5, #4
 8028ae0:	69e3      	ldr	r3, [r4, #28]
 8028ae2:	2d80      	cmp	r5, #128	; 0x80
 8028ae4:	68d9      	ldr	r1, [r3, #12]
 8028ae6:	d1f8      	bne.n	8028ada <_reclaim_reent+0x7e>
 8028ae8:	4620      	mov	r0, r4
 8028aea:	f000 f901 	bl	8028cf0 <_free_r>
 8028aee:	e7c0      	b.n	8028a72 <_reclaim_reent+0x16>
 8028af0:	680e      	ldr	r6, [r1, #0]
 8028af2:	4620      	mov	r0, r4
 8028af4:	f000 f8fc 	bl	8028cf0 <_free_r>
 8028af8:	4631      	mov	r1, r6
 8028afa:	e7ef      	b.n	8028adc <_reclaim_reent+0x80>
 8028afc:	2500      	movs	r5, #0
 8028afe:	e7ef      	b.n	8028ae0 <_reclaim_reent+0x84>
 8028b00:	bd70      	pop	{r4, r5, r6, pc}
 8028b02:	bf00      	nop
 8028b04:	20000160 	.word	0x20000160

08028b08 <_lseek_r>:
 8028b08:	b538      	push	{r3, r4, r5, lr}
 8028b0a:	4d07      	ldr	r5, [pc, #28]	; (8028b28 <_lseek_r+0x20>)
 8028b0c:	4604      	mov	r4, r0
 8028b0e:	4608      	mov	r0, r1
 8028b10:	4611      	mov	r1, r2
 8028b12:	2200      	movs	r2, #0
 8028b14:	602a      	str	r2, [r5, #0]
 8028b16:	461a      	mov	r2, r3
 8028b18:	f7d9 fbba 	bl	8002290 <_lseek>
 8028b1c:	1c43      	adds	r3, r0, #1
 8028b1e:	d102      	bne.n	8028b26 <_lseek_r+0x1e>
 8028b20:	682b      	ldr	r3, [r5, #0]
 8028b22:	b103      	cbz	r3, 8028b26 <_lseek_r+0x1e>
 8028b24:	6023      	str	r3, [r4, #0]
 8028b26:	bd38      	pop	{r3, r4, r5, pc}
 8028b28:	2001426c 	.word	0x2001426c

08028b2c <_read_r>:
 8028b2c:	b538      	push	{r3, r4, r5, lr}
 8028b2e:	4d07      	ldr	r5, [pc, #28]	; (8028b4c <_read_r+0x20>)
 8028b30:	4604      	mov	r4, r0
 8028b32:	4608      	mov	r0, r1
 8028b34:	4611      	mov	r1, r2
 8028b36:	2200      	movs	r2, #0
 8028b38:	602a      	str	r2, [r5, #0]
 8028b3a:	461a      	mov	r2, r3
 8028b3c:	f7d9 fb80 	bl	8002240 <_read>
 8028b40:	1c43      	adds	r3, r0, #1
 8028b42:	d102      	bne.n	8028b4a <_read_r+0x1e>
 8028b44:	682b      	ldr	r3, [r5, #0]
 8028b46:	b103      	cbz	r3, 8028b4a <_read_r+0x1e>
 8028b48:	6023      	str	r3, [r4, #0]
 8028b4a:	bd38      	pop	{r3, r4, r5, pc}
 8028b4c:	2001426c 	.word	0x2001426c

08028b50 <_kill_r>:
 8028b50:	b538      	push	{r3, r4, r5, lr}
 8028b52:	4d07      	ldr	r5, [pc, #28]	; (8028b70 <_kill_r+0x20>)
 8028b54:	2300      	movs	r3, #0
 8028b56:	4604      	mov	r4, r0
 8028b58:	4608      	mov	r0, r1
 8028b5a:	4611      	mov	r1, r2
 8028b5c:	602b      	str	r3, [r5, #0]
 8028b5e:	f7d9 fb61 	bl	8002224 <_kill>
 8028b62:	1c43      	adds	r3, r0, #1
 8028b64:	d102      	bne.n	8028b6c <_kill_r+0x1c>
 8028b66:	682b      	ldr	r3, [r5, #0]
 8028b68:	b103      	cbz	r3, 8028b6c <_kill_r+0x1c>
 8028b6a:	6023      	str	r3, [r4, #0]
 8028b6c:	bd38      	pop	{r3, r4, r5, pc}
 8028b6e:	bf00      	nop
 8028b70:	2001426c 	.word	0x2001426c

08028b74 <_getpid_r>:
 8028b74:	f7d9 bb54 	b.w	8002220 <_getpid>

08028b78 <_sbrk_r>:
 8028b78:	b538      	push	{r3, r4, r5, lr}
 8028b7a:	4d06      	ldr	r5, [pc, #24]	; (8028b94 <_sbrk_r+0x1c>)
 8028b7c:	2300      	movs	r3, #0
 8028b7e:	4604      	mov	r4, r0
 8028b80:	4608      	mov	r0, r1
 8028b82:	602b      	str	r3, [r5, #0]
 8028b84:	f7d9 fb86 	bl	8002294 <_sbrk>
 8028b88:	1c43      	adds	r3, r0, #1
 8028b8a:	d102      	bne.n	8028b92 <_sbrk_r+0x1a>
 8028b8c:	682b      	ldr	r3, [r5, #0]
 8028b8e:	b103      	cbz	r3, 8028b92 <_sbrk_r+0x1a>
 8028b90:	6023      	str	r3, [r4, #0]
 8028b92:	bd38      	pop	{r3, r4, r5, pc}
 8028b94:	2001426c 	.word	0x2001426c

08028b98 <_write_r>:
 8028b98:	b538      	push	{r3, r4, r5, lr}
 8028b9a:	4d07      	ldr	r5, [pc, #28]	; (8028bb8 <_write_r+0x20>)
 8028b9c:	4604      	mov	r4, r0
 8028b9e:	4608      	mov	r0, r1
 8028ba0:	4611      	mov	r1, r2
 8028ba2:	2200      	movs	r2, #0
 8028ba4:	602a      	str	r2, [r5, #0]
 8028ba6:	461a      	mov	r2, r3
 8028ba8:	f7d9 fb58 	bl	800225c <_write>
 8028bac:	1c43      	adds	r3, r0, #1
 8028bae:	d102      	bne.n	8028bb6 <_write_r+0x1e>
 8028bb0:	682b      	ldr	r3, [r5, #0]
 8028bb2:	b103      	cbz	r3, 8028bb6 <_write_r+0x1e>
 8028bb4:	6023      	str	r3, [r4, #0]
 8028bb6:	bd38      	pop	{r3, r4, r5, pc}
 8028bb8:	2001426c 	.word	0x2001426c

08028bbc <__errno>:
 8028bbc:	4b01      	ldr	r3, [pc, #4]	; (8028bc4 <__errno+0x8>)
 8028bbe:	6818      	ldr	r0, [r3, #0]
 8028bc0:	4770      	bx	lr
 8028bc2:	bf00      	nop
 8028bc4:	20000160 	.word	0x20000160

08028bc8 <__libc_init_array>:
 8028bc8:	b570      	push	{r4, r5, r6, lr}
 8028bca:	4d0d      	ldr	r5, [pc, #52]	; (8028c00 <__libc_init_array+0x38>)
 8028bcc:	4c0d      	ldr	r4, [pc, #52]	; (8028c04 <__libc_init_array+0x3c>)
 8028bce:	1b64      	subs	r4, r4, r5
 8028bd0:	10a4      	asrs	r4, r4, #2
 8028bd2:	2600      	movs	r6, #0
 8028bd4:	42a6      	cmp	r6, r4
 8028bd6:	d109      	bne.n	8028bec <__libc_init_array+0x24>
 8028bd8:	4d0b      	ldr	r5, [pc, #44]	; (8028c08 <__libc_init_array+0x40>)
 8028bda:	4c0c      	ldr	r4, [pc, #48]	; (8028c0c <__libc_init_array+0x44>)
 8028bdc:	f000 fd70 	bl	80296c0 <_init>
 8028be0:	1b64      	subs	r4, r4, r5
 8028be2:	10a4      	asrs	r4, r4, #2
 8028be4:	2600      	movs	r6, #0
 8028be6:	42a6      	cmp	r6, r4
 8028be8:	d105      	bne.n	8028bf6 <__libc_init_array+0x2e>
 8028bea:	bd70      	pop	{r4, r5, r6, pc}
 8028bec:	f855 3b04 	ldr.w	r3, [r5], #4
 8028bf0:	4798      	blx	r3
 8028bf2:	3601      	adds	r6, #1
 8028bf4:	e7ee      	b.n	8028bd4 <__libc_init_array+0xc>
 8028bf6:	f855 3b04 	ldr.w	r3, [r5], #4
 8028bfa:	4798      	blx	r3
 8028bfc:	3601      	adds	r6, #1
 8028bfe:	e7f2      	b.n	8028be6 <__libc_init_array+0x1e>
 8028c00:	08149d60 	.word	0x08149d60
 8028c04:	08149d60 	.word	0x08149d60
 8028c08:	08149d60 	.word	0x08149d60
 8028c0c:	08149d74 	.word	0x08149d74

08028c10 <__retarget_lock_init_recursive>:
 8028c10:	4770      	bx	lr

08028c12 <__retarget_lock_acquire_recursive>:
 8028c12:	4770      	bx	lr

08028c14 <__retarget_lock_release_recursive>:
 8028c14:	4770      	bx	lr

08028c16 <memcpy>:
 8028c16:	440a      	add	r2, r1
 8028c18:	4291      	cmp	r1, r2
 8028c1a:	f100 33ff 	add.w	r3, r0, #4294967295
 8028c1e:	d100      	bne.n	8028c22 <memcpy+0xc>
 8028c20:	4770      	bx	lr
 8028c22:	b510      	push	{r4, lr}
 8028c24:	f811 4b01 	ldrb.w	r4, [r1], #1
 8028c28:	f803 4f01 	strb.w	r4, [r3, #1]!
 8028c2c:	4291      	cmp	r1, r2
 8028c2e:	d1f9      	bne.n	8028c24 <memcpy+0xe>
 8028c30:	bd10      	pop	{r4, pc}
	...

08028c34 <__register_exitproc>:
 8028c34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8028c38:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8028cec <__register_exitproc+0xb8>
 8028c3c:	4606      	mov	r6, r0
 8028c3e:	f8d8 0000 	ldr.w	r0, [r8]
 8028c42:	461f      	mov	r7, r3
 8028c44:	460d      	mov	r5, r1
 8028c46:	4691      	mov	r9, r2
 8028c48:	f7ff ffe3 	bl	8028c12 <__retarget_lock_acquire_recursive>
 8028c4c:	4b23      	ldr	r3, [pc, #140]	; (8028cdc <__register_exitproc+0xa8>)
 8028c4e:	681c      	ldr	r4, [r3, #0]
 8028c50:	b934      	cbnz	r4, 8028c60 <__register_exitproc+0x2c>
 8028c52:	4c23      	ldr	r4, [pc, #140]	; (8028ce0 <__register_exitproc+0xac>)
 8028c54:	601c      	str	r4, [r3, #0]
 8028c56:	4b23      	ldr	r3, [pc, #140]	; (8028ce4 <__register_exitproc+0xb0>)
 8028c58:	b113      	cbz	r3, 8028c60 <__register_exitproc+0x2c>
 8028c5a:	681b      	ldr	r3, [r3, #0]
 8028c5c:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8028c60:	6863      	ldr	r3, [r4, #4]
 8028c62:	2b1f      	cmp	r3, #31
 8028c64:	dd07      	ble.n	8028c76 <__register_exitproc+0x42>
 8028c66:	f8d8 0000 	ldr.w	r0, [r8]
 8028c6a:	f7ff ffd3 	bl	8028c14 <__retarget_lock_release_recursive>
 8028c6e:	f04f 30ff 	mov.w	r0, #4294967295
 8028c72:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8028c76:	b32e      	cbz	r6, 8028cc4 <__register_exitproc+0x90>
 8028c78:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8028c7c:	b968      	cbnz	r0, 8028c9a <__register_exitproc+0x66>
 8028c7e:	4b1a      	ldr	r3, [pc, #104]	; (8028ce8 <__register_exitproc+0xb4>)
 8028c80:	2b00      	cmp	r3, #0
 8028c82:	d0f0      	beq.n	8028c66 <__register_exitproc+0x32>
 8028c84:	f44f 7084 	mov.w	r0, #264	; 0x108
 8028c88:	f7ff fcbe 	bl	8028608 <malloc>
 8028c8c:	2800      	cmp	r0, #0
 8028c8e:	d0ea      	beq.n	8028c66 <__register_exitproc+0x32>
 8028c90:	2300      	movs	r3, #0
 8028c92:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8028c96:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8028c9a:	6863      	ldr	r3, [r4, #4]
 8028c9c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8028ca0:	2201      	movs	r2, #1
 8028ca2:	409a      	lsls	r2, r3
 8028ca4:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8028ca8:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8028cac:	4313      	orrs	r3, r2
 8028cae:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8028cb2:	2e02      	cmp	r6, #2
 8028cb4:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8028cb8:	bf02      	ittt	eq
 8028cba:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8028cbe:	4313      	orreq	r3, r2
 8028cc0:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8028cc4:	6863      	ldr	r3, [r4, #4]
 8028cc6:	f8d8 0000 	ldr.w	r0, [r8]
 8028cca:	1c5a      	adds	r2, r3, #1
 8028ccc:	3302      	adds	r3, #2
 8028cce:	6062      	str	r2, [r4, #4]
 8028cd0:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8028cd4:	f7ff ff9e 	bl	8028c14 <__retarget_lock_release_recursive>
 8028cd8:	2000      	movs	r0, #0
 8028cda:	e7ca      	b.n	8028c72 <__register_exitproc+0x3e>
 8028cdc:	20014300 	.word	0x20014300
 8028ce0:	20014274 	.word	0x20014274
 8028ce4:	0802d7d8 	.word	0x0802d7d8
 8028ce8:	08028609 	.word	0x08028609
 8028cec:	20000164 	.word	0x20000164

08028cf0 <_free_r>:
 8028cf0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8028cf2:	2900      	cmp	r1, #0
 8028cf4:	d044      	beq.n	8028d80 <_free_r+0x90>
 8028cf6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8028cfa:	9001      	str	r0, [sp, #4]
 8028cfc:	2b00      	cmp	r3, #0
 8028cfe:	f1a1 0404 	sub.w	r4, r1, #4
 8028d02:	bfb8      	it	lt
 8028d04:	18e4      	addlt	r4, r4, r3
 8028d06:	f7ff fd2f 	bl	8028768 <__malloc_lock>
 8028d0a:	4a1e      	ldr	r2, [pc, #120]	; (8028d84 <_free_r+0x94>)
 8028d0c:	9801      	ldr	r0, [sp, #4]
 8028d0e:	6813      	ldr	r3, [r2, #0]
 8028d10:	b933      	cbnz	r3, 8028d20 <_free_r+0x30>
 8028d12:	6063      	str	r3, [r4, #4]
 8028d14:	6014      	str	r4, [r2, #0]
 8028d16:	b003      	add	sp, #12
 8028d18:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8028d1c:	f7ff bd2a 	b.w	8028774 <__malloc_unlock>
 8028d20:	42a3      	cmp	r3, r4
 8028d22:	d908      	bls.n	8028d36 <_free_r+0x46>
 8028d24:	6825      	ldr	r5, [r4, #0]
 8028d26:	1961      	adds	r1, r4, r5
 8028d28:	428b      	cmp	r3, r1
 8028d2a:	bf01      	itttt	eq
 8028d2c:	6819      	ldreq	r1, [r3, #0]
 8028d2e:	685b      	ldreq	r3, [r3, #4]
 8028d30:	1949      	addeq	r1, r1, r5
 8028d32:	6021      	streq	r1, [r4, #0]
 8028d34:	e7ed      	b.n	8028d12 <_free_r+0x22>
 8028d36:	461a      	mov	r2, r3
 8028d38:	685b      	ldr	r3, [r3, #4]
 8028d3a:	b10b      	cbz	r3, 8028d40 <_free_r+0x50>
 8028d3c:	42a3      	cmp	r3, r4
 8028d3e:	d9fa      	bls.n	8028d36 <_free_r+0x46>
 8028d40:	6811      	ldr	r1, [r2, #0]
 8028d42:	1855      	adds	r5, r2, r1
 8028d44:	42a5      	cmp	r5, r4
 8028d46:	d10b      	bne.n	8028d60 <_free_r+0x70>
 8028d48:	6824      	ldr	r4, [r4, #0]
 8028d4a:	4421      	add	r1, r4
 8028d4c:	1854      	adds	r4, r2, r1
 8028d4e:	42a3      	cmp	r3, r4
 8028d50:	6011      	str	r1, [r2, #0]
 8028d52:	d1e0      	bne.n	8028d16 <_free_r+0x26>
 8028d54:	681c      	ldr	r4, [r3, #0]
 8028d56:	685b      	ldr	r3, [r3, #4]
 8028d58:	6053      	str	r3, [r2, #4]
 8028d5a:	440c      	add	r4, r1
 8028d5c:	6014      	str	r4, [r2, #0]
 8028d5e:	e7da      	b.n	8028d16 <_free_r+0x26>
 8028d60:	d902      	bls.n	8028d68 <_free_r+0x78>
 8028d62:	230c      	movs	r3, #12
 8028d64:	6003      	str	r3, [r0, #0]
 8028d66:	e7d6      	b.n	8028d16 <_free_r+0x26>
 8028d68:	6825      	ldr	r5, [r4, #0]
 8028d6a:	1961      	adds	r1, r4, r5
 8028d6c:	428b      	cmp	r3, r1
 8028d6e:	bf04      	itt	eq
 8028d70:	6819      	ldreq	r1, [r3, #0]
 8028d72:	685b      	ldreq	r3, [r3, #4]
 8028d74:	6063      	str	r3, [r4, #4]
 8028d76:	bf04      	itt	eq
 8028d78:	1949      	addeq	r1, r1, r5
 8028d7a:	6021      	streq	r1, [r4, #0]
 8028d7c:	6054      	str	r4, [r2, #4]
 8028d7e:	e7ca      	b.n	8028d16 <_free_r+0x26>
 8028d80:	b003      	add	sp, #12
 8028d82:	bd30      	pop	{r4, r5, pc}
 8028d84:	20014128 	.word	0x20014128

08028d88 <__sfputc_r>:
 8028d88:	6893      	ldr	r3, [r2, #8]
 8028d8a:	3b01      	subs	r3, #1
 8028d8c:	2b00      	cmp	r3, #0
 8028d8e:	b410      	push	{r4}
 8028d90:	6093      	str	r3, [r2, #8]
 8028d92:	da08      	bge.n	8028da6 <__sfputc_r+0x1e>
 8028d94:	6994      	ldr	r4, [r2, #24]
 8028d96:	42a3      	cmp	r3, r4
 8028d98:	db01      	blt.n	8028d9e <__sfputc_r+0x16>
 8028d9a:	290a      	cmp	r1, #10
 8028d9c:	d103      	bne.n	8028da6 <__sfputc_r+0x1e>
 8028d9e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028da2:	f000 bb73 	b.w	802948c <__swbuf_r>
 8028da6:	6813      	ldr	r3, [r2, #0]
 8028da8:	1c58      	adds	r0, r3, #1
 8028daa:	6010      	str	r0, [r2, #0]
 8028dac:	7019      	strb	r1, [r3, #0]
 8028dae:	4608      	mov	r0, r1
 8028db0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028db4:	4770      	bx	lr

08028db6 <__sfputs_r>:
 8028db6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028db8:	4606      	mov	r6, r0
 8028dba:	460f      	mov	r7, r1
 8028dbc:	4614      	mov	r4, r2
 8028dbe:	18d5      	adds	r5, r2, r3
 8028dc0:	42ac      	cmp	r4, r5
 8028dc2:	d101      	bne.n	8028dc8 <__sfputs_r+0x12>
 8028dc4:	2000      	movs	r0, #0
 8028dc6:	e007      	b.n	8028dd8 <__sfputs_r+0x22>
 8028dc8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8028dcc:	463a      	mov	r2, r7
 8028dce:	4630      	mov	r0, r6
 8028dd0:	f7ff ffda 	bl	8028d88 <__sfputc_r>
 8028dd4:	1c43      	adds	r3, r0, #1
 8028dd6:	d1f3      	bne.n	8028dc0 <__sfputs_r+0xa>
 8028dd8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08028ddc <_vfiprintf_r>:
 8028ddc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028de0:	460d      	mov	r5, r1
 8028de2:	b09d      	sub	sp, #116	; 0x74
 8028de4:	4614      	mov	r4, r2
 8028de6:	4698      	mov	r8, r3
 8028de8:	4606      	mov	r6, r0
 8028dea:	b118      	cbz	r0, 8028df4 <_vfiprintf_r+0x18>
 8028dec:	6a03      	ldr	r3, [r0, #32]
 8028dee:	b90b      	cbnz	r3, 8028df4 <_vfiprintf_r+0x18>
 8028df0:	f7ff fd60 	bl	80288b4 <__sinit>
 8028df4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8028df6:	07d9      	lsls	r1, r3, #31
 8028df8:	d405      	bmi.n	8028e06 <_vfiprintf_r+0x2a>
 8028dfa:	89ab      	ldrh	r3, [r5, #12]
 8028dfc:	059a      	lsls	r2, r3, #22
 8028dfe:	d402      	bmi.n	8028e06 <_vfiprintf_r+0x2a>
 8028e00:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8028e02:	f7ff ff06 	bl	8028c12 <__retarget_lock_acquire_recursive>
 8028e06:	89ab      	ldrh	r3, [r5, #12]
 8028e08:	071b      	lsls	r3, r3, #28
 8028e0a:	d501      	bpl.n	8028e10 <_vfiprintf_r+0x34>
 8028e0c:	692b      	ldr	r3, [r5, #16]
 8028e0e:	b99b      	cbnz	r3, 8028e38 <_vfiprintf_r+0x5c>
 8028e10:	4629      	mov	r1, r5
 8028e12:	4630      	mov	r0, r6
 8028e14:	f000 fb78 	bl	8029508 <__swsetup_r>
 8028e18:	b170      	cbz	r0, 8028e38 <_vfiprintf_r+0x5c>
 8028e1a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8028e1c:	07dc      	lsls	r4, r3, #31
 8028e1e:	d504      	bpl.n	8028e2a <_vfiprintf_r+0x4e>
 8028e20:	f04f 30ff 	mov.w	r0, #4294967295
 8028e24:	b01d      	add	sp, #116	; 0x74
 8028e26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028e2a:	89ab      	ldrh	r3, [r5, #12]
 8028e2c:	0598      	lsls	r0, r3, #22
 8028e2e:	d4f7      	bmi.n	8028e20 <_vfiprintf_r+0x44>
 8028e30:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8028e32:	f7ff feef 	bl	8028c14 <__retarget_lock_release_recursive>
 8028e36:	e7f3      	b.n	8028e20 <_vfiprintf_r+0x44>
 8028e38:	2300      	movs	r3, #0
 8028e3a:	9309      	str	r3, [sp, #36]	; 0x24
 8028e3c:	2320      	movs	r3, #32
 8028e3e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8028e42:	f8cd 800c 	str.w	r8, [sp, #12]
 8028e46:	2330      	movs	r3, #48	; 0x30
 8028e48:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8028ffc <_vfiprintf_r+0x220>
 8028e4c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8028e50:	f04f 0901 	mov.w	r9, #1
 8028e54:	4623      	mov	r3, r4
 8028e56:	469a      	mov	sl, r3
 8028e58:	f813 2b01 	ldrb.w	r2, [r3], #1
 8028e5c:	b10a      	cbz	r2, 8028e62 <_vfiprintf_r+0x86>
 8028e5e:	2a25      	cmp	r2, #37	; 0x25
 8028e60:	d1f9      	bne.n	8028e56 <_vfiprintf_r+0x7a>
 8028e62:	ebba 0b04 	subs.w	fp, sl, r4
 8028e66:	d00b      	beq.n	8028e80 <_vfiprintf_r+0xa4>
 8028e68:	465b      	mov	r3, fp
 8028e6a:	4622      	mov	r2, r4
 8028e6c:	4629      	mov	r1, r5
 8028e6e:	4630      	mov	r0, r6
 8028e70:	f7ff ffa1 	bl	8028db6 <__sfputs_r>
 8028e74:	3001      	adds	r0, #1
 8028e76:	f000 80a9 	beq.w	8028fcc <_vfiprintf_r+0x1f0>
 8028e7a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8028e7c:	445a      	add	r2, fp
 8028e7e:	9209      	str	r2, [sp, #36]	; 0x24
 8028e80:	f89a 3000 	ldrb.w	r3, [sl]
 8028e84:	2b00      	cmp	r3, #0
 8028e86:	f000 80a1 	beq.w	8028fcc <_vfiprintf_r+0x1f0>
 8028e8a:	2300      	movs	r3, #0
 8028e8c:	f04f 32ff 	mov.w	r2, #4294967295
 8028e90:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8028e94:	f10a 0a01 	add.w	sl, sl, #1
 8028e98:	9304      	str	r3, [sp, #16]
 8028e9a:	9307      	str	r3, [sp, #28]
 8028e9c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8028ea0:	931a      	str	r3, [sp, #104]	; 0x68
 8028ea2:	4654      	mov	r4, sl
 8028ea4:	2205      	movs	r2, #5
 8028ea6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8028eaa:	4854      	ldr	r0, [pc, #336]	; (8028ffc <_vfiprintf_r+0x220>)
 8028eac:	f7d7 f9a0 	bl	80001f0 <memchr>
 8028eb0:	9a04      	ldr	r2, [sp, #16]
 8028eb2:	b9d8      	cbnz	r0, 8028eec <_vfiprintf_r+0x110>
 8028eb4:	06d1      	lsls	r1, r2, #27
 8028eb6:	bf44      	itt	mi
 8028eb8:	2320      	movmi	r3, #32
 8028eba:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8028ebe:	0713      	lsls	r3, r2, #28
 8028ec0:	bf44      	itt	mi
 8028ec2:	232b      	movmi	r3, #43	; 0x2b
 8028ec4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8028ec8:	f89a 3000 	ldrb.w	r3, [sl]
 8028ecc:	2b2a      	cmp	r3, #42	; 0x2a
 8028ece:	d015      	beq.n	8028efc <_vfiprintf_r+0x120>
 8028ed0:	9a07      	ldr	r2, [sp, #28]
 8028ed2:	4654      	mov	r4, sl
 8028ed4:	2000      	movs	r0, #0
 8028ed6:	f04f 0c0a 	mov.w	ip, #10
 8028eda:	4621      	mov	r1, r4
 8028edc:	f811 3b01 	ldrb.w	r3, [r1], #1
 8028ee0:	3b30      	subs	r3, #48	; 0x30
 8028ee2:	2b09      	cmp	r3, #9
 8028ee4:	d94d      	bls.n	8028f82 <_vfiprintf_r+0x1a6>
 8028ee6:	b1b0      	cbz	r0, 8028f16 <_vfiprintf_r+0x13a>
 8028ee8:	9207      	str	r2, [sp, #28]
 8028eea:	e014      	b.n	8028f16 <_vfiprintf_r+0x13a>
 8028eec:	eba0 0308 	sub.w	r3, r0, r8
 8028ef0:	fa09 f303 	lsl.w	r3, r9, r3
 8028ef4:	4313      	orrs	r3, r2
 8028ef6:	9304      	str	r3, [sp, #16]
 8028ef8:	46a2      	mov	sl, r4
 8028efa:	e7d2      	b.n	8028ea2 <_vfiprintf_r+0xc6>
 8028efc:	9b03      	ldr	r3, [sp, #12]
 8028efe:	1d19      	adds	r1, r3, #4
 8028f00:	681b      	ldr	r3, [r3, #0]
 8028f02:	9103      	str	r1, [sp, #12]
 8028f04:	2b00      	cmp	r3, #0
 8028f06:	bfbb      	ittet	lt
 8028f08:	425b      	neglt	r3, r3
 8028f0a:	f042 0202 	orrlt.w	r2, r2, #2
 8028f0e:	9307      	strge	r3, [sp, #28]
 8028f10:	9307      	strlt	r3, [sp, #28]
 8028f12:	bfb8      	it	lt
 8028f14:	9204      	strlt	r2, [sp, #16]
 8028f16:	7823      	ldrb	r3, [r4, #0]
 8028f18:	2b2e      	cmp	r3, #46	; 0x2e
 8028f1a:	d10c      	bne.n	8028f36 <_vfiprintf_r+0x15a>
 8028f1c:	7863      	ldrb	r3, [r4, #1]
 8028f1e:	2b2a      	cmp	r3, #42	; 0x2a
 8028f20:	d134      	bne.n	8028f8c <_vfiprintf_r+0x1b0>
 8028f22:	9b03      	ldr	r3, [sp, #12]
 8028f24:	1d1a      	adds	r2, r3, #4
 8028f26:	681b      	ldr	r3, [r3, #0]
 8028f28:	9203      	str	r2, [sp, #12]
 8028f2a:	2b00      	cmp	r3, #0
 8028f2c:	bfb8      	it	lt
 8028f2e:	f04f 33ff 	movlt.w	r3, #4294967295
 8028f32:	3402      	adds	r4, #2
 8028f34:	9305      	str	r3, [sp, #20]
 8028f36:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802900c <_vfiprintf_r+0x230>
 8028f3a:	7821      	ldrb	r1, [r4, #0]
 8028f3c:	2203      	movs	r2, #3
 8028f3e:	4650      	mov	r0, sl
 8028f40:	f7d7 f956 	bl	80001f0 <memchr>
 8028f44:	b138      	cbz	r0, 8028f56 <_vfiprintf_r+0x17a>
 8028f46:	9b04      	ldr	r3, [sp, #16]
 8028f48:	eba0 000a 	sub.w	r0, r0, sl
 8028f4c:	2240      	movs	r2, #64	; 0x40
 8028f4e:	4082      	lsls	r2, r0
 8028f50:	4313      	orrs	r3, r2
 8028f52:	3401      	adds	r4, #1
 8028f54:	9304      	str	r3, [sp, #16]
 8028f56:	f814 1b01 	ldrb.w	r1, [r4], #1
 8028f5a:	4829      	ldr	r0, [pc, #164]	; (8029000 <_vfiprintf_r+0x224>)
 8028f5c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8028f60:	2206      	movs	r2, #6
 8028f62:	f7d7 f945 	bl	80001f0 <memchr>
 8028f66:	2800      	cmp	r0, #0
 8028f68:	d03f      	beq.n	8028fea <_vfiprintf_r+0x20e>
 8028f6a:	4b26      	ldr	r3, [pc, #152]	; (8029004 <_vfiprintf_r+0x228>)
 8028f6c:	bb1b      	cbnz	r3, 8028fb6 <_vfiprintf_r+0x1da>
 8028f6e:	9b03      	ldr	r3, [sp, #12]
 8028f70:	3307      	adds	r3, #7
 8028f72:	f023 0307 	bic.w	r3, r3, #7
 8028f76:	3308      	adds	r3, #8
 8028f78:	9303      	str	r3, [sp, #12]
 8028f7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028f7c:	443b      	add	r3, r7
 8028f7e:	9309      	str	r3, [sp, #36]	; 0x24
 8028f80:	e768      	b.n	8028e54 <_vfiprintf_r+0x78>
 8028f82:	fb0c 3202 	mla	r2, ip, r2, r3
 8028f86:	460c      	mov	r4, r1
 8028f88:	2001      	movs	r0, #1
 8028f8a:	e7a6      	b.n	8028eda <_vfiprintf_r+0xfe>
 8028f8c:	2300      	movs	r3, #0
 8028f8e:	3401      	adds	r4, #1
 8028f90:	9305      	str	r3, [sp, #20]
 8028f92:	4619      	mov	r1, r3
 8028f94:	f04f 0c0a 	mov.w	ip, #10
 8028f98:	4620      	mov	r0, r4
 8028f9a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8028f9e:	3a30      	subs	r2, #48	; 0x30
 8028fa0:	2a09      	cmp	r2, #9
 8028fa2:	d903      	bls.n	8028fac <_vfiprintf_r+0x1d0>
 8028fa4:	2b00      	cmp	r3, #0
 8028fa6:	d0c6      	beq.n	8028f36 <_vfiprintf_r+0x15a>
 8028fa8:	9105      	str	r1, [sp, #20]
 8028faa:	e7c4      	b.n	8028f36 <_vfiprintf_r+0x15a>
 8028fac:	fb0c 2101 	mla	r1, ip, r1, r2
 8028fb0:	4604      	mov	r4, r0
 8028fb2:	2301      	movs	r3, #1
 8028fb4:	e7f0      	b.n	8028f98 <_vfiprintf_r+0x1bc>
 8028fb6:	ab03      	add	r3, sp, #12
 8028fb8:	9300      	str	r3, [sp, #0]
 8028fba:	462a      	mov	r2, r5
 8028fbc:	4b12      	ldr	r3, [pc, #72]	; (8029008 <_vfiprintf_r+0x22c>)
 8028fbe:	a904      	add	r1, sp, #16
 8028fc0:	4630      	mov	r0, r6
 8028fc2:	f3af 8000 	nop.w
 8028fc6:	4607      	mov	r7, r0
 8028fc8:	1c78      	adds	r0, r7, #1
 8028fca:	d1d6      	bne.n	8028f7a <_vfiprintf_r+0x19e>
 8028fcc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8028fce:	07d9      	lsls	r1, r3, #31
 8028fd0:	d405      	bmi.n	8028fde <_vfiprintf_r+0x202>
 8028fd2:	89ab      	ldrh	r3, [r5, #12]
 8028fd4:	059a      	lsls	r2, r3, #22
 8028fd6:	d402      	bmi.n	8028fde <_vfiprintf_r+0x202>
 8028fd8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8028fda:	f7ff fe1b 	bl	8028c14 <__retarget_lock_release_recursive>
 8028fde:	89ab      	ldrh	r3, [r5, #12]
 8028fe0:	065b      	lsls	r3, r3, #25
 8028fe2:	f53f af1d 	bmi.w	8028e20 <_vfiprintf_r+0x44>
 8028fe6:	9809      	ldr	r0, [sp, #36]	; 0x24
 8028fe8:	e71c      	b.n	8028e24 <_vfiprintf_r+0x48>
 8028fea:	ab03      	add	r3, sp, #12
 8028fec:	9300      	str	r3, [sp, #0]
 8028fee:	462a      	mov	r2, r5
 8028ff0:	4b05      	ldr	r3, [pc, #20]	; (8029008 <_vfiprintf_r+0x22c>)
 8028ff2:	a904      	add	r1, sp, #16
 8028ff4:	4630      	mov	r0, r6
 8028ff6:	f000 f879 	bl	80290ec <_printf_i>
 8028ffa:	e7e4      	b.n	8028fc6 <_vfiprintf_r+0x1ea>
 8028ffc:	0802d7dc 	.word	0x0802d7dc
 8029000:	0802d7e6 	.word	0x0802d7e6
 8029004:	00000000 	.word	0x00000000
 8029008:	08028db7 	.word	0x08028db7
 802900c:	0802d7e2 	.word	0x0802d7e2

08029010 <_printf_common>:
 8029010:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8029014:	4616      	mov	r6, r2
 8029016:	4699      	mov	r9, r3
 8029018:	688a      	ldr	r2, [r1, #8]
 802901a:	690b      	ldr	r3, [r1, #16]
 802901c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8029020:	4293      	cmp	r3, r2
 8029022:	bfb8      	it	lt
 8029024:	4613      	movlt	r3, r2
 8029026:	6033      	str	r3, [r6, #0]
 8029028:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802902c:	4607      	mov	r7, r0
 802902e:	460c      	mov	r4, r1
 8029030:	b10a      	cbz	r2, 8029036 <_printf_common+0x26>
 8029032:	3301      	adds	r3, #1
 8029034:	6033      	str	r3, [r6, #0]
 8029036:	6823      	ldr	r3, [r4, #0]
 8029038:	0699      	lsls	r1, r3, #26
 802903a:	bf42      	ittt	mi
 802903c:	6833      	ldrmi	r3, [r6, #0]
 802903e:	3302      	addmi	r3, #2
 8029040:	6033      	strmi	r3, [r6, #0]
 8029042:	6825      	ldr	r5, [r4, #0]
 8029044:	f015 0506 	ands.w	r5, r5, #6
 8029048:	d106      	bne.n	8029058 <_printf_common+0x48>
 802904a:	f104 0a19 	add.w	sl, r4, #25
 802904e:	68e3      	ldr	r3, [r4, #12]
 8029050:	6832      	ldr	r2, [r6, #0]
 8029052:	1a9b      	subs	r3, r3, r2
 8029054:	42ab      	cmp	r3, r5
 8029056:	dc26      	bgt.n	80290a6 <_printf_common+0x96>
 8029058:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802905c:	1e13      	subs	r3, r2, #0
 802905e:	6822      	ldr	r2, [r4, #0]
 8029060:	bf18      	it	ne
 8029062:	2301      	movne	r3, #1
 8029064:	0692      	lsls	r2, r2, #26
 8029066:	d42b      	bmi.n	80290c0 <_printf_common+0xb0>
 8029068:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802906c:	4649      	mov	r1, r9
 802906e:	4638      	mov	r0, r7
 8029070:	47c0      	blx	r8
 8029072:	3001      	adds	r0, #1
 8029074:	d01e      	beq.n	80290b4 <_printf_common+0xa4>
 8029076:	6823      	ldr	r3, [r4, #0]
 8029078:	6922      	ldr	r2, [r4, #16]
 802907a:	f003 0306 	and.w	r3, r3, #6
 802907e:	2b04      	cmp	r3, #4
 8029080:	bf02      	ittt	eq
 8029082:	68e5      	ldreq	r5, [r4, #12]
 8029084:	6833      	ldreq	r3, [r6, #0]
 8029086:	1aed      	subeq	r5, r5, r3
 8029088:	68a3      	ldr	r3, [r4, #8]
 802908a:	bf0c      	ite	eq
 802908c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8029090:	2500      	movne	r5, #0
 8029092:	4293      	cmp	r3, r2
 8029094:	bfc4      	itt	gt
 8029096:	1a9b      	subgt	r3, r3, r2
 8029098:	18ed      	addgt	r5, r5, r3
 802909a:	2600      	movs	r6, #0
 802909c:	341a      	adds	r4, #26
 802909e:	42b5      	cmp	r5, r6
 80290a0:	d11a      	bne.n	80290d8 <_printf_common+0xc8>
 80290a2:	2000      	movs	r0, #0
 80290a4:	e008      	b.n	80290b8 <_printf_common+0xa8>
 80290a6:	2301      	movs	r3, #1
 80290a8:	4652      	mov	r2, sl
 80290aa:	4649      	mov	r1, r9
 80290ac:	4638      	mov	r0, r7
 80290ae:	47c0      	blx	r8
 80290b0:	3001      	adds	r0, #1
 80290b2:	d103      	bne.n	80290bc <_printf_common+0xac>
 80290b4:	f04f 30ff 	mov.w	r0, #4294967295
 80290b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80290bc:	3501      	adds	r5, #1
 80290be:	e7c6      	b.n	802904e <_printf_common+0x3e>
 80290c0:	18e1      	adds	r1, r4, r3
 80290c2:	1c5a      	adds	r2, r3, #1
 80290c4:	2030      	movs	r0, #48	; 0x30
 80290c6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80290ca:	4422      	add	r2, r4
 80290cc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80290d0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80290d4:	3302      	adds	r3, #2
 80290d6:	e7c7      	b.n	8029068 <_printf_common+0x58>
 80290d8:	2301      	movs	r3, #1
 80290da:	4622      	mov	r2, r4
 80290dc:	4649      	mov	r1, r9
 80290de:	4638      	mov	r0, r7
 80290e0:	47c0      	blx	r8
 80290e2:	3001      	adds	r0, #1
 80290e4:	d0e6      	beq.n	80290b4 <_printf_common+0xa4>
 80290e6:	3601      	adds	r6, #1
 80290e8:	e7d9      	b.n	802909e <_printf_common+0x8e>
	...

080290ec <_printf_i>:
 80290ec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80290f0:	7e0f      	ldrb	r7, [r1, #24]
 80290f2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80290f4:	2f78      	cmp	r7, #120	; 0x78
 80290f6:	4691      	mov	r9, r2
 80290f8:	4680      	mov	r8, r0
 80290fa:	460c      	mov	r4, r1
 80290fc:	469a      	mov	sl, r3
 80290fe:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8029102:	d807      	bhi.n	8029114 <_printf_i+0x28>
 8029104:	2f62      	cmp	r7, #98	; 0x62
 8029106:	d80a      	bhi.n	802911e <_printf_i+0x32>
 8029108:	2f00      	cmp	r7, #0
 802910a:	f000 80d4 	beq.w	80292b6 <_printf_i+0x1ca>
 802910e:	2f58      	cmp	r7, #88	; 0x58
 8029110:	f000 80c0 	beq.w	8029294 <_printf_i+0x1a8>
 8029114:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8029118:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802911c:	e03a      	b.n	8029194 <_printf_i+0xa8>
 802911e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8029122:	2b15      	cmp	r3, #21
 8029124:	d8f6      	bhi.n	8029114 <_printf_i+0x28>
 8029126:	a101      	add	r1, pc, #4	; (adr r1, 802912c <_printf_i+0x40>)
 8029128:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802912c:	08029185 	.word	0x08029185
 8029130:	08029199 	.word	0x08029199
 8029134:	08029115 	.word	0x08029115
 8029138:	08029115 	.word	0x08029115
 802913c:	08029115 	.word	0x08029115
 8029140:	08029115 	.word	0x08029115
 8029144:	08029199 	.word	0x08029199
 8029148:	08029115 	.word	0x08029115
 802914c:	08029115 	.word	0x08029115
 8029150:	08029115 	.word	0x08029115
 8029154:	08029115 	.word	0x08029115
 8029158:	0802929d 	.word	0x0802929d
 802915c:	080291c5 	.word	0x080291c5
 8029160:	08029257 	.word	0x08029257
 8029164:	08029115 	.word	0x08029115
 8029168:	08029115 	.word	0x08029115
 802916c:	080292bf 	.word	0x080292bf
 8029170:	08029115 	.word	0x08029115
 8029174:	080291c5 	.word	0x080291c5
 8029178:	08029115 	.word	0x08029115
 802917c:	08029115 	.word	0x08029115
 8029180:	0802925f 	.word	0x0802925f
 8029184:	682b      	ldr	r3, [r5, #0]
 8029186:	1d1a      	adds	r2, r3, #4
 8029188:	681b      	ldr	r3, [r3, #0]
 802918a:	602a      	str	r2, [r5, #0]
 802918c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8029190:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8029194:	2301      	movs	r3, #1
 8029196:	e09f      	b.n	80292d8 <_printf_i+0x1ec>
 8029198:	6820      	ldr	r0, [r4, #0]
 802919a:	682b      	ldr	r3, [r5, #0]
 802919c:	0607      	lsls	r7, r0, #24
 802919e:	f103 0104 	add.w	r1, r3, #4
 80291a2:	6029      	str	r1, [r5, #0]
 80291a4:	d501      	bpl.n	80291aa <_printf_i+0xbe>
 80291a6:	681e      	ldr	r6, [r3, #0]
 80291a8:	e003      	b.n	80291b2 <_printf_i+0xc6>
 80291aa:	0646      	lsls	r6, r0, #25
 80291ac:	d5fb      	bpl.n	80291a6 <_printf_i+0xba>
 80291ae:	f9b3 6000 	ldrsh.w	r6, [r3]
 80291b2:	2e00      	cmp	r6, #0
 80291b4:	da03      	bge.n	80291be <_printf_i+0xd2>
 80291b6:	232d      	movs	r3, #45	; 0x2d
 80291b8:	4276      	negs	r6, r6
 80291ba:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80291be:	485a      	ldr	r0, [pc, #360]	; (8029328 <_printf_i+0x23c>)
 80291c0:	230a      	movs	r3, #10
 80291c2:	e012      	b.n	80291ea <_printf_i+0xfe>
 80291c4:	682b      	ldr	r3, [r5, #0]
 80291c6:	6820      	ldr	r0, [r4, #0]
 80291c8:	1d19      	adds	r1, r3, #4
 80291ca:	6029      	str	r1, [r5, #0]
 80291cc:	0605      	lsls	r5, r0, #24
 80291ce:	d501      	bpl.n	80291d4 <_printf_i+0xe8>
 80291d0:	681e      	ldr	r6, [r3, #0]
 80291d2:	e002      	b.n	80291da <_printf_i+0xee>
 80291d4:	0641      	lsls	r1, r0, #25
 80291d6:	d5fb      	bpl.n	80291d0 <_printf_i+0xe4>
 80291d8:	881e      	ldrh	r6, [r3, #0]
 80291da:	4853      	ldr	r0, [pc, #332]	; (8029328 <_printf_i+0x23c>)
 80291dc:	2f6f      	cmp	r7, #111	; 0x6f
 80291de:	bf0c      	ite	eq
 80291e0:	2308      	moveq	r3, #8
 80291e2:	230a      	movne	r3, #10
 80291e4:	2100      	movs	r1, #0
 80291e6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80291ea:	6865      	ldr	r5, [r4, #4]
 80291ec:	60a5      	str	r5, [r4, #8]
 80291ee:	2d00      	cmp	r5, #0
 80291f0:	bfa2      	ittt	ge
 80291f2:	6821      	ldrge	r1, [r4, #0]
 80291f4:	f021 0104 	bicge.w	r1, r1, #4
 80291f8:	6021      	strge	r1, [r4, #0]
 80291fa:	b90e      	cbnz	r6, 8029200 <_printf_i+0x114>
 80291fc:	2d00      	cmp	r5, #0
 80291fe:	d04b      	beq.n	8029298 <_printf_i+0x1ac>
 8029200:	4615      	mov	r5, r2
 8029202:	fbb6 f1f3 	udiv	r1, r6, r3
 8029206:	fb03 6711 	mls	r7, r3, r1, r6
 802920a:	5dc7      	ldrb	r7, [r0, r7]
 802920c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8029210:	4637      	mov	r7, r6
 8029212:	42bb      	cmp	r3, r7
 8029214:	460e      	mov	r6, r1
 8029216:	d9f4      	bls.n	8029202 <_printf_i+0x116>
 8029218:	2b08      	cmp	r3, #8
 802921a:	d10b      	bne.n	8029234 <_printf_i+0x148>
 802921c:	6823      	ldr	r3, [r4, #0]
 802921e:	07de      	lsls	r6, r3, #31
 8029220:	d508      	bpl.n	8029234 <_printf_i+0x148>
 8029222:	6923      	ldr	r3, [r4, #16]
 8029224:	6861      	ldr	r1, [r4, #4]
 8029226:	4299      	cmp	r1, r3
 8029228:	bfde      	ittt	le
 802922a:	2330      	movle	r3, #48	; 0x30
 802922c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8029230:	f105 35ff 	addle.w	r5, r5, #4294967295
 8029234:	1b52      	subs	r2, r2, r5
 8029236:	6122      	str	r2, [r4, #16]
 8029238:	f8cd a000 	str.w	sl, [sp]
 802923c:	464b      	mov	r3, r9
 802923e:	aa03      	add	r2, sp, #12
 8029240:	4621      	mov	r1, r4
 8029242:	4640      	mov	r0, r8
 8029244:	f7ff fee4 	bl	8029010 <_printf_common>
 8029248:	3001      	adds	r0, #1
 802924a:	d14a      	bne.n	80292e2 <_printf_i+0x1f6>
 802924c:	f04f 30ff 	mov.w	r0, #4294967295
 8029250:	b004      	add	sp, #16
 8029252:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8029256:	6823      	ldr	r3, [r4, #0]
 8029258:	f043 0320 	orr.w	r3, r3, #32
 802925c:	6023      	str	r3, [r4, #0]
 802925e:	4833      	ldr	r0, [pc, #204]	; (802932c <_printf_i+0x240>)
 8029260:	2778      	movs	r7, #120	; 0x78
 8029262:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8029266:	6823      	ldr	r3, [r4, #0]
 8029268:	6829      	ldr	r1, [r5, #0]
 802926a:	061f      	lsls	r7, r3, #24
 802926c:	f851 6b04 	ldr.w	r6, [r1], #4
 8029270:	d402      	bmi.n	8029278 <_printf_i+0x18c>
 8029272:	065f      	lsls	r7, r3, #25
 8029274:	bf48      	it	mi
 8029276:	b2b6      	uxthmi	r6, r6
 8029278:	07df      	lsls	r7, r3, #31
 802927a:	bf48      	it	mi
 802927c:	f043 0320 	orrmi.w	r3, r3, #32
 8029280:	6029      	str	r1, [r5, #0]
 8029282:	bf48      	it	mi
 8029284:	6023      	strmi	r3, [r4, #0]
 8029286:	b91e      	cbnz	r6, 8029290 <_printf_i+0x1a4>
 8029288:	6823      	ldr	r3, [r4, #0]
 802928a:	f023 0320 	bic.w	r3, r3, #32
 802928e:	6023      	str	r3, [r4, #0]
 8029290:	2310      	movs	r3, #16
 8029292:	e7a7      	b.n	80291e4 <_printf_i+0xf8>
 8029294:	4824      	ldr	r0, [pc, #144]	; (8029328 <_printf_i+0x23c>)
 8029296:	e7e4      	b.n	8029262 <_printf_i+0x176>
 8029298:	4615      	mov	r5, r2
 802929a:	e7bd      	b.n	8029218 <_printf_i+0x12c>
 802929c:	682b      	ldr	r3, [r5, #0]
 802929e:	6826      	ldr	r6, [r4, #0]
 80292a0:	6961      	ldr	r1, [r4, #20]
 80292a2:	1d18      	adds	r0, r3, #4
 80292a4:	6028      	str	r0, [r5, #0]
 80292a6:	0635      	lsls	r5, r6, #24
 80292a8:	681b      	ldr	r3, [r3, #0]
 80292aa:	d501      	bpl.n	80292b0 <_printf_i+0x1c4>
 80292ac:	6019      	str	r1, [r3, #0]
 80292ae:	e002      	b.n	80292b6 <_printf_i+0x1ca>
 80292b0:	0670      	lsls	r0, r6, #25
 80292b2:	d5fb      	bpl.n	80292ac <_printf_i+0x1c0>
 80292b4:	8019      	strh	r1, [r3, #0]
 80292b6:	2300      	movs	r3, #0
 80292b8:	6123      	str	r3, [r4, #16]
 80292ba:	4615      	mov	r5, r2
 80292bc:	e7bc      	b.n	8029238 <_printf_i+0x14c>
 80292be:	682b      	ldr	r3, [r5, #0]
 80292c0:	1d1a      	adds	r2, r3, #4
 80292c2:	602a      	str	r2, [r5, #0]
 80292c4:	681d      	ldr	r5, [r3, #0]
 80292c6:	6862      	ldr	r2, [r4, #4]
 80292c8:	2100      	movs	r1, #0
 80292ca:	4628      	mov	r0, r5
 80292cc:	f7d6 ff90 	bl	80001f0 <memchr>
 80292d0:	b108      	cbz	r0, 80292d6 <_printf_i+0x1ea>
 80292d2:	1b40      	subs	r0, r0, r5
 80292d4:	6060      	str	r0, [r4, #4]
 80292d6:	6863      	ldr	r3, [r4, #4]
 80292d8:	6123      	str	r3, [r4, #16]
 80292da:	2300      	movs	r3, #0
 80292dc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80292e0:	e7aa      	b.n	8029238 <_printf_i+0x14c>
 80292e2:	6923      	ldr	r3, [r4, #16]
 80292e4:	462a      	mov	r2, r5
 80292e6:	4649      	mov	r1, r9
 80292e8:	4640      	mov	r0, r8
 80292ea:	47d0      	blx	sl
 80292ec:	3001      	adds	r0, #1
 80292ee:	d0ad      	beq.n	802924c <_printf_i+0x160>
 80292f0:	6823      	ldr	r3, [r4, #0]
 80292f2:	079b      	lsls	r3, r3, #30
 80292f4:	d413      	bmi.n	802931e <_printf_i+0x232>
 80292f6:	68e0      	ldr	r0, [r4, #12]
 80292f8:	9b03      	ldr	r3, [sp, #12]
 80292fa:	4298      	cmp	r0, r3
 80292fc:	bfb8      	it	lt
 80292fe:	4618      	movlt	r0, r3
 8029300:	e7a6      	b.n	8029250 <_printf_i+0x164>
 8029302:	2301      	movs	r3, #1
 8029304:	4632      	mov	r2, r6
 8029306:	4649      	mov	r1, r9
 8029308:	4640      	mov	r0, r8
 802930a:	47d0      	blx	sl
 802930c:	3001      	adds	r0, #1
 802930e:	d09d      	beq.n	802924c <_printf_i+0x160>
 8029310:	3501      	adds	r5, #1
 8029312:	68e3      	ldr	r3, [r4, #12]
 8029314:	9903      	ldr	r1, [sp, #12]
 8029316:	1a5b      	subs	r3, r3, r1
 8029318:	42ab      	cmp	r3, r5
 802931a:	dcf2      	bgt.n	8029302 <_printf_i+0x216>
 802931c:	e7eb      	b.n	80292f6 <_printf_i+0x20a>
 802931e:	2500      	movs	r5, #0
 8029320:	f104 0619 	add.w	r6, r4, #25
 8029324:	e7f5      	b.n	8029312 <_printf_i+0x226>
 8029326:	bf00      	nop
 8029328:	0802d7ed 	.word	0x0802d7ed
 802932c:	0802d7fe 	.word	0x0802d7fe

08029330 <__sflush_r>:
 8029330:	898a      	ldrh	r2, [r1, #12]
 8029332:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029336:	4605      	mov	r5, r0
 8029338:	0710      	lsls	r0, r2, #28
 802933a:	460c      	mov	r4, r1
 802933c:	d458      	bmi.n	80293f0 <__sflush_r+0xc0>
 802933e:	684b      	ldr	r3, [r1, #4]
 8029340:	2b00      	cmp	r3, #0
 8029342:	dc05      	bgt.n	8029350 <__sflush_r+0x20>
 8029344:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8029346:	2b00      	cmp	r3, #0
 8029348:	dc02      	bgt.n	8029350 <__sflush_r+0x20>
 802934a:	2000      	movs	r0, #0
 802934c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029350:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8029352:	2e00      	cmp	r6, #0
 8029354:	d0f9      	beq.n	802934a <__sflush_r+0x1a>
 8029356:	2300      	movs	r3, #0
 8029358:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802935c:	682f      	ldr	r7, [r5, #0]
 802935e:	6a21      	ldr	r1, [r4, #32]
 8029360:	602b      	str	r3, [r5, #0]
 8029362:	d032      	beq.n	80293ca <__sflush_r+0x9a>
 8029364:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8029366:	89a3      	ldrh	r3, [r4, #12]
 8029368:	075a      	lsls	r2, r3, #29
 802936a:	d505      	bpl.n	8029378 <__sflush_r+0x48>
 802936c:	6863      	ldr	r3, [r4, #4]
 802936e:	1ac0      	subs	r0, r0, r3
 8029370:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8029372:	b10b      	cbz	r3, 8029378 <__sflush_r+0x48>
 8029374:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8029376:	1ac0      	subs	r0, r0, r3
 8029378:	2300      	movs	r3, #0
 802937a:	4602      	mov	r2, r0
 802937c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802937e:	6a21      	ldr	r1, [r4, #32]
 8029380:	4628      	mov	r0, r5
 8029382:	47b0      	blx	r6
 8029384:	1c43      	adds	r3, r0, #1
 8029386:	89a3      	ldrh	r3, [r4, #12]
 8029388:	d106      	bne.n	8029398 <__sflush_r+0x68>
 802938a:	6829      	ldr	r1, [r5, #0]
 802938c:	291d      	cmp	r1, #29
 802938e:	d82b      	bhi.n	80293e8 <__sflush_r+0xb8>
 8029390:	4a29      	ldr	r2, [pc, #164]	; (8029438 <__sflush_r+0x108>)
 8029392:	410a      	asrs	r2, r1
 8029394:	07d6      	lsls	r6, r2, #31
 8029396:	d427      	bmi.n	80293e8 <__sflush_r+0xb8>
 8029398:	2200      	movs	r2, #0
 802939a:	6062      	str	r2, [r4, #4]
 802939c:	04d9      	lsls	r1, r3, #19
 802939e:	6922      	ldr	r2, [r4, #16]
 80293a0:	6022      	str	r2, [r4, #0]
 80293a2:	d504      	bpl.n	80293ae <__sflush_r+0x7e>
 80293a4:	1c42      	adds	r2, r0, #1
 80293a6:	d101      	bne.n	80293ac <__sflush_r+0x7c>
 80293a8:	682b      	ldr	r3, [r5, #0]
 80293aa:	b903      	cbnz	r3, 80293ae <__sflush_r+0x7e>
 80293ac:	6560      	str	r0, [r4, #84]	; 0x54
 80293ae:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80293b0:	602f      	str	r7, [r5, #0]
 80293b2:	2900      	cmp	r1, #0
 80293b4:	d0c9      	beq.n	802934a <__sflush_r+0x1a>
 80293b6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80293ba:	4299      	cmp	r1, r3
 80293bc:	d002      	beq.n	80293c4 <__sflush_r+0x94>
 80293be:	4628      	mov	r0, r5
 80293c0:	f7ff fc96 	bl	8028cf0 <_free_r>
 80293c4:	2000      	movs	r0, #0
 80293c6:	6360      	str	r0, [r4, #52]	; 0x34
 80293c8:	e7c0      	b.n	802934c <__sflush_r+0x1c>
 80293ca:	2301      	movs	r3, #1
 80293cc:	4628      	mov	r0, r5
 80293ce:	47b0      	blx	r6
 80293d0:	1c41      	adds	r1, r0, #1
 80293d2:	d1c8      	bne.n	8029366 <__sflush_r+0x36>
 80293d4:	682b      	ldr	r3, [r5, #0]
 80293d6:	2b00      	cmp	r3, #0
 80293d8:	d0c5      	beq.n	8029366 <__sflush_r+0x36>
 80293da:	2b1d      	cmp	r3, #29
 80293dc:	d001      	beq.n	80293e2 <__sflush_r+0xb2>
 80293de:	2b16      	cmp	r3, #22
 80293e0:	d101      	bne.n	80293e6 <__sflush_r+0xb6>
 80293e2:	602f      	str	r7, [r5, #0]
 80293e4:	e7b1      	b.n	802934a <__sflush_r+0x1a>
 80293e6:	89a3      	ldrh	r3, [r4, #12]
 80293e8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80293ec:	81a3      	strh	r3, [r4, #12]
 80293ee:	e7ad      	b.n	802934c <__sflush_r+0x1c>
 80293f0:	690f      	ldr	r7, [r1, #16]
 80293f2:	2f00      	cmp	r7, #0
 80293f4:	d0a9      	beq.n	802934a <__sflush_r+0x1a>
 80293f6:	0793      	lsls	r3, r2, #30
 80293f8:	680e      	ldr	r6, [r1, #0]
 80293fa:	bf08      	it	eq
 80293fc:	694b      	ldreq	r3, [r1, #20]
 80293fe:	600f      	str	r7, [r1, #0]
 8029400:	bf18      	it	ne
 8029402:	2300      	movne	r3, #0
 8029404:	eba6 0807 	sub.w	r8, r6, r7
 8029408:	608b      	str	r3, [r1, #8]
 802940a:	f1b8 0f00 	cmp.w	r8, #0
 802940e:	dd9c      	ble.n	802934a <__sflush_r+0x1a>
 8029410:	6a21      	ldr	r1, [r4, #32]
 8029412:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8029414:	4643      	mov	r3, r8
 8029416:	463a      	mov	r2, r7
 8029418:	4628      	mov	r0, r5
 802941a:	47b0      	blx	r6
 802941c:	2800      	cmp	r0, #0
 802941e:	dc06      	bgt.n	802942e <__sflush_r+0xfe>
 8029420:	89a3      	ldrh	r3, [r4, #12]
 8029422:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8029426:	81a3      	strh	r3, [r4, #12]
 8029428:	f04f 30ff 	mov.w	r0, #4294967295
 802942c:	e78e      	b.n	802934c <__sflush_r+0x1c>
 802942e:	4407      	add	r7, r0
 8029430:	eba8 0800 	sub.w	r8, r8, r0
 8029434:	e7e9      	b.n	802940a <__sflush_r+0xda>
 8029436:	bf00      	nop
 8029438:	dfbffffe 	.word	0xdfbffffe

0802943c <_fflush_r>:
 802943c:	b538      	push	{r3, r4, r5, lr}
 802943e:	690b      	ldr	r3, [r1, #16]
 8029440:	4605      	mov	r5, r0
 8029442:	460c      	mov	r4, r1
 8029444:	b913      	cbnz	r3, 802944c <_fflush_r+0x10>
 8029446:	2500      	movs	r5, #0
 8029448:	4628      	mov	r0, r5
 802944a:	bd38      	pop	{r3, r4, r5, pc}
 802944c:	b118      	cbz	r0, 8029456 <_fflush_r+0x1a>
 802944e:	6a03      	ldr	r3, [r0, #32]
 8029450:	b90b      	cbnz	r3, 8029456 <_fflush_r+0x1a>
 8029452:	f7ff fa2f 	bl	80288b4 <__sinit>
 8029456:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802945a:	2b00      	cmp	r3, #0
 802945c:	d0f3      	beq.n	8029446 <_fflush_r+0xa>
 802945e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8029460:	07d0      	lsls	r0, r2, #31
 8029462:	d404      	bmi.n	802946e <_fflush_r+0x32>
 8029464:	0599      	lsls	r1, r3, #22
 8029466:	d402      	bmi.n	802946e <_fflush_r+0x32>
 8029468:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802946a:	f7ff fbd2 	bl	8028c12 <__retarget_lock_acquire_recursive>
 802946e:	4628      	mov	r0, r5
 8029470:	4621      	mov	r1, r4
 8029472:	f7ff ff5d 	bl	8029330 <__sflush_r>
 8029476:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8029478:	07da      	lsls	r2, r3, #31
 802947a:	4605      	mov	r5, r0
 802947c:	d4e4      	bmi.n	8029448 <_fflush_r+0xc>
 802947e:	89a3      	ldrh	r3, [r4, #12]
 8029480:	059b      	lsls	r3, r3, #22
 8029482:	d4e1      	bmi.n	8029448 <_fflush_r+0xc>
 8029484:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8029486:	f7ff fbc5 	bl	8028c14 <__retarget_lock_release_recursive>
 802948a:	e7dd      	b.n	8029448 <_fflush_r+0xc>

0802948c <__swbuf_r>:
 802948c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802948e:	460e      	mov	r6, r1
 8029490:	4614      	mov	r4, r2
 8029492:	4605      	mov	r5, r0
 8029494:	b118      	cbz	r0, 802949e <__swbuf_r+0x12>
 8029496:	6a03      	ldr	r3, [r0, #32]
 8029498:	b90b      	cbnz	r3, 802949e <__swbuf_r+0x12>
 802949a:	f7ff fa0b 	bl	80288b4 <__sinit>
 802949e:	69a3      	ldr	r3, [r4, #24]
 80294a0:	60a3      	str	r3, [r4, #8]
 80294a2:	89a3      	ldrh	r3, [r4, #12]
 80294a4:	071a      	lsls	r2, r3, #28
 80294a6:	d525      	bpl.n	80294f4 <__swbuf_r+0x68>
 80294a8:	6923      	ldr	r3, [r4, #16]
 80294aa:	b31b      	cbz	r3, 80294f4 <__swbuf_r+0x68>
 80294ac:	6823      	ldr	r3, [r4, #0]
 80294ae:	6922      	ldr	r2, [r4, #16]
 80294b0:	1a98      	subs	r0, r3, r2
 80294b2:	6963      	ldr	r3, [r4, #20]
 80294b4:	b2f6      	uxtb	r6, r6
 80294b6:	4283      	cmp	r3, r0
 80294b8:	4637      	mov	r7, r6
 80294ba:	dc04      	bgt.n	80294c6 <__swbuf_r+0x3a>
 80294bc:	4621      	mov	r1, r4
 80294be:	4628      	mov	r0, r5
 80294c0:	f7ff ffbc 	bl	802943c <_fflush_r>
 80294c4:	b9e0      	cbnz	r0, 8029500 <__swbuf_r+0x74>
 80294c6:	68a3      	ldr	r3, [r4, #8]
 80294c8:	3b01      	subs	r3, #1
 80294ca:	60a3      	str	r3, [r4, #8]
 80294cc:	6823      	ldr	r3, [r4, #0]
 80294ce:	1c5a      	adds	r2, r3, #1
 80294d0:	6022      	str	r2, [r4, #0]
 80294d2:	701e      	strb	r6, [r3, #0]
 80294d4:	6962      	ldr	r2, [r4, #20]
 80294d6:	1c43      	adds	r3, r0, #1
 80294d8:	429a      	cmp	r2, r3
 80294da:	d004      	beq.n	80294e6 <__swbuf_r+0x5a>
 80294dc:	89a3      	ldrh	r3, [r4, #12]
 80294de:	07db      	lsls	r3, r3, #31
 80294e0:	d506      	bpl.n	80294f0 <__swbuf_r+0x64>
 80294e2:	2e0a      	cmp	r6, #10
 80294e4:	d104      	bne.n	80294f0 <__swbuf_r+0x64>
 80294e6:	4621      	mov	r1, r4
 80294e8:	4628      	mov	r0, r5
 80294ea:	f7ff ffa7 	bl	802943c <_fflush_r>
 80294ee:	b938      	cbnz	r0, 8029500 <__swbuf_r+0x74>
 80294f0:	4638      	mov	r0, r7
 80294f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80294f4:	4621      	mov	r1, r4
 80294f6:	4628      	mov	r0, r5
 80294f8:	f000 f806 	bl	8029508 <__swsetup_r>
 80294fc:	2800      	cmp	r0, #0
 80294fe:	d0d5      	beq.n	80294ac <__swbuf_r+0x20>
 8029500:	f04f 37ff 	mov.w	r7, #4294967295
 8029504:	e7f4      	b.n	80294f0 <__swbuf_r+0x64>
	...

08029508 <__swsetup_r>:
 8029508:	b538      	push	{r3, r4, r5, lr}
 802950a:	4b2a      	ldr	r3, [pc, #168]	; (80295b4 <__swsetup_r+0xac>)
 802950c:	4605      	mov	r5, r0
 802950e:	6818      	ldr	r0, [r3, #0]
 8029510:	460c      	mov	r4, r1
 8029512:	b118      	cbz	r0, 802951c <__swsetup_r+0x14>
 8029514:	6a03      	ldr	r3, [r0, #32]
 8029516:	b90b      	cbnz	r3, 802951c <__swsetup_r+0x14>
 8029518:	f7ff f9cc 	bl	80288b4 <__sinit>
 802951c:	89a3      	ldrh	r3, [r4, #12]
 802951e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8029522:	0718      	lsls	r0, r3, #28
 8029524:	d422      	bmi.n	802956c <__swsetup_r+0x64>
 8029526:	06d9      	lsls	r1, r3, #27
 8029528:	d407      	bmi.n	802953a <__swsetup_r+0x32>
 802952a:	2309      	movs	r3, #9
 802952c:	602b      	str	r3, [r5, #0]
 802952e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8029532:	81a3      	strh	r3, [r4, #12]
 8029534:	f04f 30ff 	mov.w	r0, #4294967295
 8029538:	e034      	b.n	80295a4 <__swsetup_r+0x9c>
 802953a:	0758      	lsls	r0, r3, #29
 802953c:	d512      	bpl.n	8029564 <__swsetup_r+0x5c>
 802953e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8029540:	b141      	cbz	r1, 8029554 <__swsetup_r+0x4c>
 8029542:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8029546:	4299      	cmp	r1, r3
 8029548:	d002      	beq.n	8029550 <__swsetup_r+0x48>
 802954a:	4628      	mov	r0, r5
 802954c:	f7ff fbd0 	bl	8028cf0 <_free_r>
 8029550:	2300      	movs	r3, #0
 8029552:	6363      	str	r3, [r4, #52]	; 0x34
 8029554:	89a3      	ldrh	r3, [r4, #12]
 8029556:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802955a:	81a3      	strh	r3, [r4, #12]
 802955c:	2300      	movs	r3, #0
 802955e:	6063      	str	r3, [r4, #4]
 8029560:	6923      	ldr	r3, [r4, #16]
 8029562:	6023      	str	r3, [r4, #0]
 8029564:	89a3      	ldrh	r3, [r4, #12]
 8029566:	f043 0308 	orr.w	r3, r3, #8
 802956a:	81a3      	strh	r3, [r4, #12]
 802956c:	6923      	ldr	r3, [r4, #16]
 802956e:	b94b      	cbnz	r3, 8029584 <__swsetup_r+0x7c>
 8029570:	89a3      	ldrh	r3, [r4, #12]
 8029572:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8029576:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802957a:	d003      	beq.n	8029584 <__swsetup_r+0x7c>
 802957c:	4621      	mov	r1, r4
 802957e:	4628      	mov	r0, r5
 8029580:	f000 f840 	bl	8029604 <__smakebuf_r>
 8029584:	89a0      	ldrh	r0, [r4, #12]
 8029586:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802958a:	f010 0301 	ands.w	r3, r0, #1
 802958e:	d00a      	beq.n	80295a6 <__swsetup_r+0x9e>
 8029590:	2300      	movs	r3, #0
 8029592:	60a3      	str	r3, [r4, #8]
 8029594:	6963      	ldr	r3, [r4, #20]
 8029596:	425b      	negs	r3, r3
 8029598:	61a3      	str	r3, [r4, #24]
 802959a:	6923      	ldr	r3, [r4, #16]
 802959c:	b943      	cbnz	r3, 80295b0 <__swsetup_r+0xa8>
 802959e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80295a2:	d1c4      	bne.n	802952e <__swsetup_r+0x26>
 80295a4:	bd38      	pop	{r3, r4, r5, pc}
 80295a6:	0781      	lsls	r1, r0, #30
 80295a8:	bf58      	it	pl
 80295aa:	6963      	ldrpl	r3, [r4, #20]
 80295ac:	60a3      	str	r3, [r4, #8]
 80295ae:	e7f4      	b.n	802959a <__swsetup_r+0x92>
 80295b0:	2000      	movs	r0, #0
 80295b2:	e7f7      	b.n	80295a4 <__swsetup_r+0x9c>
 80295b4:	20000160 	.word	0x20000160

080295b8 <__swhatbuf_r>:
 80295b8:	b570      	push	{r4, r5, r6, lr}
 80295ba:	460c      	mov	r4, r1
 80295bc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80295c0:	2900      	cmp	r1, #0
 80295c2:	b096      	sub	sp, #88	; 0x58
 80295c4:	4615      	mov	r5, r2
 80295c6:	461e      	mov	r6, r3
 80295c8:	da0d      	bge.n	80295e6 <__swhatbuf_r+0x2e>
 80295ca:	89a3      	ldrh	r3, [r4, #12]
 80295cc:	f013 0f80 	tst.w	r3, #128	; 0x80
 80295d0:	f04f 0100 	mov.w	r1, #0
 80295d4:	bf0c      	ite	eq
 80295d6:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80295da:	2340      	movne	r3, #64	; 0x40
 80295dc:	2000      	movs	r0, #0
 80295de:	6031      	str	r1, [r6, #0]
 80295e0:	602b      	str	r3, [r5, #0]
 80295e2:	b016      	add	sp, #88	; 0x58
 80295e4:	bd70      	pop	{r4, r5, r6, pc}
 80295e6:	466a      	mov	r2, sp
 80295e8:	f000 f848 	bl	802967c <_fstat_r>
 80295ec:	2800      	cmp	r0, #0
 80295ee:	dbec      	blt.n	80295ca <__swhatbuf_r+0x12>
 80295f0:	9901      	ldr	r1, [sp, #4]
 80295f2:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80295f6:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80295fa:	4259      	negs	r1, r3
 80295fc:	4159      	adcs	r1, r3
 80295fe:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8029602:	e7eb      	b.n	80295dc <__swhatbuf_r+0x24>

08029604 <__smakebuf_r>:
 8029604:	898b      	ldrh	r3, [r1, #12]
 8029606:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8029608:	079d      	lsls	r5, r3, #30
 802960a:	4606      	mov	r6, r0
 802960c:	460c      	mov	r4, r1
 802960e:	d507      	bpl.n	8029620 <__smakebuf_r+0x1c>
 8029610:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8029614:	6023      	str	r3, [r4, #0]
 8029616:	6123      	str	r3, [r4, #16]
 8029618:	2301      	movs	r3, #1
 802961a:	6163      	str	r3, [r4, #20]
 802961c:	b002      	add	sp, #8
 802961e:	bd70      	pop	{r4, r5, r6, pc}
 8029620:	ab01      	add	r3, sp, #4
 8029622:	466a      	mov	r2, sp
 8029624:	f7ff ffc8 	bl	80295b8 <__swhatbuf_r>
 8029628:	9900      	ldr	r1, [sp, #0]
 802962a:	4605      	mov	r5, r0
 802962c:	4630      	mov	r0, r6
 802962e:	f7ff f81b 	bl	8028668 <_malloc_r>
 8029632:	b948      	cbnz	r0, 8029648 <__smakebuf_r+0x44>
 8029634:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8029638:	059a      	lsls	r2, r3, #22
 802963a:	d4ef      	bmi.n	802961c <__smakebuf_r+0x18>
 802963c:	f023 0303 	bic.w	r3, r3, #3
 8029640:	f043 0302 	orr.w	r3, r3, #2
 8029644:	81a3      	strh	r3, [r4, #12]
 8029646:	e7e3      	b.n	8029610 <__smakebuf_r+0xc>
 8029648:	89a3      	ldrh	r3, [r4, #12]
 802964a:	6020      	str	r0, [r4, #0]
 802964c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8029650:	81a3      	strh	r3, [r4, #12]
 8029652:	9b00      	ldr	r3, [sp, #0]
 8029654:	6163      	str	r3, [r4, #20]
 8029656:	9b01      	ldr	r3, [sp, #4]
 8029658:	6120      	str	r0, [r4, #16]
 802965a:	b15b      	cbz	r3, 8029674 <__smakebuf_r+0x70>
 802965c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8029660:	4630      	mov	r0, r6
 8029662:	f000 f81d 	bl	80296a0 <_isatty_r>
 8029666:	b128      	cbz	r0, 8029674 <__smakebuf_r+0x70>
 8029668:	89a3      	ldrh	r3, [r4, #12]
 802966a:	f023 0303 	bic.w	r3, r3, #3
 802966e:	f043 0301 	orr.w	r3, r3, #1
 8029672:	81a3      	strh	r3, [r4, #12]
 8029674:	89a3      	ldrh	r3, [r4, #12]
 8029676:	431d      	orrs	r5, r3
 8029678:	81a5      	strh	r5, [r4, #12]
 802967a:	e7cf      	b.n	802961c <__smakebuf_r+0x18>

0802967c <_fstat_r>:
 802967c:	b538      	push	{r3, r4, r5, lr}
 802967e:	4d07      	ldr	r5, [pc, #28]	; (802969c <_fstat_r+0x20>)
 8029680:	2300      	movs	r3, #0
 8029682:	4604      	mov	r4, r0
 8029684:	4608      	mov	r0, r1
 8029686:	4611      	mov	r1, r2
 8029688:	602b      	str	r3, [r5, #0]
 802968a:	f7d8 fdf9 	bl	8002280 <_fstat>
 802968e:	1c43      	adds	r3, r0, #1
 8029690:	d102      	bne.n	8029698 <_fstat_r+0x1c>
 8029692:	682b      	ldr	r3, [r5, #0]
 8029694:	b103      	cbz	r3, 8029698 <_fstat_r+0x1c>
 8029696:	6023      	str	r3, [r4, #0]
 8029698:	bd38      	pop	{r3, r4, r5, pc}
 802969a:	bf00      	nop
 802969c:	2001426c 	.word	0x2001426c

080296a0 <_isatty_r>:
 80296a0:	b538      	push	{r3, r4, r5, lr}
 80296a2:	4d06      	ldr	r5, [pc, #24]	; (80296bc <_isatty_r+0x1c>)
 80296a4:	2300      	movs	r3, #0
 80296a6:	4604      	mov	r4, r0
 80296a8:	4608      	mov	r0, r1
 80296aa:	602b      	str	r3, [r5, #0]
 80296ac:	f7d8 fdee 	bl	800228c <_isatty>
 80296b0:	1c43      	adds	r3, r0, #1
 80296b2:	d102      	bne.n	80296ba <_isatty_r+0x1a>
 80296b4:	682b      	ldr	r3, [r5, #0]
 80296b6:	b103      	cbz	r3, 80296ba <_isatty_r+0x1a>
 80296b8:	6023      	str	r3, [r4, #0]
 80296ba:	bd38      	pop	{r3, r4, r5, pc}
 80296bc:	2001426c 	.word	0x2001426c

080296c0 <_init>:
 80296c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80296c2:	bf00      	nop
 80296c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80296c6:	bc08      	pop	{r3}
 80296c8:	469e      	mov	lr, r3
 80296ca:	4770      	bx	lr

080296cc <_fini>:
 80296cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80296ce:	bf00      	nop
 80296d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80296d2:	bc08      	pop	{r3}
 80296d4:	469e      	mov	lr, r3
 80296d6:	4770      	bx	lr
